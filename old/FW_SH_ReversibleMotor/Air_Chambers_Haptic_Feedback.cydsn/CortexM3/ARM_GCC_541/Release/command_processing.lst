ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E44B     		ldr	r3, .L53
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E24B     		ldr	r3, .L53
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DE48     		ldr	r0, .L53
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DC4B     		ldr	r3, .L53
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e DA4A     		ldr	r2, .L53
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D84B     		ldr	r3, .L53
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 61E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  78 0044 A82B     		cmp	r3, #168
  79 0046 00F25C82 		bhi	.L52
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 79030000 		.word	.L5+1
  85 0054 5B030000 		.word	.L7+1
  86 0058 03050000 		.word	.L52+1
  87 005c 7F030000 		.word	.L8+1
  88 0060 85030000 		.word	.L9+1
  89 0064 A9030000 		.word	.L10+1
  90 0068 43030000 		.word	.L11+1
  91 006c 03050000 		.word	.L52+1
  92 0070 03050000 		.word	.L52+1
  93 0074 DD030000 		.word	.L12+1
  94 0078 C3030000 		.word	.L13+1
  95 007c 03050000 		.word	.L52+1
  96 0080 61030000 		.word	.L14+1
  97 0084 FF030000 		.word	.L15+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 4


  98 0088 03050000 		.word	.L52+1
  99 008c 03050000 		.word	.L52+1
 100 0090 03050000 		.word	.L52+1
 101 0094 03050000 		.word	.L52+1
 102 0098 03050000 		.word	.L52+1
 103 009c 03050000 		.word	.L52+1
 104 00a0 03050000 		.word	.L52+1
 105 00a4 03050000 		.word	.L52+1
 106 00a8 03050000 		.word	.L52+1
 107 00ac 03050000 		.word	.L52+1
 108 00b0 03050000 		.word	.L52+1
 109 00b4 03050000 		.word	.L52+1
 110 00b8 03050000 		.word	.L52+1
 111 00bc 03050000 		.word	.L52+1
 112 00c0 03050000 		.word	.L52+1
 113 00c4 03050000 		.word	.L52+1
 114 00c8 03050000 		.word	.L52+1
 115 00cc 03050000 		.word	.L52+1
 116 00d0 03050000 		.word	.L52+1
 117 00d4 03050000 		.word	.L52+1
 118 00d8 03050000 		.word	.L52+1
 119 00dc 03050000 		.word	.L52+1
 120 00e0 03050000 		.word	.L52+1
 121 00e4 03050000 		.word	.L52+1
 122 00e8 03050000 		.word	.L52+1
 123 00ec 03050000 		.word	.L52+1
 124 00f0 03050000 		.word	.L52+1
 125 00f4 03050000 		.word	.L52+1
 126 00f8 03050000 		.word	.L52+1
 127 00fc 03050000 		.word	.L52+1
 128 0100 03050000 		.word	.L52+1
 129 0104 03050000 		.word	.L52+1
 130 0108 03050000 		.word	.L52+1
 131 010c 03050000 		.word	.L52+1
 132 0110 03050000 		.word	.L52+1
 133 0114 03050000 		.word	.L52+1
 134 0118 03050000 		.word	.L52+1
 135 011c 03050000 		.word	.L52+1
 136 0120 03050000 		.word	.L52+1
 137 0124 03050000 		.word	.L52+1
 138 0128 03050000 		.word	.L52+1
 139 012c 03050000 		.word	.L52+1
 140 0130 03050000 		.word	.L52+1
 141 0134 03050000 		.word	.L52+1
 142 0138 03050000 		.word	.L52+1
 143 013c 03050000 		.word	.L52+1
 144 0140 03050000 		.word	.L52+1
 145 0144 03050000 		.word	.L52+1
 146 0148 03050000 		.word	.L52+1
 147 014c 03050000 		.word	.L52+1
 148 0150 03050000 		.word	.L52+1
 149 0154 03050000 		.word	.L52+1
 150 0158 03050000 		.word	.L52+1
 151 015c 03050000 		.word	.L52+1
 152 0160 03050000 		.word	.L52+1
 153 0164 03050000 		.word	.L52+1
 154 0168 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 5


 155 016c 03050000 		.word	.L52+1
 156 0170 03050000 		.word	.L52+1
 157 0174 03050000 		.word	.L52+1
 158 0178 03050000 		.word	.L52+1
 159 017c 03050000 		.word	.L52+1
 160 0180 03050000 		.word	.L52+1
 161 0184 03050000 		.word	.L52+1
 162 0188 03050000 		.word	.L52+1
 163 018c 03050000 		.word	.L52+1
 164 0190 03050000 		.word	.L52+1
 165 0194 03050000 		.word	.L52+1
 166 0198 03050000 		.word	.L52+1
 167 019c 03050000 		.word	.L52+1
 168 01a0 03050000 		.word	.L52+1
 169 01a4 03050000 		.word	.L52+1
 170 01a8 03050000 		.word	.L52+1
 171 01ac 03050000 		.word	.L52+1
 172 01b0 03050000 		.word	.L52+1
 173 01b4 03050000 		.word	.L52+1
 174 01b8 03050000 		.word	.L52+1
 175 01bc 03050000 		.word	.L52+1
 176 01c0 03050000 		.word	.L52+1
 177 01c4 03050000 		.word	.L52+1
 178 01c8 03050000 		.word	.L52+1
 179 01cc 03050000 		.word	.L52+1
 180 01d0 03050000 		.word	.L52+1
 181 01d4 03050000 		.word	.L52+1
 182 01d8 03050000 		.word	.L52+1
 183 01dc 03050000 		.word	.L52+1
 184 01e0 03050000 		.word	.L52+1
 185 01e4 03050000 		.word	.L52+1
 186 01e8 03050000 		.word	.L52+1
 187 01ec 03050000 		.word	.L52+1
 188 01f0 03050000 		.word	.L52+1
 189 01f4 03050000 		.word	.L52+1
 190 01f8 03050000 		.word	.L52+1
 191 01fc 03050000 		.word	.L52+1
 192 0200 03050000 		.word	.L52+1
 193 0204 03050000 		.word	.L52+1
 194 0208 03050000 		.word	.L52+1
 195 020c 03050000 		.word	.L52+1
 196 0210 03050000 		.word	.L52+1
 197 0214 03050000 		.word	.L52+1
 198 0218 03050000 		.word	.L52+1
 199 021c 03050000 		.word	.L52+1
 200 0220 03050000 		.word	.L52+1
 201 0224 03050000 		.word	.L52+1
 202 0228 03050000 		.word	.L52+1
 203 022c 03050000 		.word	.L52+1
 204 0230 03050000 		.word	.L52+1
 205 0234 03050000 		.word	.L52+1
 206 0238 03050000 		.word	.L52+1
 207 023c 03050000 		.word	.L52+1
 208 0240 03050000 		.word	.L52+1
 209 0244 03050000 		.word	.L52+1
 210 0248 03050000 		.word	.L52+1
 211 024c 03050000 		.word	.L52+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 6


 212 0250 F5020000 		.word	.L16+1
 213 0254 31030000 		.word	.L17+1
 214 0258 FB020000 		.word	.L18+1
 215 025c 3D030000 		.word	.L19+1
 216 0260 01030000 		.word	.L20+1
 217 0264 0D030000 		.word	.L21+1
 218 0268 07030000 		.word	.L22+1
 219 026c 03050000 		.word	.L52+1
 220 0270 2B030000 		.word	.L23+1
 221 0274 19030000 		.word	.L24+1
 222 0278 03050000 		.word	.L52+1
 223 027c 1F030000 		.word	.L25+1
 224 0280 13030000 		.word	.L26+1
 225 0284 03050000 		.word	.L52+1
 226 0288 03050000 		.word	.L52+1
 227 028c 03050000 		.word	.L52+1
 228 0290 37030000 		.word	.L27+1
 229 0294 03050000 		.word	.L52+1
 230 0298 25030000 		.word	.L28+1
 231 029c 03050000 		.word	.L52+1
 232 02a0 03050000 		.word	.L52+1
 233 02a4 03050000 		.word	.L52+1
 234 02a8 03050000 		.word	.L52+1
 235 02ac 03050000 		.word	.L52+1
 236 02b0 03050000 		.word	.L52+1
 237 02b4 03050000 		.word	.L52+1
 238 02b8 03050000 		.word	.L52+1
 239 02bc 03050000 		.word	.L52+1
 240 02c0 03050000 		.word	.L52+1
 241 02c4 03050000 		.word	.L52+1
 242 02c8 03050000 		.word	.L52+1
 243 02cc 03050000 		.word	.L52+1
 244 02d0 03050000 		.word	.L52+1
 245 02d4 9D040000 		.word	.L29+1
 246 02d8 A3040000 		.word	.L30+1
 247 02dc BB040000 		.word	.L31+1
 248 02e0 C1040000 		.word	.L32+1
 249 02e4 C7040000 		.word	.L33+1
 250 02e8 CD040000 		.word	.L34+1
 251 02ec D3040000 		.word	.L35+1
 252 02f0 EB040000 		.word	.L36+1
 253              		.p2align 1
 254              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 255              		.loc 1 78 0
 256 02f4 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 257              		.loc 1 79 0
 258 02f8 04E1     		b	.L1
 259              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 7


  84:..\src/command_processing.c ****             cmd_set_inputs();
 260              		.loc 1 84 0
 261 02fa FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 262              		.loc 1 85 0
 263 02fe 01E1     		b	.L1
 264              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 265              		.loc 1 90 0
 266 0300 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 267              		.loc 1 91 0
 268 0304 FEE0     		b	.L1
 269              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 270              		.loc 1 96 0
 271 0306 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 272              		.loc 1 97 0
 273 030a FBE0     		b	.L1
 274              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 275              		.loc 1 102 0
 276 030c FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 277              		.loc 1 103 0
 278 0310 F8E0     		b	.L1
 279              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 280              		.loc 1 108 0
 281 0312 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 282              		.loc 1 109 0
 283 0316 F5E0     		b	.L1
 284              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 285              		.loc 1 114 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 8


 286 0318 FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
 287              		.loc 1 115 0
 288 031c F2E0     		b	.L1
 289              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 290              		.loc 1 120 0
 291 031e FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 292              		.loc 1 121 0
 293 0322 EFE0     		b	.L1
 294              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 295              		.loc 1 126 0
 296 0324 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 297              		.loc 1 127 0
 298 0328 ECE0     		b	.L1
 299              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 300              		.loc 1 132 0
 301 032a FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 302              		.loc 1 133 0
 303 032e E9E0     		b	.L1
 304              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 305              		.loc 1 138 0
 306 0330 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 307              		.loc 1 139 0
 308 0334 E6E0     		b	.L1
 309              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 310              		.loc 1 144 0
 311 0336 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 9


 312              		.loc 1 145 0
 313 033a E3E0     		b	.L1
 314              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 315              		.loc 1 150 0
 316 033c FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 317              		.loc 1 151 0
 318 0340 E0E0     		b	.L1
 319              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 320              		.loc 1 156 0
 321 0342 164B     		ldr	r3, .L53+4
 322 0344 1B88     		ldrh	r3, [r3]
 323 0346 BB61     		str	r3, [r7, #24]
 324              	.LBB12:
 325              	.LBB13:
 326              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 10


  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 11


  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 12


 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 13


 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 14


 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 15


 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 16


 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 17


 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 18


 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 19


 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 20


 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 21


 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 22


 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 23


 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 327              		.loc 2 792 0
 328 0348 BB69     		ldr	r3, [r7, #24]
 329              		.syntax unified
 330              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 331 034a 5BBA     		rev16 r3, r3
 332              	@ 0 "" 2
 333              		.thumb
 334              		.syntax unified
 335 034c 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 336              		.loc 2 793 0
 337 034e 7B69     		ldr	r3, [r7, #20]
 338              	.LBE13:
 339              	.LBE12:
 340              		.loc 1 156 0
 341 0350 9BB2     		uxth	r3, r3
 342 0352 1846     		mov	r0, r3
 343 0354 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 344              		.loc 1 157 0
 345 0358 D4E0     		b	.L1
 346              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 347              		.loc 1 162 0
 348 035a FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 349              		.loc 1 163 0
 350 035e D1E0     		b	.L1
 351              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 24


 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 352              		.loc 1 168 0
 353 0360 0E4B     		ldr	r3, .L53+4
 354 0362 1B88     		ldrh	r3, [r3]
 355 0364 BB62     		str	r3, [r7, #40]
 356              	.LBB14:
 357              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 358              		.loc 2 792 0
 359 0366 BB6A     		ldr	r3, [r7, #40]
 360              		.syntax unified
 361              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 362 0368 5BBA     		rev16 r3, r3
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366 036a 3B61     		str	r3, [r7, #16]
 367              		.loc 2 793 0
 368 036c 3B69     		ldr	r3, [r7, #16]
 369              	.LBE15:
 370              	.LBE14:
 371              		.loc 1 168 0
 372 036e 9BB2     		uxth	r3, r3
 373 0370 1846     		mov	r0, r3
 374 0372 FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 375              		.loc 1 169 0
 376 0376 C5E0     		b	.L1
 377              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 378              		.loc 1 174 0
 379 0378 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 380              		.loc 1 175 0
 381 037c C2E0     		b	.L1
 382              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 383              		.loc 1 180 0
 384 037e FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 385              		.loc 1 181 0
 386 0382 BFE0     		b	.L1
 387              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 388              		.loc 1 186 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 25


 389 0384 3220     		movs	r0, #50
 390 0386 FFF7FEFF 		bl	memStore
 391 038a 0346     		mov	r3, r0
 392 038c 002B     		cmp	r3, #0
 393 038e 07D0     		beq	.L39
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 394              		.loc 1 187 0
 395 0390 0120     		movs	r0, #1
 396 0392 FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 397              		.loc 1 190 0
 398 0396 B5E0     		b	.L1
 399              	.L54:
 400              		.align	2
 401              	.L53:
 402 0398 00000000 		.word	g_rx
 403 039c 01000000 		.word	g_rx+1
 404              	.L39:
 189:..\src/command_processing.c ****             break;
 405              		.loc 1 189 0
 406 03a0 0020     		movs	r0, #0
 407 03a2 FFF7FEFF 		bl	sendAcknowledgment
 408              		.loc 1 190 0
 409 03a6 ADE0     		b	.L1
 410              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 411              		.loc 1 195 0
 412 03a8 FFF7FEFF 		bl	memRestore
 413 03ac 0346     		mov	r3, r0
 414 03ae 002B     		cmp	r3, #0
 415 03b0 03D0     		beq	.L41
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 416              		.loc 1 196 0
 417 03b2 0120     		movs	r0, #1
 418 03b4 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 419              		.loc 1 199 0
 420 03b8 A4E0     		b	.L1
 421              	.L41:
 198:..\src/command_processing.c ****             break;
 422              		.loc 1 198 0
 423 03ba 0020     		movs	r0, #0
 424 03bc FFF7FEFF 		bl	sendAcknowledgment
 425              		.loc 1 199 0
 426 03c0 A0E0     		b	.L1
 427              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 26


 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 204:..\src/command_processing.c ****             if(memInit())
 428              		.loc 1 204 0
 429 03c2 FFF7FEFF 		bl	memInit
 430 03c6 0346     		mov	r3, r0
 431 03c8 002B     		cmp	r3, #0
 432 03ca 03D0     		beq	.L43
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 433              		.loc 1 205 0
 434 03cc 0120     		movs	r0, #1
 435 03ce FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 436              		.loc 1 208 0
 437 03d2 97E0     		b	.L1
 438              	.L43:
 207:..\src/command_processing.c ****             break;
 439              		.loc 1 207 0
 440 03d4 0020     		movs	r0, #0
 441 03d6 FFF7FEFF 		bl	sendAcknowledgment
 442              		.loc 1 208 0
 443 03da 93E0     		b	.L1
 444              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 445              		.loc 1 214 0
 446 03dc 0120     		movs	r0, #1
 447 03de FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 448              		.loc 1 215 0
 449 03e2 4FF47A70 		mov	r0, #1000
 450 03e6 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 451              		.loc 1 216 0
 452 03ea 0020     		movs	r0, #0
 453 03ec FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 454              		.loc 1 217 0
 455 03f0 4FF47A70 		mov	r0, #1000
 456 03f4 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 457              		.loc 1 218 0
 458 03f8 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 459              		.loc 1 219 0
 460 03fc 82E0     		b	.L1
 461              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 27


 462              		.loc 1 224 0
 463 03fe 434B     		ldr	r3, .L55
 464 0400 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 465 0402 1B02     		lsls	r3, r3, #8
 466 0404 1AB2     		sxth	r2, r3
 467 0406 414B     		ldr	r3, .L55
 468 0408 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 469 040a 1BB2     		sxth	r3, r3
 470 040c 1343     		orrs	r3, r3, r2
 471 040e 1AB2     		sxth	r2, r3
 472 0410 3F4B     		ldr	r3, .L55+4
 473 0412 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 474              		.loc 1 225 0
 475 0414 3D4B     		ldr	r3, .L55
 476 0416 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 477 0418 1B02     		lsls	r3, r3, #8
 478 041a 1AB2     		sxth	r2, r3
 479 041c 3B4B     		ldr	r3, .L55
 480 041e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 481 0420 1BB2     		sxth	r3, r3
 482 0422 1343     		orrs	r3, r3, r2
 483 0424 1AB2     		sxth	r2, r3
 484 0426 3A4B     		ldr	r3, .L55+4
 485 0428 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 486              		.loc 1 227 0
 487 042a 394B     		ldr	r3, .L55+4
 488 042c B3F90230 		ldrsh	r3, [r3, #2]
 489 0430 B3F1FF3F 		cmp	r3, #-1
 490 0434 0FD1     		bne	.L45
 491              		.loc 1 227 0 is_stmt 0 discriminator 1
 492 0436 364B     		ldr	r3, .L55+4
 493 0438 B3F90430 		ldrsh	r3, [r3, #4]
 494 043c B3F1FF3F 		cmp	r3, #-1
 495 0440 09D1     		bne	.L45
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 496              		.loc 1 228 0 is_stmt 1
 497 0442 334B     		ldr	r3, .L55+4
 498 0444 0022     		movs	r2, #0
 499 0446 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 500              		.loc 1 229 0
 501 0448 314B     		ldr	r3, .L55+4
 502 044a 0022     		movs	r2, #0
 503 044c 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 504              		.loc 1 230 0
 505 044e 304B     		ldr	r3, .L55+4
 506 0450 0022     		movs	r2, #0
 507 0452 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 508              		.loc 1 231 0
 509 0454 56E0     		b	.L1
 510              	.L45:
 232:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 28


 233:..\src/command_processing.c ****             // Speed & repetitions saturations
 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 511              		.loc 1 234 0
 512 0456 2E4B     		ldr	r3, .L55+4
 513 0458 B3F90230 		ldrsh	r3, [r3, #2]
 514 045c 002B     		cmp	r3, #0
 515 045e 03DA     		bge	.L46
 235:..\src/command_processing.c ****                 calib.speed = 0;
 516              		.loc 1 235 0
 517 0460 2B4B     		ldr	r3, .L55+4
 518 0462 0022     		movs	r2, #0
 519 0464 5A80     		strh	r2, [r3, #2]	@ movhi
 520 0466 07E0     		b	.L47
 521              	.L46:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 522              		.loc 1 236 0
 523 0468 294B     		ldr	r3, .L55+4
 524 046a B3F90230 		ldrsh	r3, [r3, #2]
 525 046e C82B     		cmp	r3, #200
 526 0470 02DD     		ble	.L47
 237:..\src/command_processing.c ****                 calib.speed = 200;
 527              		.loc 1 237 0
 528 0472 274B     		ldr	r3, .L55+4
 529 0474 C822     		movs	r2, #200
 530 0476 5A80     		strh	r2, [r3, #2]	@ movhi
 531              	.L47:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 532              		.loc 1 239 0
 533 0478 254B     		ldr	r3, .L55+4
 534 047a B3F90430 		ldrsh	r3, [r3, #4]
 535 047e 002B     		cmp	r3, #0
 536 0480 02DA     		bge	.L48
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 537              		.loc 1 240 0
 538 0482 234B     		ldr	r3, .L55+4
 539 0484 0022     		movs	r2, #0
 540 0486 9A80     		strh	r2, [r3, #4]	@ movhi
 541              	.L48:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 542              		.loc 1 245 0
 543 0488 224B     		ldr	r3, .L55+8
 544 048a 0022     		movs	r2, #0
 545 048c 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 546              		.loc 1 246 0
 547 048e 204B     		ldr	r3, .L55+4
 548 0490 0122     		movs	r2, #1
 549 0492 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 550              		.loc 1 248 0
 551 0494 0120     		movs	r0, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 29


 552 0496 FFF7FEFF 		bl	sendAcknowledgment
 249:..\src/command_processing.c ****             break;
 553              		.loc 1 249 0
 554 049a 33E0     		b	.L1
 555              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 556              		.loc 1 254 0
 557 049c FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 558              		.loc 1 255 0
 559 04a0 30E0     		b	.L1
 560              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 561              		.loc 1 260 0
 562 04a2 1D4B     		ldr	r3, .L55+12
 563 04a4 1B88     		ldrh	r3, [r3]
 564 04a6 7B62     		str	r3, [r7, #36]
 565              	.LBB16:
 566              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 567              		.loc 2 792 0
 568 04a8 7B6A     		ldr	r3, [r7, #36]
 569              		.syntax unified
 570              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 571 04aa 5BBA     		rev16 r3, r3
 572              	@ 0 "" 2
 573              		.thumb
 574              		.syntax unified
 575 04ac FB60     		str	r3, [r7, #12]
 576              		.loc 2 793 0
 577 04ae FB68     		ldr	r3, [r7, #12]
 578              	.LBE17:
 579              	.LBE16:
 580              		.loc 1 260 0
 581 04b0 9BB2     		uxth	r3, r3
 582 04b2 1846     		mov	r0, r3
 583 04b4 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 584              		.loc 1 261 0
 585 04b8 24E0     		b	.L1
 586              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 587              		.loc 1 266 0
 588 04ba FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 30


 589              		.loc 1 267 0
 590 04be 21E0     		b	.L1
 591              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 592              		.loc 1 272 0
 593 04c0 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 594              		.loc 1 273 0
 595 04c4 1EE0     		b	.L1
 596              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 597              		.loc 1 278 0
 598 04c6 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 599              		.loc 1 279 0
 600 04ca 1BE0     		b	.L1
 601              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 602              		.loc 1 284 0
 603 04cc FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 604              		.loc 1 285 0
 605 04d0 18E0     		b	.L1
 606              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 607              		.loc 1 290 0
 608 04d2 114B     		ldr	r3, .L55+12
 609 04d4 1B88     		ldrh	r3, [r3]
 610 04d6 3B62     		str	r3, [r7, #32]
 611              	.LBB18:
 612              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 613              		.loc 2 792 0
 614 04d8 3B6A     		ldr	r3, [r7, #32]
 615              		.syntax unified
 616              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 617 04da 5BBA     		rev16 r3, r3
 618              	@ 0 "" 2
 619              		.thumb
 620              		.syntax unified
 621 04dc BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 31


 622              		.loc 2 793 0
 623 04de BB68     		ldr	r3, [r7, #8]
 624              	.LBE19:
 625              	.LBE18:
 626              		.loc 1 290 0
 627 04e0 9BB2     		uxth	r3, r3
 628 04e2 1846     		mov	r0, r3
 629 04e4 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;   
 630              		.loc 1 291 0
 631 04e8 0CE0     		b	.L1
 632              	.L36:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 633              		.loc 1 296 0
 634 04ea 0B4B     		ldr	r3, .L55+12
 635 04ec 1B88     		ldrh	r3, [r3]
 636 04ee FB61     		str	r3, [r7, #28]
 637              	.LBB20:
 638              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 639              		.loc 2 792 0
 640 04f0 FB69     		ldr	r3, [r7, #28]
 641              		.syntax unified
 642              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 643 04f2 5BBA     		rev16 r3, r3
 644              	@ 0 "" 2
 645              		.thumb
 646              		.syntax unified
 647 04f4 7B60     		str	r3, [r7, #4]
 648              		.loc 2 793 0
 649 04f6 7B68     		ldr	r3, [r7, #4]
 650              	.LBE21:
 651              	.LBE20:
 652              		.loc 1 296 0
 653 04f8 9BB2     		uxth	r3, r3
 654 04fa 1846     		mov	r0, r3
 655 04fc FFF7FEFF 		bl	cmd_remove_SD_file
 297:..\src/command_processing.c ****             break;               
 656              		.loc 1 297 0
 657 0500 00E0     		b	.L1
 658              	.L52:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 300:..\src/command_processing.c ****         default:
 301:..\src/command_processing.c ****             break;
 659              		.loc 1 301 0
 660 0502 00BF     		nop
 661              	.L1:
 302:..\src/command_processing.c **** 
 303:..\src/command_processing.c ****     }
 304:..\src/command_processing.c **** }  
 662              		.loc 1 304 0
 663 0504 3037     		adds	r7, r7, #48
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 32


 664              		.cfi_def_cfa_offset 8
 665 0506 BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 0508 80BD     		pop	{r7, pc}
 669              	.L56:
 670 050a 00BF     		.align	2
 671              	.L55:
 672 050c 00000000 		.word	g_rx
 673 0510 00000000 		.word	calib
 674 0514 00000000 		.word	g_refNew
 675 0518 01000000 		.word	g_rx+1
 676              		.cfi_endproc
 677              	.LFE64:
 678              		.size	commProcess, .-commProcess
 679              		.section	.text.infoSend,"ax",%progbits
 680              		.align	2
 681              		.global	infoSend
 682              		.thumb
 683              		.thumb_func
 684              		.type	infoSend, %function
 685              	infoSend:
 686              	.LFB65:
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** //==============================================================================
 307:..\src/command_processing.c **** //                                                                     INFO SEND
 308:..\src/command_processing.c **** //==============================================================================
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c **** void infoSend(void){
 687              		.loc 1 310 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 1504
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 ADF5BC6D 		sub	sp, sp, #1504
 696              		.cfi_def_cfa_offset 1512
 697 0006 00AF     		add	r7, sp, #0
 698              		.cfi_def_cfa_register 7
 311:..\src/command_processing.c ****     char packet_string[1500];
 312:..\src/command_processing.c ****     
 313:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 699              		.loc 1 313 0
 700 0008 3B1D     		adds	r3, r7, #4
 701 000a 1846     		mov	r0, r3
 702 000c FFF7FEFF 		bl	prepare_generic_info
 314:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 703              		.loc 1 314 0
 704 0010 3B1D     		adds	r3, r7, #4
 705 0012 1846     		mov	r0, r3
 706 0014 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c **** }
 707              		.loc 1 315 0
 708 0018 00BF     		nop
 709 001a 07F5BC67 		add	r7, r7, #1504
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 33


 710              		.cfi_def_cfa_offset 8
 711 001e BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0020 80BD     		pop	{r7, pc}
 715              		.cfi_endproc
 716              	.LFE65:
 717              		.size	infoSend, .-infoSend
 718 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 719              		.align	2
 720              		.global	infoGet
 721              		.thumb
 722              		.thumb_func
 723              		.type	infoGet, %function
 724              	infoGet:
 725              	.LFB66:
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** 
 318:..\src/command_processing.c **** //==============================================================================
 319:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 320:..\src/command_processing.c **** //==============================================================================
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 726              		.loc 1 322 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 24008
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 ADF5BB4D 		sub	sp, sp, #23936
 735              		.cfi_def_cfa_offset 23944
 736 0006 92B0     		sub	sp, sp, #72
 737              		.cfi_def_cfa_offset 24016
 738 0008 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 000a 0246     		mov	r2, r0
 741 000c 07F14803 		add	r3, r7, #72
 742 0010 423B     		subs	r3, r3, #66
 743 0012 1A80     		strh	r2, [r3]	@ movhi
 323:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 744              		.loc 1 323 0
 745 0014 07F59C43 		add	r3, r7, #19968
 746 0018 03F12803 		add	r3, r3, #40
 747 001c 0022     		movs	r2, #0
 748 001e 1A60     		str	r2, [r3]
 749 0020 0433     		adds	r3, r3, #4
 750 0022 40F69C72 		movw	r2, #3996
 751 0026 0021     		movs	r1, #0
 752 0028 1846     		mov	r0, r3
 753 002a FFF7FEFF 		bl	memset
 324:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 754              		.loc 1 324 0
 755 002e 07F14803 		add	r3, r7, #72
 756 0032 403B     		subs	r3, r3, #64
 757 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 34


 758 0036 1A60     		str	r2, [r3]
 759 0038 0433     		adds	r3, r3, #4
 760 003a 44F61C62 		movw	r2, #19996
 761 003e 0021     		movs	r1, #0
 762 0040 1846     		mov	r0, r3
 763 0042 FFF7FEFF 		bl	memset
 325:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 326:..\src/command_processing.c **** 
 327:..\src/command_processing.c ****     switch (info_type) {
 764              		.loc 1 327 0
 765 0046 07F14803 		add	r3, r7, #72
 766 004a 423B     		subs	r3, r3, #66
 767 004c 1B88     		ldrh	r3, [r3]
 768 004e 062B     		cmp	r3, #6
 769 0050 7DD8     		bhi	.L69
 770 0052 01A2     		adr	r2, .L61
 771 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 772              		.p2align 2
 773              	.L61:
 774 0058 75000000 		.word	.L60+1
 775 005c 97000000 		.word	.L62+1
 776 0060 B9000000 		.word	.L63+1
 777 0064 E1000000 		.word	.L64+1
 778 0068 03010000 		.word	.L65+1
 779 006c 21010000 		.word	.L66+1
 780 0070 27010000 		.word	.L67+1
 781              		.p2align 1
 782              	.L60:
 328:..\src/command_processing.c ****         case INFO_ALL:
 329:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 783              		.loc 1 329 0
 784 0074 07F59C43 		add	r3, r7, #19968
 785 0078 03F12803 		add	r3, r3, #40
 786 007c 1846     		mov	r0, r3
 787 007e FFF7FEFF 		bl	prepare_generic_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 788              		.loc 1 330 0
 789 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 790              		.loc 1 331 0
 791 0086 07F59C43 		add	r3, r7, #19968
 792 008a 03F12803 		add	r3, r3, #40
 793 008e 1846     		mov	r0, r3
 794 0090 FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 795              		.loc 1 332 0
 796 0094 5CE0     		b	.L68
 797              	.L62:
 333:..\src/command_processing.c ****         case CYCLES_INFO:
 334:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 798              		.loc 1 334 0
 799 0096 07F59C43 		add	r3, r7, #19968
 800 009a 03F12803 		add	r3, r3, #40
 801 009e 1846     		mov	r0, r3
 802 00a0 FFF7FEFF 		bl	prepare_counter_info
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 803              		.loc 1 335 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 35


 804 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 805              		.loc 1 336 0
 806 00a8 07F59C43 		add	r3, r7, #19968
 807 00ac 03F12803 		add	r3, r3, #40
 808 00b0 1846     		mov	r0, r3
 809 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 810              		.loc 1 337 0
 811 00b6 4BE0     		b	.L68
 812              	.L63:
 338:..\src/command_processing.c ****         case GET_SD_PARAM:
 339:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 813              		.loc 1 339 0
 814 00b8 07F59C43 		add	r3, r7, #19968
 815 00bc 03F12803 		add	r3, r3, #40
 816 00c0 4FF47A62 		mov	r2, #4000
 817 00c4 1946     		mov	r1, r3
 818 00c6 2548     		ldr	r0, .L70
 819 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 820              		.loc 1 340 0
 821 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 822              		.loc 1 341 0
 823 00d0 07F59C43 		add	r3, r7, #19968
 824 00d4 03F12803 		add	r3, r3, #40
 825 00d8 1846     		mov	r0, r3
 826 00da FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 827              		.loc 1 342 0
 828 00de 37E0     		b	.L68
 829              	.L64:
 343:..\src/command_processing.c ****         case GET_SD_DATA:
 344:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 830              		.loc 1 344 0
 831 00e0 07F14803 		add	r3, r7, #72
 832 00e4 403B     		subs	r3, r3, #64
 833 00e6 44F62061 		movw	r1, #20000
 834 00ea 1846     		mov	r0, r3
 835 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 836              		.loc 1 345 0
 837 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 838              		.loc 1 346 0
 839 00f4 07F14803 		add	r3, r7, #72
 840 00f8 403B     		subs	r3, r3, #64
 841 00fa 1846     		mov	r0, r3
 842 00fc FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 843              		.loc 1 347 0
 844 0100 26E0     		b	.L68
 845              	.L65:
 348:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 349:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 846              		.loc 1 349 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 36


 847 0102 07F14803 		add	r3, r7, #72
 848 0106 403B     		subs	r3, r3, #64
 849 0108 1846     		mov	r0, r3
 850 010a FFF7FEFF 		bl	Get_SD_FS
 350:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 851              		.loc 1 350 0
 852 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 351:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 853              		.loc 1 351 0
 854 0112 07F14803 		add	r3, r7, #72
 855 0116 403B     		subs	r3, r3, #64
 856 0118 1846     		mov	r0, r3
 857 011a FFF7FEFF 		bl	UART_RS485_PutString
 352:..\src/command_processing.c ****             break;
 858              		.loc 1 352 0
 859 011e 17E0     		b	.L68
 860              	.L66:
 353:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 354:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 355:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 861              		.loc 1 355 0
 862 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 356:..\src/command_processing.c ****             break;
 863              		.loc 1 356 0
 864 0124 14E0     		b	.L68
 865              	.L67:
 357:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 358:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 866              		.loc 1 358 0
 867 0126 07F59C43 		add	r3, r7, #19968
 868 012a 03F12803 		add	r3, r3, #40
 869 012e 4FF47A62 		mov	r2, #4000
 870 0132 1946     		mov	r1, r3
 871 0134 0A48     		ldr	r0, .L70+4
 872 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 359:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 873              		.loc 1 359 0
 874 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 360:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 875              		.loc 1 360 0
 876 013e 07F59C43 		add	r3, r7, #19968
 877 0142 03F12803 		add	r3, r3, #40
 878 0146 1846     		mov	r0, r3
 879 0148 FFF7FEFF 		bl	UART_RS485_PutString
 361:..\src/command_processing.c ****             break;            
 880              		.loc 1 361 0
 881 014c 00E0     		b	.L68
 882              	.L69:
 362:..\src/command_processing.c ****         default:
 363:..\src/command_processing.c ****             break;
 883              		.loc 1 363 0
 884 014e 00BF     		nop
 885              	.L68:
 364:..\src/command_processing.c ****     }
 365:..\src/command_processing.c **** }
 886              		.loc 1 365 0 discriminator 1
 887 0150 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 37


 888 0152 07F5BB47 		add	r7, r7, #23936
 889 0156 4837     		adds	r7, r7, #72
 890              		.cfi_def_cfa_offset 8
 891 0158 BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 015a 80BD     		pop	{r7, pc}
 895              	.L71:
 896              		.align	2
 897              	.L70:
 898 015c 00000000 		.word	sdParam
 899 0160 00000000 		.word	sdR01File
 900              		.cfi_endproc
 901              	.LFE66:
 902              		.size	infoGet, .-infoGet
 903              		.global	__aeabi_i2f
 904              		.global	__aeabi_fdiv
 905              		.section	.rodata
 906              		.align	2
 907              	.LC88:
 908 0000 20557362 		.ascii	" Usb\000"
 908      00
 909 0005 000000   		.align	2
 910              	.LC89:
 911 0008 2048616E 		.ascii	" Handle\000"
 911      646C6500 
 912              		.align	2
 913              	.LC90:
 914 0010 20454D47 		.ascii	" EMG proportional\000"
 914      2070726F 
 914      706F7274 
 914      696F6E61 
 914      6C00
 915 0022 0000     		.align	2
 916              	.LC91:
 917 0024 20454D47 		.ascii	" EMG integral\000"
 917      20696E74 
 917      65677261 
 917      6C00
 918 0032 0000     		.align	2
 919              	.LC92:
 920 0034 20454D47 		.ascii	" EMG FCFS\000"
 920      20464346 
 920      5300
 921 003e 0000     		.align	2
 922              	.LC93:
 923 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 923      20464346 
 923      53204164 
 923      76616E63 
 923      656400
 924 0053 00       		.align	2
 925              	.LC94:
 926 0054 204A6F79 		.ascii	" Joystick\000"
 926      73746963 
 926      6B00
 927 005e 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 38


 928              	.LC95:
 929 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 929      2070726F 
 929      706F7274 
 929      696F6E61 
 929      6C204E6F 
 930 0082 0000     		.align	2
 931              	.LC96:
 932 0084 20506F73 		.ascii	" Position\000"
 932      6974696F 
 932      6E00
 933 008e 0000     		.align	2
 934              	.LC97:
 935 0090 2050574D 		.ascii	" PWM\000"
 935      00
 936 0095 000000   		.align	2
 937              	.LC98:
 938 0098 20437572 		.ascii	" Current\000"
 938      72656E74 
 938      00
 939 00a1 000000   		.align	2
 940              	.LC99:
 941 00a4 20506F73 		.ascii	" Position and Current\000"
 941      6974696F 
 941      6E20616E 
 941      64204375 
 941      7272656E 
 942 00ba 0000     		.align	2
 943              	.LC100:
 944 00bc 20594553 		.ascii	" YES\000\000"
 944      0000
 945 00c2 0000     		.align	2
 946              	.LC101:
 947 00c4 204E4F00 		.ascii	" NO\000\000"
 947      00
 948 00c9 000000   		.align	2
 949              	.LC102:
 950 00cc 20526967 		.ascii	" Right\000\000"
 950      68740000 
 951              		.align	2
 952              	.LC103:
 953 00d4 204C6566 		.ascii	" Left\000\000"
 953      740000
 954 00db 00       		.align	2
 955              	.LC104:
 956 00dc 204F4646 		.ascii	" OFF\000\000"
 956      0000
 957 00e2 0000     		.align	2
 958              	.LC105:
 959 00e4 204F4E00 		.ascii	" ON\000\000"
 959      00
 960 00e9 000000   		.align	2
 961              	.LC106:
 962 00ec 204E6F6E 		.ascii	" None\000\000"
 962      650000
 963 00f3 00       		.align	2
 964              	.LC107:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 39


 965 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 965      52544320 
 965      626F6172 
 965      640000
 966 0103 00       		.align	2
 967              	.LC108:
 968 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 968      6920626F 
 968      61726420 
 968      5B4E2F41 
 968      5D0000
 969 0117 00       		.align	2
 970              	.LC109:
 971 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 971      6572205B 
 971      4E2F415D 
 971      0000
 972 0126 0000     		.align	2
 973              	.LC110:
 974 0128 204C6F77 		.ascii	" Low\000\000"
 974      0000
 975 012e 0000     		.align	2
 976              	.LC111:
 977 0130 20486967 		.ascii	" High\000\000"
 977      680000
 978 0137 00       		.align	2
 979              	.LC112:
 980 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 980      45524943 
 980      20555345 
 980      520000
 981 0147 00       		.align	2
 982              	.LC113:
 983 0148 204D4152 		.ascii	" MARIA\000\000"
 983      49410000 
 984              		.align	2
 985              	.LC114:
 986 0150 20523031 		.ascii	" R01\000\000"
 986      0000
 987 0156 0000     		.align	2
 988              	.LC115:
 989 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 989      33383837 
 989      20285374 
 989      616E6461 
 989      72642900 
 990 016d 000000   		.align	2
 991              	.LC116:
 992 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 992      35303139 
 992      20284869 
 992      67682070 
 992      6F776572 
 993 0187 00       		.align	2
 994              	.LC117:
 995 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 995      20284272 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 40


 995      7573686C 
 995      65737329 
 995      0000
 996 019a 0000     		.align	2
 997              	.LC118:
 998 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 998      5448414E 
 998      44205052 
 998      4F0000
 999 01ab 00       		.align	2
 1000              	.LC119:
 1001 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1001      45524943 
 1001      2032204D 
 1001      4F544F52 
 1001      530000
 1002 01bf 00       		.align	2
 1003              	.LC120:
 1004 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1004      20434841 
 1004      4D424552 
 1004      530000
 1005 01cf 00       		.align	2
 1006              	.LC121:
 1007 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1007      4F424F43 
 1007      4B205752 
 1007      49535400 
 1007      00
 1008 01e1 000000   		.align	2
 1009              	.LC122:
 1010 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1010      5448414E 
 1010      44203220 
 1010      4D4F544F 
 1010      52530000 
 1011              		.align	2
 1012              	.LC123:
 1013 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1013      743A7379 
 1013      6E322C20 
 1013      536C6F77 
 1013      3A73796E 
 1014 020f 00       		.align	2
 1015              	.LC124:
 1016 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1016      743A7772 
 1016      6973742C 
 1016      536C6F77 
 1016      3A68616E 
 1017 0227 00       		.align	2
 1018              	.LC125:
 1019 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1019      773A7379 
 1019      6E322C20 
 1019      46617374 
 1019      3A73796E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 41


 1020 023f 00       		.align	2
 1021              	.LC126:
 1022 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1022      773A7772 
 1022      6973742C 
 1022      46617374 
 1022      3A68616E 
 1023 0257 00       		.align	2
 1024              	.LC127:
 1025 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1025      73653A43 
 1025      572C204F 
 1025      70656E3A 
 1025      43435700 
 1026 026d 000000   		.align	2
 1027              	.LC128:
 1028 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 1028      73653A43 
 1028      43572C20 
 1028      4F70656E 
 1028      3A435700 
 1029              		.section	.text.get_param_list,"ax",%progbits
 1030              		.align	2
 1031              		.global	get_param_list
 1032              		.thumb
 1033              		.thumb_func
 1034              		.type	get_param_list, %function
 1035              	get_param_list:
 1036              	.LFB67:
 366:..\src/command_processing.c **** 
 367:..\src/command_processing.c **** 
 368:..\src/command_processing.c **** //==============================================================================
 369:..\src/command_processing.c **** //                                                                GET PARAM LIST
 370:..\src/command_processing.c **** //==============================================================================
 371:..\src/command_processing.c **** 
 372:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 373:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 374:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 375:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1037              		.loc 1 375 0
 1038              		.cfi_startproc
 1039              		@ args = 16, pretend = 0, frame = 6104
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1042              		.cfi_def_cfa_offset 20
 1043              		.cfi_offset 4, -20
 1044              		.cfi_offset 5, -16
 1045              		.cfi_offset 6, -12
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 ADF5BE5D 		sub	sp, sp, #6080
 1049              		.cfi_def_cfa_offset 6100
 1050 0006 87B0     		sub	sp, sp, #28
 1051              		.cfi_def_cfa_offset 6128
 1052 0008 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 000a 07F11804 		add	r4, r7, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 42


 1055 000e 0C3C     		subs	r4, r4, #12
 1056 0010 2060     		str	r0, [r4]
 1057 0012 07F11800 		add	r0, r7, #24
 1058 0016 1038     		subs	r0, r0, #16
 1059 0018 0160     		str	r1, [r0]
 1060 001a 07F11801 		add	r1, r7, #24
 1061 001e 1439     		subs	r1, r1, #20
 1062 0020 0A60     		str	r2, [r1]
 1063 0022 07F11802 		add	r2, r7, #24
 1064 0026 183A     		subs	r2, r2, #24
 1065 0028 1360     		str	r3, [r2]
 376:..\src/command_processing.c ****     
 377:..\src/command_processing.c ****     //Package to be sent variables
 378:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1066              		.loc 1 378 0
 1067 002a 07F15803 		add	r3, r7, #88
 1068 002e 043B     		subs	r3, r3, #4
 1069 0030 0022     		movs	r2, #0
 1070 0032 1A60     		str	r2, [r3]
 1071 0034 0433     		adds	r3, r3, #4
 1072 0036 41F26C72 		movw	r2, #5996
 1073 003a 0021     		movs	r1, #0
 1074 003c 1846     		mov	r0, r3
 1075 003e FFF7FEFF 		bl	memset
 379:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1076              		.loc 1 379 0
 1077 0042 41F27073 		movw	r3, #6000
 1078 0046 07F5BE52 		add	r2, r7, #6080
 1079 004a 02F11002 		add	r2, r2, #16
 1080 004e 1380     		strh	r3, [r2]	@ movhi
 380:..\src/command_processing.c **** 
 381:..\src/command_processing.c ****     //Auxiliary variables
 382:..\src/command_processing.c ****     uint8 CYDATA i, j;
 383:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1081              		.loc 1 383 0
 1082 0050 0023     		movs	r3, #0
 1083 0052 07F5BE52 		add	r2, r7, #6080
 1084 0056 02F11502 		add	r2, r2, #21
 1085 005a 1370     		strb	r3, [r2]
 384:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1086              		.loc 1 384 0
 1087 005c 0023     		movs	r3, #0
 1088 005e 07F5BE52 		add	r2, r7, #6080
 1089 0062 02F11402 		add	r2, r2, #20
 1090 0066 1370     		strb	r3, [r2]
 385:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1091              		.loc 1 385 0
 1092 0068 0023     		movs	r3, #0
 1093 006a 07F5BE52 		add	r2, r7, #6080
 1094 006e 02F11302 		add	r2, r2, #19
 1095 0072 1370     		strb	r3, [r2]
 386:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 387:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1096              		.loc 1 387 0
 1097 0074 07F13803 		add	r3, r7, #56
 1098 0078 183B     		subs	r3, r3, #24
 1099 007a 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 43


 1100 007c 1A60     		str	r2, [r3]
 1101 007e 0433     		adds	r3, r3, #4
 1102 0080 2E22     		movs	r2, #46
 1103 0082 0021     		movs	r1, #0
 1104 0084 1846     		mov	r0, r3
 1105 0086 FFF7FEFF 		bl	memset
 388:..\src/command_processing.c ****     float aux_float;
 389:..\src/command_processing.c ****     int16 aux_int16;
 390:..\src/command_processing.c ****     uint16 aux_uint16;
 391:..\src/command_processing.c ****     int32 aux_int32;
 392:..\src/command_processing.c ****     uint32 aux_uint32;
 393:..\src/command_processing.c **** 
 394:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1106              		.loc 1 394 0
 1107 008a 0023     		movs	r3, #0
 1108 008c 07F5BE52 		add	r2, r7, #6080
 1109 0090 02F10F02 		add	r2, r2, #15
 1110 0094 1370     		strb	r3, [r2]
 395:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1111              		.loc 1 395 0
 1112 0096 0123     		movs	r3, #1
 1113 0098 07F5BE52 		add	r2, r7, #6080
 1114 009c 02F10E02 		add	r2, r2, #14
 1115 00a0 1370     		strb	r3, [r2]
 396:..\src/command_processing.c ****   
 397:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1116              		.loc 1 397 0
 1117 00a2 07F11803 		add	r3, r7, #24
 1118 00a6 0C3B     		subs	r3, r3, #12
 1119 00a8 1B68     		ldr	r3, [r3]
 1120 00aa 1B68     		ldr	r3, [r3]
 1121 00ac 07F5BE52 		add	r2, r7, #6080
 1122 00b0 02F10802 		add	r2, r2, #8
 1123 00b4 1360     		str	r3, [r2]
 398:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1124              		.loc 1 398 0
 1125 00b6 07F5BE53 		add	r3, r7, #6080
 1126 00ba 03F10803 		add	r3, r3, #8
 1127 00be 1B68     		ldr	r3, [r3]
 1128 00c0 07F5BE52 		add	r2, r7, #6080
 1129 00c4 02F10402 		add	r2, r2, #4
 1130 00c8 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****         
 400:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1131              		.loc 1 400 0
 1132 00ca 07F15803 		add	r3, r7, #88
 1133 00ce 043B     		subs	r3, r3, #4
 1134 00d0 0C22     		movs	r2, #12
 1135 00d2 1A70     		strb	r2, [r3]
 401:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1136              		.loc 1 401 0
 1137 00d4 07F15803 		add	r3, r7, #88
 1138 00d8 043B     		subs	r3, r3, #4
 1139 00da 5322     		movs	r2, #83
 1140 00dc 5A70     		strb	r2, [r3, #1]
 402:..\src/command_processing.c ****     
 403:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 44


 1141              		.loc 1 403 0
 1142 00de 0023     		movs	r3, #0
 1143 00e0 07F5BE52 		add	r2, r7, #6080
 1144 00e4 02F11502 		add	r2, r2, #21
 1145 00e8 1370     		strb	r3, [r2]
 1146 00ea 03F025B8 		b	.L73
 1147              	.L278:
 404:..\src/command_processing.c ****         
 405:..\src/command_processing.c ****         // Assign m_addr memory address
 406:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1148              		.loc 1 406 0
 1149 00ee 07F5BE53 		add	r3, r7, #6080
 1150 00f2 03F11503 		add	r3, r3, #21
 1151 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1152 00f8 9A00     		lsls	r2, r3, #2
 1153 00fa 07F11803 		add	r3, r7, #24
 1154 00fe 0C3B     		subs	r3, r3, #12
 1155 0100 1B68     		ldr	r3, [r3]
 1156 0102 1344     		add	r3, r3, r2
 1157 0104 1B68     		ldr	r3, [r3]
 1158 0106 07F5BE52 		add	r2, r7, #6080
 1159 010a 02F10802 		add	r2, r2, #8
 1160 010e 1360     		str	r3, [r2]
 407:..\src/command_processing.c ****         
 408:..\src/command_processing.c ****         // Add parameter type and size to packet
 409:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1161              		.loc 1 409 0
 1162 0110 07F5BE53 		add	r3, r7, #6080
 1163 0114 03F11503 		add	r3, r3, #21
 1164 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1165 011a 3222     		movs	r2, #50
 1166 011c 02FB03F3 		mul	r3, r2, r3
 1167 0120 9A1C     		adds	r2, r3, #2
 1168 0122 07F5BE53 		add	r3, r7, #6080
 1169 0126 03F11503 		add	r3, r3, #21
 1170 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1171 012c 07F11803 		add	r3, r7, #24
 1172 0130 103B     		subs	r3, r3, #16
 1173 0132 1B68     		ldr	r3, [r3]
 1174 0134 0B44     		add	r3, r3, r1
 1175 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1176 0138 07F15803 		add	r3, r7, #88
 1177 013c 043B     		subs	r3, r3, #4
 1178 013e 9954     		strb	r1, [r3, r2]
 410:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1179              		.loc 1 410 0
 1180 0140 07F5BE53 		add	r3, r7, #6080
 1181 0144 03F11503 		add	r3, r3, #21
 1182 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1183 014a 3222     		movs	r2, #50
 1184 014c 02FB03F3 		mul	r3, r2, r3
 1185 0150 DA1C     		adds	r2, r3, #3
 1186 0152 07F5BE53 		add	r3, r7, #6080
 1187 0156 03F11503 		add	r3, r3, #21
 1188 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1189 015c 07F11803 		add	r3, r7, #24
 1190 0160 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 45


 1191 0162 1B68     		ldr	r3, [r3]
 1192 0164 0B44     		add	r3, r3, r1
 1193 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1194 0168 07F15803 		add	r3, r7, #88
 1195 016c 043B     		subs	r3, r3, #4
 1196 016e 9954     		strb	r1, [r3, r2]
 411:..\src/command_processing.c ****         
 412:..\src/command_processing.c ****         // Find size of data
 413:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1197              		.loc 1 413 0
 1198 0170 07F5BE53 		add	r3, r7, #6080
 1199 0174 03F11503 		add	r3, r3, #21
 1200 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1201 017a 07F11803 		add	r3, r7, #24
 1202 017e 103B     		subs	r3, r3, #16
 1203 0180 1B68     		ldr	r3, [r3]
 1204 0182 1344     		add	r3, r3, r2
 1205 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1206 0186 092B     		cmp	r3, #9
 1207 0188 2BD8     		bhi	.L74
 1208 018a 01A2     		adr	r2, .L76
 1209 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1210              		.p2align 2
 1211              	.L76:
 1212 0190 B9010000 		.word	.L75+1
 1213 0194 B9010000 		.word	.L75+1
 1214 0198 B9010000 		.word	.L75+1
 1215 019c C7010000 		.word	.L77+1
 1216 01a0 C7010000 		.word	.L77+1
 1217 01a4 D5010000 		.word	.L78+1
 1218 01a8 D5010000 		.word	.L78+1
 1219 01ac D5010000 		.word	.L78+1
 1220 01b0 E3010000 		.word	.L74+1
 1221 01b4 B9010000 		.word	.L75+1
 1222              		.p2align 1
 1223              	.L75:
 414:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 415:..\src/command_processing.c ****                 sod = 1; break;
 1224              		.loc 1 415 0
 1225 01b8 0123     		movs	r3, #1
 1226 01ba 07F5BE52 		add	r2, r7, #6080
 1227 01be 02F11302 		add	r2, r2, #19
 1228 01c2 1370     		strb	r3, [r2]
 1229 01c4 0DE0     		b	.L74
 1230              	.L77:
 416:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 417:..\src/command_processing.c ****                 sod = 2; break;
 1231              		.loc 1 417 0
 1232 01c6 0223     		movs	r3, #2
 1233 01c8 07F5BE52 		add	r2, r7, #6080
 1234 01cc 02F11302 		add	r2, r2, #19
 1235 01d0 1370     		strb	r3, [r2]
 1236 01d2 06E0     		b	.L74
 1237              	.L78:
 418:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 419:..\src/command_processing.c ****                 sod = 4; break;
 1238              		.loc 1 419 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 46


 1239 01d4 0423     		movs	r3, #4
 1240 01d6 07F5BE52 		add	r2, r7, #6080
 1241 01da 02F11302 		add	r2, r2, #19
 1242 01de 1370     		strb	r3, [r2]
 1243 01e0 00BF     		nop
 1244              	.L74:
 420:..\src/command_processing.c ****         }
 421:..\src/command_processing.c ****             
 422:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1245              		.loc 1 422 0
 1246 01e2 07F5BE53 		add	r3, r7, #6080
 1247 01e6 03F11503 		add	r3, r3, #21
 1248 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1249 01ec 07F5BF52 		add	r2, r7, #6112
 1250 01f0 02F11802 		add	r2, r2, #24
 1251 01f4 1268     		ldr	r2, [r2]
 1252 01f6 1344     		add	r3, r3, r2
 1253 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1254 01fa 002B     		cmp	r3, #0
 1255 01fc 40F0DA83 		bne	.L79
 423:..\src/command_processing.c ****             
 424:..\src/command_processing.c ****             // Add parameter data to packet
 425:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1256              		.loc 1 425 0
 1257 0200 07F5BE53 		add	r3, r7, #6080
 1258 0204 03F11503 		add	r3, r3, #21
 1259 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1260 020a 07F11803 		add	r3, r7, #24
 1261 020e 103B     		subs	r3, r3, #16
 1262 0210 1B68     		ldr	r3, [r3]
 1263 0212 1344     		add	r3, r3, r2
 1264 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 0216 092B     		cmp	r3, #9
 1266 0218 02F25781 		bhi	.L113
 1267 021c 01A2     		adr	r2, .L82
 1268 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1269 0222 00BF     		.p2align 2
 1270              	.L82:
 1271 0224 4D020000 		.word	.L81+1
 1272 0228 09030000 		.word	.L83+1
 1273 022c 4D020000 		.word	.L81+1
 1274 0230 C5030000 		.word	.L84+1
 1275 0234 F7040000 		.word	.L85+1
 1276 0238 23060000 		.word	.L86+1
 1277 023c 53070000 		.word	.L87+1
 1278 0240 83080000 		.word	.L88+1
 1279 0244 CB240000 		.word	.L113+1
 1280 0248 4D020000 		.word	.L81+1
 1281              		.p2align 1
 1282              	.L81:
 426:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1283              		.loc 1 427 0
 1284 024c 0023     		movs	r3, #0
 1285 024e 07F5BE52 		add	r2, r7, #6080
 1286 0252 02F11702 		add	r2, r2, #23
 1287 0256 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 47


 1288 0258 42E0     		b	.L89
 1289              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1290              		.loc 1 428 0 discriminator 3
 1291 025a 07F5BE53 		add	r3, r7, #6080
 1292 025e 03F11703 		add	r3, r3, #23
 1293 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1294 0264 07F5BE52 		add	r2, r7, #6080
 1295 0268 02F11302 		add	r2, r2, #19
 1296 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1297 026e 02FB03F3 		mul	r3, r2, r3
 1298 0272 1A46     		mov	r2, r3
 1299 0274 07F5BE53 		add	r3, r7, #6080
 1300 0278 03F10803 		add	r3, r3, #8
 1301 027c 1B68     		ldr	r3, [r3]
 1302 027e 1344     		add	r3, r3, r2
 1303 0280 07F5BE52 		add	r2, r7, #6080
 1304 0284 02F10402 		add	r2, r2, #4
 1305 0288 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1306              		.loc 1 429 0 discriminator 3
 1307 028a 07F5BE53 		add	r3, r7, #6080
 1308 028e 03F11503 		add	r3, r3, #21
 1309 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1310 0294 3222     		movs	r2, #50
 1311 0296 02FB03F3 		mul	r3, r2, r3
 1312 029a 1A1D     		adds	r2, r3, #4
 1313 029c 07F5BE53 		add	r3, r7, #6080
 1314 02a0 03F11703 		add	r3, r3, #23
 1315 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1316 02a6 07F5BE51 		add	r1, r7, #6080
 1317 02aa 01F11301 		add	r1, r1, #19
 1318 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1319 02b0 01FB03F3 		mul	r3, r1, r3
 1320 02b4 1A44     		add	r2, r2, r3
 1321 02b6 07F5BE53 		add	r3, r7, #6080
 1322 02ba 03F10403 		add	r3, r3, #4
 1323 02be 1B68     		ldr	r3, [r3]
 1324 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1325 02c2 07F15803 		add	r3, r7, #88
 1326 02c6 043B     		subs	r3, r3, #4
 1327 02c8 9954     		strb	r1, [r3, r2]
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1328              		.loc 1 427 0 discriminator 3
 1329 02ca 07F5BE53 		add	r3, r7, #6080
 1330 02ce 03F11703 		add	r3, r3, #23
 1331 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 02d4 0133     		adds	r3, r3, #1
 1333 02d6 07F5BE52 		add	r2, r7, #6080
 1334 02da 02F11702 		add	r2, r2, #23
 1335 02de 1370     		strb	r3, [r2]
 1336              	.L89:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1337              		.loc 1 427 0 is_stmt 0 discriminator 1
 1338 02e0 07F5BE53 		add	r3, r7, #6080
 1339 02e4 03F11503 		add	r3, r3, #21
 1340 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 48


 1341 02ea 07F11803 		add	r3, r7, #24
 1342 02ee 143B     		subs	r3, r3, #20
 1343 02f0 1B68     		ldr	r3, [r3]
 1344 02f2 1344     		add	r3, r3, r2
 1345 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 02f6 07F5BE52 		add	r2, r7, #6080
 1347 02fa 02F11702 		add	r2, r2, #23
 1348 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1349 0300 9A42     		cmp	r2, r3
 1350 0302 AAD3     		bcc	.L90
 430:..\src/command_processing.c ****                     }
 431:..\src/command_processing.c ****                     break;                
 1351              		.loc 1 431 0 is_stmt 1
 1352 0304 02F0E1B8 		b	.L113
 1353              	.L83:
 432:..\src/command_processing.c ****                 case TYPE_INT8:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1354              		.loc 1 433 0
 1355 0308 0023     		movs	r3, #0
 1356 030a 07F5BE52 		add	r2, r7, #6080
 1357 030e 02F11702 		add	r2, r2, #23
 1358 0312 1370     		strb	r3, [r2]
 1359 0314 42E0     		b	.L91
 1360              	.L92:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1361              		.loc 1 434 0 discriminator 3
 1362 0316 07F5BE53 		add	r3, r7, #6080
 1363 031a 03F11703 		add	r3, r3, #23
 1364 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1365 0320 07F5BE52 		add	r2, r7, #6080
 1366 0324 02F11302 		add	r2, r2, #19
 1367 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1368 032a 02FB03F3 		mul	r3, r2, r3
 1369 032e 1A46     		mov	r2, r3
 1370 0330 07F5BE53 		add	r3, r7, #6080
 1371 0334 03F10803 		add	r3, r3, #8
 1372 0338 1B68     		ldr	r3, [r3]
 1373 033a 1344     		add	r3, r3, r2
 1374 033c 07F5BE52 		add	r2, r7, #6080
 1375 0340 02F10402 		add	r2, r2, #4
 1376 0344 1360     		str	r3, [r2]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1377              		.loc 1 435 0 discriminator 3
 1378 0346 07F5BE53 		add	r3, r7, #6080
 1379 034a 03F11503 		add	r3, r3, #21
 1380 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 0350 3222     		movs	r2, #50
 1382 0352 02FB03F3 		mul	r3, r2, r3
 1383 0356 1A1D     		adds	r2, r3, #4
 1384 0358 07F5BE53 		add	r3, r7, #6080
 1385 035c 03F11703 		add	r3, r3, #23
 1386 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1387 0362 07F5BE51 		add	r1, r7, #6080
 1388 0366 01F11301 		add	r1, r1, #19
 1389 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1390 036c 01FB03F3 		mul	r3, r1, r3
 1391 0370 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 49


 1392 0372 07F5BE53 		add	r3, r7, #6080
 1393 0376 03F10403 		add	r3, r3, #4
 1394 037a 1B68     		ldr	r3, [r3]
 1395 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1396 037e 07F15803 		add	r3, r7, #88
 1397 0382 043B     		subs	r3, r3, #4
 1398 0384 9954     		strb	r1, [r3, r2]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1399              		.loc 1 433 0 discriminator 3
 1400 0386 07F5BE53 		add	r3, r7, #6080
 1401 038a 03F11703 		add	r3, r3, #23
 1402 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1403 0390 0133     		adds	r3, r3, #1
 1404 0392 07F5BE52 		add	r2, r7, #6080
 1405 0396 02F11702 		add	r2, r2, #23
 1406 039a 1370     		strb	r3, [r2]
 1407              	.L91:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1408              		.loc 1 433 0 is_stmt 0 discriminator 1
 1409 039c 07F5BE53 		add	r3, r7, #6080
 1410 03a0 03F11503 		add	r3, r3, #21
 1411 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1412 03a6 07F11803 		add	r3, r7, #24
 1413 03aa 143B     		subs	r3, r3, #20
 1414 03ac 1B68     		ldr	r3, [r3]
 1415 03ae 1344     		add	r3, r3, r2
 1416 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1417 03b2 07F5BE52 		add	r2, r7, #6080
 1418 03b6 02F11702 		add	r2, r2, #23
 1419 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1420 03bc 9A42     		cmp	r2, r3
 1421 03be AAD3     		bcc	.L92
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;
 1422              		.loc 1 437 0 is_stmt 1
 1423 03c0 02F083B8 		b	.L113
 1424              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT16:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1425              		.loc 1 439 0
 1426 03c4 0023     		movs	r3, #0
 1427 03c6 07F5BE52 		add	r2, r7, #6080
 1428 03ca 02F11702 		add	r2, r2, #23
 1429 03ce 1370     		strb	r3, [r2]
 1430 03d0 7CE0     		b	.L93
 1431              	.L96:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1432              		.loc 1 440 0
 1433 03d2 07F5BE53 		add	r3, r7, #6080
 1434 03d6 03F11703 		add	r3, r3, #23
 1435 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1436 03dc 07F5BE52 		add	r2, r7, #6080
 1437 03e0 02F11302 		add	r2, r2, #19
 1438 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1439 03e6 02FB03F3 		mul	r3, r2, r3
 1440 03ea 1A46     		mov	r2, r3
 1441 03ec 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 50


 1442 03f0 03F10803 		add	r3, r3, #8
 1443 03f4 1B68     		ldr	r3, [r3]
 1444 03f6 1344     		add	r3, r3, r2
 1445 03f8 07F5BE52 		add	r2, r7, #6080
 1446 03fc 02F10402 		add	r2, r2, #4
 1447 0400 1360     		str	r3, [r2]
 441:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1448              		.loc 1 441 0
 1449 0402 07F5BE53 		add	r3, r7, #6080
 1450 0406 03F10403 		add	r3, r3, #4
 1451 040a 1B68     		ldr	r3, [r3]
 1452 040c B3F90020 		ldrsh	r2, [r3]
 1453 0410 07F13803 		add	r3, r7, #56
 1454 0414 1E3B     		subs	r3, r3, #30
 1455 0416 1A80     		strh	r2, [r3]	@ movhi
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1456              		.loc 1 442 0
 1457 0418 0023     		movs	r3, #0
 1458 041a 07F5BE52 		add	r2, r7, #6080
 1459 041e 02F11602 		add	r2, r2, #22
 1460 0422 1370     		strb	r3, [r2]
 1461 0424 3BE0     		b	.L94
 1462              	.L95:
 443:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1463              		.loc 1 443 0 discriminator 3
 1464 0426 07F5BE53 		add	r3, r7, #6080
 1465 042a 03F11503 		add	r3, r3, #21
 1466 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 0430 3222     		movs	r2, #50
 1468 0432 02FB03F3 		mul	r3, r2, r3
 1469 0436 1A1D     		adds	r2, r3, #4
 1470 0438 07F5BE53 		add	r3, r7, #6080
 1471 043c 03F11703 		add	r3, r3, #23
 1472 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 0442 07F5BE51 		add	r1, r7, #6080
 1474 0446 01F11301 		add	r1, r1, #19
 1475 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1476 044c 01FB03F3 		mul	r3, r1, r3
 1477 0450 1A44     		add	r2, r2, r3
 1478 0452 07F5BE53 		add	r3, r7, #6080
 1479 0456 03F11303 		add	r3, r3, #19
 1480 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1481 045c 1A44     		add	r2, r2, r3
 1482 045e 07F5BE53 		add	r3, r7, #6080
 1483 0462 03F11603 		add	r3, r3, #22
 1484 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1485 0468 D31A     		subs	r3, r2, r3
 1486 046a 5A1E     		subs	r2, r3, #1
 1487 046c 07F5BE53 		add	r3, r7, #6080
 1488 0470 03F11603 		add	r3, r3, #22
 1489 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1490 0476 07F13803 		add	r3, r7, #56
 1491 047a 1E3B     		subs	r3, r3, #30
 1492 047c 0B44     		add	r3, r3, r1
 1493 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1494 0480 07F15803 		add	r3, r7, #88
 1495 0484 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 51


 1496 0486 9954     		strb	r1, [r3, r2]
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1497              		.loc 1 442 0 discriminator 3
 1498 0488 07F5BE53 		add	r3, r7, #6080
 1499 048c 03F11603 		add	r3, r3, #22
 1500 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 0492 0133     		adds	r3, r3, #1
 1502 0494 07F5BE52 		add	r2, r7, #6080
 1503 0498 02F11602 		add	r2, r2, #22
 1504 049c 1370     		strb	r3, [r2]
 1505              	.L94:
 442:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1506              		.loc 1 442 0 is_stmt 0 discriminator 1
 1507 049e 07F5BE53 		add	r3, r7, #6080
 1508 04a2 03F11603 		add	r3, r3, #22
 1509 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1510 04a8 07F5BE53 		add	r3, r7, #6080
 1511 04ac 03F11303 		add	r3, r3, #19
 1512 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 04b2 9A42     		cmp	r2, r3
 1514 04b4 B7D3     		bcc	.L95
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1515              		.loc 1 439 0 is_stmt 1 discriminator 2
 1516 04b6 07F5BE53 		add	r3, r7, #6080
 1517 04ba 03F11703 		add	r3, r3, #23
 1518 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1519 04c0 0133     		adds	r3, r3, #1
 1520 04c2 07F5BE52 		add	r2, r7, #6080
 1521 04c6 02F11702 		add	r2, r2, #23
 1522 04ca 1370     		strb	r3, [r2]
 1523              	.L93:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1524              		.loc 1 439 0 is_stmt 0 discriminator 1
 1525 04cc 07F5BE53 		add	r3, r7, #6080
 1526 04d0 03F11503 		add	r3, r3, #21
 1527 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1528 04d6 07F11803 		add	r3, r7, #24
 1529 04da 143B     		subs	r3, r3, #20
 1530 04dc 1B68     		ldr	r3, [r3]
 1531 04de 1344     		add	r3, r3, r2
 1532 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1533 04e2 07F5BE52 		add	r2, r7, #6080
 1534 04e6 02F11702 		add	r2, r2, #23
 1535 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1536 04ec 9A42     		cmp	r2, r3
 1537 04ee FFF470AF 		bcc	.L96
 444:..\src/command_processing.c ****                         }
 445:..\src/command_processing.c ****                     }
 446:..\src/command_processing.c ****                     break;
 1538              		.loc 1 446 0 is_stmt 1
 1539 04f2 01F0EABF 		b	.L113
 1540              	.L85:
 447:..\src/command_processing.c ****                 case TYPE_UINT16:
 448:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1541              		.loc 1 448 0
 1542 04f6 0023     		movs	r3, #0
 1543 04f8 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 52


 1544 04fc 02F11702 		add	r2, r2, #23
 1545 0500 1370     		strb	r3, [r2]
 1546 0502 79E0     		b	.L97
 1547              	.L100:
 449:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1548              		.loc 1 449 0
 1549 0504 07F5BE53 		add	r3, r7, #6080
 1550 0508 03F11703 		add	r3, r3, #23
 1551 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1552 050e 07F5BE52 		add	r2, r7, #6080
 1553 0512 02F11302 		add	r2, r2, #19
 1554 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1555 0518 02FB03F3 		mul	r3, r2, r3
 1556 051c 1A46     		mov	r2, r3
 1557 051e 07F5BE53 		add	r3, r7, #6080
 1558 0522 03F10803 		add	r3, r3, #8
 1559 0526 1B68     		ldr	r3, [r3]
 1560 0528 1344     		add	r3, r3, r2
 1561 052a 07F5BE52 		add	r2, r7, #6080
 1562 052e 02F10402 		add	r2, r2, #4
 1563 0532 1360     		str	r3, [r2]
 450:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1564              		.loc 1 450 0
 1565 0534 07F5BE53 		add	r3, r7, #6080
 1566 0538 03F10403 		add	r3, r3, #4
 1567 053c 1B68     		ldr	r3, [r3]
 1568 053e 1A88     		ldrh	r2, [r3]
 1569 0540 07F11803 		add	r3, r7, #24
 1570 0544 1A80     		strh	r2, [r3]	@ movhi
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1571              		.loc 1 451 0
 1572 0546 0023     		movs	r3, #0
 1573 0548 07F5BE52 		add	r2, r7, #6080
 1574 054c 02F11602 		add	r2, r2, #22
 1575 0550 1370     		strb	r3, [r2]
 1576 0552 3AE0     		b	.L98
 1577              	.L99:
 452:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1578              		.loc 1 452 0 discriminator 3
 1579 0554 07F5BE53 		add	r3, r7, #6080
 1580 0558 03F11503 		add	r3, r3, #21
 1581 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 055e 3222     		movs	r2, #50
 1583 0560 02FB03F3 		mul	r3, r2, r3
 1584 0564 1A1D     		adds	r2, r3, #4
 1585 0566 07F5BE53 		add	r3, r7, #6080
 1586 056a 03F11703 		add	r3, r3, #23
 1587 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1588 0570 07F5BE51 		add	r1, r7, #6080
 1589 0574 01F11301 		add	r1, r1, #19
 1590 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1591 057a 01FB03F3 		mul	r3, r1, r3
 1592 057e 1A44     		add	r2, r2, r3
 1593 0580 07F5BE53 		add	r3, r7, #6080
 1594 0584 03F11303 		add	r3, r3, #19
 1595 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 058a 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 53


 1597 058c 07F5BE53 		add	r3, r7, #6080
 1598 0590 03F11603 		add	r3, r3, #22
 1599 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1600 0596 D31A     		subs	r3, r2, r3
 1601 0598 5A1E     		subs	r2, r3, #1
 1602 059a 07F5BE53 		add	r3, r7, #6080
 1603 059e 03F11603 		add	r3, r3, #22
 1604 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1605 05a4 07F11801 		add	r1, r7, #24
 1606 05a8 0B44     		add	r3, r3, r1
 1607 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1608 05ac 07F15803 		add	r3, r7, #88
 1609 05b0 043B     		subs	r3, r3, #4
 1610 05b2 9954     		strb	r1, [r3, r2]
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1611              		.loc 1 451 0 discriminator 3
 1612 05b4 07F5BE53 		add	r3, r7, #6080
 1613 05b8 03F11603 		add	r3, r3, #22
 1614 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 05be 0133     		adds	r3, r3, #1
 1616 05c0 07F5BE52 		add	r2, r7, #6080
 1617 05c4 02F11602 		add	r2, r2, #22
 1618 05c8 1370     		strb	r3, [r2]
 1619              	.L98:
 451:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1620              		.loc 1 451 0 is_stmt 0 discriminator 1
 1621 05ca 07F5BE53 		add	r3, r7, #6080
 1622 05ce 03F11603 		add	r3, r3, #22
 1623 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1624 05d4 07F5BE53 		add	r3, r7, #6080
 1625 05d8 03F11303 		add	r3, r3, #19
 1626 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1627 05de 9A42     		cmp	r2, r3
 1628 05e0 B8D3     		bcc	.L99
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1629              		.loc 1 448 0 is_stmt 1 discriminator 2
 1630 05e2 07F5BE53 		add	r3, r7, #6080
 1631 05e6 03F11703 		add	r3, r3, #23
 1632 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1633 05ec 0133     		adds	r3, r3, #1
 1634 05ee 07F5BE52 		add	r2, r7, #6080
 1635 05f2 02F11702 		add	r2, r2, #23
 1636 05f6 1370     		strb	r3, [r2]
 1637              	.L97:
 448:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1638              		.loc 1 448 0 is_stmt 0 discriminator 1
 1639 05f8 07F5BE53 		add	r3, r7, #6080
 1640 05fc 03F11503 		add	r3, r3, #21
 1641 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1642 0602 07F11803 		add	r3, r7, #24
 1643 0606 143B     		subs	r3, r3, #20
 1644 0608 1B68     		ldr	r3, [r3]
 1645 060a 1344     		add	r3, r3, r2
 1646 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1647 060e 07F5BE52 		add	r2, r7, #6080
 1648 0612 02F11702 		add	r2, r2, #23
 1649 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 54


 1650 0618 9A42     		cmp	r2, r3
 1651 061a FFF473AF 		bcc	.L100
 453:..\src/command_processing.c ****                         }
 454:..\src/command_processing.c ****                     }
 455:..\src/command_processing.c ****                     break;
 1652              		.loc 1 455 0 is_stmt 1
 1653 061e 01F054BF 		b	.L113
 1654              	.L86:
 456:..\src/command_processing.c ****                 case TYPE_INT32: 
 457:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1655              		.loc 1 457 0
 1656 0622 0023     		movs	r3, #0
 1657 0624 07F5BE52 		add	r2, r7, #6080
 1658 0628 02F11702 		add	r2, r2, #23
 1659 062c 1370     		strb	r3, [r2]
 1660 062e 7BE0     		b	.L101
 1661              	.L104:
 458:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1662              		.loc 1 458 0
 1663 0630 07F5BE53 		add	r3, r7, #6080
 1664 0634 03F11703 		add	r3, r3, #23
 1665 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1666 063a 07F5BE52 		add	r2, r7, #6080
 1667 063e 02F11302 		add	r2, r2, #19
 1668 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1669 0644 02FB03F3 		mul	r3, r2, r3
 1670 0648 1A46     		mov	r2, r3
 1671 064a 07F5BE53 		add	r3, r7, #6080
 1672 064e 03F10803 		add	r3, r3, #8
 1673 0652 1B68     		ldr	r3, [r3]
 1674 0654 1344     		add	r3, r3, r2
 1675 0656 07F5BE52 		add	r2, r7, #6080
 1676 065a 02F10402 		add	r2, r2, #4
 1677 065e 1360     		str	r3, [r2]
 459:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1678              		.loc 1 459 0
 1679 0660 07F5BE53 		add	r3, r7, #6080
 1680 0664 03F10403 		add	r3, r3, #4
 1681 0668 1B68     		ldr	r3, [r3]
 1682 066a 1A68     		ldr	r2, [r3]
 1683 066c 07F11803 		add	r3, r7, #24
 1684 0670 043B     		subs	r3, r3, #4
 1685 0672 1A60     		str	r2, [r3]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1686              		.loc 1 460 0
 1687 0674 0023     		movs	r3, #0
 1688 0676 07F5BE52 		add	r2, r7, #6080
 1689 067a 02F11602 		add	r2, r2, #22
 1690 067e 1370     		strb	r3, [r2]
 1691 0680 3BE0     		b	.L102
 1692              	.L103:
 461:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1693              		.loc 1 461 0 discriminator 3
 1694 0682 07F5BE53 		add	r3, r7, #6080
 1695 0686 03F11503 		add	r3, r3, #21
 1696 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1697 068c 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 55


 1698 068e 02FB03F3 		mul	r3, r2, r3
 1699 0692 1A1D     		adds	r2, r3, #4
 1700 0694 07F5BE53 		add	r3, r7, #6080
 1701 0698 03F11703 		add	r3, r3, #23
 1702 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1703 069e 07F5BE51 		add	r1, r7, #6080
 1704 06a2 01F11301 		add	r1, r1, #19
 1705 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1706 06a8 01FB03F3 		mul	r3, r1, r3
 1707 06ac 1A44     		add	r2, r2, r3
 1708 06ae 07F5BE53 		add	r3, r7, #6080
 1709 06b2 03F11303 		add	r3, r3, #19
 1710 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1711 06b8 1A44     		add	r2, r2, r3
 1712 06ba 07F5BE53 		add	r3, r7, #6080
 1713 06be 03F11603 		add	r3, r3, #22
 1714 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1715 06c4 D31A     		subs	r3, r2, r3
 1716 06c6 5A1E     		subs	r2, r3, #1
 1717 06c8 07F5BE53 		add	r3, r7, #6080
 1718 06cc 03F11603 		add	r3, r3, #22
 1719 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1720 06d2 07F11803 		add	r3, r7, #24
 1721 06d6 043B     		subs	r3, r3, #4
 1722 06d8 0B44     		add	r3, r3, r1
 1723 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1724 06dc 07F15803 		add	r3, r7, #88
 1725 06e0 043B     		subs	r3, r3, #4
 1726 06e2 9954     		strb	r1, [r3, r2]
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1727              		.loc 1 460 0 discriminator 3
 1728 06e4 07F5BE53 		add	r3, r7, #6080
 1729 06e8 03F11603 		add	r3, r3, #22
 1730 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 06ee 0133     		adds	r3, r3, #1
 1732 06f0 07F5BE52 		add	r2, r7, #6080
 1733 06f4 02F11602 		add	r2, r2, #22
 1734 06f8 1370     		strb	r3, [r2]
 1735              	.L102:
 460:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1736              		.loc 1 460 0 is_stmt 0 discriminator 1
 1737 06fa 07F5BE53 		add	r3, r7, #6080
 1738 06fe 03F11603 		add	r3, r3, #22
 1739 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1740 0704 07F5BE53 		add	r3, r7, #6080
 1741 0708 03F11303 		add	r3, r3, #19
 1742 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1743 070e 9A42     		cmp	r2, r3
 1744 0710 B7D3     		bcc	.L103
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1745              		.loc 1 457 0 is_stmt 1 discriminator 2
 1746 0712 07F5BE53 		add	r3, r7, #6080
 1747 0716 03F11703 		add	r3, r3, #23
 1748 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749 071c 0133     		adds	r3, r3, #1
 1750 071e 07F5BE52 		add	r2, r7, #6080
 1751 0722 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 56


 1752 0726 1370     		strb	r3, [r2]
 1753              	.L101:
 457:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1754              		.loc 1 457 0 is_stmt 0 discriminator 1
 1755 0728 07F5BE53 		add	r3, r7, #6080
 1756 072c 03F11503 		add	r3, r3, #21
 1757 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1758 0732 07F11803 		add	r3, r7, #24
 1759 0736 143B     		subs	r3, r3, #20
 1760 0738 1B68     		ldr	r3, [r3]
 1761 073a 1344     		add	r3, r3, r2
 1762 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1763 073e 07F5BE52 		add	r2, r7, #6080
 1764 0742 02F11702 		add	r2, r2, #23
 1765 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1766 0748 9A42     		cmp	r2, r3
 1767 074a FFF471AF 		bcc	.L104
 462:..\src/command_processing.c ****                         }
 463:..\src/command_processing.c ****                     }
 464:..\src/command_processing.c ****                     break;
 1768              		.loc 1 464 0 is_stmt 1
 1769 074e 01F0BCBE 		b	.L113
 1770              	.L87:
 465:..\src/command_processing.c ****                 case TYPE_UINT32: 
 466:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1771              		.loc 1 466 0
 1772 0752 0023     		movs	r3, #0
 1773 0754 07F5BE52 		add	r2, r7, #6080
 1774 0758 02F11702 		add	r2, r2, #23
 1775 075c 1370     		strb	r3, [r2]
 1776 075e 7BE0     		b	.L105
 1777              	.L108:
 467:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1778              		.loc 1 467 0
 1779 0760 07F5BE53 		add	r3, r7, #6080
 1780 0764 03F11703 		add	r3, r3, #23
 1781 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1782 076a 07F5BE52 		add	r2, r7, #6080
 1783 076e 02F11302 		add	r2, r2, #19
 1784 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1785 0774 02FB03F3 		mul	r3, r2, r3
 1786 0778 1A46     		mov	r2, r3
 1787 077a 07F5BE53 		add	r3, r7, #6080
 1788 077e 03F10803 		add	r3, r3, #8
 1789 0782 1B68     		ldr	r3, [r3]
 1790 0784 1344     		add	r3, r3, r2
 1791 0786 07F5BE52 		add	r2, r7, #6080
 1792 078a 02F10402 		add	r2, r2, #4
 1793 078e 1360     		str	r3, [r2]
 468:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1794              		.loc 1 468 0
 1795 0790 07F5BE53 		add	r3, r7, #6080
 1796 0794 03F10403 		add	r3, r3, #4
 1797 0798 1B68     		ldr	r3, [r3]
 1798 079a 1A68     		ldr	r2, [r3]
 1799 079c 07F11803 		add	r3, r7, #24
 1800 07a0 083B     		subs	r3, r3, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 57


 1801 07a2 1A60     		str	r2, [r3]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1802              		.loc 1 469 0
 1803 07a4 0023     		movs	r3, #0
 1804 07a6 07F5BE52 		add	r2, r7, #6080
 1805 07aa 02F11602 		add	r2, r2, #22
 1806 07ae 1370     		strb	r3, [r2]
 1807 07b0 3BE0     		b	.L106
 1808              	.L107:
 470:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1809              		.loc 1 470 0 discriminator 3
 1810 07b2 07F5BE53 		add	r3, r7, #6080
 1811 07b6 03F11503 		add	r3, r3, #21
 1812 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1813 07bc 3222     		movs	r2, #50
 1814 07be 02FB03F3 		mul	r3, r2, r3
 1815 07c2 1A1D     		adds	r2, r3, #4
 1816 07c4 07F5BE53 		add	r3, r7, #6080
 1817 07c8 03F11703 		add	r3, r3, #23
 1818 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1819 07ce 07F5BE51 		add	r1, r7, #6080
 1820 07d2 01F11301 		add	r1, r1, #19
 1821 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1822 07d8 01FB03F3 		mul	r3, r1, r3
 1823 07dc 1A44     		add	r2, r2, r3
 1824 07de 07F5BE53 		add	r3, r7, #6080
 1825 07e2 03F11303 		add	r3, r3, #19
 1826 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1827 07e8 1A44     		add	r2, r2, r3
 1828 07ea 07F5BE53 		add	r3, r7, #6080
 1829 07ee 03F11603 		add	r3, r3, #22
 1830 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1831 07f4 D31A     		subs	r3, r2, r3
 1832 07f6 5A1E     		subs	r2, r3, #1
 1833 07f8 07F5BE53 		add	r3, r7, #6080
 1834 07fc 03F11603 		add	r3, r3, #22
 1835 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1836 0802 07F11803 		add	r3, r7, #24
 1837 0806 083B     		subs	r3, r3, #8
 1838 0808 0B44     		add	r3, r3, r1
 1839 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1840 080c 07F15803 		add	r3, r7, #88
 1841 0810 043B     		subs	r3, r3, #4
 1842 0812 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1843              		.loc 1 469 0 discriminator 3
 1844 0814 07F5BE53 		add	r3, r7, #6080
 1845 0818 03F11603 		add	r3, r3, #22
 1846 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 081e 0133     		adds	r3, r3, #1
 1848 0820 07F5BE52 		add	r2, r7, #6080
 1849 0824 02F11602 		add	r2, r2, #22
 1850 0828 1370     		strb	r3, [r2]
 1851              	.L106:
 469:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1852              		.loc 1 469 0 is_stmt 0 discriminator 1
 1853 082a 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 58


 1854 082e 03F11603 		add	r3, r3, #22
 1855 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1856 0834 07F5BE53 		add	r3, r7, #6080
 1857 0838 03F11303 		add	r3, r3, #19
 1858 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1859 083e 9A42     		cmp	r2, r3
 1860 0840 B7D3     		bcc	.L107
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1861              		.loc 1 466 0 is_stmt 1 discriminator 2
 1862 0842 07F5BE53 		add	r3, r7, #6080
 1863 0846 03F11703 		add	r3, r3, #23
 1864 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1865 084c 0133     		adds	r3, r3, #1
 1866 084e 07F5BE52 		add	r2, r7, #6080
 1867 0852 02F11702 		add	r2, r2, #23
 1868 0856 1370     		strb	r3, [r2]
 1869              	.L105:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1870              		.loc 1 466 0 is_stmt 0 discriminator 1
 1871 0858 07F5BE53 		add	r3, r7, #6080
 1872 085c 03F11503 		add	r3, r3, #21
 1873 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1874 0862 07F11803 		add	r3, r7, #24
 1875 0866 143B     		subs	r3, r3, #20
 1876 0868 1B68     		ldr	r3, [r3]
 1877 086a 1344     		add	r3, r3, r2
 1878 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1879 086e 07F5BE52 		add	r2, r7, #6080
 1880 0872 02F11702 		add	r2, r2, #23
 1881 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1882 0878 9A42     		cmp	r2, r3
 1883 087a FFF471AF 		bcc	.L108
 471:..\src/command_processing.c ****                         }
 472:..\src/command_processing.c ****                     }
 473:..\src/command_processing.c ****                     break;
 1884              		.loc 1 473 0 is_stmt 1
 1885 087e 01F024BE 		b	.L113
 1886              	.L88:
 474:..\src/command_processing.c ****                     
 475:..\src/command_processing.c ****                 case TYPE_FLOAT:
 476:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1887              		.loc 1 476 0
 1888 0882 0023     		movs	r3, #0
 1889 0884 07F5BE52 		add	r2, r7, #6080
 1890 0888 02F11702 		add	r2, r2, #23
 1891 088c 1370     		strb	r3, [r2]
 1892 088e 7BE0     		b	.L109
 1893              	.L112:
 477:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1894              		.loc 1 477 0
 1895 0890 07F5BE53 		add	r3, r7, #6080
 1896 0894 03F11703 		add	r3, r3, #23
 1897 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1898 089a 07F5BE52 		add	r2, r7, #6080
 1899 089e 02F11302 		add	r2, r2, #19
 1900 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1901 08a4 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 59


 1902 08a8 1A46     		mov	r2, r3
 1903 08aa 07F5BE53 		add	r3, r7, #6080
 1904 08ae 03F10803 		add	r3, r3, #8
 1905 08b2 1B68     		ldr	r3, [r3]
 1906 08b4 1344     		add	r3, r3, r2
 1907 08b6 07F5BE52 		add	r2, r7, #6080
 1908 08ba 02F10402 		add	r2, r2, #4
 1909 08be 1360     		str	r3, [r2]
 478:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1910              		.loc 1 478 0
 1911 08c0 07F5BE53 		add	r3, r7, #6080
 1912 08c4 03F10403 		add	r3, r3, #4
 1913 08c8 1B68     		ldr	r3, [r3]
 1914 08ca 1A68     		ldr	r2, [r3]	@ float
 1915 08cc 07F13803 		add	r3, r7, #56
 1916 08d0 1C3B     		subs	r3, r3, #28
 1917 08d2 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1918              		.loc 1 479 0
 1919 08d4 0023     		movs	r3, #0
 1920 08d6 07F5BE52 		add	r2, r7, #6080
 1921 08da 02F11602 		add	r2, r2, #22
 1922 08de 1370     		strb	r3, [r2]
 1923 08e0 3BE0     		b	.L110
 1924              	.L111:
 480:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1925              		.loc 1 480 0 discriminator 3
 1926 08e2 07F5BE53 		add	r3, r7, #6080
 1927 08e6 03F11503 		add	r3, r3, #21
 1928 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1929 08ec 3222     		movs	r2, #50
 1930 08ee 02FB03F3 		mul	r3, r2, r3
 1931 08f2 1A1D     		adds	r2, r3, #4
 1932 08f4 07F5BE53 		add	r3, r7, #6080
 1933 08f8 03F11703 		add	r3, r3, #23
 1934 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1935 08fe 07F5BE51 		add	r1, r7, #6080
 1936 0902 01F11301 		add	r1, r1, #19
 1937 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1938 0908 01FB03F3 		mul	r3, r1, r3
 1939 090c 1A44     		add	r2, r2, r3
 1940 090e 07F5BE53 		add	r3, r7, #6080
 1941 0912 03F11303 		add	r3, r3, #19
 1942 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1943 0918 1A44     		add	r2, r2, r3
 1944 091a 07F5BE53 		add	r3, r7, #6080
 1945 091e 03F11603 		add	r3, r3, #22
 1946 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1947 0924 D31A     		subs	r3, r2, r3
 1948 0926 5A1E     		subs	r2, r3, #1
 1949 0928 07F5BE53 		add	r3, r7, #6080
 1950 092c 03F11603 		add	r3, r3, #22
 1951 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1952 0932 07F13803 		add	r3, r7, #56
 1953 0936 1C3B     		subs	r3, r3, #28
 1954 0938 0B44     		add	r3, r3, r1
 1955 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 60


 1956 093c 07F15803 		add	r3, r7, #88
 1957 0940 043B     		subs	r3, r3, #4
 1958 0942 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1959              		.loc 1 479 0 discriminator 3
 1960 0944 07F5BE53 		add	r3, r7, #6080
 1961 0948 03F11603 		add	r3, r3, #22
 1962 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1963 094e 0133     		adds	r3, r3, #1
 1964 0950 07F5BE52 		add	r2, r7, #6080
 1965 0954 02F11602 		add	r2, r2, #22
 1966 0958 1370     		strb	r3, [r2]
 1967              	.L110:
 479:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1968              		.loc 1 479 0 is_stmt 0 discriminator 1
 1969 095a 07F5BE53 		add	r3, r7, #6080
 1970 095e 03F11603 		add	r3, r3, #22
 1971 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1972 0964 07F5BE53 		add	r3, r7, #6080
 1973 0968 03F11303 		add	r3, r3, #19
 1974 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1975 096e 9A42     		cmp	r2, r3
 1976 0970 B7D3     		bcc	.L111
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1977              		.loc 1 476 0 is_stmt 1 discriminator 2
 1978 0972 07F5BE53 		add	r3, r7, #6080
 1979 0976 03F11703 		add	r3, r3, #23
 1980 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1981 097c 0133     		adds	r3, r3, #1
 1982 097e 07F5BE52 		add	r2, r7, #6080
 1983 0982 02F11702 		add	r2, r2, #23
 1984 0986 1370     		strb	r3, [r2]
 1985              	.L109:
 476:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1986              		.loc 1 476 0 is_stmt 0 discriminator 1
 1987 0988 07F5BE53 		add	r3, r7, #6080
 1988 098c 03F11503 		add	r3, r3, #21
 1989 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1990 0992 07F11803 		add	r3, r7, #24
 1991 0996 143B     		subs	r3, r3, #20
 1992 0998 1B68     		ldr	r3, [r3]
 1993 099a 1344     		add	r3, r3, r2
 1994 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1995 099e 07F5BE52 		add	r2, r7, #6080
 1996 09a2 02F11702 		add	r2, r2, #23
 1997 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1998 09a8 9A42     		cmp	r2, r3
 1999 09aa FFF471AF 		bcc	.L112
 481:..\src/command_processing.c ****                         }
 482:..\src/command_processing.c ****                     }
 483:..\src/command_processing.c ****                     break;   
 2000              		.loc 1 483 0 is_stmt 1 discriminator 7
 2001 09ae 00BF     		nop
 2002 09b0 01F08BBD 		b	.L113
 2003              	.L79:
 484:..\src/command_processing.c ****             }
 485:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 61


 486:..\src/command_processing.c ****         else {
 487:..\src/command_processing.c ****             
 488:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 489:..\src/command_processing.c ****             
 490:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 491:..\src/command_processing.c ****                 switch(idx+1){
 2004              		.loc 1 491 0
 2005 09b4 07F5BE53 		add	r3, r7, #6080
 2006 09b8 03F11503 		add	r3, r3, #21
 2007 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 09be 0133     		adds	r3, r3, #1
 2009 09c0 023B     		subs	r3, r3, #2
 2010 09c2 332B     		cmp	r3, #51
 2011 09c4 01F28085 		bhi	.L283
 2012 09c8 01A2     		adr	r2, .L116
 2013 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2014 09ce 00BF     		.p2align 2
 2015              	.L116:
 2016 09d0 A10A0000 		.word	.L115+1
 2017 09d4 6D0F0000 		.word	.L117+1
 2018 09d8 C9240000 		.word	.L283+1
 2019 09dc C9240000 		.word	.L283+1
 2020 09e0 C9240000 		.word	.L283+1
 2021 09e4 C9240000 		.word	.L283+1
 2022 09e8 37140000 		.word	.L118+1
 2023 09ec C9240000 		.word	.L283+1
 2024 09f0 C9240000 		.word	.L283+1
 2025 09f4 AB150000 		.word	.L119+1
 2026 09f8 C9240000 		.word	.L283+1
 2027 09fc C9240000 		.word	.L283+1
 2028 0a00 C9240000 		.word	.L283+1
 2029 0a04 C9240000 		.word	.L283+1
 2030 0a08 C9240000 		.word	.L283+1
 2031 0a0c C9240000 		.word	.L283+1
 2032 0a10 C9240000 		.word	.L283+1
 2033 0a14 C9240000 		.word	.L283+1
 2034 0a18 C9240000 		.word	.L283+1
 2035 0a1c C9240000 		.word	.L283+1
 2036 0a20 C9240000 		.word	.L283+1
 2037 0a24 79170000 		.word	.L120+1
 2038 0a28 C9240000 		.word	.L283+1
 2039 0a2c C9240000 		.word	.L283+1
 2040 0a30 C9240000 		.word	.L283+1
 2041 0a34 C9240000 		.word	.L283+1
 2042 0a38 C9240000 		.word	.L283+1
 2043 0a3c C9240000 		.word	.L283+1
 2044 0a40 C9240000 		.word	.L283+1
 2045 0a44 C9240000 		.word	.L283+1
 2046 0a48 C9240000 		.word	.L283+1
 2047 0a4c C9240000 		.word	.L283+1
 2048 0a50 C9240000 		.word	.L283+1
 2049 0a54 C9240000 		.word	.L283+1
 2050 0a58 C9240000 		.word	.L283+1
 2051 0a5c C9240000 		.word	.L283+1
 2052 0a60 C9240000 		.word	.L283+1
 2053 0a64 C9240000 		.word	.L283+1
 2054 0a68 C9240000 		.word	.L283+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 62


 2055 0a6c C9240000 		.word	.L283+1
 2056 0a70 C9240000 		.word	.L283+1
 2057 0a74 C9240000 		.word	.L283+1
 2058 0a78 43180000 		.word	.L121+1
 2059 0a7c 111D0000 		.word	.L122+1
 2060 0a80 C9240000 		.word	.L283+1
 2061 0a84 C9240000 		.word	.L283+1
 2062 0a88 C9240000 		.word	.L283+1
 2063 0a8c C9240000 		.word	.L283+1
 2064 0a90 DB210000 		.word	.L123+1
 2065 0a94 C9240000 		.word	.L283+1
 2066 0a98 C9240000 		.word	.L283+1
 2067 0a9c FF220000 		.word	.L124+1
 2068              		.p2align 1
 2069              	.L115:
 492:..\src/command_processing.c ****                     case 2:         // Position PID
 493:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2070              		.loc 1 493 0
 2071 0aa0 07F5BE53 		add	r3, r7, #6080
 2072 0aa4 03F10F03 		add	r3, r3, #15
 2073 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2074 0aaa AC49     		ldr	r1, .L289
 2075 0aac 1346     		mov	r3, r2
 2076 0aae DB00     		lsls	r3, r3, #3
 2077 0ab0 9B1A     		subs	r3, r3, r2
 2078 0ab2 1B01     		lsls	r3, r3, #4
 2079 0ab4 0B44     		add	r3, r3, r1
 2080 0ab6 03F20F13 		addw	r3, r3, #271
 2081 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2082 0abc 032B     		cmp	r3, #3
 2083 0abe 00F02981 		beq	.L125
 494:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2084              		.loc 1 494 0
 2085 0ac2 07F5BE53 		add	r3, r7, #6080
 2086 0ac6 03F10F03 		add	r3, r3, #15
 2087 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2088 0acc A349     		ldr	r1, .L289
 2089 0ace 1346     		mov	r3, r2
 2090 0ad0 DB00     		lsls	r3, r3, #3
 2091 0ad2 9B1A     		subs	r3, r3, r2
 2092 0ad4 1B01     		lsls	r3, r3, #4
 2093 0ad6 0B44     		add	r3, r3, r1
 2094 0ad8 B033     		adds	r3, r3, #176
 2095 0ada 1B68     		ldr	r3, [r3]
 2096 0adc 1846     		mov	r0, r3
 2097 0ade FFF7FEFF 		bl	__aeabi_i2f
 2098 0ae2 0346     		mov	r3, r0
 2099 0ae4 4FF08F41 		mov	r1, #1199570944
 2100 0ae8 1846     		mov	r0, r3
 2101 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2102 0aee 0346     		mov	r3, r0
 2103 0af0 1A46     		mov	r2, r3
 2104 0af2 07F13803 		add	r3, r7, #56
 2105 0af6 1C3B     		subs	r3, r3, #28
 2106 0af8 1A60     		str	r2, [r3]	@ float
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2107              		.loc 1 495 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 63


 2108 0afa 0023     		movs	r3, #0
 2109 0afc 07F5BE52 		add	r2, r7, #6080
 2110 0b00 02F11702 		add	r2, r2, #23
 2111 0b04 1370     		strb	r3, [r2]
 2112 0b06 2EE0     		b	.L126
 2113              	.L127:
 496:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2114              		.loc 1 496 0 discriminator 3
 2115 0b08 07F5BE53 		add	r3, r7, #6080
 2116 0b0c 03F11503 		add	r3, r3, #21
 2117 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2118 0b12 3222     		movs	r2, #50
 2119 0b14 02FB03F3 		mul	r3, r2, r3
 2120 0b18 1A1D     		adds	r2, r3, #4
 2121 0b1a 07F5BE53 		add	r3, r7, #6080
 2122 0b1e 03F11303 		add	r3, r3, #19
 2123 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2124 0b24 1A44     		add	r2, r2, r3
 2125 0b26 07F5BE53 		add	r3, r7, #6080
 2126 0b2a 03F11703 		add	r3, r3, #23
 2127 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2128 0b30 D31A     		subs	r3, r2, r3
 2129 0b32 5A1E     		subs	r2, r3, #1
 2130 0b34 07F5BE53 		add	r3, r7, #6080
 2131 0b38 03F11703 		add	r3, r3, #23
 2132 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2133 0b3e 07F13803 		add	r3, r7, #56
 2134 0b42 1C3B     		subs	r3, r3, #28
 2135 0b44 0B44     		add	r3, r3, r1
 2136 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2137 0b48 07F15803 		add	r3, r7, #88
 2138 0b4c 043B     		subs	r3, r3, #4
 2139 0b4e 9954     		strb	r1, [r3, r2]
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2140              		.loc 1 495 0 discriminator 3
 2141 0b50 07F5BE53 		add	r3, r7, #6080
 2142 0b54 03F11703 		add	r3, r3, #23
 2143 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2144 0b5a 0133     		adds	r3, r3, #1
 2145 0b5c 07F5BE52 		add	r2, r7, #6080
 2146 0b60 02F11702 		add	r2, r2, #23
 2147 0b64 1370     		strb	r3, [r2]
 2148              	.L126:
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2149              		.loc 1 495 0 is_stmt 0 discriminator 1
 2150 0b66 07F5BE53 		add	r3, r7, #6080
 2151 0b6a 03F11703 		add	r3, r3, #23
 2152 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2153 0b70 07F5BE53 		add	r3, r7, #6080
 2154 0b74 03F11303 		add	r3, r3, #19
 2155 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2156 0b7a 9A42     		cmp	r2, r3
 2157 0b7c C4D3     		bcc	.L127
 497:..\src/command_processing.c ****                             }
 498:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2158              		.loc 1 498 0 is_stmt 1
 2159 0b7e 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 64


 2160 0b82 03F10F03 		add	r3, r3, #15
 2161 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2162 0b88 7449     		ldr	r1, .L289
 2163 0b8a 1346     		mov	r3, r2
 2164 0b8c DB00     		lsls	r3, r3, #3
 2165 0b8e 9B1A     		subs	r3, r3, r2
 2166 0b90 1B01     		lsls	r3, r3, #4
 2167 0b92 0B44     		add	r3, r3, r1
 2168 0b94 B433     		adds	r3, r3, #180
 2169 0b96 1B68     		ldr	r3, [r3]
 2170 0b98 1846     		mov	r0, r3
 2171 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2172 0b9e 0346     		mov	r3, r0
 2173 0ba0 4FF08F41 		mov	r1, #1199570944
 2174 0ba4 1846     		mov	r0, r3
 2175 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2176 0baa 0346     		mov	r3, r0
 2177 0bac 1A46     		mov	r2, r3
 2178 0bae 07F13803 		add	r3, r7, #56
 2179 0bb2 1C3B     		subs	r3, r3, #28
 2180 0bb4 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2181              		.loc 1 499 0
 2182 0bb6 0023     		movs	r3, #0
 2183 0bb8 07F5BE52 		add	r2, r7, #6080
 2184 0bbc 02F11702 		add	r2, r2, #23
 2185 0bc0 1370     		strb	r3, [r2]
 2186 0bc2 34E0     		b	.L128
 2187              	.L129:
 500:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2188              		.loc 1 500 0 discriminator 3
 2189 0bc4 07F5BE53 		add	r3, r7, #6080
 2190 0bc8 03F11503 		add	r3, r3, #21
 2191 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2192 0bce 3222     		movs	r2, #50
 2193 0bd0 02FB03F3 		mul	r3, r2, r3
 2194 0bd4 1A1D     		adds	r2, r3, #4
 2195 0bd6 07F5BE53 		add	r3, r7, #6080
 2196 0bda 03F11303 		add	r3, r3, #19
 2197 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2198 0be0 1A44     		add	r2, r2, r3
 2199 0be2 07F5BE53 		add	r3, r7, #6080
 2200 0be6 03F11303 		add	r3, r3, #19
 2201 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2202 0bec 1A44     		add	r2, r2, r3
 2203 0bee 07F5BE53 		add	r3, r7, #6080
 2204 0bf2 03F11703 		add	r3, r3, #23
 2205 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2206 0bf8 D31A     		subs	r3, r2, r3
 2207 0bfa 5A1E     		subs	r2, r3, #1
 2208 0bfc 07F5BE53 		add	r3, r7, #6080
 2209 0c00 03F11703 		add	r3, r3, #23
 2210 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2211 0c06 07F13803 		add	r3, r7, #56
 2212 0c0a 1C3B     		subs	r3, r3, #28
 2213 0c0c 0B44     		add	r3, r3, r1
 2214 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 65


 2215 0c10 07F15803 		add	r3, r7, #88
 2216 0c14 043B     		subs	r3, r3, #4
 2217 0c16 9954     		strb	r1, [r3, r2]
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2218              		.loc 1 499 0 discriminator 3
 2219 0c18 07F5BE53 		add	r3, r7, #6080
 2220 0c1c 03F11703 		add	r3, r3, #23
 2221 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2222 0c22 0133     		adds	r3, r3, #1
 2223 0c24 07F5BE52 		add	r2, r7, #6080
 2224 0c28 02F11702 		add	r2, r2, #23
 2225 0c2c 1370     		strb	r3, [r2]
 2226              	.L128:
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2227              		.loc 1 499 0 is_stmt 0 discriminator 1
 2228 0c2e 07F5BE53 		add	r3, r7, #6080
 2229 0c32 03F11703 		add	r3, r3, #23
 2230 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2231 0c38 07F5BE53 		add	r3, r7, #6080
 2232 0c3c 03F11303 		add	r3, r3, #19
 2233 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 0c42 9A42     		cmp	r2, r3
 2235 0c44 BED3     		bcc	.L129
 501:..\src/command_processing.c ****                             }
 502:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2236              		.loc 1 502 0 is_stmt 1
 2237 0c46 07F5BE53 		add	r3, r7, #6080
 2238 0c4a 03F10F03 		add	r3, r3, #15
 2239 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2240 0c50 4249     		ldr	r1, .L289
 2241 0c52 1346     		mov	r3, r2
 2242 0c54 DB00     		lsls	r3, r3, #3
 2243 0c56 9B1A     		subs	r3, r3, r2
 2244 0c58 1B01     		lsls	r3, r3, #4
 2245 0c5a 0B44     		add	r3, r3, r1
 2246 0c5c B833     		adds	r3, r3, #184
 2247 0c5e 1B68     		ldr	r3, [r3]
 2248 0c60 1846     		mov	r0, r3
 2249 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2250 0c66 0346     		mov	r3, r0
 2251 0c68 4FF08F41 		mov	r1, #1199570944
 2252 0c6c 1846     		mov	r0, r3
 2253 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2254 0c72 0346     		mov	r3, r0
 2255 0c74 1A46     		mov	r2, r3
 2256 0c76 07F13803 		add	r3, r7, #56
 2257 0c7a 1C3B     		subs	r3, r3, #28
 2258 0c7c 1A60     		str	r2, [r3]	@ float
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2259              		.loc 1 503 0
 2260 0c7e 0023     		movs	r3, #0
 2261 0c80 07F5BE52 		add	r2, r7, #6080
 2262 0c84 02F11702 		add	r2, r2, #23
 2263 0c88 1370     		strb	r3, [r2]
 2264 0c8a 35E0     		b	.L130
 2265              	.L131:
 504:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 66


 2266              		.loc 1 504 0 discriminator 3
 2267 0c8c 07F5BE53 		add	r3, r7, #6080
 2268 0c90 03F11503 		add	r3, r3, #21
 2269 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2270 0c96 3222     		movs	r2, #50
 2271 0c98 02FB03F3 		mul	r3, r2, r3
 2272 0c9c 1A1D     		adds	r2, r3, #4
 2273 0c9e 07F5BE53 		add	r3, r7, #6080
 2274 0ca2 03F11303 		add	r3, r3, #19
 2275 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2276 0ca8 5B00     		lsls	r3, r3, #1
 2277 0caa 1A44     		add	r2, r2, r3
 2278 0cac 07F5BE53 		add	r3, r7, #6080
 2279 0cb0 03F11303 		add	r3, r3, #19
 2280 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2281 0cb6 1A44     		add	r2, r2, r3
 2282 0cb8 07F5BE53 		add	r3, r7, #6080
 2283 0cbc 03F11703 		add	r3, r3, #23
 2284 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2285 0cc2 D31A     		subs	r3, r2, r3
 2286 0cc4 5A1E     		subs	r2, r3, #1
 2287 0cc6 07F5BE53 		add	r3, r7, #6080
 2288 0cca 03F11703 		add	r3, r3, #23
 2289 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2290 0cd0 07F13803 		add	r3, r7, #56
 2291 0cd4 1C3B     		subs	r3, r3, #28
 2292 0cd6 0B44     		add	r3, r3, r1
 2293 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2294 0cda 07F15803 		add	r3, r7, #88
 2295 0cde 043B     		subs	r3, r3, #4
 2296 0ce0 9954     		strb	r1, [r3, r2]
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2297              		.loc 1 503 0 discriminator 3
 2298 0ce2 07F5BE53 		add	r3, r7, #6080
 2299 0ce6 03F11703 		add	r3, r3, #23
 2300 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2301 0cec 0133     		adds	r3, r3, #1
 2302 0cee 07F5BE52 		add	r2, r7, #6080
 2303 0cf2 02F11702 		add	r2, r2, #23
 2304 0cf6 1370     		strb	r3, [r2]
 2305              	.L130:
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2306              		.loc 1 503 0 is_stmt 0 discriminator 1
 2307 0cf8 07F5BE53 		add	r3, r7, #6080
 2308 0cfc 03F11703 		add	r3, r3, #23
 2309 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2310 0d02 07F5BE53 		add	r3, r7, #6080
 2311 0d06 03F11303 		add	r3, r3, #19
 2312 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2313 0d0c 9A42     		cmp	r2, r3
 2314 0d0e BDD3     		bcc	.L131
 505:..\src/command_processing.c ****                             } 
 506:..\src/command_processing.c ****                         }
 507:..\src/command_processing.c ****                         else {
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 67


 511:..\src/command_processing.c ****                             }
 512:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 515:..\src/command_processing.c ****                             }
 516:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 519:..\src/command_processing.c ****                             }
 520:..\src/command_processing.c ****                         }
 521:..\src/command_processing.c ****                         break;
 2315              		.loc 1 521 0 is_stmt 1
 2316 0d10 01F0DBBB 		b	.L113
 2317              	.L125:
 508:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2318              		.loc 1 508 0
 2319 0d14 07F5BE53 		add	r3, r7, #6080
 2320 0d18 03F10F03 		add	r3, r3, #15
 2321 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2322 0d1e 0F49     		ldr	r1, .L289
 2323 0d20 1346     		mov	r3, r2
 2324 0d22 DB00     		lsls	r3, r3, #3
 2325 0d24 9B1A     		subs	r3, r3, r2
 2326 0d26 1B01     		lsls	r3, r3, #4
 2327 0d28 0B44     		add	r3, r3, r1
 2328 0d2a C833     		adds	r3, r3, #200
 2329 0d2c 1B68     		ldr	r3, [r3]
 2330 0d2e 1846     		mov	r0, r3
 2331 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2332 0d34 0346     		mov	r3, r0
 2333 0d36 4FF08F41 		mov	r1, #1199570944
 2334 0d3a 1846     		mov	r0, r3
 2335 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2336 0d40 0346     		mov	r3, r0
 2337 0d42 1A46     		mov	r2, r3
 2338 0d44 07F13803 		add	r3, r7, #56
 2339 0d48 1C3B     		subs	r3, r3, #28
 2340 0d4a 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2341              		.loc 1 509 0
 2342 0d4c 0023     		movs	r3, #0
 2343 0d4e 07F5BE52 		add	r2, r7, #6080
 2344 0d52 02F11702 		add	r2, r2, #23
 2345 0d56 1370     		strb	r3, [r2]
 2346 0d58 31E0     		b	.L133
 2347              	.L290:
 2348 0d5a 00BF     		.align	2
 2349              	.L289:
 2350 0d5c 00000000 		.word	c_mem
 2351              	.L134:
 510:..\src/command_processing.c ****                             }
 2352              		.loc 1 510 0 discriminator 3
 2353 0d60 07F5BE53 		add	r3, r7, #6080
 2354 0d64 03F11503 		add	r3, r3, #21
 2355 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2356 0d6a 3222     		movs	r2, #50
 2357 0d6c 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 68


 2358 0d70 1A1D     		adds	r2, r3, #4
 2359 0d72 07F5BE53 		add	r3, r7, #6080
 2360 0d76 03F11303 		add	r3, r3, #19
 2361 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362 0d7c 1A44     		add	r2, r2, r3
 2363 0d7e 07F5BE53 		add	r3, r7, #6080
 2364 0d82 03F11703 		add	r3, r3, #23
 2365 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2366 0d88 D31A     		subs	r3, r2, r3
 2367 0d8a 5A1E     		subs	r2, r3, #1
 2368 0d8c 07F5BE53 		add	r3, r7, #6080
 2369 0d90 03F11703 		add	r3, r3, #23
 2370 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2371 0d96 07F13803 		add	r3, r7, #56
 2372 0d9a 1C3B     		subs	r3, r3, #28
 2373 0d9c 0B44     		add	r3, r3, r1
 2374 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2375 0da0 07F15803 		add	r3, r7, #88
 2376 0da4 043B     		subs	r3, r3, #4
 2377 0da6 9954     		strb	r1, [r3, r2]
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2378              		.loc 1 509 0 discriminator 3
 2379 0da8 07F5BE53 		add	r3, r7, #6080
 2380 0dac 03F11703 		add	r3, r3, #23
 2381 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2382 0db2 0133     		adds	r3, r3, #1
 2383 0db4 07F5BE52 		add	r2, r7, #6080
 2384 0db8 02F11702 		add	r2, r2, #23
 2385 0dbc 1370     		strb	r3, [r2]
 2386              	.L133:
 509:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2387              		.loc 1 509 0 is_stmt 0 discriminator 1
 2388 0dbe 07F5BE53 		add	r3, r7, #6080
 2389 0dc2 03F11703 		add	r3, r3, #23
 2390 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2391 0dc8 07F5BE53 		add	r3, r7, #6080
 2392 0dcc 03F11303 		add	r3, r3, #19
 2393 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2394 0dd2 9A42     		cmp	r2, r3
 2395 0dd4 C4D3     		bcc	.L134
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2396              		.loc 1 512 0 is_stmt 1
 2397 0dd6 07F5BE53 		add	r3, r7, #6080
 2398 0dda 03F10F03 		add	r3, r3, #15
 2399 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2400 0de0 AB49     		ldr	r1, .L291
 2401 0de2 1346     		mov	r3, r2
 2402 0de4 DB00     		lsls	r3, r3, #3
 2403 0de6 9B1A     		subs	r3, r3, r2
 2404 0de8 1B01     		lsls	r3, r3, #4
 2405 0dea 0B44     		add	r3, r3, r1
 2406 0dec CC33     		adds	r3, r3, #204
 2407 0dee 1B68     		ldr	r3, [r3]
 2408 0df0 1846     		mov	r0, r3
 2409 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2410 0df6 0346     		mov	r3, r0
 2411 0df8 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 69


 2412 0dfc 1846     		mov	r0, r3
 2413 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2414 0e02 0346     		mov	r3, r0
 2415 0e04 1A46     		mov	r2, r3
 2416 0e06 07F13803 		add	r3, r7, #56
 2417 0e0a 1C3B     		subs	r3, r3, #28
 2418 0e0c 1A60     		str	r2, [r3]	@ float
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2419              		.loc 1 513 0
 2420 0e0e 0023     		movs	r3, #0
 2421 0e10 07F5BE52 		add	r2, r7, #6080
 2422 0e14 02F11702 		add	r2, r2, #23
 2423 0e18 1370     		strb	r3, [r2]
 2424 0e1a 34E0     		b	.L135
 2425              	.L136:
 514:..\src/command_processing.c ****                             }
 2426              		.loc 1 514 0 discriminator 3
 2427 0e1c 07F5BE53 		add	r3, r7, #6080
 2428 0e20 03F11503 		add	r3, r3, #21
 2429 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2430 0e26 3222     		movs	r2, #50
 2431 0e28 02FB03F3 		mul	r3, r2, r3
 2432 0e2c 1A1D     		adds	r2, r3, #4
 2433 0e2e 07F5BE53 		add	r3, r7, #6080
 2434 0e32 03F11303 		add	r3, r3, #19
 2435 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2436 0e38 1A44     		add	r2, r2, r3
 2437 0e3a 07F5BE53 		add	r3, r7, #6080
 2438 0e3e 03F11303 		add	r3, r3, #19
 2439 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2440 0e44 1A44     		add	r2, r2, r3
 2441 0e46 07F5BE53 		add	r3, r7, #6080
 2442 0e4a 03F11703 		add	r3, r3, #23
 2443 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2444 0e50 D31A     		subs	r3, r2, r3
 2445 0e52 5A1E     		subs	r2, r3, #1
 2446 0e54 07F5BE53 		add	r3, r7, #6080
 2447 0e58 03F11703 		add	r3, r3, #23
 2448 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2449 0e5e 07F13803 		add	r3, r7, #56
 2450 0e62 1C3B     		subs	r3, r3, #28
 2451 0e64 0B44     		add	r3, r3, r1
 2452 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2453 0e68 07F15803 		add	r3, r7, #88
 2454 0e6c 043B     		subs	r3, r3, #4
 2455 0e6e 9954     		strb	r1, [r3, r2]
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2456              		.loc 1 513 0 discriminator 3
 2457 0e70 07F5BE53 		add	r3, r7, #6080
 2458 0e74 03F11703 		add	r3, r3, #23
 2459 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2460 0e7a 0133     		adds	r3, r3, #1
 2461 0e7c 07F5BE52 		add	r2, r7, #6080
 2462 0e80 02F11702 		add	r2, r2, #23
 2463 0e84 1370     		strb	r3, [r2]
 2464              	.L135:
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 70


 2465              		.loc 1 513 0 is_stmt 0 discriminator 1
 2466 0e86 07F5BE53 		add	r3, r7, #6080
 2467 0e8a 03F11703 		add	r3, r3, #23
 2468 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2469 0e90 07F5BE53 		add	r3, r7, #6080
 2470 0e94 03F11303 		add	r3, r3, #19
 2471 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2472 0e9a 9A42     		cmp	r2, r3
 2473 0e9c BED3     		bcc	.L136
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2474              		.loc 1 516 0 is_stmt 1
 2475 0e9e 07F5BE53 		add	r3, r7, #6080
 2476 0ea2 03F10F03 		add	r3, r3, #15
 2477 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2478 0ea8 7949     		ldr	r1, .L291
 2479 0eaa 1346     		mov	r3, r2
 2480 0eac DB00     		lsls	r3, r3, #3
 2481 0eae 9B1A     		subs	r3, r3, r2
 2482 0eb0 1B01     		lsls	r3, r3, #4
 2483 0eb2 0B44     		add	r3, r3, r1
 2484 0eb4 D033     		adds	r3, r3, #208
 2485 0eb6 1B68     		ldr	r3, [r3]
 2486 0eb8 1846     		mov	r0, r3
 2487 0eba FFF7FEFF 		bl	__aeabi_i2f
 2488 0ebe 0346     		mov	r3, r0
 2489 0ec0 4FF08F41 		mov	r1, #1199570944
 2490 0ec4 1846     		mov	r0, r3
 2491 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2492 0eca 0346     		mov	r3, r0
 2493 0ecc 1A46     		mov	r2, r3
 2494 0ece 07F13803 		add	r3, r7, #56
 2495 0ed2 1C3B     		subs	r3, r3, #28
 2496 0ed4 1A60     		str	r2, [r3]	@ float
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2497              		.loc 1 517 0
 2498 0ed6 0023     		movs	r3, #0
 2499 0ed8 07F5BE52 		add	r2, r7, #6080
 2500 0edc 02F11702 		add	r2, r2, #23
 2501 0ee0 1370     		strb	r3, [r2]
 2502 0ee2 35E0     		b	.L137
 2503              	.L138:
 518:..\src/command_processing.c ****                             }
 2504              		.loc 1 518 0 discriminator 3
 2505 0ee4 07F5BE53 		add	r3, r7, #6080
 2506 0ee8 03F11503 		add	r3, r3, #21
 2507 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2508 0eee 3222     		movs	r2, #50
 2509 0ef0 02FB03F3 		mul	r3, r2, r3
 2510 0ef4 1A1D     		adds	r2, r3, #4
 2511 0ef6 07F5BE53 		add	r3, r7, #6080
 2512 0efa 03F11303 		add	r3, r3, #19
 2513 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2514 0f00 5B00     		lsls	r3, r3, #1
 2515 0f02 1A44     		add	r2, r2, r3
 2516 0f04 07F5BE53 		add	r3, r7, #6080
 2517 0f08 03F11303 		add	r3, r3, #19
 2518 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 71


 2519 0f0e 1A44     		add	r2, r2, r3
 2520 0f10 07F5BE53 		add	r3, r7, #6080
 2521 0f14 03F11703 		add	r3, r3, #23
 2522 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2523 0f1a D31A     		subs	r3, r2, r3
 2524 0f1c 5A1E     		subs	r2, r3, #1
 2525 0f1e 07F5BE53 		add	r3, r7, #6080
 2526 0f22 03F11703 		add	r3, r3, #23
 2527 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2528 0f28 07F13803 		add	r3, r7, #56
 2529 0f2c 1C3B     		subs	r3, r3, #28
 2530 0f2e 0B44     		add	r3, r3, r1
 2531 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2532 0f32 07F15803 		add	r3, r7, #88
 2533 0f36 043B     		subs	r3, r3, #4
 2534 0f38 9954     		strb	r1, [r3, r2]
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2535              		.loc 1 517 0 discriminator 3
 2536 0f3a 07F5BE53 		add	r3, r7, #6080
 2537 0f3e 03F11703 		add	r3, r3, #23
 2538 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2539 0f44 0133     		adds	r3, r3, #1
 2540 0f46 07F5BE52 		add	r2, r7, #6080
 2541 0f4a 02F11702 		add	r2, r2, #23
 2542 0f4e 1370     		strb	r3, [r2]
 2543              	.L137:
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2544              		.loc 1 517 0 is_stmt 0 discriminator 1
 2545 0f50 07F5BE53 		add	r3, r7, #6080
 2546 0f54 03F11703 		add	r3, r3, #23
 2547 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2548 0f5a 07F5BE53 		add	r3, r7, #6080
 2549 0f5e 03F11303 		add	r3, r3, #19
 2550 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2551 0f64 9A42     		cmp	r2, r3
 2552 0f66 BDD3     		bcc	.L138
 2553              		.loc 1 521 0 is_stmt 1
 2554 0f68 01F0AFBA 		b	.L113
 2555              	.L117:
 522:..\src/command_processing.c ****                         
 523:..\src/command_processing.c ****                     case 3:         //Current PID
 524:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2556              		.loc 1 524 0
 2557 0f6c 07F5BE53 		add	r3, r7, #6080
 2558 0f70 03F10F03 		add	r3, r3, #15
 2559 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2560 0f76 4649     		ldr	r1, .L291
 2561 0f78 1346     		mov	r3, r2
 2562 0f7a DB00     		lsls	r3, r3, #3
 2563 0f7c 9B1A     		subs	r3, r3, r2
 2564 0f7e 1B01     		lsls	r3, r3, #4
 2565 0f80 0B44     		add	r3, r3, r1
 2566 0f82 03F20F13 		addw	r3, r3, #271
 2567 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2568 0f88 032B     		cmp	r3, #3
 2569 0f8a 00F02B81 		beq	.L139
 525:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 72


 2570              		.loc 1 525 0
 2571 0f8e 07F5BE53 		add	r3, r7, #6080
 2572 0f92 03F10F03 		add	r3, r3, #15
 2573 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2574 0f98 3D49     		ldr	r1, .L291
 2575 0f9a 1346     		mov	r3, r2
 2576 0f9c DB00     		lsls	r3, r3, #3
 2577 0f9e 9B1A     		subs	r3, r3, r2
 2578 0fa0 1B01     		lsls	r3, r3, #4
 2579 0fa2 0B44     		add	r3, r3, r1
 2580 0fa4 BC33     		adds	r3, r3, #188
 2581 0fa6 1B68     		ldr	r3, [r3]
 2582 0fa8 1846     		mov	r0, r3
 2583 0faa FFF7FEFF 		bl	__aeabi_i2f
 2584 0fae 0346     		mov	r3, r0
 2585 0fb0 4FF08F41 		mov	r1, #1199570944
 2586 0fb4 1846     		mov	r0, r3
 2587 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2588 0fba 0346     		mov	r3, r0
 2589 0fbc 1A46     		mov	r2, r3
 2590 0fbe 07F13803 		add	r3, r7, #56
 2591 0fc2 1C3B     		subs	r3, r3, #28
 2592 0fc4 1A60     		str	r2, [r3]	@ float
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2593              		.loc 1 526 0
 2594 0fc6 0023     		movs	r3, #0
 2595 0fc8 07F5BE52 		add	r2, r7, #6080
 2596 0fcc 02F11702 		add	r2, r2, #23
 2597 0fd0 1370     		strb	r3, [r2]
 2598 0fd2 2EE0     		b	.L140
 2599              	.L141:
 527:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2600              		.loc 1 527 0 discriminator 3
 2601 0fd4 07F5BE53 		add	r3, r7, #6080
 2602 0fd8 03F11503 		add	r3, r3, #21
 2603 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2604 0fde 3222     		movs	r2, #50
 2605 0fe0 02FB03F3 		mul	r3, r2, r3
 2606 0fe4 1A1D     		adds	r2, r3, #4
 2607 0fe6 07F5BE53 		add	r3, r7, #6080
 2608 0fea 03F11303 		add	r3, r3, #19
 2609 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2610 0ff0 1A44     		add	r2, r2, r3
 2611 0ff2 07F5BE53 		add	r3, r7, #6080
 2612 0ff6 03F11703 		add	r3, r3, #23
 2613 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2614 0ffc D31A     		subs	r3, r2, r3
 2615 0ffe 5A1E     		subs	r2, r3, #1
 2616 1000 07F5BE53 		add	r3, r7, #6080
 2617 1004 03F11703 		add	r3, r3, #23
 2618 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2619 100a 07F13803 		add	r3, r7, #56
 2620 100e 1C3B     		subs	r3, r3, #28
 2621 1010 0B44     		add	r3, r3, r1
 2622 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2623 1014 07F15803 		add	r3, r7, #88
 2624 1018 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 73


 2625 101a 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2626              		.loc 1 526 0 discriminator 3
 2627 101c 07F5BE53 		add	r3, r7, #6080
 2628 1020 03F11703 		add	r3, r3, #23
 2629 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2630 1026 0133     		adds	r3, r3, #1
 2631 1028 07F5BE52 		add	r2, r7, #6080
 2632 102c 02F11702 		add	r2, r2, #23
 2633 1030 1370     		strb	r3, [r2]
 2634              	.L140:
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2635              		.loc 1 526 0 is_stmt 0 discriminator 1
 2636 1032 07F5BE53 		add	r3, r7, #6080
 2637 1036 03F11703 		add	r3, r3, #23
 2638 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2639 103c 07F5BE53 		add	r3, r7, #6080
 2640 1040 03F11303 		add	r3, r3, #19
 2641 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2642 1046 9A42     		cmp	r2, r3
 2643 1048 C4D3     		bcc	.L141
 528:..\src/command_processing.c ****                             }
 529:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2644              		.loc 1 529 0 is_stmt 1
 2645 104a 07F5BE53 		add	r3, r7, #6080
 2646 104e 03F10F03 		add	r3, r3, #15
 2647 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2648 1054 0E49     		ldr	r1, .L291
 2649 1056 1346     		mov	r3, r2
 2650 1058 DB00     		lsls	r3, r3, #3
 2651 105a 9B1A     		subs	r3, r3, r2
 2652 105c 1B01     		lsls	r3, r3, #4
 2653 105e 0B44     		add	r3, r3, r1
 2654 1060 C033     		adds	r3, r3, #192
 2655 1062 1B68     		ldr	r3, [r3]
 2656 1064 1846     		mov	r0, r3
 2657 1066 FFF7FEFF 		bl	__aeabi_i2f
 2658 106a 0346     		mov	r3, r0
 2659 106c 4FF08F41 		mov	r1, #1199570944
 2660 1070 1846     		mov	r0, r3
 2661 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2662 1076 0346     		mov	r3, r0
 2663 1078 1A46     		mov	r2, r3
 2664 107a 07F13803 		add	r3, r7, #56
 2665 107e 1C3B     		subs	r3, r3, #28
 2666 1080 1A60     		str	r2, [r3]	@ float
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2667              		.loc 1 530 0
 2668 1082 0023     		movs	r3, #0
 2669 1084 07F5BE52 		add	r2, r7, #6080
 2670 1088 02F11702 		add	r2, r2, #23
 2671 108c 1370     		strb	r3, [r2]
 2672 108e 36E0     		b	.L142
 2673              	.L292:
 2674              		.align	2
 2675              	.L291:
 2676 1090 00000000 		.word	c_mem
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 74


 2677              	.L143:
 531:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2678              		.loc 1 531 0 discriminator 3
 2679 1094 07F5BE53 		add	r3, r7, #6080
 2680 1098 03F11503 		add	r3, r3, #21
 2681 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2682 109e 3222     		movs	r2, #50
 2683 10a0 02FB03F3 		mul	r3, r2, r3
 2684 10a4 1A1D     		adds	r2, r3, #4
 2685 10a6 07F5BE53 		add	r3, r7, #6080
 2686 10aa 03F11303 		add	r3, r3, #19
 2687 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2688 10b0 1A44     		add	r2, r2, r3
 2689 10b2 07F5BE53 		add	r3, r7, #6080
 2690 10b6 03F11303 		add	r3, r3, #19
 2691 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2692 10bc 1A44     		add	r2, r2, r3
 2693 10be 07F5BE53 		add	r3, r7, #6080
 2694 10c2 03F11703 		add	r3, r3, #23
 2695 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2696 10c8 D31A     		subs	r3, r2, r3
 2697 10ca 5A1E     		subs	r2, r3, #1
 2698 10cc 07F5BE53 		add	r3, r7, #6080
 2699 10d0 03F11703 		add	r3, r3, #23
 2700 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2701 10d6 07F13803 		add	r3, r7, #56
 2702 10da 1C3B     		subs	r3, r3, #28
 2703 10dc 0B44     		add	r3, r3, r1
 2704 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2705 10e0 07F15803 		add	r3, r7, #88
 2706 10e4 043B     		subs	r3, r3, #4
 2707 10e6 9954     		strb	r1, [r3, r2]
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2708              		.loc 1 530 0 discriminator 3
 2709 10e8 07F5BE53 		add	r3, r7, #6080
 2710 10ec 03F11703 		add	r3, r3, #23
 2711 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2712 10f2 0133     		adds	r3, r3, #1
 2713 10f4 07F5BE52 		add	r2, r7, #6080
 2714 10f8 02F11702 		add	r2, r2, #23
 2715 10fc 1370     		strb	r3, [r2]
 2716              	.L142:
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2717              		.loc 1 530 0 is_stmt 0 discriminator 1
 2718 10fe 07F5BE53 		add	r3, r7, #6080
 2719 1102 03F11703 		add	r3, r3, #23
 2720 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2721 1108 07F5BE53 		add	r3, r7, #6080
 2722 110c 03F11303 		add	r3, r3, #19
 2723 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2724 1112 9A42     		cmp	r2, r3
 2725 1114 BED3     		bcc	.L143
 532:..\src/command_processing.c ****                             }
 533:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2726              		.loc 1 533 0 is_stmt 1
 2727 1116 07F5BE53 		add	r3, r7, #6080
 2728 111a 03F10F03 		add	r3, r3, #15
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 75


 2729 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2730 1120 C849     		ldr	r1, .L293
 2731 1122 1346     		mov	r3, r2
 2732 1124 DB00     		lsls	r3, r3, #3
 2733 1126 9B1A     		subs	r3, r3, r2
 2734 1128 1B01     		lsls	r3, r3, #4
 2735 112a 0B44     		add	r3, r3, r1
 2736 112c C433     		adds	r3, r3, #196
 2737 112e 1B68     		ldr	r3, [r3]
 2738 1130 1846     		mov	r0, r3
 2739 1132 FFF7FEFF 		bl	__aeabi_i2f
 2740 1136 0346     		mov	r3, r0
 2741 1138 4FF08F41 		mov	r1, #1199570944
 2742 113c 1846     		mov	r0, r3
 2743 113e FFF7FEFF 		bl	__aeabi_fdiv
 2744 1142 0346     		mov	r3, r0
 2745 1144 1A46     		mov	r2, r3
 2746 1146 07F13803 		add	r3, r7, #56
 2747 114a 1C3B     		subs	r3, r3, #28
 2748 114c 1A60     		str	r2, [r3]	@ float
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2749              		.loc 1 534 0
 2750 114e 0023     		movs	r3, #0
 2751 1150 07F5BE52 		add	r2, r7, #6080
 2752 1154 02F11702 		add	r2, r2, #23
 2753 1158 1370     		strb	r3, [r2]
 2754 115a 35E0     		b	.L144
 2755              	.L145:
 535:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2756              		.loc 1 535 0 discriminator 3
 2757 115c 07F5BE53 		add	r3, r7, #6080
 2758 1160 03F11503 		add	r3, r3, #21
 2759 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2760 1166 3222     		movs	r2, #50
 2761 1168 02FB03F3 		mul	r3, r2, r3
 2762 116c 1A1D     		adds	r2, r3, #4
 2763 116e 07F5BE53 		add	r3, r7, #6080
 2764 1172 03F11303 		add	r3, r3, #19
 2765 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2766 1178 5B00     		lsls	r3, r3, #1
 2767 117a 1A44     		add	r2, r2, r3
 2768 117c 07F5BE53 		add	r3, r7, #6080
 2769 1180 03F11303 		add	r3, r3, #19
 2770 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2771 1186 1A44     		add	r2, r2, r3
 2772 1188 07F5BE53 		add	r3, r7, #6080
 2773 118c 03F11703 		add	r3, r3, #23
 2774 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2775 1192 D31A     		subs	r3, r2, r3
 2776 1194 5A1E     		subs	r2, r3, #1
 2777 1196 07F5BE53 		add	r3, r7, #6080
 2778 119a 03F11703 		add	r3, r3, #23
 2779 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2780 11a0 07F13803 		add	r3, r7, #56
 2781 11a4 1C3B     		subs	r3, r3, #28
 2782 11a6 0B44     		add	r3, r3, r1
 2783 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 76


 2784 11aa 07F15803 		add	r3, r7, #88
 2785 11ae 043B     		subs	r3, r3, #4
 2786 11b0 9954     		strb	r1, [r3, r2]
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2787              		.loc 1 534 0 discriminator 3
 2788 11b2 07F5BE53 		add	r3, r7, #6080
 2789 11b6 03F11703 		add	r3, r3, #23
 2790 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2791 11bc 0133     		adds	r3, r3, #1
 2792 11be 07F5BE52 		add	r2, r7, #6080
 2793 11c2 02F11702 		add	r2, r2, #23
 2794 11c6 1370     		strb	r3, [r2]
 2795              	.L144:
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2796              		.loc 1 534 0 is_stmt 0 discriminator 1
 2797 11c8 07F5BE53 		add	r3, r7, #6080
 2798 11cc 03F11703 		add	r3, r3, #23
 2799 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2800 11d2 07F5BE53 		add	r3, r7, #6080
 2801 11d6 03F11303 		add	r3, r3, #19
 2802 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2803 11dc 9A42     		cmp	r2, r3
 2804 11de BDD3     		bcc	.L145
 536:..\src/command_processing.c ****                             }
 537:..\src/command_processing.c ****                         }
 538:..\src/command_processing.c ****                         else {
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 544:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 545:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 546:..\src/command_processing.c ****                             }
 547:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 548:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 549:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 550:..\src/command_processing.c ****                             }
 551:..\src/command_processing.c ****                         }            
 552:..\src/command_processing.c ****                         break;  
 2805              		.loc 1 552 0 is_stmt 1
 2806 11e0 01F073B9 		b	.L113
 2807              	.L139:
 539:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2808              		.loc 1 539 0
 2809 11e4 07F5BE53 		add	r3, r7, #6080
 2810 11e8 03F10F03 		add	r3, r3, #15
 2811 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2812 11ee 9549     		ldr	r1, .L293
 2813 11f0 1346     		mov	r3, r2
 2814 11f2 DB00     		lsls	r3, r3, #3
 2815 11f4 9B1A     		subs	r3, r3, r2
 2816 11f6 1B01     		lsls	r3, r3, #4
 2817 11f8 0B44     		add	r3, r3, r1
 2818 11fa D433     		adds	r3, r3, #212
 2819 11fc 1B68     		ldr	r3, [r3]
 2820 11fe 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 77


 2821 1200 FFF7FEFF 		bl	__aeabi_i2f
 2822 1204 0346     		mov	r3, r0
 2823 1206 4FF08F41 		mov	r1, #1199570944
 2824 120a 1846     		mov	r0, r3
 2825 120c FFF7FEFF 		bl	__aeabi_fdiv
 2826 1210 0346     		mov	r3, r0
 2827 1212 1A46     		mov	r2, r3
 2828 1214 07F13803 		add	r3, r7, #56
 2829 1218 1C3B     		subs	r3, r3, #28
 2830 121a 1A60     		str	r2, [r3]	@ float
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2831              		.loc 1 540 0
 2832 121c 0023     		movs	r3, #0
 2833 121e 07F5BE52 		add	r2, r7, #6080
 2834 1222 02F11702 		add	r2, r2, #23
 2835 1226 1370     		strb	r3, [r2]
 2836 1228 2EE0     		b	.L147
 2837              	.L148:
 541:..\src/command_processing.c ****                             }
 2838              		.loc 1 541 0 discriminator 3
 2839 122a 07F5BE53 		add	r3, r7, #6080
 2840 122e 03F11503 		add	r3, r3, #21
 2841 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2842 1234 3222     		movs	r2, #50
 2843 1236 02FB03F3 		mul	r3, r2, r3
 2844 123a 1A1D     		adds	r2, r3, #4
 2845 123c 07F5BE53 		add	r3, r7, #6080
 2846 1240 03F11303 		add	r3, r3, #19
 2847 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 1246 1A44     		add	r2, r2, r3
 2849 1248 07F5BE53 		add	r3, r7, #6080
 2850 124c 03F11703 		add	r3, r3, #23
 2851 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2852 1252 D31A     		subs	r3, r2, r3
 2853 1254 5A1E     		subs	r2, r3, #1
 2854 1256 07F5BE53 		add	r3, r7, #6080
 2855 125a 03F11703 		add	r3, r3, #23
 2856 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2857 1260 07F13803 		add	r3, r7, #56
 2858 1264 1C3B     		subs	r3, r3, #28
 2859 1266 0B44     		add	r3, r3, r1
 2860 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2861 126a 07F15803 		add	r3, r7, #88
 2862 126e 043B     		subs	r3, r3, #4
 2863 1270 9954     		strb	r1, [r3, r2]
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2864              		.loc 1 540 0 discriminator 3
 2865 1272 07F5BE53 		add	r3, r7, #6080
 2866 1276 03F11703 		add	r3, r3, #23
 2867 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 127c 0133     		adds	r3, r3, #1
 2869 127e 07F5BE52 		add	r2, r7, #6080
 2870 1282 02F11702 		add	r2, r2, #23
 2871 1286 1370     		strb	r3, [r2]
 2872              	.L147:
 540:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2873              		.loc 1 540 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 78


 2874 1288 07F5BE53 		add	r3, r7, #6080
 2875 128c 03F11703 		add	r3, r3, #23
 2876 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2877 1292 07F5BE53 		add	r3, r7, #6080
 2878 1296 03F11303 		add	r3, r3, #19
 2879 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2880 129c 9A42     		cmp	r2, r3
 2881 129e C4D3     		bcc	.L148
 543:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2882              		.loc 1 543 0 is_stmt 1
 2883 12a0 07F5BE53 		add	r3, r7, #6080
 2884 12a4 03F10F03 		add	r3, r3, #15
 2885 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2886 12aa 6649     		ldr	r1, .L293
 2887 12ac 1346     		mov	r3, r2
 2888 12ae DB00     		lsls	r3, r3, #3
 2889 12b0 9B1A     		subs	r3, r3, r2
 2890 12b2 1B01     		lsls	r3, r3, #4
 2891 12b4 0B44     		add	r3, r3, r1
 2892 12b6 D833     		adds	r3, r3, #216
 2893 12b8 1B68     		ldr	r3, [r3]
 2894 12ba 1846     		mov	r0, r3
 2895 12bc FFF7FEFF 		bl	__aeabi_i2f
 2896 12c0 0346     		mov	r3, r0
 2897 12c2 4FF08F41 		mov	r1, #1199570944
 2898 12c6 1846     		mov	r0, r3
 2899 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2900 12cc 0346     		mov	r3, r0
 2901 12ce 1A46     		mov	r2, r3
 2902 12d0 07F13803 		add	r3, r7, #56
 2903 12d4 1C3B     		subs	r3, r3, #28
 2904 12d6 1A60     		str	r2, [r3]	@ float
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2905              		.loc 1 544 0
 2906 12d8 0023     		movs	r3, #0
 2907 12da 07F5BE52 		add	r2, r7, #6080
 2908 12de 02F11702 		add	r2, r2, #23
 2909 12e2 1370     		strb	r3, [r2]
 2910 12e4 34E0     		b	.L149
 2911              	.L150:
 545:..\src/command_processing.c ****                             }
 2912              		.loc 1 545 0 discriminator 3
 2913 12e6 07F5BE53 		add	r3, r7, #6080
 2914 12ea 03F11503 		add	r3, r3, #21
 2915 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2916 12f0 3222     		movs	r2, #50
 2917 12f2 02FB03F3 		mul	r3, r2, r3
 2918 12f6 1A1D     		adds	r2, r3, #4
 2919 12f8 07F5BE53 		add	r3, r7, #6080
 2920 12fc 03F11303 		add	r3, r3, #19
 2921 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2922 1302 1A44     		add	r2, r2, r3
 2923 1304 07F5BE53 		add	r3, r7, #6080
 2924 1308 03F11303 		add	r3, r3, #19
 2925 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2926 130e 1A44     		add	r2, r2, r3
 2927 1310 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 79


 2928 1314 03F11703 		add	r3, r3, #23
 2929 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2930 131a D31A     		subs	r3, r2, r3
 2931 131c 5A1E     		subs	r2, r3, #1
 2932 131e 07F5BE53 		add	r3, r7, #6080
 2933 1322 03F11703 		add	r3, r3, #23
 2934 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2935 1328 07F13803 		add	r3, r7, #56
 2936 132c 1C3B     		subs	r3, r3, #28
 2937 132e 0B44     		add	r3, r3, r1
 2938 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2939 1332 07F15803 		add	r3, r7, #88
 2940 1336 043B     		subs	r3, r3, #4
 2941 1338 9954     		strb	r1, [r3, r2]
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2942              		.loc 1 544 0 discriminator 3
 2943 133a 07F5BE53 		add	r3, r7, #6080
 2944 133e 03F11703 		add	r3, r3, #23
 2945 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2946 1344 0133     		adds	r3, r3, #1
 2947 1346 07F5BE52 		add	r2, r7, #6080
 2948 134a 02F11702 		add	r2, r2, #23
 2949 134e 1370     		strb	r3, [r2]
 2950              	.L149:
 544:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2951              		.loc 1 544 0 is_stmt 0 discriminator 1
 2952 1350 07F5BE53 		add	r3, r7, #6080
 2953 1354 03F11703 		add	r3, r3, #23
 2954 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2955 135a 07F5BE53 		add	r3, r7, #6080
 2956 135e 03F11303 		add	r3, r3, #19
 2957 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2958 1364 9A42     		cmp	r2, r3
 2959 1366 BED3     		bcc	.L150
 547:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2960              		.loc 1 547 0 is_stmt 1
 2961 1368 07F5BE53 		add	r3, r7, #6080
 2962 136c 03F10F03 		add	r3, r3, #15
 2963 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2964 1372 3449     		ldr	r1, .L293
 2965 1374 1346     		mov	r3, r2
 2966 1376 DB00     		lsls	r3, r3, #3
 2967 1378 9B1A     		subs	r3, r3, r2
 2968 137a 1B01     		lsls	r3, r3, #4
 2969 137c 0B44     		add	r3, r3, r1
 2970 137e DC33     		adds	r3, r3, #220
 2971 1380 1B68     		ldr	r3, [r3]
 2972 1382 1846     		mov	r0, r3
 2973 1384 FFF7FEFF 		bl	__aeabi_i2f
 2974 1388 0346     		mov	r3, r0
 2975 138a 4FF08F41 		mov	r1, #1199570944
 2976 138e 1846     		mov	r0, r3
 2977 1390 FFF7FEFF 		bl	__aeabi_fdiv
 2978 1394 0346     		mov	r3, r0
 2979 1396 1A46     		mov	r2, r3
 2980 1398 07F13803 		add	r3, r7, #56
 2981 139c 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 80


 2982 139e 1A60     		str	r2, [r3]	@ float
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2983              		.loc 1 548 0
 2984 13a0 0023     		movs	r3, #0
 2985 13a2 07F5BE52 		add	r2, r7, #6080
 2986 13a6 02F11702 		add	r2, r2, #23
 2987 13aa 1370     		strb	r3, [r2]
 2988 13ac 35E0     		b	.L151
 2989              	.L152:
 549:..\src/command_processing.c ****                             }
 2990              		.loc 1 549 0 discriminator 3
 2991 13ae 07F5BE53 		add	r3, r7, #6080
 2992 13b2 03F11503 		add	r3, r3, #21
 2993 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2994 13b8 3222     		movs	r2, #50
 2995 13ba 02FB03F3 		mul	r3, r2, r3
 2996 13be 1A1D     		adds	r2, r3, #4
 2997 13c0 07F5BE53 		add	r3, r7, #6080
 2998 13c4 03F11303 		add	r3, r3, #19
 2999 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3000 13ca 5B00     		lsls	r3, r3, #1
 3001 13cc 1A44     		add	r2, r2, r3
 3002 13ce 07F5BE53 		add	r3, r7, #6080
 3003 13d2 03F11303 		add	r3, r3, #19
 3004 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3005 13d8 1A44     		add	r2, r2, r3
 3006 13da 07F5BE53 		add	r3, r7, #6080
 3007 13de 03F11703 		add	r3, r3, #23
 3008 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3009 13e4 D31A     		subs	r3, r2, r3
 3010 13e6 5A1E     		subs	r2, r3, #1
 3011 13e8 07F5BE53 		add	r3, r7, #6080
 3012 13ec 03F11703 		add	r3, r3, #23
 3013 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3014 13f2 07F13803 		add	r3, r7, #56
 3015 13f6 1C3B     		subs	r3, r3, #28
 3016 13f8 0B44     		add	r3, r3, r1
 3017 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3018 13fc 07F15803 		add	r3, r7, #88
 3019 1400 043B     		subs	r3, r3, #4
 3020 1402 9954     		strb	r1, [r3, r2]
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3021              		.loc 1 548 0 discriminator 3
 3022 1404 07F5BE53 		add	r3, r7, #6080
 3023 1408 03F11703 		add	r3, r3, #23
 3024 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3025 140e 0133     		adds	r3, r3, #1
 3026 1410 07F5BE52 		add	r2, r7, #6080
 3027 1414 02F11702 		add	r2, r2, #23
 3028 1418 1370     		strb	r3, [r2]
 3029              	.L151:
 548:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3030              		.loc 1 548 0 is_stmt 0 discriminator 1
 3031 141a 07F5BE53 		add	r3, r7, #6080
 3032 141e 03F11703 		add	r3, r3, #23
 3033 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3034 1424 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 81


 3035 1428 03F11303 		add	r3, r3, #19
 3036 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3037 142e 9A42     		cmp	r2, r3
 3038 1430 BDD3     		bcc	.L152
 3039              		.loc 1 552 0 is_stmt 1
 3040 1432 01F04AB8 		b	.L113
 3041              	.L118:
 553:..\src/command_processing.c **** 
 554:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 555:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 3042              		.loc 1 555 0
 3043 1436 0023     		movs	r3, #0
 3044 1438 07F5BE52 		add	r2, r7, #6080
 3045 143c 02F11702 		add	r2, r2, #23
 3046 1440 1370     		strb	r3, [r2]
 3047 1442 9DE0     		b	.L153
 3048              	.L294:
 3049              		.align	2
 3050              	.L293:
 3051 1444 00000000 		.word	c_mem
 3052              	.L156:
 556:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3053              		.loc 1 556 0
 3054 1448 07F5BE53 		add	r3, r7, #6080
 3055 144c 03F10F03 		add	r3, r3, #15
 3056 1450 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3057 1452 C749     		ldr	r1, .L295
 3058 1454 1346     		mov	r3, r2
 3059 1456 DB00     		lsls	r3, r3, #3
 3060 1458 9B1A     		subs	r3, r3, r2
 3061 145a 1B01     		lsls	r3, r3, #4
 3062 145c 0B44     		add	r3, r3, r1
 3063 145e 03F58873 		add	r3, r3, #272
 3064 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3065 1464 1846     		mov	r0, r3
 3066 1466 07F5BE53 		add	r3, r7, #6080
 3067 146a 03F11703 		add	r3, r3, #23
 3068 146e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3069 1470 C049     		ldr	r1, .L295+4
 3070 1472 0346     		mov	r3, r0
 3071 1474 5B00     		lsls	r3, r3, #1
 3072 1476 0344     		add	r3, r3, r0
 3073 1478 9B00     		lsls	r3, r3, #2
 3074 147a 1344     		add	r3, r3, r2
 3075 147c 6633     		adds	r3, r3, #102
 3076 147e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3077 1482 07F5BE53 		add	r3, r7, #6080
 3078 1486 03F10F03 		add	r3, r3, #15
 3079 148a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3080 148c B848     		ldr	r0, .L295
 3081 148e 1346     		mov	r3, r2
 3082 1490 DB00     		lsls	r3, r3, #3
 3083 1492 9B1A     		subs	r3, r3, r2
 3084 1494 1B01     		lsls	r3, r3, #4
 3085 1496 0344     		add	r3, r3, r0
 3086 1498 03F58873 		add	r3, r3, #272
 3087 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 82


 3088 149e 1C46     		mov	r4, r3
 3089 14a0 07F5BE53 		add	r3, r7, #6080
 3090 14a4 03F11703 		add	r3, r3, #23
 3091 14a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3092 14aa B248     		ldr	r0, .L295+4
 3093 14ac 2346     		mov	r3, r4
 3094 14ae 5B00     		lsls	r3, r3, #1
 3095 14b0 2344     		add	r3, r3, r4
 3096 14b2 1B01     		lsls	r3, r3, #4
 3097 14b4 0344     		add	r3, r3, r0
 3098 14b6 1344     		add	r3, r3, r2
 3099 14b8 03F29513 		addw	r3, r3, #405
 3100 14bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3101 14be 41FA03F3 		asr	r3, r1, r3
 3102 14c2 1AB2     		sxth	r2, r3
 3103 14c4 07F13803 		add	r3, r7, #56
 3104 14c8 1E3B     		subs	r3, r3, #30
 3105 14ca 1A80     		strh	r2, [r3]	@ movhi
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3106              		.loc 1 557 0
 3107 14cc 0023     		movs	r3, #0
 3108 14ce 07F5BE52 		add	r2, r7, #6080
 3109 14d2 02F11602 		add	r2, r2, #22
 3110 14d6 1370     		strb	r3, [r2]
 3111 14d8 3BE0     		b	.L154
 3112              	.L155:
 558:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3113              		.loc 1 558 0 discriminator 3
 3114 14da 07F5BE53 		add	r3, r7, #6080
 3115 14de 03F11503 		add	r3, r3, #21
 3116 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3117 14e4 3222     		movs	r2, #50
 3118 14e6 02FB03F3 		mul	r3, r2, r3
 3119 14ea 1A1D     		adds	r2, r3, #4
 3120 14ec 07F5BE53 		add	r3, r7, #6080
 3121 14f0 03F11703 		add	r3, r3, #23
 3122 14f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3123 14f6 07F5BE51 		add	r1, r7, #6080
 3124 14fa 01F11301 		add	r1, r1, #19
 3125 14fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3126 1500 01FB03F3 		mul	r3, r1, r3
 3127 1504 1A44     		add	r2, r2, r3
 3128 1506 07F5BE53 		add	r3, r7, #6080
 3129 150a 03F11303 		add	r3, r3, #19
 3130 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3131 1510 1A44     		add	r2, r2, r3
 3132 1512 07F5BE53 		add	r3, r7, #6080
 3133 1516 03F11603 		add	r3, r3, #22
 3134 151a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3135 151c D31A     		subs	r3, r2, r3
 3136 151e 5A1E     		subs	r2, r3, #1
 3137 1520 07F5BE53 		add	r3, r7, #6080
 3138 1524 03F11603 		add	r3, r3, #22
 3139 1528 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3140 152a 07F13803 		add	r3, r7, #56
 3141 152e 1E3B     		subs	r3, r3, #30
 3142 1530 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 83


 3143 1532 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3144 1534 07F15803 		add	r3, r7, #88
 3145 1538 043B     		subs	r3, r3, #4
 3146 153a 9954     		strb	r1, [r3, r2]
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3147              		.loc 1 557 0 discriminator 3
 3148 153c 07F5BE53 		add	r3, r7, #6080
 3149 1540 03F11603 		add	r3, r3, #22
 3150 1544 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3151 1546 0133     		adds	r3, r3, #1
 3152 1548 07F5BE52 		add	r2, r7, #6080
 3153 154c 02F11602 		add	r2, r2, #22
 3154 1550 1370     		strb	r3, [r2]
 3155              	.L154:
 557:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3156              		.loc 1 557 0 is_stmt 0 discriminator 1
 3157 1552 07F5BE53 		add	r3, r7, #6080
 3158 1556 03F11603 		add	r3, r3, #22
 3159 155a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3160 155c 07F5BE53 		add	r3, r7, #6080
 3161 1560 03F11303 		add	r3, r3, #19
 3162 1564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3163 1566 9A42     		cmp	r2, r3
 3164 1568 B7D3     		bcc	.L155
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3165              		.loc 1 555 0 is_stmt 1 discriminator 2
 3166 156a 07F5BE53 		add	r3, r7, #6080
 3167 156e 03F11703 		add	r3, r3, #23
 3168 1572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3169 1574 0133     		adds	r3, r3, #1
 3170 1576 07F5BE52 		add	r2, r7, #6080
 3171 157a 02F11702 		add	r2, r2, #23
 3172 157e 1370     		strb	r3, [r2]
 3173              	.L153:
 555:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3174              		.loc 1 555 0 is_stmt 0 discriminator 1
 3175 1580 07F5BE53 		add	r3, r7, #6080
 3176 1584 03F11503 		add	r3, r3, #21
 3177 1588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3178 158a 07F11803 		add	r3, r7, #24
 3179 158e 143B     		subs	r3, r3, #20
 3180 1590 1B68     		ldr	r3, [r3]
 3181 1592 1344     		add	r3, r3, r2
 3182 1594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3183 1596 07F5BE52 		add	r2, r7, #6080
 3184 159a 02F11702 		add	r2, r2, #23
 3185 159e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3186 15a0 9A42     		cmp	r2, r3
 3187 15a2 FFF451AF 		bcc	.L156
 559:..\src/command_processing.c ****                             }
 560:..\src/command_processing.c ****                         }
 561:..\src/command_processing.c ****                         break;
 3188              		.loc 1 561 0 is_stmt 1
 3189 15a6 00F090BF 		b	.L113
 3190              	.L119:
 562:..\src/command_processing.c ****                 
 563:..\src/command_processing.c ****                     case 11:        //Position limits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 84


 564:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3191              		.loc 1 564 0
 3192 15aa 07F5BE53 		add	r3, r7, #6080
 3193 15ae 03F10F03 		add	r3, r3, #15
 3194 15b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3195 15b4 6F49     		ldr	r1, .L295+4
 3196 15b6 1346     		mov	r3, r2
 3197 15b8 DB00     		lsls	r3, r3, #3
 3198 15ba 9B1A     		subs	r3, r3, r2
 3199 15bc 1B01     		lsls	r3, r3, #4
 3200 15be 0B44     		add	r3, r3, r1
 3201 15c0 E433     		adds	r3, r3, #228
 3202 15c2 1968     		ldr	r1, [r3]
 3203 15c4 07F5BE53 		add	r3, r7, #6080
 3204 15c8 03F10F03 		add	r3, r3, #15
 3205 15cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3206 15ce 6848     		ldr	r0, .L295
 3207 15d0 1346     		mov	r3, r2
 3208 15d2 DB00     		lsls	r3, r3, #3
 3209 15d4 9B1A     		subs	r3, r3, r2
 3210 15d6 1B01     		lsls	r3, r3, #4
 3211 15d8 0344     		add	r3, r3, r0
 3212 15da 03F58873 		add	r3, r3, #272
 3213 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3214 15e0 1846     		mov	r0, r3
 3215 15e2 644A     		ldr	r2, .L295+4
 3216 15e4 0346     		mov	r3, r0
 3217 15e6 5B00     		lsls	r3, r3, #1
 3218 15e8 0344     		add	r3, r3, r0
 3219 15ea 1B01     		lsls	r3, r3, #4
 3220 15ec 1344     		add	r3, r3, r2
 3221 15ee 03F29513 		addw	r3, r3, #405
 3222 15f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3223 15f4 41FA03F2 		asr	r2, r1, r3
 3224 15f8 07F11803 		add	r3, r7, #24
 3225 15fc 043B     		subs	r3, r3, #4
 3226 15fe 1A60     		str	r2, [r3]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3227              		.loc 1 565 0
 3228 1600 0023     		movs	r3, #0
 3229 1602 07F5BE52 		add	r2, r7, #6080
 3230 1606 02F11602 		add	r2, r2, #22
 3231 160a 1370     		strb	r3, [r2]
 3232 160c 2EE0     		b	.L157
 3233              	.L158:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3234              		.loc 1 566 0 discriminator 3
 3235 160e 07F5BE53 		add	r3, r7, #6080
 3236 1612 03F11503 		add	r3, r3, #21
 3237 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3238 1618 3222     		movs	r2, #50
 3239 161a 02FB03F3 		mul	r3, r2, r3
 3240 161e 1A1D     		adds	r2, r3, #4
 3241 1620 07F5BE53 		add	r3, r7, #6080
 3242 1624 03F11303 		add	r3, r3, #19
 3243 1628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3244 162a 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 85


 3245 162c 07F5BE53 		add	r3, r7, #6080
 3246 1630 03F11603 		add	r3, r3, #22
 3247 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3248 1636 D31A     		subs	r3, r2, r3
 3249 1638 5A1E     		subs	r2, r3, #1
 3250 163a 07F5BE53 		add	r3, r7, #6080
 3251 163e 03F11603 		add	r3, r3, #22
 3252 1642 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3253 1644 07F11803 		add	r3, r7, #24
 3254 1648 043B     		subs	r3, r3, #4
 3255 164a 0B44     		add	r3, r3, r1
 3256 164c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3257 164e 07F15803 		add	r3, r7, #88
 3258 1652 043B     		subs	r3, r3, #4
 3259 1654 9954     		strb	r1, [r3, r2]
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3260              		.loc 1 565 0 discriminator 3
 3261 1656 07F5BE53 		add	r3, r7, #6080
 3262 165a 03F11603 		add	r3, r3, #22
 3263 165e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3264 1660 0133     		adds	r3, r3, #1
 3265 1662 07F5BE52 		add	r2, r7, #6080
 3266 1666 02F11602 		add	r2, r2, #22
 3267 166a 1370     		strb	r3, [r2]
 3268              	.L157:
 565:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3269              		.loc 1 565 0 is_stmt 0 discriminator 1
 3270 166c 07F5BE53 		add	r3, r7, #6080
 3271 1670 03F11603 		add	r3, r3, #22
 3272 1674 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3273 1676 07F5BE53 		add	r3, r7, #6080
 3274 167a 03F11303 		add	r3, r3, #19
 3275 167e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3276 1680 9A42     		cmp	r2, r3
 3277 1682 C4D3     		bcc	.L158
 567:..\src/command_processing.c ****                         }
 568:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3278              		.loc 1 568 0 is_stmt 1
 3279 1684 07F5BE53 		add	r3, r7, #6080
 3280 1688 03F10F03 		add	r3, r3, #15
 3281 168c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3282 168e 3949     		ldr	r1, .L295+4
 3283 1690 1346     		mov	r3, r2
 3284 1692 DB00     		lsls	r3, r3, #3
 3285 1694 9B1A     		subs	r3, r3, r2
 3286 1696 1B01     		lsls	r3, r3, #4
 3287 1698 0B44     		add	r3, r3, r1
 3288 169a E833     		adds	r3, r3, #232
 3289 169c 1968     		ldr	r1, [r3]
 3290 169e 07F5BE53 		add	r3, r7, #6080
 3291 16a2 03F10F03 		add	r3, r3, #15
 3292 16a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3293 16a8 3148     		ldr	r0, .L295
 3294 16aa 1346     		mov	r3, r2
 3295 16ac DB00     		lsls	r3, r3, #3
 3296 16ae 9B1A     		subs	r3, r3, r2
 3297 16b0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 86


 3298 16b2 0344     		add	r3, r3, r0
 3299 16b4 03F58873 		add	r3, r3, #272
 3300 16b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3301 16ba 1846     		mov	r0, r3
 3302 16bc 2D4A     		ldr	r2, .L295+4
 3303 16be 0346     		mov	r3, r0
 3304 16c0 5B00     		lsls	r3, r3, #1
 3305 16c2 0344     		add	r3, r3, r0
 3306 16c4 1B01     		lsls	r3, r3, #4
 3307 16c6 1344     		add	r3, r3, r2
 3308 16c8 03F29513 		addw	r3, r3, #405
 3309 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3310 16ce 41FA03F2 		asr	r2, r1, r3
 3311 16d2 07F11803 		add	r3, r7, #24
 3312 16d6 043B     		subs	r3, r3, #4
 3313 16d8 1A60     		str	r2, [r3]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3314              		.loc 1 569 0
 3315 16da 0023     		movs	r3, #0
 3316 16dc 07F5BE52 		add	r2, r7, #6080
 3317 16e0 02F11602 		add	r2, r2, #22
 3318 16e4 1370     		strb	r3, [r2]
 3319 16e6 34E0     		b	.L159
 3320              	.L160:
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3321              		.loc 1 570 0 discriminator 3
 3322 16e8 07F5BE53 		add	r3, r7, #6080
 3323 16ec 03F11503 		add	r3, r3, #21
 3324 16f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3325 16f2 3222     		movs	r2, #50
 3326 16f4 02FB03F3 		mul	r3, r2, r3
 3327 16f8 1A1D     		adds	r2, r3, #4
 3328 16fa 07F5BE53 		add	r3, r7, #6080
 3329 16fe 03F11303 		add	r3, r3, #19
 3330 1702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3331 1704 1A44     		add	r2, r2, r3
 3332 1706 07F5BE53 		add	r3, r7, #6080
 3333 170a 03F11303 		add	r3, r3, #19
 3334 170e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3335 1710 1A44     		add	r2, r2, r3
 3336 1712 07F5BE53 		add	r3, r7, #6080
 3337 1716 03F11603 		add	r3, r3, #22
 3338 171a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3339 171c D31A     		subs	r3, r2, r3
 3340 171e 5A1E     		subs	r2, r3, #1
 3341 1720 07F5BE53 		add	r3, r7, #6080
 3342 1724 03F11603 		add	r3, r3, #22
 3343 1728 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3344 172a 07F11803 		add	r3, r7, #24
 3345 172e 043B     		subs	r3, r3, #4
 3346 1730 0B44     		add	r3, r3, r1
 3347 1732 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3348 1734 07F15803 		add	r3, r7, #88
 3349 1738 043B     		subs	r3, r3, #4
 3350 173a 9954     		strb	r1, [r3, r2]
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3351              		.loc 1 569 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 87


 3352 173c 07F5BE53 		add	r3, r7, #6080
 3353 1740 03F11603 		add	r3, r3, #22
 3354 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3355 1746 0133     		adds	r3, r3, #1
 3356 1748 07F5BE52 		add	r2, r7, #6080
 3357 174c 02F11602 		add	r2, r2, #22
 3358 1750 1370     		strb	r3, [r2]
 3359              	.L159:
 569:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3360              		.loc 1 569 0 is_stmt 0 discriminator 1
 3361 1752 07F5BE53 		add	r3, r7, #6080
 3362 1756 03F11603 		add	r3, r3, #22
 3363 175a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3364 175c 07F5BE53 		add	r3, r7, #6080
 3365 1760 03F11303 		add	r3, r3, #19
 3366 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3367 1766 9A42     		cmp	r2, r3
 3368 1768 BED3     		bcc	.L160
 571:..\src/command_processing.c ****                         }
 572:..\src/command_processing.c ****                         break;            
 3369              		.loc 1 572 0 is_stmt 1
 3370 176a 00F0AEBE 		b	.L113
 3371              	.L296:
 3372 176e 00BF     		.align	2
 3373              	.L295:
 3374 1770 00000000 		.word	g_mem
 3375 1774 00000000 		.word	c_mem
 3376              	.L120:
 573:..\src/command_processing.c **** 
 574:..\src/command_processing.c ****                     case 23:        //Rest Position
 575:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3377              		.loc 1 575 0
 3378 1778 CF4B     		ldr	r3, .L297
 3379 177a D3F8A012 		ldr	r1, [r3, #672]
 3380 177e 07F5BE53 		add	r3, r7, #6080
 3381 1782 03F10F03 		add	r3, r3, #15
 3382 1786 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3383 1788 CC48     		ldr	r0, .L297+4
 3384 178a 1346     		mov	r3, r2
 3385 178c DB00     		lsls	r3, r3, #3
 3386 178e 9B1A     		subs	r3, r3, r2
 3387 1790 1B01     		lsls	r3, r3, #4
 3388 1792 0344     		add	r3, r3, r0
 3389 1794 03F58873 		add	r3, r3, #272
 3390 1798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3391 179a 1846     		mov	r0, r3
 3392 179c C64A     		ldr	r2, .L297
 3393 179e 0346     		mov	r3, r0
 3394 17a0 5B00     		lsls	r3, r3, #1
 3395 17a2 0344     		add	r3, r3, r0
 3396 17a4 1B01     		lsls	r3, r3, #4
 3397 17a6 1344     		add	r3, r3, r2
 3398 17a8 03F29513 		addw	r3, r3, #405
 3399 17ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3400 17ae 41FA03F2 		asr	r2, r1, r3
 3401 17b2 07F11803 		add	r3, r7, #24
 3402 17b6 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 88


 3403 17b8 1A60     		str	r2, [r3]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3404              		.loc 1 576 0
 3405 17ba 0023     		movs	r3, #0
 3406 17bc 07F5BE52 		add	r2, r7, #6080
 3407 17c0 02F11602 		add	r2, r2, #22
 3408 17c4 1370     		strb	r3, [r2]
 3409 17c6 2EE0     		b	.L161
 3410              	.L162:
 577:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3411              		.loc 1 577 0 discriminator 3
 3412 17c8 07F5BE53 		add	r3, r7, #6080
 3413 17cc 03F11503 		add	r3, r3, #21
 3414 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3415 17d2 3222     		movs	r2, #50
 3416 17d4 02FB03F3 		mul	r3, r2, r3
 3417 17d8 1A1D     		adds	r2, r3, #4
 3418 17da 07F5BE53 		add	r3, r7, #6080
 3419 17de 03F11303 		add	r3, r3, #19
 3420 17e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3421 17e4 1A44     		add	r2, r2, r3
 3422 17e6 07F5BE53 		add	r3, r7, #6080
 3423 17ea 03F11603 		add	r3, r3, #22
 3424 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3425 17f0 D31A     		subs	r3, r2, r3
 3426 17f2 5A1E     		subs	r2, r3, #1
 3427 17f4 07F5BE53 		add	r3, r7, #6080
 3428 17f8 03F11603 		add	r3, r3, #22
 3429 17fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3430 17fe 07F11803 		add	r3, r7, #24
 3431 1802 043B     		subs	r3, r3, #4
 3432 1804 0B44     		add	r3, r3, r1
 3433 1806 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3434 1808 07F15803 		add	r3, r7, #88
 3435 180c 043B     		subs	r3, r3, #4
 3436 180e 9954     		strb	r1, [r3, r2]
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3437              		.loc 1 576 0 discriminator 3
 3438 1810 07F5BE53 		add	r3, r7, #6080
 3439 1814 03F11603 		add	r3, r3, #22
 3440 1818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 181a 0133     		adds	r3, r3, #1
 3442 181c 07F5BE52 		add	r2, r7, #6080
 3443 1820 02F11602 		add	r2, r2, #22
 3444 1824 1370     		strb	r3, [r2]
 3445              	.L161:
 576:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3446              		.loc 1 576 0 is_stmt 0 discriminator 1
 3447 1826 07F5BE53 		add	r3, r7, #6080
 3448 182a 03F11603 		add	r3, r3, #22
 3449 182e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3450 1830 07F5BE53 		add	r3, r7, #6080
 3451 1834 03F11303 		add	r3, r3, #19
 3452 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3453 183a 9A42     		cmp	r2, r3
 3454 183c C4D3     		bcc	.L162
 578:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 89


 579:..\src/command_processing.c ****                         break; 
 3455              		.loc 1 579 0 is_stmt 1
 3456 183e 00F044BE 		b	.L113
 3457              	.L121:
 580:..\src/command_processing.c ****                         
 581:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 582:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3458              		.loc 1 582 0
 3459 1842 07F5BE53 		add	r3, r7, #6080
 3460 1846 03F10E03 		add	r3, r3, #14
 3461 184a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3462 184c 9A49     		ldr	r1, .L297
 3463 184e 1346     		mov	r3, r2
 3464 1850 DB00     		lsls	r3, r3, #3
 3465 1852 9B1A     		subs	r3, r3, r2
 3466 1854 1B01     		lsls	r3, r3, #4
 3467 1856 0B44     		add	r3, r3, r1
 3468 1858 03F20F13 		addw	r3, r3, #271
 3469 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3470 185e 032B     		cmp	r3, #3
 3471 1860 00F02E81 		beq	.L163
 583:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3472              		.loc 1 583 0
 3473 1864 07F5BE53 		add	r3, r7, #6080
 3474 1868 03F10E03 		add	r3, r3, #14
 3475 186c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3476 186e 9249     		ldr	r1, .L297
 3477 1870 1346     		mov	r3, r2
 3478 1872 DB00     		lsls	r3, r3, #3
 3479 1874 9B1A     		subs	r3, r3, r2
 3480 1876 1B01     		lsls	r3, r3, #4
 3481 1878 0B44     		add	r3, r3, r1
 3482 187a B033     		adds	r3, r3, #176
 3483 187c 1B68     		ldr	r3, [r3]
 3484 187e 1846     		mov	r0, r3
 3485 1880 FFF7FEFF 		bl	__aeabi_i2f
 3486 1884 0346     		mov	r3, r0
 3487 1886 4FF08F41 		mov	r1, #1199570944
 3488 188a 1846     		mov	r0, r3
 3489 188c FFF7FEFF 		bl	__aeabi_fdiv
 3490 1890 0346     		mov	r3, r0
 3491 1892 1A46     		mov	r2, r3
 3492 1894 07F13803 		add	r3, r7, #56
 3493 1898 1C3B     		subs	r3, r3, #28
 3494 189a 1A60     		str	r2, [r3]	@ float
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3495              		.loc 1 584 0
 3496 189c 0023     		movs	r3, #0
 3497 189e 07F5BE52 		add	r2, r7, #6080
 3498 18a2 02F11702 		add	r2, r2, #23
 3499 18a6 1370     		strb	r3, [r2]
 3500 18a8 2EE0     		b	.L164
 3501              	.L165:
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3502              		.loc 1 585 0 discriminator 3
 3503 18aa 07F5BE53 		add	r3, r7, #6080
 3504 18ae 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 90


 3505 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3506 18b4 3222     		movs	r2, #50
 3507 18b6 02FB03F3 		mul	r3, r2, r3
 3508 18ba 1A1D     		adds	r2, r3, #4
 3509 18bc 07F5BE53 		add	r3, r7, #6080
 3510 18c0 03F11303 		add	r3, r3, #19
 3511 18c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3512 18c6 1A44     		add	r2, r2, r3
 3513 18c8 07F5BE53 		add	r3, r7, #6080
 3514 18cc 03F11703 		add	r3, r3, #23
 3515 18d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3516 18d2 D31A     		subs	r3, r2, r3
 3517 18d4 5A1E     		subs	r2, r3, #1
 3518 18d6 07F5BE53 		add	r3, r7, #6080
 3519 18da 03F11703 		add	r3, r3, #23
 3520 18de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3521 18e0 07F13803 		add	r3, r7, #56
 3522 18e4 1C3B     		subs	r3, r3, #28
 3523 18e6 0B44     		add	r3, r3, r1
 3524 18e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3525 18ea 07F15803 		add	r3, r7, #88
 3526 18ee 043B     		subs	r3, r3, #4
 3527 18f0 9954     		strb	r1, [r3, r2]
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3528              		.loc 1 584 0 discriminator 3
 3529 18f2 07F5BE53 		add	r3, r7, #6080
 3530 18f6 03F11703 		add	r3, r3, #23
 3531 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3532 18fc 0133     		adds	r3, r3, #1
 3533 18fe 07F5BE52 		add	r2, r7, #6080
 3534 1902 02F11702 		add	r2, r2, #23
 3535 1906 1370     		strb	r3, [r2]
 3536              	.L164:
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3537              		.loc 1 584 0 is_stmt 0 discriminator 1
 3538 1908 07F5BE53 		add	r3, r7, #6080
 3539 190c 03F11703 		add	r3, r3, #23
 3540 1910 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3541 1912 07F5BE53 		add	r3, r7, #6080
 3542 1916 03F11303 		add	r3, r3, #19
 3543 191a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3544 191c 9A42     		cmp	r2, r3
 3545 191e C4D3     		bcc	.L165
 586:..\src/command_processing.c ****                             }
 587:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3546              		.loc 1 587 0 is_stmt 1
 3547 1920 07F5BE53 		add	r3, r7, #6080
 3548 1924 03F10E03 		add	r3, r3, #14
 3549 1928 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3550 192a 6349     		ldr	r1, .L297
 3551 192c 1346     		mov	r3, r2
 3552 192e DB00     		lsls	r3, r3, #3
 3553 1930 9B1A     		subs	r3, r3, r2
 3554 1932 1B01     		lsls	r3, r3, #4
 3555 1934 0B44     		add	r3, r3, r1
 3556 1936 B433     		adds	r3, r3, #180
 3557 1938 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 91


 3558 193a 1846     		mov	r0, r3
 3559 193c FFF7FEFF 		bl	__aeabi_i2f
 3560 1940 0346     		mov	r3, r0
 3561 1942 4FF08F41 		mov	r1, #1199570944
 3562 1946 1846     		mov	r0, r3
 3563 1948 FFF7FEFF 		bl	__aeabi_fdiv
 3564 194c 0346     		mov	r3, r0
 3565 194e 1A46     		mov	r2, r3
 3566 1950 07F13803 		add	r3, r7, #56
 3567 1954 1C3B     		subs	r3, r3, #28
 3568 1956 1A60     		str	r2, [r3]	@ float
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3569              		.loc 1 588 0
 3570 1958 0023     		movs	r3, #0
 3571 195a 07F5BE52 		add	r2, r7, #6080
 3572 195e 02F11702 		add	r2, r2, #23
 3573 1962 1370     		strb	r3, [r2]
 3574 1964 34E0     		b	.L166
 3575              	.L167:
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3576              		.loc 1 589 0 discriminator 3
 3577 1966 07F5BE53 		add	r3, r7, #6080
 3578 196a 03F11503 		add	r3, r3, #21
 3579 196e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3580 1970 3222     		movs	r2, #50
 3581 1972 02FB03F3 		mul	r3, r2, r3
 3582 1976 1A1D     		adds	r2, r3, #4
 3583 1978 07F5BE53 		add	r3, r7, #6080
 3584 197c 03F11303 		add	r3, r3, #19
 3585 1980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3586 1982 1A44     		add	r2, r2, r3
 3587 1984 07F5BE53 		add	r3, r7, #6080
 3588 1988 03F11303 		add	r3, r3, #19
 3589 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3590 198e 1A44     		add	r2, r2, r3
 3591 1990 07F5BE53 		add	r3, r7, #6080
 3592 1994 03F11703 		add	r3, r3, #23
 3593 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3594 199a D31A     		subs	r3, r2, r3
 3595 199c 5A1E     		subs	r2, r3, #1
 3596 199e 07F5BE53 		add	r3, r7, #6080
 3597 19a2 03F11703 		add	r3, r3, #23
 3598 19a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3599 19a8 07F13803 		add	r3, r7, #56
 3600 19ac 1C3B     		subs	r3, r3, #28
 3601 19ae 0B44     		add	r3, r3, r1
 3602 19b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3603 19b2 07F15803 		add	r3, r7, #88
 3604 19b6 043B     		subs	r3, r3, #4
 3605 19b8 9954     		strb	r1, [r3, r2]
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3606              		.loc 1 588 0 discriminator 3
 3607 19ba 07F5BE53 		add	r3, r7, #6080
 3608 19be 03F11703 		add	r3, r3, #23
 3609 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3610 19c4 0133     		adds	r3, r3, #1
 3611 19c6 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 92


 3612 19ca 02F11702 		add	r2, r2, #23
 3613 19ce 1370     		strb	r3, [r2]
 3614              	.L166:
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3615              		.loc 1 588 0 is_stmt 0 discriminator 1
 3616 19d0 07F5BE53 		add	r3, r7, #6080
 3617 19d4 03F11703 		add	r3, r3, #23
 3618 19d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3619 19da 07F5BE53 		add	r3, r7, #6080
 3620 19de 03F11303 		add	r3, r3, #19
 3621 19e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3622 19e4 9A42     		cmp	r2, r3
 3623 19e6 BED3     		bcc	.L167
 590:..\src/command_processing.c ****                             }
 591:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3624              		.loc 1 591 0 is_stmt 1
 3625 19e8 07F5BE53 		add	r3, r7, #6080
 3626 19ec 03F10E03 		add	r3, r3, #14
 3627 19f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3628 19f2 3149     		ldr	r1, .L297
 3629 19f4 1346     		mov	r3, r2
 3630 19f6 DB00     		lsls	r3, r3, #3
 3631 19f8 9B1A     		subs	r3, r3, r2
 3632 19fa 1B01     		lsls	r3, r3, #4
 3633 19fc 0B44     		add	r3, r3, r1
 3634 19fe B833     		adds	r3, r3, #184
 3635 1a00 1B68     		ldr	r3, [r3]
 3636 1a02 1846     		mov	r0, r3
 3637 1a04 FFF7FEFF 		bl	__aeabi_i2f
 3638 1a08 0346     		mov	r3, r0
 3639 1a0a 4FF08F41 		mov	r1, #1199570944
 3640 1a0e 1846     		mov	r0, r3
 3641 1a10 FFF7FEFF 		bl	__aeabi_fdiv
 3642 1a14 0346     		mov	r3, r0
 3643 1a16 1A46     		mov	r2, r3
 3644 1a18 07F13803 		add	r3, r7, #56
 3645 1a1c 1C3B     		subs	r3, r3, #28
 3646 1a1e 1A60     		str	r2, [r3]	@ float
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3647              		.loc 1 592 0
 3648 1a20 0023     		movs	r3, #0
 3649 1a22 07F5BE52 		add	r2, r7, #6080
 3650 1a26 02F11702 		add	r2, r2, #23
 3651 1a2a 1370     		strb	r3, [r2]
 3652 1a2c 35E0     		b	.L168
 3653              	.L169:
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3654              		.loc 1 593 0 discriminator 3
 3655 1a2e 07F5BE53 		add	r3, r7, #6080
 3656 1a32 03F11503 		add	r3, r3, #21
 3657 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3658 1a38 3222     		movs	r2, #50
 3659 1a3a 02FB03F3 		mul	r3, r2, r3
 3660 1a3e 1A1D     		adds	r2, r3, #4
 3661 1a40 07F5BE53 		add	r3, r7, #6080
 3662 1a44 03F11303 		add	r3, r3, #19
 3663 1a48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 93


 3664 1a4a 5B00     		lsls	r3, r3, #1
 3665 1a4c 1A44     		add	r2, r2, r3
 3666 1a4e 07F5BE53 		add	r3, r7, #6080
 3667 1a52 03F11303 		add	r3, r3, #19
 3668 1a56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3669 1a58 1A44     		add	r2, r2, r3
 3670 1a5a 07F5BE53 		add	r3, r7, #6080
 3671 1a5e 03F11703 		add	r3, r3, #23
 3672 1a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3673 1a64 D31A     		subs	r3, r2, r3
 3674 1a66 5A1E     		subs	r2, r3, #1
 3675 1a68 07F5BE53 		add	r3, r7, #6080
 3676 1a6c 03F11703 		add	r3, r3, #23
 3677 1a70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3678 1a72 07F13803 		add	r3, r7, #56
 3679 1a76 1C3B     		subs	r3, r3, #28
 3680 1a78 0B44     		add	r3, r3, r1
 3681 1a7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3682 1a7c 07F15803 		add	r3, r7, #88
 3683 1a80 043B     		subs	r3, r3, #4
 3684 1a82 9954     		strb	r1, [r3, r2]
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3685              		.loc 1 592 0 discriminator 3
 3686 1a84 07F5BE53 		add	r3, r7, #6080
 3687 1a88 03F11703 		add	r3, r3, #23
 3688 1a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3689 1a8e 0133     		adds	r3, r3, #1
 3690 1a90 07F5BE52 		add	r2, r7, #6080
 3691 1a94 02F11702 		add	r2, r2, #23
 3692 1a98 1370     		strb	r3, [r2]
 3693              	.L168:
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3694              		.loc 1 592 0 is_stmt 0 discriminator 1
 3695 1a9a 07F5BE53 		add	r3, r7, #6080
 3696 1a9e 03F11703 		add	r3, r3, #23
 3697 1aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3698 1aa4 07F5BE53 		add	r3, r7, #6080
 3699 1aa8 03F11303 		add	r3, r3, #19
 3700 1aac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3701 1aae 9A42     		cmp	r2, r3
 3702 1ab0 BDD3     		bcc	.L169
 594:..\src/command_processing.c ****                             } 
 595:..\src/command_processing.c ****                         }
 596:..\src/command_processing.c ****                         else {
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 600:..\src/command_processing.c ****                             }
 601:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 604:..\src/command_processing.c ****                             }
 605:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 608:..\src/command_processing.c ****                             }
 609:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 94


 610:..\src/command_processing.c ****                         break;
 3703              		.loc 1 610 0 is_stmt 1
 3704 1ab2 00F00ABD 		b	.L113
 3705              	.L298:
 3706 1ab6 00BF     		.align	2
 3707              	.L297:
 3708 1ab8 00000000 		.word	c_mem
 3709 1abc 00000000 		.word	g_mem
 3710              	.L163:
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3711              		.loc 1 597 0
 3712 1ac0 07F5BE53 		add	r3, r7, #6080
 3713 1ac4 03F10E03 		add	r3, r3, #14
 3714 1ac8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3715 1aca AB49     		ldr	r1, .L299
 3716 1acc 1346     		mov	r3, r2
 3717 1ace DB00     		lsls	r3, r3, #3
 3718 1ad0 9B1A     		subs	r3, r3, r2
 3719 1ad2 1B01     		lsls	r3, r3, #4
 3720 1ad4 0B44     		add	r3, r3, r1
 3721 1ad6 C833     		adds	r3, r3, #200
 3722 1ad8 1B68     		ldr	r3, [r3]
 3723 1ada 1846     		mov	r0, r3
 3724 1adc FFF7FEFF 		bl	__aeabi_i2f
 3725 1ae0 0346     		mov	r3, r0
 3726 1ae2 4FF08F41 		mov	r1, #1199570944
 3727 1ae6 1846     		mov	r0, r3
 3728 1ae8 FFF7FEFF 		bl	__aeabi_fdiv
 3729 1aec 0346     		mov	r3, r0
 3730 1aee 1A46     		mov	r2, r3
 3731 1af0 07F13803 		add	r3, r7, #56
 3732 1af4 1C3B     		subs	r3, r3, #28
 3733 1af6 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3734              		.loc 1 598 0
 3735 1af8 0023     		movs	r3, #0
 3736 1afa 07F5BE52 		add	r2, r7, #6080
 3737 1afe 02F11702 		add	r2, r2, #23
 3738 1b02 1370     		strb	r3, [r2]
 3739 1b04 2EE0     		b	.L171
 3740              	.L172:
 599:..\src/command_processing.c ****                             }
 3741              		.loc 1 599 0 discriminator 3
 3742 1b06 07F5BE53 		add	r3, r7, #6080
 3743 1b0a 03F11503 		add	r3, r3, #21
 3744 1b0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3745 1b10 3222     		movs	r2, #50
 3746 1b12 02FB03F3 		mul	r3, r2, r3
 3747 1b16 1A1D     		adds	r2, r3, #4
 3748 1b18 07F5BE53 		add	r3, r7, #6080
 3749 1b1c 03F11303 		add	r3, r3, #19
 3750 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3751 1b22 1A44     		add	r2, r2, r3
 3752 1b24 07F5BE53 		add	r3, r7, #6080
 3753 1b28 03F11703 		add	r3, r3, #23
 3754 1b2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3755 1b2e D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 95


 3756 1b30 5A1E     		subs	r2, r3, #1
 3757 1b32 07F5BE53 		add	r3, r7, #6080
 3758 1b36 03F11703 		add	r3, r3, #23
 3759 1b3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3760 1b3c 07F13803 		add	r3, r7, #56
 3761 1b40 1C3B     		subs	r3, r3, #28
 3762 1b42 0B44     		add	r3, r3, r1
 3763 1b44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3764 1b46 07F15803 		add	r3, r7, #88
 3765 1b4a 043B     		subs	r3, r3, #4
 3766 1b4c 9954     		strb	r1, [r3, r2]
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3767              		.loc 1 598 0 discriminator 3
 3768 1b4e 07F5BE53 		add	r3, r7, #6080
 3769 1b52 03F11703 		add	r3, r3, #23
 3770 1b56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3771 1b58 0133     		adds	r3, r3, #1
 3772 1b5a 07F5BE52 		add	r2, r7, #6080
 3773 1b5e 02F11702 		add	r2, r2, #23
 3774 1b62 1370     		strb	r3, [r2]
 3775              	.L171:
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3776              		.loc 1 598 0 is_stmt 0 discriminator 1
 3777 1b64 07F5BE53 		add	r3, r7, #6080
 3778 1b68 03F11703 		add	r3, r3, #23
 3779 1b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3780 1b6e 07F5BE53 		add	r3, r7, #6080
 3781 1b72 03F11303 		add	r3, r3, #19
 3782 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3783 1b78 9A42     		cmp	r2, r3
 3784 1b7a C4D3     		bcc	.L172
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3785              		.loc 1 601 0 is_stmt 1
 3786 1b7c 07F5BE53 		add	r3, r7, #6080
 3787 1b80 03F10E03 		add	r3, r3, #14
 3788 1b84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3789 1b86 7C49     		ldr	r1, .L299
 3790 1b88 1346     		mov	r3, r2
 3791 1b8a DB00     		lsls	r3, r3, #3
 3792 1b8c 9B1A     		subs	r3, r3, r2
 3793 1b8e 1B01     		lsls	r3, r3, #4
 3794 1b90 0B44     		add	r3, r3, r1
 3795 1b92 CC33     		adds	r3, r3, #204
 3796 1b94 1B68     		ldr	r3, [r3]
 3797 1b96 1846     		mov	r0, r3
 3798 1b98 FFF7FEFF 		bl	__aeabi_i2f
 3799 1b9c 0346     		mov	r3, r0
 3800 1b9e 4FF08F41 		mov	r1, #1199570944
 3801 1ba2 1846     		mov	r0, r3
 3802 1ba4 FFF7FEFF 		bl	__aeabi_fdiv
 3803 1ba8 0346     		mov	r3, r0
 3804 1baa 1A46     		mov	r2, r3
 3805 1bac 07F13803 		add	r3, r7, #56
 3806 1bb0 1C3B     		subs	r3, r3, #28
 3807 1bb2 1A60     		str	r2, [r3]	@ float
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3808              		.loc 1 602 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 96


 3809 1bb4 0023     		movs	r3, #0
 3810 1bb6 07F5BE52 		add	r2, r7, #6080
 3811 1bba 02F11702 		add	r2, r2, #23
 3812 1bbe 1370     		strb	r3, [r2]
 3813 1bc0 34E0     		b	.L173
 3814              	.L174:
 603:..\src/command_processing.c ****                             }
 3815              		.loc 1 603 0 discriminator 3
 3816 1bc2 07F5BE53 		add	r3, r7, #6080
 3817 1bc6 03F11503 		add	r3, r3, #21
 3818 1bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3819 1bcc 3222     		movs	r2, #50
 3820 1bce 02FB03F3 		mul	r3, r2, r3
 3821 1bd2 1A1D     		adds	r2, r3, #4
 3822 1bd4 07F5BE53 		add	r3, r7, #6080
 3823 1bd8 03F11303 		add	r3, r3, #19
 3824 1bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3825 1bde 1A44     		add	r2, r2, r3
 3826 1be0 07F5BE53 		add	r3, r7, #6080
 3827 1be4 03F11303 		add	r3, r3, #19
 3828 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3829 1bea 1A44     		add	r2, r2, r3
 3830 1bec 07F5BE53 		add	r3, r7, #6080
 3831 1bf0 03F11703 		add	r3, r3, #23
 3832 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3833 1bf6 D31A     		subs	r3, r2, r3
 3834 1bf8 5A1E     		subs	r2, r3, #1
 3835 1bfa 07F5BE53 		add	r3, r7, #6080
 3836 1bfe 03F11703 		add	r3, r3, #23
 3837 1c02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3838 1c04 07F13803 		add	r3, r7, #56
 3839 1c08 1C3B     		subs	r3, r3, #28
 3840 1c0a 0B44     		add	r3, r3, r1
 3841 1c0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3842 1c0e 07F15803 		add	r3, r7, #88
 3843 1c12 043B     		subs	r3, r3, #4
 3844 1c14 9954     		strb	r1, [r3, r2]
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3845              		.loc 1 602 0 discriminator 3
 3846 1c16 07F5BE53 		add	r3, r7, #6080
 3847 1c1a 03F11703 		add	r3, r3, #23
 3848 1c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3849 1c20 0133     		adds	r3, r3, #1
 3850 1c22 07F5BE52 		add	r2, r7, #6080
 3851 1c26 02F11702 		add	r2, r2, #23
 3852 1c2a 1370     		strb	r3, [r2]
 3853              	.L173:
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3854              		.loc 1 602 0 is_stmt 0 discriminator 1
 3855 1c2c 07F5BE53 		add	r3, r7, #6080
 3856 1c30 03F11703 		add	r3, r3, #23
 3857 1c34 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3858 1c36 07F5BE53 		add	r3, r7, #6080
 3859 1c3a 03F11303 		add	r3, r3, #19
 3860 1c3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3861 1c40 9A42     		cmp	r2, r3
 3862 1c42 BED3     		bcc	.L174
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 97


 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3863              		.loc 1 605 0 is_stmt 1
 3864 1c44 07F5BE53 		add	r3, r7, #6080
 3865 1c48 03F10E03 		add	r3, r3, #14
 3866 1c4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3867 1c4e 4A49     		ldr	r1, .L299
 3868 1c50 1346     		mov	r3, r2
 3869 1c52 DB00     		lsls	r3, r3, #3
 3870 1c54 9B1A     		subs	r3, r3, r2
 3871 1c56 1B01     		lsls	r3, r3, #4
 3872 1c58 0B44     		add	r3, r3, r1
 3873 1c5a D033     		adds	r3, r3, #208
 3874 1c5c 1B68     		ldr	r3, [r3]
 3875 1c5e 1846     		mov	r0, r3
 3876 1c60 FFF7FEFF 		bl	__aeabi_i2f
 3877 1c64 0346     		mov	r3, r0
 3878 1c66 4FF08F41 		mov	r1, #1199570944
 3879 1c6a 1846     		mov	r0, r3
 3880 1c6c FFF7FEFF 		bl	__aeabi_fdiv
 3881 1c70 0346     		mov	r3, r0
 3882 1c72 1A46     		mov	r2, r3
 3883 1c74 07F13803 		add	r3, r7, #56
 3884 1c78 1C3B     		subs	r3, r3, #28
 3885 1c7a 1A60     		str	r2, [r3]	@ float
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3886              		.loc 1 606 0
 3887 1c7c 0023     		movs	r3, #0
 3888 1c7e 07F5BE52 		add	r2, r7, #6080
 3889 1c82 02F11702 		add	r2, r2, #23
 3890 1c86 1370     		strb	r3, [r2]
 3891 1c88 35E0     		b	.L175
 3892              	.L176:
 607:..\src/command_processing.c ****                             }
 3893              		.loc 1 607 0 discriminator 3
 3894 1c8a 07F5BE53 		add	r3, r7, #6080
 3895 1c8e 03F11503 		add	r3, r3, #21
 3896 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3897 1c94 3222     		movs	r2, #50
 3898 1c96 02FB03F3 		mul	r3, r2, r3
 3899 1c9a 1A1D     		adds	r2, r3, #4
 3900 1c9c 07F5BE53 		add	r3, r7, #6080
 3901 1ca0 03F11303 		add	r3, r3, #19
 3902 1ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3903 1ca6 5B00     		lsls	r3, r3, #1
 3904 1ca8 1A44     		add	r2, r2, r3
 3905 1caa 07F5BE53 		add	r3, r7, #6080
 3906 1cae 03F11303 		add	r3, r3, #19
 3907 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3908 1cb4 1A44     		add	r2, r2, r3
 3909 1cb6 07F5BE53 		add	r3, r7, #6080
 3910 1cba 03F11703 		add	r3, r3, #23
 3911 1cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3912 1cc0 D31A     		subs	r3, r2, r3
 3913 1cc2 5A1E     		subs	r2, r3, #1
 3914 1cc4 07F5BE53 		add	r3, r7, #6080
 3915 1cc8 03F11703 		add	r3, r3, #23
 3916 1ccc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 98


 3917 1cce 07F13803 		add	r3, r7, #56
 3918 1cd2 1C3B     		subs	r3, r3, #28
 3919 1cd4 0B44     		add	r3, r3, r1
 3920 1cd6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3921 1cd8 07F15803 		add	r3, r7, #88
 3922 1cdc 043B     		subs	r3, r3, #4
 3923 1cde 9954     		strb	r1, [r3, r2]
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3924              		.loc 1 606 0 discriminator 3
 3925 1ce0 07F5BE53 		add	r3, r7, #6080
 3926 1ce4 03F11703 		add	r3, r3, #23
 3927 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3928 1cea 0133     		adds	r3, r3, #1
 3929 1cec 07F5BE52 		add	r2, r7, #6080
 3930 1cf0 02F11702 		add	r2, r2, #23
 3931 1cf4 1370     		strb	r3, [r2]
 3932              	.L175:
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3933              		.loc 1 606 0 is_stmt 0 discriminator 1
 3934 1cf6 07F5BE53 		add	r3, r7, #6080
 3935 1cfa 03F11703 		add	r3, r3, #23
 3936 1cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3937 1d00 07F5BE53 		add	r3, r7, #6080
 3938 1d04 03F11303 		add	r3, r3, #19
 3939 1d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3940 1d0a 9A42     		cmp	r2, r3
 3941 1d0c BDD3     		bcc	.L176
 3942              		.loc 1 610 0 is_stmt 1
 3943 1d0e DCE3     		b	.L113
 3944              	.L122:
 611:..\src/command_processing.c ****                         
 612:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 613:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3945              		.loc 1 613 0
 3946 1d10 07F5BE53 		add	r3, r7, #6080
 3947 1d14 03F10E03 		add	r3, r3, #14
 3948 1d18 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3949 1d1a 1749     		ldr	r1, .L299
 3950 1d1c 1346     		mov	r3, r2
 3951 1d1e DB00     		lsls	r3, r3, #3
 3952 1d20 9B1A     		subs	r3, r3, r2
 3953 1d22 1B01     		lsls	r3, r3, #4
 3954 1d24 0B44     		add	r3, r3, r1
 3955 1d26 03F20F13 		addw	r3, r3, #271
 3956 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3957 1d2c 032B     		cmp	r3, #3
 3958 1d2e 00F02A81 		beq	.L177
 614:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3959              		.loc 1 614 0
 3960 1d32 07F5BE53 		add	r3, r7, #6080
 3961 1d36 03F10E03 		add	r3, r3, #14
 3962 1d3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3963 1d3c 0E49     		ldr	r1, .L299
 3964 1d3e 1346     		mov	r3, r2
 3965 1d40 DB00     		lsls	r3, r3, #3
 3966 1d42 9B1A     		subs	r3, r3, r2
 3967 1d44 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 99


 3968 1d46 0B44     		add	r3, r3, r1
 3969 1d48 BC33     		adds	r3, r3, #188
 3970 1d4a 1B68     		ldr	r3, [r3]
 3971 1d4c 1846     		mov	r0, r3
 3972 1d4e FFF7FEFF 		bl	__aeabi_i2f
 3973 1d52 0346     		mov	r3, r0
 3974 1d54 4FF08F41 		mov	r1, #1199570944
 3975 1d58 1846     		mov	r0, r3
 3976 1d5a FFF7FEFF 		bl	__aeabi_fdiv
 3977 1d5e 0346     		mov	r3, r0
 3978 1d60 1A46     		mov	r2, r3
 3979 1d62 07F13803 		add	r3, r7, #56
 3980 1d66 1C3B     		subs	r3, r3, #28
 3981 1d68 1A60     		str	r2, [r3]	@ float
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3982              		.loc 1 615 0
 3983 1d6a 0023     		movs	r3, #0
 3984 1d6c 07F5BE52 		add	r2, r7, #6080
 3985 1d70 02F11702 		add	r2, r2, #23
 3986 1d74 1370     		strb	r3, [r2]
 3987 1d76 30E0     		b	.L178
 3988              	.L300:
 3989              		.align	2
 3990              	.L299:
 3991 1d78 00000000 		.word	c_mem
 3992              	.L179:
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3993              		.loc 1 616 0 discriminator 3
 3994 1d7c 07F5BE53 		add	r3, r7, #6080
 3995 1d80 03F11503 		add	r3, r3, #21
 3996 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3997 1d86 3222     		movs	r2, #50
 3998 1d88 02FB03F3 		mul	r3, r2, r3
 3999 1d8c 1A1D     		adds	r2, r3, #4
 4000 1d8e 07F5BE53 		add	r3, r7, #6080
 4001 1d92 03F11303 		add	r3, r3, #19
 4002 1d96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4003 1d98 1A44     		add	r2, r2, r3
 4004 1d9a 07F5BE53 		add	r3, r7, #6080
 4005 1d9e 03F11703 		add	r3, r3, #23
 4006 1da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4007 1da4 D31A     		subs	r3, r2, r3
 4008 1da6 5A1E     		subs	r2, r3, #1
 4009 1da8 07F5BE53 		add	r3, r7, #6080
 4010 1dac 03F11703 		add	r3, r3, #23
 4011 1db0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4012 1db2 07F13803 		add	r3, r7, #56
 4013 1db6 1C3B     		subs	r3, r3, #28
 4014 1db8 0B44     		add	r3, r3, r1
 4015 1dba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4016 1dbc 07F15803 		add	r3, r7, #88
 4017 1dc0 043B     		subs	r3, r3, #4
 4018 1dc2 9954     		strb	r1, [r3, r2]
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4019              		.loc 1 615 0 discriminator 3
 4020 1dc4 07F5BE53 		add	r3, r7, #6080
 4021 1dc8 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 100


 4022 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4023 1dce 0133     		adds	r3, r3, #1
 4024 1dd0 07F5BE52 		add	r2, r7, #6080
 4025 1dd4 02F11702 		add	r2, r2, #23
 4026 1dd8 1370     		strb	r3, [r2]
 4027              	.L178:
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4028              		.loc 1 615 0 is_stmt 0 discriminator 1
 4029 1dda 07F5BE53 		add	r3, r7, #6080
 4030 1dde 03F11703 		add	r3, r3, #23
 4031 1de2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4032 1de4 07F5BE53 		add	r3, r7, #6080
 4033 1de8 03F11303 		add	r3, r3, #19
 4034 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4035 1dee 9A42     		cmp	r2, r3
 4036 1df0 C4D3     		bcc	.L179
 617:..\src/command_processing.c ****                             }
 618:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 4037              		.loc 1 618 0 is_stmt 1
 4038 1df2 07F5BE53 		add	r3, r7, #6080
 4039 1df6 03F10E03 		add	r3, r3, #14
 4040 1dfa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4041 1dfc A249     		ldr	r1, .L301
 4042 1dfe 1346     		mov	r3, r2
 4043 1e00 DB00     		lsls	r3, r3, #3
 4044 1e02 9B1A     		subs	r3, r3, r2
 4045 1e04 1B01     		lsls	r3, r3, #4
 4046 1e06 0B44     		add	r3, r3, r1
 4047 1e08 C033     		adds	r3, r3, #192
 4048 1e0a 1B68     		ldr	r3, [r3]
 4049 1e0c 1846     		mov	r0, r3
 4050 1e0e FFF7FEFF 		bl	__aeabi_i2f
 4051 1e12 0346     		mov	r3, r0
 4052 1e14 4FF08F41 		mov	r1, #1199570944
 4053 1e18 1846     		mov	r0, r3
 4054 1e1a FFF7FEFF 		bl	__aeabi_fdiv
 4055 1e1e 0346     		mov	r3, r0
 4056 1e20 1A46     		mov	r2, r3
 4057 1e22 07F13803 		add	r3, r7, #56
 4058 1e26 1C3B     		subs	r3, r3, #28
 4059 1e28 1A60     		str	r2, [r3]	@ float
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4060              		.loc 1 619 0
 4061 1e2a 0023     		movs	r3, #0
 4062 1e2c 07F5BE52 		add	r2, r7, #6080
 4063 1e30 02F11702 		add	r2, r2, #23
 4064 1e34 1370     		strb	r3, [r2]
 4065 1e36 34E0     		b	.L180
 4066              	.L181:
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4067              		.loc 1 620 0 discriminator 3
 4068 1e38 07F5BE53 		add	r3, r7, #6080
 4069 1e3c 03F11503 		add	r3, r3, #21
 4070 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4071 1e42 3222     		movs	r2, #50
 4072 1e44 02FB03F3 		mul	r3, r2, r3
 4073 1e48 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 101


 4074 1e4a 07F5BE53 		add	r3, r7, #6080
 4075 1e4e 03F11303 		add	r3, r3, #19
 4076 1e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4077 1e54 1A44     		add	r2, r2, r3
 4078 1e56 07F5BE53 		add	r3, r7, #6080
 4079 1e5a 03F11303 		add	r3, r3, #19
 4080 1e5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4081 1e60 1A44     		add	r2, r2, r3
 4082 1e62 07F5BE53 		add	r3, r7, #6080
 4083 1e66 03F11703 		add	r3, r3, #23
 4084 1e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4085 1e6c D31A     		subs	r3, r2, r3
 4086 1e6e 5A1E     		subs	r2, r3, #1
 4087 1e70 07F5BE53 		add	r3, r7, #6080
 4088 1e74 03F11703 		add	r3, r3, #23
 4089 1e78 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4090 1e7a 07F13803 		add	r3, r7, #56
 4091 1e7e 1C3B     		subs	r3, r3, #28
 4092 1e80 0B44     		add	r3, r3, r1
 4093 1e82 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4094 1e84 07F15803 		add	r3, r7, #88
 4095 1e88 043B     		subs	r3, r3, #4
 4096 1e8a 9954     		strb	r1, [r3, r2]
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4097              		.loc 1 619 0 discriminator 3
 4098 1e8c 07F5BE53 		add	r3, r7, #6080
 4099 1e90 03F11703 		add	r3, r3, #23
 4100 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4101 1e96 0133     		adds	r3, r3, #1
 4102 1e98 07F5BE52 		add	r2, r7, #6080
 4103 1e9c 02F11702 		add	r2, r2, #23
 4104 1ea0 1370     		strb	r3, [r2]
 4105              	.L180:
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4106              		.loc 1 619 0 is_stmt 0 discriminator 1
 4107 1ea2 07F5BE53 		add	r3, r7, #6080
 4108 1ea6 03F11703 		add	r3, r3, #23
 4109 1eaa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4110 1eac 07F5BE53 		add	r3, r7, #6080
 4111 1eb0 03F11303 		add	r3, r3, #19
 4112 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4113 1eb6 9A42     		cmp	r2, r3
 4114 1eb8 BED3     		bcc	.L181
 621:..\src/command_processing.c ****                             }
 622:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4115              		.loc 1 622 0 is_stmt 1
 4116 1eba 07F5BE53 		add	r3, r7, #6080
 4117 1ebe 03F10E03 		add	r3, r3, #14
 4118 1ec2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4119 1ec4 7049     		ldr	r1, .L301
 4120 1ec6 1346     		mov	r3, r2
 4121 1ec8 DB00     		lsls	r3, r3, #3
 4122 1eca 9B1A     		subs	r3, r3, r2
 4123 1ecc 1B01     		lsls	r3, r3, #4
 4124 1ece 0B44     		add	r3, r3, r1
 4125 1ed0 C433     		adds	r3, r3, #196
 4126 1ed2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 102


 4127 1ed4 1846     		mov	r0, r3
 4128 1ed6 FFF7FEFF 		bl	__aeabi_i2f
 4129 1eda 0346     		mov	r3, r0
 4130 1edc 4FF08F41 		mov	r1, #1199570944
 4131 1ee0 1846     		mov	r0, r3
 4132 1ee2 FFF7FEFF 		bl	__aeabi_fdiv
 4133 1ee6 0346     		mov	r3, r0
 4134 1ee8 1A46     		mov	r2, r3
 4135 1eea 07F13803 		add	r3, r7, #56
 4136 1eee 1C3B     		subs	r3, r3, #28
 4137 1ef0 1A60     		str	r2, [r3]	@ float
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4138              		.loc 1 623 0
 4139 1ef2 0023     		movs	r3, #0
 4140 1ef4 07F5BE52 		add	r2, r7, #6080
 4141 1ef8 02F11702 		add	r2, r2, #23
 4142 1efc 1370     		strb	r3, [r2]
 4143 1efe 35E0     		b	.L182
 4144              	.L183:
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4145              		.loc 1 624 0 discriminator 3
 4146 1f00 07F5BE53 		add	r3, r7, #6080
 4147 1f04 03F11503 		add	r3, r3, #21
 4148 1f08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4149 1f0a 3222     		movs	r2, #50
 4150 1f0c 02FB03F3 		mul	r3, r2, r3
 4151 1f10 1A1D     		adds	r2, r3, #4
 4152 1f12 07F5BE53 		add	r3, r7, #6080
 4153 1f16 03F11303 		add	r3, r3, #19
 4154 1f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4155 1f1c 5B00     		lsls	r3, r3, #1
 4156 1f1e 1A44     		add	r2, r2, r3
 4157 1f20 07F5BE53 		add	r3, r7, #6080
 4158 1f24 03F11303 		add	r3, r3, #19
 4159 1f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4160 1f2a 1A44     		add	r2, r2, r3
 4161 1f2c 07F5BE53 		add	r3, r7, #6080
 4162 1f30 03F11703 		add	r3, r3, #23
 4163 1f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4164 1f36 D31A     		subs	r3, r2, r3
 4165 1f38 5A1E     		subs	r2, r3, #1
 4166 1f3a 07F5BE53 		add	r3, r7, #6080
 4167 1f3e 03F11703 		add	r3, r3, #23
 4168 1f42 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4169 1f44 07F13803 		add	r3, r7, #56
 4170 1f48 1C3B     		subs	r3, r3, #28
 4171 1f4a 0B44     		add	r3, r3, r1
 4172 1f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4173 1f4e 07F15803 		add	r3, r7, #88
 4174 1f52 043B     		subs	r3, r3, #4
 4175 1f54 9954     		strb	r1, [r3, r2]
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4176              		.loc 1 623 0 discriminator 3
 4177 1f56 07F5BE53 		add	r3, r7, #6080
 4178 1f5a 03F11703 		add	r3, r3, #23
 4179 1f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4180 1f60 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 103


 4181 1f62 07F5BE52 		add	r2, r7, #6080
 4182 1f66 02F11702 		add	r2, r2, #23
 4183 1f6a 1370     		strb	r3, [r2]
 4184              	.L182:
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4185              		.loc 1 623 0 is_stmt 0 discriminator 1
 4186 1f6c 07F5BE53 		add	r3, r7, #6080
 4187 1f70 03F11703 		add	r3, r3, #23
 4188 1f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4189 1f76 07F5BE53 		add	r3, r7, #6080
 4190 1f7a 03F11303 		add	r3, r3, #19
 4191 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4192 1f80 9A42     		cmp	r2, r3
 4193 1f82 BDD3     		bcc	.L183
 625:..\src/command_processing.c ****                             }
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         else {
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 633:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 634:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 635:..\src/command_processing.c ****                             }
 636:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 637:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 638:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 639:..\src/command_processing.c ****                             }
 640:..\src/command_processing.c ****                         }            
 641:..\src/command_processing.c ****                         break;  
 4194              		.loc 1 641 0 is_stmt 1
 4195 1f84 A1E2     		b	.L113
 4196              	.L177:
 628:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4197              		.loc 1 628 0
 4198 1f86 07F5BE53 		add	r3, r7, #6080
 4199 1f8a 03F10E03 		add	r3, r3, #14
 4200 1f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4201 1f90 3D49     		ldr	r1, .L301
 4202 1f92 1346     		mov	r3, r2
 4203 1f94 DB00     		lsls	r3, r3, #3
 4204 1f96 9B1A     		subs	r3, r3, r2
 4205 1f98 1B01     		lsls	r3, r3, #4
 4206 1f9a 0B44     		add	r3, r3, r1
 4207 1f9c D433     		adds	r3, r3, #212
 4208 1f9e 1B68     		ldr	r3, [r3]
 4209 1fa0 1846     		mov	r0, r3
 4210 1fa2 FFF7FEFF 		bl	__aeabi_i2f
 4211 1fa6 0346     		mov	r3, r0
 4212 1fa8 4FF08F41 		mov	r1, #1199570944
 4213 1fac 1846     		mov	r0, r3
 4214 1fae FFF7FEFF 		bl	__aeabi_fdiv
 4215 1fb2 0346     		mov	r3, r0
 4216 1fb4 1A46     		mov	r2, r3
 4217 1fb6 07F13803 		add	r3, r7, #56
 4218 1fba 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 104


 4219 1fbc 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4220              		.loc 1 629 0
 4221 1fbe 0023     		movs	r3, #0
 4222 1fc0 07F5BE52 		add	r2, r7, #6080
 4223 1fc4 02F11702 		add	r2, r2, #23
 4224 1fc8 1370     		strb	r3, [r2]
 4225 1fca 2EE0     		b	.L185
 4226              	.L186:
 630:..\src/command_processing.c ****                             }
 4227              		.loc 1 630 0 discriminator 3
 4228 1fcc 07F5BE53 		add	r3, r7, #6080
 4229 1fd0 03F11503 		add	r3, r3, #21
 4230 1fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4231 1fd6 3222     		movs	r2, #50
 4232 1fd8 02FB03F3 		mul	r3, r2, r3
 4233 1fdc 1A1D     		adds	r2, r3, #4
 4234 1fde 07F5BE53 		add	r3, r7, #6080
 4235 1fe2 03F11303 		add	r3, r3, #19
 4236 1fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4237 1fe8 1A44     		add	r2, r2, r3
 4238 1fea 07F5BE53 		add	r3, r7, #6080
 4239 1fee 03F11703 		add	r3, r3, #23
 4240 1ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4241 1ff4 D31A     		subs	r3, r2, r3
 4242 1ff6 5A1E     		subs	r2, r3, #1
 4243 1ff8 07F5BE53 		add	r3, r7, #6080
 4244 1ffc 03F11703 		add	r3, r3, #23
 4245 2000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4246 2002 07F13803 		add	r3, r7, #56
 4247 2006 1C3B     		subs	r3, r3, #28
 4248 2008 0B44     		add	r3, r3, r1
 4249 200a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4250 200c 07F15803 		add	r3, r7, #88
 4251 2010 043B     		subs	r3, r3, #4
 4252 2012 9954     		strb	r1, [r3, r2]
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4253              		.loc 1 629 0 discriminator 3
 4254 2014 07F5BE53 		add	r3, r7, #6080
 4255 2018 03F11703 		add	r3, r3, #23
 4256 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4257 201e 0133     		adds	r3, r3, #1
 4258 2020 07F5BE52 		add	r2, r7, #6080
 4259 2024 02F11702 		add	r2, r2, #23
 4260 2028 1370     		strb	r3, [r2]
 4261              	.L185:
 629:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4262              		.loc 1 629 0 is_stmt 0 discriminator 1
 4263 202a 07F5BE53 		add	r3, r7, #6080
 4264 202e 03F11703 		add	r3, r3, #23
 4265 2032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4266 2034 07F5BE53 		add	r3, r7, #6080
 4267 2038 03F11303 		add	r3, r3, #19
 4268 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4269 203e 9A42     		cmp	r2, r3
 4270 2040 C4D3     		bcc	.L186
 632:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 105


 4271              		.loc 1 632 0 is_stmt 1
 4272 2042 07F5BE53 		add	r3, r7, #6080
 4273 2046 03F10E03 		add	r3, r3, #14
 4274 204a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4275 204c 0E49     		ldr	r1, .L301
 4276 204e 1346     		mov	r3, r2
 4277 2050 DB00     		lsls	r3, r3, #3
 4278 2052 9B1A     		subs	r3, r3, r2
 4279 2054 1B01     		lsls	r3, r3, #4
 4280 2056 0B44     		add	r3, r3, r1
 4281 2058 D833     		adds	r3, r3, #216
 4282 205a 1B68     		ldr	r3, [r3]
 4283 205c 1846     		mov	r0, r3
 4284 205e FFF7FEFF 		bl	__aeabi_i2f
 4285 2062 0346     		mov	r3, r0
 4286 2064 4FF08F41 		mov	r1, #1199570944
 4287 2068 1846     		mov	r0, r3
 4288 206a FFF7FEFF 		bl	__aeabi_fdiv
 4289 206e 0346     		mov	r3, r0
 4290 2070 1A46     		mov	r2, r3
 4291 2072 07F13803 		add	r3, r7, #56
 4292 2076 1C3B     		subs	r3, r3, #28
 4293 2078 1A60     		str	r2, [r3]	@ float
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4294              		.loc 1 633 0
 4295 207a 0023     		movs	r3, #0
 4296 207c 07F5BE52 		add	r2, r7, #6080
 4297 2080 02F11702 		add	r2, r2, #23
 4298 2084 1370     		strb	r3, [r2]
 4299 2086 36E0     		b	.L187
 4300              	.L302:
 4301              		.align	2
 4302              	.L301:
 4303 2088 00000000 		.word	c_mem
 4304              	.L188:
 634:..\src/command_processing.c ****                             }
 4305              		.loc 1 634 0 discriminator 3
 4306 208c 07F5BE53 		add	r3, r7, #6080
 4307 2090 03F11503 		add	r3, r3, #21
 4308 2094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4309 2096 3222     		movs	r2, #50
 4310 2098 02FB03F3 		mul	r3, r2, r3
 4311 209c 1A1D     		adds	r2, r3, #4
 4312 209e 07F5BE53 		add	r3, r7, #6080
 4313 20a2 03F11303 		add	r3, r3, #19
 4314 20a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4315 20a8 1A44     		add	r2, r2, r3
 4316 20aa 07F5BE53 		add	r3, r7, #6080
 4317 20ae 03F11303 		add	r3, r3, #19
 4318 20b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4319 20b4 1A44     		add	r2, r2, r3
 4320 20b6 07F5BE53 		add	r3, r7, #6080
 4321 20ba 03F11703 		add	r3, r3, #23
 4322 20be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4323 20c0 D31A     		subs	r3, r2, r3
 4324 20c2 5A1E     		subs	r2, r3, #1
 4325 20c4 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 106


 4326 20c8 03F11703 		add	r3, r3, #23
 4327 20cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4328 20ce 07F13803 		add	r3, r7, #56
 4329 20d2 1C3B     		subs	r3, r3, #28
 4330 20d4 0B44     		add	r3, r3, r1
 4331 20d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4332 20d8 07F15803 		add	r3, r7, #88
 4333 20dc 043B     		subs	r3, r3, #4
 4334 20de 9954     		strb	r1, [r3, r2]
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4335              		.loc 1 633 0 discriminator 3
 4336 20e0 07F5BE53 		add	r3, r7, #6080
 4337 20e4 03F11703 		add	r3, r3, #23
 4338 20e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4339 20ea 0133     		adds	r3, r3, #1
 4340 20ec 07F5BE52 		add	r2, r7, #6080
 4341 20f0 02F11702 		add	r2, r2, #23
 4342 20f4 1370     		strb	r3, [r2]
 4343              	.L187:
 633:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4344              		.loc 1 633 0 is_stmt 0 discriminator 1
 4345 20f6 07F5BE53 		add	r3, r7, #6080
 4346 20fa 03F11703 		add	r3, r3, #23
 4347 20fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4348 2100 07F5BE53 		add	r3, r7, #6080
 4349 2104 03F11303 		add	r3, r3, #19
 4350 2108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4351 210a 9A42     		cmp	r2, r3
 4352 210c BED3     		bcc	.L188
 636:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4353              		.loc 1 636 0 is_stmt 1
 4354 210e 07F5BE53 		add	r3, r7, #6080
 4355 2112 03F10E03 		add	r3, r3, #14
 4356 2116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4357 2118 C849     		ldr	r1, .L303
 4358 211a 1346     		mov	r3, r2
 4359 211c DB00     		lsls	r3, r3, #3
 4360 211e 9B1A     		subs	r3, r3, r2
 4361 2120 1B01     		lsls	r3, r3, #4
 4362 2122 0B44     		add	r3, r3, r1
 4363 2124 DC33     		adds	r3, r3, #220
 4364 2126 1B68     		ldr	r3, [r3]
 4365 2128 1846     		mov	r0, r3
 4366 212a FFF7FEFF 		bl	__aeabi_i2f
 4367 212e 0346     		mov	r3, r0
 4368 2130 4FF08F41 		mov	r1, #1199570944
 4369 2134 1846     		mov	r0, r3
 4370 2136 FFF7FEFF 		bl	__aeabi_fdiv
 4371 213a 0346     		mov	r3, r0
 4372 213c 1A46     		mov	r2, r3
 4373 213e 07F13803 		add	r3, r7, #56
 4374 2142 1C3B     		subs	r3, r3, #28
 4375 2144 1A60     		str	r2, [r3]	@ float
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4376              		.loc 1 637 0
 4377 2146 0023     		movs	r3, #0
 4378 2148 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 107


 4379 214c 02F11702 		add	r2, r2, #23
 4380 2150 1370     		strb	r3, [r2]
 4381 2152 35E0     		b	.L189
 4382              	.L190:
 638:..\src/command_processing.c ****                             }
 4383              		.loc 1 638 0 discriminator 3
 4384 2154 07F5BE53 		add	r3, r7, #6080
 4385 2158 03F11503 		add	r3, r3, #21
 4386 215c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4387 215e 3222     		movs	r2, #50
 4388 2160 02FB03F3 		mul	r3, r2, r3
 4389 2164 1A1D     		adds	r2, r3, #4
 4390 2166 07F5BE53 		add	r3, r7, #6080
 4391 216a 03F11303 		add	r3, r3, #19
 4392 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4393 2170 5B00     		lsls	r3, r3, #1
 4394 2172 1A44     		add	r2, r2, r3
 4395 2174 07F5BE53 		add	r3, r7, #6080
 4396 2178 03F11303 		add	r3, r3, #19
 4397 217c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4398 217e 1A44     		add	r2, r2, r3
 4399 2180 07F5BE53 		add	r3, r7, #6080
 4400 2184 03F11703 		add	r3, r3, #23
 4401 2188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4402 218a D31A     		subs	r3, r2, r3
 4403 218c 5A1E     		subs	r2, r3, #1
 4404 218e 07F5BE53 		add	r3, r7, #6080
 4405 2192 03F11703 		add	r3, r3, #23
 4406 2196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4407 2198 07F13803 		add	r3, r7, #56
 4408 219c 1C3B     		subs	r3, r3, #28
 4409 219e 0B44     		add	r3, r3, r1
 4410 21a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4411 21a2 07F15803 		add	r3, r7, #88
 4412 21a6 043B     		subs	r3, r3, #4
 4413 21a8 9954     		strb	r1, [r3, r2]
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4414              		.loc 1 637 0 discriminator 3
 4415 21aa 07F5BE53 		add	r3, r7, #6080
 4416 21ae 03F11703 		add	r3, r3, #23
 4417 21b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4418 21b4 0133     		adds	r3, r3, #1
 4419 21b6 07F5BE52 		add	r2, r7, #6080
 4420 21ba 02F11702 		add	r2, r2, #23
 4421 21be 1370     		strb	r3, [r2]
 4422              	.L189:
 637:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4423              		.loc 1 637 0 is_stmt 0 discriminator 1
 4424 21c0 07F5BE53 		add	r3, r7, #6080
 4425 21c4 03F11703 		add	r3, r3, #23
 4426 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4427 21ca 07F5BE53 		add	r3, r7, #6080
 4428 21ce 03F11303 		add	r3, r3, #19
 4429 21d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4430 21d4 9A42     		cmp	r2, r3
 4431 21d6 BDD3     		bcc	.L190
 4432              		.loc 1 641 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 108


 4433 21d8 77E1     		b	.L113
 4434              	.L123:
 642:..\src/command_processing.c **** 
 643:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 644:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4435              		.loc 1 644 0
 4436 21da 07F5BE53 		add	r3, r7, #6080
 4437 21de 03F10E03 		add	r3, r3, #14
 4438 21e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4439 21e4 9649     		ldr	r1, .L303+4
 4440 21e6 1346     		mov	r3, r2
 4441 21e8 DB00     		lsls	r3, r3, #3
 4442 21ea 9B1A     		subs	r3, r3, r2
 4443 21ec 1B01     		lsls	r3, r3, #4
 4444 21ee 0B44     		add	r3, r3, r1
 4445 21f0 03F58873 		add	r3, r3, #272
 4446 21f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4447 21f6 1846     		mov	r0, r3
 4448 21f8 07F5BE53 		add	r3, r7, #6080
 4449 21fc 03F11703 		add	r3, r3, #23
 4450 2200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4451 2202 8E49     		ldr	r1, .L303
 4452 2204 0346     		mov	r3, r0
 4453 2206 5B00     		lsls	r3, r3, #1
 4454 2208 0344     		add	r3, r3, r0
 4455 220a 9B00     		lsls	r3, r3, #2
 4456 220c 1344     		add	r3, r3, r2
 4457 220e 6633     		adds	r3, r3, #102
 4458 2210 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4459 2214 07F5BE53 		add	r3, r7, #6080
 4460 2218 03F10E03 		add	r3, r3, #14
 4461 221c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4462 221e 8848     		ldr	r0, .L303+4
 4463 2220 1346     		mov	r3, r2
 4464 2222 DB00     		lsls	r3, r3, #3
 4465 2224 9B1A     		subs	r3, r3, r2
 4466 2226 1B01     		lsls	r3, r3, #4
 4467 2228 0344     		add	r3, r3, r0
 4468 222a 03F58873 		add	r3, r3, #272
 4469 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4470 2230 1C46     		mov	r4, r3
 4471 2232 07F5BE53 		add	r3, r7, #6080
 4472 2236 03F11703 		add	r3, r3, #23
 4473 223a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4474 223c 7F48     		ldr	r0, .L303
 4475 223e 2346     		mov	r3, r4
 4476 2240 5B00     		lsls	r3, r3, #1
 4477 2242 2344     		add	r3, r3, r4
 4478 2244 1B01     		lsls	r3, r3, #4
 4479 2246 0344     		add	r3, r3, r0
 4480 2248 1344     		add	r3, r3, r2
 4481 224a 03F29513 		addw	r3, r3, #405
 4482 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4483 2250 41FA03F3 		asr	r3, r1, r3
 4484 2254 1AB2     		sxth	r2, r3
 4485 2256 07F13803 		add	r3, r7, #56
 4486 225a 1E3B     		subs	r3, r3, #30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 109


 4487 225c 1A80     		strh	r2, [r3]	@ movhi
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4488              		.loc 1 645 0
 4489 225e 0023     		movs	r3, #0
 4490 2260 07F5BE52 		add	r2, r7, #6080
 4491 2264 02F11602 		add	r2, r2, #22
 4492 2268 1370     		strb	r3, [r2]
 4493 226a 3BE0     		b	.L191
 4494              	.L192:
 646:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4495              		.loc 1 646 0 discriminator 3
 4496 226c 07F5BE53 		add	r3, r7, #6080
 4497 2270 03F11503 		add	r3, r3, #21
 4498 2274 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4499 2276 3222     		movs	r2, #50
 4500 2278 02FB03F3 		mul	r3, r2, r3
 4501 227c 1A1D     		adds	r2, r3, #4
 4502 227e 07F5BE53 		add	r3, r7, #6080
 4503 2282 03F11703 		add	r3, r3, #23
 4504 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4505 2288 07F5BE51 		add	r1, r7, #6080
 4506 228c 01F11301 		add	r1, r1, #19
 4507 2290 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4508 2292 01FB03F3 		mul	r3, r1, r3
 4509 2296 1A44     		add	r2, r2, r3
 4510 2298 07F5BE53 		add	r3, r7, #6080
 4511 229c 03F11303 		add	r3, r3, #19
 4512 22a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4513 22a2 1A44     		add	r2, r2, r3
 4514 22a4 07F5BE53 		add	r3, r7, #6080
 4515 22a8 03F11603 		add	r3, r3, #22
 4516 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4517 22ae D31A     		subs	r3, r2, r3
 4518 22b0 5A1E     		subs	r2, r3, #1
 4519 22b2 07F5BE53 		add	r3, r7, #6080
 4520 22b6 03F11603 		add	r3, r3, #22
 4521 22ba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4522 22bc 07F13803 		add	r3, r7, #56
 4523 22c0 1E3B     		subs	r3, r3, #30
 4524 22c2 0B44     		add	r3, r3, r1
 4525 22c4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4526 22c6 07F15803 		add	r3, r7, #88
 4527 22ca 043B     		subs	r3, r3, #4
 4528 22cc 9954     		strb	r1, [r3, r2]
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4529              		.loc 1 645 0 discriminator 3
 4530 22ce 07F5BE53 		add	r3, r7, #6080
 4531 22d2 03F11603 		add	r3, r3, #22
 4532 22d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4533 22d8 0133     		adds	r3, r3, #1
 4534 22da 07F5BE52 		add	r2, r7, #6080
 4535 22de 02F11602 		add	r2, r2, #22
 4536 22e2 1370     		strb	r3, [r2]
 4537              	.L191:
 645:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4538              		.loc 1 645 0 is_stmt 0 discriminator 1
 4539 22e4 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 110


 4540 22e8 03F11603 		add	r3, r3, #22
 4541 22ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4542 22ee 07F5BE53 		add	r3, r7, #6080
 4543 22f2 03F11303 		add	r3, r3, #19
 4544 22f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4545 22f8 9A42     		cmp	r2, r3
 4546 22fa B7D3     		bcc	.L192
 647:..\src/command_processing.c ****                         }
 648:..\src/command_processing.c ****                         break;
 4547              		.loc 1 648 0 is_stmt 1
 4548 22fc E5E0     		b	.L113
 4549              	.L124:
 649:..\src/command_processing.c ****                 
 650:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 651:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4550              		.loc 1 651 0
 4551 22fe 07F5BE53 		add	r3, r7, #6080
 4552 2302 03F10E03 		add	r3, r3, #14
 4553 2306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4554 2308 4C49     		ldr	r1, .L303
 4555 230a 1346     		mov	r3, r2
 4556 230c DB00     		lsls	r3, r3, #3
 4557 230e 9B1A     		subs	r3, r3, r2
 4558 2310 1B01     		lsls	r3, r3, #4
 4559 2312 0B44     		add	r3, r3, r1
 4560 2314 E433     		adds	r3, r3, #228
 4561 2316 1968     		ldr	r1, [r3]
 4562 2318 07F5BE53 		add	r3, r7, #6080
 4563 231c 03F10E03 		add	r3, r3, #14
 4564 2320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4565 2322 4748     		ldr	r0, .L303+4
 4566 2324 1346     		mov	r3, r2
 4567 2326 DB00     		lsls	r3, r3, #3
 4568 2328 9B1A     		subs	r3, r3, r2
 4569 232a 1B01     		lsls	r3, r3, #4
 4570 232c 0344     		add	r3, r3, r0
 4571 232e 03F58873 		add	r3, r3, #272
 4572 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4573 2334 1846     		mov	r0, r3
 4574 2336 414A     		ldr	r2, .L303
 4575 2338 0346     		mov	r3, r0
 4576 233a 5B00     		lsls	r3, r3, #1
 4577 233c 0344     		add	r3, r3, r0
 4578 233e 1B01     		lsls	r3, r3, #4
 4579 2340 1344     		add	r3, r3, r2
 4580 2342 03F29513 		addw	r3, r3, #405
 4581 2346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4582 2348 41FA03F2 		asr	r2, r1, r3
 4583 234c 07F11803 		add	r3, r7, #24
 4584 2350 043B     		subs	r3, r3, #4
 4585 2352 1A60     		str	r2, [r3]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4586              		.loc 1 652 0
 4587 2354 0023     		movs	r3, #0
 4588 2356 07F5BE52 		add	r2, r7, #6080
 4589 235a 02F11602 		add	r2, r2, #22
 4590 235e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 111


 4591 2360 2EE0     		b	.L193
 4592              	.L194:
 653:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4593              		.loc 1 653 0 discriminator 3
 4594 2362 07F5BE53 		add	r3, r7, #6080
 4595 2366 03F11503 		add	r3, r3, #21
 4596 236a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4597 236c 3222     		movs	r2, #50
 4598 236e 02FB03F3 		mul	r3, r2, r3
 4599 2372 1A1D     		adds	r2, r3, #4
 4600 2374 07F5BE53 		add	r3, r7, #6080
 4601 2378 03F11303 		add	r3, r3, #19
 4602 237c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4603 237e 1A44     		add	r2, r2, r3
 4604 2380 07F5BE53 		add	r3, r7, #6080
 4605 2384 03F11603 		add	r3, r3, #22
 4606 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4607 238a D31A     		subs	r3, r2, r3
 4608 238c 5A1E     		subs	r2, r3, #1
 4609 238e 07F5BE53 		add	r3, r7, #6080
 4610 2392 03F11603 		add	r3, r3, #22
 4611 2396 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4612 2398 07F11803 		add	r3, r7, #24
 4613 239c 043B     		subs	r3, r3, #4
 4614 239e 0B44     		add	r3, r3, r1
 4615 23a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4616 23a2 07F15803 		add	r3, r7, #88
 4617 23a6 043B     		subs	r3, r3, #4
 4618 23a8 9954     		strb	r1, [r3, r2]
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4619              		.loc 1 652 0 discriminator 3
 4620 23aa 07F5BE53 		add	r3, r7, #6080
 4621 23ae 03F11603 		add	r3, r3, #22
 4622 23b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4623 23b4 0133     		adds	r3, r3, #1
 4624 23b6 07F5BE52 		add	r2, r7, #6080
 4625 23ba 02F11602 		add	r2, r2, #22
 4626 23be 1370     		strb	r3, [r2]
 4627              	.L193:
 652:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4628              		.loc 1 652 0 is_stmt 0 discriminator 1
 4629 23c0 07F5BE53 		add	r3, r7, #6080
 4630 23c4 03F11603 		add	r3, r3, #22
 4631 23c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4632 23ca 07F5BE53 		add	r3, r7, #6080
 4633 23ce 03F11303 		add	r3, r3, #19
 4634 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4635 23d4 9A42     		cmp	r2, r3
 4636 23d6 C4D3     		bcc	.L194
 654:..\src/command_processing.c ****                         }
 655:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4637              		.loc 1 655 0 is_stmt 1
 4638 23d8 07F5BE53 		add	r3, r7, #6080
 4639 23dc 03F10E03 		add	r3, r3, #14
 4640 23e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4641 23e2 1649     		ldr	r1, .L303
 4642 23e4 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 112


 4643 23e6 DB00     		lsls	r3, r3, #3
 4644 23e8 9B1A     		subs	r3, r3, r2
 4645 23ea 1B01     		lsls	r3, r3, #4
 4646 23ec 0B44     		add	r3, r3, r1
 4647 23ee E833     		adds	r3, r3, #232
 4648 23f0 1968     		ldr	r1, [r3]
 4649 23f2 07F5BE53 		add	r3, r7, #6080
 4650 23f6 03F10E03 		add	r3, r3, #14
 4651 23fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4652 23fc 1048     		ldr	r0, .L303+4
 4653 23fe 1346     		mov	r3, r2
 4654 2400 DB00     		lsls	r3, r3, #3
 4655 2402 9B1A     		subs	r3, r3, r2
 4656 2404 1B01     		lsls	r3, r3, #4
 4657 2406 0344     		add	r3, r3, r0
 4658 2408 03F58873 		add	r3, r3, #272
 4659 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4660 240e 1846     		mov	r0, r3
 4661 2410 0A4A     		ldr	r2, .L303
 4662 2412 0346     		mov	r3, r0
 4663 2414 5B00     		lsls	r3, r3, #1
 4664 2416 0344     		add	r3, r3, r0
 4665 2418 1B01     		lsls	r3, r3, #4
 4666 241a 1344     		add	r3, r3, r2
 4667 241c 03F29513 		addw	r3, r3, #405
 4668 2420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4669 2422 41FA03F2 		asr	r2, r1, r3
 4670 2426 07F11803 		add	r3, r7, #24
 4671 242a 043B     		subs	r3, r3, #4
 4672 242c 1A60     		str	r2, [r3]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4673              		.loc 1 656 0
 4674 242e 0023     		movs	r3, #0
 4675 2430 07F5BE52 		add	r2, r7, #6080
 4676 2434 02F11602 		add	r2, r2, #22
 4677 2438 1370     		strb	r3, [r2]
 4678 243a 38E0     		b	.L195
 4679              	.L304:
 4680              		.align	2
 4681              	.L303:
 4682 243c 00000000 		.word	c_mem
 4683 2440 00000000 		.word	g_mem
 4684              	.L196:
 657:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4685              		.loc 1 657 0 discriminator 3
 4686 2444 07F5BE53 		add	r3, r7, #6080
 4687 2448 03F11503 		add	r3, r3, #21
 4688 244c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4689 244e 3222     		movs	r2, #50
 4690 2450 02FB03F3 		mul	r3, r2, r3
 4691 2454 1A1D     		adds	r2, r3, #4
 4692 2456 07F5BE53 		add	r3, r7, #6080
 4693 245a 03F11303 		add	r3, r3, #19
 4694 245e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4695 2460 1A44     		add	r2, r2, r3
 4696 2462 07F5BE53 		add	r3, r7, #6080
 4697 2466 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 113


 4698 246a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4699 246c 1A44     		add	r2, r2, r3
 4700 246e 07F5BE53 		add	r3, r7, #6080
 4701 2472 03F11603 		add	r3, r3, #22
 4702 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4703 2478 D31A     		subs	r3, r2, r3
 4704 247a 5A1E     		subs	r2, r3, #1
 4705 247c 07F5BE53 		add	r3, r7, #6080
 4706 2480 03F11603 		add	r3, r3, #22
 4707 2484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4708 2486 07F11803 		add	r3, r7, #24
 4709 248a 043B     		subs	r3, r3, #4
 4710 248c 0B44     		add	r3, r3, r1
 4711 248e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4712 2490 07F15803 		add	r3, r7, #88
 4713 2494 043B     		subs	r3, r3, #4
 4714 2496 9954     		strb	r1, [r3, r2]
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4715              		.loc 1 656 0 discriminator 3
 4716 2498 07F5BE53 		add	r3, r7, #6080
 4717 249c 03F11603 		add	r3, r3, #22
 4718 24a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4719 24a2 0133     		adds	r3, r3, #1
 4720 24a4 07F5BE52 		add	r2, r7, #6080
 4721 24a8 02F11602 		add	r2, r2, #22
 4722 24ac 1370     		strb	r3, [r2]
 4723              	.L195:
 656:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4724              		.loc 1 656 0 is_stmt 0 discriminator 1
 4725 24ae 07F5BE53 		add	r3, r7, #6080
 4726 24b2 03F11603 		add	r3, r3, #22
 4727 24b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4728 24b8 07F5BE53 		add	r3, r7, #6080
 4729 24bc 03F11303 		add	r3, r3, #19
 4730 24c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4731 24c2 9A42     		cmp	r2, r3
 4732 24c4 BED3     		bcc	.L196
 658:..\src/command_processing.c ****                         }
 659:..\src/command_processing.c ****                         break;
 4733              		.loc 1 659 0 is_stmt 1
 4734 24c6 00E0     		b	.L113
 4735              	.L283:
 660:..\src/command_processing.c ****                         
 661:..\src/command_processing.c ****                     default:
 662:..\src/command_processing.c ****                         break;
 4736              		.loc 1 662 0
 4737 24c8 00BF     		nop
 4738              	.L113:
 663:..\src/command_processing.c ****                 }
 664:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 665:..\src/command_processing.c ****                         
 666:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 667:..\src/command_processing.c ****         }
 668:..\src/command_processing.c ****         
 669:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4739              		.loc 1 669 0
 4740 24ca 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 114


 4741 24ce 03F11503 		add	r3, r3, #21
 4742 24d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4743 24d4 9B00     		lsls	r3, r3, #2
 4744 24d6 07F5BF52 		add	r2, r7, #6112
 4745 24da 02F11402 		add	r2, r2, #20
 4746 24de 1268     		ldr	r2, [r2]
 4747 24e0 1344     		add	r3, r3, r2
 4748 24e2 1A68     		ldr	r2, [r3]
 4749 24e4 07F13803 		add	r3, r7, #56
 4750 24e8 183B     		subs	r3, r3, #24
 4751 24ea 1146     		mov	r1, r2
 4752 24ec 1846     		mov	r0, r3
 4753 24ee FFF7FEFF 		bl	sprintf
 670:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4754              		.loc 1 670 0
 4755 24f2 07F13803 		add	r3, r7, #56
 4756 24f6 183B     		subs	r3, r3, #24
 4757 24f8 1846     		mov	r0, r3
 4758 24fa FFF7FEFF 		bl	strlen
 4759 24fe 0346     		mov	r3, r0
 4760 2500 07F5BE52 		add	r2, r7, #6080
 4761 2504 02F11202 		add	r2, r2, #18
 4762 2508 1370     		strb	r3, [r2]
 671:..\src/command_processing.c ****         
 672:..\src/command_processing.c ****         // Parameters with a menu
 673:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4763              		.loc 1 673 0
 4764 250a 07F5BE53 		add	r3, r7, #6080
 4765 250e 03F11503 		add	r3, r3, #21
 4766 2512 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4767 2514 07F11803 		add	r3, r7, #24
 4768 2518 103B     		subs	r3, r3, #16
 4769 251a 1B68     		ldr	r3, [r3]
 4770 251c 1344     		add	r3, r3, r2
 4771 251e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4772 2520 002B     		cmp	r3, #0
 4773 2522 40F0D984 		bne	.L197
 674:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4774              		.loc 1 674 0
 4775 2526 07F5BE53 		add	r3, r7, #6080
 4776 252a 03F11403 		add	r3, r3, #20
 4777 252e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4778 2530 07F5BF52 		add	r2, r7, #6112
 4779 2534 02F11002 		add	r2, r2, #16
 4780 2538 1268     		ldr	r2, [r2]
 4781 253a 1344     		add	r3, r3, r2
 4782 253c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4783 253e 013B     		subs	r3, r3, #1
 4784 2540 0B2B     		cmp	r3, #11
 4785 2542 00F2BB84 		bhi	.L198
 4786 2546 01A2     		adr	r2, .L200
 4787 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4788              		.p2align 2
 4789              	.L200:
 4790 254c 7D250000 		.word	.L199+1
 4791 2550 27270000 		.word	.L201+1
 4792 2554 FD270000 		.word	.L202+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 115


 4793 2558 51280000 		.word	.L203+1
 4794 255c B5280000 		.word	.L204+1
 4795 2560 11290000 		.word	.L205+1
 4796 2564 2D2A0000 		.word	.L206+1
 4797 2568 B52A0000 		.word	.L207+1
 4798 256c 492B0000 		.word	.L208+1
 4799 2570 F32B0000 		.word	.L209+1
 4800 2574 472D0000 		.word	.L210+1
 4801 2578 3B2E0000 		.word	.L211+1
 4802              		.p2align 1
 4803              	.L199:
 675:..\src/command_processing.c ****                 case 1:     // input mode menu
 676:..\src/command_processing.c ****                     switch(*m_addr) {
 4804              		.loc 1 676 0
 4805 257c 07F5BE53 		add	r3, r7, #6080
 4806 2580 03F10803 		add	r3, r3, #8
 4807 2584 1B68     		ldr	r3, [r3]
 4808 2586 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4809 2588 072B     		cmp	r3, #7
 4810 258a 00F29084 		bhi	.L284
 4811 258e 01A2     		adr	r2, .L214
 4812 2590 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4813              		.p2align 2
 4814              	.L214:
 4815 2594 B5250000 		.word	.L213+1
 4816 2598 D9250000 		.word	.L215+1
 4817 259c FF250000 		.word	.L216+1
 4818 25a0 2D260000 		.word	.L217+1
 4819 25a4 59260000 		.word	.L218+1
 4820 25a8 83260000 		.word	.L219+1
 4821 25ac B7260000 		.word	.L220+1
 4822 25b0 E1260000 		.word	.L221+1
 4823              		.p2align 1
 4824              	.L213:
 677:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 678:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4825              		.loc 1 678 0
 4826 25b4 07F13803 		add	r3, r7, #56
 4827 25b8 183B     		subs	r3, r3, #24
 4828 25ba 1846     		mov	r0, r3
 4829 25bc FFF7FEFF 		bl	strlen
 4830 25c0 0346     		mov	r3, r0
 4831 25c2 1A46     		mov	r2, r3
 4832 25c4 07F13803 		add	r3, r7, #56
 4833 25c8 183B     		subs	r3, r3, #24
 4834 25ca 1344     		add	r3, r3, r2
 4835 25cc DA4A     		ldr	r2, .L305
 4836 25ce 1068     		ldr	r0, [r2]	@ unaligned
 4837 25d0 1860     		str	r0, [r3]	@ unaligned
 4838 25d2 1279     		ldrb	r2, [r2, #4]
 4839 25d4 1A71     		strb	r2, [r3, #4]
 679:..\src/command_processing.c ****                         break;
 4840              		.loc 1 679 0
 4841 25d6 A5E0     		b	.L212
 4842              	.L215:
 680:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 681:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 116


 4843              		.loc 1 681 0
 4844 25d8 07F13803 		add	r3, r7, #56
 4845 25dc 183B     		subs	r3, r3, #24
 4846 25de 1846     		mov	r0, r3
 4847 25e0 FFF7FEFF 		bl	strlen
 4848 25e4 0346     		mov	r3, r0
 4849 25e6 1A46     		mov	r2, r3
 4850 25e8 07F13803 		add	r3, r7, #56
 4851 25ec 183B     		subs	r3, r3, #24
 4852 25ee 1344     		add	r3, r3, r2
 4853 25f0 D249     		ldr	r1, .L305+4
 4854 25f2 1A46     		mov	r2, r3
 4855 25f4 0B46     		mov	r3, r1
 4856 25f6 03CB     		ldmia	r3!, {r0, r1}
 4857 25f8 1060     		str	r0, [r2]	@ unaligned
 4858 25fa 5160     		str	r1, [r2, #4]	@ unaligned
 682:..\src/command_processing.c ****                         break;
 4859              		.loc 1 682 0
 4860 25fc 92E0     		b	.L212
 4861              	.L216:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 684:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4862              		.loc 1 684 0
 4863 25fe 07F13803 		add	r3, r7, #56
 4864 2602 183B     		subs	r3, r3, #24
 4865 2604 1846     		mov	r0, r3
 4866 2606 FFF7FEFF 		bl	strlen
 4867 260a 0346     		mov	r3, r0
 4868 260c 1A46     		mov	r2, r3
 4869 260e 07F13803 		add	r3, r7, #56
 4870 2612 183B     		subs	r3, r3, #24
 4871 2614 1344     		add	r3, r3, r2
 4872 2616 CA4A     		ldr	r2, .L305+8
 4873 2618 1D46     		mov	r5, r3
 4874 261a 1446     		mov	r4, r2
 4875 261c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4876 261e 2860     		str	r0, [r5]	@ unaligned
 4877 2620 6960     		str	r1, [r5, #4]	@ unaligned
 4878 2622 AA60     		str	r2, [r5, #8]	@ unaligned
 4879 2624 EB60     		str	r3, [r5, #12]	@ unaligned
 4880 2626 2388     		ldrh	r3, [r4]	@ unaligned
 4881 2628 2B82     		strh	r3, [r5, #16]	@ unaligned
 685:..\src/command_processing.c ****                         break;
 4882              		.loc 1 685 0
 4883 262a 7BE0     		b	.L212
 4884              	.L217:
 686:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 687:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4885              		.loc 1 687 0
 4886 262c 07F13803 		add	r3, r7, #56
 4887 2630 183B     		subs	r3, r3, #24
 4888 2632 1846     		mov	r0, r3
 4889 2634 FFF7FEFF 		bl	strlen
 4890 2638 0346     		mov	r3, r0
 4891 263a 1A46     		mov	r2, r3
 4892 263c 07F13803 		add	r3, r7, #56
 4893 2640 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 117


 4894 2642 1344     		add	r3, r3, r2
 4895 2644 BF4A     		ldr	r2, .L305+12
 4896 2646 1C46     		mov	r4, r3
 4897 2648 1346     		mov	r3, r2
 4898 264a 07CB     		ldmia	r3!, {r0, r1, r2}
 4899 264c 2060     		str	r0, [r4]	@ unaligned
 4900 264e 6160     		str	r1, [r4, #4]	@ unaligned
 4901 2650 A260     		str	r2, [r4, #8]	@ unaligned
 4902 2652 1B88     		ldrh	r3, [r3]	@ unaligned
 4903 2654 A381     		strh	r3, [r4, #12]	@ unaligned
 688:..\src/command_processing.c ****                         break;
 4904              		.loc 1 688 0
 4905 2656 65E0     		b	.L212
 4906              	.L218:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4907              		.loc 1 690 0
 4908 2658 07F13803 		add	r3, r7, #56
 4909 265c 183B     		subs	r3, r3, #24
 4910 265e 1846     		mov	r0, r3
 4911 2660 FFF7FEFF 		bl	strlen
 4912 2664 0346     		mov	r3, r0
 4913 2666 1A46     		mov	r2, r3
 4914 2668 07F13803 		add	r3, r7, #56
 4915 266c 183B     		subs	r3, r3, #24
 4916 266e 1344     		add	r3, r3, r2
 4917 2670 B549     		ldr	r1, .L305+16
 4918 2672 1A46     		mov	r2, r3
 4919 2674 0B46     		mov	r3, r1
 4920 2676 03CB     		ldmia	r3!, {r0, r1}
 4921 2678 1060     		str	r0, [r2]	@ unaligned
 4922 267a 5160     		str	r1, [r2, #4]	@ unaligned
 4923 267c 1B88     		ldrh	r3, [r3]	@ unaligned
 4924 267e 1381     		strh	r3, [r2, #8]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 4925              		.loc 1 691 0
 4926 2680 50E0     		b	.L212
 4927              	.L219:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4928              		.loc 1 693 0
 4929 2682 07F13803 		add	r3, r7, #56
 4930 2686 183B     		subs	r3, r3, #24
 4931 2688 1846     		mov	r0, r3
 4932 268a FFF7FEFF 		bl	strlen
 4933 268e 0346     		mov	r3, r0
 4934 2690 1A46     		mov	r2, r3
 4935 2692 07F13803 		add	r3, r7, #56
 4936 2696 183B     		subs	r3, r3, #24
 4937 2698 1344     		add	r3, r3, r2
 4938 269a AC4A     		ldr	r2, .L305+20
 4939 269c 1D46     		mov	r5, r3
 4940 269e 1446     		mov	r4, r2
 4941 26a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4942 26a2 2860     		str	r0, [r5]	@ unaligned
 4943 26a4 6960     		str	r1, [r5, #4]	@ unaligned
 4944 26a6 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 118


 4945 26a8 EB60     		str	r3, [r5, #12]	@ unaligned
 4946 26aa 2388     		ldrh	r3, [r4]	@ unaligned
 4947 26ac A278     		ldrb	r2, [r4, #2]
 4948 26ae 2B82     		strh	r3, [r5, #16]	@ unaligned
 4949 26b0 1346     		mov	r3, r2
 4950 26b2 AB74     		strb	r3, [r5, #18]
 694:..\src/command_processing.c ****                         break;
 4951              		.loc 1 694 0
 4952 26b4 36E0     		b	.L212
 4953              	.L220:
 695:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 696:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4954              		.loc 1 696 0
 4955 26b6 07F13803 		add	r3, r7, #56
 4956 26ba 183B     		subs	r3, r3, #24
 4957 26bc 1846     		mov	r0, r3
 4958 26be FFF7FEFF 		bl	strlen
 4959 26c2 0346     		mov	r3, r0
 4960 26c4 1A46     		mov	r2, r3
 4961 26c6 07F13803 		add	r3, r7, #56
 4962 26ca 183B     		subs	r3, r3, #24
 4963 26cc 1344     		add	r3, r3, r2
 4964 26ce A049     		ldr	r1, .L305+24
 4965 26d0 1A46     		mov	r2, r3
 4966 26d2 0B46     		mov	r3, r1
 4967 26d4 03CB     		ldmia	r3!, {r0, r1}
 4968 26d6 1060     		str	r0, [r2]	@ unaligned
 4969 26d8 5160     		str	r1, [r2, #4]	@ unaligned
 4970 26da 1B88     		ldrh	r3, [r3]	@ unaligned
 4971 26dc 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 4972              		.loc 1 697 0
 4973 26de 21E0     		b	.L212
 4974              	.L221:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4975              		.loc 1 699 0
 4976 26e0 07F13803 		add	r3, r7, #56
 4977 26e4 183B     		subs	r3, r3, #24
 4978 26e6 1846     		mov	r0, r3
 4979 26e8 FFF7FEFF 		bl	strlen
 4980 26ec 0346     		mov	r3, r0
 4981 26ee 1A46     		mov	r2, r3
 4982 26f0 07F13803 		add	r3, r7, #56
 4983 26f4 183B     		subs	r3, r3, #24
 4984 26f6 1344     		add	r3, r3, r2
 4985 26f8 964A     		ldr	r2, .L305+28
 4986 26fa 1446     		mov	r4, r2
 4987 26fc 9E46     		mov	lr, r3
 4988 26fe 04F1200C 		add	ip, r4, #32
 4989              	.L222:
 4990 2702 7546     		mov	r5, lr
 4991 2704 2646     		mov	r6, r4
 4992 2706 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4993 2708 2860     		str	r0, [r5]	@ unaligned
 4994 270a 6960     		str	r1, [r5, #4]	@ unaligned
 4995 270c AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 119


 4996 270e EB60     		str	r3, [r5, #12]	@ unaligned
 4997 2710 1034     		adds	r4, r4, #16
 4998 2712 0EF1100E 		add	lr, lr, #16
 4999 2716 6445     		cmp	r4, ip
 5000 2718 F3D1     		bne	.L222
 5001 271a 7246     		mov	r2, lr
 5002 271c 2346     		mov	r3, r4
 5003 271e 1B88     		ldrh	r3, [r3]	@ unaligned
 5004 2720 1380     		strh	r3, [r2]	@ unaligned
 700:..\src/command_processing.c ****                         break;
 5005              		.loc 1 700 0
 5006 2722 00BF     		nop
 5007              	.L212:
 701:..\src/command_processing.c ****                     }
 702:..\src/command_processing.c ****                     break;
 5008              		.loc 1 702 0
 5009 2724 C3E3     		b	.L284
 5010              	.L201:
 703:..\src/command_processing.c ****                 case 2:     // control mode menu
 704:..\src/command_processing.c ****                     switch(*m_addr){
 5011              		.loc 1 704 0
 5012 2726 07F5BE53 		add	r3, r7, #6080
 5013 272a 03F10803 		add	r3, r3, #8
 5014 272e 1B68     		ldr	r3, [r3]
 5015 2730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5016 2732 032B     		cmp	r3, #3
 5017 2734 00F2BD83 		bhi	.L285
 5018 2738 01A2     		adr	r2, .L225
 5019 273a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5020 273e 00BF     		.p2align 2
 5021              	.L225:
 5022 2740 51270000 		.word	.L224+1
 5023 2744 7B270000 		.word	.L226+1
 5024 2748 9F270000 		.word	.L227+1
 5025 274c C9270000 		.word	.L228+1
 5026              		.p2align 1
 5027              	.L224:
 705:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 706:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 5028              		.loc 1 706 0
 5029 2750 07F13803 		add	r3, r7, #56
 5030 2754 183B     		subs	r3, r3, #24
 5031 2756 1846     		mov	r0, r3
 5032 2758 FFF7FEFF 		bl	strlen
 5033 275c 0346     		mov	r3, r0
 5034 275e 1A46     		mov	r2, r3
 5035 2760 07F13803 		add	r3, r7, #56
 5036 2764 183B     		subs	r3, r3, #24
 5037 2766 1344     		add	r3, r3, r2
 5038 2768 7B49     		ldr	r1, .L305+32
 5039 276a 1A46     		mov	r2, r3
 5040 276c 0B46     		mov	r3, r1
 5041 276e 03CB     		ldmia	r3!, {r0, r1}
 5042 2770 1060     		str	r0, [r2]	@ unaligned
 5043 2772 5160     		str	r1, [r2, #4]	@ unaligned
 5044 2774 1B88     		ldrh	r3, [r3]	@ unaligned
 5045 2776 1381     		strh	r3, [r2, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 120


 707:..\src/command_processing.c ****                         break;
 5046              		.loc 1 707 0
 5047 2778 3FE0     		b	.L223
 5048              	.L226:
 708:..\src/command_processing.c ****                         case CONTROL_PWM:
 709:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 5049              		.loc 1 709 0
 5050 277a 07F13803 		add	r3, r7, #56
 5051 277e 183B     		subs	r3, r3, #24
 5052 2780 1846     		mov	r0, r3
 5053 2782 FFF7FEFF 		bl	strlen
 5054 2786 0346     		mov	r3, r0
 5055 2788 1A46     		mov	r2, r3
 5056 278a 07F13803 		add	r3, r7, #56
 5057 278e 183B     		subs	r3, r3, #24
 5058 2790 1344     		add	r3, r3, r2
 5059 2792 724A     		ldr	r2, .L305+36
 5060 2794 1068     		ldr	r0, [r2]	@ unaligned
 5061 2796 1860     		str	r0, [r3]	@ unaligned
 5062 2798 1279     		ldrb	r2, [r2, #4]
 5063 279a 1A71     		strb	r2, [r3, #4]
 710:..\src/command_processing.c ****                         break;
 5064              		.loc 1 710 0
 5065 279c 2DE0     		b	.L223
 5066              	.L227:
 711:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 5067              		.loc 1 712 0
 5068 279e 07F13803 		add	r3, r7, #56
 5069 27a2 183B     		subs	r3, r3, #24
 5070 27a4 1846     		mov	r0, r3
 5071 27a6 FFF7FEFF 		bl	strlen
 5072 27aa 0346     		mov	r3, r0
 5073 27ac 1A46     		mov	r2, r3
 5074 27ae 07F13803 		add	r3, r7, #56
 5075 27b2 183B     		subs	r3, r3, #24
 5076 27b4 1344     		add	r3, r3, r2
 5077 27b6 6A49     		ldr	r1, .L305+40
 5078 27b8 1A46     		mov	r2, r3
 5079 27ba 0B46     		mov	r3, r1
 5080 27bc 03CB     		ldmia	r3!, {r0, r1}
 5081 27be 1060     		str	r0, [r2]	@ unaligned
 5082 27c0 5160     		str	r1, [r2, #4]	@ unaligned
 5083 27c2 1B78     		ldrb	r3, [r3]
 5084 27c4 1372     		strb	r3, [r2, #8]
 713:..\src/command_processing.c ****                         break;
 5085              		.loc 1 713 0
 5086 27c6 18E0     		b	.L223
 5087              	.L228:
 714:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 715:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5088              		.loc 1 715 0
 5089 27c8 07F13803 		add	r3, r7, #56
 5090 27cc 183B     		subs	r3, r3, #24
 5091 27ce 1846     		mov	r0, r3
 5092 27d0 FFF7FEFF 		bl	strlen
 5093 27d4 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 121


 5094 27d6 1A46     		mov	r2, r3
 5095 27d8 07F13803 		add	r3, r7, #56
 5096 27dc 183B     		subs	r3, r3, #24
 5097 27de 1344     		add	r3, r3, r2
 5098 27e0 604A     		ldr	r2, .L305+44
 5099 27e2 1D46     		mov	r5, r3
 5100 27e4 1446     		mov	r4, r2
 5101 27e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5102 27e8 2860     		str	r0, [r5]	@ unaligned
 5103 27ea 6960     		str	r1, [r5, #4]	@ unaligned
 5104 27ec AA60     		str	r2, [r5, #8]	@ unaligned
 5105 27ee EB60     		str	r3, [r5, #12]	@ unaligned
 5106 27f0 2068     		ldr	r0, [r4]	@ unaligned
 5107 27f2 2861     		str	r0, [r5, #16]	@ unaligned
 5108 27f4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5109 27f6 AB82     		strh	r3, [r5, #20]	@ unaligned
 716:..\src/command_processing.c ****                         break;
 5110              		.loc 1 716 0
 5111 27f8 00BF     		nop
 5112              	.L223:
 717:..\src/command_processing.c ****                     }
 718:..\src/command_processing.c ****                     break;
 5113              		.loc 1 718 0
 5114 27fa 5AE3     		b	.L285
 5115              	.L202:
 719:..\src/command_processing.c ****                 case 3:     // yes/no menu
 720:..\src/command_processing.c ****                     if(*m_addr){
 5116              		.loc 1 720 0
 5117 27fc 07F5BE53 		add	r3, r7, #6080
 5118 2800 03F10803 		add	r3, r3, #8
 5119 2804 1B68     		ldr	r3, [r3]
 5120 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5121 2808 002B     		cmp	r3, #0
 5122 280a 11D0     		beq	.L229
 721:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5123              		.loc 1 721 0
 5124 280c 07F13803 		add	r3, r7, #56
 5125 2810 183B     		subs	r3, r3, #24
 5126 2812 1846     		mov	r0, r3
 5127 2814 FFF7FEFF 		bl	strlen
 5128 2818 0346     		mov	r3, r0
 5129 281a 1A46     		mov	r2, r3
 5130 281c 07F13803 		add	r3, r7, #56
 5131 2820 183B     		subs	r3, r3, #24
 5132 2822 1344     		add	r3, r3, r2
 5133 2824 504A     		ldr	r2, .L305+48
 5134 2826 1068     		ldr	r0, [r2]	@ unaligned
 5135 2828 1860     		str	r0, [r3]	@ unaligned
 5136 282a 1279     		ldrb	r2, [r2, #4]
 5137 282c 1A71     		strb	r2, [r3, #4]
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     else {
 724:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 725:..\src/command_processing.c ****                     }
 726:..\src/command_processing.c ****                     break;    
 5138              		.loc 1 726 0
 5139 282e 45E3     		b	.L198
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 122


 5140              	.L229:
 724:..\src/command_processing.c ****                     }
 5141              		.loc 1 724 0
 5142 2830 07F13803 		add	r3, r7, #56
 5143 2834 183B     		subs	r3, r3, #24
 5144 2836 1846     		mov	r0, r3
 5145 2838 FFF7FEFF 		bl	strlen
 5146 283c 0346     		mov	r3, r0
 5147 283e 1A46     		mov	r2, r3
 5148 2840 07F13803 		add	r3, r7, #56
 5149 2844 183B     		subs	r3, r3, #24
 5150 2846 1344     		add	r3, r3, r2
 5151 2848 484A     		ldr	r2, .L305+52
 5152 284a 1068     		ldr	r0, [r2]	@ unaligned
 5153 284c 1860     		str	r0, [r3]	@ unaligned
 5154              		.loc 1 726 0
 5155 284e 35E3     		b	.L198
 5156              	.L203:
 727:..\src/command_processing.c ****                 case 4:     // right/lef menu
 728:..\src/command_processing.c ****                     switch(*m_addr){
 5157              		.loc 1 728 0
 5158 2850 07F5BE53 		add	r3, r7, #6080
 5159 2854 03F10803 		add	r3, r3, #8
 5160 2858 1B68     		ldr	r3, [r3]
 5161 285a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5162 285c 002B     		cmp	r3, #0
 5163 285e 02D0     		beq	.L232
 5164 2860 012B     		cmp	r3, #1
 5165 2862 14D0     		beq	.L233
 729:..\src/command_processing.c ****                         case RIGHT_HAND:
 730:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 731:..\src/command_processing.c ****                         break;
 732:..\src/command_processing.c ****                         case LEFT_HAND:
 733:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 734:..\src/command_processing.c ****                         break;
 735:..\src/command_processing.c ****                     }
 736:..\src/command_processing.c ****                     break;
 5166              		.loc 1 736 0
 5167 2864 2AE3     		b	.L198
 5168              	.L232:
 730:..\src/command_processing.c ****                         break;
 5169              		.loc 1 730 0
 5170 2866 07F13803 		add	r3, r7, #56
 5171 286a 183B     		subs	r3, r3, #24
 5172 286c 1846     		mov	r0, r3
 5173 286e FFF7FEFF 		bl	strlen
 5174 2872 0346     		mov	r3, r0
 5175 2874 1A46     		mov	r2, r3
 5176 2876 07F13803 		add	r3, r7, #56
 5177 287a 183B     		subs	r3, r3, #24
 5178 287c 1344     		add	r3, r3, r2
 5179 287e 3C4A     		ldr	r2, .L305+56
 5180 2880 1068     		ldr	r0, [r2]	@ unaligned
 5181 2882 1860     		str	r0, [r3]	@ unaligned
 5182 2884 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5183 2886 9279     		ldrb	r2, [r2, #6]
 5184 2888 9980     		strh	r1, [r3, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 123


 5185 288a 9A71     		strb	r2, [r3, #6]
 731:..\src/command_processing.c ****                         case LEFT_HAND:
 5186              		.loc 1 731 0
 5187 288c 11E0     		b	.L231
 5188              	.L233:
 733:..\src/command_processing.c ****                         break;
 5189              		.loc 1 733 0
 5190 288e 07F13803 		add	r3, r7, #56
 5191 2892 183B     		subs	r3, r3, #24
 5192 2894 1846     		mov	r0, r3
 5193 2896 FFF7FEFF 		bl	strlen
 5194 289a 0346     		mov	r3, r0
 5195 289c 1A46     		mov	r2, r3
 5196 289e 07F13803 		add	r3, r7, #56
 5197 28a2 183B     		subs	r3, r3, #24
 5198 28a4 1344     		add	r3, r3, r2
 5199 28a6 334A     		ldr	r2, .L305+60
 5200 28a8 1068     		ldr	r0, [r2]	@ unaligned
 5201 28aa 1860     		str	r0, [r3]	@ unaligned
 5202 28ac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5203 28ae 9A80     		strh	r2, [r3, #4]	@ unaligned
 734:..\src/command_processing.c ****                     }
 5204              		.loc 1 734 0
 5205 28b0 00BF     		nop
 5206              	.L231:
 5207              		.loc 1 736 0
 5208 28b2 03E3     		b	.L198
 5209              	.L204:
 737:..\src/command_processing.c ****                 case 5:     // on/off menu
 738:..\src/command_processing.c ****                     switch(*m_addr){
 5210              		.loc 1 738 0
 5211 28b4 07F5BE53 		add	r3, r7, #6080
 5212 28b8 03F10803 		add	r3, r3, #8
 5213 28bc 1B68     		ldr	r3, [r3]
 5214 28be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5215 28c0 002B     		cmp	r3, #0
 5216 28c2 02D0     		beq	.L235
 5217 28c4 012B     		cmp	r3, #1
 5218 28c6 12D0     		beq	.L236
 739:..\src/command_processing.c ****                         case 0:
 740:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 741:..\src/command_processing.c ****                         break;
 742:..\src/command_processing.c ****                         case 1:
 743:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 744:..\src/command_processing.c ****                         break;
 745:..\src/command_processing.c ****                     }
 746:..\src/command_processing.c ****                     break;
 5219              		.loc 1 746 0
 5220 28c8 F8E2     		b	.L198
 5221              	.L235:
 740:..\src/command_processing.c ****                         break;
 5222              		.loc 1 740 0
 5223 28ca 07F13803 		add	r3, r7, #56
 5224 28ce 183B     		subs	r3, r3, #24
 5225 28d0 1846     		mov	r0, r3
 5226 28d2 FFF7FEFF 		bl	strlen
 5227 28d6 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 124


 5228 28d8 1A46     		mov	r2, r3
 5229 28da 07F13803 		add	r3, r7, #56
 5230 28de 183B     		subs	r3, r3, #24
 5231 28e0 1344     		add	r3, r3, r2
 5232 28e2 254A     		ldr	r2, .L305+64
 5233 28e4 1068     		ldr	r0, [r2]	@ unaligned
 5234 28e6 1860     		str	r0, [r3]	@ unaligned
 5235 28e8 1279     		ldrb	r2, [r2, #4]
 5236 28ea 1A71     		strb	r2, [r3, #4]
 741:..\src/command_processing.c ****                         case 1:
 5237              		.loc 1 741 0
 5238 28ec 0FE0     		b	.L234
 5239              	.L236:
 743:..\src/command_processing.c ****                         break;
 5240              		.loc 1 743 0
 5241 28ee 07F13803 		add	r3, r7, #56
 5242 28f2 183B     		subs	r3, r3, #24
 5243 28f4 1846     		mov	r0, r3
 5244 28f6 FFF7FEFF 		bl	strlen
 5245 28fa 0346     		mov	r3, r0
 5246 28fc 1A46     		mov	r2, r3
 5247 28fe 07F13803 		add	r3, r7, #56
 5248 2902 183B     		subs	r3, r3, #24
 5249 2904 1344     		add	r3, r3, r2
 5250 2906 1D4A     		ldr	r2, .L305+68
 5251 2908 1068     		ldr	r0, [r2]	@ unaligned
 5252 290a 1860     		str	r0, [r3]	@ unaligned
 744:..\src/command_processing.c ****                     }
 5253              		.loc 1 744 0
 5254 290c 00BF     		nop
 5255              	.L234:
 5256              		.loc 1 746 0
 5257 290e D5E2     		b	.L198
 5258              	.L205:
 747:..\src/command_processing.c ****                 case 6:     // expansion port menu
 748:..\src/command_processing.c ****                     switch(*m_addr){
 5259              		.loc 1 748 0
 5260 2910 07F5BE53 		add	r3, r7, #6080
 5261 2914 03F10803 		add	r3, r3, #8
 5262 2918 1B68     		ldr	r3, [r3]
 5263 291a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5264 291c 032B     		cmp	r3, #3
 5265 291e 00F2CA82 		bhi	.L286
 5266 2922 01A2     		adr	r2, .L239
 5267 2924 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5268              		.p2align 2
 5269              	.L239:
 5270 2928 81290000 		.word	.L238+1
 5271 292c A5290000 		.word	.L240+1
 5272 2930 D1290000 		.word	.L241+1
 5273 2934 FF290000 		.word	.L242+1
 5274              		.p2align 1
 5275              	.L306:
 5276              		.align	2
 5277              	.L305:
 5278 2938 00000000 		.word	.LC88
 5279 293c 08000000 		.word	.LC89
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 125


 5280 2940 10000000 		.word	.LC90
 5281 2944 24000000 		.word	.LC91
 5282 2948 34000000 		.word	.LC92
 5283 294c 40000000 		.word	.LC93
 5284 2950 54000000 		.word	.LC94
 5285 2954 60000000 		.word	.LC95
 5286 2958 84000000 		.word	.LC96
 5287 295c 90000000 		.word	.LC97
 5288 2960 98000000 		.word	.LC98
 5289 2964 A4000000 		.word	.LC99
 5290 2968 BC000000 		.word	.LC100
 5291 296c C4000000 		.word	.LC101
 5292 2970 CC000000 		.word	.LC102
 5293 2974 D4000000 		.word	.LC103
 5294 2978 DC000000 		.word	.LC104
 5295 297c E4000000 		.word	.LC105
 5296              	.L238:
 749:..\src/command_processing.c ****                         case EXP_NONE:
 750:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5297              		.loc 1 750 0
 5298 2980 07F13803 		add	r3, r7, #56
 5299 2984 183B     		subs	r3, r3, #24
 5300 2986 1846     		mov	r0, r3
 5301 2988 FFF7FEFF 		bl	strlen
 5302 298c 0346     		mov	r3, r0
 5303 298e 1A46     		mov	r2, r3
 5304 2990 07F13803 		add	r3, r7, #56
 5305 2994 183B     		subs	r3, r3, #24
 5306 2996 1344     		add	r3, r3, r2
 5307 2998 CD4A     		ldr	r2, .L307
 5308 299a 1068     		ldr	r0, [r2]	@ unaligned
 5309 299c 1860     		str	r0, [r3]	@ unaligned
 5310 299e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5311 29a0 9A80     		strh	r2, [r3, #4]	@ unaligned
 751:..\src/command_processing.c ****                             break;
 5312              		.loc 1 751 0
 5313 29a2 42E0     		b	.L237
 5314              	.L240:
 752:..\src/command_processing.c ****                         case EXP_SD_RTC:
 753:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5315              		.loc 1 753 0
 5316 29a4 07F13803 		add	r3, r7, #56
 5317 29a8 183B     		subs	r3, r3, #24
 5318 29aa 1846     		mov	r0, r3
 5319 29ac FFF7FEFF 		bl	strlen
 5320 29b0 0346     		mov	r3, r0
 5321 29b2 1A46     		mov	r2, r3
 5322 29b4 07F13803 		add	r3, r7, #56
 5323 29b8 183B     		subs	r3, r3, #24
 5324 29ba 1344     		add	r3, r3, r2
 5325 29bc C54A     		ldr	r2, .L307+4
 5326 29be 1C46     		mov	r4, r3
 5327 29c0 1346     		mov	r3, r2
 5328 29c2 07CB     		ldmia	r3!, {r0, r1, r2}
 5329 29c4 2060     		str	r0, [r4]	@ unaligned
 5330 29c6 6160     		str	r1, [r4, #4]	@ unaligned
 5331 29c8 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 126


 5332 29ca 1B88     		ldrh	r3, [r3]	@ unaligned
 5333 29cc A381     		strh	r3, [r4, #12]	@ unaligned
 754:..\src/command_processing.c ****                             break;
 5334              		.loc 1 754 0
 5335 29ce 2CE0     		b	.L237
 5336              	.L241:
 755:..\src/command_processing.c ****                         case EXP_WIFI:
 756:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5337              		.loc 1 756 0
 5338 29d0 07F13803 		add	r3, r7, #56
 5339 29d4 183B     		subs	r3, r3, #24
 5340 29d6 1846     		mov	r0, r3
 5341 29d8 FFF7FEFF 		bl	strlen
 5342 29dc 0346     		mov	r3, r0
 5343 29de 1A46     		mov	r2, r3
 5344 29e0 07F13803 		add	r3, r7, #56
 5345 29e4 183B     		subs	r3, r3, #24
 5346 29e6 1344     		add	r3, r3, r2
 5347 29e8 BB4A     		ldr	r2, .L307+8
 5348 29ea 1D46     		mov	r5, r3
 5349 29ec 1446     		mov	r4, r2
 5350 29ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5351 29f0 2860     		str	r0, [r5]	@ unaligned
 5352 29f2 6960     		str	r1, [r5, #4]	@ unaligned
 5353 29f4 AA60     		str	r2, [r5, #8]	@ unaligned
 5354 29f6 EB60     		str	r3, [r5, #12]	@ unaligned
 5355 29f8 2388     		ldrh	r3, [r4]	@ unaligned
 5356 29fa 2B82     		strh	r3, [r5, #16]	@ unaligned
 757:..\src/command_processing.c ****         					break;
 5357              		.loc 1 757 0
 5358 29fc 15E0     		b	.L237
 5359              	.L242:
 758:..\src/command_processing.c ****                         case EXP_OTHER:
 759:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5360              		.loc 1 759 0
 5361 29fe 07F13803 		add	r3, r7, #56
 5362 2a02 183B     		subs	r3, r3, #24
 5363 2a04 1846     		mov	r0, r3
 5364 2a06 FFF7FEFF 		bl	strlen
 5365 2a0a 0346     		mov	r3, r0
 5366 2a0c 1A46     		mov	r2, r3
 5367 2a0e 07F13803 		add	r3, r7, #56
 5368 2a12 183B     		subs	r3, r3, #24
 5369 2a14 1344     		add	r3, r3, r2
 5370 2a16 B14A     		ldr	r2, .L307+12
 5371 2a18 1C46     		mov	r4, r3
 5372 2a1a 1346     		mov	r3, r2
 5373 2a1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5374 2a1e 2060     		str	r0, [r4]	@ unaligned
 5375 2a20 6160     		str	r1, [r4, #4]	@ unaligned
 5376 2a22 A260     		str	r2, [r4, #8]	@ unaligned
 5377 2a24 1B78     		ldrb	r3, [r3]
 5378 2a26 2373     		strb	r3, [r4, #12]
 760:..\src/command_processing.c ****         					break;
 5379              		.loc 1 760 0
 5380 2a28 00BF     		nop
 5381              	.L237:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 127


 761:..\src/command_processing.c ****                     }
 762:..\src/command_processing.c ****                     break;
 5382              		.loc 1 762 0
 5383 2a2a 44E2     		b	.L286
 5384              	.L206:
 763:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 764:..\src/command_processing.c ****                     switch(*m_addr){
 5385              		.loc 1 764 0
 5386 2a2c 07F5BE53 		add	r3, r7, #6080
 5387 2a30 03F10803 		add	r3, r3, #8
 5388 2a34 1B68     		ldr	r3, [r3]
 5389 2a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5390 2a38 012B     		cmp	r3, #1
 5391 2a3a 16D0     		beq	.L244
 5392 2a3c 022B     		cmp	r3, #2
 5393 2a3e 26D0     		beq	.L245
 5394 2a40 002B     		cmp	r3, #0
 5395 2a42 00D0     		beq	.L246
 765:..\src/command_processing.c ****                         case 0: 
 766:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 767:..\src/command_processing.c ****                             break;
 768:..\src/command_processing.c ****                         case 1: 
 769:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 770:..\src/command_processing.c ****                             break;
 771:..\src/command_processing.c ****                         case 2: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         default:
 775:..\src/command_processing.c ****                             break;
 5396              		.loc 1 775 0
 5397 2a44 35E0     		b	.L247
 5398              	.L246:
 766:..\src/command_processing.c ****                             break;
 5399              		.loc 1 766 0
 5400 2a46 07F13803 		add	r3, r7, #56
 5401 2a4a 183B     		subs	r3, r3, #24
 5402 2a4c 1846     		mov	r0, r3
 5403 2a4e FFF7FEFF 		bl	strlen
 5404 2a52 0346     		mov	r3, r0
 5405 2a54 1A46     		mov	r2, r3
 5406 2a56 07F13803 		add	r3, r7, #56
 5407 2a5a 183B     		subs	r3, r3, #24
 5408 2a5c 1344     		add	r3, r3, r2
 5409 2a5e 9C4A     		ldr	r2, .L307
 5410 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5411 2a62 1860     		str	r0, [r3]	@ unaligned
 5412 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5413 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 767:..\src/command_processing.c ****                         case 1: 
 5414              		.loc 1 767 0
 5415 2a68 23E0     		b	.L247
 5416              	.L244:
 769:..\src/command_processing.c ****                             break;
 5417              		.loc 1 769 0
 5418 2a6a 07F13803 		add	r3, r7, #56
 5419 2a6e 183B     		subs	r3, r3, #24
 5420 2a70 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 128


 5421 2a72 FFF7FEFF 		bl	strlen
 5422 2a76 0346     		mov	r3, r0
 5423 2a78 1A46     		mov	r2, r3
 5424 2a7a 07F13803 		add	r3, r7, #56
 5425 2a7e 183B     		subs	r3, r3, #24
 5426 2a80 1344     		add	r3, r3, r2
 5427 2a82 974A     		ldr	r2, .L307+16
 5428 2a84 1068     		ldr	r0, [r2]	@ unaligned
 5429 2a86 1860     		str	r0, [r3]	@ unaligned
 5430 2a88 1279     		ldrb	r2, [r2, #4]
 5431 2a8a 1A71     		strb	r2, [r3, #4]
 770:..\src/command_processing.c ****                         case 2: 
 5432              		.loc 1 770 0
 5433 2a8c 11E0     		b	.L247
 5434              	.L245:
 772:..\src/command_processing.c ****                             break;
 5435              		.loc 1 772 0
 5436 2a8e 07F13803 		add	r3, r7, #56
 5437 2a92 183B     		subs	r3, r3, #24
 5438 2a94 1846     		mov	r0, r3
 5439 2a96 FFF7FEFF 		bl	strlen
 5440 2a9a 0346     		mov	r3, r0
 5441 2a9c 1A46     		mov	r2, r3
 5442 2a9e 07F13803 		add	r3, r7, #56
 5443 2aa2 183B     		subs	r3, r3, #24
 5444 2aa4 1344     		add	r3, r3, r2
 5445 2aa6 8F4A     		ldr	r2, .L307+20
 5446 2aa8 1068     		ldr	r0, [r2]	@ unaligned
 5447 2aaa 1860     		str	r0, [r3]	@ unaligned
 5448 2aac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5449 2aae 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         default:
 5450              		.loc 1 773 0
 5451 2ab0 00BF     		nop
 5452              	.L247:
 776:..\src/command_processing.c ****                     } 
 777:..\src/command_processing.c ****                     break;
 5453              		.loc 1 777 0 discriminator 12
 5454 2ab2 03E2     		b	.L198
 5455              	.L207:
 778:..\src/command_processing.c ****                 case 8:     // user menu          
 779:..\src/command_processing.c ****                     switch(*m_addr){
 5456              		.loc 1 779 0
 5457 2ab4 07F5BE53 		add	r3, r7, #6080
 5458 2ab8 03F10803 		add	r3, r3, #8
 5459 2abc 1B68     		ldr	r3, [r3]
 5460 2abe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5461 2ac0 012B     		cmp	r3, #1
 5462 2ac2 1AD0     		beq	.L249
 5463 2ac4 022B     		cmp	r3, #2
 5464 2ac6 2CD0     		beq	.L250
 5465 2ac8 002B     		cmp	r3, #0
 5466 2aca 00D0     		beq	.L251
 780:..\src/command_processing.c ****                         case GENERIC_USER:
 781:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                         case MARIA:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 129


 784:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 785:..\src/command_processing.c ****                         break;
 786:..\src/command_processing.c ****                         case R01:
 787:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                     }   
 790:..\src/command_processing.c ****                     break;                    
 5467              		.loc 1 790 0
 5468 2acc F6E1     		b	.L198
 5469              	.L251:
 781:..\src/command_processing.c ****                         break;
 5470              		.loc 1 781 0
 5471 2ace 07F13803 		add	r3, r7, #56
 5472 2ad2 183B     		subs	r3, r3, #24
 5473 2ad4 1846     		mov	r0, r3
 5474 2ad6 FFF7FEFF 		bl	strlen
 5475 2ada 0346     		mov	r3, r0
 5476 2adc 1A46     		mov	r2, r3
 5477 2ade 07F13803 		add	r3, r7, #56
 5478 2ae2 183B     		subs	r3, r3, #24
 5479 2ae4 1344     		add	r3, r3, r2
 5480 2ae6 804A     		ldr	r2, .L307+24
 5481 2ae8 1C46     		mov	r4, r3
 5482 2aea 1346     		mov	r3, r2
 5483 2aec 07CB     		ldmia	r3!, {r0, r1, r2}
 5484 2aee 2060     		str	r0, [r4]	@ unaligned
 5485 2af0 6160     		str	r1, [r4, #4]	@ unaligned
 5486 2af2 A260     		str	r2, [r4, #8]	@ unaligned
 5487 2af4 1B88     		ldrh	r3, [r3]	@ unaligned
 5488 2af6 A381     		strh	r3, [r4, #12]	@ unaligned
 782:..\src/command_processing.c ****                         case MARIA:
 5489              		.loc 1 782 0
 5490 2af8 25E0     		b	.L248
 5491              	.L249:
 784:..\src/command_processing.c ****                         break;
 5492              		.loc 1 784 0
 5493 2afa 07F13803 		add	r3, r7, #56
 5494 2afe 183B     		subs	r3, r3, #24
 5495 2b00 1846     		mov	r0, r3
 5496 2b02 FFF7FEFF 		bl	strlen
 5497 2b06 0346     		mov	r3, r0
 5498 2b08 1A46     		mov	r2, r3
 5499 2b0a 07F13803 		add	r3, r7, #56
 5500 2b0e 183B     		subs	r3, r3, #24
 5501 2b10 1344     		add	r3, r3, r2
 5502 2b12 764A     		ldr	r2, .L307+28
 5503 2b14 1068     		ldr	r0, [r2]	@ unaligned
 5504 2b16 1860     		str	r0, [r3]	@ unaligned
 5505 2b18 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5506 2b1a 9279     		ldrb	r2, [r2, #6]
 5507 2b1c 9980     		strh	r1, [r3, #4]	@ unaligned
 5508 2b1e 9A71     		strb	r2, [r3, #6]
 785:..\src/command_processing.c ****                         case R01:
 5509              		.loc 1 785 0
 5510 2b20 11E0     		b	.L248
 5511              	.L250:
 787:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 130


 5512              		.loc 1 787 0
 5513 2b22 07F13803 		add	r3, r7, #56
 5514 2b26 183B     		subs	r3, r3, #24
 5515 2b28 1846     		mov	r0, r3
 5516 2b2a FFF7FEFF 		bl	strlen
 5517 2b2e 0346     		mov	r3, r0
 5518 2b30 1A46     		mov	r2, r3
 5519 2b32 07F13803 		add	r3, r7, #56
 5520 2b36 183B     		subs	r3, r3, #24
 5521 2b38 1344     		add	r3, r3, r2
 5522 2b3a 6D4A     		ldr	r2, .L307+32
 5523 2b3c 1068     		ldr	r0, [r2]	@ unaligned
 5524 2b3e 1860     		str	r0, [r3]	@ unaligned
 5525 2b40 1279     		ldrb	r2, [r2, #4]
 5526 2b42 1A71     		strb	r2, [r3, #4]
 788:..\src/command_processing.c ****                     }   
 5527              		.loc 1 788 0
 5528 2b44 00BF     		nop
 5529              	.L248:
 5530              		.loc 1 790 0
 5531 2b46 B9E1     		b	.L198
 5532              	.L208:
 791:..\src/command_processing.c ****                 case 9:     // driver type menu
 792:..\src/command_processing.c ****                     switch(*m_addr){
 5533              		.loc 1 792 0
 5534 2b48 07F5BE53 		add	r3, r7, #6080
 5535 2b4c 03F10803 		add	r3, r3, #8
 5536 2b50 1B68     		ldr	r3, [r3]
 5537 2b52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5538 2b54 012B     		cmp	r3, #1
 5539 2b56 1BD0     		beq	.L253
 5540 2b58 022B     		cmp	r3, #2
 5541 2b5a 32D0     		beq	.L254
 5542 2b5c 002B     		cmp	r3, #0
 5543 2b5e 00D0     		beq	.L255
 793:..\src/command_processing.c ****                         case 0:
 794:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 795:..\src/command_processing.c ****                         break;
 796:..\src/command_processing.c ****                         case 1:
 797:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 798:..\src/command_processing.c ****                         break;
 799:..\src/command_processing.c ****                         case 2:
 800:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                     }
 803:..\src/command_processing.c ****                     break;
 5544              		.loc 1 803 0
 5545 2b60 ACE1     		b	.L198
 5546              	.L255:
 794:..\src/command_processing.c ****                         break;
 5547              		.loc 1 794 0
 5548 2b62 07F13803 		add	r3, r7, #56
 5549 2b66 183B     		subs	r3, r3, #24
 5550 2b68 1846     		mov	r0, r3
 5551 2b6a FFF7FEFF 		bl	strlen
 5552 2b6e 0346     		mov	r3, r0
 5553 2b70 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 131


 5554 2b72 07F13803 		add	r3, r7, #56
 5555 2b76 183B     		subs	r3, r3, #24
 5556 2b78 1344     		add	r3, r3, r2
 5557 2b7a 5E4A     		ldr	r2, .L307+36
 5558 2b7c 1D46     		mov	r5, r3
 5559 2b7e 1446     		mov	r4, r2
 5560 2b80 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5561 2b82 2860     		str	r0, [r5]	@ unaligned
 5562 2b84 6960     		str	r1, [r5, #4]	@ unaligned
 5563 2b86 AA60     		str	r2, [r5, #8]	@ unaligned
 5564 2b88 EB60     		str	r3, [r5, #12]	@ unaligned
 5565 2b8a 2068     		ldr	r0, [r4]	@ unaligned
 5566 2b8c 2861     		str	r0, [r5, #16]	@ unaligned
 795:..\src/command_processing.c ****                         case 1:
 5567              		.loc 1 795 0
 5568 2b8e 2FE0     		b	.L252
 5569              	.L253:
 797:..\src/command_processing.c ****                         break;
 5570              		.loc 1 797 0
 5571 2b90 07F13803 		add	r3, r7, #56
 5572 2b94 183B     		subs	r3, r3, #24
 5573 2b96 1846     		mov	r0, r3
 5574 2b98 FFF7FEFF 		bl	strlen
 5575 2b9c 0346     		mov	r3, r0
 5576 2b9e 1A46     		mov	r2, r3
 5577 2ba0 07F13803 		add	r3, r7, #56
 5578 2ba4 183B     		subs	r3, r3, #24
 5579 2ba6 1344     		add	r3, r3, r2
 5580 2ba8 534A     		ldr	r2, .L307+40
 5581 2baa 1D46     		mov	r5, r3
 5582 2bac 1446     		mov	r4, r2
 5583 2bae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5584 2bb0 2860     		str	r0, [r5]	@ unaligned
 5585 2bb2 6960     		str	r1, [r5, #4]	@ unaligned
 5586 2bb4 AA60     		str	r2, [r5, #8]	@ unaligned
 5587 2bb6 EB60     		str	r3, [r5, #12]	@ unaligned
 5588 2bb8 2068     		ldr	r0, [r4]	@ unaligned
 5589 2bba 2861     		str	r0, [r5, #16]	@ unaligned
 5590 2bbc A388     		ldrh	r3, [r4, #4]	@ unaligned
 5591 2bbe AB82     		strh	r3, [r5, #20]	@ unaligned
 798:..\src/command_processing.c ****                         case 2:
 5592              		.loc 1 798 0
 5593 2bc0 16E0     		b	.L252
 5594              	.L254:
 800:..\src/command_processing.c ****                         break;
 5595              		.loc 1 800 0
 5596 2bc2 07F13803 		add	r3, r7, #56
 5597 2bc6 183B     		subs	r3, r3, #24
 5598 2bc8 1846     		mov	r0, r3
 5599 2bca FFF7FEFF 		bl	strlen
 5600 2bce 0346     		mov	r3, r0
 5601 2bd0 1A46     		mov	r2, r3
 5602 2bd2 07F13803 		add	r3, r7, #56
 5603 2bd6 183B     		subs	r3, r3, #24
 5604 2bd8 1344     		add	r3, r3, r2
 5605 2bda 484A     		ldr	r2, .L307+44
 5606 2bdc 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 132


 5607 2bde 1446     		mov	r4, r2
 5608 2be0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5609 2be2 2860     		str	r0, [r5]	@ unaligned
 5610 2be4 6960     		str	r1, [r5, #4]	@ unaligned
 5611 2be6 AA60     		str	r2, [r5, #8]	@ unaligned
 5612 2be8 EB60     		str	r3, [r5, #12]	@ unaligned
 5613 2bea 2378     		ldrb	r3, [r4]
 5614 2bec 2B74     		strb	r3, [r5, #16]
 801:..\src/command_processing.c ****                     }
 5615              		.loc 1 801 0
 5616 2bee 00BF     		nop
 5617              	.L252:
 5618              		.loc 1 803 0
 5619 2bf0 64E1     		b	.L198
 5620              	.L209:
 804:..\src/command_processing.c ****                 case 10:    // device type menu
 805:..\src/command_processing.c ****                     switch(*m_addr){
 5621              		.loc 1 805 0
 5622 2bf2 07F5BE53 		add	r3, r7, #6080
 5623 2bf6 03F10803 		add	r3, r3, #8
 5624 2bfa 1B68     		ldr	r3, [r3]
 5625 2bfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5626 2bfe 042B     		cmp	r3, #4
 5627 2c00 00F25B81 		bhi	.L287
 5628 2c04 01A2     		adr	r2, .L258
 5629 2c06 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5630 2c0a 00BF     		.p2align 2
 5631              	.L258:
 5632 2c0c 212C0000 		.word	.L257+1
 5633 2c10 4D2C0000 		.word	.L259+1
 5634 2c14 7B2C0000 		.word	.L260+1
 5635 2c18 A72C0000 		.word	.L261+1
 5636 2c1c 112D0000 		.word	.L262+1
 5637              		.p2align 1
 5638              	.L257:
 806:..\src/command_processing.c ****                         case 0:
 807:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5639              		.loc 1 807 0
 5640 2c20 07F13803 		add	r3, r7, #56
 5641 2c24 183B     		subs	r3, r3, #24
 5642 2c26 1846     		mov	r0, r3
 5643 2c28 FFF7FEFF 		bl	strlen
 5644 2c2c 0346     		mov	r3, r0
 5645 2c2e 1A46     		mov	r2, r3
 5646 2c30 07F13803 		add	r3, r7, #56
 5647 2c34 183B     		subs	r3, r3, #24
 5648 2c36 1344     		add	r3, r3, r2
 5649 2c38 314A     		ldr	r2, .L307+48
 5650 2c3a 1C46     		mov	r4, r3
 5651 2c3c 1346     		mov	r3, r2
 5652 2c3e 07CB     		ldmia	r3!, {r0, r1, r2}
 5653 2c40 2060     		str	r0, [r4]	@ unaligned
 5654 2c42 6160     		str	r1, [r4, #4]	@ unaligned
 5655 2c44 A260     		str	r2, [r4, #8]	@ unaligned
 5656 2c46 1B88     		ldrh	r3, [r3]	@ unaligned
 5657 2c48 A381     		strh	r3, [r4, #12]	@ unaligned
 808:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 133


 5658              		.loc 1 808 0
 5659 2c4a 7BE0     		b	.L256
 5660              	.L259:
 809:..\src/command_processing.c ****                         case 1:
 810:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5661              		.loc 1 810 0
 5662 2c4c 07F13803 		add	r3, r7, #56
 5663 2c50 183B     		subs	r3, r3, #24
 5664 2c52 1846     		mov	r0, r3
 5665 2c54 FFF7FEFF 		bl	strlen
 5666 2c58 0346     		mov	r3, r0
 5667 2c5a 1A46     		mov	r2, r3
 5668 2c5c 07F13803 		add	r3, r7, #56
 5669 2c60 183B     		subs	r3, r3, #24
 5670 2c62 1344     		add	r3, r3, r2
 5671 2c64 274A     		ldr	r2, .L307+52
 5672 2c66 1D46     		mov	r5, r3
 5673 2c68 1446     		mov	r4, r2
 5674 2c6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5675 2c6c 2860     		str	r0, [r5]	@ unaligned
 5676 2c6e 6960     		str	r1, [r5, #4]	@ unaligned
 5677 2c70 AA60     		str	r2, [r5, #8]	@ unaligned
 5678 2c72 EB60     		str	r3, [r5, #12]	@ unaligned
 5679 2c74 2388     		ldrh	r3, [r4]	@ unaligned
 5680 2c76 2B82     		strh	r3, [r5, #16]	@ unaligned
 811:..\src/command_processing.c ****                         break;
 5681              		.loc 1 811 0
 5682 2c78 64E0     		b	.L256
 5683              	.L260:
 812:..\src/command_processing.c ****                         case 2:
 813:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5684              		.loc 1 813 0
 5685 2c7a 07F13803 		add	r3, r7, #56
 5686 2c7e 183B     		subs	r3, r3, #24
 5687 2c80 1846     		mov	r0, r3
 5688 2c82 FFF7FEFF 		bl	strlen
 5689 2c86 0346     		mov	r3, r0
 5690 2c88 1A46     		mov	r2, r3
 5691 2c8a 07F13803 		add	r3, r7, #56
 5692 2c8e 183B     		subs	r3, r3, #24
 5693 2c90 1344     		add	r3, r3, r2
 5694 2c92 1D4A     		ldr	r2, .L307+56
 5695 2c94 1C46     		mov	r4, r3
 5696 2c96 1346     		mov	r3, r2
 5697 2c98 07CB     		ldmia	r3!, {r0, r1, r2}
 5698 2c9a 2060     		str	r0, [r4]	@ unaligned
 5699 2c9c 6160     		str	r1, [r4, #4]	@ unaligned
 5700 2c9e A260     		str	r2, [r4, #8]	@ unaligned
 5701 2ca0 1B88     		ldrh	r3, [r3]	@ unaligned
 5702 2ca2 A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 5703              		.loc 1 814 0
 5704 2ca4 4EE0     		b	.L256
 5705              	.L261:
 815:..\src/command_processing.c ****                         case 3:
 816:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5706              		.loc 1 816 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 134


 5707 2ca6 07F13803 		add	r3, r7, #56
 5708 2caa 183B     		subs	r3, r3, #24
 5709 2cac 1846     		mov	r0, r3
 5710 2cae FFF7FEFF 		bl	strlen
 5711 2cb2 0346     		mov	r3, r0
 5712 2cb4 1A46     		mov	r2, r3
 5713 2cb6 07F13803 		add	r3, r7, #56
 5714 2cba 183B     		subs	r3, r3, #24
 5715 2cbc 1344     		add	r3, r3, r2
 5716 2cbe 134A     		ldr	r2, .L307+60
 5717 2cc0 1C46     		mov	r4, r3
 5718 2cc2 1546     		mov	r5, r2
 5719 2cc4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5720 2cc6 2060     		str	r0, [r4]	@ unaligned
 5721 2cc8 6160     		str	r1, [r4, #4]	@ unaligned
 5722 2cca A260     		str	r2, [r4, #8]	@ unaligned
 5723 2ccc E360     		str	r3, [r4, #12]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 5724              		.loc 1 817 0
 5725 2cce 39E0     		b	.L256
 5726              	.L308:
 5727              		.align	2
 5728              	.L307:
 5729 2cd0 EC000000 		.word	.LC106
 5730 2cd4 F4000000 		.word	.LC107
 5731 2cd8 04010000 		.word	.LC108
 5732 2cdc 18010000 		.word	.LC109
 5733 2ce0 28010000 		.word	.LC110
 5734 2ce4 30010000 		.word	.LC111
 5735 2ce8 38010000 		.word	.LC112
 5736 2cec 48010000 		.word	.LC113
 5737 2cf0 50010000 		.word	.LC114
 5738 2cf4 58010000 		.word	.LC115
 5739 2cf8 70010000 		.word	.LC116
 5740 2cfc 88010000 		.word	.LC117
 5741 2d00 9C010000 		.word	.LC118
 5742 2d04 AC010000 		.word	.LC119
 5743 2d08 C0010000 		.word	.LC120
 5744 2d0c D0010000 		.word	.LC121
 5745              	.L262:
 818:..\src/command_processing.c ****                         case 4:
 819:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5746              		.loc 1 819 0
 5747 2d10 07F13803 		add	r3, r7, #56
 5748 2d14 183B     		subs	r3, r3, #24
 5749 2d16 1846     		mov	r0, r3
 5750 2d18 FFF7FEFF 		bl	strlen
 5751 2d1c 0346     		mov	r3, r0
 5752 2d1e 1A46     		mov	r2, r3
 5753 2d20 07F13803 		add	r3, r7, #56
 5754 2d24 183B     		subs	r3, r3, #24
 5755 2d26 1344     		add	r3, r3, r2
 5756 2d28 714A     		ldr	r2, .L309
 5757 2d2a 1D46     		mov	r5, r3
 5758 2d2c 1446     		mov	r4, r2
 5759 2d2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5760 2d30 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 135


 5761 2d32 6960     		str	r1, [r5, #4]	@ unaligned
 5762 2d34 AA60     		str	r2, [r5, #8]	@ unaligned
 5763 2d36 EB60     		str	r3, [r5, #12]	@ unaligned
 5764 2d38 2388     		ldrh	r3, [r4]	@ unaligned
 5765 2d3a A278     		ldrb	r2, [r4, #2]
 5766 2d3c 2B82     		strh	r3, [r5, #16]	@ unaligned
 5767 2d3e 1346     		mov	r3, r2
 5768 2d40 AB74     		strb	r3, [r5, #18]
 820:..\src/command_processing.c ****                         break;
 5769              		.loc 1 820 0
 5770 2d42 00BF     		nop
 5771              	.L256:
 821:..\src/command_processing.c ****                     }
 822:..\src/command_processing.c ****                     break;
 5772              		.loc 1 822 0
 5773 2d44 B9E0     		b	.L287
 5774              	.L210:
 823:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 824:..\src/command_processing.c ****                     switch(*m_addr){
 5775              		.loc 1 824 0
 5776 2d46 07F5BE53 		add	r3, r7, #6080
 5777 2d4a 03F10803 		add	r3, r3, #8
 5778 2d4e 1B68     		ldr	r3, [r3]
 5779 2d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5780 2d52 002B     		cmp	r3, #0
 5781 2d54 02D0     		beq	.L264
 5782 2d56 012B     		cmp	r3, #1
 5783 2d58 37D0     		beq	.L265
 825:..\src/command_processing.c ****                         case 0:
 826:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 827:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 828:..\src/command_processing.c ****                             }
 829:..\src/command_processing.c ****                             else {
 830:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 831:..\src/command_processing.c ****                             }                            
 832:..\src/command_processing.c ****                         break;
 833:..\src/command_processing.c ****                         case 1:
 834:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 835:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 836:..\src/command_processing.c ****                             }
 837:..\src/command_processing.c ****                             else {
 838:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 839:..\src/command_processing.c ****                             }
 840:..\src/command_processing.c ****                         break;
 841:..\src/command_processing.c ****                     }
 842:..\src/command_processing.c ****                     break;
 5784              		.loc 1 842 0
 5785 2d5a AFE0     		b	.L198
 5786              	.L264:
 826:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5787              		.loc 1 826 0
 5788 2d5c 654B     		ldr	r3, .L309+4
 5789 2d5e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5790 2d62 042B     		cmp	r3, #4
 5791 2d64 18D1     		bne	.L266
 827:..\src/command_processing.c ****                             }
 5792              		.loc 1 827 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 136


 5793 2d66 07F13803 		add	r3, r7, #56
 5794 2d6a 183B     		subs	r3, r3, #24
 5795 2d6c 1846     		mov	r0, r3
 5796 2d6e FFF7FEFF 		bl	strlen
 5797 2d72 0346     		mov	r3, r0
 5798 2d74 1A46     		mov	r2, r3
 5799 2d76 07F13803 		add	r3, r7, #56
 5800 2d7a 183B     		subs	r3, r3, #24
 5801 2d7c 1344     		add	r3, r3, r2
 5802 2d7e 5E4A     		ldr	r2, .L309+8
 5803 2d80 1D46     		mov	r5, r3
 5804 2d82 1446     		mov	r4, r2
 5805 2d84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5806 2d86 2860     		str	r0, [r5]	@ unaligned
 5807 2d88 6960     		str	r1, [r5, #4]	@ unaligned
 5808 2d8a AA60     		str	r2, [r5, #8]	@ unaligned
 5809 2d8c EB60     		str	r3, [r5, #12]	@ unaligned
 5810 2d8e 2068     		ldr	r0, [r4]	@ unaligned
 5811 2d90 2861     		str	r0, [r5, #16]	@ unaligned
 5812 2d92 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5813 2d94 AB82     		strh	r3, [r5, #20]	@ unaligned
 832:..\src/command_processing.c ****                         case 1:
 5814              		.loc 1 832 0
 5815 2d96 4FE0     		b	.L263
 5816              	.L266:
 830:..\src/command_processing.c ****                             }                            
 5817              		.loc 1 830 0
 5818 2d98 07F13803 		add	r3, r7, #56
 5819 2d9c 183B     		subs	r3, r3, #24
 5820 2d9e 1846     		mov	r0, r3
 5821 2da0 FFF7FEFF 		bl	strlen
 5822 2da4 0346     		mov	r3, r0
 5823 2da6 1A46     		mov	r2, r3
 5824 2da8 07F13803 		add	r3, r7, #56
 5825 2dac 183B     		subs	r3, r3, #24
 5826 2dae 1344     		add	r3, r3, r2
 5827 2db0 524A     		ldr	r2, .L309+12
 5828 2db2 1D46     		mov	r5, r3
 5829 2db4 1446     		mov	r4, r2
 5830 2db6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5831 2db8 2860     		str	r0, [r5]	@ unaligned
 5832 2dba 6960     		str	r1, [r5, #4]	@ unaligned
 5833 2dbc AA60     		str	r2, [r5, #8]	@ unaligned
 5834 2dbe EB60     		str	r3, [r5, #12]	@ unaligned
 5835 2dc0 2068     		ldr	r0, [r4]	@ unaligned
 5836 2dc2 2861     		str	r0, [r5, #16]	@ unaligned
 5837 2dc4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5838 2dc6 AB82     		strh	r3, [r5, #20]	@ unaligned
 832:..\src/command_processing.c ****                         case 1:
 5839              		.loc 1 832 0
 5840 2dc8 36E0     		b	.L263
 5841              	.L265:
 834:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5842              		.loc 1 834 0
 5843 2dca 4A4B     		ldr	r3, .L309+4
 5844 2dcc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5845 2dd0 042B     		cmp	r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 137


 5846 2dd2 18D1     		bne	.L268
 835:..\src/command_processing.c ****                             }
 5847              		.loc 1 835 0
 5848 2dd4 07F13803 		add	r3, r7, #56
 5849 2dd8 183B     		subs	r3, r3, #24
 5850 2dda 1846     		mov	r0, r3
 5851 2ddc FFF7FEFF 		bl	strlen
 5852 2de0 0346     		mov	r3, r0
 5853 2de2 1A46     		mov	r2, r3
 5854 2de4 07F13803 		add	r3, r7, #56
 5855 2de8 183B     		subs	r3, r3, #24
 5856 2dea 1344     		add	r3, r3, r2
 5857 2dec 444A     		ldr	r2, .L309+16
 5858 2dee 1D46     		mov	r5, r3
 5859 2df0 1446     		mov	r4, r2
 5860 2df2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5861 2df4 2860     		str	r0, [r5]	@ unaligned
 5862 2df6 6960     		str	r1, [r5, #4]	@ unaligned
 5863 2df8 AA60     		str	r2, [r5, #8]	@ unaligned
 5864 2dfa EB60     		str	r3, [r5, #12]	@ unaligned
 5865 2dfc 2068     		ldr	r0, [r4]	@ unaligned
 5866 2dfe 2861     		str	r0, [r5, #16]	@ unaligned
 5867 2e00 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5868 2e02 AB82     		strh	r3, [r5, #20]	@ unaligned
 840:..\src/command_processing.c ****                     }
 5869              		.loc 1 840 0
 5870 2e04 17E0     		b	.L288
 5871              	.L268:
 838:..\src/command_processing.c ****                             }
 5872              		.loc 1 838 0
 5873 2e06 07F13803 		add	r3, r7, #56
 5874 2e0a 183B     		subs	r3, r3, #24
 5875 2e0c 1846     		mov	r0, r3
 5876 2e0e FFF7FEFF 		bl	strlen
 5877 2e12 0346     		mov	r3, r0
 5878 2e14 1A46     		mov	r2, r3
 5879 2e16 07F13803 		add	r3, r7, #56
 5880 2e1a 183B     		subs	r3, r3, #24
 5881 2e1c 1344     		add	r3, r3, r2
 5882 2e1e 394A     		ldr	r2, .L309+20
 5883 2e20 1D46     		mov	r5, r3
 5884 2e22 1446     		mov	r4, r2
 5885 2e24 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5886 2e26 2860     		str	r0, [r5]	@ unaligned
 5887 2e28 6960     		str	r1, [r5, #4]	@ unaligned
 5888 2e2a AA60     		str	r2, [r5, #8]	@ unaligned
 5889 2e2c EB60     		str	r3, [r5, #12]	@ unaligned
 5890 2e2e 2068     		ldr	r0, [r4]	@ unaligned
 5891 2e30 2861     		str	r0, [r5, #16]	@ unaligned
 5892 2e32 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5893 2e34 AB82     		strh	r3, [r5, #20]	@ unaligned
 5894              	.L288:
 840:..\src/command_processing.c ****                     }
 5895              		.loc 1 840 0
 5896 2e36 00BF     		nop
 5897              	.L263:
 5898              		.loc 1 842 0 discriminator 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 138


 5899 2e38 40E0     		b	.L198
 5900              	.L211:
 843:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 844:..\src/command_processing.c ****                     switch(*m_addr){
 5901              		.loc 1 844 0
 5902 2e3a 07F5BE53 		add	r3, r7, #6080
 5903 2e3e 03F10803 		add	r3, r3, #8
 5904 2e42 1B68     		ldr	r3, [r3]
 5905 2e44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5906 2e46 002B     		cmp	r3, #0
 5907 2e48 02D0     		beq	.L271
 5908 2e4a 012B     		cmp	r3, #1
 5909 2e4c 17D0     		beq	.L272
 845:..\src/command_processing.c ****                         case 0:
 846:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 847:..\src/command_processing.c ****                         break;
 848:..\src/command_processing.c ****                         case 1:
 849:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 850:..\src/command_processing.c ****                         break;
 851:..\src/command_processing.c ****                     }
 852:..\src/command_processing.c ****                     break;
 5910              		.loc 1 852 0
 5911 2e4e 35E0     		b	.L198
 5912              	.L271:
 846:..\src/command_processing.c ****                         break;
 5913              		.loc 1 846 0
 5914 2e50 07F13803 		add	r3, r7, #56
 5915 2e54 183B     		subs	r3, r3, #24
 5916 2e56 1846     		mov	r0, r3
 5917 2e58 FFF7FEFF 		bl	strlen
 5918 2e5c 0346     		mov	r3, r0
 5919 2e5e 1A46     		mov	r2, r3
 5920 2e60 07F13803 		add	r3, r7, #56
 5921 2e64 183B     		subs	r3, r3, #24
 5922 2e66 1344     		add	r3, r3, r2
 5923 2e68 274A     		ldr	r2, .L309+24
 5924 2e6a 1D46     		mov	r5, r3
 5925 2e6c 1446     		mov	r4, r2
 5926 2e6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5927 2e70 2860     		str	r0, [r5]	@ unaligned
 5928 2e72 6960     		str	r1, [r5, #4]	@ unaligned
 5929 2e74 AA60     		str	r2, [r5, #8]	@ unaligned
 5930 2e76 EB60     		str	r3, [r5, #12]	@ unaligned
 5931 2e78 2068     		ldr	r0, [r4]	@ unaligned
 5932 2e7a 2861     		str	r0, [r5, #16]	@ unaligned
 847:..\src/command_processing.c ****                         case 1:
 5933              		.loc 1 847 0
 5934 2e7c 16E0     		b	.L270
 5935              	.L272:
 849:..\src/command_processing.c ****                         break;
 5936              		.loc 1 849 0
 5937 2e7e 07F13803 		add	r3, r7, #56
 5938 2e82 183B     		subs	r3, r3, #24
 5939 2e84 1846     		mov	r0, r3
 5940 2e86 FFF7FEFF 		bl	strlen
 5941 2e8a 0346     		mov	r3, r0
 5942 2e8c 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 139


 5943 2e8e 07F13803 		add	r3, r7, #56
 5944 2e92 183B     		subs	r3, r3, #24
 5945 2e94 1344     		add	r3, r3, r2
 5946 2e96 1D4A     		ldr	r2, .L309+28
 5947 2e98 1D46     		mov	r5, r3
 5948 2e9a 1446     		mov	r4, r2
 5949 2e9c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5950 2e9e 2860     		str	r0, [r5]	@ unaligned
 5951 2ea0 6960     		str	r1, [r5, #4]	@ unaligned
 5952 2ea2 AA60     		str	r2, [r5, #8]	@ unaligned
 5953 2ea4 EB60     		str	r3, [r5, #12]	@ unaligned
 5954 2ea6 2068     		ldr	r0, [r4]	@ unaligned
 5955 2ea8 2861     		str	r0, [r5, #16]	@ unaligned
 850:..\src/command_processing.c ****                     }
 5956              		.loc 1 850 0
 5957 2eaa 00BF     		nop
 5958              	.L270:
 5959              		.loc 1 852 0
 5960 2eac 06E0     		b	.L198
 5961              	.L284:
 702:..\src/command_processing.c ****                 case 2:     // control mode menu
 5962              		.loc 1 702 0
 5963 2eae 00BF     		nop
 5964 2eb0 04E0     		b	.L198
 5965              	.L285:
 718:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5966              		.loc 1 718 0
 5967 2eb2 00BF     		nop
 5968 2eb4 02E0     		b	.L198
 5969              	.L286:
 762:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5970              		.loc 1 762 0
 5971 2eb6 00BF     		nop
 5972 2eb8 00E0     		b	.L198
 5973              	.L287:
 822:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5974              		.loc 1 822 0
 5975 2eba 00BF     		nop
 5976              	.L198:
 853:..\src/command_processing.c ****             }
 854:..\src/command_processing.c ****             //Recomputes string lenght
 855:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5977              		.loc 1 855 0
 5978 2ebc 07F13803 		add	r3, r7, #56
 5979 2ec0 183B     		subs	r3, r3, #24
 5980 2ec2 1846     		mov	r0, r3
 5981 2ec4 FFF7FEFF 		bl	strlen
 5982 2ec8 0346     		mov	r3, r0
 5983 2eca DBB2     		uxtb	r3, r3
 5984 2ecc 0133     		adds	r3, r3, #1
 5985 2ece 07F5BE52 		add	r2, r7, #6080
 5986 2ed2 02F11202 		add	r2, r2, #18
 5987 2ed6 1370     		strb	r3, [r2]
 5988              	.L197:
 856:..\src/command_processing.c ****         }
 857:..\src/command_processing.c **** 
 858:..\src/command_processing.c ****         // Add parameter string to packet
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 140


 859:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5989              		.loc 1 859 0
 5990 2ed8 07F5BE53 		add	r3, r7, #6080
 5991 2edc 03F11203 		add	r3, r3, #18
 5992 2ee0 1B78     		ldrb	r3, [r3]
 5993 2ee2 07F5BE52 		add	r2, r7, #6080
 5994 2ee6 02F11702 		add	r2, r2, #23
 5995 2eea 1370     		strb	r3, [r2]
 5996 2eec 56E0     		b	.L273
 5997              	.L310:
 5998 2eee 00BF     		.align	2
 5999              	.L309:
 6000 2ef0 E4010000 		.word	.LC122
 6001 2ef4 00000000 		.word	c_mem
 6002 2ef8 F8010000 		.word	.LC123
 6003 2efc 10020000 		.word	.LC124
 6004 2f00 28020000 		.word	.LC125
 6005 2f04 40020000 		.word	.LC126
 6006 2f08 58020000 		.word	.LC127
 6007 2f0c 70020000 		.word	.LC128
 6008              	.L274:
 860:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6009              		.loc 1 860 0 discriminator 3
 6010 2f10 07F5BE53 		add	r3, r7, #6080
 6011 2f14 03F11503 		add	r3, r3, #21
 6012 2f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6013 2f1a 3222     		movs	r2, #50
 6014 2f1c 02FB03F3 		mul	r3, r2, r3
 6015 2f20 1A1D     		adds	r2, r3, #4
 6016 2f22 07F5BE53 		add	r3, r7, #6080
 6017 2f26 03F11303 		add	r3, r3, #19
 6018 2f2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6019 2f2c 07F5BE53 		add	r3, r7, #6080
 6020 2f30 03F11503 		add	r3, r3, #21
 6021 2f34 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6022 2f36 07F11803 		add	r3, r7, #24
 6023 2f3a 143B     		subs	r3, r3, #20
 6024 2f3c 1B68     		ldr	r3, [r3]
 6025 2f3e 0344     		add	r3, r3, r0
 6026 2f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6027 2f42 03FB01F3 		mul	r3, r3, r1
 6028 2f46 1A44     		add	r2, r2, r3
 6029 2f48 07F5BE53 		add	r3, r7, #6080
 6030 2f4c 03F11203 		add	r3, r3, #18
 6031 2f50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6032 2f52 1A44     		add	r2, r2, r3
 6033 2f54 07F5BE53 		add	r3, r7, #6080
 6034 2f58 03F11703 		add	r3, r3, #23
 6035 2f5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6036 2f5e D21A     		subs	r2, r2, r3
 6037 2f60 07F5BE53 		add	r3, r7, #6080
 6038 2f64 03F11203 		add	r3, r3, #18
 6039 2f68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6040 2f6a 07F5BE53 		add	r3, r7, #6080
 6041 2f6e 03F11703 		add	r3, r3, #23
 6042 2f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6043 2f74 C91A     		subs	r1, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 141


 6044 2f76 07F13803 		add	r3, r7, #56
 6045 2f7a 183B     		subs	r3, r3, #24
 6046 2f7c 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 6047 2f7e 07F15803 		add	r3, r7, #88
 6048 2f82 043B     		subs	r3, r3, #4
 6049 2f84 9954     		strb	r1, [r3, r2]
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6050              		.loc 1 859 0 discriminator 3
 6051 2f86 07F5BE53 		add	r3, r7, #6080
 6052 2f8a 03F11703 		add	r3, r3, #23
 6053 2f8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6054 2f90 013B     		subs	r3, r3, #1
 6055 2f92 07F5BE52 		add	r2, r7, #6080
 6056 2f96 02F11702 		add	r2, r2, #23
 6057 2f9a 1370     		strb	r3, [r2]
 6058              	.L273:
 859:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 6059              		.loc 1 859 0 is_stmt 0 discriminator 1
 6060 2f9c 07F5BE53 		add	r3, r7, #6080
 6061 2fa0 03F11703 		add	r3, r3, #23
 6062 2fa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6063 2fa6 002B     		cmp	r3, #0
 6064 2fa8 B2D1     		bne	.L274
 861:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 862:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6065              		.loc 1 862 0 is_stmt 1
 6066 2faa 07F5BE53 		add	r3, r7, #6080
 6067 2fae 03F11503 		add	r3, r3, #21
 6068 2fb2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6069 2fb4 07F11803 		add	r3, r7, #24
 6070 2fb8 103B     		subs	r3, r3, #16
 6071 2fba 1B68     		ldr	r3, [r3]
 6072 2fbc 1344     		add	r3, r3, r2
 6073 2fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6074 2fc0 002B     		cmp	r3, #0
 6075 2fc2 3CD1     		bne	.L275
 863:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 6076              		.loc 1 863 0
 6077 2fc4 07F5BE53 		add	r3, r7, #6080
 6078 2fc8 03F11503 		add	r3, r3, #21
 6079 2fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6080 2fce 3222     		movs	r2, #50
 6081 2fd0 02FB03F3 		mul	r3, r2, r3
 6082 2fd4 1A1D     		adds	r2, r3, #4
 6083 2fd6 07F5BE53 		add	r3, r7, #6080
 6084 2fda 03F11303 		add	r3, r3, #19
 6085 2fde 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6086 2fe0 07F5BE53 		add	r3, r7, #6080
 6087 2fe4 03F11503 		add	r3, r3, #21
 6088 2fe8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6089 2fea 07F11803 		add	r3, r7, #24
 6090 2fee 143B     		subs	r3, r3, #20
 6091 2ff0 1B68     		ldr	r3, [r3]
 6092 2ff2 0344     		add	r3, r3, r0
 6093 2ff4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6094 2ff6 03FB01F3 		mul	r3, r3, r1
 6095 2ffa 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 142


 6096 2ffc 07F5BE53 		add	r3, r7, #6080
 6097 3000 03F11203 		add	r3, r3, #18
 6098 3004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6099 3006 1A44     		add	r2, r2, r3
 6100 3008 07F5BE53 		add	r3, r7, #6080
 6101 300c 03F11403 		add	r3, r3, #20
 6102 3010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6103 3012 07F5BF51 		add	r1, r7, #6112
 6104 3016 01F11001 		add	r1, r1, #16
 6105 301a 0968     		ldr	r1, [r1]
 6106 301c 0B44     		add	r3, r3, r1
 6107 301e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6108 3020 07F15803 		add	r3, r7, #88
 6109 3024 043B     		subs	r3, r3, #4
 6110 3026 9954     		strb	r1, [r3, r2]
 864:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 6111              		.loc 1 864 0
 6112 3028 07F5BE53 		add	r3, r7, #6080
 6113 302c 03F11403 		add	r3, r3, #20
 6114 3030 1B78     		ldrb	r3, [r3]
 6115 3032 0133     		adds	r3, r3, #1
 6116 3034 07F5BE52 		add	r2, r7, #6080
 6117 3038 02F11402 		add	r2, r2, #20
 6118 303c 1370     		strb	r3, [r2]
 6119              	.L275:
 865:..\src/command_processing.c ****         }      
 866:..\src/command_processing.c ****         
 867:..\src/command_processing.c ****         // Add struct index after an empty bit
 868:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 869:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6120              		.loc 1 869 0
 6121 303e 07F5BE53 		add	r3, r7, #6080
 6122 3042 03F11503 		add	r3, r3, #21
 6123 3046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6124 3048 07F11803 		add	r3, r7, #24
 6125 304c 103B     		subs	r3, r3, #16
 6126 304e 1B68     		ldr	r3, [r3]
 6127 3050 1344     		add	r3, r3, r2
 6128 3052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6129 3054 002B     		cmp	r3, #0
 6130 3056 32D1     		bne	.L276
 870:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 6131              		.loc 1 870 0
 6132 3058 07F5BE53 		add	r3, r7, #6080
 6133 305c 03F11503 		add	r3, r3, #21
 6134 3060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6135 3062 3222     		movs	r2, #50
 6136 3064 02FB03F3 		mul	r3, r2, r3
 6137 3068 1A1D     		adds	r2, r3, #4
 6138 306a 07F5BE53 		add	r3, r7, #6080
 6139 306e 03F11303 		add	r3, r3, #19
 6140 3072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6141 3074 07F5BE53 		add	r3, r7, #6080
 6142 3078 03F11503 		add	r3, r3, #21
 6143 307c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6144 307e 07F11803 		add	r3, r7, #24
 6145 3082 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 143


 6146 3084 1B68     		ldr	r3, [r3]
 6147 3086 0344     		add	r3, r3, r0
 6148 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6149 308a 03FB01F3 		mul	r3, r3, r1
 6150 308e 1A44     		add	r2, r2, r3
 6151 3090 07F5BE53 		add	r3, r7, #6080
 6152 3094 03F11203 		add	r3, r3, #18
 6153 3098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6154 309a 1344     		add	r3, r3, r2
 6155 309c 9A1C     		adds	r2, r3, #2
 6156 309e 07F5BE53 		add	r3, r7, #6080
 6157 30a2 03F11503 		add	r3, r3, #21
 6158 30a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6159 30a8 07F11803 		add	r3, r7, #24
 6160 30ac 183B     		subs	r3, r3, #24
 6161 30ae 1B68     		ldr	r3, [r3]
 6162 30b0 0B44     		add	r3, r3, r1
 6163 30b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6164 30b4 07F15803 		add	r3, r7, #88
 6165 30b8 043B     		subs	r3, r3, #4
 6166 30ba 9954     		strb	r1, [r3, r2]
 6167 30bc 31E0     		b	.L277
 6168              	.L276:
 871:..\src/command_processing.c ****         }
 872:..\src/command_processing.c ****         else {
 873:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6169              		.loc 1 873 0
 6170 30be 07F5BE53 		add	r3, r7, #6080
 6171 30c2 03F11503 		add	r3, r3, #21
 6172 30c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6173 30c8 3222     		movs	r2, #50
 6174 30ca 02FB03F3 		mul	r3, r2, r3
 6175 30ce 1A1D     		adds	r2, r3, #4
 6176 30d0 07F5BE53 		add	r3, r7, #6080
 6177 30d4 03F11303 		add	r3, r3, #19
 6178 30d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6179 30da 07F5BE53 		add	r3, r7, #6080
 6180 30de 03F11503 		add	r3, r3, #21
 6181 30e2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6182 30e4 07F11803 		add	r3, r7, #24
 6183 30e8 143B     		subs	r3, r3, #20
 6184 30ea 1B68     		ldr	r3, [r3]
 6185 30ec 0344     		add	r3, r3, r0
 6186 30ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6187 30f0 03FB01F3 		mul	r3, r3, r1
 6188 30f4 1A44     		add	r2, r2, r3
 6189 30f6 07F5BE53 		add	r3, r7, #6080
 6190 30fa 03F11203 		add	r3, r3, #18
 6191 30fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6192 3100 1344     		add	r3, r3, r2
 6193 3102 5A1C     		adds	r2, r3, #1
 6194 3104 07F5BE53 		add	r3, r7, #6080
 6195 3108 03F11503 		add	r3, r3, #21
 6196 310c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6197 310e 07F11803 		add	r3, r7, #24
 6198 3112 183B     		subs	r3, r3, #24
 6199 3114 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 144


 6200 3116 0B44     		add	r3, r3, r1
 6201 3118 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6202 311a 07F15803 		add	r3, r7, #88
 6203 311e 043B     		subs	r3, r3, #4
 6204 3120 9954     		strb	r1, [r3, r2]
 6205              	.L277:
 403:..\src/command_processing.c ****         
 6206              		.loc 1 403 0 discriminator 2
 6207 3122 07F5BE53 		add	r3, r7, #6080
 6208 3126 03F11503 		add	r3, r3, #21
 6209 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6210 312c 0133     		adds	r3, r3, #1
 6211 312e 07F5BE52 		add	r2, r7, #6080
 6212 3132 02F11502 		add	r2, r2, #21
 6213 3136 1370     		strb	r3, [r2]
 6214              	.L73:
 403:..\src/command_processing.c ****         
 6215              		.loc 1 403 0 is_stmt 0 discriminator 1
 6216 3138 07F5BE53 		add	r3, r7, #6080
 6217 313c 03F11503 		add	r3, r3, #21
 6218 3140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6219 3142 522B     		cmp	r3, #82
 6220 3144 7CF6D3AF 		bls	.L278
 874:..\src/command_processing.c ****         }
 875:..\src/command_processing.c ****     }
 876:..\src/command_processing.c **** 
 877:..\src/command_processing.c ****     // Add menu
 878:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6221              		.loc 1 878 0 is_stmt 1
 6222 3148 0023     		movs	r3, #0
 6223 314a 07F5BE52 		add	r2, r7, #6080
 6224 314e 02F11602 		add	r2, r2, #22
 6225 3152 1370     		strb	r3, [r2]
 6226 3154 72E0     		b	.L279
 6227              	.L282:
 879:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6228              		.loc 1 879 0
 6229 3156 07F5BE53 		add	r3, r7, #6080
 6230 315a 03F11603 		add	r3, r3, #22
 6231 315e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6232 3160 9B00     		lsls	r3, r3, #2
 6233 3162 07F5BF52 		add	r2, r7, #6112
 6234 3166 02F11C02 		add	r2, r2, #28
 6235 316a 1268     		ldr	r2, [r2]
 6236 316c 1344     		add	r3, r3, r2
 6237 316e 1B68     		ldr	r3, [r3]
 6238 3170 1846     		mov	r0, r3
 6239 3172 FFF7FEFF 		bl	strlen
 6240 3176 0346     		mov	r3, r0
 6241 3178 07F5BE52 		add	r2, r7, #6080
 6242 317c 02F11202 		add	r2, r2, #18
 6243 3180 1370     		strb	r3, [r2]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6244              		.loc 1 880 0
 6245 3182 07F5BE53 		add	r3, r7, #6080
 6246 3186 03F11203 		add	r3, r3, #18
 6247 318a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 145


 6248 318c 07F5BE52 		add	r2, r7, #6080
 6249 3190 02F11702 		add	r2, r2, #23
 6250 3194 1370     		strb	r3, [r2]
 6251 3196 3FE0     		b	.L280
 6252              	.L281:
 881:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6253              		.loc 1 881 0 discriminator 3
 6254 3198 07F5BE53 		add	r3, r7, #6080
 6255 319c 03F11603 		add	r3, r3, #22
 6256 31a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6257 31a2 9622     		movs	r2, #150
 6258 31a4 02FB03F3 		mul	r3, r2, r3
 6259 31a8 03F58153 		add	r3, r3, #4128
 6260 31ac 1833     		adds	r3, r3, #24
 6261 31ae 07F5BE52 		add	r2, r7, #6080
 6262 31b2 02F11202 		add	r2, r2, #18
 6263 31b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6264 31b8 1A44     		add	r2, r2, r3
 6265 31ba 07F5BE53 		add	r3, r7, #6080
 6266 31be 03F11703 		add	r3, r3, #23
 6267 31c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6268 31c4 D21A     		subs	r2, r2, r3
 6269 31c6 07F5BE53 		add	r3, r7, #6080
 6270 31ca 03F11603 		add	r3, r3, #22
 6271 31ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6272 31d0 9B00     		lsls	r3, r3, #2
 6273 31d2 07F5BF51 		add	r1, r7, #6112
 6274 31d6 01F11C01 		add	r1, r1, #28
 6275 31da 0968     		ldr	r1, [r1]
 6276 31dc 0B44     		add	r3, r3, r1
 6277 31de 1B68     		ldr	r3, [r3]
 6278 31e0 07F5BE51 		add	r1, r7, #6080
 6279 31e4 01F11201 		add	r1, r1, #18
 6280 31e8 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6281 31ea 07F5BE51 		add	r1, r7, #6080
 6282 31ee 01F11701 		add	r1, r1, #23
 6283 31f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6284 31f4 411A     		subs	r1, r0, r1
 6285 31f6 0B44     		add	r3, r3, r1
 6286 31f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6287 31fa 07F15803 		add	r3, r7, #88
 6288 31fe 043B     		subs	r3, r3, #4
 6289 3200 9954     		strb	r1, [r3, r2]
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6290              		.loc 1 880 0 discriminator 3
 6291 3202 07F5BE53 		add	r3, r7, #6080
 6292 3206 03F11703 		add	r3, r3, #23
 6293 320a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6294 320c 013B     		subs	r3, r3, #1
 6295 320e 07F5BE52 		add	r2, r7, #6080
 6296 3212 02F11702 		add	r2, r2, #23
 6297 3216 1370     		strb	r3, [r2]
 6298              	.L280:
 880:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6299              		.loc 1 880 0 is_stmt 0 discriminator 1
 6300 3218 07F5BE53 		add	r3, r7, #6080
 6301 321c 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 146


 6302 3220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6303 3222 002B     		cmp	r3, #0
 6304 3224 B8D1     		bne	.L281
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6305              		.loc 1 878 0 is_stmt 1 discriminator 2
 6306 3226 07F5BE53 		add	r3, r7, #6080
 6307 322a 03F11603 		add	r3, r3, #22
 6308 322e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6309 3230 0133     		adds	r3, r3, #1
 6310 3232 07F5BE52 		add	r2, r7, #6080
 6311 3236 02F11602 		add	r2, r2, #22
 6312 323a 1370     		strb	r3, [r2]
 6313              	.L279:
 878:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6314              		.loc 1 878 0 is_stmt 0 discriminator 1
 6315 323c 07F5BE53 		add	r3, r7, #6080
 6316 3240 03F11603 		add	r3, r3, #22
 6317 3244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6318 3246 0B2B     		cmp	r3, #11
 6319 3248 85D9     		bls	.L282
 882:..\src/command_processing.c ****     }
 883:..\src/command_processing.c ****     
 884:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6320              		.loc 1 884 0 is_stmt 1
 6321 324a 07F5BE53 		add	r3, r7, #6080
 6322 324e 03F11003 		add	r3, r3, #16
 6323 3252 1B88     		ldrh	r3, [r3]
 6324 3254 5C1E     		subs	r4, r3, #1
 6325 3256 07F5BE53 		add	r3, r7, #6080
 6326 325a 03F11003 		add	r3, r3, #16
 6327 325e 1B88     		ldrh	r3, [r3]	@ movhi
 6328 3260 DBB2     		uxtb	r3, r3
 6329 3262 013B     		subs	r3, r3, #1
 6330 3264 DAB2     		uxtb	r2, r3
 6331 3266 07F15803 		add	r3, r7, #88
 6332 326a 043B     		subs	r3, r3, #4
 6333 326c 1146     		mov	r1, r2
 6334 326e 1846     		mov	r0, r3
 6335 3270 FFF7FEFF 		bl	LCRChecksum
 6336 3274 0346     		mov	r3, r0
 6337 3276 1A46     		mov	r2, r3
 6338 3278 07F15803 		add	r3, r7, #88
 6339 327c 043B     		subs	r3, r3, #4
 6340 327e 1A55     		strb	r2, [r3, r4]
 885:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6341              		.loc 1 885 0
 6342 3280 07F5BE53 		add	r3, r7, #6080
 6343 3284 03F11003 		add	r3, r3, #16
 6344 3288 1A88     		ldrh	r2, [r3]
 6345 328a 07F15803 		add	r3, r7, #88
 6346 328e 043B     		subs	r3, r3, #4
 6347 3290 1146     		mov	r1, r2
 6348 3292 1846     		mov	r0, r3
 6349 3294 FFF7FEFF 		bl	commWrite
 886:..\src/command_processing.c **** }
 6350              		.loc 1 886 0
 6351 3298 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 147


 6352 329a 07F5BE57 		add	r7, r7, #6080
 6353 329e 1C37     		adds	r7, r7, #28
 6354              		.cfi_def_cfa_offset 20
 6355 32a0 BD46     		mov	sp, r7
 6356              		.cfi_def_cfa_register 13
 6357              		@ sp needed
 6358 32a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 6359              		.cfi_endproc
 6360              	.LFE67:
 6361              		.size	get_param_list, .-get_param_list
 6362              		.section	.rodata
 6363 0285 000000   		.align	2
 6364              	.LC130:
 6365 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6365      204E6F6E 
 6365      650A3120 
 6365      2D3E204C 
 6365      6F772028 
 6366 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6366      74657220 
 6366      72656164 
 6366      290A3220 
 6366      2D3E2048 
 6367 02e8 62697420 		.ascii	"bit register read)\012\000"
 6367      72656769 
 6367      73746572 
 6367      20726561 
 6367      64290A00 
 6368              		.align	2
 6369              	.LC131:
 6370 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6370      20466173 
 6370      743A7379 
 6370      6E322C20 
 6370      536C6F77 
 6371 032c 796E310A 		.ascii	"yn1\012\000"
 6371      00
 6372 0331 000000   		.align	2
 6373              	.LC132:
 6374 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6374      20466173 
 6374      743A7772 
 6374      6973742C 
 6374      536C6F77 
 6375 0364 616E640A 		.ascii	"and\012\000"
 6375      00
 6376 0369 000000   		.align	2
 6377              	.LC133:
 6378 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6378      20557362 
 6378      0A31202D 
 6378      3E204861 
 6378      6E646C65 
 6379 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6379      20454D47 
 6379      20496E74 
 6379      65677261 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 148


 6379      6C0A3420 
 6380 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6380      616E6365 
 6380      640A3620 
 6380      2D3E204A 
 6380      6F797374 
 6381 03f1 204E430A 		.ascii	" NC\012\000"
 6381      00
 6382 03f6 0000     		.align	2
 6383              	.LC134:
 6384 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6384      20506F73 
 6384      6974696F 
 6384      6E0A3120 
 6384      2D3E2050 
 6385 0422 6F736974 		.ascii	"osition and Current\012\000"
 6385      696F6E20 
 6385      616E6420 
 6385      43757272 
 6385      656E740A 
 6386 0437 00       		.align	2
 6387              	.LC135:
 6388 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6388      20446561 
 6388      63746976 
 6388      61746520 
 6388      5B4E4F5D 
 6389 0462 0000     		.align	2
 6390              	.LC136:
 6391 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6391      20526967 
 6391      68740A31 
 6391      202D3E20 
 6391      4C656674 
 6392 047a 0000     		.align	2
 6393              	.LC137:
 6394 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6394      204F4646 
 6394      0A31202D 
 6394      3E204F4E 
 6394      0A546865 
 6395 04a3 00       		.align	2
 6396              	.LC138:
 6397 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6397      204E6F6E 
 6397      650A3120 
 6397      2D3E2053 
 6397      442F5254 
 6398 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6398      0A33202D 
 6398      3E204F74 
 6398      68657220 
 6398      5B4E2F41 
 6399 04fc 00       		.ascii	"\000"
 6400 04fd 000000   		.align	2
 6401              	.LC139:
 6402 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 149


 6402      2047656E 
 6402      65726963 
 6402      20757365 
 6402      720A3120 
 6403 052a 626F6172 		.ascii	"board will reset\012\000"
 6403      64207769 
 6403      6C6C2072 
 6403      65736574 
 6403      0A00
 6404              		.align	2
 6405              	.LC140:
 6406 053c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6406      204D4333 
 6406      33383837 
 6406      20285374 
 6406      616E6461 
 6407 056c 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 6407      2D3E2045 
 6407      53432028 
 6407      42727573 
 6407      686C6573 
 6408 0598 00       		.ascii	"\000"
 6409 0599 000000   		.align	2
 6410              	.LC141:
 6411 059c 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6411      20534F46 
 6411      5448414E 
 6411      44205052 
 6411      4F0A3120 
 6412 05c9 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6412      4348414D 
 6412      42455253 
 6412      0A33202D 
 6412      3E204F54 
 6413 05f6 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6413      4D4F544F 
 6413      52530A54 
 6413      68652062 
 6413      6F617264 
 6414 0617 00       		.align	2
 6415              	.LC142:
 6416 0618 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6416      20436C6F 
 6416      73653A43 
 6416      572C204F 
 6416      70656E3A 
 6417 0648 00       		.ascii	"\000"
 6418 0649 000000   		.align	2
 6419              	.LC0:
 6420 064c 02       		.byte	2
 6421 064d 07       		.byte	7
 6422 064e 07       		.byte	7
 6423 064f 00       		.byte	0
 6424 0650 00       		.byte	0
 6425 0651 00       		.byte	0
 6426 0652 02       		.byte	2
 6427 0653 03       		.byte	3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 150


 6428 0654 07       		.byte	7
 6429 0655 00       		.byte	0
 6430 0656 05       		.byte	5
 6431 0657 05       		.byte	5
 6432 0658 03       		.byte	3
 6433 0659 04       		.byte	4
 6434 065a 00       		.byte	0
 6435 065b 06       		.byte	6
 6436 065c 02       		.byte	2
 6437 065d 00       		.byte	0
 6438 065e 01       		.byte	1
 6439 065f 00       		.byte	0
 6440 0660 07       		.byte	7
 6441 0661 02       		.byte	2
 6442 0662 05       		.byte	5
 6443 0663 05       		.byte	5
 6444 0664 05       		.byte	5
 6445 0665 00       		.byte	0
 6446 0666 00       		.byte	0
 6447 0667 00       		.byte	0
 6448 0668 00       		.byte	0
 6449 0669 00       		.byte	0
 6450 066a 00       		.byte	0
 6451 066b 02       		.byte	2
 6452 066c 00       		.byte	0
 6453 066d 02       		.byte	2
 6454 066e 00       		.byte	0
 6455 066f 09       		.byte	9
 6456 0670 02       		.byte	2
 6457 0671 00       		.byte	0
 6458 0672 02       		.byte	2
 6459 0673 00       		.byte	0
 6460 0674 02       		.byte	2
 6461 0675 01       		.byte	1
 6462 0676 00       		.byte	0
 6463 0677 07       		.byte	7
 6464 0678 07       		.byte	7
 6465 0679 00       		.byte	0
 6466 067a 00       		.byte	0
 6467 067b 00       		.byte	0
 6468 067c 02       		.byte	2
 6469 067d 03       		.byte	3
 6470 067e 07       		.byte	7
 6471 067f 00       		.byte	0
 6472 0680 05       		.byte	5
 6473 0681 05       		.byte	5
 6474 0682 03       		.byte	3
 6475 0683 00       		.byte	0
 6476 0684 01       		.byte	1
 6477 0685 00       		.byte	0
 6478 0686 07       		.byte	7
 6479 0687 02       		.byte	2
 6480 0688 00       		.byte	0
 6481 0689 02       		.byte	2
 6482 068a 00       		.byte	0
 6483 068b 02       		.byte	2
 6484 068c 01       		.byte	1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 151


 6485 068d 02       		.byte	2
 6486 068e 02       		.byte	2
 6487 068f 00       		.byte	0
 6488 0690 02       		.byte	2
 6489 0691 02       		.byte	2
 6490 0692 00       		.byte	0
 6491 0693 04       		.byte	4
 6492 0694 03       		.byte	3
 6493 0695 04       		.byte	4
 6494 0696 00       		.byte	0
 6495 0697 00       		.byte	0
 6496 0698 04       		.byte	4
 6497 0699 00       		.byte	0
 6498 069a 00       		.byte	0
 6499 069b 02       		.byte	2
 6500 069c 05       		.byte	5
 6501 069d 07       		.byte	7
 6502 069e 07       		.byte	7
 6503 069f 00       		.align	2
 6504              	.LC1:
 6505 06a0 31202D20 		.ascii	"1 - Device ID:\000"
 6505      44657669 
 6505      63652049 
 6505      443A00
 6506 06af 00       		.align	2
 6507              	.LC2:
 6508 06b0 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6508      506F7369 
 6508      74696F6E 
 6508      20504944 
 6508      205B502C 
 6509              		.align	2
 6510              	.LC3:
 6511 06cc 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6511      43757272 
 6511      656E7420 
 6511      50494420 
 6511      5B502C20 
 6512 06e7 00       		.align	2
 6513              	.LC4:
 6514 06e8 34202D20 		.ascii	"4 - Startup Activation:\000"
 6514      53746172 
 6514      74757020 
 6514      41637469 
 6514      76617469 
 6515              		.align	2
 6516              	.LC5:
 6517 0700 35202D20 		.ascii	"5 - Input mode:\000"
 6517      496E7075 
 6517      74206D6F 
 6517      64653A00 
 6518              		.align	2
 6519              	.LC6:
 6520 0710 36202D20 		.ascii	"6 - Control mode:\000"
 6520      436F6E74 
 6520      726F6C20 
 6520      6D6F6465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 152


 6520      3A00
 6521 0722 0000     		.align	2
 6522              	.LC7:
 6523 0724 37202D20 		.ascii	"7 - Resolutions:\000"
 6523      5265736F 
 6523      6C757469 
 6523      6F6E733A 
 6523      00
 6524 0735 000000   		.align	2
 6525              	.LC8:
 6526 0738 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6526      4D656173 
 6526      7572656D 
 6526      656E7420 
 6526      4F666673 
 6527 0751 000000   		.align	2
 6528              	.LC9:
 6529 0754 39202D20 		.ascii	"9 - Multipliers:\000"
 6529      4D756C74 
 6529      69706C69 
 6529      6572733A 
 6529      00
 6530 0765 000000   		.align	2
 6531              	.LC10:
 6532 0768 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6532      20506F73 
 6532      2E206C69 
 6532      6D697420 
 6532      61637469 
 6533              		.align	2
 6534              	.LC11:
 6535 0780 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6535      20506F73 
 6535      2E206C69 
 6535      6D697473 
 6535      205B696E 
 6536 079d 000000   		.align	2
 6537              	.LC12:
 6538 07a0 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6538      204D6178 
 6538      20737465 
 6538      7073205B 
 6538      6E65672C 
 6539 07bb 00       		.align	2
 6540              	.LC13:
 6541 07bc 3133202D 		.ascii	"13 - Current limit:\000"
 6541      20437572 
 6541      72656E74 
 6541      206C696D 
 6541      69743A00 
 6542              		.align	2
 6543              	.LC14:
 6544 07d0 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6544      20454D47 
 6544      20746872 
 6544      6573686F 
 6544      6C64733A 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 153


 6545 07e5 000000   		.align	2
 6546              	.LC15:
 6547 07e8 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6547      20454D47 
 6547      2063616C 
 6547      69627261 
 6547      74696F6E 
 6548 0809 000000   		.align	2
 6549              	.LC16:
 6550 080c 3136202D 		.ascii	"16 - EMG max values:\000"
 6550      20454D47 
 6550      206D6178 
 6550      2076616C 
 6550      7565733A 
 6551 0821 000000   		.align	2
 6552              	.LC17:
 6553 0824 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6553      20454D47 
 6553      206D6178 
 6553      20737065 
 6553      6564733A 
 6554 0839 000000   		.align	2
 6555              	.LC18:
 6556 083c 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6556      20416273 
 6556      6F6C7574 
 6556      6520656E 
 6556      636F6465 
 6557              		.align	2
 6558              	.LC19:
 6559 085c 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6559      204D6F74 
 6559      6F722068 
 6559      616E646C 
 6559      65207261 
 6560 0875 000000   		.align	2
 6561              	.LC20:
 6562 0878 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6562      2050574D 
 6562      20726573 
 6562      63616C69 
 6562      6E673A00 
 6563              		.align	2
 6564              	.LC21:
 6565 088c 3231202D 		.ascii	"21 - Current lookup:\000"
 6565      20437572 
 6565      72656E74 
 6565      206C6F6F 
 6565      6B75703A 
 6566 08a1 000000   		.align	2
 6567              	.LC22:
 6568 08a4 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6568      20446174 
 6568      65206F66 
 6568      206D6169 
 6568      6E74656E 
 6569 08c6 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 154


 6570              	.LC23:
 6571 08c8 3233202D 		.ascii	"23 - Rest position:\000"
 6571      20526573 
 6571      7420706F 
 6571      73697469 
 6571      6F6E3A00 
 6572              		.align	2
 6573              	.LC24:
 6574 08dc 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6574      20526573 
 6574      7420706F 
 6574      73697469 
 6574      6F6E2074 
 6575              		.align	2
 6576              	.LC25:
 6577 0900 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6577      20526573 
 6577      74207665 
 6577      6C20636C 
 6577      6F737572 
 6578 0923 00       		.align	2
 6579              	.LC26:
 6580 0924 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6580      20526573 
 6580      7420706F 
 6580      73697469 
 6580      6F6E2065 
 6581              		.align	2
 6582              	.LC27:
 6583 0940 3237202D 		.ascii	"27 - EMG inversion:\000"
 6583      20454D47 
 6583      20696E76 
 6583      65727369 
 6583      6F6E3A00 
 6584              		.align	2
 6585              	.LC28:
 6586 0954 3238202D 		.ascii	"28 - Hand side:\000"
 6586      2048616E 
 6586      64207369 
 6586      64653A00 
 6587              		.align	2
 6588              	.LC29:
 6589 0964 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6589      20456E61 
 6589      626C6520 
 6589      494D5573 
 6589      3A00
 6590 0976 0000     		.align	2
 6591              	.LC30:
 6592 0978 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6592      20526561 
 6592      64204578 
 6592      70616E73 
 6592      696F6E20 
 6593 0992 0000     		.align	2
 6594              	.LC31:
 6595 0994 3331202D 		.ascii	"31 - Reset counters:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 155


 6595      20526573 
 6595      65742063 
 6595      6F756E74 
 6595      6572733A 
 6596 09a9 000000   		.align	2
 6597              	.LC32:
 6598 09ac 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6598      204C6173 
 6598      74206368 
 6598      65636B65 
 6598      64205469 
 6599 09d2 0000     		.align	2
 6600              	.LC33:
 6601 09d4 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6601      20535049 
 6601      20726561 
 6601      64206465 
 6601      6C617920 
 6602 09ef 00       		.align	2
 6603              	.LC34:
 6604 09f0 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6604      204F6E20 
 6604      626F6172 
 6604      6420494D 
 6604      5520636F 
 6605 0a15 000000   		.align	2
 6606              	.LC35:
 6607 0a18 3335202D 		.ascii	"35 - User ID:\000"
 6607      20557365 
 6607      72204944 
 6607      3A00
 6608 0a26 0000     		.align	2
 6609              	.LC36:
 6610 0a28 3336202D 		.ascii	"36 - User code:\000"
 6610      20557365 
 6610      7220636F 
 6610      64653A00 
 6611              		.align	2
 6612              	.LC37:
 6613 0a38 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6613      20417373 
 6613      6F636961 
 6613      74656420 
 6613      656E636F 
 6614 0a56 0000     		.align	2
 6615              	.LC38:
 6616 0a58 3338202D 		.ascii	"38 - Driver type:\000"
 6616      20447269 
 6616      76657220 
 6616      74797065 
 6616      3A00
 6617 0a6a 0000     		.align	2
 6618              	.LC39:
 6619 0a6c 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6619      2050574D 
 6619      20726174 
 6619      65206C69 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 156


 6619      6D697465 
 6620 0a83 00       		.align	2
 6621              	.LC40:
 6622 0a84 3430202D 		.ascii	"40 - Not reversible:\000"
 6622      204E6F74 
 6622      20726576 
 6622      65727369 
 6622      626C653A 
 6623 0a99 000000   		.align	2
 6624              	.LC41:
 6625 0a9c 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6625      20456E63 
 6625      20696478 
 6625      20757365 
 6625      6420666F 
 6626 0abb 00       		.align	2
 6627              	.LC42:
 6628 0abc 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6628      20476561 
 6628      72207061 
 6628      72616D73 
 6628      5B4E312C 
 6629 0ada 0000     		.align	2
 6630              	.LC43:
 6631 0adc 3433202D 		.ascii	"43 - Use second motor:\000"
 6631      20557365 
 6631      20736563 
 6631      6F6E6420 
 6631      6D6F746F 
 6632 0af3 00       		.align	2
 6633              	.LC44:
 6634 0af4 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6634      20506F73 
 6634      6974696F 
 6634      6E205049 
 6634      44205B50 
 6635 0b11 000000   		.align	2
 6636              	.LC45:
 6637 0b14 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6637      20437572 
 6637      72656E74 
 6637      20504944 
 6637      205B502C 
 6638              		.align	2
 6639              	.LC46:
 6640 0b30 3436202D 		.ascii	"46 - Startup Activation:\000"
 6640      20537461 
 6640      72747570 
 6640      20416374 
 6640      69766174 
 6641 0b49 000000   		.align	2
 6642              	.LC47:
 6643 0b4c 3437202D 		.ascii	"47 - Input mode:\000"
 6643      20496E70 
 6643      7574206D 
 6643      6F64653A 
 6643      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 157


 6644 0b5d 000000   		.align	2
 6645              	.LC48:
 6646 0b60 3438202D 		.ascii	"48 - Control mode:\000"
 6646      20436F6E 
 6646      74726F6C 
 6646      206D6F64 
 6646      653A00
 6647 0b73 00       		.align	2
 6648              	.LC49:
 6649 0b74 3439202D 		.ascii	"49 - Resolutions:\000"
 6649      20526573 
 6649      6F6C7574 
 6649      696F6E73 
 6649      3A00
 6650 0b86 0000     		.align	2
 6651              	.LC50:
 6652 0b88 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6652      204D6561 
 6652      73757265 
 6652      6D656E74 
 6652      204F6666 
 6653 0ba2 0000     		.align	2
 6654              	.LC51:
 6655 0ba4 3531202D 		.ascii	"51 - Multipliers:\000"
 6655      204D756C 
 6655      7469706C 
 6655      69657273 
 6655      3A00
 6656 0bb6 0000     		.align	2
 6657              	.LC52:
 6658 0bb8 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6658      20506F73 
 6658      2E206C69 
 6658      6D697420 
 6658      61637469 
 6659              		.align	2
 6660              	.LC53:
 6661 0bd0 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6661      20506F73 
 6661      2E206C69 
 6661      6D697473 
 6661      205B696E 
 6662 0bed 000000   		.align	2
 6663              	.LC54:
 6664 0bf0 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6664      204D6178 
 6664      20737465 
 6664      7073205B 
 6664      6E65672C 
 6665 0c0b 00       		.align	2
 6666              	.LC55:
 6667 0c0c 3535202D 		.ascii	"55 - Current limit:\000"
 6667      20437572 
 6667      72656E74 
 6667      206C696D 
 6667      69743A00 
 6668              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 158


 6669              	.LC56:
 6670 0c20 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6670      20416273 
 6670      6F6C7574 
 6670      6520656E 
 6670      636F6465 
 6671              		.align	2
 6672              	.LC57:
 6673 0c40 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6673      204D6F74 
 6673      6F722068 
 6673      616E646C 
 6673      65207261 
 6674 0c59 000000   		.align	2
 6675              	.LC58:
 6676 0c5c 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6676      2050574D 
 6676      20726573 
 6676      63616C69 
 6676      6E673A00 
 6677              		.align	2
 6678              	.LC59:
 6679 0c70 3539202D 		.ascii	"59 - Current lookup:\000"
 6679      20437572 
 6679      72656E74 
 6679      206C6F6F 
 6679      6B75703A 
 6680 0c85 000000   		.align	2
 6681              	.LC60:
 6682 0c88 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6682      20417373 
 6682      6F636961 
 6682      74656420 
 6682      656E636F 
 6683 0ca6 0000     		.align	2
 6684              	.LC61:
 6685 0ca8 3631202D 		.ascii	"61 - Driver type:\000"
 6685      20447269 
 6685      76657220 
 6685      74797065 
 6685      3A00
 6686 0cba 0000     		.align	2
 6687              	.LC62:
 6688 0cbc 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6688      2050574D 
 6688      20726174 
 6688      65206C69 
 6688      6D697465 
 6689 0cd3 00       		.align	2
 6690              	.LC63:
 6691 0cd4 3633202D 		.ascii	"63 - Not reversible:\000"
 6691      204E6F74 
 6691      20726576 
 6691      65727369 
 6691      626C653A 
 6692 0ce9 000000   		.align	2
 6693              	.LC64:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 159


 6694 0cec 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6694      20456E63 
 6694      20696478 
 6694      20757365 
 6694      6420666F 
 6695 0d0b 00       		.align	2
 6696              	.LC65:
 6697 0d0c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6697      20476561 
 6697      72207061 
 6697      72616D73 
 6697      5B4E312C 
 6698 0d2a 0000     		.align	2
 6699              	.LC66:
 6700 0d2c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6700      20526561 
 6700      6420656E 
 6700      63207261 
 6700      77206C69 
 6701 0d46 0000     		.align	2
 6702              	.LC67:
 6703 0d48 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6703      20526561 
 6703      6420656E 
 6703      63207261 
 6703      77206C69 
 6704 0d62 0000     		.align	2
 6705              	.LC68:
 6706 0d64 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6706      20526561 
 6706      64206164 
 6706      64697469 
 6706      6F6E616C 
 6707 0d83 00       		.align	2
 6708              	.LC69:
 6709 0d84 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6709      20414443 
 6709      20636861 
 6709      6E6E656C 
 6709      205B312D 
 6710              		.align	2
 6711              	.LC70:
 6712 0d9c 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6712      20414443 
 6712      20636861 
 6712      6E6E656C 
 6712      205B372D 
 6713 0db5 000000   		.align	2
 6714              	.LC71:
 6715 0db8 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6715      20526563 
 6715      6F726420 
 6715      454D4720 
 6715      6F6E2053 
 6716              		.align	2
 6717              	.LC72:
 6718 0dd4 3732202D 		.ascii	"72 - Joystick closure speed:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 160


 6718      204A6F79 
 6718      73746963 
 6718      6B20636C 
 6718      6F737572 
 6719 0df1 000000   		.align	2
 6720              	.LC73:
 6721 0df4 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6721      204A6F79 
 6721      73746963 
 6721      6B207468 
 6721      72657368 
 6722 0e0d 000000   		.align	2
 6723              	.LC74:
 6724 0e10 3734202D 		.ascii	"74 - Joystick gains:\000"
 6724      204A6F79 
 6724      73746963 
 6724      6B206761 
 6724      696E733A 
 6725 0e25 000000   		.align	2
 6726              	.LC75:
 6727 0e28 3735202D 		.ascii	"75 - Device type:\000"
 6727      20446576 
 6727      69636520 
 6727      74797065 
 6727      3A00
 6728 0e3a 0000     		.align	2
 6729              	.LC76:
 6730 0e3c 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6730      20454D47 
 6730      2046534D 
 6730      20616374 
 6730      2E6D6F64 
 6731 0e53 00       		.align	2
 6732              	.LC77:
 6733 0e54 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 6733      20466173 
 6733      74206163 
 6733      742E7468 
 6733      72657368 
 6734 0e6e 0000     		.align	2
 6735              	.LC78:
 6736 0e70 3738202D 		.ascii	"78 - Wrist direction:\000"
 6736      20577269 
 6736      73742064 
 6736      69726563 
 6736      74696F6E 
 6737 0e86 0000     		.align	2
 6738              	.LC79:
 6739 0e88 3739202D 		.ascii	"79 - Slave communication active:\000"
 6739      20536C61 
 6739      76652063 
 6739      6F6D6D75 
 6739      6E696361 
 6740 0ea9 000000   		.align	2
 6741              	.LC80:
 6742 0eac 3830202D 		.ascii	"80 - Slave ID:\000"
 6742      20536C61 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 161


 6742      76652049 
 6742      443A00
 6743 0ebb 00       		.align	2
 6744              	.LC81:
 6745 0ebc 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6745      204D6178 
 6745      696D756D 
 6745      20736C61 
 6745      76652072 
 6746 0ee1 000000   		.align	2
 6747              	.LC82:
 6748 0ee4 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6748      204D6178 
 6748      696D756D 
 6748      20707265 
 6748      73737572 
 6749 0f0a 0000     		.align	2
 6750              	.LC83:
 6751 0f0c 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6751      2050726F 
 6751      706F7274 
 6751      696F6E61 
 6751      6C207072 
 6752 0f33 00       		.align	2
 6753              	.LC129:
 6754 0f34 A0060000 		.word	.LC1
 6755 0f38 B0060000 		.word	.LC2
 6756 0f3c CC060000 		.word	.LC3
 6757 0f40 E8060000 		.word	.LC4
 6758 0f44 00070000 		.word	.LC5
 6759 0f48 10070000 		.word	.LC6
 6760 0f4c 24070000 		.word	.LC7
 6761 0f50 38070000 		.word	.LC8
 6762 0f54 54070000 		.word	.LC9
 6763 0f58 68070000 		.word	.LC10
 6764 0f5c 80070000 		.word	.LC11
 6765 0f60 A0070000 		.word	.LC12
 6766 0f64 BC070000 		.word	.LC13
 6767 0f68 D0070000 		.word	.LC14
 6768 0f6c E8070000 		.word	.LC15
 6769 0f70 0C080000 		.word	.LC16
 6770 0f74 24080000 		.word	.LC17
 6771 0f78 3C080000 		.word	.LC18
 6772 0f7c 5C080000 		.word	.LC19
 6773 0f80 78080000 		.word	.LC20
 6774 0f84 8C080000 		.word	.LC21
 6775 0f88 A4080000 		.word	.LC22
 6776 0f8c C8080000 		.word	.LC23
 6777 0f90 DC080000 		.word	.LC24
 6778 0f94 00090000 		.word	.LC25
 6779 0f98 24090000 		.word	.LC26
 6780 0f9c 40090000 		.word	.LC27
 6781 0fa0 54090000 		.word	.LC28
 6782 0fa4 64090000 		.word	.LC29
 6783 0fa8 78090000 		.word	.LC30
 6784 0fac 94090000 		.word	.LC31
 6785 0fb0 AC090000 		.word	.LC32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 162


 6786 0fb4 D4090000 		.word	.LC33
 6787 0fb8 F0090000 		.word	.LC34
 6788 0fbc 180A0000 		.word	.LC35
 6789 0fc0 280A0000 		.word	.LC36
 6790 0fc4 380A0000 		.word	.LC37
 6791 0fc8 580A0000 		.word	.LC38
 6792 0fcc 6C0A0000 		.word	.LC39
 6793 0fd0 840A0000 		.word	.LC40
 6794 0fd4 9C0A0000 		.word	.LC41
 6795 0fd8 BC0A0000 		.word	.LC42
 6796 0fdc DC0A0000 		.word	.LC43
 6797 0fe0 F40A0000 		.word	.LC44
 6798 0fe4 140B0000 		.word	.LC45
 6799 0fe8 300B0000 		.word	.LC46
 6800 0fec 4C0B0000 		.word	.LC47
 6801 0ff0 600B0000 		.word	.LC48
 6802 0ff4 740B0000 		.word	.LC49
 6803 0ff8 880B0000 		.word	.LC50
 6804 0ffc A40B0000 		.word	.LC51
 6805 1000 B80B0000 		.word	.LC52
 6806 1004 D00B0000 		.word	.LC53
 6807 1008 F00B0000 		.word	.LC54
 6808 100c 0C0C0000 		.word	.LC55
 6809 1010 200C0000 		.word	.LC56
 6810 1014 400C0000 		.word	.LC57
 6811 1018 5C0C0000 		.word	.LC58
 6812 101c 700C0000 		.word	.LC59
 6813 1020 880C0000 		.word	.LC60
 6814 1024 A80C0000 		.word	.LC61
 6815 1028 BC0C0000 		.word	.LC62
 6816 102c D40C0000 		.word	.LC63
 6817 1030 EC0C0000 		.word	.LC64
 6818 1034 0C0D0000 		.word	.LC65
 6819 1038 2C0D0000 		.word	.LC66
 6820 103c 480D0000 		.word	.LC67
 6821 1040 640D0000 		.word	.LC68
 6822 1044 840D0000 		.word	.LC69
 6823 1048 9C0D0000 		.word	.LC70
 6824 104c B80D0000 		.word	.LC71
 6825 1050 D40D0000 		.word	.LC72
 6826 1054 F40D0000 		.word	.LC73
 6827 1058 100E0000 		.word	.LC74
 6828 105c 280E0000 		.word	.LC75
 6829 1060 3C0E0000 		.word	.LC76
 6830 1064 540E0000 		.word	.LC77
 6831 1068 700E0000 		.word	.LC78
 6832 106c 880E0000 		.word	.LC79
 6833 1070 AC0E0000 		.word	.LC80
 6834 1074 BC0E0000 		.word	.LC81
 6835 1078 E40E0000 		.word	.LC82
 6836 107c 0C0F0000 		.word	.LC83
 6837              		.align	2
 6838              	.LC85:
 6839 1080 03       		.byte	3
 6840 1081 01       		.byte	1
 6841 1082 02       		.byte	2
 6842 1083 03       		.byte	3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 163


 6843 1084 03       		.byte	3
 6844 1085 03       		.byte	3
 6845 1086 03       		.byte	3
 6846 1087 03       		.byte	3
 6847 1088 03       		.byte	3
 6848 1089 04       		.byte	4
 6849 108a 05       		.byte	5
 6850 108b 06       		.byte	6
 6851 108c 03       		.byte	3
 6852 108d 07       		.byte	7
 6853 108e 08       		.byte	8
 6854 108f 09       		.byte	9
 6855 1090 03       		.byte	3
 6856 1091 05       		.byte	5
 6857 1092 03       		.byte	3
 6858 1093 01       		.byte	1
 6859 1094 02       		.byte	2
 6860 1095 03       		.byte	3
 6861 1096 03       		.byte	3
 6862 1097 03       		.byte	3
 6863 1098 09       		.byte	9
 6864 1099 03       		.byte	3
 6865 109a 05       		.byte	5
 6866 109b 03       		.byte	3
 6867 109c 0A       		.byte	10
 6868 109d 0B       		.byte	11
 6869 109e 0C       		.byte	12
 6870 109f 03       		.byte	3
 6871              		.align	2
 6872              	.LC86:
 6873 10a0 02       		.byte	2
 6874 10a1 03       		.byte	3
 6875 10a2 08       		.byte	8
 6876 10a3 0B       		.byte	11
 6877 10a4 17       		.byte	23
 6878 10a5 2C       		.byte	44
 6879 10a6 2D       		.byte	45
 6880 10a7 32       		.byte	50
 6881 10a8 35       		.byte	53
 6882 10a9 000000   		.align	2
 6883              	.LC87:
 6884 10ac 02       		.byte	2
 6885 10ad 03       		.byte	3
 6886 10ae 05       		.byte	5
 6887 10af 08       		.byte	8
 6888 10b0 0B       		.byte	11
 6889 10b1 17       		.byte	23
 6890 10b2 18       		.byte	24
 6891 10b3 1C       		.byte	28
 6892 10b4 1F       		.byte	31
 6893 10b5 20       		.byte	32
 6894 10b6 26       		.byte	38
 6895 10b7 2C       		.byte	44
 6896 10b8 2D       		.byte	45
 6897 10b9 2F       		.byte	47
 6898 10ba 32       		.byte	50
 6899 10bb 35       		.byte	53
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 164


 6900 10bc 3D       		.byte	61
 6901 10bd 4B       		.byte	75
 6902              		.section	.text.manage_param_list,"ax",%progbits
 6903              		.align	2
 6904              		.global	manage_param_list
 6905              		.thumb
 6906              		.thumb_func
 6907              		.type	manage_param_list, %function
 6908              	manage_param_list:
 6909              	.LFB68:
 887:..\src/command_processing.c **** 
 888:..\src/command_processing.c **** //==============================================================================
 889:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 890:..\src/command_processing.c **** //==============================================================================
 891:..\src/command_processing.c **** 
 892:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6910              		.loc 1 892 0
 6911              		.cfi_startproc
 6912              		@ args = 0, pretend = 0, frame = 1416
 6913              		@ frame_needed = 1, uses_anonymous_args = 0
 6914 0000 B0B5     		push	{r4, r5, r7, lr}
 6915              		.cfi_def_cfa_offset 16
 6916              		.cfi_offset 4, -16
 6917              		.cfi_offset 5, -12
 6918              		.cfi_offset 7, -8
 6919              		.cfi_offset 14, -4
 6920 0002 ADF5B36D 		sub	sp, sp, #1432
 6921              		.cfi_def_cfa_offset 1448
 6922 0006 04AF     		add	r7, sp, #16
 6923              		.cfi_def_cfa 7, 1432
 6924 0008 0246     		mov	r2, r0
 6925 000a BB1D     		adds	r3, r7, #6
 6926 000c 1A80     		strh	r2, [r3]	@ movhi
 893:..\src/command_processing.c ****     uint8 CYDATA i, j;
 894:..\src/command_processing.c ****     uint8 CYDATA sod;
 895:..\src/command_processing.c ****     uint8 PARAM_IDX;
 896:..\src/command_processing.c ****     int16 aux_int16;
 897:..\src/command_processing.c ****     uint16 aux_uint16;
 898:..\src/command_processing.c ****     int32 aux_int32;
 899:..\src/command_processing.c ****     uint32 aux_uint32;
 900:..\src/command_processing.c ****     float aux_float;
 901:..\src/command_processing.c ****  
 902:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6927              		.loc 1 902 0
 6928 000e 0023     		movs	r3, #0
 6929 0010 87F87D35 		strb	r3, [r7, #1405]
 903:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6930              		.loc 1 903 0
 6931 0014 0123     		movs	r3, #1
 6932 0016 87F87C35 		strb	r3, [r7, #1404]
 904:..\src/command_processing.c ****     
 905:..\src/command_processing.c ****     // Arrays
 906:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6933              		.loc 1 906 0
 6934 001a 054B     		ldr	r3, .L375
 6935 001c C7F88035 		str	r3, [r7, #1408]
 907:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 165


 908:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6936              		.loc 1 908 0
 6937 0020 BB1D     		adds	r3, r7, #6
 6938 0022 1B88     		ldrh	r3, [r3]
 6939 0024 002B     		cmp	r3, #0
 6940 0026 07D0     		beq	.L312
 909:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6941              		.loc 1 909 0
 6942 0028 024B     		ldr	r3, .L375+4
 6943 002a C7F88035 		str	r3, [r7, #1408]
 6944 002e 03E0     		b	.L376
 6945              	.L377:
 6946              		.align	2
 6947              	.L375:
 6948 0030 00000000 		.word	c_mem
 6949 0034 00000000 		.word	g_mem
 6950              	.L376:
 6951              	.L312:
 910:..\src/command_processing.c ****     }
 911:..\src/command_processing.c ****  
 912:..\src/command_processing.c ****     
 913:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 914:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6952              		.loc 1 915 0
 6953 0038 D7F88035 		ldr	r3, [r7, #1408]
 6954 003c 03F1A002 		add	r2, r3, #160
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6955              		.loc 1 914 0
 6956 0040 07F21C43 		addw	r3, r7, #1052
 6957 0044 1A60     		str	r2, [r3]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6958              		.loc 1 916 0
 6959 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6960 004a 1346     		mov	r3, r2
 6961 004c DB00     		lsls	r3, r3, #3
 6962 004e 9B1A     		subs	r3, r3, r2
 6963 0050 1B01     		lsls	r3, r3, #4
 6964 0052 B033     		adds	r3, r3, #176
 6965 0054 D7F88025 		ldr	r2, [r7, #1408]
 6966 0058 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6967              		.loc 1 914 0
 6968 005a 07F21C43 		addw	r3, r7, #1052
 6969 005e 5A60     		str	r2, [r3, #4]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6970              		.loc 1 917 0
 6971 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6972 0064 1346     		mov	r3, r2
 6973 0066 DB00     		lsls	r3, r3, #3
 6974 0068 9B1A     		subs	r3, r3, r2
 6975 006a 1B01     		lsls	r3, r3, #4
 6976 006c B833     		adds	r3, r3, #184
 6977 006e D7F88025 		ldr	r2, [r7, #1408]
 6978 0072 1344     		add	r3, r3, r2
 6979 0074 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 166


 6980              		.loc 1 914 0
 6981 0076 07F21C43 		addw	r3, r7, #1052
 6982 007a 9A60     		str	r2, [r3, #8]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6983              		.loc 1 918 0
 6984 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6985 0080 1346     		mov	r3, r2
 6986 0082 DB00     		lsls	r3, r3, #3
 6987 0084 9B1A     		subs	r3, r3, r2
 6988 0086 1B01     		lsls	r3, r3, #4
 6989 0088 E033     		adds	r3, r3, #224
 6990 008a D7F88025 		ldr	r2, [r7, #1408]
 6991 008e 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6992              		.loc 1 914 0
 6993 0090 07F21C43 		addw	r3, r7, #1052
 6994 0094 DA60     		str	r2, [r3, #12]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6995              		.loc 1 919 0
 6996 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6997 009a 1346     		mov	r3, r2
 6998 009c DB00     		lsls	r3, r3, #3
 6999 009e 9B1A     		subs	r3, r3, r2
 7000 00a0 1B01     		lsls	r3, r3, #4
 7001 00a2 03F58473 		add	r3, r3, #264
 7002 00a6 D7F88025 		ldr	r2, [r7, #1408]
 7003 00aa 1344     		add	r3, r3, r2
 7004 00ac 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7005              		.loc 1 914 0
 7006 00ae 07F21C43 		addw	r3, r7, #1052
 7007 00b2 1A61     		str	r2, [r3, #16]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 7008              		.loc 1 920 0
 7009 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7010 00b8 1346     		mov	r3, r2
 7011 00ba DB00     		lsls	r3, r3, #3
 7012 00bc 9B1A     		subs	r3, r3, r2
 7013 00be 1B01     		lsls	r3, r3, #4
 7014 00c0 03F58473 		add	r3, r3, #264
 7015 00c4 D7F88025 		ldr	r2, [r7, #1408]
 7016 00c8 1344     		add	r3, r3, r2
 7017 00ca DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7018              		.loc 1 914 0
 7019 00cc 07F21C43 		addw	r3, r7, #1052
 7020 00d0 5A61     		str	r2, [r3, #20]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 7021              		.loc 1 921 0
 7022 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7023 00d6 D7F88015 		ldr	r1, [r7, #1408]
 7024 00da 1346     		mov	r3, r2
 7025 00dc DB00     		lsls	r3, r3, #3
 7026 00de 9B1A     		subs	r3, r3, r2
 7027 00e0 1B01     		lsls	r3, r3, #4
 7028 00e2 0B44     		add	r3, r3, r1
 7029 00e4 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 167


 7030 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7031 00ea 1A46     		mov	r2, r3
 7032 00ec 1346     		mov	r3, r2
 7033 00ee 5B00     		lsls	r3, r3, #1
 7034 00f0 1344     		add	r3, r3, r2
 7035 00f2 1B01     		lsls	r3, r3, #4
 7036 00f4 03F5C873 		add	r3, r3, #400
 7037 00f8 D7F88025 		ldr	r2, [r7, #1408]
 7038 00fc 1344     		add	r3, r3, r2
 7039 00fe 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7040              		.loc 1 914 0
 7041 0100 07F21C43 		addw	r3, r7, #1052
 7042 0104 9A61     		str	r2, [r3, #24]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 7043              		.loc 1 922 0
 7044 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7045 010a D7F88015 		ldr	r1, [r7, #1408]
 7046 010e 1346     		mov	r3, r2
 7047 0110 DB00     		lsls	r3, r3, #3
 7048 0112 9B1A     		subs	r3, r3, r2
 7049 0114 1B01     		lsls	r3, r3, #4
 7050 0116 0B44     		add	r3, r3, r1
 7051 0118 03F58873 		add	r3, r3, #272
 7052 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7053 011e 1A46     		mov	r2, r3
 7054 0120 1346     		mov	r3, r2
 7055 0122 5B00     		lsls	r3, r3, #1
 7056 0124 1344     		add	r3, r3, r2
 7057 0126 1B01     		lsls	r3, r3, #4
 7058 0128 03F5CC73 		add	r3, r3, #408
 7059 012c D7F88025 		ldr	r2, [r7, #1408]
 7060 0130 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7061              		.loc 1 914 0
 7062 0132 07F21C43 		addw	r3, r7, #1052
 7063 0136 DA61     		str	r2, [r3, #28]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 7064              		.loc 1 923 0
 7065 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7066 013c D7F88015 		ldr	r1, [r7, #1408]
 7067 0140 1346     		mov	r3, r2
 7068 0142 DB00     		lsls	r3, r3, #3
 7069 0144 9B1A     		subs	r3, r3, r2
 7070 0146 1B01     		lsls	r3, r3, #4
 7071 0148 0B44     		add	r3, r3, r1
 7072 014a 03F58873 		add	r3, r3, #272
 7073 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7074 0150 1A46     		mov	r2, r3
 7075 0152 1346     		mov	r3, r2
 7076 0154 5B00     		lsls	r3, r3, #1
 7077 0156 1344     		add	r3, r3, r2
 7078 0158 1B01     		lsls	r3, r3, #4
 7079 015a 03F5D073 		add	r3, r3, #416
 7080 015e D7F88025 		ldr	r2, [r7, #1408]
 7081 0162 1344     		add	r3, r3, r2
 7082 0164 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 168


 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7083              		.loc 1 914 0
 7084 0166 07F21C43 		addw	r3, r7, #1052
 7085 016a 1A62     		str	r2, [r3, #32]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 7086              		.loc 1 924 0
 7087 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7088 0170 1346     		mov	r3, r2
 7089 0172 DB00     		lsls	r3, r3, #3
 7090 0174 9B1A     		subs	r3, r3, r2
 7091 0176 1B01     		lsls	r3, r3, #4
 7092 0178 E033     		adds	r3, r3, #224
 7093 017a D7F88025 		ldr	r2, [r7, #1408]
 7094 017e 1344     		add	r3, r3, r2
 7095 0180 DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7096              		.loc 1 914 0
 7097 0182 07F21C43 		addw	r3, r7, #1052
 7098 0186 5A62     		str	r2, [r3, #36]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 7099              		.loc 1 925 0
 7100 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7101 018c 1346     		mov	r3, r2
 7102 018e DB00     		lsls	r3, r3, #3
 7103 0190 9B1A     		subs	r3, r3, r2
 7104 0192 1B01     		lsls	r3, r3, #4
 7105 0194 E033     		adds	r3, r3, #224
 7106 0196 D7F88025 		ldr	r2, [r7, #1408]
 7107 019a 1344     		add	r3, r3, r2
 7108 019c 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7109              		.loc 1 914 0
 7110 019e 07F21C43 		addw	r3, r7, #1052
 7111 01a2 9A62     		str	r2, [r3, #40]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7112              		.loc 1 926 0
 7113 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7114 01a8 1346     		mov	r3, r2
 7115 01aa DB00     		lsls	r3, r3, #3
 7116 01ac 9B1A     		subs	r3, r3, r2
 7117 01ae 1B01     		lsls	r3, r3, #4
 7118 01b0 E833     		adds	r3, r3, #232
 7119 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7120 01b6 1344     		add	r3, r3, r2
 7121 01b8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7122              		.loc 1 914 0
 7123 01ba 07F21C43 		addw	r3, r7, #1052
 7124 01be DA62     		str	r2, [r3, #44]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7125              		.loc 1 927 0
 7126 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7127 01c4 1346     		mov	r3, r2
 7128 01c6 DB00     		lsls	r3, r3, #3
 7129 01c8 9B1A     		subs	r3, r3, r2
 7130 01ca 1B01     		lsls	r3, r3, #4
 7131 01cc 03F58473 		add	r3, r3, #264
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 169


 7132 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7133 01d4 1344     		add	r3, r3, r2
 7134 01d6 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7135              		.loc 1 914 0
 7136 01d8 07F21C43 		addw	r3, r7, #1052
 7137 01dc 1A63     		str	r2, [r3, #48]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7138              		.loc 1 928 0
 7139 01de D7F88035 		ldr	r3, [r7, #1408]
 7140 01e2 03F5F872 		add	r2, r3, #496
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7141              		.loc 1 914 0
 7142 01e6 07F21C43 		addw	r3, r7, #1052
 7143 01ea 5A63     		str	r2, [r3, #52]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7144              		.loc 1 929 0
 7145 01ec D7F88035 		ldr	r3, [r7, #1408]
 7146 01f0 03F5FF72 		add	r2, r3, #510
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7147              		.loc 1 914 0
 7148 01f4 07F21C43 		addw	r3, r7, #1052
 7149 01f8 9A63     		str	r2, [r3, #56]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7150              		.loc 1 930 0
 7151 01fa D7F88035 		ldr	r3, [r7, #1408]
 7152 01fe 03F5FA72 		add	r2, r3, #500
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7153              		.loc 1 914 0
 7154 0202 07F21C43 		addw	r3, r7, #1052
 7155 0206 DA63     		str	r2, [r3, #60]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7156              		.loc 1 931 0
 7157 0208 D7F88035 		ldr	r3, [r7, #1408]
 7158 020c 03F5FE72 		add	r2, r3, #508
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7159              		.loc 1 914 0
 7160 0210 07F21C43 		addw	r3, r7, #1052
 7161 0214 1A64     		str	r2, [r3, #64]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7162              		.loc 1 932 0
 7163 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7164 021a D7F88015 		ldr	r1, [r7, #1408]
 7165 021e 1346     		mov	r3, r2
 7166 0220 DB00     		lsls	r3, r3, #3
 7167 0222 9B1A     		subs	r3, r3, r2
 7168 0224 1B01     		lsls	r3, r3, #4
 7169 0226 0B44     		add	r3, r3, r1
 7170 0228 03F58873 		add	r3, r3, #272
 7171 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7172 022e 1A46     		mov	r2, r3
 7173 0230 1346     		mov	r3, r2
 7174 0232 5B00     		lsls	r3, r3, #1
 7175 0234 1344     		add	r3, r3, r2
 7176 0236 1B01     		lsls	r3, r3, #4
 7177 0238 03F5D873 		add	r3, r3, #432
 7178 023c D7F88025 		ldr	r2, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 170


 7179 0240 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7180              		.loc 1 914 0
 7181 0242 07F21C43 		addw	r3, r7, #1052
 7182 0246 5A64     		str	r2, [r3, #68]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7183              		.loc 1 933 0
 7184 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7185 024c D7F88015 		ldr	r1, [r7, #1408]
 7186 0250 1346     		mov	r3, r2
 7187 0252 DB00     		lsls	r3, r3, #3
 7188 0254 9B1A     		subs	r3, r3, r2
 7189 0256 1B01     		lsls	r3, r3, #4
 7190 0258 0B44     		add	r3, r3, r1
 7191 025a 03F58873 		add	r3, r3, #272
 7192 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7193 0260 1A46     		mov	r2, r3
 7194 0262 1346     		mov	r3, r2
 7195 0264 5B00     		lsls	r3, r3, #1
 7196 0266 1344     		add	r3, r3, r2
 7197 0268 1B01     		lsls	r3, r3, #4
 7198 026a 03F5D873 		add	r3, r3, #432
 7199 026e D7F88025 		ldr	r2, [r7, #1408]
 7200 0272 1344     		add	r3, r3, r2
 7201 0274 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7202              		.loc 1 914 0
 7203 0276 07F21C43 		addw	r3, r7, #1052
 7204 027a 9A64     		str	r2, [r3, #72]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7205              		.loc 1 934 0
 7206 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7207 0280 1346     		mov	r3, r2
 7208 0282 DB00     		lsls	r3, r3, #3
 7209 0284 9B1A     		subs	r3, r3, r2
 7210 0286 1B01     		lsls	r3, r3, #4
 7211 0288 E033     		adds	r3, r3, #224
 7212 028a D7F88025 		ldr	r2, [r7, #1408]
 7213 028e 1344     		add	r3, r3, r2
 7214 0290 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7215              		.loc 1 914 0
 7216 0292 07F21C43 		addw	r3, r7, #1052
 7217 0296 DA64     		str	r2, [r3, #76]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7218              		.loc 1 935 0
 7219 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7220 029c 1346     		mov	r3, r2
 7221 029e DB00     		lsls	r3, r3, #3
 7222 02a0 9B1A     		subs	r3, r3, r2
 7223 02a2 1B01     		lsls	r3, r3, #4
 7224 02a4 F033     		adds	r3, r3, #240
 7225 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7226 02aa 1344     		add	r3, r3, r2
 7227 02ac 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7228              		.loc 1 914 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 171


 7229 02ae 07F21C43 		addw	r3, r7, #1052
 7230 02b2 1A65     		str	r2, [r3, #80]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7231              		.loc 1 936 0
 7232 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7233 02b8 03F1A102 		add	r2, r3, #161
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7234              		.loc 1 914 0
 7235 02bc 07F21C43 		addw	r3, r7, #1052
 7236 02c0 5A65     		str	r2, [r3, #84]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7237              		.loc 1 937 0
 7238 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7239 02c6 03F52872 		add	r2, r3, #672
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7240              		.loc 1 914 0
 7241 02ca 07F21C43 		addw	r3, r7, #1052
 7242 02ce 9A65     		str	r2, [r3, #88]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7243              		.loc 1 938 0
 7244 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7245 02d4 03F52972 		add	r2, r3, #676
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7246              		.loc 1 914 0
 7247 02d8 07F21C43 		addw	r3, r7, #1052
 7248 02dc DA65     		str	r2, [r3, #92]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7249              		.loc 1 939 0
 7250 02de D7F88035 		ldr	r3, [r7, #1408]
 7251 02e2 03F52A72 		add	r2, r3, #680
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7252              		.loc 1 914 0
 7253 02e6 07F21C43 		addw	r3, r7, #1052
 7254 02ea 1A66     		str	r2, [r3, #96]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7255              		.loc 1 940 0
 7256 02ec D7F88035 		ldr	r3, [r7, #1408]
 7257 02f0 03F52B72 		add	r2, r3, #684
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7258              		.loc 1 914 0
 7259 02f4 07F21C43 		addw	r3, r7, #1052
 7260 02f8 5A66     		str	r2, [r3, #100]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7261              		.loc 1 941 0
 7262 02fa D7F88035 		ldr	r3, [r7, #1408]
 7263 02fe 03F2FF12 		addw	r2, r3, #511
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7264              		.loc 1 914 0
 7265 0302 07F21C43 		addw	r3, r7, #1052
 7266 0306 9A66     		str	r2, [r3, #104]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7267              		.loc 1 942 0
 7268 0308 D7F88035 		ldr	r3, [r7, #1408]
 7269 030c 03F1A702 		add	r2, r3, #167
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7270              		.loc 1 914 0
 7271 0310 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 172


 7272 0314 DA66     		str	r2, [r3, #108]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7273              		.loc 1 943 0
 7274 0316 D7F88035 		ldr	r3, [r7, #1408]
 7275 031a 03F50072 		add	r2, r3, #512
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7276              		.loc 1 914 0
 7277 031e 07F21C43 		addw	r3, r7, #1052
 7278 0322 1A67     		str	r2, [r3, #112]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7279              		.loc 1 944 0
 7280 0324 D7F88035 		ldr	r3, [r7, #1408]
 7281 0328 03F22622 		addw	r2, r3, #550
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7282              		.loc 1 914 0
 7283 032c 07F21C43 		addw	r3, r7, #1052
 7284 0330 5A67     		str	r2, [r3, #116]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7285              		.loc 1 945 0
 7286 0332 D7F88035 		ldr	r3, [r7, #1408]
 7287 0336 03F1A802 		add	r2, r3, #168
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7288              		.loc 1 914 0
 7289 033a 07F21C43 		addw	r3, r7, #1052
 7290 033e 9A67     		str	r2, [r3, #120]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7291              		.loc 1 946 0
 7292 0340 D7F88035 		ldr	r3, [r7, #1408]
 7293 0344 03F50872 		add	r2, r3, #544
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7294              		.loc 1 914 0
 7295 0348 07F21C43 		addw	r3, r7, #1052
 7296 034c DA67     		str	r2, [r3, #124]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7297              		.loc 1 947 0
 7298 034e D7F88035 		ldr	r3, [r7, #1408]
 7299 0352 03F20122 		addw	r2, r3, #513
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7300              		.loc 1 914 0
 7301 0356 07F21C43 		addw	r3, r7, #1052
 7302 035a C3F88020 		str	r2, [r3, #128]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7303              		.loc 1 948 0
 7304 035e D7F88035 		ldr	r3, [r7, #1408]
 7305 0362 03F20222 		addw	r2, r3, #514
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7306              		.loc 1 914 0
 7307 0366 07F21C43 		addw	r3, r7, #1052
 7308 036a C3F88420 		str	r2, [r3, #132]
 949:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7309              		.loc 1 949 0
 7310 036e D7F88035 		ldr	r3, [r7, #1408]
 7311 0372 03F1AB02 		add	r2, r3, #171
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7312              		.loc 1 914 0
 7313 0376 07F21C43 		addw	r3, r7, #1052
 7314 037a C3F88820 		str	r2, [r3, #136]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 173


 950:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7315              		.loc 1 950 0
 7316 037e D7F88035 		ldr	r3, [r7, #1408]
 7317 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7318 0386 1233     		adds	r3, r3, #18
 7319 0388 5B01     		lsls	r3, r3, #5
 7320 038a D7F88025 		ldr	r2, [r7, #1408]
 7321 038e 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7322              		.loc 1 914 0
 7323 0390 07F21C43 		addw	r3, r7, #1052
 7324 0394 C3F88C20 		str	r2, [r3, #140]
 951:..\src/command_processing.c ****         
 952:..\src/command_processing.c ****         // GENERIC PARAMS
 953:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7325              		.loc 1 953 0
 7326 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7327 039c 1346     		mov	r3, r2
 7328 039e DB00     		lsls	r3, r3, #3
 7329 03a0 9B1A     		subs	r3, r3, r2
 7330 03a2 1B01     		lsls	r3, r3, #4
 7331 03a4 03F58873 		add	r3, r3, #272
 7332 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7333 03ac 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7334              		.loc 1 914 0
 7335 03ae 07F21C43 		addw	r3, r7, #1052
 7336 03b2 C3F89020 		str	r2, [r3, #144]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7337              		.loc 1 954 0
 7338 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7339 03ba 1346     		mov	r3, r2
 7340 03bc DB00     		lsls	r3, r3, #3
 7341 03be 9B1A     		subs	r3, r3, r2
 7342 03c0 1B01     		lsls	r3, r3, #4
 7343 03c2 E033     		adds	r3, r3, #224
 7344 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7345 03c8 1344     		add	r3, r3, r2
 7346 03ca 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7347              		.loc 1 914 0
 7348 03cc 07F21C43 		addw	r3, r7, #1052
 7349 03d0 C3F89420 		str	r2, [r3, #148]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7350              		.loc 1 955 0
 7351 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7352 03d8 1346     		mov	r3, r2
 7353 03da DB00     		lsls	r3, r3, #3
 7354 03dc 9B1A     		subs	r3, r3, r2
 7355 03de 1B01     		lsls	r3, r3, #4
 7356 03e0 03F58873 		add	r3, r3, #272
 7357 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7358 03e8 1344     		add	r3, r3, r2
 7359 03ea 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7360              		.loc 1 914 0
 7361 03ec 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 174


 7362 03f0 C3F89820 		str	r2, [r3, #152]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7363              		.loc 1 956 0
 7364 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7365 03f8 1346     		mov	r3, r2
 7366 03fa DB00     		lsls	r3, r3, #3
 7367 03fc 9B1A     		subs	r3, r3, r2
 7368 03fe 1B01     		lsls	r3, r3, #4
 7369 0400 03F58873 		add	r3, r3, #272
 7370 0404 D7F88025 		ldr	r2, [r7, #1408]
 7371 0408 1344     		add	r3, r3, r2
 7372 040a 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7373              		.loc 1 914 0
 7374 040c 07F21C43 		addw	r3, r7, #1052
 7375 0410 C3F89C20 		str	r2, [r3, #156]
 957:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7376              		.loc 1 957 0
 7377 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7378 0418 D7F88015 		ldr	r1, [r7, #1408]
 7379 041c 1346     		mov	r3, r2
 7380 041e DB00     		lsls	r3, r3, #3
 7381 0420 9B1A     		subs	r3, r3, r2
 7382 0422 1B01     		lsls	r3, r3, #4
 7383 0424 0B44     		add	r3, r3, r1
 7384 0426 03F58873 		add	r3, r3, #272
 7385 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7386 042c 1A46     		mov	r2, r3
 7387 042e 1346     		mov	r3, r2
 7388 0430 5B00     		lsls	r3, r3, #1
 7389 0432 1344     		add	r3, r3, r2
 7390 0434 1B01     		lsls	r3, r3, #4
 7391 0436 03F5D873 		add	r3, r3, #432
 7392 043a D7F88025 		ldr	r2, [r7, #1408]
 7393 043e 1344     		add	r3, r3, r2
 7394 0440 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7395              		.loc 1 914 0
 7396 0442 07F21C43 		addw	r3, r7, #1052
 7397 0446 C3F8A020 		str	r2, [r3, #160]
 958:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7398              		.loc 1 958 0
 7399 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7400 044e D7F88015 		ldr	r1, [r7, #1408]
 7401 0452 1346     		mov	r3, r2
 7402 0454 DB00     		lsls	r3, r3, #3
 7403 0456 9B1A     		subs	r3, r3, r2
 7404 0458 1B01     		lsls	r3, r3, #4
 7405 045a 0B44     		add	r3, r3, r1
 7406 045c 03F58873 		add	r3, r3, #272
 7407 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7408 0462 1A46     		mov	r2, r3
 7409 0464 1346     		mov	r3, r2
 7410 0466 5B00     		lsls	r3, r3, #1
 7411 0468 1344     		add	r3, r3, r2
 7412 046a 1B01     		lsls	r3, r3, #4
 7413 046c 03F5D873 		add	r3, r3, #432
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 175


 7414 0470 D7F88025 		ldr	r2, [r7, #1408]
 7415 0474 1344     		add	r3, r3, r2
 7416 0476 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7417              		.loc 1 914 0
 7418 0478 07F21C43 		addw	r3, r7, #1052
 7419 047c C3F8A420 		str	r2, [r3, #164]
 959:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7420              		.loc 1 959 0
 7421 0480 D7F88035 		ldr	r3, [r7, #1408]
 7422 0484 03F1A902 		add	r2, r3, #169
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7423              		.loc 1 914 0
 7424 0488 07F21C43 		addw	r3, r7, #1052
 7425 048c C3F8A820 		str	r2, [r3, #168]
 960:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7426              		.loc 1 960 0
 7427 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7428 0494 1346     		mov	r3, r2
 7429 0496 DB00     		lsls	r3, r3, #3
 7430 0498 9B1A     		subs	r3, r3, r2
 7431 049a 1B01     		lsls	r3, r3, #4
 7432 049c B033     		adds	r3, r3, #176
 7433 049e D7F88025 		ldr	r2, [r7, #1408]
 7434 04a2 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7435              		.loc 1 914 0
 7436 04a4 07F21C43 		addw	r3, r7, #1052
 7437 04a8 C3F8AC20 		str	r2, [r3, #172]
 961:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7438              		.loc 1 961 0
 7439 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7440 04b0 1346     		mov	r3, r2
 7441 04b2 DB00     		lsls	r3, r3, #3
 7442 04b4 9B1A     		subs	r3, r3, r2
 7443 04b6 1B01     		lsls	r3, r3, #4
 7444 04b8 B833     		adds	r3, r3, #184
 7445 04ba D7F88025 		ldr	r2, [r7, #1408]
 7446 04be 1344     		add	r3, r3, r2
 7447 04c0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7448              		.loc 1 914 0
 7449 04c2 07F21C43 		addw	r3, r7, #1052
 7450 04c6 C3F8B020 		str	r2, [r3, #176]
 962:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7451              		.loc 1 962 0
 7452 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7453 04ce 1346     		mov	r3, r2
 7454 04d0 DB00     		lsls	r3, r3, #3
 7455 04d2 9B1A     		subs	r3, r3, r2
 7456 04d4 1B01     		lsls	r3, r3, #4
 7457 04d6 E033     		adds	r3, r3, #224
 7458 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7459 04dc 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7460              		.loc 1 914 0
 7461 04de 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 176


 7462 04e2 C3F8B420 		str	r2, [r3, #180]
 963:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7463              		.loc 1 963 0
 7464 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7465 04ea 1346     		mov	r3, r2
 7466 04ec DB00     		lsls	r3, r3, #3
 7467 04ee 9B1A     		subs	r3, r3, r2
 7468 04f0 1B01     		lsls	r3, r3, #4
 7469 04f2 03F58473 		add	r3, r3, #264
 7470 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7471 04fa 1344     		add	r3, r3, r2
 7472 04fc 9A1D     		adds	r2, r3, #6
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7473              		.loc 1 914 0
 7474 04fe 07F21C43 		addw	r3, r7, #1052
 7475 0502 C3F8B820 		str	r2, [r3, #184]
 964:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7476              		.loc 1 964 0
 7477 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7478 050a 1346     		mov	r3, r2
 7479 050c DB00     		lsls	r3, r3, #3
 7480 050e 9B1A     		subs	r3, r3, r2
 7481 0510 1B01     		lsls	r3, r3, #4
 7482 0512 03F58473 		add	r3, r3, #264
 7483 0516 D7F88025 		ldr	r2, [r7, #1408]
 7484 051a 1344     		add	r3, r3, r2
 7485 051c DA1D     		adds	r2, r3, #7
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7486              		.loc 1 914 0
 7487 051e 07F21C43 		addw	r3, r7, #1052
 7488 0522 C3F8BC20 		str	r2, [r3, #188]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7489              		.loc 1 965 0
 7490 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7491 052a D7F88015 		ldr	r1, [r7, #1408]
 7492 052e 1346     		mov	r3, r2
 7493 0530 DB00     		lsls	r3, r3, #3
 7494 0532 9B1A     		subs	r3, r3, r2
 7495 0534 1B01     		lsls	r3, r3, #4
 7496 0536 0B44     		add	r3, r3, r1
 7497 0538 03F58873 		add	r3, r3, #272
 7498 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7499 053e 1A46     		mov	r2, r3
 7500 0540 1346     		mov	r3, r2
 7501 0542 5B00     		lsls	r3, r3, #1
 7502 0544 1344     		add	r3, r3, r2
 7503 0546 1B01     		lsls	r3, r3, #4
 7504 0548 03F5C873 		add	r3, r3, #400
 7505 054c D7F88025 		ldr	r2, [r7, #1408]
 7506 0550 1344     		add	r3, r3, r2
 7507 0552 5A1D     		adds	r2, r3, #5
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7508              		.loc 1 914 0
 7509 0554 07F21C43 		addw	r3, r7, #1052
 7510 0558 C3F8C020 		str	r2, [r3, #192]
 966:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7511              		.loc 1 966 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 177


 7512 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7513 0560 D7F88015 		ldr	r1, [r7, #1408]
 7514 0564 1346     		mov	r3, r2
 7515 0566 DB00     		lsls	r3, r3, #3
 7516 0568 9B1A     		subs	r3, r3, r2
 7517 056a 1B01     		lsls	r3, r3, #4
 7518 056c 0B44     		add	r3, r3, r1
 7519 056e 03F58873 		add	r3, r3, #272
 7520 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7521 0574 1A46     		mov	r2, r3
 7522 0576 1346     		mov	r3, r2
 7523 0578 5B00     		lsls	r3, r3, #1
 7524 057a 1344     		add	r3, r3, r2
 7525 057c 1B01     		lsls	r3, r3, #4
 7526 057e 03F5CC73 		add	r3, r3, #408
 7527 0582 D7F88025 		ldr	r2, [r7, #1408]
 7528 0586 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7529              		.loc 1 914 0
 7530 0588 07F21C43 		addw	r3, r7, #1052
 7531 058c C3F8C420 		str	r2, [r3, #196]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7532              		.loc 1 967 0
 7533 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7534 0594 D7F88015 		ldr	r1, [r7, #1408]
 7535 0598 1346     		mov	r3, r2
 7536 059a DB00     		lsls	r3, r3, #3
 7537 059c 9B1A     		subs	r3, r3, r2
 7538 059e 1B01     		lsls	r3, r3, #4
 7539 05a0 0B44     		add	r3, r3, r1
 7540 05a2 03F58873 		add	r3, r3, #272
 7541 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7542 05a8 1A46     		mov	r2, r3
 7543 05aa 1346     		mov	r3, r2
 7544 05ac 5B00     		lsls	r3, r3, #1
 7545 05ae 1344     		add	r3, r3, r2
 7546 05b0 1B01     		lsls	r3, r3, #4
 7547 05b2 03F5D073 		add	r3, r3, #416
 7548 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7549 05ba 1344     		add	r3, r3, r2
 7550 05bc 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7551              		.loc 1 914 0
 7552 05be 07F21C43 		addw	r3, r7, #1052
 7553 05c2 C3F8C820 		str	r2, [r3, #200]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7554              		.loc 1 968 0
 7555 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7556 05ca 1346     		mov	r3, r2
 7557 05cc DB00     		lsls	r3, r3, #3
 7558 05ce 9B1A     		subs	r3, r3, r2
 7559 05d0 1B01     		lsls	r3, r3, #4
 7560 05d2 E033     		adds	r3, r3, #224
 7561 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7562 05d8 1344     		add	r3, r3, r2
 7563 05da DA1C     		adds	r2, r3, #3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 178


 7564              		.loc 1 914 0
 7565 05dc 07F21C43 		addw	r3, r7, #1052
 7566 05e0 C3F8CC20 		str	r2, [r3, #204]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7567              		.loc 1 969 0
 7568 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7569 05e8 1346     		mov	r3, r2
 7570 05ea DB00     		lsls	r3, r3, #3
 7571 05ec 9B1A     		subs	r3, r3, r2
 7572 05ee 1B01     		lsls	r3, r3, #4
 7573 05f0 E033     		adds	r3, r3, #224
 7574 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7575 05f6 1344     		add	r3, r3, r2
 7576 05f8 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7577              		.loc 1 914 0
 7578 05fa 07F21C43 		addw	r3, r7, #1052
 7579 05fe C3F8D020 		str	r2, [r3, #208]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7580              		.loc 1 970 0
 7581 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7582 0606 1346     		mov	r3, r2
 7583 0608 DB00     		lsls	r3, r3, #3
 7584 060a 9B1A     		subs	r3, r3, r2
 7585 060c 1B01     		lsls	r3, r3, #4
 7586 060e E833     		adds	r3, r3, #232
 7587 0610 D7F88025 		ldr	r2, [r7, #1408]
 7588 0614 1344     		add	r3, r3, r2
 7589 0616 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7590              		.loc 1 914 0
 7591 0618 07F21C43 		addw	r3, r7, #1052
 7592 061c C3F8D420 		str	r2, [r3, #212]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7593              		.loc 1 971 0
 7594 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7595 0624 1346     		mov	r3, r2
 7596 0626 DB00     		lsls	r3, r3, #3
 7597 0628 9B1A     		subs	r3, r3, r2
 7598 062a 1B01     		lsls	r3, r3, #4
 7599 062c 03F58473 		add	r3, r3, #264
 7600 0630 D7F88025 		ldr	r2, [r7, #1408]
 7601 0634 1344     		add	r3, r3, r2
 7602 0636 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7603              		.loc 1 914 0
 7604 0638 07F21C43 		addw	r3, r7, #1052
 7605 063c C3F8D820 		str	r2, [r3, #216]
 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7606              		.loc 1 972 0
 7607 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7608 0644 D7F88015 		ldr	r1, [r7, #1408]
 7609 0648 1346     		mov	r3, r2
 7610 064a DB00     		lsls	r3, r3, #3
 7611 064c 9B1A     		subs	r3, r3, r2
 7612 064e 1B01     		lsls	r3, r3, #4
 7613 0650 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 179


 7614 0652 03F58873 		add	r3, r3, #272
 7615 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7616 0658 1A46     		mov	r2, r3
 7617 065a 1346     		mov	r3, r2
 7618 065c 5B00     		lsls	r3, r3, #1
 7619 065e 1344     		add	r3, r3, r2
 7620 0660 1B01     		lsls	r3, r3, #4
 7621 0662 03F5D873 		add	r3, r3, #432
 7622 0666 D7F88025 		ldr	r2, [r7, #1408]
 7623 066a 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7624              		.loc 1 914 0
 7625 066c 07F21C43 		addw	r3, r7, #1052
 7626 0670 C3F8DC20 		str	r2, [r3, #220]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7627              		.loc 1 973 0
 7628 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7629 0678 D7F88015 		ldr	r1, [r7, #1408]
 7630 067c 1346     		mov	r3, r2
 7631 067e DB00     		lsls	r3, r3, #3
 7632 0680 9B1A     		subs	r3, r3, r2
 7633 0682 1B01     		lsls	r3, r3, #4
 7634 0684 0B44     		add	r3, r3, r1
 7635 0686 03F58873 		add	r3, r3, #272
 7636 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7637 068c 1A46     		mov	r2, r3
 7638 068e 1346     		mov	r3, r2
 7639 0690 5B00     		lsls	r3, r3, #1
 7640 0692 1344     		add	r3, r3, r2
 7641 0694 1B01     		lsls	r3, r3, #4
 7642 0696 03F5D873 		add	r3, r3, #432
 7643 069a D7F88025 		ldr	r2, [r7, #1408]
 7644 069e 1344     		add	r3, r3, r2
 7645 06a0 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7646              		.loc 1 914 0
 7647 06a2 07F21C43 		addw	r3, r7, #1052
 7648 06a6 C3F8E020 		str	r2, [r3, #224]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7649              		.loc 1 974 0
 7650 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7651 06ae 1346     		mov	r3, r2
 7652 06b0 DB00     		lsls	r3, r3, #3
 7653 06b2 9B1A     		subs	r3, r3, r2
 7654 06b4 1B01     		lsls	r3, r3, #4
 7655 06b6 E033     		adds	r3, r3, #224
 7656 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7657 06bc 1344     		add	r3, r3, r2
 7658 06be 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7659              		.loc 1 914 0
 7660 06c0 07F21C43 		addw	r3, r7, #1052
 7661 06c4 C3F8E420 		str	r2, [r3, #228]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7662              		.loc 1 975 0
 7663 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7664 06cc 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 180


 7665 06ce DB00     		lsls	r3, r3, #3
 7666 06d0 9B1A     		subs	r3, r3, r2
 7667 06d2 1B01     		lsls	r3, r3, #4
 7668 06d4 F033     		adds	r3, r3, #240
 7669 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7670 06da 1344     		add	r3, r3, r2
 7671 06dc 1A1D     		adds	r2, r3, #4
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7672              		.loc 1 914 0
 7673 06de 07F21C43 		addw	r3, r7, #1052
 7674 06e2 C3F8E820 		str	r2, [r3, #232]
 976:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7675              		.loc 1 976 0
 7676 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7677 06ea 1346     		mov	r3, r2
 7678 06ec DB00     		lsls	r3, r3, #3
 7679 06ee 9B1A     		subs	r3, r3, r2
 7680 06f0 1B01     		lsls	r3, r3, #4
 7681 06f2 03F58873 		add	r3, r3, #272
 7682 06f6 D7F88025 		ldr	r2, [r7, #1408]
 7683 06fa 1A44     		add	r2, r2, r3
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7684              		.loc 1 914 0
 7685 06fc 07F21C43 		addw	r3, r7, #1052
 7686 0700 C3F8EC20 		str	r2, [r3, #236]
 977:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7687              		.loc 1 977 0
 7688 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7689 0708 1346     		mov	r3, r2
 7690 070a DB00     		lsls	r3, r3, #3
 7691 070c 9B1A     		subs	r3, r3, r2
 7692 070e 1B01     		lsls	r3, r3, #4
 7693 0710 E033     		adds	r3, r3, #224
 7694 0712 D7F88025 		ldr	r2, [r7, #1408]
 7695 0716 1344     		add	r3, r3, r2
 7696 0718 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7697              		.loc 1 914 0
 7698 071a 07F21C43 		addw	r3, r7, #1052
 7699 071e C3F8F020 		str	r2, [r3, #240]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7700              		.loc 1 978 0
 7701 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7702 0726 1346     		mov	r3, r2
 7703 0728 DB00     		lsls	r3, r3, #3
 7704 072a 9B1A     		subs	r3, r3, r2
 7705 072c 1B01     		lsls	r3, r3, #4
 7706 072e 03F58873 		add	r3, r3, #272
 7707 0732 D7F88025 		ldr	r2, [r7, #1408]
 7708 0736 1344     		add	r3, r3, r2
 7709 0738 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7710              		.loc 1 914 0
 7711 073a 07F21C43 		addw	r3, r7, #1052
 7712 073e C3F8F420 		str	r2, [r3, #244]
 979:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7713              		.loc 1 979 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 181


 7714 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7715 0746 1346     		mov	r3, r2
 7716 0748 DB00     		lsls	r3, r3, #3
 7717 074a 9B1A     		subs	r3, r3, r2
 7718 074c 1B01     		lsls	r3, r3, #4
 7719 074e 03F58873 		add	r3, r3, #272
 7720 0752 D7F88025 		ldr	r2, [r7, #1408]
 7721 0756 1344     		add	r3, r3, r2
 7722 0758 9A1C     		adds	r2, r3, #2
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7723              		.loc 1 914 0
 7724 075a 07F21C43 		addw	r3, r7, #1052
 7725 075e C3F8F820 		str	r2, [r3, #248]
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7726              		.loc 1 980 0
 7727 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7728 0766 D7F88015 		ldr	r1, [r7, #1408]
 7729 076a 1346     		mov	r3, r2
 7730 076c DB00     		lsls	r3, r3, #3
 7731 076e 9B1A     		subs	r3, r3, r2
 7732 0770 1B01     		lsls	r3, r3, #4
 7733 0772 0B44     		add	r3, r3, r1
 7734 0774 03F58873 		add	r3, r3, #272
 7735 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7736 077a 1A46     		mov	r2, r3
 7737 077c 1346     		mov	r3, r2
 7738 077e 5B00     		lsls	r3, r3, #1
 7739 0780 1344     		add	r3, r3, r2
 7740 0782 1B01     		lsls	r3, r3, #4
 7741 0784 03F5D873 		add	r3, r3, #432
 7742 0788 D7F88025 		ldr	r2, [r7, #1408]
 7743 078c 1344     		add	r3, r3, r2
 7744 078e 5A1C     		adds	r2, r3, #1
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7745              		.loc 1 914 0
 7746 0790 07F21C43 		addw	r3, r7, #1052
 7747 0794 C3F8FC20 		str	r2, [r3, #252]
 981:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7748              		.loc 1 981 0
 7749 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7750 079c D7F88015 		ldr	r1, [r7, #1408]
 7751 07a0 1346     		mov	r3, r2
 7752 07a2 DB00     		lsls	r3, r3, #3
 7753 07a4 9B1A     		subs	r3, r3, r2
 7754 07a6 1B01     		lsls	r3, r3, #4
 7755 07a8 0B44     		add	r3, r3, r1
 7756 07aa 03F58873 		add	r3, r3, #272
 7757 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7758 07b0 1A46     		mov	r2, r3
 7759 07b2 1346     		mov	r3, r2
 7760 07b4 5B00     		lsls	r3, r3, #1
 7761 07b6 1344     		add	r3, r3, r2
 7762 07b8 1B01     		lsls	r3, r3, #4
 7763 07ba 03F5D873 		add	r3, r3, #432
 7764 07be D7F88025 		ldr	r2, [r7, #1408]
 7765 07c2 1344     		add	r3, r3, r2
 7766 07c4 5A1D     		adds	r2, r3, #5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 182


 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7767              		.loc 1 914 0
 7768 07c6 07F21C43 		addw	r3, r7, #1052
 7769 07ca C3F80021 		str	r2, [r3, #256]
 982:..\src/command_processing.c ****         
 983:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7770              		.loc 1 983 0
 7771 07ce D7F88035 		ldr	r3, [r7, #1408]
 7772 07d2 03F5C872 		add	r2, r3, #400
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7773              		.loc 1 914 0
 7774 07d6 07F21C43 		addw	r3, r7, #1052
 7775 07da C3F80421 		str	r2, [r3, #260]
 984:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7776              		.loc 1 984 0
 7777 07de D7F88035 		ldr	r3, [r7, #1408]
 7778 07e2 03F5E072 		add	r2, r3, #448
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7779              		.loc 1 914 0
 7780 07e6 07F21C43 		addw	r3, r7, #1052
 7781 07ea C3F80821 		str	r2, [r3, #264]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7782              		.loc 1 985 0
 7783 07ee D7F88035 		ldr	r3, [r7, #1408]
 7784 07f2 03F22722 		addw	r2, r3, #551
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7785              		.loc 1 914 0
 7786 07f6 07F21C43 		addw	r3, r7, #1052
 7787 07fa C3F80C21 		str	r2, [r3, #268]
 986:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7788              		.loc 1 986 0
 7789 07fe D7F88035 		ldr	r3, [r7, #1408]
 7790 0802 03F50A72 		add	r2, r3, #552
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7791              		.loc 1 914 0
 7792 0806 07F21C43 		addw	r3, r7, #1052
 7793 080a C3F81021 		str	r2, [r3, #272]
 987:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7794              		.loc 1 987 0
 7795 080e D7F88035 		ldr	r3, [r7, #1408]
 7796 0812 03F22E22 		addw	r2, r3, #558
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7797              		.loc 1 914 0
 7798 0816 07F21C43 		addw	r3, r7, #1052
 7799 081a C3F81421 		str	r2, [r3, #276]
 988:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7800              		.loc 1 988 0
 7801 081e D7F88035 		ldr	r3, [r7, #1408]
 7802 0822 03F50D72 		add	r2, r3, #564
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7803              		.loc 1 914 0
 7804 0826 07F21C43 		addw	r3, r7, #1052
 7805 082a C3F81821 		str	r2, [r3, #280]
 989:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7806              		.loc 1 989 0
 7807 082e D7F88035 		ldr	r3, [r7, #1408]
 7808 0832 03F52C72 		add	r2, r3, #688
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 183


 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7809              		.loc 1 914 0
 7810 0836 07F21C43 		addw	r3, r7, #1052
 7811 083a C3F81C21 		str	r2, [r3, #284]
 990:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7812              		.loc 1 990 0
 7813 083e D7F88035 		ldr	r3, [r7, #1408]
 7814 0842 03F2B222 		addw	r2, r3, #690
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7815              		.loc 1 914 0
 7816 0846 07F21C43 		addw	r3, r7, #1052
 7817 084a C3F82021 		str	r2, [r3, #288]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7818              		.loc 1 991 0
 7819 084e D7F88035 		ldr	r3, [r7, #1408]
 7820 0852 03F52D72 		add	r2, r3, #692
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7821              		.loc 1 914 0
 7822 0856 07F21C43 		addw	r3, r7, #1052
 7823 085a C3F82421 		str	r2, [r3, #292]
 992:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7824              		.loc 1 992 0
 7825 085e D7F88035 		ldr	r3, [r7, #1408]
 7826 0862 03F1AC02 		add	r2, r3, #172
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7827              		.loc 1 914 0
 7828 0866 07F21C43 		addw	r3, r7, #1052
 7829 086a C3F82821 		str	r2, [r3, #296]
 993:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7830              		.loc 1 993 0
 7831 086e D7F88035 		ldr	r3, [r7, #1408]
 7832 0872 03F53872 		add	r2, r3, #736
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7833              		.loc 1 914 0
 7834 0876 07F21C43 		addw	r3, r7, #1052
 7835 087a C3F82C21 		str	r2, [r3, #300]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7836              		.loc 1 994 0
 7837 087e D7F88035 		ldr	r3, [r7, #1408]
 7838 0882 03F2E222 		addw	r2, r3, #738
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7839              		.loc 1 914 0
 7840 0886 07F21C43 		addw	r3, r7, #1052
 7841 088a C3F83021 		str	r2, [r3, #304]
 995:..\src/command_processing.c ****         
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7842              		.loc 1 996 0
 7843 088e D7F88035 		ldr	r3, [r7, #1408]
 7844 0892 03F2E622 		addw	r2, r3, #742
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7845              		.loc 1 914 0
 7846 0896 07F21C43 		addw	r3, r7, #1052
 7847 089a C3F83421 		str	r2, [r3, #308]
 997:..\src/command_processing.c ****         
 998:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7848              		.loc 1 998 0
 7849 089e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 184


 7850 08a2 03F53072 		add	r2, r3, #704
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7851              		.loc 1 914 0
 7852 08a6 07F21C43 		addw	r3, r7, #1052
 7853 08aa C3F83821 		str	r2, [r3, #312]
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7854              		.loc 1 999 0
 7855 08ae D7F88035 		ldr	r3, [r7, #1408]
 7856 08b2 03F2C122 		addw	r2, r3, #705
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7857              		.loc 1 914 0
 7858 08b6 07F21C43 		addw	r3, r7, #1052
 7859 08ba C3F83C21 		str	r2, [r3, #316]
1000:..\src/command_processing.c ****         
1001:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7860              		.loc 1 1001 0
 7861 08be D7F88035 		ldr	r3, [r7, #1408]
 7862 08c2 03F53472 		add	r2, r3, #720
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7863              		.loc 1 914 0
 7864 08c6 07F21C43 		addw	r3, r7, #1052
 7865 08ca C3F84021 		str	r2, [r3, #320]
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7866              		.loc 1 1002 0
 7867 08ce D7F88035 		ldr	r3, [r7, #1408]
 7868 08d2 03F53572 		add	r2, r3, #724
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7869              		.loc 1 914 0
 7870 08d6 07F21C43 		addw	r3, r7, #1052
 7871 08da C3F84421 		str	r2, [r3, #324]
1003:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7872              		.loc 1 1003 0
 7873 08de D7F88035 		ldr	r3, [r7, #1408]
 7874 08e2 03F53672 		add	r2, r3, #728
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7875              		.loc 1 914 0
 7876 08e6 07F21C43 		addw	r3, r7, #1052
 7877 08ea C3F84821 		str	r2, [r3, #328]
1004:..\src/command_processing.c ****         
1005:..\src/command_processing.c **** 
1006:..\src/command_processing.c ****     };
1007:..\src/command_processing.c ****     
1008:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7878              		.loc 1 1008 0
 7879 08ee 07F57273 		add	r3, r7, #968
 7880 08f2 F64A     		ldr	r2, .L378
 7881 08f4 1846     		mov	r0, r3
 7882 08f6 1146     		mov	r1, r2
 7883 08f8 5323     		movs	r3, #83
 7884 08fa 1A46     		mov	r2, r3
 7885 08fc FFF7FEFF 		bl	memcpy
1009:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1010:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1011:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1012:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1013:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1014:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 185


1015:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1016:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1017:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1018:..\src/command_processing.c ****         
1019:..\src/command_processing.c ****         // GENERIC PARAMS
1020:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1021:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1022:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1023:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1024:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1025:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1026:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1027:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1028:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1029:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1030:..\src/command_processing.c ****         TYPE_UINT16,
1031:..\src/command_processing.c ****         
1032:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1033:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1034:..\src/command_processing.c ****     };
1035:..\src/command_processing.c **** 
1036:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7886              		.loc 1 1036 0
 7887 0900 07F55D73 		add	r3, r7, #884
 7888 0904 0122     		movs	r2, #1
 7889 0906 1A70     		strb	r2, [r3]
 7890 0908 07F55D73 		add	r3, r7, #884
 7891 090c 0322     		movs	r2, #3
 7892 090e 5A70     		strb	r2, [r3, #1]
 7893 0910 07F55D73 		add	r3, r7, #884
 7894 0914 0322     		movs	r2, #3
 7895 0916 9A70     		strb	r2, [r3, #2]
 7896 0918 07F55D73 		add	r3, r7, #884
 7897 091c 0122     		movs	r2, #1
 7898 091e DA70     		strb	r2, [r3, #3]
 7899 0920 07F55D73 		add	r3, r7, #884
 7900 0924 0122     		movs	r2, #1
 7901 0926 1A71     		strb	r2, [r3, #4]
 7902 0928 07F55D73 		add	r3, r7, #884
 7903 092c 0122     		movs	r2, #1
 7904 092e 5A71     		strb	r2, [r3, #5]
 7905 0930 07F55D73 		add	r3, r7, #884
 7906 0934 0322     		movs	r2, #3
 7907 0936 9A71     		strb	r2, [r3, #6]
 7908 0938 07F55D73 		add	r3, r7, #884
 7909 093c 0322     		movs	r2, #3
 7910 093e DA71     		strb	r2, [r3, #7]
 7911 0940 07F55D73 		add	r3, r7, #884
 7912 0944 0322     		movs	r2, #3
 7913 0946 1A72     		strb	r2, [r3, #8]
 7914 0948 07F55D73 		add	r3, r7, #884
 7915 094c 0122     		movs	r2, #1
 7916 094e 5A72     		strb	r2, [r3, #9]
 7917 0950 07F55D73 		add	r3, r7, #884
 7918 0954 0222     		movs	r2, #2
 7919 0956 9A72     		strb	r2, [r3, #10]
 7920 0958 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 186


 7921 095c 0222     		movs	r2, #2
 7922 095e DA72     		strb	r2, [r3, #11]
 7923 0960 07F55D73 		add	r3, r7, #884
 7924 0964 0122     		movs	r2, #1
 7925 0966 1A73     		strb	r2, [r3, #12]
 7926 0968 07F55D73 		add	r3, r7, #884
 7927 096c 0222     		movs	r2, #2
 7928 096e 5A73     		strb	r2, [r3, #13]
 7929 0970 07F55D73 		add	r3, r7, #884
 7930 0974 0122     		movs	r2, #1
 7931 0976 9A73     		strb	r2, [r3, #14]
 7932 0978 07F55D73 		add	r3, r7, #884
 7933 097c 0222     		movs	r2, #2
 7934 097e DA73     		strb	r2, [r3, #15]
 7935 0980 07F55D73 		add	r3, r7, #884
 7936 0984 0222     		movs	r2, #2
 7937 0986 1A74     		strb	r2, [r3, #16]
 7938 0988 07F55D73 		add	r3, r7, #884
 7939 098c 0122     		movs	r2, #1
 7940 098e 5A74     		strb	r2, [r3, #17]
 7941 0990 07F55D73 		add	r3, r7, #884
 7942 0994 0122     		movs	r2, #1
 7943 0996 9A74     		strb	r2, [r3, #18]
 7944 0998 07F55D73 		add	r3, r7, #884
 7945 099c 0122     		movs	r2, #1
 7946 099e DA74     		strb	r2, [r3, #19]
 7947 09a0 07F55D73 		add	r3, r7, #884
 7948 09a4 0622     		movs	r2, #6
 7949 09a6 1A75     		strb	r2, [r3, #20]
 7950 09a8 07F55D73 		add	r3, r7, #884
 7951 09ac 0322     		movs	r2, #3
 7952 09ae 5A75     		strb	r2, [r3, #21]
 7953 09b0 07F55D73 		add	r3, r7, #884
 7954 09b4 0122     		movs	r2, #1
 7955 09b6 9A75     		strb	r2, [r3, #22]
 7956 09b8 07F55D73 		add	r3, r7, #884
 7957 09bc 0122     		movs	r2, #1
 7958 09be DA75     		strb	r2, [r3, #23]
 7959 09c0 07F55D73 		add	r3, r7, #884
 7960 09c4 0122     		movs	r2, #1
 7961 09c6 1A76     		strb	r2, [r3, #24]
 7962 09c8 07F55D73 		add	r3, r7, #884
 7963 09cc 0122     		movs	r2, #1
 7964 09ce 5A76     		strb	r2, [r3, #25]
 7965 09d0 07F55D73 		add	r3, r7, #884
 7966 09d4 0122     		movs	r2, #1
 7967 09d6 9A76     		strb	r2, [r3, #26]
 7968 09d8 07F55D73 		add	r3, r7, #884
 7969 09dc 0122     		movs	r2, #1
 7970 09de DA76     		strb	r2, [r3, #27]
 7971 09e0 07F55D73 		add	r3, r7, #884
 7972 09e4 0122     		movs	r2, #1
 7973 09e6 1A77     		strb	r2, [r3, #28]
 7974 09e8 07F55D73 		add	r3, r7, #884
 7975 09ec 0122     		movs	r2, #1
 7976 09ee 5A77     		strb	r2, [r3, #29]
 7977 09f0 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 187


 7978 09f4 0122     		movs	r2, #1
 7979 09f6 9A77     		strb	r2, [r3, #30]
 7980 09f8 07F55D73 		add	r3, r7, #884
 7981 09fc 0622     		movs	r2, #6
 7982 09fe DA77     		strb	r2, [r3, #31]
 7983 0a00 07F55D73 		add	r3, r7, #884
 7984 0a04 0122     		movs	r2, #1
 7985 0a06 83F82020 		strb	r2, [r3, #32]
 7986 0a0a 07F55D73 		add	r3, r7, #884
 7987 0a0e 0522     		movs	r2, #5
 7988 0a10 83F82120 		strb	r2, [r3, #33]
 7989 0a14 07F55D73 		add	r3, r7, #884
 7990 0a18 0122     		movs	r2, #1
 7991 0a1a 83F82220 		strb	r2, [r3, #34]
 7992 0a1e 07F55D73 		add	r3, r7, #884
 7993 0a22 0622     		movs	r2, #6
 7994 0a24 83F82320 		strb	r2, [r3, #35]
 7995 0a28 07F55D73 		add	r3, r7, #884
 7996 0a2c 0122     		movs	r2, #1
 7997 0a2e 83F82420 		strb	r2, [r3, #36]
 7998 0a32 07F55D73 		add	r3, r7, #884
 7999 0a36 0122     		movs	r2, #1
 8000 0a38 83F82520 		strb	r2, [r3, #37]
 8001 0a3c 07F55D73 		add	r3, r7, #884
 8002 0a40 0122     		movs	r2, #1
 8003 0a42 83F82620 		strb	r2, [r3, #38]
 8004 0a46 07F55D73 		add	r3, r7, #884
 8005 0a4a 0122     		movs	r2, #1
 8006 0a4c 83F82720 		strb	r2, [r3, #39]
 8007 0a50 07F55D73 		add	r3, r7, #884
 8008 0a54 0322     		movs	r2, #3
 8009 0a56 83F82820 		strb	r2, [r3, #40]
 8010 0a5a 07F55D73 		add	r3, r7, #884
 8011 0a5e 0322     		movs	r2, #3
 8012 0a60 83F82920 		strb	r2, [r3, #41]
 8013 0a64 07F55D73 		add	r3, r7, #884
 8014 0a68 0122     		movs	r2, #1
 8015 0a6a 83F82A20 		strb	r2, [r3, #42]
 8016 0a6e 07F55D73 		add	r3, r7, #884
 8017 0a72 0322     		movs	r2, #3
 8018 0a74 83F82B20 		strb	r2, [r3, #43]
 8019 0a78 07F55D73 		add	r3, r7, #884
 8020 0a7c 0322     		movs	r2, #3
 8021 0a7e 83F82C20 		strb	r2, [r3, #44]
 8022 0a82 07F55D73 		add	r3, r7, #884
 8023 0a86 0122     		movs	r2, #1
 8024 0a88 83F82D20 		strb	r2, [r3, #45]
 8025 0a8c 07F55D73 		add	r3, r7, #884
 8026 0a90 0122     		movs	r2, #1
 8027 0a92 83F82E20 		strb	r2, [r3, #46]
 8028 0a96 07F55D73 		add	r3, r7, #884
 8029 0a9a 0122     		movs	r2, #1
 8030 0a9c 83F82F20 		strb	r2, [r3, #47]
 8031 0aa0 07F55D73 		add	r3, r7, #884
 8032 0aa4 0322     		movs	r2, #3
 8033 0aa6 83F83020 		strb	r2, [r3, #48]
 8034 0aaa 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 188


 8035 0aae 0322     		movs	r2, #3
 8036 0ab0 83F83120 		strb	r2, [r3, #49]
 8037 0ab4 07F55D73 		add	r3, r7, #884
 8038 0ab8 0322     		movs	r2, #3
 8039 0aba 83F83220 		strb	r2, [r3, #50]
 8040 0abe 07F55D73 		add	r3, r7, #884
 8041 0ac2 0122     		movs	r2, #1
 8042 0ac4 83F83320 		strb	r2, [r3, #51]
 8043 0ac8 07F55D73 		add	r3, r7, #884
 8044 0acc 0222     		movs	r2, #2
 8045 0ace 83F83420 		strb	r2, [r3, #52]
 8046 0ad2 07F55D73 		add	r3, r7, #884
 8047 0ad6 0222     		movs	r2, #2
 8048 0ad8 83F83520 		strb	r2, [r3, #53]
 8049 0adc 07F55D73 		add	r3, r7, #884
 8050 0ae0 0122     		movs	r2, #1
 8051 0ae2 83F83620 		strb	r2, [r3, #54]
 8052 0ae6 07F55D73 		add	r3, r7, #884
 8053 0aea 0122     		movs	r2, #1
 8054 0aec 83F83720 		strb	r2, [r3, #55]
 8055 0af0 07F55D73 		add	r3, r7, #884
 8056 0af4 0122     		movs	r2, #1
 8057 0af6 83F83820 		strb	r2, [r3, #56]
 8058 0afa 07F55D73 		add	r3, r7, #884
 8059 0afe 0122     		movs	r2, #1
 8060 0b00 83F83920 		strb	r2, [r3, #57]
 8061 0b04 07F55D73 		add	r3, r7, #884
 8062 0b08 0622     		movs	r2, #6
 8063 0b0a 83F83A20 		strb	r2, [r3, #58]
 8064 0b0e 07F55D73 		add	r3, r7, #884
 8065 0b12 0122     		movs	r2, #1
 8066 0b14 83F83B20 		strb	r2, [r3, #59]
 8067 0b18 07F55D73 		add	r3, r7, #884
 8068 0b1c 0122     		movs	r2, #1
 8069 0b1e 83F83C20 		strb	r2, [r3, #60]
 8070 0b22 07F55D73 		add	r3, r7, #884
 8071 0b26 0122     		movs	r2, #1
 8072 0b28 83F83D20 		strb	r2, [r3, #61]
 8073 0b2c 07F55D73 		add	r3, r7, #884
 8074 0b30 0122     		movs	r2, #1
 8075 0b32 83F83E20 		strb	r2, [r3, #62]
 8076 0b36 07F55D73 		add	r3, r7, #884
 8077 0b3a 0322     		movs	r2, #3
 8078 0b3c 83F83F20 		strb	r2, [r3, #63]
 8079 0b40 07F55D73 		add	r3, r7, #884
 8080 0b44 0322     		movs	r2, #3
 8081 0b46 83F84020 		strb	r2, [r3, #64]
1037:..\src/command_processing.c ****         1, 3, 3, 1, 
1038:..\src/command_processing.c ****         1, 1, 3, 3,
1039:..\src/command_processing.c ****         3, 1, 2, 2, 
1040:..\src/command_processing.c ****         1, 2, 1, 2,
1041:..\src/command_processing.c ****         2, 1, 1, 1, 
1042:..\src/command_processing.c ****         6, 3, 1, 1,
1043:..\src/command_processing.c ****         1, 1, 1, 1, 
1044:..\src/command_processing.c ****         1, 1, 1, 6,
1045:..\src/command_processing.c ****         1, 5, 1, 6,
1046:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 189


1047:..\src/command_processing.c ****         // GENERIC PARAMS
1048:..\src/command_processing.c ****         1, 1, 1, 1,
1049:..\src/command_processing.c ****         3, 3, 1, 3,
1050:..\src/command_processing.c ****         3, 1, 1, 1,
1051:..\src/command_processing.c ****         3, 3, 3, 1,
1052:..\src/command_processing.c ****         2, 2, 1, 1,
1053:..\src/command_processing.c ****         1, 1, 6, 1,
1054:..\src/command_processing.c ****         1, 1, 1, 3, 
1055:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 8082              		.loc 1 1055 0
 8083 0b4a 614B     		ldr	r3, .L378+4
 8084 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1036:..\src/command_processing.c ****         1, 3, 3, 1, 
 8085              		.loc 1 1036 0
 8086 0b4e 07F55D73 		add	r3, r7, #884
 8087 0b52 83F84120 		strb	r2, [r3, #65]
 8088              		.loc 1 1055 0
 8089 0b56 5E4B     		ldr	r3, .L378+4
 8090 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1036:..\src/command_processing.c ****         1, 3, 3, 1, 
 8091              		.loc 1 1036 0
 8092 0b5a 07F55D73 		add	r3, r7, #884
 8093 0b5e 83F84220 		strb	r2, [r3, #66]
 8094 0b62 07F55D73 		add	r3, r7, #884
 8095 0b66 0122     		movs	r2, #1
 8096 0b68 83F84320 		strb	r2, [r3, #67]
 8097 0b6c 07F55D73 		add	r3, r7, #884
 8098 0b70 0622     		movs	r2, #6
 8099 0b72 83F84420 		strb	r2, [r3, #68]
 8100 0b76 07F55D73 		add	r3, r7, #884
 8101 0b7a 0622     		movs	r2, #6
 8102 0b7c 83F84520 		strb	r2, [r3, #69]
 8103 0b80 07F55D73 		add	r3, r7, #884
 8104 0b84 0122     		movs	r2, #1
 8105 0b86 83F84620 		strb	r2, [r3, #70]
 8106 0b8a 07F55D73 		add	r3, r7, #884
 8107 0b8e 0122     		movs	r2, #1
 8108 0b90 83F84720 		strb	r2, [r3, #71]
 8109 0b94 07F55D73 		add	r3, r7, #884
 8110 0b98 0122     		movs	r2, #1
 8111 0b9a 83F84820 		strb	r2, [r3, #72]
 8112 0b9e 07F55D73 		add	r3, r7, #884
 8113 0ba2 0222     		movs	r2, #2
 8114 0ba4 83F84920 		strb	r2, [r3, #73]
 8115 0ba8 07F55D73 		add	r3, r7, #884
 8116 0bac 0122     		movs	r2, #1
 8117 0bae 83F84A20 		strb	r2, [r3, #74]
 8118 0bb2 07F55D73 		add	r3, r7, #884
 8119 0bb6 0122     		movs	r2, #1
 8120 0bb8 83F84B20 		strb	r2, [r3, #75]
 8121 0bbc 07F55D73 		add	r3, r7, #884
 8122 0bc0 0222     		movs	r2, #2
 8123 0bc2 83F84C20 		strb	r2, [r3, #76]
 8124 0bc6 07F55D73 		add	r3, r7, #884
 8125 0bca 0122     		movs	r2, #1
 8126 0bcc 83F84D20 		strb	r2, [r3, #77]
 8127 0bd0 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 190


 8128 0bd4 0122     		movs	r2, #1
 8129 0bd6 83F84E20 		strb	r2, [r3, #78]
 8130 0bda 07F55D73 		add	r3, r7, #884
 8131 0bde 0122     		movs	r2, #1
 8132 0be0 83F84F20 		strb	r2, [r3, #79]
 8133 0be4 07F55D73 		add	r3, r7, #884
 8134 0be8 0122     		movs	r2, #1
 8135 0bea 83F85020 		strb	r2, [r3, #80]
 8136 0bee 07F55D73 		add	r3, r7, #884
 8137 0bf2 0122     		movs	r2, #1
 8138 0bf4 83F85120 		strb	r2, [r3, #81]
 8139 0bf8 07F55D73 		add	r3, r7, #884
 8140 0bfc 0122     		movs	r2, #1
 8141 0bfe 83F85220 		strb	r2, [r3, #82]
1056:..\src/command_processing.c ****         6, 6, 1, 1,
1057:..\src/command_processing.c ****         1, 2, 1, 1,
1058:..\src/command_processing.c ****         2,
1059:..\src/command_processing.c ****         
1060:..\src/command_processing.c ****            1, 1, 1, 
1061:..\src/command_processing.c ****         1, 1, 1
1062:..\src/command_processing.c ****     };
1063:..\src/command_processing.c ****     
1064:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8142              		.loc 1 1064 0
 8143 0c02 07F54873 		add	r3, r7, #800
 8144 0c06 0022     		movs	r2, #0
 8145 0c08 1A70     		strb	r2, [r3]
 8146 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8147 0c0e 0A33     		adds	r3, r3, #10
 8148 0c10 DAB2     		uxtb	r2, r3
 8149 0c12 07F54873 		add	r3, r7, #800
 8150 0c16 5A70     		strb	r2, [r3, #1]
 8151 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8152 0c1c 0A33     		adds	r3, r3, #10
 8153 0c1e DAB2     		uxtb	r2, r3
 8154 0c20 07F54873 		add	r3, r7, #800
 8155 0c24 9A70     		strb	r2, [r3, #2]
 8156 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8157 0c2a 0A33     		adds	r3, r3, #10
 8158 0c2c DAB2     		uxtb	r2, r3
 8159 0c2e 07F54873 		add	r3, r7, #800
 8160 0c32 DA70     		strb	r2, [r3, #3]
 8161 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8162 0c38 0A33     		adds	r3, r3, #10
 8163 0c3a DAB2     		uxtb	r2, r3
 8164 0c3c 07F54873 		add	r3, r7, #800
 8165 0c40 1A71     		strb	r2, [r3, #4]
 8166 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8167 0c46 0A33     		adds	r3, r3, #10
 8168 0c48 DAB2     		uxtb	r2, r3
 8169 0c4a 07F54873 		add	r3, r7, #800
 8170 0c4e 5A71     		strb	r2, [r3, #5]
1065:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1066:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8171              		.loc 1 1066 0
 8172 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8173 0c54 D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 191


 8174 0c58 1346     		mov	r3, r2
 8175 0c5a DB00     		lsls	r3, r3, #3
 8176 0c5c 9B1A     		subs	r3, r3, r2
 8177 0c5e 1B01     		lsls	r3, r3, #4
 8178 0c60 0B44     		add	r3, r3, r1
 8179 0c62 03F58873 		add	r3, r3, #272
 8180 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8181              		.loc 1 1064 0
 8182 0c68 1433     		adds	r3, r3, #20
 8183 0c6a DAB2     		uxtb	r2, r3
 8184 0c6c 07F54873 		add	r3, r7, #800
 8185 0c70 9A71     		strb	r2, [r3, #6]
 8186              		.loc 1 1066 0
 8187 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8188 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8189 0c7a 1346     		mov	r3, r2
 8190 0c7c DB00     		lsls	r3, r3, #3
 8191 0c7e 9B1A     		subs	r3, r3, r2
 8192 0c80 1B01     		lsls	r3, r3, #4
 8193 0c82 0B44     		add	r3, r3, r1
 8194 0c84 03F58873 		add	r3, r3, #272
 8195 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8196              		.loc 1 1064 0
 8197 0c8a 1433     		adds	r3, r3, #20
 8198 0c8c DAB2     		uxtb	r2, r3
 8199 0c8e 07F54873 		add	r3, r7, #800
 8200 0c92 DA71     		strb	r2, [r3, #7]
1067:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8201              		.loc 1 1067 0
 8202 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8203 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8204 0c9c 1346     		mov	r3, r2
 8205 0c9e DB00     		lsls	r3, r3, #3
 8206 0ca0 9B1A     		subs	r3, r3, r2
 8207 0ca2 1B01     		lsls	r3, r3, #4
 8208 0ca4 0B44     		add	r3, r3, r1
 8209 0ca6 03F58873 		add	r3, r3, #272
 8210 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8211              		.loc 1 1064 0
 8212 0cac 1433     		adds	r3, r3, #20
 8213 0cae DAB2     		uxtb	r2, r3
 8214 0cb0 07F54873 		add	r3, r7, #800
 8215 0cb4 1A72     		strb	r2, [r3, #8]
 8216 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8217 0cba 0A33     		adds	r3, r3, #10
 8218 0cbc DAB2     		uxtb	r2, r3
 8219 0cbe 07F54873 		add	r3, r7, #800
 8220 0cc2 5A72     		strb	r2, [r3, #9]
 8221 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8222 0cc8 04E0     		b	.L379
 8223              	.L380:
 8224 0cca 00BF     		.align	2
 8225              	.L378:
 8226 0ccc 4C060000 		.word	.LC0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 192


 8227 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8228              	.L379:
 8229 0cd4 0A33     		adds	r3, r3, #10
 8230 0cd6 DAB2     		uxtb	r2, r3
 8231 0cd8 07F54873 		add	r3, r7, #800
 8232 0cdc 9A72     		strb	r2, [r3, #10]
 8233 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8234 0ce2 0A33     		adds	r3, r3, #10
 8235 0ce4 DAB2     		uxtb	r2, r3
 8236 0ce6 07F54873 		add	r3, r7, #800
 8237 0cea DA72     		strb	r2, [r3, #11]
 8238 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8239 0cf0 0A33     		adds	r3, r3, #10
 8240 0cf2 DAB2     		uxtb	r2, r3
 8241 0cf4 07F54873 		add	r3, r7, #800
 8242 0cf8 1A73     		strb	r2, [r3, #12]
 8243 0cfa 07F54873 		add	r3, r7, #800
 8244 0cfe 1E22     		movs	r2, #30
 8245 0d00 5A73     		strb	r2, [r3, #13]
 8246 0d02 07F54873 		add	r3, r7, #800
 8247 0d06 1E22     		movs	r2, #30
 8248 0d08 9A73     		strb	r2, [r3, #14]
 8249 0d0a 07F54873 		add	r3, r7, #800
 8250 0d0e 1E22     		movs	r2, #30
 8251 0d10 DA73     		strb	r2, [r3, #15]
 8252 0d12 07F54873 		add	r3, r7, #800
 8253 0d16 1E22     		movs	r2, #30
 8254 0d18 1A74     		strb	r2, [r3, #16]
1068:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1069:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8255              		.loc 1 1069 0
 8256 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8257 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8258 0d22 1346     		mov	r3, r2
 8259 0d24 DB00     		lsls	r3, r3, #3
 8260 0d26 9B1A     		subs	r3, r3, r2
 8261 0d28 1B01     		lsls	r3, r3, #4
 8262 0d2a 0B44     		add	r3, r3, r1
 8263 0d2c 03F58873 		add	r3, r3, #272
 8264 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8265              		.loc 1 1064 0
 8266 0d32 1433     		adds	r3, r3, #20
 8267 0d34 DAB2     		uxtb	r2, r3
 8268 0d36 07F54873 		add	r3, r7, #800
 8269 0d3a 5A74     		strb	r2, [r3, #17]
 8270              		.loc 1 1069 0
 8271 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8272 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8273 0d44 1346     		mov	r3, r2
 8274 0d46 DB00     		lsls	r3, r3, #3
 8275 0d48 9B1A     		subs	r3, r3, r2
 8276 0d4a 1B01     		lsls	r3, r3, #4
 8277 0d4c 0B44     		add	r3, r3, r1
 8278 0d4e 03F58873 		add	r3, r3, #272
 8279 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 193


 8280              		.loc 1 1064 0
 8281 0d54 1433     		adds	r3, r3, #20
 8282 0d56 DAB2     		uxtb	r2, r3
 8283 0d58 07F54873 		add	r3, r7, #800
 8284 0d5c 9A74     		strb	r2, [r3, #18]
 8285 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8286 0d62 0A33     		adds	r3, r3, #10
 8287 0d64 DAB2     		uxtb	r2, r3
 8288 0d66 07F54873 		add	r3, r7, #800
 8289 0d6a DA74     		strb	r2, [r3, #19]
 8290 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8291 0d70 0A33     		adds	r3, r3, #10
 8292 0d72 DAB2     		uxtb	r2, r3
 8293 0d74 07F54873 		add	r3, r7, #800
 8294 0d78 1A75     		strb	r2, [r3, #20]
 8295 0d7a 07F54873 		add	r3, r7, #800
 8296 0d7e 0022     		movs	r2, #0
 8297 0d80 5A75     		strb	r2, [r3, #21]
 8298 0d82 07F54873 		add	r3, r7, #800
 8299 0d86 4622     		movs	r2, #70
 8300 0d88 9A75     		strb	r2, [r3, #22]
 8301 0d8a 07F54873 		add	r3, r7, #800
 8302 0d8e 4622     		movs	r2, #70
 8303 0d90 DA75     		strb	r2, [r3, #23]
 8304 0d92 07F54873 		add	r3, r7, #800
 8305 0d96 4622     		movs	r2, #70
 8306 0d98 1A76     		strb	r2, [r3, #24]
 8307 0d9a 07F54873 		add	r3, r7, #800
 8308 0d9e 4622     		movs	r2, #70
 8309 0da0 5A76     		strb	r2, [r3, #25]
 8310 0da2 07F54873 		add	r3, r7, #800
 8311 0da6 1E22     		movs	r2, #30
 8312 0da8 9A76     		strb	r2, [r3, #26]
 8313 0daa 07F54873 		add	r3, r7, #800
 8314 0dae 0022     		movs	r2, #0
 8315 0db0 DA76     		strb	r2, [r3, #27]
 8316 0db2 07F54873 		add	r3, r7, #800
 8317 0db6 2822     		movs	r2, #40
 8318 0db8 1A77     		strb	r2, [r3, #28]
 8319 0dba 07F54873 		add	r3, r7, #800
 8320 0dbe 3222     		movs	r2, #50
 8321 0dc0 5A77     		strb	r2, [r3, #29]
 8322 0dc2 07F54873 		add	r3, r7, #800
 8323 0dc6 0022     		movs	r2, #0
 8324 0dc8 9A77     		strb	r2, [r3, #30]
 8325 0dca 07F54873 		add	r3, r7, #800
 8326 0dce 3222     		movs	r2, #50
 8327 0dd0 DA77     		strb	r2, [r3, #31]
 8328 0dd2 07F54873 		add	r3, r7, #800
 8329 0dd6 2822     		movs	r2, #40
 8330 0dd8 83F82020 		strb	r2, [r3, #32]
 8331 0ddc 07F54873 		add	r3, r7, #800
 8332 0de0 2822     		movs	r2, #40
 8333 0de2 83F82120 		strb	r2, [r3, #33]
 8334 0de6 07F54873 		add	r3, r7, #800
 8335 0dea 0022     		movs	r2, #0
 8336 0dec 83F82220 		strb	r2, [r3, #34]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 194


1070:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1071:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1072:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1073:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8337              		.loc 1 1073 0
 8338 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8339 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8340              		.loc 1 1064 0
 8341 0df8 3C33     		adds	r3, r3, #60
 8342 0dfa DAB2     		uxtb	r2, r3
 8343 0dfc 07F54873 		add	r3, r7, #800
 8344 0e00 83F82320 		strb	r2, [r3, #35]
 8345 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8346 0e08 0A33     		adds	r3, r3, #10
 8347 0e0a DAB2     		uxtb	r2, r3
 8348 0e0c 07F54873 		add	r3, r7, #800
 8349 0e10 83F82420 		strb	r2, [r3, #36]
 8350 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8351 0e18 0A33     		adds	r3, r3, #10
 8352 0e1a DAB2     		uxtb	r2, r3
 8353 0e1c 07F54873 		add	r3, r7, #800
 8354 0e20 83F82520 		strb	r2, [r3, #37]
 8355 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8356 0e28 0A33     		adds	r3, r3, #10
 8357 0e2a DAB2     		uxtb	r2, r3
 8358 0e2c 07F54873 		add	r3, r7, #800
 8359 0e30 83F82620 		strb	r2, [r3, #38]
 8360 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8361 0e38 0A33     		adds	r3, r3, #10
 8362 0e3a DAB2     		uxtb	r2, r3
 8363 0e3c 07F54873 		add	r3, r7, #800
 8364 0e40 83F82720 		strb	r2, [r3, #39]
1074:..\src/command_processing.c ****         
1075:..\src/command_processing.c ****         // GENERIC PARAMS
1076:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1077:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8365              		.loc 1 1077 0
 8366 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8367 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8368 0e4c 1346     		mov	r3, r2
 8369 0e4e DB00     		lsls	r3, r3, #3
 8370 0e50 9B1A     		subs	r3, r3, r2
 8371 0e52 1B01     		lsls	r3, r3, #4
 8372 0e54 0B44     		add	r3, r3, r1
 8373 0e56 03F58873 		add	r3, r3, #272
 8374 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8375              		.loc 1 1064 0
 8376 0e5c 1433     		adds	r3, r3, #20
 8377 0e5e DAB2     		uxtb	r2, r3
 8378 0e60 07F54873 		add	r3, r7, #800
 8379 0e64 83F82820 		strb	r2, [r3, #40]
 8380              		.loc 1 1077 0
 8381 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8382 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8383 0e70 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 195


 8384 0e72 DB00     		lsls	r3, r3, #3
 8385 0e74 9B1A     		subs	r3, r3, r2
 8386 0e76 1B01     		lsls	r3, r3, #4
 8387 0e78 0B44     		add	r3, r3, r1
 8388 0e7a 03F58873 		add	r3, r3, #272
 8389 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8390              		.loc 1 1064 0
 8391 0e80 1433     		adds	r3, r3, #20
 8392 0e82 DAB2     		uxtb	r2, r3
 8393 0e84 07F54873 		add	r3, r7, #800
 8394 0e88 83F82920 		strb	r2, [r3, #41]
 8395 0e8c 07F54873 		add	r3, r7, #800
 8396 0e90 0022     		movs	r2, #0
 8397 0e92 83F82A20 		strb	r2, [r3, #42]
 8398 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8399 0e9a 0A33     		adds	r3, r3, #10
 8400 0e9c DAB2     		uxtb	r2, r3
 8401 0e9e 07F54873 		add	r3, r7, #800
 8402 0ea2 83F82B20 		strb	r2, [r3, #43]
 8403 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8404 0eaa 0A33     		adds	r3, r3, #10
 8405 0eac DAB2     		uxtb	r2, r3
 8406 0eae 07F54873 		add	r3, r7, #800
 8407 0eb2 83F82C20 		strb	r2, [r3, #44]
 8408 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8409 0eba 0A33     		adds	r3, r3, #10
 8410 0ebc DAB2     		uxtb	r2, r3
 8411 0ebe 07F54873 		add	r3, r7, #800
 8412 0ec2 83F82D20 		strb	r2, [r3, #45]
 8413 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8414 0eca 0A33     		adds	r3, r3, #10
 8415 0ecc DAB2     		uxtb	r2, r3
 8416 0ece 07F54873 		add	r3, r7, #800
 8417 0ed2 83F82E20 		strb	r2, [r3, #46]
 8418 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8419 0eda 0A33     		adds	r3, r3, #10
 8420 0edc DAB2     		uxtb	r2, r3
 8421 0ede 07F54873 		add	r3, r7, #800
 8422 0ee2 83F82F20 		strb	r2, [r3, #47]
1078:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1079:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8423              		.loc 1 1079 0
 8424 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8425 0eea D7F88015 		ldr	r1, [r7, #1408]
 8426 0eee 1346     		mov	r3, r2
 8427 0ef0 DB00     		lsls	r3, r3, #3
 8428 0ef2 9B1A     		subs	r3, r3, r2
 8429 0ef4 1B01     		lsls	r3, r3, #4
 8430 0ef6 0B44     		add	r3, r3, r1
 8431 0ef8 03F58873 		add	r3, r3, #272
 8432 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8433              		.loc 1 1064 0
 8434 0efe 1433     		adds	r3, r3, #20
 8435 0f00 DAB2     		uxtb	r2, r3
 8436 0f02 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 196


 8437 0f06 83F83020 		strb	r2, [r3, #48]
 8438              		.loc 1 1079 0
 8439 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8440 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8441 0f12 1346     		mov	r3, r2
 8442 0f14 DB00     		lsls	r3, r3, #3
 8443 0f16 9B1A     		subs	r3, r3, r2
 8444 0f18 1B01     		lsls	r3, r3, #4
 8445 0f1a 0B44     		add	r3, r3, r1
 8446 0f1c 03F58873 		add	r3, r3, #272
 8447 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8448              		.loc 1 1064 0
 8449 0f22 1433     		adds	r3, r3, #20
 8450 0f24 DAB2     		uxtb	r2, r3
 8451 0f26 07F54873 		add	r3, r7, #800
 8452 0f2a 83F83120 		strb	r2, [r3, #49]
 8453              		.loc 1 1079 0
 8454 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8455 0f32 D7F88015 		ldr	r1, [r7, #1408]
 8456 0f36 1346     		mov	r3, r2
 8457 0f38 DB00     		lsls	r3, r3, #3
 8458 0f3a 9B1A     		subs	r3, r3, r2
 8459 0f3c 1B01     		lsls	r3, r3, #4
 8460 0f3e 0B44     		add	r3, r3, r1
 8461 0f40 03F58873 		add	r3, r3, #272
 8462 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8463              		.loc 1 1064 0
 8464 0f46 1433     		adds	r3, r3, #20
 8465 0f48 DAB2     		uxtb	r2, r3
 8466 0f4a 07F54873 		add	r3, r7, #800
 8467 0f4e 83F83220 		strb	r2, [r3, #50]
 8468 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8469 0f56 0A33     		adds	r3, r3, #10
 8470 0f58 DAB2     		uxtb	r2, r3
 8471 0f5a 07F54873 		add	r3, r7, #800
 8472 0f5e 83F83320 		strb	r2, [r3, #51]
 8473 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8474 0f66 0A33     		adds	r3, r3, #10
 8475 0f68 DAB2     		uxtb	r2, r3
 8476 0f6a 07F54873 		add	r3, r7, #800
 8477 0f6e 83F83420 		strb	r2, [r3, #52]
 8478 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8479 0f76 0A33     		adds	r3, r3, #10
 8480 0f78 DAB2     		uxtb	r2, r3
 8481 0f7a 07F54873 		add	r3, r7, #800
 8482 0f7e 83F83520 		strb	r2, [r3, #53]
 8483 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8484 0f86 0A33     		adds	r3, r3, #10
 8485 0f88 DAB2     		uxtb	r2, r3
 8486 0f8a 07F54873 		add	r3, r7, #800
 8487 0f8e 83F83620 		strb	r2, [r3, #54]
1080:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8488              		.loc 1 1080 0
 8489 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8490 0f96 D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 197


 8491 0f9a 1346     		mov	r3, r2
 8492 0f9c DB00     		lsls	r3, r3, #3
 8493 0f9e 9B1A     		subs	r3, r3, r2
 8494 0fa0 1B01     		lsls	r3, r3, #4
 8495 0fa2 0B44     		add	r3, r3, r1
 8496 0fa4 03F58873 		add	r3, r3, #272
 8497 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8498              		.loc 1 1064 0
 8499 0faa 1433     		adds	r3, r3, #20
 8500 0fac DAB2     		uxtb	r2, r3
 8501 0fae 07F54873 		add	r3, r7, #800
 8502 0fb2 83F83720 		strb	r2, [r3, #55]
1081:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8503              		.loc 1 1081 0
 8504 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8505 0fba D7F88015 		ldr	r1, [r7, #1408]
 8506 0fbe 1346     		mov	r3, r2
 8507 0fc0 DB00     		lsls	r3, r3, #3
 8508 0fc2 9B1A     		subs	r3, r3, r2
 8509 0fc4 1B01     		lsls	r3, r3, #4
 8510 0fc6 0B44     		add	r3, r3, r1
 8511 0fc8 03F58873 		add	r3, r3, #272
 8512 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8513              		.loc 1 1064 0
 8514 0fce 1433     		adds	r3, r3, #20
 8515 0fd0 DAB2     		uxtb	r2, r3
 8516 0fd2 07F54873 		add	r3, r7, #800
 8517 0fd6 83F83820 		strb	r2, [r3, #56]
 8518 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8519 0fde 0A33     		adds	r3, r3, #10
 8520 0fe0 DAB2     		uxtb	r2, r3
 8521 0fe2 07F54873 		add	r3, r7, #800
 8522 0fe6 83F83920 		strb	r2, [r3, #57]
 8523 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8524 0fee 0A33     		adds	r3, r3, #10
 8525 0ff0 DAB2     		uxtb	r2, r3
 8526 0ff2 07F54873 		add	r3, r7, #800
 8527 0ff6 83F83A20 		strb	r2, [r3, #58]
 8528 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8529 0ffe 0A33     		adds	r3, r3, #10
 8530 1000 DAB2     		uxtb	r2, r3
 8531 1002 07F54873 		add	r3, r7, #800
 8532 1006 83F83B20 		strb	r2, [r3, #59]
 8533 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8534 100e 0A33     		adds	r3, r3, #10
 8535 1010 DAB2     		uxtb	r2, r3
 8536 1012 07F54873 		add	r3, r7, #800
 8537 1016 83F83C20 		strb	r2, [r3, #60]
 8538 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8539 101e 0A33     		adds	r3, r3, #10
 8540 1020 DAB2     		uxtb	r2, r3
 8541 1022 07F54873 		add	r3, r7, #800
 8542 1026 83F83D20 		strb	r2, [r3, #61]
 8543 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8544 102e 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 198


 8545 1030 DAB2     		uxtb	r2, r3
 8546 1032 07F54873 		add	r3, r7, #800
 8547 1036 83F83E20 		strb	r2, [r3, #62]
1082:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8548              		.loc 1 1082 0
 8549 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8550 103e D7F88015 		ldr	r1, [r7, #1408]
 8551 1042 1346     		mov	r3, r2
 8552 1044 DB00     		lsls	r3, r3, #3
 8553 1046 9B1A     		subs	r3, r3, r2
 8554 1048 1B01     		lsls	r3, r3, #4
 8555 104a 0B44     		add	r3, r3, r1
 8556 104c 03F58873 		add	r3, r3, #272
 8557 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8558              		.loc 1 1064 0
 8559 1052 1433     		adds	r3, r3, #20
 8560 1054 DAB2     		uxtb	r2, r3
 8561 1056 07F54873 		add	r3, r7, #800
 8562 105a 83F83F20 		strb	r2, [r3, #63]
1083:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8563              		.loc 1 1083 0
 8564 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8565 1062 D7F88015 		ldr	r1, [r7, #1408]
 8566 1066 1346     		mov	r3, r2
 8567 1068 DB00     		lsls	r3, r3, #3
 8568 106a 9B1A     		subs	r3, r3, r2
 8569 106c 1B01     		lsls	r3, r3, #4
 8570 106e 0B44     		add	r3, r3, r1
 8571 1070 03F58873 		add	r3, r3, #272
 8572 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1064:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8573              		.loc 1 1064 0
 8574 1076 1433     		adds	r3, r3, #20
 8575 1078 DAB2     		uxtb	r2, r3
 8576 107a 07F54873 		add	r3, r7, #800
 8577 107e 83F84020 		strb	r2, [r3, #64]
 8578 1082 07F54873 		add	r3, r7, #800
 8579 1086 1422     		movs	r2, #20
 8580 1088 83F84120 		strb	r2, [r3, #65]
 8581 108c 07F54873 		add	r3, r7, #800
 8582 1090 1522     		movs	r2, #21
 8583 1092 83F84220 		strb	r2, [r3, #66]
 8584 1096 07F54873 		add	r3, r7, #800
 8585 109a 3222     		movs	r2, #50
 8586 109c 83F84320 		strb	r2, [r3, #67]
 8587 10a0 07F54873 		add	r3, r7, #800
 8588 10a4 3222     		movs	r2, #50
 8589 10a6 83F84420 		strb	r2, [r3, #68]
 8590 10aa 07F54873 		add	r3, r7, #800
 8591 10ae 3222     		movs	r2, #50
 8592 10b0 83F84520 		strb	r2, [r3, #69]
 8593 10b4 07F54873 		add	r3, r7, #800
 8594 10b8 3222     		movs	r2, #50
 8595 10ba 83F84620 		strb	r2, [r3, #70]
 8596 10be 07F54873 		add	r3, r7, #800
 8597 10c2 6E22     		movs	r2, #110
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 199


 8598 10c4 83F84720 		strb	r2, [r3, #71]
 8599 10c8 07F54873 		add	r3, r7, #800
 8600 10cc 6E22     		movs	r2, #110
 8601 10ce 83F84820 		strb	r2, [r3, #72]
 8602 10d2 07F54873 		add	r3, r7, #800
 8603 10d6 6E22     		movs	r2, #110
 8604 10d8 83F84920 		strb	r2, [r3, #73]
 8605 10dc 07F54873 		add	r3, r7, #800
 8606 10e0 0022     		movs	r2, #0
 8607 10e2 83F84A20 		strb	r2, [r3, #74]
 8608 10e6 07F54873 		add	r3, r7, #800
 8609 10ea 6422     		movs	r2, #100
 8610 10ec 83F84B20 		strb	r2, [r3, #75]
 8611 10f0 07F54873 		add	r3, r7, #800
 8612 10f4 6422     		movs	r2, #100
 8613 10f6 83F84C20 		strb	r2, [r3, #76]
 8614 10fa 07F54873 		add	r3, r7, #800
 8615 10fe 6422     		movs	r2, #100
 8616 1100 83F84D20 		strb	r2, [r3, #77]
 8617 1104 07F54873 		add	r3, r7, #800
 8618 1108 5022     		movs	r2, #80
 8619 110a 83F84E20 		strb	r2, [r3, #78]
 8620 110e 07F54873 		add	r3, r7, #800
 8621 1112 5022     		movs	r2, #80
 8622 1114 83F84F20 		strb	r2, [r3, #79]
 8623 1118 07F54873 		add	r3, r7, #800
 8624 111c 5A22     		movs	r2, #90
 8625 111e 83F85020 		strb	r2, [r3, #80]
 8626 1122 07F54873 		add	r3, r7, #800
 8627 1126 5A22     		movs	r2, #90
 8628 1128 83F85120 		strb	r2, [r3, #81]
 8629 112c 07F54873 		add	r3, r7, #800
 8630 1130 5A22     		movs	r2, #90
 8631 1132 83F85220 		strb	r2, [r3, #82]
1084:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1085:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1086:..\src/command_processing.c ****         ST_WR_SPEC,
1087:..\src/command_processing.c ****         
1088:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1089:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1090:..\src/command_processing.c ****         
1091:..\src/command_processing.c ****     };
1092:..\src/command_processing.c ****     
1093:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8632              		.loc 1 1093 0
 8633 1136 07F5EA73 		add	r3, r7, #468
 8634 113a CD4A     		ldr	r2, .L381
 8635 113c 1846     		mov	r0, r3
 8636 113e 1146     		mov	r1, r2
 8637 1140 4FF4A673 		mov	r3, #332
 8638 1144 1A46     		mov	r2, r3
 8639 1146 FFF7FEFF 		bl	memcpy
1094:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1095:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1096:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1097:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1098:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 200


1099:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1100:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1101:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1102:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1103:..\src/command_processing.c ****         
1104:..\src/command_processing.c ****         // GENERIC PARAMS
1105:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1106:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1107:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1108:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1109:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1110:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1111:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1112:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1113:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1114:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1115:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1116:..\src/command_processing.c ****         
1117:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1118:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1119:..\src/command_processing.c ****     };
1120:..\src/command_processing.c **** 
1121:..\src/command_processing.c ****     //Parameters menu
1122:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8640              		.loc 1 1122 0
 8641 114a 07F5AE73 		add	r3, r7, #348
 8642 114e 0022     		movs	r2, #0
 8643 1150 1A60     		str	r2, [r3]
 8644 1152 0433     		adds	r3, r3, #4
 8645 1154 7222     		movs	r2, #114
 8646 1156 0021     		movs	r1, #0
 8647 1158 1846     		mov	r0, r3
 8648 115a FFF7FEFF 		bl	memset
1123:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8649              		.loc 1 1123 0
 8650 115e 07F5AE70 		add	r0, r7, #348
 8651 1162 6423     		movs	r3, #100
 8652 1164 0A22     		movs	r2, #10
 8653 1166 C349     		ldr	r1, .L381+4
 8654 1168 FFF7FEFF 		bl	sprintf
1124:..\src/command_processing.c **** 
1125:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8655              		.loc 1 1125 0
 8656 116c 07F59273 		add	r3, r7, #292
 8657 1170 0022     		movs	r2, #0
 8658 1172 1A60     		str	r2, [r3]
 8659 1174 0433     		adds	r3, r3, #4
 8660 1176 3422     		movs	r2, #52
 8661 1178 0021     		movs	r1, #0
 8662 117a 1846     		mov	r0, r3
 8663 117c FFF7FEFF 		bl	memset
1126:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8664              		.loc 1 1126 0
 8665 1180 D7F88035 		ldr	r3, [r7, #1408]
 8666 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8667 1188 042B     		cmp	r3, #4
 8668 118a 10D1     		bne	.L313
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 201


1127:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8669              		.loc 1 1127 0
 8670 118c 07F59273 		add	r3, r7, #292
 8671 1190 B94A     		ldr	r2, .L381+8
 8672 1192 1C46     		mov	r4, r3
 8673 1194 1546     		mov	r5, r2
 8674 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8675 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8676 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8677 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8678 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8679 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8680 11a2 95E80300 		ldmia	r5, {r0, r1}
 8681 11a6 2060     		str	r0, [r4]
 8682 11a8 0434     		adds	r4, r4, #4
 8683 11aa 2170     		strb	r1, [r4]
 8684 11ac 0FE0     		b	.L314
 8685              	.L313:
1128:..\src/command_processing.c ****     }
1129:..\src/command_processing.c ****     else {
1130:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8686              		.loc 1 1130 0
 8687 11ae 07F59273 		add	r3, r7, #292
 8688 11b2 B24A     		ldr	r2, .L381+12
 8689 11b4 1C46     		mov	r4, r3
 8690 11b6 1546     		mov	r5, r2
 8691 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8692 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8693 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8694 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8695 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8696 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8697 11c4 95E80300 		ldmia	r5, {r0, r1}
 8698 11c8 2060     		str	r0, [r4]
 8699 11ca 0434     		adds	r4, r4, #4
 8700 11cc 2170     		strb	r1, [r4]
 8701              	.L314:
1131:..\src/command_processing.c ****     }
1132:..\src/command_processing.c ****     
1133:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8702              		.loc 1 1133 0
 8703 11ce 07F1F403 		add	r3, r7, #244
 8704 11d2 AB4A     		ldr	r2, .L381+16
 8705 11d4 1A60     		str	r2, [r3]
 8706 11d6 07F1F403 		add	r3, r7, #244
 8707 11da AA4A     		ldr	r2, .L381+20
 8708 11dc 5A60     		str	r2, [r3, #4]
 8709 11de 07F1F403 		add	r3, r7, #244
 8710 11e2 A94A     		ldr	r2, .L381+24
 8711 11e4 9A60     		str	r2, [r3, #8]
 8712 11e6 07F1F403 		add	r3, r7, #244
 8713 11ea A84A     		ldr	r2, .L381+28
 8714 11ec DA60     		str	r2, [r3, #12]
 8715 11ee 07F1F403 		add	r3, r7, #244
 8716 11f2 A74A     		ldr	r2, .L381+32
 8717 11f4 1A61     		str	r2, [r3, #16]
 8718 11f6 07F1F403 		add	r3, r7, #244
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 202


 8719 11fa A64A     		ldr	r2, .L381+36
 8720 11fc 5A61     		str	r2, [r3, #20]
 8721 11fe 07F1F403 		add	r3, r7, #244
 8722 1202 07F5AE72 		add	r2, r7, #348
 8723 1206 9A61     		str	r2, [r3, #24]
 8724 1208 07F1F403 		add	r3, r7, #244
 8725 120c A24A     		ldr	r2, .L381+40
 8726 120e DA61     		str	r2, [r3, #28]
 8727 1210 07F1F403 		add	r3, r7, #244
 8728 1214 A14A     		ldr	r2, .L381+44
 8729 1216 1A62     		str	r2, [r3, #32]
 8730 1218 07F1F403 		add	r3, r7, #244
 8731 121c A04A     		ldr	r2, .L381+48
 8732 121e 5A62     		str	r2, [r3, #36]
 8733 1220 07F1F403 		add	r3, r7, #244
 8734 1224 07F59272 		add	r2, r7, #292
 8735 1228 9A62     		str	r2, [r3, #40]
 8736 122a 07F1F403 		add	r3, r7, #244
 8737 122e 9D4A     		ldr	r2, .L381+52
 8738 1230 DA62     		str	r2, [r3, #44]
1134:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1135:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1136:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1137:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1138:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1139:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1140:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1141:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1142:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1143:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1144:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1145:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1146:..\src/command_processing.c ****     };   
1147:..\src/command_processing.c ****     
1148:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8739              		.loc 1 1148 0
 8740 1232 07F1D403 		add	r3, r7, #212
 8741 1236 9C4A     		ldr	r2, .L381+56
 8742 1238 1C46     		mov	r4, r3
 8743 123a 1546     		mov	r5, r2
 8744 123c 2868     		ldr	r0, [r5]	@ unaligned
 8745 123e 6968     		ldr	r1, [r5, #4]	@ unaligned
 8746 1240 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8747 1242 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8748 1244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8749 1246 2869     		ldr	r0, [r5, #16]	@ unaligned
 8750 1248 6969     		ldr	r1, [r5, #20]	@ unaligned
 8751 124a AA69     		ldr	r2, [r5, #24]	@ unaligned
 8752 124c EB69     		ldr	r3, [r5, #28]	@ unaligned
 8753 124e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1149:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8754              		.loc 1 1149 0
 8755 1250 07F1C803 		add	r3, r7, #200
 8756 1254 954A     		ldr	r2, .L381+60
 8757 1256 1068     		ldr	r0, [r2]	@ unaligned
 8758 1258 5168     		ldr	r1, [r2, #4]	@ unaligned
 8759 125a 03C3     		stmia	r3!, {r0, r1}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 203


 8760 125c 127A     		ldrb	r2, [r2, #8]
 8761 125e 1A70     		strb	r2, [r3]
1150:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8762              		.loc 1 1150 0
 8763 1260 07F1B403 		add	r3, r7, #180
 8764 1264 924A     		ldr	r2, .L381+64
 8765 1266 1C46     		mov	r4, r3
 8766 1268 1546     		mov	r5, r2
 8767 126a 2868     		ldr	r0, [r5]	@ unaligned
 8768 126c 6968     		ldr	r1, [r5, #4]	@ unaligned
 8769 126e AA68     		ldr	r2, [r5, #8]	@ unaligned
 8770 1270 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8771 1272 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8772 1274 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8773 1276 2380     		strh	r3, [r4]	@ unaligned
1151:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8774              		.loc 1 1151 0
 8775 1278 2323     		movs	r3, #35
 8776 127a 87F87B35 		strb	r3, [r7, #1403]
1152:..\src/command_processing.c **** 
1153:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1154:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1155:..\src/command_processing.c ****     
1156:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1157:..\src/command_processing.c **** 
1158:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1159:..\src/command_processing.c ****     
1160:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1161:..\src/command_processing.c ****     j = 0;
 8777              		.loc 1 1161 0
 8778 127e 0023     		movs	r3, #0
 8779 1280 87F88635 		strb	r3, [r7, #1414]
1162:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8780              		.loc 1 1162 0
 8781 1284 0023     		movs	r3, #0
 8782 1286 87F88735 		strb	r3, [r7, #1415]
 8783 128a 21E0     		b	.L315
 8784              	.L318:
1163:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8785              		.loc 1 1163 0
 8786 128c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8787 1290 07F1C802 		add	r2, r7, #200
 8788 1294 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8789 1296 1A46     		mov	r2, r3
 8790 1298 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8791 129c 0133     		adds	r3, r3, #1
 8792 129e 9A42     		cmp	r2, r3
 8793 12a0 0BD1     		bne	.L316
1164:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8794              		.loc 1 1164 0
 8795 12a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8796 12a6 07F16002 		add	r2, r7, #96
 8797 12aa 0121     		movs	r1, #1
 8798 12ac D154     		strb	r1, [r2, r3]
1165:..\src/command_processing.c ****             j++;
 8799              		.loc 1 1165 0
 8800 12ae 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 204


 8801 12b2 0133     		adds	r3, r3, #1
 8802 12b4 87F88635 		strb	r3, [r7, #1414]
 8803 12b8 05E0     		b	.L317
 8804              	.L316:
1166:..\src/command_processing.c ****         }
1167:..\src/command_processing.c ****         else {
1168:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8805              		.loc 1 1168 0
 8806 12ba 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8807 12be 07F16002 		add	r2, r7, #96
 8808 12c2 0021     		movs	r1, #0
 8809 12c4 D154     		strb	r1, [r2, r3]
 8810              	.L317:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8811              		.loc 1 1162 0 discriminator 2
 8812 12c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8813 12ca 0133     		adds	r3, r3, #1
 8814 12cc 87F88735 		strb	r3, [r7, #1415]
 8815              	.L315:
1162:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8816              		.loc 1 1162 0 is_stmt 0 discriminator 1
 8817 12d0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8818 12d4 522B     		cmp	r3, #82
 8819 12d6 D9D9     		bls	.L318
1169:..\src/command_processing.c ****         }
1170:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1171:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1172:..\src/command_processing.c ****     j = 0;
 8820              		.loc 1 1172 0 is_stmt 1
 8821 12d8 0023     		movs	r3, #0
 8822 12da 87F88635 		strb	r3, [r7, #1414]
1173:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8823              		.loc 1 1173 0
 8824 12de 0023     		movs	r3, #0
 8825 12e0 87F88735 		strb	r3, [r7, #1415]
 8826 12e4 21E0     		b	.L319
 8827              	.L322:
1174:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8828              		.loc 1 1174 0
 8829 12e6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8830 12ea 07F1B402 		add	r2, r7, #180
 8831 12ee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8832 12f0 1A46     		mov	r2, r3
 8833 12f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8834 12f6 0133     		adds	r3, r3, #1
 8835 12f8 9A42     		cmp	r2, r3
 8836 12fa 0BD1     		bne	.L320
1175:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8837              		.loc 1 1175 0
 8838 12fc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8839 1300 07F10C02 		add	r2, r7, #12
 8840 1304 0121     		movs	r1, #1
 8841 1306 D154     		strb	r1, [r2, r3]
1176:..\src/command_processing.c ****             j++;
 8842              		.loc 1 1176 0
 8843 1308 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8844 130c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 205


 8845 130e 87F88635 		strb	r3, [r7, #1414]
 8846 1312 05E0     		b	.L321
 8847              	.L320:
1177:..\src/command_processing.c ****         }
1178:..\src/command_processing.c ****         else {
1179:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8848              		.loc 1 1179 0
 8849 1314 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8850 1318 07F10C02 		add	r2, r7, #12
 8851 131c 0021     		movs	r1, #0
 8852 131e D154     		strb	r1, [r2, r3]
 8853              	.L321:
1173:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8854              		.loc 1 1173 0 discriminator 2
 8855 1320 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8856 1324 0133     		adds	r3, r3, #1
 8857 1326 87F88735 		strb	r3, [r7, #1415]
 8858              	.L319:
1173:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8859              		.loc 1 1173 0 is_stmt 0 discriminator 1
 8860 132a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8861 132e 522B     		cmp	r3, #82
 8862 1330 D9D9     		bls	.L322
1180:..\src/command_processing.c ****         }
1181:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1182:..\src/command_processing.c ****         
1183:..\src/command_processing.c ****     if (!index) {
 8863              		.loc 1 1183 0 is_stmt 1
 8864 1332 BB1D     		adds	r3, r7, #6
 8865 1334 1B88     		ldrh	r3, [r3]
 8866 1336 002B     		cmp	r3, #0
 8867 1338 17D1     		bne	.L323
1184:..\src/command_processing.c ****         // Get parameters list with relative types
1185:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8868              		.loc 1 1185 0
 8869 133a 07F54874 		add	r4, r7, #800
 8870 133e 07F55D72 		add	r2, r7, #884
 8871 1342 07F57271 		add	r1, r7, #968
 8872 1346 07F21C40 		addw	r0, r7, #1052
 8873 134a 07F1F403 		add	r3, r7, #244
 8874 134e 0393     		str	r3, [sp, #12]
 8875 1350 07F16003 		add	r3, r7, #96
 8876 1354 0293     		str	r3, [sp, #8]
 8877 1356 07F5EA73 		add	r3, r7, #468
 8878 135a 0193     		str	r3, [sp, #4]
 8879 135c 07F1D403 		add	r3, r7, #212
 8880 1360 0093     		str	r3, [sp]
 8881 1362 2346     		mov	r3, r4
 8882 1364 FFF7FEFF 		bl	get_param_list
1186:..\src/command_processing.c ****     }
1187:..\src/command_processing.c ****     else {
1188:..\src/command_processing.c ****         // Set specific parameter        
1189:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1190:..\src/command_processing.c ****         
1191:..\src/command_processing.c ****         // Find size of data
1192:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1193:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 206


1194:..\src/command_processing.c ****                 sod = 1; break;
1195:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1196:..\src/command_processing.c ****                 sod = 2; break;
1197:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1198:..\src/command_processing.c ****                 sod = 4; break;
1199:..\src/command_processing.c ****         }   
1200:..\src/command_processing.c ****             
1201:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1202:..\src/command_processing.c ****             // Use default specifications for param setting
1203:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1204:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1205:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1206:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1207:..\src/command_processing.c ****                     }
1208:..\src/command_processing.c ****                     break;                
1209:..\src/command_processing.c ****                 case TYPE_STRING:
1210:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1212:..\src/command_processing.c ****                     }
1213:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1214:..\src/command_processing.c ****                 break; 
1215:..\src/command_processing.c ****                 case TYPE_INT8:
1216:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1217:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     break;                    
1220:..\src/command_processing.c ****                 case TYPE_INT16:
1221:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1222:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1223:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1224:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1225:..\src/command_processing.c ****                         }
1226:..\src/command_processing.c ****                     }                   
1227:..\src/command_processing.c ****                     break;
1228:..\src/command_processing.c ****                 case TYPE_UINT16:
1229:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1230:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1231:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1232:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1233:..\src/command_processing.c ****                         }
1234:..\src/command_processing.c ****                     }
1235:..\src/command_processing.c ****                     break;
1236:..\src/command_processing.c ****                 case TYPE_INT32:
1237:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1238:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1239:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1240:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1241:..\src/command_processing.c ****                         }
1242:..\src/command_processing.c ****                     }
1243:..\src/command_processing.c ****                     break;
1244:..\src/command_processing.c ****                 case TYPE_UINT32:
1245:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1246:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1247:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1248:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1249:..\src/command_processing.c ****                         }
1250:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 207


1251:..\src/command_processing.c ****                     break;
1252:..\src/command_processing.c ****                 case TYPE_FLOAT:
1253:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1254:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1255:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1256:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1257:..\src/command_processing.c ****                         }
1258:..\src/command_processing.c ****                     }
1259:..\src/command_processing.c ****                     break;
1260:..\src/command_processing.c ****                 default:
1261:..\src/command_processing.c ****                     break;
1262:..\src/command_processing.c ****             }
1263:..\src/command_processing.c ****         }
1264:..\src/command_processing.c ****         else {  
1265:..\src/command_processing.c ****             // Use custom specifications for param setting
1266:..\src/command_processing.c ****             set_custom_param(index);
1267:..\src/command_processing.c ****         }
1268:..\src/command_processing.c ****         
1269:..\src/command_processing.c ****         // Store param also in user_emg structure
1270:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1271:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1272:..\src/command_processing.c ****         }
1273:..\src/command_processing.c ****         
1274:..\src/command_processing.c ****         // Perform chip reset if needed
1275:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1276:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1277:..\src/command_processing.c ****             do {
1278:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1279:..\src/command_processing.c ****                 idx++;
1280:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1281:..\src/command_processing.c ****             
1282:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1283:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1284:..\src/command_processing.c ****             }   
1285:..\src/command_processing.c ****         }
1286:..\src/command_processing.c ****     }
1287:..\src/command_processing.c **** } 
 8883              		.loc 1 1287 0
 8884 1368 E0E2     		b	.L374
 8885              	.L323:
1189:..\src/command_processing.c ****         
 8886              		.loc 1 1189 0
 8887 136a BB1D     		adds	r3, r7, #6
 8888 136c 1B88     		ldrh	r3, [r3]	@ movhi
 8889 136e DBB2     		uxtb	r3, r3
 8890 1370 013B     		subs	r3, r3, #1
 8891 1372 87F87A35 		strb	r3, [r7, #1402]
1192:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8892              		.loc 1 1192 0
 8893 1376 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8894 137a 07F57272 		add	r2, r7, #968
 8895 137e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8896 1380 092B     		cmp	r3, #9
 8897 1382 23D8     		bhi	.L325
 8898 1384 01A2     		adr	r2, .L327
 8899 1386 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8900 138a 00BF     		.p2align 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 208


 8901              	.L327:
 8902 138c B5130000 		.word	.L326+1
 8903 1390 B5130000 		.word	.L326+1
 8904 1394 B5130000 		.word	.L326+1
 8905 1398 BD130000 		.word	.L328+1
 8906 139c BD130000 		.word	.L328+1
 8907 13a0 C5130000 		.word	.L329+1
 8908 13a4 C5130000 		.word	.L329+1
 8909 13a8 C5130000 		.word	.L329+1
 8910 13ac CD130000 		.word	.L325+1
 8911 13b0 B5130000 		.word	.L326+1
 8912              		.p2align 1
 8913              	.L326:
1194:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8914              		.loc 1 1194 0
 8915 13b4 0123     		movs	r3, #1
 8916 13b6 87F88535 		strb	r3, [r7, #1413]
 8917 13ba 07E0     		b	.L325
 8918              	.L328:
1196:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8919              		.loc 1 1196 0
 8920 13bc 0223     		movs	r3, #2
 8921 13be 87F88535 		strb	r3, [r7, #1413]
 8922 13c2 03E0     		b	.L325
 8923              	.L329:
1198:..\src/command_processing.c ****         }   
 8924              		.loc 1 1198 0
 8925 13c4 0423     		movs	r3, #4
 8926 13c6 87F88535 		strb	r3, [r7, #1413]
 8927 13ca 00BF     		nop
 8928              	.L325:
1201:..\src/command_processing.c ****             // Use default specifications for param setting
 8929              		.loc 1 1201 0
 8930 13cc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8931 13d0 07F10C02 		add	r2, r7, #12
 8932 13d4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8933 13d6 002B     		cmp	r3, #0
 8934 13d8 40F03B82 		bne	.L330
1203:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8935              		.loc 1 1203 0
 8936 13dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8937 13e0 07F57272 		add	r2, r7, #968
 8938 13e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8939 13e6 092B     		cmp	r3, #9
 8940 13e8 00F23C82 		bhi	.L373
 8941 13ec 01A2     		adr	r2, .L333
 8942 13ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8943 13f2 00BF     		.p2align 2
 8944              	.L333:
 8945 13f4 1D140000 		.word	.L332+1
 8946 13f8 1B150000 		.word	.L334+1
 8947 13fc 1D140000 		.word	.L332+1
 8948 1400 6D150000 		.word	.L335+1
 8949 1404 03160000 		.word	.L336+1
 8950 1408 97160000 		.word	.L337+1
 8951 140c 2B170000 		.word	.L338+1
 8952 1410 BF170000 		.word	.L339+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 209


 8953 1414 65180000 		.word	.L373+1
 8954 1418 69140000 		.word	.L340+1
 8955              		.p2align 1
 8956              	.L332:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8957              		.loc 1 1205 0
 8958 141c 0023     		movs	r3, #0
 8959 141e 87F88735 		strb	r3, [r7, #1415]
 8960 1422 17E0     		b	.L341
 8961              	.L342:
1206:..\src/command_processing.c ****                     }
 8962              		.loc 1 1206 0 discriminator 3
 8963 1424 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8964 1428 07F21C43 		addw	r3, r7, #1052
 8965 142c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8966 1430 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8967 1434 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8968 1438 01FB02F2 		mul	r2, r1, r2
 8969 143c 1344     		add	r3, r3, r2
 8970 143e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8971 1442 0332     		adds	r2, r2, #3
 8972 1444 1B49     		ldr	r1, .L381+68
 8973 1446 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8974 1448 1A70     		strb	r2, [r3]
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8975              		.loc 1 1205 0 discriminator 3
 8976 144a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8977 144e 0133     		adds	r3, r3, #1
 8978 1450 87F88735 		strb	r3, [r7, #1415]
 8979              	.L341:
1205:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8980              		.loc 1 1205 0 is_stmt 0 discriminator 1
 8981 1454 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8982 1458 07F55D72 		add	r2, r7, #884
 8983 145c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8984 145e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8985 1462 9A42     		cmp	r2, r3
 8986 1464 DED3     		bcc	.L342
1208:..\src/command_processing.c ****                 case TYPE_STRING:
 8987              		.loc 1 1208 0 is_stmt 1
 8988 1466 FEE1     		b	.L368
 8989              	.L340:
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8990              		.loc 1 1210 0
 8991 1468 0023     		movs	r3, #0
 8992 146a 87F88735 		strb	r3, [r7, #1415]
 8993 146e 3BE0     		b	.L344
 8994              	.L382:
 8995              		.align	2
 8996              	.L381:
 8997 1470 340F0000 		.word	.LC129
 8998 1474 88020000 		.word	.LC130
 8999 1478 FC020000 		.word	.LC131
 9000 147c 34030000 		.word	.LC132
 9001 1480 6C030000 		.word	.LC133
 9002 1484 F8030000 		.word	.LC134
 9003 1488 38040000 		.word	.LC135
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 210


 9004 148c 64040000 		.word	.LC136
 9005 1490 7C040000 		.word	.LC137
 9006 1494 A4040000 		.word	.LC138
 9007 1498 00050000 		.word	.LC139
 9008 149c 3C050000 		.word	.LC140
 9009 14a0 9C050000 		.word	.LC141
 9010 14a4 18060000 		.word	.LC142
 9011 14a8 80100000 		.word	.LC85
 9012 14ac A0100000 		.word	.LC86
 9013 14b0 AC100000 		.word	.LC87
 9014 14b4 00000000 		.word	g_rx
 9015              	.L345:
1211:..\src/command_processing.c ****                     }
 9016              		.loc 1 1211 0 discriminator 3
 9017 14b8 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9018 14bc 07F21C43 		addw	r3, r7, #1052
 9019 14c0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9020 14c4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9021 14c8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9022 14cc 01FB02F2 		mul	r2, r1, r2
 9023 14d0 1344     		add	r3, r3, r2
 9024 14d2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9025 14d6 0332     		adds	r2, r2, #3
 9026 14d8 E149     		ldr	r1, .L383
 9027 14da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9028 14dc 1A70     		strb	r2, [r3]
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9029              		.loc 1 1210 0 discriminator 3
 9030 14de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9031 14e2 0133     		adds	r3, r3, #1
 9032 14e4 87F88735 		strb	r3, [r7, #1415]
 9033              	.L344:
1210:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9034              		.loc 1 1210 0 is_stmt 0 discriminator 1
 9035 14e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9036 14ec 07F55D72 		add	r2, r7, #884
 9037 14f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9038 14f2 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9039 14f6 9A42     		cmp	r2, r3
 9040 14f8 DED3     		bcc	.L345
1213:..\src/command_processing.c ****                 break; 
 9041              		.loc 1 1213 0 is_stmt 1
 9042 14fa 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9043 14fe 07F21C43 		addw	r3, r7, #1052
 9044 1502 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9045 1506 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9046 150a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9047 150e 01FB02F2 		mul	r2, r1, r2
 9048 1512 1344     		add	r3, r3, r2
 9049 1514 0022     		movs	r2, #0
 9050 1516 1A70     		strb	r2, [r3]
1214:..\src/command_processing.c ****                 case TYPE_INT8:
 9051              		.loc 1 1214 0
 9052 1518 A5E1     		b	.L368
 9053              	.L334:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9054              		.loc 1 1216 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 211


 9055 151a 0023     		movs	r3, #0
 9056 151c 87F88735 		strb	r3, [r7, #1415]
 9057 1520 1AE0     		b	.L346
 9058              	.L347:
1217:..\src/command_processing.c ****                     }
 9059              		.loc 1 1217 0 discriminator 3
 9060 1522 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9061 1526 07F21C43 		addw	r3, r7, #1052
 9062 152a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9063 152e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9064 1532 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9065 1536 01FB02F2 		mul	r2, r1, r2
 9066 153a 1344     		add	r3, r3, r2
 9067 153c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9068 1540 0332     		adds	r2, r2, #3
 9069 1542 C749     		ldr	r1, .L383
 9070 1544 0A44     		add	r2, r2, r1
 9071 1546 92F90020 		ldrsb	r2, [r2]
 9072 154a D2B2     		uxtb	r2, r2
 9073 154c 1A70     		strb	r2, [r3]
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9074              		.loc 1 1216 0 discriminator 3
 9075 154e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9076 1552 0133     		adds	r3, r3, #1
 9077 1554 87F88735 		strb	r3, [r7, #1415]
 9078              	.L346:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9079              		.loc 1 1216 0 is_stmt 0 discriminator 1
 9080 1558 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9081 155c 07F55D72 		add	r2, r7, #884
 9082 1560 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9083 1562 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9084 1566 9A42     		cmp	r2, r3
 9085 1568 DBD3     		bcc	.L347
1219:..\src/command_processing.c ****                 case TYPE_INT16:
 9086              		.loc 1 1219 0 is_stmt 1
 9087 156a 7CE1     		b	.L368
 9088              	.L335:
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9089              		.loc 1 1221 0
 9090 156c 0023     		movs	r3, #0
 9091 156e 87F88735 		strb	r3, [r7, #1415]
 9092 1572 3CE0     		b	.L348
 9093              	.L351:
1222:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9094              		.loc 1 1222 0
 9095 1574 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9096 1578 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9097 157c 02FB03F3 		mul	r3, r2, r3
 9098 1580 0333     		adds	r3, r3, #3
 9099 1582 B74A     		ldr	r2, .L383
 9100 1584 1344     		add	r3, r3, r2
 9101 1586 B3F90030 		ldrsh	r3, [r3]
 9102 158a A7F87835 		strh	r3, [r7, #1400]	@ movhi
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9103              		.loc 1 1223 0
 9104 158e 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 212


 9105 1590 87F88635 		strb	r3, [r7, #1414]
 9106 1594 20E0     		b	.L349
 9107              	.L350:
1224:..\src/command_processing.c ****                         }
 9108              		.loc 1 1224 0 discriminator 3
 9109 1596 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9110 159a 07F21C43 		addw	r3, r7, #1052
 9111 159e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9112 15a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9113 15a6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9114 15aa 01FB03F3 		mul	r3, r1, r3
 9115 15ae 1846     		mov	r0, r3
 9116 15b0 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9117 15b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9118 15b8 CB1A     		subs	r3, r1, r3
 9119 15ba 0344     		add	r3, r3, r0
 9120 15bc 013B     		subs	r3, r3, #1
 9121 15be 1344     		add	r3, r3, r2
 9122 15c0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9123 15c4 07F5AF61 		add	r1, r7, #1400
 9124 15c8 0A44     		add	r2, r2, r1
 9125 15ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9126 15cc 1A70     		strb	r2, [r3]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9127              		.loc 1 1223 0 discriminator 3
 9128 15ce 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9129 15d2 0133     		adds	r3, r3, #1
 9130 15d4 87F88635 		strb	r3, [r7, #1414]
 9131              	.L349:
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9132              		.loc 1 1223 0 is_stmt 0 discriminator 1
 9133 15d8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9134 15dc 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9135 15e0 9A42     		cmp	r2, r3
 9136 15e2 D8D3     		bcc	.L350
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9137              		.loc 1 1221 0 is_stmt 1 discriminator 2
 9138 15e4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9139 15e8 0133     		adds	r3, r3, #1
 9140 15ea 87F88735 		strb	r3, [r7, #1415]
 9141              	.L348:
1221:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9142              		.loc 1 1221 0 is_stmt 0 discriminator 1
 9143 15ee 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9144 15f2 07F55D72 		add	r2, r7, #884
 9145 15f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9146 15f8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9147 15fc 9A42     		cmp	r2, r3
 9148 15fe B9D3     		bcc	.L351
1227:..\src/command_processing.c ****                 case TYPE_UINT16:
 9149              		.loc 1 1227 0 is_stmt 1
 9150 1600 31E1     		b	.L368
 9151              	.L336:
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9152              		.loc 1 1229 0
 9153 1602 0023     		movs	r3, #0
 9154 1604 87F88735 		strb	r3, [r7, #1415]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 213


 9155 1608 3BE0     		b	.L352
 9156              	.L355:
1230:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9157              		.loc 1 1230 0
 9158 160a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9159 160e 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9160 1612 02FB03F3 		mul	r3, r2, r3
 9161 1616 0333     		adds	r3, r3, #3
 9162 1618 914A     		ldr	r2, .L383
 9163 161a 1344     		add	r3, r3, r2
 9164 161c 1B88     		ldrh	r3, [r3]
 9165 161e A7F87635 		strh	r3, [r7, #1398]	@ movhi
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9166              		.loc 1 1231 0
 9167 1622 0023     		movs	r3, #0
 9168 1624 87F88635 		strb	r3, [r7, #1414]
 9169 1628 20E0     		b	.L353
 9170              	.L354:
1232:..\src/command_processing.c ****                         }
 9171              		.loc 1 1232 0 discriminator 3
 9172 162a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9173 162e 07F21C43 		addw	r3, r7, #1052
 9174 1632 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9175 1636 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9176 163a 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9177 163e 01FB03F3 		mul	r3, r1, r3
 9178 1642 1846     		mov	r0, r3
 9179 1644 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9180 1648 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9181 164c CB1A     		subs	r3, r1, r3
 9182 164e 0344     		add	r3, r3, r0
 9183 1650 013B     		subs	r3, r3, #1
 9184 1652 1344     		add	r3, r3, r2
 9185 1654 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9186 1658 07F27651 		addw	r1, r7, #1398
 9187 165c 0A44     		add	r2, r2, r1
 9188 165e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9189 1660 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9190              		.loc 1 1231 0 discriminator 3
 9191 1662 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9192 1666 0133     		adds	r3, r3, #1
 9193 1668 87F88635 		strb	r3, [r7, #1414]
 9194              	.L353:
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9195              		.loc 1 1231 0 is_stmt 0 discriminator 1
 9196 166c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9197 1670 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9198 1674 9A42     		cmp	r2, r3
 9199 1676 D8D3     		bcc	.L354
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9200              		.loc 1 1229 0 is_stmt 1 discriminator 2
 9201 1678 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9202 167c 0133     		adds	r3, r3, #1
 9203 167e 87F88735 		strb	r3, [r7, #1415]
 9204              	.L352:
1229:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 214


 9205              		.loc 1 1229 0 is_stmt 0 discriminator 1
 9206 1682 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9207 1686 07F55D72 		add	r2, r7, #884
 9208 168a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9209 168c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9210 1690 9A42     		cmp	r2, r3
 9211 1692 BAD3     		bcc	.L355
1235:..\src/command_processing.c ****                 case TYPE_INT32:
 9212              		.loc 1 1235 0 is_stmt 1
 9213 1694 E7E0     		b	.L368
 9214              	.L337:
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9215              		.loc 1 1237 0
 9216 1696 0023     		movs	r3, #0
 9217 1698 87F88735 		strb	r3, [r7, #1415]
 9218 169c 3BE0     		b	.L356
 9219              	.L359:
1238:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9220              		.loc 1 1238 0
 9221 169e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9222 16a2 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9223 16a6 02FB03F3 		mul	r3, r2, r3
 9224 16aa 0333     		adds	r3, r3, #3
 9225 16ac 6C4A     		ldr	r2, .L383
 9226 16ae 1344     		add	r3, r3, r2
 9227 16b0 1B68     		ldr	r3, [r3]
 9228 16b2 C7F87035 		str	r3, [r7, #1392]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9229              		.loc 1 1239 0
 9230 16b6 0023     		movs	r3, #0
 9231 16b8 87F88635 		strb	r3, [r7, #1414]
 9232 16bc 20E0     		b	.L357
 9233              	.L358:
1240:..\src/command_processing.c ****                         }
 9234              		.loc 1 1240 0 discriminator 3
 9235 16be 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9236 16c2 07F21C43 		addw	r3, r7, #1052
 9237 16c6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9238 16ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9239 16ce 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9240 16d2 01FB03F3 		mul	r3, r1, r3
 9241 16d6 1846     		mov	r0, r3
 9242 16d8 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9243 16dc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9244 16e0 CB1A     		subs	r3, r1, r3
 9245 16e2 0344     		add	r3, r3, r0
 9246 16e4 013B     		subs	r3, r3, #1
 9247 16e6 1344     		add	r3, r3, r2
 9248 16e8 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9249 16ec 07F5AE61 		add	r1, r7, #1392
 9250 16f0 0A44     		add	r2, r2, r1
 9251 16f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9252 16f4 1A70     		strb	r2, [r3]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9253              		.loc 1 1239 0 discriminator 3
 9254 16f6 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9255 16fa 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 215


 9256 16fc 87F88635 		strb	r3, [r7, #1414]
 9257              	.L357:
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9258              		.loc 1 1239 0 is_stmt 0 discriminator 1
 9259 1700 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9260 1704 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9261 1708 9A42     		cmp	r2, r3
 9262 170a D8D3     		bcc	.L358
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9263              		.loc 1 1237 0 is_stmt 1 discriminator 2
 9264 170c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9265 1710 0133     		adds	r3, r3, #1
 9266 1712 87F88735 		strb	r3, [r7, #1415]
 9267              	.L356:
1237:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9268              		.loc 1 1237 0 is_stmt 0 discriminator 1
 9269 1716 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9270 171a 07F55D72 		add	r2, r7, #884
 9271 171e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9272 1720 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9273 1724 9A42     		cmp	r2, r3
 9274 1726 BAD3     		bcc	.L359
1243:..\src/command_processing.c ****                 case TYPE_UINT32:
 9275              		.loc 1 1243 0 is_stmt 1
 9276 1728 9DE0     		b	.L368
 9277              	.L338:
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9278              		.loc 1 1245 0
 9279 172a 0023     		movs	r3, #0
 9280 172c 87F88735 		strb	r3, [r7, #1415]
 9281 1730 3BE0     		b	.L360
 9282              	.L363:
1246:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9283              		.loc 1 1246 0
 9284 1732 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9285 1736 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9286 173a 02FB03F3 		mul	r3, r2, r3
 9287 173e 0333     		adds	r3, r3, #3
 9288 1740 474A     		ldr	r2, .L383
 9289 1742 1344     		add	r3, r3, r2
 9290 1744 1B68     		ldr	r3, [r3]
 9291 1746 C7F86C35 		str	r3, [r7, #1388]
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9292              		.loc 1 1247 0
 9293 174a 0023     		movs	r3, #0
 9294 174c 87F88635 		strb	r3, [r7, #1414]
 9295 1750 20E0     		b	.L361
 9296              	.L362:
1248:..\src/command_processing.c ****                         }
 9297              		.loc 1 1248 0 discriminator 3
 9298 1752 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9299 1756 07F21C43 		addw	r3, r7, #1052
 9300 175a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9301 175e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9302 1762 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9303 1766 01FB03F3 		mul	r3, r1, r3
 9304 176a 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 216


 9305 176c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9306 1770 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9307 1774 CB1A     		subs	r3, r1, r3
 9308 1776 0344     		add	r3, r3, r0
 9309 1778 013B     		subs	r3, r3, #1
 9310 177a 1344     		add	r3, r3, r2
 9311 177c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9312 1780 07F26C51 		addw	r1, r7, #1388
 9313 1784 0A44     		add	r2, r2, r1
 9314 1786 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9315 1788 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9316              		.loc 1 1247 0 discriminator 3
 9317 178a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9318 178e 0133     		adds	r3, r3, #1
 9319 1790 87F88635 		strb	r3, [r7, #1414]
 9320              	.L361:
1247:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9321              		.loc 1 1247 0 is_stmt 0 discriminator 1
 9322 1794 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9323 1798 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9324 179c 9A42     		cmp	r2, r3
 9325 179e D8D3     		bcc	.L362
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9326              		.loc 1 1245 0 is_stmt 1 discriminator 2
 9327 17a0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9328 17a4 0133     		adds	r3, r3, #1
 9329 17a6 87F88735 		strb	r3, [r7, #1415]
 9330              	.L360:
1245:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9331              		.loc 1 1245 0 is_stmt 0 discriminator 1
 9332 17aa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9333 17ae 07F55D72 		add	r2, r7, #884
 9334 17b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9335 17b4 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9336 17b8 9A42     		cmp	r2, r3
 9337 17ba BAD3     		bcc	.L363
1251:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9338              		.loc 1 1251 0 is_stmt 1
 9339 17bc 53E0     		b	.L368
 9340              	.L339:
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9341              		.loc 1 1253 0
 9342 17be 0023     		movs	r3, #0
 9343 17c0 87F88735 		strb	r3, [r7, #1415]
 9344 17c4 3BE0     		b	.L364
 9345              	.L367:
1254:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9346              		.loc 1 1254 0
 9347 17c6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9348 17ca 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9349 17ce 02FB03F3 		mul	r3, r2, r3
 9350 17d2 0333     		adds	r3, r3, #3
 9351 17d4 224A     		ldr	r2, .L383
 9352 17d6 1344     		add	r3, r3, r2
 9353 17d8 1B68     		ldr	r3, [r3]	@ float
 9354 17da C7F86835 		str	r3, [r7, #1384]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 217


1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9355              		.loc 1 1255 0
 9356 17de 0023     		movs	r3, #0
 9357 17e0 87F88635 		strb	r3, [r7, #1414]
 9358 17e4 20E0     		b	.L365
 9359              	.L366:
1256:..\src/command_processing.c ****                         }
 9360              		.loc 1 1256 0 discriminator 3
 9361 17e6 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9362 17ea 07F21C43 		addw	r3, r7, #1052
 9363 17ee 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9364 17f2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9365 17f6 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9366 17fa 01FB03F3 		mul	r3, r1, r3
 9367 17fe 1846     		mov	r0, r3
 9368 1800 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9369 1804 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9370 1808 CB1A     		subs	r3, r1, r3
 9371 180a 0344     		add	r3, r3, r0
 9372 180c 013B     		subs	r3, r3, #1
 9373 180e 1344     		add	r3, r3, r2
 9374 1810 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9375 1814 07F5AD61 		add	r1, r7, #1384
 9376 1818 0A44     		add	r2, r2, r1
 9377 181a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9378 181c 1A70     		strb	r2, [r3]
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9379              		.loc 1 1255 0 discriminator 3
 9380 181e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9381 1822 0133     		adds	r3, r3, #1
 9382 1824 87F88635 		strb	r3, [r7, #1414]
 9383              	.L365:
1255:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9384              		.loc 1 1255 0 is_stmt 0 discriminator 1
 9385 1828 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9386 182c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9387 1830 9A42     		cmp	r2, r3
 9388 1832 D8D3     		bcc	.L366
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9389              		.loc 1 1253 0 is_stmt 1 discriminator 2
 9390 1834 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9391 1838 0133     		adds	r3, r3, #1
 9392 183a 87F88735 		strb	r3, [r7, #1415]
 9393              	.L364:
1253:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9394              		.loc 1 1253 0 is_stmt 0 discriminator 1
 9395 183e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9396 1842 07F55D72 		add	r2, r7, #884
 9397 1846 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9398 1848 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9399 184c 9A42     		cmp	r2, r3
 9400 184e BAD3     		bcc	.L367
1259:..\src/command_processing.c ****                 default:
 9401              		.loc 1 1259 0 is_stmt 1
 9402 1850 09E0     		b	.L368
 9403              	.L330:
1266:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 218


 9404              		.loc 1 1266 0
 9405 1852 BB1D     		adds	r3, r7, #6
 9406 1854 1B88     		ldrh	r3, [r3]
 9407 1856 1846     		mov	r0, r3
 9408 1858 FFF7FEFF 		bl	set_custom_param
 9409 185c 03E0     		b	.L368
 9410              	.L384:
 9411 185e 00BF     		.align	2
 9412              	.L383:
 9413 1860 00000000 		.word	g_rx
 9414              	.L373:
1261:..\src/command_processing.c ****             }
 9415              		.loc 1 1261 0
 9416 1864 00BF     		nop
 9417              	.L368:
1270:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9418              		.loc 1 1270 0
 9419 1866 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9420 186a 9BB2     		uxth	r3, r3
 9421 186c BA1D     		adds	r2, r7, #6
 9422 186e 1288     		ldrh	r2, [r2]
 9423 1870 9A42     		cmp	r2, r3
 9424 1872 11D0     		beq	.L369
1271:..\src/command_processing.c ****         }
 9425              		.loc 1 1271 0
 9426 1874 D7F88035 		ldr	r3, [r7, #1408]
 9427 1878 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9428 187c 5B01     		lsls	r3, r3, #5
 9429 187e 03F51273 		add	r3, r3, #584
 9430 1882 D7F88025 		ldr	r2, [r7, #1408]
 9431 1886 D018     		adds	r0, r2, r3
 9432 1888 D7F88035 		ldr	r3, [r7, #1408]
 9433 188c 03F5F873 		add	r3, r3, #496
 9434 1890 1022     		movs	r2, #16
 9435 1892 1946     		mov	r1, r3
 9436 1894 FFF7FEFF 		bl	memcpy
 9437              	.L369:
1275:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9438              		.loc 1 1275 0
 9439 1898 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9440 189c 07F57272 		add	r2, r7, #968
 9441 18a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9442 18a2 002B     		cmp	r3, #0
 9443 18a4 42D1     		bne	.L374
 9444              	.LBB22:
1276:..\src/command_processing.c ****             do {
 9445              		.loc 1 1276 0
 9446 18a6 0023     		movs	r3, #0
 9447 18a8 87F87F35 		strb	r3, [r7, #1407]
 9448 18ac FF23     		movs	r3, #255
 9449 18ae 87F87E35 		strb	r3, [r7, #1406]
 9450              	.L371:
1278:..\src/command_processing.c ****                 idx++;
 9451              		.loc 1 1278 0
 9452 18b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9453 18b6 07F57272 		add	r2, r7, #968
 9454 18ba D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 219


 9455 18bc 002B     		cmp	r3, #0
 9456 18be 04D1     		bne	.L370
1278:..\src/command_processing.c ****                 idx++;
 9457              		.loc 1 1278 0 is_stmt 0 discriminator 1
 9458 18c0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9459 18c4 0133     		adds	r3, r3, #1
 9460 18c6 87F87E35 		strb	r3, [r7, #1406]
 9461              	.L370:
1279:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9462              		.loc 1 1279 0 is_stmt 1
 9463 18ca 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9464 18ce 0133     		adds	r3, r3, #1
 9465 18d0 87F87F35 		strb	r3, [r7, #1407]
1280:..\src/command_processing.c ****             
 9466              		.loc 1 1280 0
 9467 18d4 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9468 18d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9469 18dc 9A42     		cmp	r2, r3
 9470 18de E8D9     		bls	.L371
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9471              		.loc 1 1282 0
 9472 18e0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9473 18e4 07F1D402 		add	r2, r7, #212
 9474 18e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9475 18ea 052B     		cmp	r3, #5
 9476 18ec 1BD0     		beq	.L372
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9477              		.loc 1 1282 0 is_stmt 0 discriminator 1
 9478 18ee 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9479 18f2 07F1D402 		add	r2, r7, #212
 9480 18f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9481 18f8 062B     		cmp	r3, #6
 9482 18fa 14D0     		beq	.L372
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9483              		.loc 1 1282 0 discriminator 2
 9484 18fc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9485 1900 07F1D402 		add	r2, r7, #212
 9486 1904 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9487 1906 082B     		cmp	r3, #8
 9488 1908 0DD0     		beq	.L372
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9489              		.loc 1 1282 0 discriminator 3
 9490 190a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9491 190e 07F1D402 		add	r2, r7, #212
 9492 1912 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9493 1914 092B     		cmp	r3, #9
 9494 1916 06D0     		beq	.L372
1282:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9495              		.loc 1 1282 0 discriminator 4
 9496 1918 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9497 191c 07F1D402 		add	r2, r7, #212
 9498 1920 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9499 1922 0A2B     		cmp	r3, #10
 9500 1924 02D1     		bne	.L374
 9501              	.L372:
1283:..\src/command_processing.c ****             }   
 9502              		.loc 1 1283 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 220


 9503 1926 044B     		ldr	r3, .L385
 9504 1928 0122     		movs	r2, #1
 9505 192a 1A70     		strb	r2, [r3]
 9506              	.L374:
 9507              	.LBE22:
 9508              		.loc 1 1287 0
 9509 192c 00BF     		nop
 9510 192e 07F5B167 		add	r7, r7, #1416
 9511              		.cfi_def_cfa_offset 16
 9512 1932 BD46     		mov	sp, r7
 9513              		.cfi_def_cfa_register 13
 9514              		@ sp needed
 9515 1934 B0BD     		pop	{r4, r5, r7, pc}
 9516              	.L386:
 9517 1936 00BF     		.align	2
 9518              	.L385:
 9519 1938 00000000 		.word	reset_PSoC_flag
 9520              		.cfi_endproc
 9521              	.LFE68:
 9522              		.size	manage_param_list, .-manage_param_list
 9523              		.global	__aeabi_fmul
 9524              		.global	__aeabi_f2iz
 9525              		.section	.text.set_custom_param,"ax",%progbits
 9526              		.align	2
 9527              		.global	set_custom_param
 9528              		.thumb
 9529              		.thumb_func
 9530              		.type	set_custom_param, %function
 9531              	set_custom_param:
 9532              	.LFB69:
1288:..\src/command_processing.c **** 
1289:..\src/command_processing.c **** //==============================================================================
1290:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1291:..\src/command_processing.c **** //==============================================================================
1292:..\src/command_processing.c **** 
1293:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9533              		.loc 1 1293 0
 9534              		.cfi_startproc
 9535              		@ args = 0, pretend = 0, frame = 24
 9536              		@ frame_needed = 1, uses_anonymous_args = 0
 9537 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9538              		.cfi_def_cfa_offset 20
 9539              		.cfi_offset 4, -20
 9540              		.cfi_offset 5, -16
 9541              		.cfi_offset 6, -12
 9542              		.cfi_offset 7, -8
 9543              		.cfi_offset 14, -4
 9544 0002 87B0     		sub	sp, sp, #28
 9545              		.cfi_def_cfa_offset 48
 9546 0004 00AF     		add	r7, sp, #0
 9547              		.cfi_def_cfa_register 7
 9548 0006 0346     		mov	r3, r0
 9549 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1294:..\src/command_processing.c **** 
1295:..\src/command_processing.c ****     uint8 CYDATA i, j;
1296:..\src/command_processing.c ****     uint8 aux_uchar;
1297:..\src/command_processing.c ****     float aux_float, aux_float2;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 221


1298:..\src/command_processing.c **** 
1299:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9550              		.loc 1 1299 0
 9551 000a 0023     		movs	r3, #0
 9552 000c 3B75     		strb	r3, [r7, #20]
1300:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9553              		.loc 1 1300 0
 9554 000e 0123     		movs	r3, #1
 9555 0010 FB74     		strb	r3, [r7, #19]
1301:..\src/command_processing.c ****     
1302:..\src/command_processing.c ****     switch(index){
 9556              		.loc 1 1302 0
 9557 0012 FB88     		ldrh	r3, [r7, #6]
 9558 0014 023B     		subs	r3, r3, #2
 9559 0016 492B     		cmp	r3, #73
 9560 0018 01F24C82 		bhi	.L482
 9561 001c 01A2     		adr	r2, .L390
 9562 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9563 0022 00BF     		.p2align 2
 9564              	.L390:
 9565 0024 4D010000 		.word	.L389+1
 9566 0028 7F030000 		.word	.L391+1
 9567 002c B5140000 		.word	.L482+1
 9568 0030 C5050000 		.word	.L392+1
 9569 0034 B5140000 		.word	.L482+1
 9570 0038 B5140000 		.word	.L482+1
 9571 003c 0F060000 		.word	.L393+1
 9572 0040 B5140000 		.word	.L482+1
 9573 0044 B5140000 		.word	.L482+1
 9574 0048 49070000 		.word	.L394+1
 9575 004c B5140000 		.word	.L482+1
 9576 0050 B5140000 		.word	.L482+1
 9577 0054 B5140000 		.word	.L482+1
 9578 0058 B5140000 		.word	.L482+1
 9579 005c B5140000 		.word	.L482+1
 9580 0060 B5140000 		.word	.L482+1
 9581 0064 B5140000 		.word	.L482+1
 9582 0068 B5140000 		.word	.L482+1
 9583 006c B5140000 		.word	.L482+1
 9584 0070 B5140000 		.word	.L482+1
 9585 0074 B5140000 		.word	.L482+1
 9586 0078 49080000 		.word	.L395+1
 9587 007c A7080000 		.word	.L396+1
 9588 0080 B5140000 		.word	.L482+1
 9589 0084 B5140000 		.word	.L482+1
 9590 0088 B5140000 		.word	.L482+1
 9591 008c E1080000 		.word	.L397+1
 9592 0090 B5140000 		.word	.L482+1
 9593 0094 B5140000 		.word	.L482+1
 9594 0098 5D0A0000 		.word	.L398+1
 9595 009c 090B0000 		.word	.L399+1
 9596 00a0 B5140000 		.word	.L482+1
 9597 00a4 B5140000 		.word	.L482+1
 9598 00a8 B5140000 		.word	.L482+1
 9599 00ac B5140000 		.word	.L482+1
 9600 00b0 B5140000 		.word	.L482+1
 9601 00b4 430B0000 		.word	.L400+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 222


 9602 00b8 B5140000 		.word	.L482+1
 9603 00bc B5140000 		.word	.L482+1
 9604 00c0 B5140000 		.word	.L482+1
 9605 00c4 B5140000 		.word	.L482+1
 9606 00c8 B5140000 		.word	.L482+1
 9607 00cc 630B0000 		.word	.L401+1
 9608 00d0 AB0D0000 		.word	.L402+1
 9609 00d4 B5140000 		.word	.L482+1
 9610 00d8 D90F0000 		.word	.L403+1
 9611 00dc B5140000 		.word	.L482+1
 9612 00e0 B5140000 		.word	.L482+1
 9613 00e4 21100000 		.word	.L404+1
 9614 00e8 B5140000 		.word	.L482+1
 9615 00ec B5140000 		.word	.L482+1
 9616 00f0 59110000 		.word	.L405+1
 9617 00f4 B5140000 		.word	.L482+1
 9618 00f8 B5140000 		.word	.L482+1
 9619 00fc B5140000 		.word	.L482+1
 9620 0100 B5140000 		.word	.L482+1
 9621 0104 B5140000 		.word	.L482+1
 9622 0108 B5140000 		.word	.L482+1
 9623 010c B5140000 		.word	.L482+1
 9624 0110 57120000 		.word	.L406+1
 9625 0114 B5140000 		.word	.L482+1
 9626 0118 B5140000 		.word	.L482+1
 9627 011c B5140000 		.word	.L482+1
 9628 0120 B5140000 		.word	.L482+1
 9629 0124 B5140000 		.word	.L482+1
 9630 0128 B5140000 		.word	.L482+1
 9631 012c B5140000 		.word	.L482+1
 9632 0130 B5140000 		.word	.L482+1
 9633 0134 B5140000 		.word	.L482+1
 9634 0138 B5140000 		.word	.L482+1
 9635 013c B5140000 		.word	.L482+1
 9636 0140 B5140000 		.word	.L482+1
 9637 0144 B5140000 		.word	.L482+1
 9638 0148 85120000 		.word	.L407+1
 9639              		.p2align 1
 9640              	.L389:
1303:..\src/command_processing.c ****         case 2:         // Position PID
1304:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9641              		.loc 1 1304 0
 9642 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9643 014e AB49     		ldr	r1, .L488
 9644 0150 1346     		mov	r3, r2
 9645 0152 DB00     		lsls	r3, r3, #3
 9646 0154 9B1A     		subs	r3, r3, r2
 9647 0156 1B01     		lsls	r3, r3, #4
 9648 0158 0B44     		add	r3, r3, r1
 9649 015a 03F20F13 		addw	r3, r3, #271
 9650 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9651 0160 032B     		cmp	r3, #3
 9652 0162 00F08680 		beq	.L408
1305:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9653              		.loc 1 1305 0
 9654 0166 A64B     		ldr	r3, .L488+4
 9655 0168 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 223


 9656 016a FB60     		str	r3, [r7, #12]	@ float
1306:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9657              		.loc 1 1306 0
 9658 016c 0023     		movs	r3, #0
 9659 016e BB75     		strb	r3, [r7, #22]
 9660 0170 0EE0     		b	.L409
 9661              	.L410:
1307:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9662              		.loc 1 1307 0 discriminator 3
 9663 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9664 0174 C3F10303 		rsb	r3, r3, #3
 9665 0178 07F10802 		add	r2, r7, #8
 9666 017c 1344     		add	r3, r3, r2
 9667 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9668 0180 07F10C01 		add	r1, r7, #12
 9669 0184 0A44     		add	r2, r2, r1
 9670 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9671 0188 1A70     		strb	r2, [r3]
1306:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9672              		.loc 1 1306 0 discriminator 3
 9673 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9674 018c 0133     		adds	r3, r3, #1
 9675 018e BB75     		strb	r3, [r7, #22]
 9676              	.L409:
1306:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9677              		.loc 1 1306 0 is_stmt 0 discriminator 1
 9678 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9679 0192 032B     		cmp	r3, #3
 9680 0194 EDD9     		bls	.L410
1308:..\src/command_processing.c ****                 }
1309:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9681              		.loc 1 1309 0 is_stmt 1
 9682 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9683 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9684 019a 4FF08F41 		mov	r1, #1199570944
 9685 019e 1846     		mov	r0, r3
 9686 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9687 01a4 0346     		mov	r3, r0
 9688 01a6 1846     		mov	r0, r3
 9689 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9690 01ac 0146     		mov	r1, r0
 9691 01ae 954A     		ldr	r2, .L488+8
 9692 01b0 2346     		mov	r3, r4
 9693 01b2 DB00     		lsls	r3, r3, #3
 9694 01b4 1B1B     		subs	r3, r3, r4
 9695 01b6 1B01     		lsls	r3, r3, #4
 9696 01b8 1344     		add	r3, r3, r2
 9697 01ba B033     		adds	r3, r3, #176
 9698 01bc 1960     		str	r1, [r3]
1310:..\src/command_processing.c ****                 
1311:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9699              		.loc 1 1311 0
 9700 01be 924B     		ldr	r3, .L488+12
 9701 01c0 1B68     		ldr	r3, [r3]	@ float
 9702 01c2 FB60     		str	r3, [r7, #12]	@ float
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9703              		.loc 1 1312 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 224


 9704 01c4 0023     		movs	r3, #0
 9705 01c6 BB75     		strb	r3, [r7, #22]
 9706 01c8 0EE0     		b	.L411
 9707              	.L412:
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9708              		.loc 1 1313 0 discriminator 3
 9709 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9710 01cc C3F10303 		rsb	r3, r3, #3
 9711 01d0 07F10802 		add	r2, r7, #8
 9712 01d4 1344     		add	r3, r3, r2
 9713 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9714 01d8 07F10C01 		add	r1, r7, #12
 9715 01dc 0A44     		add	r2, r2, r1
 9716 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9717 01e0 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9718              		.loc 1 1312 0 discriminator 3
 9719 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9720 01e4 0133     		adds	r3, r3, #1
 9721 01e6 BB75     		strb	r3, [r7, #22]
 9722              	.L411:
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9723              		.loc 1 1312 0 is_stmt 0 discriminator 1
 9724 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9725 01ea 032B     		cmp	r3, #3
 9726 01ec EDD9     		bls	.L412
1314:..\src/command_processing.c ****                 }
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9727              		.loc 1 1315 0 is_stmt 1
 9728 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9729 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9730 01f2 4FF08F41 		mov	r1, #1199570944
 9731 01f6 1846     		mov	r0, r3
 9732 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9733 01fc 0346     		mov	r3, r0
 9734 01fe 1846     		mov	r0, r3
 9735 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9736 0204 0146     		mov	r1, r0
 9737 0206 7F4A     		ldr	r2, .L488+8
 9738 0208 2346     		mov	r3, r4
 9739 020a DB00     		lsls	r3, r3, #3
 9740 020c 1B1B     		subs	r3, r3, r4
 9741 020e 1B01     		lsls	r3, r3, #4
 9742 0210 1344     		add	r3, r3, r2
 9743 0212 B433     		adds	r3, r3, #180
 9744 0214 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****                 
1317:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9745              		.loc 1 1317 0
 9746 0216 7D4B     		ldr	r3, .L488+16
 9747 0218 1B68     		ldr	r3, [r3]	@ float
 9748 021a FB60     		str	r3, [r7, #12]	@ float
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9749              		.loc 1 1318 0
 9750 021c 0023     		movs	r3, #0
 9751 021e BB75     		strb	r3, [r7, #22]
 9752 0220 0EE0     		b	.L413
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 225


 9753              	.L414:
1319:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9754              		.loc 1 1319 0 discriminator 3
 9755 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9756 0224 C3F10303 		rsb	r3, r3, #3
 9757 0228 07F10802 		add	r2, r7, #8
 9758 022c 1344     		add	r3, r3, r2
 9759 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9760 0230 07F10C01 		add	r1, r7, #12
 9761 0234 0A44     		add	r2, r2, r1
 9762 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9763 0238 1A70     		strb	r2, [r3]
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9764              		.loc 1 1318 0 discriminator 3
 9765 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9766 023c 0133     		adds	r3, r3, #1
 9767 023e BB75     		strb	r3, [r7, #22]
 9768              	.L413:
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9769              		.loc 1 1318 0 is_stmt 0 discriminator 1
 9770 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9771 0242 032B     		cmp	r3, #3
 9772 0244 EDD9     		bls	.L414
1320:..\src/command_processing.c ****                 }
1321:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9773              		.loc 1 1321 0 is_stmt 1
 9774 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9775 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9776 024a 4FF08F41 		mov	r1, #1199570944
 9777 024e 1846     		mov	r0, r3
 9778 0250 FFF7FEFF 		bl	__aeabi_fmul
 9779 0254 0346     		mov	r3, r0
 9780 0256 1846     		mov	r0, r3
 9781 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9782 025c 0146     		mov	r1, r0
 9783 025e 694A     		ldr	r2, .L488+8
 9784 0260 2346     		mov	r3, r4
 9785 0262 DB00     		lsls	r3, r3, #3
 9786 0264 1B1B     		subs	r3, r3, r4
 9787 0266 1B01     		lsls	r3, r3, #4
 9788 0268 1344     		add	r3, r3, r2
 9789 026a B833     		adds	r3, r3, #184
 9790 026c 1960     		str	r1, [r3]
1322:..\src/command_processing.c ****             }
1323:..\src/command_processing.c ****             else {
1324:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1325:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1326:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1327:..\src/command_processing.c ****                 }
1328:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1329:..\src/command_processing.c ****                 
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1335:..\src/command_processing.c ****                 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 226


1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             break;
 9791              		.loc 1 1342 0
 9792 026e 01F02CB9 		b	.L422
 9793              	.L408:
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9794              		.loc 1 1324 0
 9795 0272 634B     		ldr	r3, .L488+4
 9796 0274 1B68     		ldr	r3, [r3]	@ float
 9797 0276 FB60     		str	r3, [r7, #12]	@ float
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9798              		.loc 1 1325 0
 9799 0278 0023     		movs	r3, #0
 9800 027a BB75     		strb	r3, [r7, #22]
 9801 027c 0EE0     		b	.L416
 9802              	.L417:
1326:..\src/command_processing.c ****                 }
 9803              		.loc 1 1326 0 discriminator 3
 9804 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9805 0280 C3F10303 		rsb	r3, r3, #3
 9806 0284 07F10802 		add	r2, r7, #8
 9807 0288 1344     		add	r3, r3, r2
 9808 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9809 028c 07F10C01 		add	r1, r7, #12
 9810 0290 0A44     		add	r2, r2, r1
 9811 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9812 0294 1A70     		strb	r2, [r3]
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9813              		.loc 1 1325 0 discriminator 3
 9814 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9815 0298 0133     		adds	r3, r3, #1
 9816 029a BB75     		strb	r3, [r7, #22]
 9817              	.L416:
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9818              		.loc 1 1325 0 is_stmt 0 discriminator 1
 9819 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9820 029e 032B     		cmp	r3, #3
 9821 02a0 EDD9     		bls	.L417
1328:..\src/command_processing.c ****                 
 9822              		.loc 1 1328 0 is_stmt 1
 9823 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9824 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9825 02a6 4FF08F41 		mov	r1, #1199570944
 9826 02aa 1846     		mov	r0, r3
 9827 02ac FFF7FEFF 		bl	__aeabi_fmul
 9828 02b0 0346     		mov	r3, r0
 9829 02b2 1846     		mov	r0, r3
 9830 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9831 02b8 0146     		mov	r1, r0
 9832 02ba 524A     		ldr	r2, .L488+8
 9833 02bc 2346     		mov	r3, r4
 9834 02be DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 227


 9835 02c0 1B1B     		subs	r3, r3, r4
 9836 02c2 1B01     		lsls	r3, r3, #4
 9837 02c4 1344     		add	r3, r3, r2
 9838 02c6 C833     		adds	r3, r3, #200
 9839 02c8 1960     		str	r1, [r3]
1330:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9840              		.loc 1 1330 0
 9841 02ca 4F4B     		ldr	r3, .L488+12
 9842 02cc 1B68     		ldr	r3, [r3]	@ float
 9843 02ce FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9844              		.loc 1 1331 0
 9845 02d0 0023     		movs	r3, #0
 9846 02d2 BB75     		strb	r3, [r7, #22]
 9847 02d4 0EE0     		b	.L418
 9848              	.L419:
1332:..\src/command_processing.c ****                 }
 9849              		.loc 1 1332 0 discriminator 3
 9850 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9851 02d8 C3F10303 		rsb	r3, r3, #3
 9852 02dc 07F10802 		add	r2, r7, #8
 9853 02e0 1344     		add	r3, r3, r2
 9854 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9855 02e4 07F10C01 		add	r1, r7, #12
 9856 02e8 0A44     		add	r2, r2, r1
 9857 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9858 02ec 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9859              		.loc 1 1331 0 discriminator 3
 9860 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9861 02f0 0133     		adds	r3, r3, #1
 9862 02f2 BB75     		strb	r3, [r7, #22]
 9863              	.L418:
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9864              		.loc 1 1331 0 is_stmt 0 discriminator 1
 9865 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9866 02f6 032B     		cmp	r3, #3
 9867 02f8 EDD9     		bls	.L419
1334:..\src/command_processing.c ****                 
 9868              		.loc 1 1334 0 is_stmt 1
 9869 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9870 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9871 02fe 4FF08F41 		mov	r1, #1199570944
 9872 0302 1846     		mov	r0, r3
 9873 0304 FFF7FEFF 		bl	__aeabi_fmul
 9874 0308 0346     		mov	r3, r0
 9875 030a 1846     		mov	r0, r3
 9876 030c FFF7FEFF 		bl	__aeabi_f2iz
 9877 0310 0146     		mov	r1, r0
 9878 0312 3C4A     		ldr	r2, .L488+8
 9879 0314 2346     		mov	r3, r4
 9880 0316 DB00     		lsls	r3, r3, #3
 9881 0318 1B1B     		subs	r3, r3, r4
 9882 031a 1B01     		lsls	r3, r3, #4
 9883 031c 1344     		add	r3, r3, r2
 9884 031e CC33     		adds	r3, r3, #204
 9885 0320 1960     		str	r1, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 228


1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9886              		.loc 1 1336 0
 9887 0322 3A4B     		ldr	r3, .L488+16
 9888 0324 1B68     		ldr	r3, [r3]	@ float
 9889 0326 FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9890              		.loc 1 1337 0
 9891 0328 0023     		movs	r3, #0
 9892 032a BB75     		strb	r3, [r7, #22]
 9893 032c 0EE0     		b	.L420
 9894              	.L421:
1338:..\src/command_processing.c ****                 }
 9895              		.loc 1 1338 0 discriminator 3
 9896 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9897 0330 C3F10303 		rsb	r3, r3, #3
 9898 0334 07F10802 		add	r2, r7, #8
 9899 0338 1344     		add	r3, r3, r2
 9900 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9901 033c 07F10C01 		add	r1, r7, #12
 9902 0340 0A44     		add	r2, r2, r1
 9903 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9904 0344 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9905              		.loc 1 1337 0 discriminator 3
 9906 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9907 0348 0133     		adds	r3, r3, #1
 9908 034a BB75     		strb	r3, [r7, #22]
 9909              	.L420:
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9910              		.loc 1 1337 0 is_stmt 0 discriminator 1
 9911 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9912 034e 032B     		cmp	r3, #3
 9913 0350 EDD9     		bls	.L421
1340:..\src/command_processing.c ****             }
 9914              		.loc 1 1340 0 is_stmt 1
 9915 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9916 0354 BB68     		ldr	r3, [r7, #8]	@ float
 9917 0356 4FF08F41 		mov	r1, #1199570944
 9918 035a 1846     		mov	r0, r3
 9919 035c FFF7FEFF 		bl	__aeabi_fmul
 9920 0360 0346     		mov	r3, r0
 9921 0362 1846     		mov	r0, r3
 9922 0364 FFF7FEFF 		bl	__aeabi_f2iz
 9923 0368 0146     		mov	r1, r0
 9924 036a 264A     		ldr	r2, .L488+8
 9925 036c 2346     		mov	r3, r4
 9926 036e DB00     		lsls	r3, r3, #3
 9927 0370 1B1B     		subs	r3, r3, r4
 9928 0372 1B01     		lsls	r3, r3, #4
 9929 0374 1344     		add	r3, r3, r2
 9930 0376 D033     		adds	r3, r3, #208
 9931 0378 1960     		str	r1, [r3]
 9932              		.loc 1 1342 0
 9933 037a 01F0A6B8 		b	.L422
 9934              	.L391:
1343:..\src/command_processing.c ****             
1344:..\src/command_processing.c ****         case 3:         //Current PID
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 229


1345:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9935              		.loc 1 1345 0
 9936 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9937 0380 1E49     		ldr	r1, .L488
 9938 0382 1346     		mov	r3, r2
 9939 0384 DB00     		lsls	r3, r3, #3
 9940 0386 9B1A     		subs	r3, r3, r2
 9941 0388 1B01     		lsls	r3, r3, #4
 9942 038a 0B44     		add	r3, r3, r1
 9943 038c 03F20F13 		addw	r3, r3, #271
 9944 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9945 0392 032B     		cmp	r3, #3
 9946 0394 00F09080 		beq	.L423
1346:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9947              		.loc 1 1346 0
 9948 0398 194B     		ldr	r3, .L488+4
 9949 039a 1B68     		ldr	r3, [r3]	@ float
 9950 039c FB60     		str	r3, [r7, #12]	@ float
1347:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9951              		.loc 1 1347 0
 9952 039e 0023     		movs	r3, #0
 9953 03a0 BB75     		strb	r3, [r7, #22]
 9954 03a2 0EE0     		b	.L424
 9955              	.L425:
1348:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9956              		.loc 1 1348 0 discriminator 3
 9957 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9958 03a6 C3F10303 		rsb	r3, r3, #3
 9959 03aa 07F10802 		add	r2, r7, #8
 9960 03ae 1344     		add	r3, r3, r2
 9961 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9962 03b2 07F10C01 		add	r1, r7, #12
 9963 03b6 0A44     		add	r2, r2, r1
 9964 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9965 03ba 1A70     		strb	r2, [r3]
1347:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9966              		.loc 1 1347 0 discriminator 3
 9967 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9968 03be 0133     		adds	r3, r3, #1
 9969 03c0 BB75     		strb	r3, [r7, #22]
 9970              	.L424:
1347:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9971              		.loc 1 1347 0 is_stmt 0 discriminator 1
 9972 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9973 03c4 032B     		cmp	r3, #3
 9974 03c6 EDD9     		bls	.L425
1349:..\src/command_processing.c ****                 }
1350:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9975              		.loc 1 1350 0 is_stmt 1
 9976 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9977 03ca BB68     		ldr	r3, [r7, #8]	@ float
 9978 03cc 4FF08F41 		mov	r1, #1199570944
 9979 03d0 1846     		mov	r0, r3
 9980 03d2 FFF7FEFF 		bl	__aeabi_fmul
 9981 03d6 0346     		mov	r3, r0
 9982 03d8 1846     		mov	r0, r3
 9983 03da FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 230


 9984 03de 0146     		mov	r1, r0
 9985 03e0 084A     		ldr	r2, .L488+8
 9986 03e2 2346     		mov	r3, r4
 9987 03e4 DB00     		lsls	r3, r3, #3
 9988 03e6 1B1B     		subs	r3, r3, r4
 9989 03e8 1B01     		lsls	r3, r3, #4
 9990 03ea 1344     		add	r3, r3, r2
 9991 03ec BC33     		adds	r3, r3, #188
 9992 03ee 1960     		str	r1, [r3]
1351:..\src/command_processing.c ****                 
1352:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9993              		.loc 1 1352 0
 9994 03f0 054B     		ldr	r3, .L488+12
 9995 03f2 1B68     		ldr	r3, [r3]	@ float
 9996 03f4 FB60     		str	r3, [r7, #12]	@ float
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9997              		.loc 1 1353 0
 9998 03f6 0023     		movs	r3, #0
 9999 03f8 BB75     		strb	r3, [r7, #22]
 10000 03fa 18E0     		b	.L426
 10001              	.L489:
 10002              		.align	2
 10003              	.L488:
 10004 03fc 00000000 		.word	c_mem
 10005 0400 03000000 		.word	g_rx+3
 10006 0404 00000000 		.word	g_mem
 10007 0408 07000000 		.word	g_rx+7
 10008 040c 0B000000 		.word	g_rx+11
 10009              	.L427:
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10010              		.loc 1 1354 0 discriminator 3
 10011 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10012 0412 C3F10303 		rsb	r3, r3, #3
 10013 0416 07F10802 		add	r2, r7, #8
 10014 041a 1344     		add	r3, r3, r2
 10015 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10016 041e 07F10C01 		add	r1, r7, #12
 10017 0422 0A44     		add	r2, r2, r1
 10018 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10019 0426 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10020              		.loc 1 1353 0 discriminator 3
 10021 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10022 042a 0133     		adds	r3, r3, #1
 10023 042c BB75     		strb	r3, [r7, #22]
 10024              	.L426:
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10025              		.loc 1 1353 0 is_stmt 0 discriminator 1
 10026 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10027 0430 032B     		cmp	r3, #3
 10028 0432 EDD9     		bls	.L427
1355:..\src/command_processing.c ****                 }
1356:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10029              		.loc 1 1356 0 is_stmt 1
 10030 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10031 0436 BB68     		ldr	r3, [r7, #8]	@ float
 10032 0438 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 231


 10033 043c 1846     		mov	r0, r3
 10034 043e FFF7FEFF 		bl	__aeabi_fmul
 10035 0442 0346     		mov	r3, r0
 10036 0444 1846     		mov	r0, r3
 10037 0446 FFF7FEFF 		bl	__aeabi_f2iz
 10038 044a 0146     		mov	r1, r0
 10039 044c B64A     		ldr	r2, .L490
 10040 044e 2346     		mov	r3, r4
 10041 0450 DB00     		lsls	r3, r3, #3
 10042 0452 1B1B     		subs	r3, r3, r4
 10043 0454 1B01     		lsls	r3, r3, #4
 10044 0456 1344     		add	r3, r3, r2
 10045 0458 C033     		adds	r3, r3, #192
 10046 045a 1960     		str	r1, [r3]
1357:..\src/command_processing.c ****                 
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10047              		.loc 1 1358 0
 10048 045c B34B     		ldr	r3, .L490+4
 10049 045e 1B68     		ldr	r3, [r3]	@ float
 10050 0460 FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10051              		.loc 1 1359 0
 10052 0462 0023     		movs	r3, #0
 10053 0464 BB75     		strb	r3, [r7, #22]
 10054 0466 0EE0     		b	.L428
 10055              	.L429:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10056              		.loc 1 1360 0 discriminator 3
 10057 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10058 046a C3F10303 		rsb	r3, r3, #3
 10059 046e 07F10802 		add	r2, r7, #8
 10060 0472 1344     		add	r3, r3, r2
 10061 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10062 0476 07F10C01 		add	r1, r7, #12
 10063 047a 0A44     		add	r2, r2, r1
 10064 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10065 047e 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10066              		.loc 1 1359 0 discriminator 3
 10067 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10068 0482 0133     		adds	r3, r3, #1
 10069 0484 BB75     		strb	r3, [r7, #22]
 10070              	.L428:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10071              		.loc 1 1359 0 is_stmt 0 discriminator 1
 10072 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10073 0488 032B     		cmp	r3, #3
 10074 048a EDD9     		bls	.L429
1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10075              		.loc 1 1362 0 is_stmt 1
 10076 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10077 048e BB68     		ldr	r3, [r7, #8]	@ float
 10078 0490 4FF08F41 		mov	r1, #1199570944
 10079 0494 1846     		mov	r0, r3
 10080 0496 FFF7FEFF 		bl	__aeabi_fmul
 10081 049a 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 232


 10082 049c 1846     		mov	r0, r3
 10083 049e FFF7FEFF 		bl	__aeabi_f2iz
 10084 04a2 0146     		mov	r1, r0
 10085 04a4 A04A     		ldr	r2, .L490
 10086 04a6 2346     		mov	r3, r4
 10087 04a8 DB00     		lsls	r3, r3, #3
 10088 04aa 1B1B     		subs	r3, r3, r4
 10089 04ac 1B01     		lsls	r3, r3, #4
 10090 04ae 1344     		add	r3, r3, r2
 10091 04b0 C433     		adds	r3, r3, #196
 10092 04b2 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****             }
1364:..\src/command_processing.c ****             else {
1365:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1366:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1367:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1368:..\src/command_processing.c ****                 }
1369:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1370:..\src/command_processing.c ****                 
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****             }            
1383:..\src/command_processing.c ****             break;  
 10093              		.loc 1 1383 0
 10094 04b4 01F009B8 		b	.L422
 10095              	.L423:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10096              		.loc 1 1365 0
 10097 04b8 9D4B     		ldr	r3, .L490+8
 10098 04ba 1B68     		ldr	r3, [r3]	@ float
 10099 04bc FB60     		str	r3, [r7, #12]	@ float
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10100              		.loc 1 1366 0
 10101 04be 0023     		movs	r3, #0
 10102 04c0 BB75     		strb	r3, [r7, #22]
 10103 04c2 0EE0     		b	.L431
 10104              	.L432:
1367:..\src/command_processing.c ****                 }
 10105              		.loc 1 1367 0 discriminator 3
 10106 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10107 04c6 C3F10303 		rsb	r3, r3, #3
 10108 04ca 07F10802 		add	r2, r7, #8
 10109 04ce 1344     		add	r3, r3, r2
 10110 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10111 04d2 07F10C01 		add	r1, r7, #12
 10112 04d6 0A44     		add	r2, r2, r1
 10113 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10114 04da 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 233


1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10115              		.loc 1 1366 0 discriminator 3
 10116 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10117 04de 0133     		adds	r3, r3, #1
 10118 04e0 BB75     		strb	r3, [r7, #22]
 10119              	.L431:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10120              		.loc 1 1366 0 is_stmt 0 discriminator 1
 10121 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10122 04e4 032B     		cmp	r3, #3
 10123 04e6 EDD9     		bls	.L432
1369:..\src/command_processing.c ****                 
 10124              		.loc 1 1369 0 is_stmt 1
 10125 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10126 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10127 04ec 4FF08F41 		mov	r1, #1199570944
 10128 04f0 1846     		mov	r0, r3
 10129 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10130 04f6 0346     		mov	r3, r0
 10131 04f8 1846     		mov	r0, r3
 10132 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10133 04fe 0146     		mov	r1, r0
 10134 0500 894A     		ldr	r2, .L490
 10135 0502 2346     		mov	r3, r4
 10136 0504 DB00     		lsls	r3, r3, #3
 10137 0506 1B1B     		subs	r3, r3, r4
 10138 0508 1B01     		lsls	r3, r3, #4
 10139 050a 1344     		add	r3, r3, r2
 10140 050c D433     		adds	r3, r3, #212
 10141 050e 1960     		str	r1, [r3]
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10142              		.loc 1 1371 0
 10143 0510 884B     		ldr	r3, .L490+12
 10144 0512 1B68     		ldr	r3, [r3]	@ float
 10145 0514 FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10146              		.loc 1 1372 0
 10147 0516 0023     		movs	r3, #0
 10148 0518 BB75     		strb	r3, [r7, #22]
 10149 051a 0EE0     		b	.L433
 10150              	.L434:
1373:..\src/command_processing.c ****                 }
 10151              		.loc 1 1373 0 discriminator 3
 10152 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10153 051e C3F10303 		rsb	r3, r3, #3
 10154 0522 07F10802 		add	r2, r7, #8
 10155 0526 1344     		add	r3, r3, r2
 10156 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10157 052a 07F10C01 		add	r1, r7, #12
 10158 052e 0A44     		add	r2, r2, r1
 10159 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10160 0532 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10161              		.loc 1 1372 0 discriminator 3
 10162 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10163 0536 0133     		adds	r3, r3, #1
 10164 0538 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 234


 10165              	.L433:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10166              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10167 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10168 053c 032B     		cmp	r3, #3
 10169 053e EDD9     		bls	.L434
1375:..\src/command_processing.c ****                 
 10170              		.loc 1 1375 0 is_stmt 1
 10171 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10172 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10173 0544 4FF08F41 		mov	r1, #1199570944
 10174 0548 1846     		mov	r0, r3
 10175 054a FFF7FEFF 		bl	__aeabi_fmul
 10176 054e 0346     		mov	r3, r0
 10177 0550 1846     		mov	r0, r3
 10178 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10179 0556 0146     		mov	r1, r0
 10180 0558 734A     		ldr	r2, .L490
 10181 055a 2346     		mov	r3, r4
 10182 055c DB00     		lsls	r3, r3, #3
 10183 055e 1B1B     		subs	r3, r3, r4
 10184 0560 1B01     		lsls	r3, r3, #4
 10185 0562 1344     		add	r3, r3, r2
 10186 0564 D833     		adds	r3, r3, #216
 10187 0566 1960     		str	r1, [r3]
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10188              		.loc 1 1377 0
 10189 0568 704B     		ldr	r3, .L490+4
 10190 056a 1B68     		ldr	r3, [r3]	@ float
 10191 056c FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10192              		.loc 1 1378 0
 10193 056e 0023     		movs	r3, #0
 10194 0570 BB75     		strb	r3, [r7, #22]
 10195 0572 0EE0     		b	.L435
 10196              	.L436:
1379:..\src/command_processing.c ****                 }
 10197              		.loc 1 1379 0 discriminator 3
 10198 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10199 0576 C3F10303 		rsb	r3, r3, #3
 10200 057a 07F10802 		add	r2, r7, #8
 10201 057e 1344     		add	r3, r3, r2
 10202 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10203 0582 07F10C01 		add	r1, r7, #12
 10204 0586 0A44     		add	r2, r2, r1
 10205 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10206 058a 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10207              		.loc 1 1378 0 discriminator 3
 10208 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10209 058e 0133     		adds	r3, r3, #1
 10210 0590 BB75     		strb	r3, [r7, #22]
 10211              	.L435:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10212              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10213 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10214 0594 032B     		cmp	r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 235


 10215 0596 EDD9     		bls	.L436
1381:..\src/command_processing.c ****             }            
 10216              		.loc 1 1381 0 is_stmt 1
 10217 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10218 059a BB68     		ldr	r3, [r7, #8]	@ float
 10219 059c 4FF08F41 		mov	r1, #1199570944
 10220 05a0 1846     		mov	r0, r3
 10221 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10222 05a6 0346     		mov	r3, r0
 10223 05a8 1846     		mov	r0, r3
 10224 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10225 05ae 0146     		mov	r1, r0
 10226 05b0 5D4A     		ldr	r2, .L490
 10227 05b2 2346     		mov	r3, r4
 10228 05b4 DB00     		lsls	r3, r3, #3
 10229 05b6 1B1B     		subs	r3, r3, r4
 10230 05b8 1B01     		lsls	r3, r3, #4
 10231 05ba 1344     		add	r3, r3, r2
 10232 05bc DC33     		adds	r3, r3, #220
 10233 05be 1960     		str	r1, [r3]
 10234              		.loc 1 1383 0
 10235 05c0 00F083BF 		b	.L422
 10236              	.L392:
1384:..\src/command_processing.c ****             
1385:..\src/command_processing.c ****         case 5:         //Input mode
1386:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10237              		.loc 1 1386 0
 10238 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10239 05c6 5C4B     		ldr	r3, .L490+16
 10240 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10241 05ca 5749     		ldr	r1, .L490
 10242 05cc 1346     		mov	r3, r2
 10243 05ce DB00     		lsls	r3, r3, #3
 10244 05d0 9B1A     		subs	r3, r3, r2
 10245 05d2 1B01     		lsls	r3, r3, #4
 10246 05d4 0B44     		add	r3, r3, r1
 10247 05d6 03F58773 		add	r3, r3, #270
 10248 05da 0246     		mov	r2, r0
 10249 05dc 1A70     		strb	r2, [r3]
1387:..\src/command_processing.c ****             
1388:..\src/command_processing.c ****             // Hold the actual position
1389:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10250              		.loc 1 1389 0
 10251 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10252 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10253 05e2 5148     		ldr	r0, .L490
 10254 05e4 1346     		mov	r3, r2
 10255 05e6 DB00     		lsls	r3, r3, #3
 10256 05e8 9B1A     		subs	r3, r3, r2
 10257 05ea 1B01     		lsls	r3, r3, #4
 10258 05ec 0344     		add	r3, r3, r0
 10259 05ee 03F58873 		add	r3, r3, #272
 10260 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10261 05f4 1846     		mov	r0, r3
 10262 05f6 514A     		ldr	r2, .L490+20
 10263 05f8 3423     		movs	r3, #52
 10264 05fa 03FB00F3 		mul	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 236


 10265 05fe 1344     		add	r3, r3, r2
 10266 0600 1A68     		ldr	r2, [r3]
 10267 0602 4F48     		ldr	r0, .L490+24
 10268 0604 0B01     		lsls	r3, r1, #4
 10269 0606 0344     		add	r3, r3, r0
 10270 0608 1A60     		str	r2, [r3]
1390:..\src/command_processing.c ****             break;   
 10271              		.loc 1 1390 0
 10272 060a 00F05EBF 		b	.L422
 10273              	.L393:
1391:..\src/command_processing.c **** 
1392:..\src/command_processing.c ****         case 8:         //Measurement Offset
1393:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10274              		.loc 1 1393 0
 10275 060e 0023     		movs	r3, #0
 10276 0610 FB75     		strb	r3, [r7, #23]
 10277 0612 7EE0     		b	.L437
 10278              	.L438:
1394:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10279              		.loc 1 1394 0 discriminator 3
 10280 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10281 0616 4449     		ldr	r1, .L490
 10282 0618 1346     		mov	r3, r2
 10283 061a DB00     		lsls	r3, r3, #3
 10284 061c 9B1A     		subs	r3, r3, r2
 10285 061e 1B01     		lsls	r3, r3, #4
 10286 0620 0B44     		add	r3, r3, r1
 10287 0622 03F58873 		add	r3, r3, #272
 10288 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10289 0628 1C46     		mov	r4, r3
 10290 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10291 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10292 062e 5B00     		lsls	r3, r3, #1
 10293 0630 0333     		adds	r3, r3, #3
 10294 0632 4149     		ldr	r1, .L490+16
 10295 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10296 0636 1B02     		lsls	r3, r3, #8
 10297 0638 19B2     		sxth	r1, r3
 10298 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10299 063c 0233     		adds	r3, r3, #2
 10300 063e 5B00     		lsls	r3, r3, #1
 10301 0640 3D48     		ldr	r0, .L490+16
 10302 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10303 0644 1BB2     		sxth	r3, r3
 10304 0646 0B43     		orrs	r3, r3, r1
 10305 0648 1BB2     		sxth	r3, r3
 10306 064a 1846     		mov	r0, r3
 10307 064c 3649     		ldr	r1, .L490
 10308 064e 2346     		mov	r3, r4
 10309 0650 5B00     		lsls	r3, r3, #1
 10310 0652 2344     		add	r3, r3, r4
 10311 0654 9B00     		lsls	r3, r3, #2
 10312 0656 1344     		add	r3, r3, r2
 10313 0658 6633     		adds	r3, r3, #102
 10314 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1395:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10315              		.loc 1 1395 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 237


 10316 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10317 0660 3149     		ldr	r1, .L490
 10318 0662 1346     		mov	r3, r2
 10319 0664 DB00     		lsls	r3, r3, #3
 10320 0666 9B1A     		subs	r3, r3, r2
 10321 0668 1B01     		lsls	r3, r3, #4
 10322 066a 0B44     		add	r3, r3, r1
 10323 066c 03F58873 		add	r3, r3, #272
 10324 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10325 0672 1D46     		mov	r5, r3
 10326 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10327 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10328 0678 2B48     		ldr	r0, .L490
 10329 067a 1346     		mov	r3, r2
 10330 067c DB00     		lsls	r3, r3, #3
 10331 067e 9B1A     		subs	r3, r3, r2
 10332 0680 1B01     		lsls	r3, r3, #4
 10333 0682 0344     		add	r3, r3, r0
 10334 0684 03F58873 		add	r3, r3, #272
 10335 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10336 068a 1C46     		mov	r4, r3
 10337 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10338 068e 2648     		ldr	r0, .L490
 10339 0690 2346     		mov	r3, r4
 10340 0692 5B00     		lsls	r3, r3, #1
 10341 0694 2344     		add	r3, r3, r4
 10342 0696 9B00     		lsls	r3, r3, #2
 10343 0698 1344     		add	r3, r3, r2
 10344 069a 6633     		adds	r3, r3, #102
 10345 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10346 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10347 06a2 214C     		ldr	r4, .L490
 10348 06a4 1346     		mov	r3, r2
 10349 06a6 DB00     		lsls	r3, r3, #3
 10350 06a8 9B1A     		subs	r3, r3, r2
 10351 06aa 1B01     		lsls	r3, r3, #4
 10352 06ac 2344     		add	r3, r3, r4
 10353 06ae 03F58873 		add	r3, r3, #272
 10354 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10355 06b4 1E46     		mov	r6, r3
 10356 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10357 06b8 1B4C     		ldr	r4, .L490
 10358 06ba 3346     		mov	r3, r6
 10359 06bc 5B00     		lsls	r3, r3, #1
 10360 06be 3344     		add	r3, r3, r6
 10361 06c0 1B01     		lsls	r3, r3, #4
 10362 06c2 2344     		add	r3, r3, r4
 10363 06c4 1344     		add	r3, r3, r2
 10364 06c6 03F29513 		addw	r3, r3, #405
 10365 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10366 06cc 00FA03F2 		lsl	r2, r0, r3
 10367 06d0 1548     		ldr	r0, .L490
 10368 06d2 2B46     		mov	r3, r5
 10369 06d4 5B00     		lsls	r3, r3, #1
 10370 06d6 2B44     		add	r3, r3, r5
 10371 06d8 9B00     		lsls	r3, r3, #2
 10372 06da 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 238


 10373 06dc 6633     		adds	r3, r3, #102
 10374 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1396:..\src/command_processing.c **** 
1397:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10375              		.loc 1 1397 0 discriminator 3
 10376 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10377 06e4 1049     		ldr	r1, .L490
 10378 06e6 1346     		mov	r3, r2
 10379 06e8 DB00     		lsls	r3, r3, #3
 10380 06ea 9B1A     		subs	r3, r3, r2
 10381 06ec 1B01     		lsls	r3, r3, #4
 10382 06ee 0B44     		add	r3, r3, r1
 10383 06f0 03F58873 		add	r3, r3, #272
 10384 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10385 06f6 1846     		mov	r0, r3
 10386 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10387 06fa 1049     		ldr	r1, .L490+20
 10388 06fc 3422     		movs	r2, #52
 10389 06fe 02FB00F2 		mul	r2, r2, r0
 10390 0702 0A44     		add	r2, r2, r1
 10391 0704 1344     		add	r3, r3, r2
 10392 0706 1833     		adds	r3, r3, #24
 10393 0708 0022     		movs	r2, #0
 10394 070a 1A70     		strb	r2, [r3]
1393:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10395              		.loc 1 1393 0 discriminator 3
 10396 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10397 070e 0133     		adds	r3, r3, #1
 10398 0710 FB75     		strb	r3, [r7, #23]
 10399              	.L437:
1393:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10400              		.loc 1 1393 0 is_stmt 0 discriminator 1
 10401 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10402 0714 022B     		cmp	r3, #2
 10403 0716 7FF67DAF 		bls	.L438
1398:..\src/command_processing.c ****             }
1399:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10404              		.loc 1 1399 0 is_stmt 1
 10405 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10406 071c 094A     		ldr	r2, .L490+28
 10407 071e 0121     		movs	r1, #1
 10408 0720 D154     		strb	r1, [r2, r3]
1400:..\src/command_processing.c ****             break;
 10409              		.loc 1 1400 0
 10410 0722 00F0D2BE 		b	.L422
 10411              	.L491:
 10412 0726 00BF     		.align	2
 10413              	.L490:
 10414 0728 00000000 		.word	g_mem
 10415 072c 0B000000 		.word	g_rx+11
 10416 0730 03000000 		.word	g_rx+3
 10417 0734 07000000 		.word	g_rx+7
 10418 0738 00000000 		.word	g_rx
 10419 073c 00000000 		.word	g_meas
 10420 0740 00000000 		.word	g_refNew
 10421 0744 00000000 		.word	reset_last_value_flag
 10422              	.L394:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 239


1401:..\src/command_processing.c ****     
1402:..\src/command_processing.c ****         case 11:        //Position limits
1403:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10423              		.loc 1 1403 0
 10424 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10425 074a C14B     		ldr	r3, .L492
 10426 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10427 074e 1906     		lsls	r1, r3, #24
 10428 0750 BF4B     		ldr	r3, .L492
 10429 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10430 0754 1B04     		lsls	r3, r3, #16
 10431 0756 1943     		orrs	r1, r1, r3
 10432 0758 BD4B     		ldr	r3, .L492
 10433 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10434 075c 1B02     		lsls	r3, r3, #8
 10435 075e 0B43     		orrs	r3, r3, r1
 10436 0760 BB49     		ldr	r1, .L492
 10437 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10438 0764 1943     		orrs	r1, r1, r3
 10439 0766 BB48     		ldr	r0, .L492+4
 10440 0768 1346     		mov	r3, r2
 10441 076a DB00     		lsls	r3, r3, #3
 10442 076c 9B1A     		subs	r3, r3, r2
 10443 076e 1B01     		lsls	r3, r3, #4
 10444 0770 0344     		add	r3, r3, r0
 10445 0772 E433     		adds	r3, r3, #228
 10446 0774 1960     		str	r1, [r3]
1404:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10447              		.loc 1 1404 0
 10448 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10449 0778 B54B     		ldr	r3, .L492
 10450 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10451 077c 1906     		lsls	r1, r3, #24
 10452 077e B44B     		ldr	r3, .L492
 10453 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10454 0782 1B04     		lsls	r3, r3, #16
 10455 0784 1943     		orrs	r1, r1, r3
 10456 0786 B24B     		ldr	r3, .L492
 10457 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10458 078a 1B02     		lsls	r3, r3, #8
 10459 078c 0B43     		orrs	r3, r3, r1
 10460 078e B049     		ldr	r1, .L492
 10461 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10462 0792 1943     		orrs	r1, r1, r3
 10463 0794 AF48     		ldr	r0, .L492+4
 10464 0796 1346     		mov	r3, r2
 10465 0798 DB00     		lsls	r3, r3, #3
 10466 079a 9B1A     		subs	r3, r3, r2
 10467 079c 1B01     		lsls	r3, r3, #4
 10468 079e 0344     		add	r3, r3, r0
 10469 07a0 E833     		adds	r3, r3, #232
 10470 07a2 1960     		str	r1, [r3]
1405:..\src/command_processing.c **** 
1406:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10471              		.loc 1 1406 0
 10472 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10473 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 240


 10474 07a8 AA48     		ldr	r0, .L492+4
 10475 07aa 0B46     		mov	r3, r1
 10476 07ac DB00     		lsls	r3, r3, #3
 10477 07ae 5B1A     		subs	r3, r3, r1
 10478 07b0 1B01     		lsls	r3, r3, #4
 10479 07b2 0344     		add	r3, r3, r0
 10480 07b4 E433     		adds	r3, r3, #228
 10481 07b6 1868     		ldr	r0, [r3]
 10482 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10483 07ba A64C     		ldr	r4, .L492+4
 10484 07bc 0B46     		mov	r3, r1
 10485 07be DB00     		lsls	r3, r3, #3
 10486 07c0 5B1A     		subs	r3, r3, r1
 10487 07c2 1B01     		lsls	r3, r3, #4
 10488 07c4 2344     		add	r3, r3, r4
 10489 07c6 03F58873 		add	r3, r3, #272
 10490 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10491 07cc 1C46     		mov	r4, r3
 10492 07ce A149     		ldr	r1, .L492+4
 10493 07d0 2346     		mov	r3, r4
 10494 07d2 5B00     		lsls	r3, r3, #1
 10495 07d4 2344     		add	r3, r3, r4
 10496 07d6 1B01     		lsls	r3, r3, #4
 10497 07d8 0B44     		add	r3, r3, r1
 10498 07da 03F29513 		addw	r3, r3, #405
 10499 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10500 07e0 00FA03F1 		lsl	r1, r0, r3
 10501 07e4 9B48     		ldr	r0, .L492+4
 10502 07e6 1346     		mov	r3, r2
 10503 07e8 DB00     		lsls	r3, r3, #3
 10504 07ea 9B1A     		subs	r3, r3, r2
 10505 07ec 1B01     		lsls	r3, r3, #4
 10506 07ee 0344     		add	r3, r3, r0
 10507 07f0 E433     		adds	r3, r3, #228
 10508 07f2 1960     		str	r1, [r3]
1407:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10509              		.loc 1 1407 0
 10510 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10511 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10512 07f8 9648     		ldr	r0, .L492+4
 10513 07fa 0B46     		mov	r3, r1
 10514 07fc DB00     		lsls	r3, r3, #3
 10515 07fe 5B1A     		subs	r3, r3, r1
 10516 0800 1B01     		lsls	r3, r3, #4
 10517 0802 0344     		add	r3, r3, r0
 10518 0804 E833     		adds	r3, r3, #232
 10519 0806 1868     		ldr	r0, [r3]
 10520 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10521 080a 924C     		ldr	r4, .L492+4
 10522 080c 0B46     		mov	r3, r1
 10523 080e DB00     		lsls	r3, r3, #3
 10524 0810 5B1A     		subs	r3, r3, r1
 10525 0812 1B01     		lsls	r3, r3, #4
 10526 0814 2344     		add	r3, r3, r4
 10527 0816 03F58873 		add	r3, r3, #272
 10528 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10529 081c 1C46     		mov	r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 241


 10530 081e 8D49     		ldr	r1, .L492+4
 10531 0820 2346     		mov	r3, r4
 10532 0822 5B00     		lsls	r3, r3, #1
 10533 0824 2344     		add	r3, r3, r4
 10534 0826 1B01     		lsls	r3, r3, #4
 10535 0828 0B44     		add	r3, r3, r1
 10536 082a 03F29513 		addw	r3, r3, #405
 10537 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10538 0830 00FA03F1 		lsl	r1, r0, r3
 10539 0834 8748     		ldr	r0, .L492+4
 10540 0836 1346     		mov	r3, r2
 10541 0838 DB00     		lsls	r3, r3, #3
 10542 083a 9B1A     		subs	r3, r3, r2
 10543 083c 1B01     		lsls	r3, r3, #4
 10544 083e 0344     		add	r3, r3, r0
 10545 0840 E833     		adds	r3, r3, #232
 10546 0842 1960     		str	r1, [r3]
1408:..\src/command_processing.c ****             break;            
 10547              		.loc 1 1408 0
 10548 0844 00F041BE 		b	.L422
 10549              	.L395:
1409:..\src/command_processing.c **** 
1410:..\src/command_processing.c ****         case 23:        //Rest Position
1411:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10550              		.loc 1 1411 0
 10551 0848 814B     		ldr	r3, .L492
 10552 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10553 084c 1A06     		lsls	r2, r3, #24
 10554 084e 804B     		ldr	r3, .L492
 10555 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10556 0852 1B04     		lsls	r3, r3, #16
 10557 0854 1A43     		orrs	r2, r2, r3
 10558 0856 7E4B     		ldr	r3, .L492
 10559 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10560 085a 1B02     		lsls	r3, r3, #8
 10561 085c 1343     		orrs	r3, r3, r2
 10562 085e 7C4A     		ldr	r2, .L492
 10563 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10564 0862 1343     		orrs	r3, r3, r2
 10565 0864 7B4A     		ldr	r2, .L492+4
 10566 0866 C2F8A032 		str	r3, [r2, #672]
1412:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10567              		.loc 1 1412 0
 10568 086a 7A4B     		ldr	r3, .L492+4
 10569 086c D3F8A012 		ldr	r1, [r3, #672]
 10570 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10571 0872 7848     		ldr	r0, .L492+4
 10572 0874 1346     		mov	r3, r2
 10573 0876 DB00     		lsls	r3, r3, #3
 10574 0878 9B1A     		subs	r3, r3, r2
 10575 087a 1B01     		lsls	r3, r3, #4
 10576 087c 0344     		add	r3, r3, r0
 10577 087e 03F58873 		add	r3, r3, #272
 10578 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10579 0884 1846     		mov	r0, r3
 10580 0886 734A     		ldr	r2, .L492+4
 10581 0888 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 242


 10582 088a 5B00     		lsls	r3, r3, #1
 10583 088c 0344     		add	r3, r3, r0
 10584 088e 1B01     		lsls	r3, r3, #4
 10585 0890 1344     		add	r3, r3, r2
 10586 0892 03F29513 		addw	r3, r3, #405
 10587 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10588 0898 01FA03F3 		lsl	r3, r1, r3
 10589 089c 6D4A     		ldr	r2, .L492+4
 10590 089e C2F8A032 		str	r3, [r2, #672]
1413:..\src/command_processing.c ****             break; 
 10591              		.loc 1 1413 0
 10592 08a2 00F012BE 		b	.L422
 10593              	.L396:
1414:..\src/command_processing.c ****             
1415:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1416:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10594              		.loc 1 1416 0
 10595 08a6 6A4B     		ldr	r3, .L492
 10596 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10597 08aa 1A06     		lsls	r2, r3, #24
 10598 08ac 684B     		ldr	r3, .L492
 10599 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10600 08b0 1B04     		lsls	r3, r3, #16
 10601 08b2 1A43     		orrs	r2, r2, r3
 10602 08b4 664B     		ldr	r3, .L492
 10603 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10604 08b8 1B02     		lsls	r3, r3, #8
 10605 08ba 1343     		orrs	r3, r3, r2
 10606 08bc 644A     		ldr	r2, .L492
 10607 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10608 08c0 1343     		orrs	r3, r3, r2
 10609 08c2 644A     		ldr	r2, .L492+4
 10610 08c4 C2F8A432 		str	r3, [r2, #676]
1417:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10611              		.loc 1 1417 0
 10612 08c8 624B     		ldr	r3, .L492+4
 10613 08ca D3F8A432 		ldr	r3, [r3, #676]
 10614 08ce 092B     		cmp	r3, #9
 10615 08d0 00F3F285 		bgt	.L483
 10616              		.loc 1 1417 0 is_stmt 0 discriminator 1
 10617 08d4 5F4B     		ldr	r3, .L492+4
 10618 08d6 0A22     		movs	r2, #10
 10619 08d8 C3F8A422 		str	r2, [r3, #676]
1418:..\src/command_processing.c ****            break; 
 10620              		.loc 1 1418 0 is_stmt 1 discriminator 1
 10621 08dc 00F0ECBD 		b	.L483
 10622              	.L397:
1419:..\src/command_processing.c ****             
1420:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1421:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10623              		.loc 1 1421 0
 10624 08e0 5B4B     		ldr	r3, .L492
 10625 08e2 DB78     		ldrb	r3, [r3, #3]
 10626 08e4 BB74     		strb	r3, [r7, #18]
1422:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10627              		.loc 1 1422 0
 10628 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 243


 10629 08e8 002B     		cmp	r3, #0
 10630 08ea 04D0     		beq	.L440
1423:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10631              		.loc 1 1423 0
 10632 08ec 594B     		ldr	r3, .L492+4
 10633 08ee 0122     		movs	r2, #1
 10634 08f0 83F8A720 		strb	r2, [r3, #167]
 10635 08f4 03E0     		b	.L441
 10636              	.L440:
1424:..\src/command_processing.c ****             } else {            // 0
1425:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10637              		.loc 1 1425 0
 10638 08f6 574B     		ldr	r3, .L492+4
 10639 08f8 0022     		movs	r2, #0
 10640 08fa 83F8A720 		strb	r2, [r3, #167]
 10641              	.L441:
1426:..\src/command_processing.c ****             }
1427:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 10642              		.loc 1 1427 0
 10643 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10644 0900 554A     		ldr	r2, .L492+8
 10645 0902 0121     		movs	r1, #1
 10646 0904 D154     		strb	r1, [r2, r3]
1428:..\src/command_processing.c **** 
1429:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10647              		.loc 1 1429 0
 10648 0906 534B     		ldr	r3, .L492+4
 10649 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10650 090c 002B     		cmp	r3, #0
 10651 090e 40F0D585 		bne	.L484
1430:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1431:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10652              		.loc 1 1431 0
 10653 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10654 0914 4F4B     		ldr	r3, .L492+4
 10655 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10656 091a 4E49     		ldr	r1, .L492+4
 10657 091c 1346     		mov	r3, r2
 10658 091e DB00     		lsls	r3, r3, #3
 10659 0920 9B1A     		subs	r3, r3, r2
 10660 0922 1B01     		lsls	r3, r3, #4
 10661 0924 0B44     		add	r3, r3, r1
 10662 0926 03F58873 		add	r3, r3, #272
 10663 092a 0246     		mov	r2, r0
 10664 092c 1A70     		strb	r2, [r3]
1432:..\src/command_processing.c ****                 
1433:..\src/command_processing.c ****                 // Change also gears parameters
1434:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10665              		.loc 1 1434 0
 10666 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10667 0930 4849     		ldr	r1, .L492+4
 10668 0932 1346     		mov	r3, r2
 10669 0934 DB00     		lsls	r3, r3, #3
 10670 0936 9B1A     		subs	r3, r3, r2
 10671 0938 1B01     		lsls	r3, r3, #4
 10672 093a 0B44     		add	r3, r3, r1
 10673 093c 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 244


 10674 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10675 0942 1946     		mov	r1, r3
 10676 0944 434A     		ldr	r2, .L492+4
 10677 0946 0B46     		mov	r3, r1
 10678 0948 5B00     		lsls	r3, r3, #1
 10679 094a 0B44     		add	r3, r3, r1
 10680 094c 1B01     		lsls	r3, r3, #4
 10681 094e 1344     		add	r3, r3, r2
 10682 0950 03F5D873 		add	r3, r3, #432
 10683 0954 0122     		movs	r2, #1
 10684 0956 1A70     		strb	r2, [r3]
1435:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10685              		.loc 1 1435 0
 10686 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10687 095a 3E49     		ldr	r1, .L492+4
 10688 095c 1346     		mov	r3, r2
 10689 095e DB00     		lsls	r3, r3, #3
 10690 0960 9B1A     		subs	r3, r3, r2
 10691 0962 1B01     		lsls	r3, r3, #4
 10692 0964 0B44     		add	r3, r3, r1
 10693 0966 03F58873 		add	r3, r3, #272
 10694 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10695 096c 1946     		mov	r1, r3
 10696 096e 394A     		ldr	r2, .L492+4
 10697 0970 0B46     		mov	r3, r1
 10698 0972 5B00     		lsls	r3, r3, #1
 10699 0974 0B44     		add	r3, r3, r1
 10700 0976 1B01     		lsls	r3, r3, #4
 10701 0978 1344     		add	r3, r3, r2
 10702 097a 03F2B513 		addw	r3, r3, #437
 10703 097e 2322     		movs	r2, #35
 10704 0980 1A70     		strb	r2, [r3]
1436:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10705              		.loc 1 1436 0
 10706 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10707 0984 3349     		ldr	r1, .L492+4
 10708 0986 1346     		mov	r3, r2
 10709 0988 DB00     		lsls	r3, r3, #3
 10710 098a 9B1A     		subs	r3, r3, r2
 10711 098c 1B01     		lsls	r3, r3, #4
 10712 098e 0B44     		add	r3, r3, r1
 10713 0990 03F58873 		add	r3, r3, #272
 10714 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10715 0996 1946     		mov	r1, r3
 10716 0998 2E4A     		ldr	r2, .L492+4
 10717 099a 0B46     		mov	r3, r1
 10718 099c 5B00     		lsls	r3, r3, #1
 10719 099e 0B44     		add	r3, r3, r1
 10720 09a0 1B01     		lsls	r3, r3, #4
 10721 09a2 1344     		add	r3, r3, r2
 10722 09a4 03F5DB73 		add	r3, r3, #438
 10723 09a8 0322     		movs	r2, #3
 10724 09aa 1A70     		strb	r2, [r3]
1437:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10725              		.loc 1 1437 0
 10726 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10727 09ae 2949     		ldr	r1, .L492+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 245


 10728 09b0 1346     		mov	r3, r2
 10729 09b2 DB00     		lsls	r3, r3, #3
 10730 09b4 9B1A     		subs	r3, r3, r2
 10731 09b6 1B01     		lsls	r3, r3, #4
 10732 09b8 0B44     		add	r3, r3, r1
 10733 09ba 03F58873 		add	r3, r3, #272
 10734 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10735 09c0 1946     		mov	r1, r3
 10736 09c2 244A     		ldr	r2, .L492+4
 10737 09c4 0B46     		mov	r3, r1
 10738 09c6 5B00     		lsls	r3, r3, #1
 10739 09c8 0B44     		add	r3, r3, r1
 10740 09ca 1B01     		lsls	r3, r3, #4
 10741 09cc 1344     		add	r3, r3, r2
 10742 09ce 03F2B713 		addw	r3, r3, #439
 10743 09d2 FF22     		movs	r2, #255
 10744 09d4 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 
1439:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1440:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10745              		.loc 1 1440 0
 10746 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10747 09d8 1E49     		ldr	r1, .L492+4
 10748 09da 1346     		mov	r3, r2
 10749 09dc DB00     		lsls	r3, r3, #3
 10750 09de 9B1A     		subs	r3, r3, r2
 10751 09e0 1B01     		lsls	r3, r3, #4
 10752 09e2 0B44     		add	r3, r3, r1
 10753 09e4 03F21113 		addw	r3, r3, #273
 10754 09e8 0122     		movs	r2, #1
 10755 09ea 1A70     		strb	r2, [r3]
1441:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10756              		.loc 1 1441 0
 10757 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10758 09ee 1949     		ldr	r1, .L492+4
 10759 09f0 1346     		mov	r3, r2
 10760 09f2 DB00     		lsls	r3, r3, #3
 10761 09f4 9B1A     		subs	r3, r3, r2
 10762 09f6 1B01     		lsls	r3, r3, #4
 10763 09f8 0B44     		add	r3, r3, r1
 10764 09fa 03F58973 		add	r3, r3, #274
 10765 09fe 0122     		movs	r2, #1
 10766 0a00 1A70     		strb	r2, [r3]
1442:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10767              		.loc 1 1442 0
 10768 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10769 0a04 1349     		ldr	r1, .L492+4
 10770 0a06 1346     		mov	r3, r2
 10771 0a08 DB00     		lsls	r3, r3, #3
 10772 0a0a 9B1A     		subs	r3, r3, r2
 10773 0a0c 1B01     		lsls	r3, r3, #4
 10774 0a0e 0B44     		add	r3, r3, r1
 10775 0a10 E433     		adds	r3, r3, #228
 10776 0a12 0022     		movs	r2, #0
 10777 0a14 1A60     		str	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10778              		.loc 1 1443 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 246


 10779 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10780 0a18 0E4B     		ldr	r3, .L492+4
 10781 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10782 0a1e 1846     		mov	r0, r3
 10783 0a20 0C49     		ldr	r1, .L492+4
 10784 0a22 0346     		mov	r3, r0
 10785 0a24 5B00     		lsls	r3, r3, #1
 10786 0a26 0344     		add	r3, r3, r0
 10787 0a28 1B01     		lsls	r3, r3, #4
 10788 0a2a 0B44     		add	r3, r3, r1
 10789 0a2c 03F29513 		addw	r3, r3, #405
 10790 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10791 0a32 1946     		mov	r1, r3
 10792 0a34 4FF47A53 		mov	r3, #16000
 10793 0a38 03FA01F1 		lsl	r1, r3, r1
 10794 0a3c 0548     		ldr	r0, .L492+4
 10795 0a3e 1346     		mov	r3, r2
 10796 0a40 DB00     		lsls	r3, r3, #3
 10797 0a42 9B1A     		subs	r3, r3, r2
 10798 0a44 1B01     		lsls	r3, r3, #4
 10799 0a46 0344     		add	r3, r3, r0
 10800 0a48 E833     		adds	r3, r3, #232
 10801 0a4a 1960     		str	r1, [r3]
1444:..\src/command_processing.c ****             }    
1445:..\src/command_processing.c **** 
1446:..\src/command_processing.c ****             break; 
 10802              		.loc 1 1446 0
 10803 0a4c 00F036BD 		b	.L484
 10804              	.L493:
 10805              		.align	2
 10806              	.L492:
 10807 0a50 00000000 		.word	g_rx
 10808 0a54 00000000 		.word	g_mem
 10809 0a58 00000000 		.word	reset_last_value_flag
 10810              	.L398:
1447:..\src/command_processing.c **** 
1448:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1449:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10811              		.loc 1 1449 0
 10812 0a5c B94B     		ldr	r3, .L494
 10813 0a5e DB78     		ldrb	r3, [r3, #3]
 10814 0a60 BB74     		strb	r3, [r7, #18]
1450:..\src/command_processing.c ****             if (aux_uchar) {
 10815              		.loc 1 1450 0
 10816 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10817 0a64 002B     		cmp	r3, #0
 10818 0a66 05D0     		beq	.L443
1451:..\src/command_processing.c ****                 reset_counters();
 10819              		.loc 1 1451 0
 10820 0a68 FFF7FEFF 		bl	reset_counters
1452:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10821              		.loc 1 1452 0
 10822 0a6c B64B     		ldr	r3, .L494+4
 10823 0a6e 0022     		movs	r2, #0
 10824 0a70 83F8A820 		strb	r2, [r3, #168]
 10825              	.L443:
1453:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 247


1454:..\src/command_processing.c ****             
1455:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10826              		.loc 1 1455 0
 10827 0a74 B54B     		ldr	r3, .L494+8
 10828 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10829 0a7a 012B     		cmp	r3, #1
 10830 0a7c 40F02085 		bne	.L485
1456:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1457:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10831              		.loc 1 1457 0
 10832 0a80 8720     		movs	r0, #135
 10833 0a82 FFF7FEFF 		bl	DS1302_read
 10834 0a86 0346     		mov	r3, r0
 10835 0a88 BB74     		strb	r3, [r7, #18]
1458:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10836              		.loc 1 1458 0
 10837 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10838 0a8c 1B09     		lsrs	r3, r3, #4
 10839 0a8e DBB2     		uxtb	r3, r3
 10840 0a90 1A46     		mov	r2, r3
 10841 0a92 9200     		lsls	r2, r2, #2
 10842 0a94 1344     		add	r3, r3, r2
 10843 0a96 5B00     		lsls	r3, r3, #1
 10844 0a98 DAB2     		uxtb	r2, r3
 10845 0a9a BB7C     		ldrb	r3, [r7, #18]
 10846 0a9c 03F00F03 		and	r3, r3, #15
 10847 0aa0 DBB2     		uxtb	r3, r3
 10848 0aa2 1344     		add	r3, r3, r2
 10849 0aa4 DAB2     		uxtb	r2, r3
 10850 0aa6 A84B     		ldr	r3, .L494+4
 10851 0aa8 83F8A420 		strb	r2, [r3, #164]
1459:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10852              		.loc 1 1459 0
 10853 0aac 8920     		movs	r0, #137
 10854 0aae FFF7FEFF 		bl	DS1302_read
 10855 0ab2 0346     		mov	r3, r0
 10856 0ab4 BB74     		strb	r3, [r7, #18]
1460:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10857              		.loc 1 1460 0
 10858 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10859 0ab8 1B09     		lsrs	r3, r3, #4
 10860 0aba DBB2     		uxtb	r3, r3
 10861 0abc 1A46     		mov	r2, r3
 10862 0abe 9200     		lsls	r2, r2, #2
 10863 0ac0 1344     		add	r3, r3, r2
 10864 0ac2 5B00     		lsls	r3, r3, #1
 10865 0ac4 DAB2     		uxtb	r2, r3
 10866 0ac6 BB7C     		ldrb	r3, [r7, #18]
 10867 0ac8 03F00F03 		and	r3, r3, #15
 10868 0acc DBB2     		uxtb	r3, r3
 10869 0ace 1344     		add	r3, r3, r2
 10870 0ad0 DAB2     		uxtb	r2, r3
 10871 0ad2 9D4B     		ldr	r3, .L494+4
 10872 0ad4 83F8A520 		strb	r2, [r3, #165]
1461:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10873              		.loc 1 1461 0
 10874 0ad8 8D20     		movs	r0, #141
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 248


 10875 0ada FFF7FEFF 		bl	DS1302_read
 10876 0ade 0346     		mov	r3, r0
 10877 0ae0 BB74     		strb	r3, [r7, #18]
1462:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10878              		.loc 1 1462 0
 10879 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10880 0ae4 1B09     		lsrs	r3, r3, #4
 10881 0ae6 DBB2     		uxtb	r3, r3
 10882 0ae8 1A46     		mov	r2, r3
 10883 0aea 9200     		lsls	r2, r2, #2
 10884 0aec 1344     		add	r3, r3, r2
 10885 0aee 5B00     		lsls	r3, r3, #1
 10886 0af0 DAB2     		uxtb	r2, r3
 10887 0af2 BB7C     		ldrb	r3, [r7, #18]
 10888 0af4 03F00F03 		and	r3, r3, #15
 10889 0af8 DBB2     		uxtb	r3, r3
 10890 0afa 1344     		add	r3, r3, r2
 10891 0afc DAB2     		uxtb	r2, r3
 10892 0afe 924B     		ldr	r3, .L494+4
 10893 0b00 83F8A620 		strb	r2, [r3, #166]
1463:..\src/command_processing.c ****             }
1464:..\src/command_processing.c ****             break;             
 10894              		.loc 1 1464 0
 10895 0b04 00F0DCBC 		b	.L485
 10896              	.L399:
 10897              	.LBB23:
1465:..\src/command_processing.c ****             
1466:..\src/command_processing.c ****         case 32:         //Current Time
1467:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10898              		.loc 1 1467 0
 10899 0b08 0023     		movs	r3, #0
 10900 0b0a 7B75     		strb	r3, [r7, #21]
 10901 0b0c 0CE0     		b	.L445
 10902              	.L446:
1468:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10903              		.loc 1 1468 0 discriminator 3
 10904 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10905 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10906 0b12 0332     		adds	r2, r2, #3
 10907 0b14 8B49     		ldr	r1, .L494
 10908 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10909 0b18 8B4A     		ldr	r2, .L494+4
 10910 0b1a 1344     		add	r3, r3, r2
 10911 0b1c 0A46     		mov	r2, r1
 10912 0b1e 83F82022 		strb	r2, [r3, #544]
1467:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10913              		.loc 1 1467 0 discriminator 3
 10914 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10915 0b24 0133     		adds	r3, r3, #1
 10916 0b26 7B75     		strb	r3, [r7, #21]
 10917              	.L445:
1467:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10918              		.loc 1 1467 0 is_stmt 0 discriminator 1
 10919 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10920 0b2a 052B     		cmp	r3, #5
 10921 0b2c EFD9     		bls	.L446
 10922              	.LBE23:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 249


1469:..\src/command_processing.c ****             }
1470:..\src/command_processing.c ****             
1471:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10923              		.loc 1 1471 0 is_stmt 1
 10924 0b2e 864B     		ldr	r3, .L494+4
 10925 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10926 0b34 012B     		cmp	r3, #1
 10927 0b36 40F0C584 		bne	.L486
1472:..\src/command_processing.c ****                 set_RTC_time();
 10928              		.loc 1 1472 0
 10929 0b3a FFF7FEFF 		bl	set_RTC_time
1473:..\src/command_processing.c ****             }
1474:..\src/command_processing.c ****             break;
 10930              		.loc 1 1474 0
 10931 0b3e 00F0C1BC 		b	.L486
 10932              	.L400:
1475:..\src/command_processing.c ****            
1476:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1477:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10933              		.loc 1 1477 0
 10934 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10935 0b44 7F4B     		ldr	r3, .L494
 10936 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10937 0b48 7F49     		ldr	r1, .L494+4
 10938 0b4a 1346     		mov	r3, r2
 10939 0b4c DB00     		lsls	r3, r3, #3
 10940 0b4e 9B1A     		subs	r3, r3, r2
 10941 0b50 1B01     		lsls	r3, r3, #4
 10942 0b52 0B44     		add	r3, r3, r1
 10943 0b54 E233     		adds	r3, r3, #226
 10944 0b56 0246     		mov	r2, r0
 10945 0b58 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****             set_motor_driver_type();            
 10946              		.loc 1 1478 0
 10947 0b5a FFF7FEFF 		bl	set_motor_driver_type
1479:..\src/command_processing.c ****             break;
 10948              		.loc 1 1479 0
 10949 0b5e 00F0B4BC 		b	.L422
 10950              	.L401:
1480:..\src/command_processing.c ****             
1481:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1482:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10951              		.loc 1 1482 0
 10952 0b62 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10953 0b64 7949     		ldr	r1, .L494+8
 10954 0b66 1346     		mov	r3, r2
 10955 0b68 DB00     		lsls	r3, r3, #3
 10956 0b6a 9B1A     		subs	r3, r3, r2
 10957 0b6c 1B01     		lsls	r3, r3, #4
 10958 0b6e 0B44     		add	r3, r3, r1
 10959 0b70 03F20F13 		addw	r3, r3, #271
 10960 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10961 0b76 032B     		cmp	r3, #3
 10962 0b78 00F08680 		beq	.L448
1483:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10963              		.loc 1 1483 0
 10964 0b7c 744B     		ldr	r3, .L494+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 250


 10965 0b7e 1B68     		ldr	r3, [r3]	@ float
 10966 0b80 FB60     		str	r3, [r7, #12]	@ float
1484:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10967              		.loc 1 1484 0
 10968 0b82 0023     		movs	r3, #0
 10969 0b84 BB75     		strb	r3, [r7, #22]
 10970 0b86 0EE0     		b	.L449
 10971              	.L450:
1485:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10972              		.loc 1 1485 0 discriminator 3
 10973 0b88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10974 0b8a C3F10303 		rsb	r3, r3, #3
 10975 0b8e 07F10802 		add	r2, r7, #8
 10976 0b92 1344     		add	r3, r3, r2
 10977 0b94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10978 0b96 07F10C01 		add	r1, r7, #12
 10979 0b9a 0A44     		add	r2, r2, r1
 10980 0b9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10981 0b9e 1A70     		strb	r2, [r3]
1484:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10982              		.loc 1 1484 0 discriminator 3
 10983 0ba0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10984 0ba2 0133     		adds	r3, r3, #1
 10985 0ba4 BB75     		strb	r3, [r7, #22]
 10986              	.L449:
1484:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10987              		.loc 1 1484 0 is_stmt 0 discriminator 1
 10988 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10989 0ba8 032B     		cmp	r3, #3
 10990 0baa EDD9     		bls	.L450
1486:..\src/command_processing.c ****                 }
1487:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10991              		.loc 1 1487 0 is_stmt 1
 10992 0bac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10993 0bae BB68     		ldr	r3, [r7, #8]	@ float
 10994 0bb0 4FF08F41 		mov	r1, #1199570944
 10995 0bb4 1846     		mov	r0, r3
 10996 0bb6 FFF7FEFF 		bl	__aeabi_fmul
 10997 0bba 0346     		mov	r3, r0
 10998 0bbc 1846     		mov	r0, r3
 10999 0bbe FFF7FEFF 		bl	__aeabi_f2iz
 11000 0bc2 0146     		mov	r1, r0
 11001 0bc4 604A     		ldr	r2, .L494+4
 11002 0bc6 2346     		mov	r3, r4
 11003 0bc8 DB00     		lsls	r3, r3, #3
 11004 0bca 1B1B     		subs	r3, r3, r4
 11005 0bcc 1B01     		lsls	r3, r3, #4
 11006 0bce 1344     		add	r3, r3, r2
 11007 0bd0 B033     		adds	r3, r3, #176
 11008 0bd2 1960     		str	r1, [r3]
1488:..\src/command_processing.c ****                 
1489:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11009              		.loc 1 1489 0
 11010 0bd4 5F4B     		ldr	r3, .L494+16
 11011 0bd6 1B68     		ldr	r3, [r3]	@ float
 11012 0bd8 FB60     		str	r3, [r7, #12]	@ float
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 251


 11013              		.loc 1 1490 0
 11014 0bda 0023     		movs	r3, #0
 11015 0bdc BB75     		strb	r3, [r7, #22]
 11016 0bde 0EE0     		b	.L451
 11017              	.L452:
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11018              		.loc 1 1491 0 discriminator 3
 11019 0be0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11020 0be2 C3F10303 		rsb	r3, r3, #3
 11021 0be6 07F10802 		add	r2, r7, #8
 11022 0bea 1344     		add	r3, r3, r2
 11023 0bec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11024 0bee 07F10C01 		add	r1, r7, #12
 11025 0bf2 0A44     		add	r2, r2, r1
 11026 0bf4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11027 0bf6 1A70     		strb	r2, [r3]
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11028              		.loc 1 1490 0 discriminator 3
 11029 0bf8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11030 0bfa 0133     		adds	r3, r3, #1
 11031 0bfc BB75     		strb	r3, [r7, #22]
 11032              	.L451:
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11033              		.loc 1 1490 0 is_stmt 0 discriminator 1
 11034 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11035 0c00 032B     		cmp	r3, #3
 11036 0c02 EDD9     		bls	.L452
1492:..\src/command_processing.c ****                 }
1493:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 11037              		.loc 1 1493 0 is_stmt 1
 11038 0c04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11039 0c06 BB68     		ldr	r3, [r7, #8]	@ float
 11040 0c08 4FF08F41 		mov	r1, #1199570944
 11041 0c0c 1846     		mov	r0, r3
 11042 0c0e FFF7FEFF 		bl	__aeabi_fmul
 11043 0c12 0346     		mov	r3, r0
 11044 0c14 1846     		mov	r0, r3
 11045 0c16 FFF7FEFF 		bl	__aeabi_f2iz
 11046 0c1a 0146     		mov	r1, r0
 11047 0c1c 4A4A     		ldr	r2, .L494+4
 11048 0c1e 2346     		mov	r3, r4
 11049 0c20 DB00     		lsls	r3, r3, #3
 11050 0c22 1B1B     		subs	r3, r3, r4
 11051 0c24 1B01     		lsls	r3, r3, #4
 11052 0c26 1344     		add	r3, r3, r2
 11053 0c28 B433     		adds	r3, r3, #180
 11054 0c2a 1960     		str	r1, [r3]
1494:..\src/command_processing.c ****                 
1495:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11055              		.loc 1 1495 0
 11056 0c2c 4A4B     		ldr	r3, .L494+20
 11057 0c2e 1B68     		ldr	r3, [r3]	@ float
 11058 0c30 FB60     		str	r3, [r7, #12]	@ float
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11059              		.loc 1 1496 0
 11060 0c32 0023     		movs	r3, #0
 11061 0c34 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 252


 11062 0c36 0EE0     		b	.L453
 11063              	.L454:
1497:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11064              		.loc 1 1497 0 discriminator 3
 11065 0c38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11066 0c3a C3F10303 		rsb	r3, r3, #3
 11067 0c3e 07F10802 		add	r2, r7, #8
 11068 0c42 1344     		add	r3, r3, r2
 11069 0c44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11070 0c46 07F10C01 		add	r1, r7, #12
 11071 0c4a 0A44     		add	r2, r2, r1
 11072 0c4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11073 0c4e 1A70     		strb	r2, [r3]
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11074              		.loc 1 1496 0 discriminator 3
 11075 0c50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11076 0c52 0133     		adds	r3, r3, #1
 11077 0c54 BB75     		strb	r3, [r7, #22]
 11078              	.L453:
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11079              		.loc 1 1496 0 is_stmt 0 discriminator 1
 11080 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11081 0c58 032B     		cmp	r3, #3
 11082 0c5a EDD9     		bls	.L454
1498:..\src/command_processing.c ****                 }
1499:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 11083              		.loc 1 1499 0 is_stmt 1
 11084 0c5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11085 0c5e BB68     		ldr	r3, [r7, #8]	@ float
 11086 0c60 4FF08F41 		mov	r1, #1199570944
 11087 0c64 1846     		mov	r0, r3
 11088 0c66 FFF7FEFF 		bl	__aeabi_fmul
 11089 0c6a 0346     		mov	r3, r0
 11090 0c6c 1846     		mov	r0, r3
 11091 0c6e FFF7FEFF 		bl	__aeabi_f2iz
 11092 0c72 0146     		mov	r1, r0
 11093 0c74 344A     		ldr	r2, .L494+4
 11094 0c76 2346     		mov	r3, r4
 11095 0c78 DB00     		lsls	r3, r3, #3
 11096 0c7a 1B1B     		subs	r3, r3, r4
 11097 0c7c 1B01     		lsls	r3, r3, #4
 11098 0c7e 1344     		add	r3, r3, r2
 11099 0c80 B833     		adds	r3, r3, #184
 11100 0c82 1960     		str	r1, [r3]
1500:..\src/command_processing.c ****             }
1501:..\src/command_processing.c ****             else {
1502:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1503:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1504:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1505:..\src/command_processing.c ****                 }
1506:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1507:..\src/command_processing.c ****                 
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 253


1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1519:..\src/command_processing.c ****             }
1520:..\src/command_processing.c ****             break;
 11101              		.loc 1 1520 0
 11102 0c84 00F021BC 		b	.L422
 11103              	.L448:
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11104              		.loc 1 1502 0
 11105 0c88 314B     		ldr	r3, .L494+12
 11106 0c8a 1B68     		ldr	r3, [r3]	@ float
 11107 0c8c FB60     		str	r3, [r7, #12]	@ float
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11108              		.loc 1 1503 0
 11109 0c8e 0023     		movs	r3, #0
 11110 0c90 BB75     		strb	r3, [r7, #22]
 11111 0c92 0EE0     		b	.L456
 11112              	.L457:
1504:..\src/command_processing.c ****                 }
 11113              		.loc 1 1504 0 discriminator 3
 11114 0c94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11115 0c96 C3F10303 		rsb	r3, r3, #3
 11116 0c9a 07F10802 		add	r2, r7, #8
 11117 0c9e 1344     		add	r3, r3, r2
 11118 0ca0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11119 0ca2 07F10C01 		add	r1, r7, #12
 11120 0ca6 0A44     		add	r2, r2, r1
 11121 0ca8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11122 0caa 1A70     		strb	r2, [r3]
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11123              		.loc 1 1503 0 discriminator 3
 11124 0cac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11125 0cae 0133     		adds	r3, r3, #1
 11126 0cb0 BB75     		strb	r3, [r7, #22]
 11127              	.L456:
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11128              		.loc 1 1503 0 is_stmt 0 discriminator 1
 11129 0cb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11130 0cb4 032B     		cmp	r3, #3
 11131 0cb6 EDD9     		bls	.L457
1506:..\src/command_processing.c ****                 
 11132              		.loc 1 1506 0 is_stmt 1
 11133 0cb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11134 0cba BB68     		ldr	r3, [r7, #8]	@ float
 11135 0cbc 4FF08F41 		mov	r1, #1199570944
 11136 0cc0 1846     		mov	r0, r3
 11137 0cc2 FFF7FEFF 		bl	__aeabi_fmul
 11138 0cc6 0346     		mov	r3, r0
 11139 0cc8 1846     		mov	r0, r3
 11140 0cca FFF7FEFF 		bl	__aeabi_f2iz
 11141 0cce 0146     		mov	r1, r0
 11142 0cd0 1D4A     		ldr	r2, .L494+4
 11143 0cd2 2346     		mov	r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 254


 11144 0cd4 DB00     		lsls	r3, r3, #3
 11145 0cd6 1B1B     		subs	r3, r3, r4
 11146 0cd8 1B01     		lsls	r3, r3, #4
 11147 0cda 1344     		add	r3, r3, r2
 11148 0cdc C833     		adds	r3, r3, #200
 11149 0cde 1960     		str	r1, [r3]
1508:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11150              		.loc 1 1508 0
 11151 0ce0 1C4B     		ldr	r3, .L494+16
 11152 0ce2 1B68     		ldr	r3, [r3]	@ float
 11153 0ce4 FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11154              		.loc 1 1509 0
 11155 0ce6 0023     		movs	r3, #0
 11156 0ce8 BB75     		strb	r3, [r7, #22]
 11157 0cea 0EE0     		b	.L458
 11158              	.L459:
1510:..\src/command_processing.c ****                 }
 11159              		.loc 1 1510 0 discriminator 3
 11160 0cec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11161 0cee C3F10303 		rsb	r3, r3, #3
 11162 0cf2 07F10802 		add	r2, r7, #8
 11163 0cf6 1344     		add	r3, r3, r2
 11164 0cf8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11165 0cfa 07F10C01 		add	r1, r7, #12
 11166 0cfe 0A44     		add	r2, r2, r1
 11167 0d00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11168 0d02 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11169              		.loc 1 1509 0 discriminator 3
 11170 0d04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11171 0d06 0133     		adds	r3, r3, #1
 11172 0d08 BB75     		strb	r3, [r7, #22]
 11173              	.L458:
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11174              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11175 0d0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11176 0d0c 032B     		cmp	r3, #3
 11177 0d0e EDD9     		bls	.L459
1512:..\src/command_processing.c ****                 
 11178              		.loc 1 1512 0 is_stmt 1
 11179 0d10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11180 0d12 BB68     		ldr	r3, [r7, #8]	@ float
 11181 0d14 4FF08F41 		mov	r1, #1199570944
 11182 0d18 1846     		mov	r0, r3
 11183 0d1a FFF7FEFF 		bl	__aeabi_fmul
 11184 0d1e 0346     		mov	r3, r0
 11185 0d20 1846     		mov	r0, r3
 11186 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 11187 0d26 0146     		mov	r1, r0
 11188 0d28 074A     		ldr	r2, .L494+4
 11189 0d2a 2346     		mov	r3, r4
 11190 0d2c DB00     		lsls	r3, r3, #3
 11191 0d2e 1B1B     		subs	r3, r3, r4
 11192 0d30 1B01     		lsls	r3, r3, #4
 11193 0d32 1344     		add	r3, r3, r2
 11194 0d34 CC33     		adds	r3, r3, #204
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 255


 11195 0d36 1960     		str	r1, [r3]
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11196              		.loc 1 1514 0
 11197 0d38 074B     		ldr	r3, .L494+20
 11198 0d3a 1B68     		ldr	r3, [r3]	@ float
 11199 0d3c FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11200              		.loc 1 1515 0
 11201 0d3e 0023     		movs	r3, #0
 11202 0d40 BB75     		strb	r3, [r7, #22]
 11203 0d42 1AE0     		b	.L460
 11204              	.L495:
 11205              		.align	2
 11206              	.L494:
 11207 0d44 00000000 		.word	g_rx
 11208 0d48 00000000 		.word	g_mem
 11209 0d4c 00000000 		.word	c_mem
 11210 0d50 03000000 		.word	g_rx+3
 11211 0d54 07000000 		.word	g_rx+7
 11212 0d58 0B000000 		.word	g_rx+11
 11213              	.L461:
1516:..\src/command_processing.c ****                 }
 11214              		.loc 1 1516 0 discriminator 3
 11215 0d5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11216 0d5e C3F10303 		rsb	r3, r3, #3
 11217 0d62 07F10802 		add	r2, r7, #8
 11218 0d66 1344     		add	r3, r3, r2
 11219 0d68 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11220 0d6a 07F10C01 		add	r1, r7, #12
 11221 0d6e 0A44     		add	r2, r2, r1
 11222 0d70 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11223 0d72 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11224              		.loc 1 1515 0 discriminator 3
 11225 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11226 0d76 0133     		adds	r3, r3, #1
 11227 0d78 BB75     		strb	r3, [r7, #22]
 11228              	.L460:
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11229              		.loc 1 1515 0 is_stmt 0 discriminator 1
 11230 0d7a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11231 0d7c 032B     		cmp	r3, #3
 11232 0d7e EDD9     		bls	.L461
1518:..\src/command_processing.c ****             }
 11233              		.loc 1 1518 0 is_stmt 1
 11234 0d80 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11235 0d82 BB68     		ldr	r3, [r7, #8]	@ float
 11236 0d84 4FF08F41 		mov	r1, #1199570944
 11237 0d88 1846     		mov	r0, r3
 11238 0d8a FFF7FEFF 		bl	__aeabi_fmul
 11239 0d8e 0346     		mov	r3, r0
 11240 0d90 1846     		mov	r0, r3
 11241 0d92 FFF7FEFF 		bl	__aeabi_f2iz
 11242 0d96 0146     		mov	r1, r0
 11243 0d98 A34A     		ldr	r2, .L496
 11244 0d9a 2346     		mov	r3, r4
 11245 0d9c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 256


 11246 0d9e 1B1B     		subs	r3, r3, r4
 11247 0da0 1B01     		lsls	r3, r3, #4
 11248 0da2 1344     		add	r3, r3, r2
 11249 0da4 D033     		adds	r3, r3, #208
 11250 0da6 1960     		str	r1, [r3]
 11251              		.loc 1 1520 0
 11252 0da8 8FE3     		b	.L422
 11253              	.L402:
1521:..\src/command_processing.c ****             
1522:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1523:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11254              		.loc 1 1523 0
 11255 0daa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11256 0dac 9F49     		ldr	r1, .L496+4
 11257 0dae 1346     		mov	r3, r2
 11258 0db0 DB00     		lsls	r3, r3, #3
 11259 0db2 9B1A     		subs	r3, r3, r2
 11260 0db4 1B01     		lsls	r3, r3, #4
 11261 0db6 0B44     		add	r3, r3, r1
 11262 0db8 03F20F13 		addw	r3, r3, #271
 11263 0dbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11264 0dbe 032B     		cmp	r3, #3
 11265 0dc0 00F08580 		beq	.L462
1524:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11266              		.loc 1 1524 0
 11267 0dc4 9A4B     		ldr	r3, .L496+8
 11268 0dc6 1B68     		ldr	r3, [r3]	@ float
 11269 0dc8 FB60     		str	r3, [r7, #12]	@ float
1525:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11270              		.loc 1 1525 0
 11271 0dca 0023     		movs	r3, #0
 11272 0dcc BB75     		strb	r3, [r7, #22]
 11273 0dce 0EE0     		b	.L463
 11274              	.L464:
1526:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11275              		.loc 1 1526 0 discriminator 3
 11276 0dd0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11277 0dd2 C3F10303 		rsb	r3, r3, #3
 11278 0dd6 07F10802 		add	r2, r7, #8
 11279 0dda 1344     		add	r3, r3, r2
 11280 0ddc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11281 0dde 07F10C01 		add	r1, r7, #12
 11282 0de2 0A44     		add	r2, r2, r1
 11283 0de4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11284 0de6 1A70     		strb	r2, [r3]
1525:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11285              		.loc 1 1525 0 discriminator 3
 11286 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11287 0dea 0133     		adds	r3, r3, #1
 11288 0dec BB75     		strb	r3, [r7, #22]
 11289              	.L463:
1525:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11290              		.loc 1 1525 0 is_stmt 0 discriminator 1
 11291 0dee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11292 0df0 032B     		cmp	r3, #3
 11293 0df2 EDD9     		bls	.L464
1527:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 257


1528:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11294              		.loc 1 1528 0 is_stmt 1
 11295 0df4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11296 0df6 BB68     		ldr	r3, [r7, #8]	@ float
 11297 0df8 4FF08F41 		mov	r1, #1199570944
 11298 0dfc 1846     		mov	r0, r3
 11299 0dfe FFF7FEFF 		bl	__aeabi_fmul
 11300 0e02 0346     		mov	r3, r0
 11301 0e04 1846     		mov	r0, r3
 11302 0e06 FFF7FEFF 		bl	__aeabi_f2iz
 11303 0e0a 0146     		mov	r1, r0
 11304 0e0c 864A     		ldr	r2, .L496
 11305 0e0e 2346     		mov	r3, r4
 11306 0e10 DB00     		lsls	r3, r3, #3
 11307 0e12 1B1B     		subs	r3, r3, r4
 11308 0e14 1B01     		lsls	r3, r3, #4
 11309 0e16 1344     		add	r3, r3, r2
 11310 0e18 BC33     		adds	r3, r3, #188
 11311 0e1a 1960     		str	r1, [r3]
1529:..\src/command_processing.c ****                 
1530:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11312              		.loc 1 1530 0
 11313 0e1c 854B     		ldr	r3, .L496+12
 11314 0e1e 1B68     		ldr	r3, [r3]	@ float
 11315 0e20 FB60     		str	r3, [r7, #12]	@ float
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11316              		.loc 1 1531 0
 11317 0e22 0023     		movs	r3, #0
 11318 0e24 BB75     		strb	r3, [r7, #22]
 11319 0e26 0EE0     		b	.L465
 11320              	.L466:
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11321              		.loc 1 1532 0 discriminator 3
 11322 0e28 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11323 0e2a C3F10303 		rsb	r3, r3, #3
 11324 0e2e 07F10802 		add	r2, r7, #8
 11325 0e32 1344     		add	r3, r3, r2
 11326 0e34 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11327 0e36 07F10C01 		add	r1, r7, #12
 11328 0e3a 0A44     		add	r2, r2, r1
 11329 0e3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11330 0e3e 1A70     		strb	r2, [r3]
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11331              		.loc 1 1531 0 discriminator 3
 11332 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11333 0e42 0133     		adds	r3, r3, #1
 11334 0e44 BB75     		strb	r3, [r7, #22]
 11335              	.L465:
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11336              		.loc 1 1531 0 is_stmt 0 discriminator 1
 11337 0e46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11338 0e48 032B     		cmp	r3, #3
 11339 0e4a EDD9     		bls	.L466
1533:..\src/command_processing.c ****                 }
1534:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11340              		.loc 1 1534 0 is_stmt 1
 11341 0e4c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 258


 11342 0e4e BB68     		ldr	r3, [r7, #8]	@ float
 11343 0e50 4FF08F41 		mov	r1, #1199570944
 11344 0e54 1846     		mov	r0, r3
 11345 0e56 FFF7FEFF 		bl	__aeabi_fmul
 11346 0e5a 0346     		mov	r3, r0
 11347 0e5c 1846     		mov	r0, r3
 11348 0e5e FFF7FEFF 		bl	__aeabi_f2iz
 11349 0e62 0146     		mov	r1, r0
 11350 0e64 704A     		ldr	r2, .L496
 11351 0e66 2346     		mov	r3, r4
 11352 0e68 DB00     		lsls	r3, r3, #3
 11353 0e6a 1B1B     		subs	r3, r3, r4
 11354 0e6c 1B01     		lsls	r3, r3, #4
 11355 0e6e 1344     		add	r3, r3, r2
 11356 0e70 C033     		adds	r3, r3, #192
 11357 0e72 1960     		str	r1, [r3]
1535:..\src/command_processing.c ****                 
1536:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11358              		.loc 1 1536 0
 11359 0e74 704B     		ldr	r3, .L496+16
 11360 0e76 1B68     		ldr	r3, [r3]	@ float
 11361 0e78 FB60     		str	r3, [r7, #12]	@ float
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11362              		.loc 1 1537 0
 11363 0e7a 0023     		movs	r3, #0
 11364 0e7c BB75     		strb	r3, [r7, #22]
 11365 0e7e 0EE0     		b	.L467
 11366              	.L468:
1538:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11367              		.loc 1 1538 0 discriminator 3
 11368 0e80 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11369 0e82 C3F10303 		rsb	r3, r3, #3
 11370 0e86 07F10802 		add	r2, r7, #8
 11371 0e8a 1344     		add	r3, r3, r2
 11372 0e8c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11373 0e8e 07F10C01 		add	r1, r7, #12
 11374 0e92 0A44     		add	r2, r2, r1
 11375 0e94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11376 0e96 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11377              		.loc 1 1537 0 discriminator 3
 11378 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11379 0e9a 0133     		adds	r3, r3, #1
 11380 0e9c BB75     		strb	r3, [r7, #22]
 11381              	.L467:
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11382              		.loc 1 1537 0 is_stmt 0 discriminator 1
 11383 0e9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11384 0ea0 032B     		cmp	r3, #3
 11385 0ea2 EDD9     		bls	.L468
1539:..\src/command_processing.c ****                 }
1540:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11386              		.loc 1 1540 0 is_stmt 1
 11387 0ea4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11388 0ea6 BB68     		ldr	r3, [r7, #8]	@ float
 11389 0ea8 4FF08F41 		mov	r1, #1199570944
 11390 0eac 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 259


 11391 0eae FFF7FEFF 		bl	__aeabi_fmul
 11392 0eb2 0346     		mov	r3, r0
 11393 0eb4 1846     		mov	r0, r3
 11394 0eb6 FFF7FEFF 		bl	__aeabi_f2iz
 11395 0eba 0146     		mov	r1, r0
 11396 0ebc 5A4A     		ldr	r2, .L496
 11397 0ebe 2346     		mov	r3, r4
 11398 0ec0 DB00     		lsls	r3, r3, #3
 11399 0ec2 1B1B     		subs	r3, r3, r4
 11400 0ec4 1B01     		lsls	r3, r3, #4
 11401 0ec6 1344     		add	r3, r3, r2
 11402 0ec8 C433     		adds	r3, r3, #196
 11403 0eca 1960     		str	r1, [r3]
1541:..\src/command_processing.c ****             }
1542:..\src/command_processing.c ****             else {
1543:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1544:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1545:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1546:..\src/command_processing.c ****                 }
1547:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1548:..\src/command_processing.c ****                 
1549:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1550:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1551:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1552:..\src/command_processing.c ****                 }
1553:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1554:..\src/command_processing.c ****                 
1555:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1556:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1557:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1558:..\src/command_processing.c ****                 }
1559:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1560:..\src/command_processing.c ****             }            
1561:..\src/command_processing.c ****             break;  
 11404              		.loc 1 1561 0
 11405 0ecc FDE2     		b	.L422
 11406              	.L462:
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11407              		.loc 1 1543 0
 11408 0ece 584B     		ldr	r3, .L496+8
 11409 0ed0 1B68     		ldr	r3, [r3]	@ float
 11410 0ed2 FB60     		str	r3, [r7, #12]	@ float
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11411              		.loc 1 1544 0
 11412 0ed4 0023     		movs	r3, #0
 11413 0ed6 BB75     		strb	r3, [r7, #22]
 11414 0ed8 0EE0     		b	.L470
 11415              	.L471:
1545:..\src/command_processing.c ****                 }
 11416              		.loc 1 1545 0 discriminator 3
 11417 0eda BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11418 0edc C3F10303 		rsb	r3, r3, #3
 11419 0ee0 07F10802 		add	r2, r7, #8
 11420 0ee4 1344     		add	r3, r3, r2
 11421 0ee6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11422 0ee8 07F10C01 		add	r1, r7, #12
 11423 0eec 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 260


 11424 0eee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11425 0ef0 1A70     		strb	r2, [r3]
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11426              		.loc 1 1544 0 discriminator 3
 11427 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11428 0ef4 0133     		adds	r3, r3, #1
 11429 0ef6 BB75     		strb	r3, [r7, #22]
 11430              	.L470:
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11431              		.loc 1 1544 0 is_stmt 0 discriminator 1
 11432 0ef8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11433 0efa 032B     		cmp	r3, #3
 11434 0efc EDD9     		bls	.L471
1547:..\src/command_processing.c ****                 
 11435              		.loc 1 1547 0 is_stmt 1
 11436 0efe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11437 0f00 BB68     		ldr	r3, [r7, #8]	@ float
 11438 0f02 4FF08F41 		mov	r1, #1199570944
 11439 0f06 1846     		mov	r0, r3
 11440 0f08 FFF7FEFF 		bl	__aeabi_fmul
 11441 0f0c 0346     		mov	r3, r0
 11442 0f0e 1846     		mov	r0, r3
 11443 0f10 FFF7FEFF 		bl	__aeabi_f2iz
 11444 0f14 0146     		mov	r1, r0
 11445 0f16 444A     		ldr	r2, .L496
 11446 0f18 2346     		mov	r3, r4
 11447 0f1a DB00     		lsls	r3, r3, #3
 11448 0f1c 1B1B     		subs	r3, r3, r4
 11449 0f1e 1B01     		lsls	r3, r3, #4
 11450 0f20 1344     		add	r3, r3, r2
 11451 0f22 D433     		adds	r3, r3, #212
 11452 0f24 1960     		str	r1, [r3]
1549:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11453              		.loc 1 1549 0
 11454 0f26 434B     		ldr	r3, .L496+12
 11455 0f28 1B68     		ldr	r3, [r3]	@ float
 11456 0f2a FB60     		str	r3, [r7, #12]	@ float
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11457              		.loc 1 1550 0
 11458 0f2c 0023     		movs	r3, #0
 11459 0f2e BB75     		strb	r3, [r7, #22]
 11460 0f30 0EE0     		b	.L472
 11461              	.L473:
1551:..\src/command_processing.c ****                 }
 11462              		.loc 1 1551 0 discriminator 3
 11463 0f32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11464 0f34 C3F10303 		rsb	r3, r3, #3
 11465 0f38 07F10802 		add	r2, r7, #8
 11466 0f3c 1344     		add	r3, r3, r2
 11467 0f3e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11468 0f40 07F10C01 		add	r1, r7, #12
 11469 0f44 0A44     		add	r2, r2, r1
 11470 0f46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11471 0f48 1A70     		strb	r2, [r3]
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11472              		.loc 1 1550 0 discriminator 3
 11473 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 261


 11474 0f4c 0133     		adds	r3, r3, #1
 11475 0f4e BB75     		strb	r3, [r7, #22]
 11476              	.L472:
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11477              		.loc 1 1550 0 is_stmt 0 discriminator 1
 11478 0f50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11479 0f52 032B     		cmp	r3, #3
 11480 0f54 EDD9     		bls	.L473
1553:..\src/command_processing.c ****                 
 11481              		.loc 1 1553 0 is_stmt 1
 11482 0f56 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11483 0f58 BB68     		ldr	r3, [r7, #8]	@ float
 11484 0f5a 4FF08F41 		mov	r1, #1199570944
 11485 0f5e 1846     		mov	r0, r3
 11486 0f60 FFF7FEFF 		bl	__aeabi_fmul
 11487 0f64 0346     		mov	r3, r0
 11488 0f66 1846     		mov	r0, r3
 11489 0f68 FFF7FEFF 		bl	__aeabi_f2iz
 11490 0f6c 0146     		mov	r1, r0
 11491 0f6e 2E4A     		ldr	r2, .L496
 11492 0f70 2346     		mov	r3, r4
 11493 0f72 DB00     		lsls	r3, r3, #3
 11494 0f74 1B1B     		subs	r3, r3, r4
 11495 0f76 1B01     		lsls	r3, r3, #4
 11496 0f78 1344     		add	r3, r3, r2
 11497 0f7a D833     		adds	r3, r3, #216
 11498 0f7c 1960     		str	r1, [r3]
1555:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11499              		.loc 1 1555 0
 11500 0f7e 2E4B     		ldr	r3, .L496+16
 11501 0f80 1B68     		ldr	r3, [r3]	@ float
 11502 0f82 FB60     		str	r3, [r7, #12]	@ float
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11503              		.loc 1 1556 0
 11504 0f84 0023     		movs	r3, #0
 11505 0f86 BB75     		strb	r3, [r7, #22]
 11506 0f88 0EE0     		b	.L474
 11507              	.L475:
1557:..\src/command_processing.c ****                 }
 11508              		.loc 1 1557 0 discriminator 3
 11509 0f8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11510 0f8c C3F10303 		rsb	r3, r3, #3
 11511 0f90 07F10802 		add	r2, r7, #8
 11512 0f94 1344     		add	r3, r3, r2
 11513 0f96 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11514 0f98 07F10C01 		add	r1, r7, #12
 11515 0f9c 0A44     		add	r2, r2, r1
 11516 0f9e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11517 0fa0 1A70     		strb	r2, [r3]
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11518              		.loc 1 1556 0 discriminator 3
 11519 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11520 0fa4 0133     		adds	r3, r3, #1
 11521 0fa6 BB75     		strb	r3, [r7, #22]
 11522              	.L474:
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11523              		.loc 1 1556 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 262


 11524 0fa8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11525 0faa 032B     		cmp	r3, #3
 11526 0fac EDD9     		bls	.L475
1559:..\src/command_processing.c ****             }            
 11527              		.loc 1 1559 0 is_stmt 1
 11528 0fae FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11529 0fb0 BB68     		ldr	r3, [r7, #8]	@ float
 11530 0fb2 4FF08F41 		mov	r1, #1199570944
 11531 0fb6 1846     		mov	r0, r3
 11532 0fb8 FFF7FEFF 		bl	__aeabi_fmul
 11533 0fbc 0346     		mov	r3, r0
 11534 0fbe 1846     		mov	r0, r3
 11535 0fc0 FFF7FEFF 		bl	__aeabi_f2iz
 11536 0fc4 0146     		mov	r1, r0
 11537 0fc6 184A     		ldr	r2, .L496
 11538 0fc8 2346     		mov	r3, r4
 11539 0fca DB00     		lsls	r3, r3, #3
 11540 0fcc 1B1B     		subs	r3, r3, r4
 11541 0fce 1B01     		lsls	r3, r3, #4
 11542 0fd0 1344     		add	r3, r3, r2
 11543 0fd2 DC33     		adds	r3, r3, #220
 11544 0fd4 1960     		str	r1, [r3]
 11545              		.loc 1 1561 0
 11546 0fd6 78E2     		b	.L422
 11547              	.L403:
1562:..\src/command_processing.c ****             
1563:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1564:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11548              		.loc 1 1564 0
 11549 0fd8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11550 0fda 184B     		ldr	r3, .L496+20
 11551 0fdc D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11552 0fde 1249     		ldr	r1, .L496
 11553 0fe0 1346     		mov	r3, r2
 11554 0fe2 DB00     		lsls	r3, r3, #3
 11555 0fe4 9B1A     		subs	r3, r3, r2
 11556 0fe6 1B01     		lsls	r3, r3, #4
 11557 0fe8 0B44     		add	r3, r3, r1
 11558 0fea 03F58773 		add	r3, r3, #270
 11559 0fee 0246     		mov	r2, r0
 11560 0ff0 1A70     		strb	r2, [r3]
1565:..\src/command_processing.c ****             
1566:..\src/command_processing.c ****             // Hold the actual position
1567:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11561              		.loc 1 1567 0
 11562 0ff2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11563 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11564 0ff6 0C48     		ldr	r0, .L496
 11565 0ff8 1346     		mov	r3, r2
 11566 0ffa DB00     		lsls	r3, r3, #3
 11567 0ffc 9B1A     		subs	r3, r3, r2
 11568 0ffe 1B01     		lsls	r3, r3, #4
 11569 1000 0344     		add	r3, r3, r0
 11570 1002 03F58873 		add	r3, r3, #272
 11571 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11572 1008 1846     		mov	r0, r3
 11573 100a 0D4A     		ldr	r2, .L496+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 263


 11574 100c 3423     		movs	r3, #52
 11575 100e 03FB00F3 		mul	r3, r3, r0
 11576 1012 1344     		add	r3, r3, r2
 11577 1014 1A68     		ldr	r2, [r3]
 11578 1016 0B48     		ldr	r0, .L496+28
 11579 1018 0B01     		lsls	r3, r1, #4
 11580 101a 0344     		add	r3, r3, r0
 11581 101c 1A60     		str	r2, [r3]
1568:..\src/command_processing.c ****             break;   
 11582              		.loc 1 1568 0
 11583 101e 54E2     		b	.L422
 11584              	.L404:
1569:..\src/command_processing.c **** 
1570:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1571:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11585              		.loc 1 1571 0
 11586 1020 0023     		movs	r3, #0
 11587 1022 FB75     		strb	r3, [r7, #23]
 11588 1024 8FE0     		b	.L476
 11589              	.L497:
 11590 1026 00BF     		.align	2
 11591              	.L496:
 11592 1028 00000000 		.word	g_mem
 11593 102c 00000000 		.word	c_mem
 11594 1030 03000000 		.word	g_rx+3
 11595 1034 07000000 		.word	g_rx+7
 11596 1038 0B000000 		.word	g_rx+11
 11597 103c 00000000 		.word	g_rx
 11598 1040 00000000 		.word	g_meas
 11599 1044 00000000 		.word	g_refNew
 11600              	.L477:
1572:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11601              		.loc 1 1572 0 discriminator 3
 11602 1048 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11603 104a 8A49     		ldr	r1, .L498
 11604 104c 1346     		mov	r3, r2
 11605 104e DB00     		lsls	r3, r3, #3
 11606 1050 9B1A     		subs	r3, r3, r2
 11607 1052 1B01     		lsls	r3, r3, #4
 11608 1054 0B44     		add	r3, r3, r1
 11609 1056 03F58873 		add	r3, r3, #272
 11610 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11611 105c 1C46     		mov	r4, r3
 11612 105e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11613 1060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11614 1062 5B00     		lsls	r3, r3, #1
 11615 1064 0333     		adds	r3, r3, #3
 11616 1066 8449     		ldr	r1, .L498+4
 11617 1068 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11618 106a 1B02     		lsls	r3, r3, #8
 11619 106c 19B2     		sxth	r1, r3
 11620 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11621 1070 0233     		adds	r3, r3, #2
 11622 1072 5B00     		lsls	r3, r3, #1
 11623 1074 8048     		ldr	r0, .L498+4
 11624 1076 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11625 1078 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 264


 11626 107a 0B43     		orrs	r3, r3, r1
 11627 107c 1BB2     		sxth	r3, r3
 11628 107e 1846     		mov	r0, r3
 11629 1080 7C49     		ldr	r1, .L498
 11630 1082 2346     		mov	r3, r4
 11631 1084 5B00     		lsls	r3, r3, #1
 11632 1086 2344     		add	r3, r3, r4
 11633 1088 9B00     		lsls	r3, r3, #2
 11634 108a 1344     		add	r3, r3, r2
 11635 108c 6633     		adds	r3, r3, #102
 11636 108e 41F82300 		str	r0, [r1, r3, lsl #2]
1573:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11637              		.loc 1 1573 0 discriminator 3
 11638 1092 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11639 1094 7749     		ldr	r1, .L498
 11640 1096 1346     		mov	r3, r2
 11641 1098 DB00     		lsls	r3, r3, #3
 11642 109a 9B1A     		subs	r3, r3, r2
 11643 109c 1B01     		lsls	r3, r3, #4
 11644 109e 0B44     		add	r3, r3, r1
 11645 10a0 03F58873 		add	r3, r3, #272
 11646 10a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11647 10a6 1D46     		mov	r5, r3
 11648 10a8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11649 10aa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11650 10ac 7148     		ldr	r0, .L498
 11651 10ae 1346     		mov	r3, r2
 11652 10b0 DB00     		lsls	r3, r3, #3
 11653 10b2 9B1A     		subs	r3, r3, r2
 11654 10b4 1B01     		lsls	r3, r3, #4
 11655 10b6 0344     		add	r3, r3, r0
 11656 10b8 03F58873 		add	r3, r3, #272
 11657 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11658 10be 1C46     		mov	r4, r3
 11659 10c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11660 10c2 6C48     		ldr	r0, .L498
 11661 10c4 2346     		mov	r3, r4
 11662 10c6 5B00     		lsls	r3, r3, #1
 11663 10c8 2344     		add	r3, r3, r4
 11664 10ca 9B00     		lsls	r3, r3, #2
 11665 10cc 1344     		add	r3, r3, r2
 11666 10ce 6633     		adds	r3, r3, #102
 11667 10d0 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11668 10d4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11669 10d6 674C     		ldr	r4, .L498
 11670 10d8 1346     		mov	r3, r2
 11671 10da DB00     		lsls	r3, r3, #3
 11672 10dc 9B1A     		subs	r3, r3, r2
 11673 10de 1B01     		lsls	r3, r3, #4
 11674 10e0 2344     		add	r3, r3, r4
 11675 10e2 03F58873 		add	r3, r3, #272
 11676 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11677 10e8 1E46     		mov	r6, r3
 11678 10ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11679 10ec 614C     		ldr	r4, .L498
 11680 10ee 3346     		mov	r3, r6
 11681 10f0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 265


 11682 10f2 3344     		add	r3, r3, r6
 11683 10f4 1B01     		lsls	r3, r3, #4
 11684 10f6 2344     		add	r3, r3, r4
 11685 10f8 1344     		add	r3, r3, r2
 11686 10fa 03F29513 		addw	r3, r3, #405
 11687 10fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11688 1100 00FA03F2 		lsl	r2, r0, r3
 11689 1104 5B48     		ldr	r0, .L498
 11690 1106 2B46     		mov	r3, r5
 11691 1108 5B00     		lsls	r3, r3, #1
 11692 110a 2B44     		add	r3, r3, r5
 11693 110c 9B00     		lsls	r3, r3, #2
 11694 110e 0B44     		add	r3, r3, r1
 11695 1110 6633     		adds	r3, r3, #102
 11696 1112 40F82320 		str	r2, [r0, r3, lsl #2]
1574:..\src/command_processing.c **** 
1575:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11697              		.loc 1 1575 0 discriminator 3
 11698 1116 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11699 1118 5649     		ldr	r1, .L498
 11700 111a 1346     		mov	r3, r2
 11701 111c DB00     		lsls	r3, r3, #3
 11702 111e 9B1A     		subs	r3, r3, r2
 11703 1120 1B01     		lsls	r3, r3, #4
 11704 1122 0B44     		add	r3, r3, r1
 11705 1124 03F58873 		add	r3, r3, #272
 11706 1128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11707 112a 1846     		mov	r0, r3
 11708 112c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11709 112e 5349     		ldr	r1, .L498+8
 11710 1130 3422     		movs	r2, #52
 11711 1132 02FB00F2 		mul	r2, r2, r0
 11712 1136 0A44     		add	r2, r2, r1
 11713 1138 1344     		add	r3, r3, r2
 11714 113a 1833     		adds	r3, r3, #24
 11715 113c 0022     		movs	r2, #0
 11716 113e 1A70     		strb	r2, [r3]
1571:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11717              		.loc 1 1571 0 discriminator 3
 11718 1140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11719 1142 0133     		adds	r3, r3, #1
 11720 1144 FB75     		strb	r3, [r7, #23]
 11721              	.L476:
1571:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11722              		.loc 1 1571 0 is_stmt 0 discriminator 1
 11723 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11724 1148 022B     		cmp	r3, #2
 11725 114a 7FF67DAF 		bls	.L477
1576:..\src/command_processing.c ****             }
1577:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11726              		.loc 1 1577 0 is_stmt 1
 11727 114e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11728 1150 4B4A     		ldr	r2, .L498+12
 11729 1152 0121     		movs	r1, #1
 11730 1154 D154     		strb	r1, [r2, r3]
1578:..\src/command_processing.c ****             break;
 11731              		.loc 1 1578 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 266


 11732 1156 B8E1     		b	.L422
 11733              	.L405:
1579:..\src/command_processing.c ****     
1580:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1581:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11734              		.loc 1 1581 0
 11735 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11736 115a 474B     		ldr	r3, .L498+4
 11737 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11738 115e 1906     		lsls	r1, r3, #24
 11739 1160 454B     		ldr	r3, .L498+4
 11740 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11741 1164 1B04     		lsls	r3, r3, #16
 11742 1166 1943     		orrs	r1, r1, r3
 11743 1168 434B     		ldr	r3, .L498+4
 11744 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11745 116c 1B02     		lsls	r3, r3, #8
 11746 116e 0B43     		orrs	r3, r3, r1
 11747 1170 4149     		ldr	r1, .L498+4
 11748 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11749 1174 1943     		orrs	r1, r1, r3
 11750 1176 3F48     		ldr	r0, .L498
 11751 1178 1346     		mov	r3, r2
 11752 117a DB00     		lsls	r3, r3, #3
 11753 117c 9B1A     		subs	r3, r3, r2
 11754 117e 1B01     		lsls	r3, r3, #4
 11755 1180 0344     		add	r3, r3, r0
 11756 1182 E433     		adds	r3, r3, #228
 11757 1184 1960     		str	r1, [r3]
1582:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11758              		.loc 1 1582 0
 11759 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11760 1188 3B4B     		ldr	r3, .L498+4
 11761 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11762 118c 1906     		lsls	r1, r3, #24
 11763 118e 3A4B     		ldr	r3, .L498+4
 11764 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11765 1192 1B04     		lsls	r3, r3, #16
 11766 1194 1943     		orrs	r1, r1, r3
 11767 1196 384B     		ldr	r3, .L498+4
 11768 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11769 119a 1B02     		lsls	r3, r3, #8
 11770 119c 0B43     		orrs	r3, r3, r1
 11771 119e 3649     		ldr	r1, .L498+4
 11772 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11773 11a2 1943     		orrs	r1, r1, r3
 11774 11a4 3348     		ldr	r0, .L498
 11775 11a6 1346     		mov	r3, r2
 11776 11a8 DB00     		lsls	r3, r3, #3
 11777 11aa 9B1A     		subs	r3, r3, r2
 11778 11ac 1B01     		lsls	r3, r3, #4
 11779 11ae 0344     		add	r3, r3, r0
 11780 11b0 E833     		adds	r3, r3, #232
 11781 11b2 1960     		str	r1, [r3]
1583:..\src/command_processing.c **** 
1584:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11782              		.loc 1 1584 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 267


 11783 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11784 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11785 11b8 2E48     		ldr	r0, .L498
 11786 11ba 0B46     		mov	r3, r1
 11787 11bc DB00     		lsls	r3, r3, #3
 11788 11be 5B1A     		subs	r3, r3, r1
 11789 11c0 1B01     		lsls	r3, r3, #4
 11790 11c2 0344     		add	r3, r3, r0
 11791 11c4 E433     		adds	r3, r3, #228
 11792 11c6 1868     		ldr	r0, [r3]
 11793 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11794 11ca 2A4C     		ldr	r4, .L498
 11795 11cc 0B46     		mov	r3, r1
 11796 11ce DB00     		lsls	r3, r3, #3
 11797 11d0 5B1A     		subs	r3, r3, r1
 11798 11d2 1B01     		lsls	r3, r3, #4
 11799 11d4 2344     		add	r3, r3, r4
 11800 11d6 03F58873 		add	r3, r3, #272
 11801 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11802 11dc 1C46     		mov	r4, r3
 11803 11de 2549     		ldr	r1, .L498
 11804 11e0 2346     		mov	r3, r4
 11805 11e2 5B00     		lsls	r3, r3, #1
 11806 11e4 2344     		add	r3, r3, r4
 11807 11e6 1B01     		lsls	r3, r3, #4
 11808 11e8 0B44     		add	r3, r3, r1
 11809 11ea 03F29513 		addw	r3, r3, #405
 11810 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11811 11f0 00FA03F1 		lsl	r1, r0, r3
 11812 11f4 1F48     		ldr	r0, .L498
 11813 11f6 1346     		mov	r3, r2
 11814 11f8 DB00     		lsls	r3, r3, #3
 11815 11fa 9B1A     		subs	r3, r3, r2
 11816 11fc 1B01     		lsls	r3, r3, #4
 11817 11fe 0344     		add	r3, r3, r0
 11818 1200 E433     		adds	r3, r3, #228
 11819 1202 1960     		str	r1, [r3]
1585:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11820              		.loc 1 1585 0
 11821 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11822 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11823 1208 1A48     		ldr	r0, .L498
 11824 120a 0B46     		mov	r3, r1
 11825 120c DB00     		lsls	r3, r3, #3
 11826 120e 5B1A     		subs	r3, r3, r1
 11827 1210 1B01     		lsls	r3, r3, #4
 11828 1212 0344     		add	r3, r3, r0
 11829 1214 E833     		adds	r3, r3, #232
 11830 1216 1868     		ldr	r0, [r3]
 11831 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11832 121a 164C     		ldr	r4, .L498
 11833 121c 0B46     		mov	r3, r1
 11834 121e DB00     		lsls	r3, r3, #3
 11835 1220 5B1A     		subs	r3, r3, r1
 11836 1222 1B01     		lsls	r3, r3, #4
 11837 1224 2344     		add	r3, r3, r4
 11838 1226 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 268


 11839 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11840 122c 1C46     		mov	r4, r3
 11841 122e 1149     		ldr	r1, .L498
 11842 1230 2346     		mov	r3, r4
 11843 1232 5B00     		lsls	r3, r3, #1
 11844 1234 2344     		add	r3, r3, r4
 11845 1236 1B01     		lsls	r3, r3, #4
 11846 1238 0B44     		add	r3, r3, r1
 11847 123a 03F29513 		addw	r3, r3, #405
 11848 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11849 1240 00FA03F1 		lsl	r1, r0, r3
 11850 1244 0B48     		ldr	r0, .L498
 11851 1246 1346     		mov	r3, r2
 11852 1248 DB00     		lsls	r3, r3, #3
 11853 124a 9B1A     		subs	r3, r3, r2
 11854 124c 1B01     		lsls	r3, r3, #4
 11855 124e 0344     		add	r3, r3, r0
 11856 1250 E833     		adds	r3, r3, #232
 11857 1252 1960     		str	r1, [r3]
1586:..\src/command_processing.c ****             break;
 11858              		.loc 1 1586 0
 11859 1254 39E1     		b	.L422
 11860              	.L406:
1587:..\src/command_processing.c ****             
1588:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1589:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11861              		.loc 1 1589 0
 11862 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11863 1258 074B     		ldr	r3, .L498+4
 11864 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11865 125c 0549     		ldr	r1, .L498
 11866 125e 1346     		mov	r3, r2
 11867 1260 DB00     		lsls	r3, r3, #3
 11868 1262 9B1A     		subs	r3, r3, r2
 11869 1264 1B01     		lsls	r3, r3, #4
 11870 1266 0B44     		add	r3, r3, r1
 11871 1268 E233     		adds	r3, r3, #226
 11872 126a 0246     		mov	r2, r0
 11873 126c 1A70     		strb	r2, [r3]
1590:..\src/command_processing.c ****             set_motor_driver_type();
 11874              		.loc 1 1590 0
 11875 126e FFF7FEFF 		bl	set_motor_driver_type
1591:..\src/command_processing.c ****             break;
 11876              		.loc 1 1591 0
 11877 1272 2AE1     		b	.L422
 11878              	.L499:
 11879              		.align	2
 11880              	.L498:
 11881 1274 00000000 		.word	g_mem
 11882 1278 00000000 		.word	g_rx
 11883 127c 00000000 		.word	g_meas
 11884 1280 00000000 		.word	reset_last_value_flag
 11885              	.L407:
1592:..\src/command_processing.c **** 
1593:..\src/command_processing.c ****         case 75:        // Device type
1594:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11886              		.loc 1 1594 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 269


 11887 1284 934B     		ldr	r3, .L500
 11888 1286 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11889 1288 934B     		ldr	r3, .L500+4
 11890 128a 83F8AC20 		strb	r2, [r3, #172]
1595:..\src/command_processing.c ****             
1596:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11891              		.loc 1 1596 0
 11892 128e 924B     		ldr	r3, .L500+4
 11893 1290 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11894 1294 002B     		cmp	r3, #0
 11895 1296 40F0A480 		bne	.L478
1597:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11896              		.loc 1 1597 0
 11897 129a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11898 129c 8E49     		ldr	r1, .L500+4
 11899 129e 1346     		mov	r3, r2
 11900 12a0 DB00     		lsls	r3, r3, #3
 11901 12a2 9B1A     		subs	r3, r3, r2
 11902 12a4 1B01     		lsls	r3, r3, #4
 11903 12a6 0B44     		add	r3, r3, r1
 11904 12a8 03F58873 		add	r3, r3, #272
 11905 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11906 12ae 1946     		mov	r1, r3
 11907 12b0 894A     		ldr	r2, .L500+4
 11908 12b2 0B46     		mov	r3, r1
 11909 12b4 5B00     		lsls	r3, r3, #1
 11910 12b6 0B44     		add	r3, r3, r1
 11911 12b8 1B01     		lsls	r3, r3, #4
 11912 12ba 1344     		add	r3, r3, r2
 11913 12bc 03F5D873 		add	r3, r3, #432
 11914 12c0 0122     		movs	r2, #1
 11915 12c2 1A70     		strb	r2, [r3]
1598:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11916              		.loc 1 1598 0
 11917 12c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11918 12c6 8449     		ldr	r1, .L500+4
 11919 12c8 1346     		mov	r3, r2
 11920 12ca DB00     		lsls	r3, r3, #3
 11921 12cc 9B1A     		subs	r3, r3, r2
 11922 12ce 1B01     		lsls	r3, r3, #4
 11923 12d0 0B44     		add	r3, r3, r1
 11924 12d2 03F58873 		add	r3, r3, #272
 11925 12d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11926 12d8 1946     		mov	r1, r3
 11927 12da 7F4A     		ldr	r2, .L500+4
 11928 12dc 0B46     		mov	r3, r1
 11929 12de 5B00     		lsls	r3, r3, #1
 11930 12e0 0B44     		add	r3, r3, r1
 11931 12e2 1B01     		lsls	r3, r3, #4
 11932 12e4 1344     		add	r3, r3, r2
 11933 12e6 03F2B513 		addw	r3, r3, #437
 11934 12ea 2322     		movs	r2, #35
 11935 12ec 1A70     		strb	r2, [r3]
1599:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11936              		.loc 1 1599 0
 11937 12ee 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11938 12f0 7949     		ldr	r1, .L500+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 270


 11939 12f2 1346     		mov	r3, r2
 11940 12f4 DB00     		lsls	r3, r3, #3
 11941 12f6 9B1A     		subs	r3, r3, r2
 11942 12f8 1B01     		lsls	r3, r3, #4
 11943 12fa 0B44     		add	r3, r3, r1
 11944 12fc 03F58873 		add	r3, r3, #272
 11945 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11946 1302 1946     		mov	r1, r3
 11947 1304 744A     		ldr	r2, .L500+4
 11948 1306 0B46     		mov	r3, r1
 11949 1308 5B00     		lsls	r3, r3, #1
 11950 130a 0B44     		add	r3, r3, r1
 11951 130c 1B01     		lsls	r3, r3, #4
 11952 130e 1344     		add	r3, r3, r2
 11953 1310 03F5DB73 		add	r3, r3, #438
 11954 1314 0322     		movs	r2, #3
 11955 1316 1A70     		strb	r2, [r3]
1600:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11956              		.loc 1 1600 0
 11957 1318 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11958 131a 6F49     		ldr	r1, .L500+4
 11959 131c 1346     		mov	r3, r2
 11960 131e DB00     		lsls	r3, r3, #3
 11961 1320 9B1A     		subs	r3, r3, r2
 11962 1322 1B01     		lsls	r3, r3, #4
 11963 1324 0B44     		add	r3, r3, r1
 11964 1326 03F58873 		add	r3, r3, #272
 11965 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11966 132c 1946     		mov	r1, r3
 11967 132e 6A4A     		ldr	r2, .L500+4
 11968 1330 0B46     		mov	r3, r1
 11969 1332 5B00     		lsls	r3, r3, #1
 11970 1334 0B44     		add	r3, r3, r1
 11971 1336 1B01     		lsls	r3, r3, #4
 11972 1338 1344     		add	r3, r3, r2
 11973 133a 03F2B713 		addw	r3, r3, #439
 11974 133e FF22     		movs	r2, #255
 11975 1340 1A70     		strb	r2, [r3]
1601:..\src/command_processing.c ****                 
1602:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1603:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11976              		.loc 1 1603 0
 11977 1342 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11978 1344 644B     		ldr	r3, .L500+4
 11979 1346 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11980 134a 6349     		ldr	r1, .L500+4
 11981 134c 1346     		mov	r3, r2
 11982 134e DB00     		lsls	r3, r3, #3
 11983 1350 9B1A     		subs	r3, r3, r2
 11984 1352 1B01     		lsls	r3, r3, #4
 11985 1354 0B44     		add	r3, r3, r1
 11986 1356 03F58873 		add	r3, r3, #272
 11987 135a 0246     		mov	r2, r0
 11988 135c 1A70     		strb	r2, [r3]
1604:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11989              		.loc 1 1604 0
 11990 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 271


 11991 1360 5D49     		ldr	r1, .L500+4
 11992 1362 1346     		mov	r3, r2
 11993 1364 DB00     		lsls	r3, r3, #3
 11994 1366 9B1A     		subs	r3, r3, r2
 11995 1368 1B01     		lsls	r3, r3, #4
 11996 136a 0B44     		add	r3, r3, r1
 11997 136c 03F21113 		addw	r3, r3, #273
 11998 1370 0122     		movs	r2, #1
 11999 1372 1A70     		strb	r2, [r3]
1605:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 12000              		.loc 1 1605 0
 12001 1374 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12002 1376 5849     		ldr	r1, .L500+4
 12003 1378 1346     		mov	r3, r2
 12004 137a DB00     		lsls	r3, r3, #3
 12005 137c 9B1A     		subs	r3, r3, r2
 12006 137e 1B01     		lsls	r3, r3, #4
 12007 1380 0B44     		add	r3, r3, r1
 12008 1382 03F58973 		add	r3, r3, #274
 12009 1386 0122     		movs	r2, #1
 12010 1388 1A70     		strb	r2, [r3]
1606:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 12011              		.loc 1 1606 0
 12012 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12013 138c 5249     		ldr	r1, .L500+4
 12014 138e 1346     		mov	r3, r2
 12015 1390 DB00     		lsls	r3, r3, #3
 12016 1392 9B1A     		subs	r3, r3, r2
 12017 1394 1B01     		lsls	r3, r3, #4
 12018 1396 0B44     		add	r3, r3, r1
 12019 1398 E433     		adds	r3, r3, #228
 12020 139a 0022     		movs	r2, #0
 12021 139c 1A60     		str	r2, [r3]
1607:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 12022              		.loc 1 1607 0
 12023 139e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12024 13a0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 12025 13a2 4D48     		ldr	r0, .L500+4
 12026 13a4 0B46     		mov	r3, r1
 12027 13a6 DB00     		lsls	r3, r3, #3
 12028 13a8 5B1A     		subs	r3, r3, r1
 12029 13aa 1B01     		lsls	r3, r3, #4
 12030 13ac 0344     		add	r3, r3, r0
 12031 13ae 03F58873 		add	r3, r3, #272
 12032 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12033 13b4 1846     		mov	r0, r3
 12034 13b6 4849     		ldr	r1, .L500+4
 12035 13b8 0346     		mov	r3, r0
 12036 13ba 5B00     		lsls	r3, r3, #1
 12037 13bc 0344     		add	r3, r3, r0
 12038 13be 1B01     		lsls	r3, r3, #4
 12039 13c0 0B44     		add	r3, r3, r1
 12040 13c2 03F29513 		addw	r3, r3, #405
 12041 13c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12042 13c8 1946     		mov	r1, r3
 12043 13ca 4FF47A53 		mov	r3, #16000
 12044 13ce 03FA01F1 		lsl	r1, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 272


 12045 13d2 4148     		ldr	r0, .L500+4
 12046 13d4 1346     		mov	r3, r2
 12047 13d6 DB00     		lsls	r3, r3, #3
 12048 13d8 9B1A     		subs	r3, r3, r2
 12049 13da 1B01     		lsls	r3, r3, #4
 12050 13dc 0344     		add	r3, r3, r0
 12051 13de E833     		adds	r3, r3, #232
 12052 13e0 1960     		str	r1, [r3]
 12053              	.L478:
1608:..\src/command_processing.c ****             }      
1609:..\src/command_processing.c ****             
1610:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 12054              		.loc 1 1610 0
 12055 13e2 3D4B     		ldr	r3, .L500+4
 12056 13e4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12057 13e8 042B     		cmp	r3, #4
 12058 13ea 6DD1     		bne	.L487
1611:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 12059              		.loc 1 1611 0
 12060 13ec 3A4B     		ldr	r3, .L500+4
 12061 13ee 0122     		movs	r2, #1
 12062 13f0 83F8A920 		strb	r2, [r3, #169]
1612:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12063              		.loc 1 1612 0
 12064 13f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12065 13f6 3849     		ldr	r1, .L500+4
 12066 13f8 1346     		mov	r3, r2
 12067 13fa DB00     		lsls	r3, r3, #3
 12068 13fc 9B1A     		subs	r3, r3, r2
 12069 13fe 1B01     		lsls	r3, r3, #4
 12070 1400 0B44     		add	r3, r3, r1
 12071 1402 03F58873 		add	r3, r3, #272
 12072 1406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12073 1408 1946     		mov	r1, r3
 12074 140a 334A     		ldr	r2, .L500+4
 12075 140c 0B46     		mov	r3, r1
 12076 140e 5B00     		lsls	r3, r3, #1
 12077 1410 0B44     		add	r3, r3, r1
 12078 1412 1B01     		lsls	r3, r3, #4
 12079 1414 1344     		add	r3, r3, r2
 12080 1416 03F5D873 		add	r3, r3, #432
 12081 141a 0122     		movs	r2, #1
 12082 141c 1A70     		strb	r2, [r3]
1613:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12083              		.loc 1 1613 0
 12084 141e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12085 1420 2D49     		ldr	r1, .L500+4
 12086 1422 1346     		mov	r3, r2
 12087 1424 DB00     		lsls	r3, r3, #3
 12088 1426 9B1A     		subs	r3, r3, r2
 12089 1428 1B01     		lsls	r3, r3, #4
 12090 142a 0B44     		add	r3, r3, r1
 12091 142c 03F58873 		add	r3, r3, #272
 12092 1430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12093 1432 1946     		mov	r1, r3
 12094 1434 284A     		ldr	r2, .L500+4
 12095 1436 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 273


 12096 1438 5B00     		lsls	r3, r3, #1
 12097 143a 0B44     		add	r3, r3, r1
 12098 143c 1B01     		lsls	r3, r3, #4
 12099 143e 1344     		add	r3, r3, r2
 12100 1440 03F5D873 		add	r3, r3, #432
 12101 1444 0122     		movs	r2, #1
 12102 1446 1A70     		strb	r2, [r3]
1614:..\src/command_processing.c ****             /*    
1615:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1616:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1617:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1618:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1619:..\src/command_processing.c ****             */    
1620:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12103              		.loc 1 1620 0
 12104 1448 0023     		movs	r3, #0
 12105 144a FB75     		strb	r3, [r7, #23]
 12106 144c 2EE0     		b	.L480
 12107              	.L481:
1621:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12108              		.loc 1 1621 0 discriminator 3
 12109 144e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12110 1450 2149     		ldr	r1, .L500+4
 12111 1452 1346     		mov	r3, r2
 12112 1454 DB00     		lsls	r3, r3, #3
 12113 1456 9B1A     		subs	r3, r3, r2
 12114 1458 1B01     		lsls	r3, r3, #4
 12115 145a 0B44     		add	r3, r3, r1
 12116 145c 03F58673 		add	r3, r3, #268
 12117 1460 4FF44872 		mov	r2, #800
 12118 1464 1A80     		strh	r2, [r3]	@ movhi
1622:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12119              		.loc 1 1622 0 discriminator 3
 12120 1466 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12121 1468 1B49     		ldr	r1, .L500+4
 12122 146a 1346     		mov	r3, r2
 12123 146c DB00     		lsls	r3, r3, #3
 12124 146e 9B1A     		subs	r3, r3, r2
 12125 1470 1B01     		lsls	r3, r3, #4
 12126 1472 0B44     		add	r3, r3, r1
 12127 1474 B033     		adds	r3, r3, #176
 12128 1476 41F6B862 		movw	r2, #7864
 12129 147a 1A60     		str	r2, [r3]
1623:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 12130              		.loc 1 1623 0 discriminator 3
 12131 147c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12132 147e 1649     		ldr	r1, .L500+4
 12133 1480 1346     		mov	r3, r2
 12134 1482 DB00     		lsls	r3, r3, #3
 12135 1484 9B1A     		subs	r3, r3, r2
 12136 1486 1B01     		lsls	r3, r3, #4
 12137 1488 0B44     		add	r3, r3, r1
 12138 148a B433     		adds	r3, r3, #180
 12139 148c 0022     		movs	r2, #0
 12140 148e 1A60     		str	r2, [r3]
1624:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12141              		.loc 1 1624 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 274


 12142 1490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12143 1492 1149     		ldr	r1, .L500+4
 12144 1494 1346     		mov	r3, r2
 12145 1496 DB00     		lsls	r3, r3, #3
 12146 1498 9B1A     		subs	r3, r3, r2
 12147 149a 1B01     		lsls	r3, r3, #4
 12148 149c 0B44     		add	r3, r3, r1
 12149 149e B833     		adds	r3, r3, #184
 12150 14a0 40F6CC42 		movw	r2, #3276
 12151 14a4 1A60     		str	r2, [r3]
1620:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12152              		.loc 1 1620 0 discriminator 3
 12153 14a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12154 14a8 0133     		adds	r3, r3, #1
 12155 14aa FB75     		strb	r3, [r7, #23]
 12156              	.L480:
1620:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12157              		.loc 1 1620 0 is_stmt 0 discriminator 1
 12158 14ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12159 14ae 012B     		cmp	r3, #1
 12160 14b0 CDD9     		bls	.L481
1625:..\src/command_processing.c ****                 }
1626:..\src/command_processing.c ****             }      
1627:..\src/command_processing.c ****             
1628:..\src/command_processing.c ****             break;
 12161              		.loc 1 1628 0 is_stmt 1
 12162 14b2 09E0     		b	.L487
 12163              	.L482:
1629:..\src/command_processing.c ****             
1630:..\src/command_processing.c ****         default:
1631:..\src/command_processing.c ****             break;
 12164              		.loc 1 1631 0
 12165 14b4 00BF     		nop
 12166 14b6 08E0     		b	.L422
 12167              	.L483:
1418:..\src/command_processing.c ****             
 12168              		.loc 1 1418 0
 12169 14b8 00BF     		nop
 12170 14ba 06E0     		b	.L422
 12171              	.L484:
1446:..\src/command_processing.c **** 
 12172              		.loc 1 1446 0
 12173 14bc 00BF     		nop
 12174 14be 04E0     		b	.L422
 12175              	.L485:
1464:..\src/command_processing.c ****             
 12176              		.loc 1 1464 0
 12177 14c0 00BF     		nop
 12178 14c2 02E0     		b	.L422
 12179              	.L486:
1474:..\src/command_processing.c ****            
 12180              		.loc 1 1474 0
 12181 14c4 00BF     		nop
 12182 14c6 00E0     		b	.L422
 12183              	.L487:
1628:..\src/command_processing.c ****             
 12184              		.loc 1 1628 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 275


 12185 14c8 00BF     		nop
 12186              	.L422:
1632:..\src/command_processing.c ****     }
1633:..\src/command_processing.c **** }
 12187              		.loc 1 1633 0 discriminator 1
 12188 14ca 00BF     		nop
 12189 14cc 1C37     		adds	r7, r7, #28
 12190              		.cfi_def_cfa_offset 20
 12191 14ce BD46     		mov	sp, r7
 12192              		.cfi_def_cfa_register 13
 12193              		@ sp needed
 12194 14d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 12195              	.L501:
 12196 14d2 00BF     		.align	2
 12197              	.L500:
 12198 14d4 00000000 		.word	g_rx
 12199 14d8 00000000 		.word	g_mem
 12200              		.cfi_endproc
 12201              	.LFE69:
 12202              		.size	set_custom_param, .-set_custom_param
 12203              		.section	.rodata
 12204 10be 0000     		.align	2
 12205              	.LC145:
 12206 10c0 506F7274 		.ascii	"Port %u ID:\000"
 12206      20257520 
 12206      49443A00 
 12207              		.align	2
 12208              	.LC146:
 12209 10cc 2575202D 		.ascii	"%u - Device ID:\000"
 12209      20446576 
 12209      69636520 
 12209      49443A00 
 12210              		.align	2
 12211              	.LC147:
 12212 10dc 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12212      20494D55 
 12212      20256420 
 12212      636F6E66 
 12212      69677572 
 12213 10f7 00       		.align	2
 12214              	.LC148:
 12215 10f8 2575202D 		.ascii	"%u - SPI read delay:\000"
 12215      20535049 
 12215      20726561 
 12215      64206465 
 12215      6C61793A 
 12216 110d 000000   		.align	2
 12217              	.LC149:
 12218 1110 204E6F6E 		.ascii	" None\000"
 12218      6500
 12219 1116 0000     		.align	2
 12220              	.LC150:
 12221 1118 204C6F77 		.ascii	" Low\000"
 12221      00
 12222 111d 000000   		.align	2
 12223              	.LC151:
 12224 1120 20486967 		.ascii	" High\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 276


 12224      6800
 12225 1126 0000     		.align	2
 12226              	.LC143:
 12227 1128 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12227      6572206F 
 12227      6620636F 
 12227      6E6E6563 
 12227      74656420 
 12228 1142 0000     		.align	2
 12229              	.LC144:
 12230 1144 4D616720 		.ascii	"Mag cal parameters:\000"
 12230      63616C20 
 12230      70617261 
 12230      6D657465 
 12230      72733A00 
 12231              		.section	.text.get_IMU_param_list,"ax",%progbits
 12232              		.align	2
 12233              		.global	get_IMU_param_list
 12234              		.thumb
 12235              		.thumb_func
 12236              		.type	get_IMU_param_list, %function
 12237              	get_IMU_param_list:
 12238              	.LFB70:
1634:..\src/command_processing.c **** 
1635:..\src/command_processing.c **** //==============================================================================
1636:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1637:..\src/command_processing.c **** //==============================================================================
1638:..\src/command_processing.c **** 
1639:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1640:..\src/command_processing.c **** {
 12239              		.loc 1 1640 0
 12240              		.cfi_startproc
 12241              		@ args = 0, pretend = 0, frame = 1704
 12242              		@ frame_needed = 1, uses_anonymous_args = 0
 12243 0000 B0B5     		push	{r4, r5, r7, lr}
 12244              		.cfi_def_cfa_offset 16
 12245              		.cfi_offset 4, -16
 12246              		.cfi_offset 5, -12
 12247              		.cfi_offset 7, -8
 12248              		.cfi_offset 14, -4
 12249 0002 ADF5D56D 		sub	sp, sp, #1704
 12250              		.cfi_def_cfa_offset 1720
 12251 0006 00AF     		add	r7, sp, #0
 12252              		.cfi_def_cfa_register 7
 12253 0008 0246     		mov	r2, r0
 12254 000a BB1D     		adds	r3, r7, #6
 12255 000c 1A80     		strh	r2, [r3]	@ movhi
1641:..\src/command_processing.c ****     //Package to be sent variables
1642:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12256              		.loc 1 1642 0
 12257 000e 07F58A73 		add	r3, r7, #276
 12258 0012 0022     		movs	r2, #0
 12259 0014 1A60     		str	r2, [r3]
 12260 0016 0433     		adds	r3, r3, #4
 12261 0018 40F27552 		movw	r2, #1397
 12262 001c 0021     		movs	r1, #0
 12263 001e 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 277


 12264 0020 FFF7FEFF 		bl	memset
1643:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1644:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1645:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1646:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1647:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1648:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1649:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12265              		.loc 1 1649 0
 12266 0024 0723     		movs	r3, #7
 12267 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1650:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12268              		.loc 1 1650 0
 12269 002a 0023     		movs	r3, #0
 12270 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1651:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12271              		.loc 1 1651 0
 12272 0030 0223     		movs	r3, #2
 12273 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1652:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12274              		.loc 1 1652 0
 12275 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12276 003a 5A1C     		adds	r2, r3, #1
1653:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12277              		.loc 1 1653 0
 12278 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12279 0040 1344     		add	r3, r3, r2
1654:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12280              		.loc 1 1654 0
 12281 0042 0133     		adds	r3, r3, #1
1652:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12282              		.loc 1 1652 0
 12283 0044 9AB2     		uxth	r2, r3
 12284 0046 D24B     		ldr	r3, .L548
 12285 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12286 004a 9BB2     		uxth	r3, r3
 12287 004c 1344     		add	r3, r3, r2
 12288 004e 9BB2     		uxth	r3, r3
 12289 0050 1A46     		mov	r2, r3	@ movhi
 12290 0052 9200     		lsls	r2, r2, #2
 12291 0054 1344     		add	r3, r3, r2
 12292 0056 1A46     		mov	r2, r3	@ movhi
 12293 0058 9100     		lsls	r1, r2, #2
 12294 005a 1A46     		mov	r2, r3	@ movhi
 12295 005c 0B46     		mov	r3, r1	@ movhi
 12296 005e 1344     		add	r3, r3, r2
 12297 0060 5B00     		lsls	r3, r3, #1
 12298 0062 9BB2     		uxth	r3, r3
 12299 0064 FB33     		adds	r3, r3, #251
 12300 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1655:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1656:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1657:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1658:..\src/command_processing.c **** 
1659:..\src/command_processing.c ****     //Auxiliary variables
1660:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1661:..\src/command_processing.c ****     uint16 start_byte = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 278


 12301              		.loc 1 1661 0
 12302 006a 0023     		movs	r3, #0
 12303 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1662:..\src/command_processing.c **** 
1663:..\src/command_processing.c ****     //Parameters menu string definitions
1664:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12304              		.loc 1 1664 0
 12305 0070 07F1F803 		add	r3, r7, #248
 12306 0074 C74A     		ldr	r2, .L548+4
 12307 0076 1C46     		mov	r4, r3
 12308 0078 1546     		mov	r5, r2
 12309 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12310 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12311 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12312 0082 03C4     		stmia	r4!, {r0, r1}
 12313 0084 2280     		strh	r2, [r4]	@ movhi
1665:..\src/command_processing.c ****     char ids_str[11]            = "";
 12314              		.loc 1 1665 0
 12315 0086 07F1EC03 		add	r3, r7, #236
 12316 008a 0022     		movs	r2, #0
 12317 008c 1A60     		str	r2, [r3]
 12318 008e 0433     		adds	r3, r3, #4
 12319 0090 0022     		movs	r2, #0
 12320 0092 1A60     		str	r2, [r3]
 12321 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1666:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12322              		.loc 1 1666 0
 12323 0098 07F1D803 		add	r3, r7, #216
 12324 009c BE4A     		ldr	r2, .L548+8
 12325 009e 1C46     		mov	r4, r3
 12326 00a0 1546     		mov	r5, r2
 12327 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12328 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12329 00a6 2B68     		ldr	r3, [r5]
 12330 00a8 2360     		str	r3, [r4]
1667:..\src/command_processing.c ****     char id_str[16]             = "";
 12331              		.loc 1 1667 0
 12332 00aa 07F1C803 		add	r3, r7, #200
 12333 00ae 0022     		movs	r2, #0
 12334 00b0 1A60     		str	r2, [r3]
 12335 00b2 0433     		adds	r3, r3, #4
 12336 00b4 0022     		movs	r2, #0
 12337 00b6 1A60     		str	r2, [r3]
 12338 00b8 5A60     		str	r2, [r3, #4]
 12339 00ba 9A60     		str	r2, [r3, #8]
1668:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12340              		.loc 1 1668 0
 12341 00bc 07F19C03 		add	r3, r7, #156
 12342 00c0 0022     		movs	r2, #0
 12343 00c2 1A60     		str	r2, [r3]
 12344 00c4 0433     		adds	r3, r3, #4
 12345 00c6 2622     		movs	r2, #38
 12346 00c8 0021     		movs	r1, #0
 12347 00ca 1846     		mov	r0, r3
 12348 00cc FFF7FEFF 		bl	memset
1669:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12349              		.loc 1 1669 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 279


 12350 00d0 07F18003 		add	r3, r7, #128
 12351 00d4 0022     		movs	r2, #0
 12352 00d6 1A60     		str	r2, [r3]
 12353 00d8 0433     		adds	r3, r3, #4
 12354 00da 0022     		movs	r2, #0
 12355 00dc 1A60     		str	r2, [r3]
 12356 00de 5A60     		str	r2, [r3, #4]
 12357 00e0 9A60     		str	r2, [r3, #8]
 12358 00e2 DA60     		str	r2, [r3, #12]
 12359 00e4 1A61     		str	r2, [r3, #16]
 12360 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1670:..\src/command_processing.c ****     
1671:..\src/command_processing.c ****     //Strings lenghts
1672:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12361              		.loc 1 1672 0
 12362 00e8 07F1C803 		add	r3, r7, #200
 12363 00ec 1846     		mov	r0, r3
 12364 00ee FFF7FEFF 		bl	strlen
 12365 00f2 0346     		mov	r3, r0
 12366 00f4 87F89336 		strb	r3, [r7, #1683]
1673:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12367              		.loc 1 1673 0
 12368 00f8 07F1F803 		add	r3, r7, #248
 12369 00fc 1846     		mov	r0, r3
 12370 00fe FFF7FEFF 		bl	strlen
 12371 0102 0346     		mov	r3, r0
 12372 0104 87F89236 		strb	r3, [r7, #1682]
1674:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12373              		.loc 1 1674 0
 12374 0108 07F1EC03 		add	r3, r7, #236
 12375 010c 1846     		mov	r0, r3
 12376 010e FFF7FEFF 		bl	strlen
 12377 0112 0346     		mov	r3, r0
 12378 0114 87F89136 		strb	r3, [r7, #1681]
1675:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12379              		.loc 1 1675 0
 12380 0118 07F1D803 		add	r3, r7, #216
 12381 011c 1846     		mov	r0, r3
 12382 011e FFF7FEFF 		bl	strlen
 12383 0122 0346     		mov	r3, r0
 12384 0124 87F89036 		strb	r3, [r7, #1680]
1676:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12385              		.loc 1 1676 0
 12386 0128 07F19C03 		add	r3, r7, #156
 12387 012c 1846     		mov	r0, r3
 12388 012e FFF7FEFF 		bl	strlen
 12389 0132 0346     		mov	r3, r0
 12390 0134 87F88F36 		strb	r3, [r7, #1679]
1677:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12391              		.loc 1 1677 0
 12392 0138 07F18003 		add	r3, r7, #128
 12393 013c 1846     		mov	r0, r3
 12394 013e FFF7FEFF 		bl	strlen
 12395 0142 0346     		mov	r3, r0
 12396 0144 87F89D36 		strb	r3, [r7, #1693]
1678:..\src/command_processing.c ****     
1679:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 280


 12397              		.loc 1 1679 0
 12398 0148 07F10803 		add	r3, r7, #8
 12399 014c 0022     		movs	r2, #0
 12400 014e 1A60     		str	r2, [r3]
 12401 0150 0433     		adds	r3, r3, #4
 12402 0152 7222     		movs	r2, #114
 12403 0154 0021     		movs	r1, #0
 12404 0156 1846     		mov	r0, r3
 12405 0158 FFF7FEFF 		bl	memset
1680:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1681:..\src/command_processing.c ****  
1682:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12406              		.loc 1 1682 0
 12407 015c 07F10800 		add	r0, r7, #8
 12408 0160 6423     		movs	r3, #100
 12409 0162 0A22     		movs	r2, #10
 12410 0164 8D49     		ldr	r1, .L548+12
 12411 0166 FFF7FEFF 		bl	sprintf
1683:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12412              		.loc 1 1683 0
 12413 016a 07F10803 		add	r3, r7, #8
 12414 016e 1846     		mov	r0, r3
 12415 0170 FFF7FEFF 		bl	strlen
 12416 0174 0346     		mov	r3, r0
 12417 0176 87F88E36 		strb	r3, [r7, #1678]
1684:..\src/command_processing.c **** 
1685:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1686:..\src/command_processing.c ****     // update packet_length
1687:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12418              		.loc 1 1687 0
 12419 017a 854B     		ldr	r3, .L548
 12420 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12421 017e 5B08     		lsrs	r3, r3, #1
 12422 0180 DBB2     		uxtb	r3, r3
 12423 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1688:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12424              		.loc 1 1688 0
 12425 0186 824B     		ldr	r3, .L548
 12426 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12427 018a 1A46     		mov	r2, r3
 12428 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12429 0190 5B00     		lsls	r3, r3, #1
 12430 0192 D31A     		subs	r3, r2, r3
 12431 0194 002B     		cmp	r3, #0
 12432 0196 04DD     		ble	.L503
 12433              		.loc 1 1688 0 is_stmt 0 discriminator 1
 12434 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12435 019c 0133     		adds	r3, r3, #1
 12436 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12437              	.L503:
1689:..\src/command_processing.c ****     
1690:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12438              		.loc 1 1690 0 is_stmt 1
 12439 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12440 01a6 5A1C     		adds	r2, r3, #1
1691:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12441              		.loc 1 1691 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 281


 12442 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12443 01ac 1344     		add	r3, r3, r2
1692:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12444              		.loc 1 1692 0
 12445 01ae 0133     		adds	r3, r3, #1
1690:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12446              		.loc 1 1690 0
 12447 01b0 9AB2     		uxth	r2, r3
 12448 01b2 774B     		ldr	r3, .L548
 12449 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12450 01b6 9BB2     		uxth	r3, r3
 12451 01b8 1344     		add	r3, r3, r2
 12452 01ba 9BB2     		uxth	r3, r3
 12453 01bc 1A46     		mov	r2, r3	@ movhi
 12454 01be 9200     		lsls	r2, r2, #2
 12455 01c0 1344     		add	r3, r3, r2
 12456 01c2 1A46     		mov	r2, r3	@ movhi
 12457 01c4 9100     		lsls	r1, r2, #2
 12458 01c6 1A46     		mov	r2, r3	@ movhi
 12459 01c8 0B46     		mov	r3, r1	@ movhi
 12460 01ca 1344     		add	r3, r3, r2
 12461 01cc 5B00     		lsls	r3, r3, #1
 12462 01ce 9BB2     		uxth	r3, r3
 12463 01d0 C933     		adds	r3, r3, #201
 12464 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1693:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1694:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1695:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1696:..\src/command_processing.c **** 
1697:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12465              		.loc 1 1697 0
 12466 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12467 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12468 01de 1344     		add	r3, r3, r2
 12469 01e0 9BB2     		uxth	r3, r3
 12470 01e2 0333     		adds	r3, r3, #3
 12471 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1698:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12472              		.loc 1 1698 0
 12473 01e8 07F58A73 		add	r3, r7, #276
 12474 01ec A222     		movs	r2, #162
 12475 01ee 1A70     		strb	r2, [r3]
1699:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12476              		.loc 1 1699 0
 12477 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12478 01f4 DAB2     		uxtb	r2, r3
 12479 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12480 01fa DBB2     		uxtb	r3, r3
 12481 01fc 1344     		add	r3, r3, r2
 12482 01fe DAB2     		uxtb	r2, r3
 12483 0200 634B     		ldr	r3, .L548
 12484 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12485 0204 1344     		add	r3, r3, r2
 12486 0206 DBB2     		uxtb	r3, r3
 12487 0208 0333     		adds	r3, r3, #3
 12488 020a DAB2     		uxtb	r2, r3
 12489 020c 07F58A73 		add	r3, r7, #276
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 282


 12490 0210 5A70     		strb	r2, [r3, #1]
1700:..\src/command_processing.c **** 
1701:..\src/command_processing.c ****     switch(index) {
 12491              		.loc 1 1701 0
 12492 0212 BB1D     		adds	r3, r7, #6
 12493 0214 1B88     		ldrh	r3, [r3]
 12494 0216 002B     		cmp	r3, #0
 12495 0218 40F0D084 		bne	.L546
1702:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1703:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1704:..\src/command_processing.c ****             start_byte = 0;
 12496              		.loc 1 1704 0
 12497 021c 0023     		movs	r3, #0
 12498 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1705:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12499              		.loc 1 1705 0
 12500 0222 07F58A73 		add	r3, r7, #276
 12501 0226 0222     		movs	r2, #2
 12502 0228 9A70     		strb	r2, [r3, #2]
1706:..\src/command_processing.c ****             packet_data[3] = 1;
 12503              		.loc 1 1706 0
 12504 022a 07F58A73 		add	r3, r7, #276
 12505 022e 0122     		movs	r2, #1
 12506 0230 DA70     		strb	r2, [r3, #3]
1707:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12507              		.loc 1 1707 0
 12508 0232 574B     		ldr	r3, .L548
 12509 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12510 0236 07F58A73 		add	r3, r7, #276
 12511 023a 1A71     		strb	r2, [r3, #4]
1708:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12512              		.loc 1 1708 0
 12513 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12514 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12515 0244 15E0     		b	.L506
 12516              	.L507:
1709:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12517              		.loc 1 1709 0 discriminator 3
 12518 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12519 024a 5A1D     		adds	r2, r3, #5
 12520 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12521 0250 D31A     		subs	r3, r2, r3
 12522 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12523 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12524 025a 8A1A     		subs	r2, r1, r2
 12525 025c 07F1F801 		add	r1, r7, #248
 12526 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12527 0262 07F58A72 		add	r2, r7, #276
 12528 0266 D154     		strb	r1, [r2, r3]
1708:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12529              		.loc 1 1708 0 discriminator 3
 12530 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12531 026c 013B     		subs	r3, r3, #1
 12532 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12533              	.L506:
1708:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12534              		.loc 1 1708 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 283


 12535 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12536 0276 002B     		cmp	r3, #0
 12537 0278 E5D1     		bne	.L507
1710:..\src/command_processing.c ****                 
1711:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1712:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12538              		.loc 1 1712 0 is_stmt 1
 12539 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12540 027e 3233     		adds	r3, r3, #50
 12541 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1713:..\src/command_processing.c ****             i = 0;
 12542              		.loc 1 1713 0
 12543 0284 0023     		movs	r3, #0
 12544 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1714:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12545              		.loc 1 1714 0
 12546 028a 0023     		movs	r3, #0
 12547 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12548 0290 B2E0     		b	.L508
 12549              	.L515:
1715:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12550              		.loc 1 1715 0
 12551 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12552 0296 07F1EC03 		add	r3, r7, #236
 12553 029a 4149     		ldr	r1, .L548+16
 12554 029c 1846     		mov	r0, r3
 12555 029e FFF7FEFF 		bl	sprintf
1716:..\src/command_processing.c ****                 h = 4;
 12556              		.loc 1 1716 0
 12557 02a2 0423     		movs	r3, #4
 12558 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1717:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12559              		.loc 1 1717 0
 12560 02a8 07F1EC03 		add	r3, r7, #236
 12561 02ac 1846     		mov	r0, r3
 12562 02ae FFF7FEFF 		bl	strlen
 12563 02b2 0346     		mov	r3, r0
 12564 02b4 87F89136 		strb	r3, [r7, #1681]
1718:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12565              		.loc 1 1718 0
 12566 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12567 02bc 9A1C     		adds	r2, r3, #2
 12568 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12569 02c2 3221     		movs	r1, #50
 12570 02c4 01FB03F3 		mul	r3, r1, r3
 12571 02c8 1344     		add	r3, r3, r2
 12572 02ca 07F58A72 		add	r2, r7, #276
 12573 02ce 0221     		movs	r1, #2
 12574 02d0 D154     		strb	r1, [r2, r3]
1719:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12575              		.loc 1 1719 0
 12576 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12577 02d6 DA1C     		adds	r2, r3, #3
 12578 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12579 02dc 3221     		movs	r1, #50
 12580 02de 01FB03F3 		mul	r3, r1, r3
 12581 02e2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 284


 12582 02e4 07F58A72 		add	r2, r7, #276
 12583 02e8 0321     		movs	r1, #3
 12584 02ea D154     		strb	r1, [r2, r3]
1720:..\src/command_processing.c ****                 
1721:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12585              		.loc 1 1721 0
 12586 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12587 02f0 1A46     		mov	r2, r3	@ movhi
 12588 02f2 5200     		lsls	r2, r2, #1
 12589 02f4 1344     		add	r3, r3, r2
 12590 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12591 02fa 39E0     		b	.L509
 12592              	.L512:
1722:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12593              		.loc 1 1722 0
 12594 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12595 0300 284A     		ldr	r2, .L548+20
 12596 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12597 0304 9BB2     		uxth	r3, r3
 12598 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12599 030a 9A42     		cmp	r2, r3
 12600 030c 17D1     		bne	.L510
1723:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12601              		.loc 1 1723 0
 12602 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12603 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12604 0316 1A44     		add	r2, r2, r3
 12605 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12606 031c 3221     		movs	r1, #50
 12607 031e 01FB03F3 		mul	r3, r1, r3
 12608 0322 1344     		add	r3, r3, r2
 12609 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12610 0328 1E49     		ldr	r1, .L548+20
 12611 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12612 032c 07F58A72 		add	r2, r7, #276
 12613 0330 D154     		strb	r1, [r2, r3]
1724:..\src/command_processing.c ****                         i++;
 12614              		.loc 1 1724 0
 12615 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12616 0336 0133     		adds	r3, r3, #1
 12617 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12618 033c 0EE0     		b	.L511
 12619              	.L510:
1725:..\src/command_processing.c ****                     } 
1726:..\src/command_processing.c ****                     else {
1727:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12620              		.loc 1 1727 0
 12621 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12622 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12623 0346 1A44     		add	r2, r2, r3
 12624 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12625 034c 3221     		movs	r1, #50
 12626 034e 01FB03F3 		mul	r3, r1, r3
 12627 0352 1344     		add	r3, r3, r2
 12628 0354 07F58A72 		add	r2, r7, #276
 12629 0358 FF21     		movs	r1, #255
 12630 035a D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 285


 12631              	.L511:
1728:..\src/command_processing.c ****                     }
1729:..\src/command_processing.c ****                     h++;
 12632              		.loc 1 1729 0 discriminator 2
 12633 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12634 0360 0133     		adds	r3, r3, #1
 12635 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1721:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12636              		.loc 1 1721 0 discriminator 2
 12637 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12638 036a 0133     		adds	r3, r3, #1
 12639 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12640              	.L509:
1721:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12641              		.loc 1 1721 0 is_stmt 0 discriminator 1
 12642 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12643 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12644 0378 1346     		mov	r3, r2
 12645 037a 5B00     		lsls	r3, r3, #1
 12646 037c 1344     		add	r3, r3, r2
 12647 037e 0233     		adds	r3, r3, #2
 12648 0380 9942     		cmp	r1, r3
 12649 0382 BBDD     		ble	.L512
1730:..\src/command_processing.c ****                 }
1731:..\src/command_processing.c **** 
1732:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1733:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12650              		.loc 1 1733 0 is_stmt 1
 12651 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12652 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12653 038c 2BE0     		b	.L513
 12654              	.L549:
 12655 038e 00BF     		.align	2
 12656              	.L548:
 12657 0390 00000000 		.word	N_IMU_Connected
 12658 0394 28110000 		.word	.LC143
 12659 0398 44110000 		.word	.LC144
 12660 039c 88020000 		.word	.LC130
 12661 03a0 C0100000 		.word	.LC145
 12662 03a4 00000000 		.word	IMU_connected
 12663              	.L514:
1734:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12664              		.loc 1 1734 0 discriminator 3
 12665 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12666 03ac DA1D     		adds	r2, r3, #7
 12667 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12668 03b2 3221     		movs	r1, #50
 12669 03b4 01FB03F3 		mul	r3, r1, r3
 12670 03b8 1A44     		add	r2, r2, r3
 12671 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12672 03be 1A44     		add	r2, r2, r3
 12673 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12674 03c4 D31A     		subs	r3, r2, r3
 12675 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12676 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12677 03ce 8A1A     		subs	r2, r1, r2
 12678 03d0 07F1EC01 		add	r1, r7, #236
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 286


 12679 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12680 03d6 07F58A72 		add	r2, r7, #276
 12681 03da D154     		strb	r1, [r2, r3]
1733:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12682              		.loc 1 1733 0 discriminator 3
 12683 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12684 03e0 013B     		subs	r3, r3, #1
 12685 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12686              	.L513:
1733:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12687              		.loc 1 1733 0 is_stmt 0 discriminator 1
 12688 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12689 03ea 002B     		cmp	r3, #0
 12690 03ec DCD1     		bne	.L514
1714:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12691              		.loc 1 1714 0 is_stmt 1 discriminator 2
 12692 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12693 03f2 0133     		adds	r3, r3, #1
 12694 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12695              	.L508:
1714:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12696              		.loc 1 1714 0 is_stmt 0 discriminator 1
 12697 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12698 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12699 0400 9A42     		cmp	r2, r3
 12700 0402 FFF446AF 		bcc	.L515
1735:..\src/command_processing.c ****             }
1736:..\src/command_processing.c ****             
1737:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1738:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12701              		.loc 1 1738 0 is_stmt 1
 12702 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12703 040a 1A46     		mov	r2, r3	@ movhi
 12704 040c 9200     		lsls	r2, r2, #2
 12705 040e 1344     		add	r3, r3, r2
 12706 0410 1A46     		mov	r2, r3	@ movhi
 12707 0412 9100     		lsls	r1, r2, #2
 12708 0414 1A46     		mov	r2, r3	@ movhi
 12709 0416 0B46     		mov	r3, r1	@ movhi
 12710 0418 1344     		add	r3, r3, r2
 12711 041a 5B00     		lsls	r3, r3, #1
 12712 041c 9AB2     		uxth	r2, r3
 12713 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12714 0422 1344     		add	r3, r3, r2
 12715 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1739:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12716              		.loc 1 1739 0
 12717 0428 0023     		movs	r3, #0
 12718 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12719 042e 1FE1     		b	.L516
 12720              	.L523:
1740:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12721              		.loc 1 1740 0
 12722 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12723 0434 9A1C     		adds	r2, r3, #2
 12724 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12725 043a 3221     		movs	r1, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 287


 12726 043c 01FB03F3 		mul	r3, r1, r3
 12727 0440 1344     		add	r3, r3, r2
 12728 0442 07F58A72 		add	r2, r7, #276
 12729 0446 0221     		movs	r1, #2
 12730 0448 D154     		strb	r1, [r2, r3]
1741:..\src/command_processing.c ****                 
1742:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12731              		.loc 1 1742 0
 12732 044a B7F89436 		ldrh	r3, [r7, #1684]
 12733 044e DA1C     		adds	r2, r3, #3
 12734 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12735 0454 3221     		movs	r1, #50
 12736 0456 01FB03F3 		mul	r3, r1, r3
 12737 045a 1344     		add	r3, r3, r2
 12738 045c 07F58A72 		add	r2, r7, #276
 12739 0460 0321     		movs	r1, #3
 12740 0462 D154     		strb	r1, [r2, r3]
1743:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12741              		.loc 1 1743 0
 12742 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12743 0468 1A1D     		adds	r2, r3, #4
 12744 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12745 046e 3221     		movs	r1, #50
 12746 0470 01FB03F3 		mul	r3, r1, r3
 12747 0474 1A44     		add	r2, r2, r3
 12748 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12749 047a 5B00     		lsls	r3, r3, #1
 12750 047c B249     		ldr	r1, .L550
 12751 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12752 0480 1846     		mov	r0, r3
 12753 0482 B249     		ldr	r1, .L550+4
 12754 0484 0346     		mov	r3, r0
 12755 0486 5B00     		lsls	r3, r3, #1
 12756 0488 0344     		add	r3, r3, r0
 12757 048a 0B44     		add	r3, r3, r1
 12758 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12759 048e 07F58A73 		add	r3, r7, #276
 12760 0492 9954     		strb	r1, [r3, r2]
1744:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12761              		.loc 1 1744 0
 12762 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12763 0498 5A1D     		adds	r2, r3, #5
 12764 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12765 049e 3221     		movs	r1, #50
 12766 04a0 01FB03F3 		mul	r3, r1, r3
 12767 04a4 1A44     		add	r2, r2, r3
 12768 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12769 04aa 5B00     		lsls	r3, r3, #1
 12770 04ac A649     		ldr	r1, .L550
 12771 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12772 04b0 1846     		mov	r0, r3
 12773 04b2 A649     		ldr	r1, .L550+4
 12774 04b4 0346     		mov	r3, r0
 12775 04b6 5B00     		lsls	r3, r3, #1
 12776 04b8 0344     		add	r3, r3, r0
 12777 04ba 0B44     		add	r3, r3, r1
 12778 04bc 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 288


 12779 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12780 04c0 07F58A73 		add	r3, r7, #276
 12781 04c4 9954     		strb	r1, [r3, r2]
1745:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12782              		.loc 1 1745 0
 12783 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12784 04ca 9A1D     		adds	r2, r3, #6
 12785 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12786 04d0 3221     		movs	r1, #50
 12787 04d2 01FB03F3 		mul	r3, r1, r3
 12788 04d6 1A44     		add	r2, r2, r3
 12789 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12790 04dc 5B00     		lsls	r3, r3, #1
 12791 04de 9A49     		ldr	r1, .L550
 12792 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12793 04e2 1846     		mov	r0, r3
 12794 04e4 9949     		ldr	r1, .L550+4
 12795 04e6 0346     		mov	r3, r0
 12796 04e8 5B00     		lsls	r3, r3, #1
 12797 04ea 0344     		add	r3, r3, r0
 12798 04ec 0B44     		add	r3, r3, r1
 12799 04ee 0233     		adds	r3, r3, #2
 12800 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12801 04f2 07F58A73 		add	r3, r7, #276
 12802 04f6 9954     		strb	r1, [r3, r2]
1746:..\src/command_processing.c ****                 
1747:..\src/command_processing.c ****                 // check if there is a second value
1748:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12803              		.loc 1 1748 0
 12804 04f8 954B     		ldr	r3, .L550+8
 12805 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12806 04fc 1A46     		mov	r2, r3
 12807 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12808 0502 0133     		adds	r3, r3, #1
 12809 0504 5B00     		lsls	r3, r3, #1
 12810 0506 9A42     		cmp	r2, r3
 12811 0508 28DA     		bge	.L517
1749:..\src/command_processing.c ****                     // there is only one value
1750:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12812              		.loc 1 1750 0
 12813 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12814 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12815 0512 1EE0     		b	.L518
 12816              	.L519:
1751:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12817              		.loc 1 1751 0 discriminator 3
 12818 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12819 0518 DA1D     		adds	r2, r3, #7
 12820 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12821 051e 3221     		movs	r1, #50
 12822 0520 01FB03F3 		mul	r3, r1, r3
 12823 0524 1A44     		add	r2, r2, r3
 12824 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12825 052a 1A44     		add	r2, r2, r3
 12826 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12827 0530 D31A     		subs	r3, r2, r3
 12828 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 289


 12829 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12830 053a 8A1A     		subs	r2, r1, r2
 12831 053c 07F1D801 		add	r1, r7, #216
 12832 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12833 0542 07F58A72 		add	r2, r7, #276
 12834 0546 D154     		strb	r1, [r2, r3]
1750:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12835              		.loc 1 1750 0 discriminator 3
 12836 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12837 054c 013B     		subs	r3, r3, #1
 12838 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12839              	.L518:
1750:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12840              		.loc 1 1750 0 is_stmt 0 discriminator 1
 12841 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12842 0556 002B     		cmp	r3, #0
 12843 0558 DCD1     		bne	.L519
 12844 055a 84E0     		b	.L520
 12845              	.L517:
1752:..\src/command_processing.c ****                 }
1753:..\src/command_processing.c ****                 else {
1754:..\src/command_processing.c ****                     // fill the second value
1755:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12846              		.loc 1 1755 0 is_stmt 1
 12847 055c B7F89436 		ldrh	r3, [r7, #1684]
 12848 0560 DA1C     		adds	r2, r3, #3
 12849 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12850 0566 3221     		movs	r1, #50
 12851 0568 01FB03F3 		mul	r3, r1, r3
 12852 056c 1344     		add	r3, r3, r2
 12853 056e 07F58A72 		add	r2, r7, #276
 12854 0572 0621     		movs	r1, #6
 12855 0574 D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12856              		.loc 1 1756 0
 12857 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12858 057a DA1D     		adds	r2, r3, #7
 12859 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12860 0580 3221     		movs	r1, #50
 12861 0582 01FB03F3 		mul	r3, r1, r3
 12862 0586 1A44     		add	r2, r2, r3
 12863 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12864 058c 5B00     		lsls	r3, r3, #1
 12865 058e 0133     		adds	r3, r3, #1
 12866 0590 6D49     		ldr	r1, .L550
 12867 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12868 0594 1846     		mov	r0, r3
 12869 0596 6D49     		ldr	r1, .L550+4
 12870 0598 0346     		mov	r3, r0
 12871 059a 5B00     		lsls	r3, r3, #1
 12872 059c 0344     		add	r3, r3, r0
 12873 059e 0B44     		add	r3, r3, r1
 12874 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12875 05a2 07F58A73 		add	r3, r7, #276
 12876 05a6 9954     		strb	r1, [r3, r2]
1757:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12877              		.loc 1 1757 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 290


 12878 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12879 05ac 03F10802 		add	r2, r3, #8
 12880 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12881 05b4 3221     		movs	r1, #50
 12882 05b6 01FB03F3 		mul	r3, r1, r3
 12883 05ba 1A44     		add	r2, r2, r3
 12884 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12885 05c0 5B00     		lsls	r3, r3, #1
 12886 05c2 0133     		adds	r3, r3, #1
 12887 05c4 6049     		ldr	r1, .L550
 12888 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12889 05c8 1846     		mov	r0, r3
 12890 05ca 6049     		ldr	r1, .L550+4
 12891 05cc 0346     		mov	r3, r0
 12892 05ce 5B00     		lsls	r3, r3, #1
 12893 05d0 0344     		add	r3, r3, r0
 12894 05d2 0B44     		add	r3, r3, r1
 12895 05d4 0133     		adds	r3, r3, #1
 12896 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12897 05d8 07F58A73 		add	r3, r7, #276
 12898 05dc 9954     		strb	r1, [r3, r2]
1758:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12899              		.loc 1 1758 0
 12900 05de B7F89436 		ldrh	r3, [r7, #1684]
 12901 05e2 03F10902 		add	r2, r3, #9
 12902 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12903 05ea 3221     		movs	r1, #50
 12904 05ec 01FB03F3 		mul	r3, r1, r3
 12905 05f0 1A44     		add	r2, r2, r3
 12906 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12907 05f6 5B00     		lsls	r3, r3, #1
 12908 05f8 0133     		adds	r3, r3, #1
 12909 05fa 5349     		ldr	r1, .L550
 12910 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12911 05fe 1846     		mov	r0, r3
 12912 0600 5249     		ldr	r1, .L550+4
 12913 0602 0346     		mov	r3, r0
 12914 0604 5B00     		lsls	r3, r3, #1
 12915 0606 0344     		add	r3, r3, r0
 12916 0608 0B44     		add	r3, r3, r1
 12917 060a 0233     		adds	r3, r3, #2
 12918 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12919 060e 07F58A73 		add	r3, r7, #276
 12920 0612 9954     		strb	r1, [r3, r2]
1759:..\src/command_processing.c ****                 
1760:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12921              		.loc 1 1760 0
 12922 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12923 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12924 061c 1FE0     		b	.L521
 12925              	.L522:
1761:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12926              		.loc 1 1761 0 discriminator 3
 12927 061e B7F89436 		ldrh	r3, [r7, #1684]
 12928 0622 03F10A02 		add	r2, r3, #10
 12929 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12930 062a 3221     		movs	r1, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 291


 12931 062c 01FB03F3 		mul	r3, r1, r3
 12932 0630 1A44     		add	r2, r2, r3
 12933 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12934 0636 1A44     		add	r2, r2, r3
 12935 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12936 063c D31A     		subs	r3, r2, r3
 12937 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12938 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12939 0646 8A1A     		subs	r2, r1, r2
 12940 0648 07F1D801 		add	r1, r7, #216
 12941 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12942 064e 07F58A72 		add	r2, r7, #276
 12943 0652 D154     		strb	r1, [r2, r3]
1760:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12944              		.loc 1 1760 0 discriminator 3
 12945 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12946 0658 013B     		subs	r3, r3, #1
 12947 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12948              	.L521:
1760:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12949              		.loc 1 1760 0 is_stmt 0 discriminator 1
 12950 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12951 0662 002B     		cmp	r3, #0
 12952 0664 DBD1     		bne	.L522
 12953              	.L520:
1739:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12954              		.loc 1 1739 0 is_stmt 1 discriminator 2
 12955 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12956 066a 0133     		adds	r3, r3, #1
 12957 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12958              	.L516:
1739:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12959              		.loc 1 1739 0 is_stmt 0 discriminator 1
 12960 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12961 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12962 0678 9A42     		cmp	r2, r3
 12963 067a FFF4D9AE 		bcc	.L523
1762:..\src/command_processing.c ****                 }
1763:..\src/command_processing.c ****             }
1764:..\src/command_processing.c ****             
1765:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1766:..\src/command_processing.c ****             
1767:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12964              		.loc 1 1767 0 is_stmt 1
 12965 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12966 0682 1A46     		mov	r2, r3	@ movhi
 12967 0684 9200     		lsls	r2, r2, #2
 12968 0686 1344     		add	r3, r3, r2
 12969 0688 1A46     		mov	r2, r3	@ movhi
 12970 068a 9100     		lsls	r1, r2, #2
 12971 068c 1A46     		mov	r2, r3	@ movhi
 12972 068e 0B46     		mov	r3, r1	@ movhi
 12973 0690 1344     		add	r3, r3, r2
 12974 0692 5B00     		lsls	r3, r3, #1
 12975 0694 9AB2     		uxth	r2, r3
 12976 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12977 069a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 292


 12978 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1768:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12979              		.loc 1 1768 0
 12980 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12981 06a4 5A1E     		subs	r2, r3, #1
 12982 06a6 07F1C803 		add	r3, r7, #200
 12983 06aa 2A49     		ldr	r1, .L550+12
 12984 06ac 1846     		mov	r0, r3
 12985 06ae FFF7FEFF 		bl	sprintf
1769:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12986              		.loc 1 1769 0
 12987 06b2 07F1C803 		add	r3, r7, #200
 12988 06b6 1846     		mov	r0, r3
 12989 06b8 FFF7FEFF 		bl	strlen
 12990 06bc 0346     		mov	r3, r0
 12991 06be 87F89336 		strb	r3, [r7, #1683]
1770:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12992              		.loc 1 1770 0
 12993 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12994 06c6 0233     		adds	r3, r3, #2
 12995 06c8 07F58A72 		add	r2, r7, #276
 12996 06cc 0221     		movs	r1, #2
 12997 06ce D154     		strb	r1, [r2, r3]
1771:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12998              		.loc 1 1771 0
 12999 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 13000 06d4 0333     		adds	r3, r3, #3
 13001 06d6 07F58A72 		add	r2, r7, #276
 13002 06da 0121     		movs	r1, #1
 13003 06dc D154     		strb	r1, [r2, r3]
1772:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 13004              		.loc 1 1772 0
 13005 06de B7F89436 		ldrh	r3, [r7, #1684]
 13006 06e2 0433     		adds	r3, r3, #4
 13007 06e4 1C4A     		ldr	r2, .L550+16
 13008 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 13009 06ea 07F58A72 		add	r2, r7, #276
 13010 06ee D154     		strb	r1, [r2, r3]
1773:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13011              		.loc 1 1773 0
 13012 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13013 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13014 06f8 18E0     		b	.L524
 13015              	.L525:
1774:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 13016              		.loc 1 1774 0 discriminator 3
 13017 06fa B7F89436 		ldrh	r3, [r7, #1684]
 13018 06fe 5A1D     		adds	r2, r3, #5
 13019 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13020 0704 1A44     		add	r2, r2, r3
 13021 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 13022 070a D31A     		subs	r3, r2, r3
 13023 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 13024 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 13025 0714 8A1A     		subs	r2, r1, r2
 13026 0716 07F1C801 		add	r1, r7, #200
 13027 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 293


 13028 071c 07F58A72 		add	r2, r7, #276
 13029 0720 D154     		strb	r1, [r2, r3]
1773:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13030              		.loc 1 1773 0 discriminator 3
 13031 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 13032 0726 013B     		subs	r3, r3, #1
 13033 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13034              	.L524:
1773:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13035              		.loc 1 1773 0 is_stmt 0 discriminator 1
 13036 072c B7F8A436 		ldrh	r3, [r7, #1700]
 13037 0730 002B     		cmp	r3, #0
 13038 0732 E2D1     		bne	.L525
1775:..\src/command_processing.c ****                 
1776:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1777:..\src/command_processing.c ****             
1778:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13039              		.loc 1 1778 0 is_stmt 1
 13040 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13041 0738 3233     		adds	r3, r3, #50
 13042 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1779:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 13043              		.loc 1 1779 0
 13044 073e 0023     		movs	r3, #0
 13045 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13046 0744 38E1     		b	.L526
 13047              	.L551:
 13048 0746 00BF     		.align	2
 13049              	.L550:
 13050 0748 00000000 		.word	IMU_connected
 13051 074c 00000000 		.word	MagCal
 13052 0750 00000000 		.word	N_IMU_Connected
 13053 0754 CC100000 		.word	.LC146
 13054 0758 00000000 		.word	c_mem
 13055              	.L529:
1780:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13056              		.loc 1 1780 0
 13057 075c B7F89826 		ldrh	r2, [r7, #1688]
 13058 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13059 0764 D118     		adds	r1, r2, r3
 13060 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13061 076a D54A     		ldr	r2, .L552
 13062 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13063 076e 07F19C00 		add	r0, r7, #156
 13064 0772 0A46     		mov	r2, r1
 13065 0774 D349     		ldr	r1, .L552+4
 13066 0776 FFF7FEFF 		bl	sprintf
1781:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13067              		.loc 1 1781 0
 13068 077a 07F19C03 		add	r3, r7, #156
 13069 077e 1846     		mov	r0, r3
 13070 0780 FFF7FEFF 		bl	strlen
 13071 0784 0346     		mov	r3, r0
 13072 0786 87F88F36 		strb	r3, [r7, #1679]
1782:..\src/command_processing.c ****             
1783:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13073              		.loc 1 1783 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 294


 13074 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13075 078e 1A46     		mov	r2, r3	@ movhi
 13076 0790 9200     		lsls	r2, r2, #2
 13077 0792 1344     		add	r3, r3, r2
 13078 0794 1A46     		mov	r2, r3	@ movhi
 13079 0796 9100     		lsls	r1, r2, #2
 13080 0798 1A46     		mov	r2, r3	@ movhi
 13081 079a 0B46     		mov	r3, r1	@ movhi
 13082 079c 1344     		add	r3, r3, r2
 13083 079e 5B00     		lsls	r3, r3, #1
 13084 07a0 9AB2     		uxth	r2, r3
 13085 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13086 07a6 1344     		add	r3, r3, r2
 13087 07a8 9BB2     		uxth	r3, r3
 13088 07aa 0233     		adds	r3, r3, #2
 13089 07ac 9BB2     		uxth	r3, r3
 13090 07ae 1A46     		mov	r2, r3
 13091 07b0 07F58A73 		add	r3, r7, #276
 13092 07b4 0221     		movs	r1, #2
 13093 07b6 9954     		strb	r1, [r3, r2]
1784:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 13094              		.loc 1 1784 0
 13095 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13096 07bc 1A46     		mov	r2, r3	@ movhi
 13097 07be 9200     		lsls	r2, r2, #2
 13098 07c0 1344     		add	r3, r3, r2
 13099 07c2 1A46     		mov	r2, r3	@ movhi
 13100 07c4 9100     		lsls	r1, r2, #2
 13101 07c6 1A46     		mov	r2, r3	@ movhi
 13102 07c8 0B46     		mov	r3, r1	@ movhi
 13103 07ca 1344     		add	r3, r3, r2
 13104 07cc 5B00     		lsls	r3, r3, #1
 13105 07ce 9AB2     		uxth	r2, r3
 13106 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13107 07d4 1344     		add	r3, r3, r2
 13108 07d6 9BB2     		uxth	r3, r3
 13109 07d8 0333     		adds	r3, r3, #3
 13110 07da 9BB2     		uxth	r3, r3
 13111 07dc 1A46     		mov	r2, r3
 13112 07de 07F58A73 		add	r3, r7, #276
 13113 07e2 0521     		movs	r1, #5
 13114 07e4 9954     		strb	r1, [r3, r2]
1785:..\src/command_processing.c ****                 
1786:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13115              		.loc 1 1786 0
 13116 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13117 07ea 1A46     		mov	r2, r3	@ movhi
 13118 07ec 9200     		lsls	r2, r2, #2
 13119 07ee 1344     		add	r3, r3, r2
 13120 07f0 1A46     		mov	r2, r3	@ movhi
 13121 07f2 9100     		lsls	r1, r2, #2
 13122 07f4 1A46     		mov	r2, r3	@ movhi
 13123 07f6 0B46     		mov	r3, r1	@ movhi
 13124 07f8 1344     		add	r3, r3, r2
 13125 07fa 5B00     		lsls	r3, r3, #1
 13126 07fc 9AB2     		uxth	r2, r3
 13127 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 295


 13128 0802 1344     		add	r3, r3, r2
 13129 0804 9BB2     		uxth	r3, r3
 13130 0806 0433     		adds	r3, r3, #4
 13131 0808 9BB2     		uxth	r3, r3
 13132 080a 1846     		mov	r0, r3
 13133 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13134 0810 AB4A     		ldr	r2, .L552
 13135 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13136 0814 1946     		mov	r1, r3
 13137 0816 AC4A     		ldr	r2, .L552+8
 13138 0818 0B46     		mov	r3, r1
 13139 081a 9B00     		lsls	r3, r3, #2
 13140 081c 0B44     		add	r3, r3, r1
 13141 081e 1344     		add	r3, r3, r2
 13142 0820 03F20223 		addw	r3, r3, #514
 13143 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13144 0826 07F58A73 		add	r3, r7, #276
 13145 082a 1A54     		strb	r2, [r3, r0]
1787:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13146              		.loc 1 1787 0
 13147 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13148 0830 1A46     		mov	r2, r3	@ movhi
 13149 0832 9200     		lsls	r2, r2, #2
 13150 0834 1344     		add	r3, r3, r2
 13151 0836 1A46     		mov	r2, r3	@ movhi
 13152 0838 9100     		lsls	r1, r2, #2
 13153 083a 1A46     		mov	r2, r3	@ movhi
 13154 083c 0B46     		mov	r3, r1	@ movhi
 13155 083e 1344     		add	r3, r3, r2
 13156 0840 5B00     		lsls	r3, r3, #1
 13157 0842 9AB2     		uxth	r2, r3
 13158 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13159 0848 1344     		add	r3, r3, r2
 13160 084a 9BB2     		uxth	r3, r3
 13161 084c 0533     		adds	r3, r3, #5
 13162 084e 9BB2     		uxth	r3, r3
 13163 0850 1846     		mov	r0, r3
 13164 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13165 0856 9A4A     		ldr	r2, .L552
 13166 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13167 085a 1946     		mov	r1, r3
 13168 085c 9A4A     		ldr	r2, .L552+8
 13169 085e 0B46     		mov	r3, r1
 13170 0860 9B00     		lsls	r3, r3, #2
 13171 0862 0B44     		add	r3, r3, r1
 13172 0864 1344     		add	r3, r3, r2
 13173 0866 03F20323 		addw	r3, r3, #515
 13174 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13175 086c 07F58A73 		add	r3, r7, #276
 13176 0870 1A54     		strb	r2, [r3, r0]
1788:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13177              		.loc 1 1788 0
 13178 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13179 0876 1A46     		mov	r2, r3	@ movhi
 13180 0878 9200     		lsls	r2, r2, #2
 13181 087a 1344     		add	r3, r3, r2
 13182 087c 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 296


 13183 087e 9100     		lsls	r1, r2, #2
 13184 0880 1A46     		mov	r2, r3	@ movhi
 13185 0882 0B46     		mov	r3, r1	@ movhi
 13186 0884 1344     		add	r3, r3, r2
 13187 0886 5B00     		lsls	r3, r3, #1
 13188 0888 9AB2     		uxth	r2, r3
 13189 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13190 088e 1344     		add	r3, r3, r2
 13191 0890 9BB2     		uxth	r3, r3
 13192 0892 0633     		adds	r3, r3, #6
 13193 0894 9BB2     		uxth	r3, r3
 13194 0896 1846     		mov	r0, r3
 13195 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13196 089c 884A     		ldr	r2, .L552
 13197 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13198 08a0 1946     		mov	r1, r3
 13199 08a2 894A     		ldr	r2, .L552+8
 13200 08a4 0B46     		mov	r3, r1
 13201 08a6 9B00     		lsls	r3, r3, #2
 13202 08a8 0B44     		add	r3, r3, r1
 13203 08aa 1344     		add	r3, r3, r2
 13204 08ac 03F50173 		add	r3, r3, #516
 13205 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13206 08b2 07F58A73 		add	r3, r7, #276
 13207 08b6 1A54     		strb	r2, [r3, r0]
1789:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13208              		.loc 1 1789 0
 13209 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13210 08bc 1A46     		mov	r2, r3	@ movhi
 13211 08be 9200     		lsls	r2, r2, #2
 13212 08c0 1344     		add	r3, r3, r2
 13213 08c2 1A46     		mov	r2, r3	@ movhi
 13214 08c4 9100     		lsls	r1, r2, #2
 13215 08c6 1A46     		mov	r2, r3	@ movhi
 13216 08c8 0B46     		mov	r3, r1	@ movhi
 13217 08ca 1344     		add	r3, r3, r2
 13218 08cc 5B00     		lsls	r3, r3, #1
 13219 08ce 9AB2     		uxth	r2, r3
 13220 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13221 08d4 1344     		add	r3, r3, r2
 13222 08d6 9BB2     		uxth	r3, r3
 13223 08d8 0733     		adds	r3, r3, #7
 13224 08da 9BB2     		uxth	r3, r3
 13225 08dc 1846     		mov	r0, r3
 13226 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13227 08e2 774A     		ldr	r2, .L552
 13228 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13229 08e6 1946     		mov	r1, r3
 13230 08e8 774A     		ldr	r2, .L552+8
 13231 08ea 0B46     		mov	r3, r1
 13232 08ec 9B00     		lsls	r3, r3, #2
 13233 08ee 0B44     		add	r3, r3, r1
 13234 08f0 1344     		add	r3, r3, r2
 13235 08f2 03F20523 		addw	r3, r3, #517
 13236 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13237 08f8 07F58A73 		add	r3, r7, #276
 13238 08fc 1A54     		strb	r2, [r3, r0]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 297


1790:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13239              		.loc 1 1790 0
 13240 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13241 0902 1A46     		mov	r2, r3	@ movhi
 13242 0904 9200     		lsls	r2, r2, #2
 13243 0906 1344     		add	r3, r3, r2
 13244 0908 1A46     		mov	r2, r3	@ movhi
 13245 090a 9100     		lsls	r1, r2, #2
 13246 090c 1A46     		mov	r2, r3	@ movhi
 13247 090e 0B46     		mov	r3, r1	@ movhi
 13248 0910 1344     		add	r3, r3, r2
 13249 0912 5B00     		lsls	r3, r3, #1
 13250 0914 9AB2     		uxth	r2, r3
 13251 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13252 091a 1344     		add	r3, r3, r2
 13253 091c 9BB2     		uxth	r3, r3
 13254 091e 0833     		adds	r3, r3, #8
 13255 0920 9BB2     		uxth	r3, r3
 13256 0922 1846     		mov	r0, r3
 13257 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13258 0928 654A     		ldr	r2, .L552
 13259 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13260 092c 1946     		mov	r1, r3
 13261 092e 664A     		ldr	r2, .L552+8
 13262 0930 0B46     		mov	r3, r1
 13263 0932 9B00     		lsls	r3, r3, #2
 13264 0934 0B44     		add	r3, r3, r1
 13265 0936 1344     		add	r3, r3, r2
 13266 0938 03F20623 		addw	r3, r3, #518
 13267 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13268 093e 07F58A73 		add	r3, r7, #276
 13269 0942 1A54     		strb	r2, [r3, r0]
1791:..\src/command_processing.c **** 
1792:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13270              		.loc 1 1792 0
 13271 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13272 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13273 094c 2BE0     		b	.L527
 13274              	.L528:
1793:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13275              		.loc 1 1793 0 discriminator 3
 13276 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13277 0952 1A46     		mov	r2, r3	@ movhi
 13278 0954 9200     		lsls	r2, r2, #2
 13279 0956 1344     		add	r3, r3, r2
 13280 0958 1A46     		mov	r2, r3	@ movhi
 13281 095a 9100     		lsls	r1, r2, #2
 13282 095c 1A46     		mov	r2, r3	@ movhi
 13283 095e 0B46     		mov	r3, r1	@ movhi
 13284 0960 1344     		add	r3, r3, r2
 13285 0962 5B00     		lsls	r3, r3, #1
 13286 0964 9AB2     		uxth	r2, r3
 13287 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13288 096a 1344     		add	r3, r3, r2
 13289 096c 9AB2     		uxth	r2, r3
 13290 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13291 0972 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 298


 13292 0974 1344     		add	r3, r3, r2
 13293 0976 9AB2     		uxth	r2, r3
 13294 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13295 097c D31A     		subs	r3, r2, r3
 13296 097e 9BB2     		uxth	r3, r3
 13297 0980 0933     		adds	r3, r3, #9
 13298 0982 9BB2     		uxth	r3, r3
 13299 0984 1946     		mov	r1, r3
 13300 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13301 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13302 098e D31A     		subs	r3, r2, r3
 13303 0990 07F19C02 		add	r2, r7, #156
 13304 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13305 0996 07F58A73 		add	r3, r7, #276
 13306 099a 5A54     		strb	r2, [r3, r1]
1792:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13307              		.loc 1 1792 0 discriminator 3
 13308 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13309 09a0 013B     		subs	r3, r3, #1
 13310 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13311              	.L527:
1792:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13312              		.loc 1 1792 0 is_stmt 0 discriminator 1
 13313 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13314 09aa 002B     		cmp	r3, #0
 13315 09ac CFD1     		bne	.L528
1779:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13316              		.loc 1 1779 0 is_stmt 1 discriminator 2
 13317 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13318 09b2 0133     		adds	r3, r3, #1
 13319 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13320              	.L526:
1779:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13321              		.loc 1 1779 0 is_stmt 0 discriminator 1
 13322 09b8 444B     		ldr	r3, .L552+12
 13323 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13324 09bc 9BB2     		uxth	r3, r3
 13325 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13326 09c2 9A42     		cmp	r2, r3
 13327 09c4 FFF4CAAE 		bcc	.L529
1794:..\src/command_processing.c ****             }  
1795:..\src/command_processing.c ****           
1796:..\src/command_processing.c **** 
1797:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1798:..\src/command_processing.c ****             
1799:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13328              		.loc 1 1799 0 is_stmt 1
 13329 09c8 404B     		ldr	r3, .L552+12
 13330 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13331 09cc 9BB2     		uxth	r3, r3
 13332 09ce 1A46     		mov	r2, r3	@ movhi
 13333 09d0 9200     		lsls	r2, r2, #2
 13334 09d2 1344     		add	r3, r3, r2
 13335 09d4 1A46     		mov	r2, r3	@ movhi
 13336 09d6 9100     		lsls	r1, r2, #2
 13337 09d8 1A46     		mov	r2, r3	@ movhi
 13338 09da 0B46     		mov	r3, r1	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 299


 13339 09dc 1344     		add	r3, r3, r2
 13340 09de 5B00     		lsls	r3, r3, #1
 13341 09e0 9AB2     		uxth	r2, r3
 13342 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13343 09e6 1344     		add	r3, r3, r2
 13344 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1800:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13345              		.loc 1 1800 0
 13346 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13347 09f0 364A     		ldr	r2, .L552+12
 13348 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13349 09f4 1A44     		add	r2, r2, r3
 13350 09f6 07F18003 		add	r3, r7, #128
 13351 09fa 3549     		ldr	r1, .L552+16
 13352 09fc 1846     		mov	r0, r3
 13353 09fe FFF7FEFF 		bl	sprintf
1801:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13354              		.loc 1 1801 0
 13355 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13356 0a06 0233     		adds	r3, r3, #2
 13357 0a08 07F58A72 		add	r2, r7, #276
 13358 0a0c 0021     		movs	r1, #0
 13359 0a0e D154     		strb	r1, [r2, r3]
1802:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13360              		.loc 1 1802 0
 13361 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13362 0a14 0333     		adds	r3, r3, #3
 13363 0a16 07F58A72 		add	r2, r7, #276
 13364 0a1a 0121     		movs	r1, #1
 13365 0a1c D154     		strb	r1, [r2, r3]
1803:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13366              		.loc 1 1803 0
 13367 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13368 0a22 0433     		adds	r3, r3, #4
 13369 0a24 284A     		ldr	r2, .L552+8
 13370 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13371 0a2a 07F58A72 		add	r2, r7, #276
 13372 0a2e D154     		strb	r1, [r2, r3]
1804:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13373              		.loc 1 1804 0
 13374 0a30 254B     		ldr	r3, .L552+8
 13375 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13376 0a36 012B     		cmp	r3, #1
 13377 0a38 17D0     		beq	.L531
 13378 0a3a 022B     		cmp	r3, #2
 13379 0a3c 28D0     		beq	.L532
 13380 0a3e 002B     		cmp	r3, #0
 13381 0a40 00D0     		beq	.L533
1805:..\src/command_processing.c ****                 case 0: 
1806:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1807:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1808:..\src/command_processing.c ****                     break;
1809:..\src/command_processing.c ****                 case 1: 
1810:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1811:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1812:..\src/command_processing.c ****                     break;
1813:..\src/command_processing.c ****                 case 2: 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 300


1814:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1815:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1816:..\src/command_processing.c ****                     break;
1817:..\src/command_processing.c ****                 default:
1818:..\src/command_processing.c ****                     break;
 13382              		.loc 1 1818 0
 13383 0a42 38E0     		b	.L534
 13384              	.L533:
1806:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13385              		.loc 1 1806 0
 13386 0a44 07F18003 		add	r3, r7, #128
 13387 0a48 1846     		mov	r0, r3
 13388 0a4a FFF7FEFF 		bl	strlen
 13389 0a4e 0346     		mov	r3, r0
 13390 0a50 1A46     		mov	r2, r3
 13391 0a52 07F18003 		add	r3, r7, #128
 13392 0a56 1344     		add	r3, r3, r2
 13393 0a58 1E4A     		ldr	r2, .L552+20
 13394 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13395 0a5c 1860     		str	r0, [r3]	@ unaligned
 13396 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13397 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1807:..\src/command_processing.c ****                     break;
 13398              		.loc 1 1807 0
 13399 0a62 1A23     		movs	r3, #26
 13400 0a64 87F89D36 		strb	r3, [r7, #1693]
1808:..\src/command_processing.c ****                 case 1: 
 13401              		.loc 1 1808 0
 13402 0a68 25E0     		b	.L534
 13403              	.L531:
1810:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13404              		.loc 1 1810 0
 13405 0a6a 07F18003 		add	r3, r7, #128
 13406 0a6e 1846     		mov	r0, r3
 13407 0a70 FFF7FEFF 		bl	strlen
 13408 0a74 0346     		mov	r3, r0
 13409 0a76 1A46     		mov	r2, r3
 13410 0a78 07F18003 		add	r3, r7, #128
 13411 0a7c 1344     		add	r3, r3, r2
 13412 0a7e 164A     		ldr	r2, .L552+24
 13413 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13414 0a82 1860     		str	r0, [r3]	@ unaligned
 13415 0a84 1279     		ldrb	r2, [r2, #4]
 13416 0a86 1A71     		strb	r2, [r3, #4]
1811:..\src/command_processing.c ****                     break;
 13417              		.loc 1 1811 0
 13418 0a88 1923     		movs	r3, #25
 13419 0a8a 87F89D36 		strb	r3, [r7, #1693]
1812:..\src/command_processing.c ****                 case 2: 
 13420              		.loc 1 1812 0
 13421 0a8e 12E0     		b	.L534
 13422              	.L532:
1814:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13423              		.loc 1 1814 0
 13424 0a90 07F18003 		add	r3, r7, #128
 13425 0a94 1846     		mov	r0, r3
 13426 0a96 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 301


 13427 0a9a 0346     		mov	r3, r0
 13428 0a9c 1A46     		mov	r2, r3
 13429 0a9e 07F18003 		add	r3, r7, #128
 13430 0aa2 1344     		add	r3, r3, r2
 13431 0aa4 0D4A     		ldr	r2, .L552+28
 13432 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13433 0aa8 1860     		str	r0, [r3]	@ unaligned
 13434 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13435 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1815:..\src/command_processing.c ****                     break;
 13436              		.loc 1 1815 0
 13437 0aae 1A23     		movs	r3, #26
 13438 0ab0 87F89D36 		strb	r3, [r7, #1693]
1816:..\src/command_processing.c ****                 default:
 13439              		.loc 1 1816 0
 13440 0ab4 00BF     		nop
 13441              	.L534:
1819:..\src/command_processing.c ****             }            
1820:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13442              		.loc 1 1820 0
 13443 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13444 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13445 0abe 28E0     		b	.L535
 13446              	.L553:
 13447              		.align	2
 13448              	.L552:
 13449 0ac0 00000000 		.word	IMU_connected
 13450 0ac4 DC100000 		.word	.LC147
 13451 0ac8 00000000 		.word	c_mem
 13452 0acc 00000000 		.word	N_IMU_Connected
 13453 0ad0 F8100000 		.word	.LC148
 13454 0ad4 10110000 		.word	.LC149
 13455 0ad8 18110000 		.word	.LC150
 13456 0adc 20110000 		.word	.LC151
 13457              	.L536:
1821:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13458              		.loc 1 1821 0 discriminator 3
 13459 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13460 0ae4 5A1D     		adds	r2, r3, #5
 13461 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13462 0aea 1A44     		add	r2, r2, r3
 13463 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13464 0af0 D31A     		subs	r3, r2, r3
 13465 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13466 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13467 0afa 8A1A     		subs	r2, r1, r2
 13468 0afc 07F18001 		add	r1, r7, #128
 13469 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13470 0b02 07F58A72 		add	r2, r7, #276
 13471 0b06 D154     		strb	r1, [r2, r3]
1820:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13472              		.loc 1 1820 0 discriminator 3
 13473 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13474 0b0c 013B     		subs	r3, r3, #1
 13475 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13476              	.L535:
1820:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 302


 13477              		.loc 1 1820 0 is_stmt 0 discriminator 1
 13478 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13479 0b16 002B     		cmp	r3, #0
 13480 0b18 E2D1     		bne	.L536
1822:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1823:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13481              		.loc 1 1823 0 is_stmt 1
 13482 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13483 0b1e 5A1D     		adds	r2, r3, #5
 13484 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13485 0b24 1344     		add	r3, r3, r2
 13486 0b26 07F58A72 		add	r2, r7, #276
 13487 0b2a 0121     		movs	r1, #1
 13488 0b2c D154     		strb	r1, [r2, r3]
1824:..\src/command_processing.c ****                   
1825:..\src/command_processing.c ****             
1826:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1827:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13489              		.loc 1 1827 0
 13490 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13491 0b32 3233     		adds	r3, r3, #50
 13492 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1828:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13493              		.loc 1 1828 0
 13494 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13495 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13496 0b40 1AE0     		b	.L537
 13497              	.L538:
1829:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13498              		.loc 1 1829 0 discriminator 3
 13499 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13500 0b46 0233     		adds	r3, r3, #2
 13501 0b48 9BB2     		uxth	r3, r3
 13502 0b4a 1A46     		mov	r2, r3
 13503 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13504 0b50 1A44     		add	r2, r2, r3
 13505 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13506 0b56 D31A     		subs	r3, r2, r3
 13507 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13508 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13509 0b60 8A1A     		subs	r2, r1, r2
 13510 0b62 07F10801 		add	r1, r7, #8
 13511 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13512 0b68 07F58A72 		add	r2, r7, #276
 13513 0b6c D154     		strb	r1, [r2, r3]
1828:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13514              		.loc 1 1828 0 discriminator 3
 13515 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13516 0b72 013B     		subs	r3, r3, #1
 13517 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13518              	.L537:
1828:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13519              		.loc 1 1828 0 is_stmt 0 discriminator 1
 13520 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13521 0b7c 002B     		cmp	r3, #0
 13522 0b7e E0D1     		bne	.L538
1830:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 303


1831:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13523              		.loc 1 1831 0 is_stmt 1
 13524 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13525 0b84 5C1E     		subs	r4, r3, #1
 13526 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13527 0b8a DBB2     		uxtb	r3, r3
 13528 0b8c 013B     		subs	r3, r3, #1
 13529 0b8e DAB2     		uxtb	r2, r3
 13530 0b90 07F58A73 		add	r3, r7, #276
 13531 0b94 1146     		mov	r1, r2
 13532 0b96 1846     		mov	r0, r3
 13533 0b98 FFF7FEFF 		bl	LCRChecksum
 13534 0b9c 0346     		mov	r3, r0
 13535 0b9e 1A46     		mov	r2, r3
 13536 0ba0 07F58A73 		add	r3, r7, #276
 13537 0ba4 1A55     		strb	r2, [r3, r4]
1832:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13538              		.loc 1 1832 0
 13539 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13540 0baa 07F58A73 		add	r3, r7, #276
 13541 0bae 1146     		mov	r1, r2
 13542 0bb0 1846     		mov	r0, r3
 13543 0bb2 FFF7FEFF 		bl	commWrite
1833:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13544              		.loc 1 1833 0
 13545 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1834:..\src/command_processing.c ****         break;
 13546              		.loc 1 1834 0
 13547 0bba 09E1     		b	.L539
 13548              	.L546:
1835:..\src/command_processing.c **** 
1836:..\src/command_processing.c **** //=========================================================     other_params
1837:..\src/command_processing.c ****         default: 
1838:..\src/command_processing.c ****             
1839:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13549              		.loc 1 1839 0
 13550 0bbc BB1D     		adds	r3, r7, #6
 13551 0bbe 1A88     		ldrh	r2, [r3]
 13552 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13553 0bc4 013B     		subs	r3, r3, #1
 13554 0bc6 9A42     		cmp	r2, r3
 13555 0bc8 C0F20181 		blt	.L547
1840:..\src/command_processing.c ****                 break;
1841:..\src/command_processing.c ****             
1842:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13556              		.loc 1 1842 0
 13557 0bcc BB1D     		adds	r3, r7, #6
 13558 0bce 1A88     		ldrh	r2, [r3]
 13559 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13560 0bd4 8149     		ldr	r1, .L554
 13561 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13562 0bd8 0B44     		add	r3, r3, r1
 13563 0bda 9A42     		cmp	r2, r3
 13564 0bdc 05D1     		bne	.L541
1843:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13565              		.loc 1 1843 0
 13566 0bde 804B     		ldr	r3, .L554+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 304


 13567 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13568 0be2 804B     		ldr	r3, .L554+8
 13569 0be4 83F80122 		strb	r2, [r3, #513]
1844:..\src/command_processing.c ****                 break;
 13570              		.loc 1 1844 0
 13571 0be8 F2E0     		b	.L539
 13572              	.L541:
1845:..\src/command_processing.c ****             }
1846:..\src/command_processing.c ****             
1847:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13573              		.loc 1 1847 0
 13574 0bea BB1D     		adds	r3, r7, #6
 13575 0bec 1A88     		ldrh	r2, [r3]
 13576 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13577 0bf2 013B     		subs	r3, r3, #1
 13578 0bf4 9A42     		cmp	r2, r3
 13579 0bf6 05D1     		bne	.L542
1848:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13580              		.loc 1 1848 0
 13581 0bf8 794B     		ldr	r3, .L554+4
 13582 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13583 0bfc 794B     		ldr	r3, .L554+8
 13584 0bfe 83F8A020 		strb	r2, [r3, #160]
1849:..\src/command_processing.c ****             }
1850:..\src/command_processing.c ****             else {
1851:..\src/command_processing.c ****             
1852:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1853:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1854:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1855:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1856:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1857:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1858:..\src/command_processing.c ****                 
1859:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1860:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1861:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1862:..\src/command_processing.c ****                 {
1863:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1864:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1865:..\src/command_processing.c ****                 }
1866:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1867:..\src/command_processing.c ****             
1868:..\src/command_processing.c ****             }
1869:..\src/command_processing.c ****             
1870:..\src/command_processing.c ****         break;
 13585              		.loc 1 1870 0
 13586 0c02 E5E0     		b	.L539
 13587              	.L542:
1853:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13588              		.loc 1 1853 0
 13589 0c04 BB1D     		adds	r3, r7, #6
 13590 0c06 1A88     		ldrh	r2, [r3]
 13591 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13592 0c0c D31A     		subs	r3, r2, r3
 13593 0c0e 764A     		ldr	r2, .L554+12
 13594 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13595 0c12 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 305


 13596 0c14 724B     		ldr	r3, .L554+4
 13597 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13598 0c18 724A     		ldr	r2, .L554+8
 13599 0c1a 0B46     		mov	r3, r1
 13600 0c1c 9B00     		lsls	r3, r3, #2
 13601 0c1e 0B44     		add	r3, r3, r1
 13602 0c20 1344     		add	r3, r3, r2
 13603 0c22 03F20223 		addw	r3, r3, #514
 13604 0c26 0246     		mov	r2, r0
 13605 0c28 1A70     		strb	r2, [r3]
1854:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13606              		.loc 1 1854 0
 13607 0c2a BB1D     		adds	r3, r7, #6
 13608 0c2c 1A88     		ldrh	r2, [r3]
 13609 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13610 0c32 D31A     		subs	r3, r2, r3
 13611 0c34 6C4A     		ldr	r2, .L554+12
 13612 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13613 0c38 1946     		mov	r1, r3
 13614 0c3a 694B     		ldr	r3, .L554+4
 13615 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13616 0c3e 694A     		ldr	r2, .L554+8
 13617 0c40 0B46     		mov	r3, r1
 13618 0c42 9B00     		lsls	r3, r3, #2
 13619 0c44 0B44     		add	r3, r3, r1
 13620 0c46 1344     		add	r3, r3, r2
 13621 0c48 03F20323 		addw	r3, r3, #515
 13622 0c4c 0246     		mov	r2, r0
 13623 0c4e 1A70     		strb	r2, [r3]
1855:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13624              		.loc 1 1855 0
 13625 0c50 BB1D     		adds	r3, r7, #6
 13626 0c52 1A88     		ldrh	r2, [r3]
 13627 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13628 0c58 D31A     		subs	r3, r2, r3
 13629 0c5a 634A     		ldr	r2, .L554+12
 13630 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13631 0c5e 1946     		mov	r1, r3
 13632 0c60 5F4B     		ldr	r3, .L554+4
 13633 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13634 0c64 5F4A     		ldr	r2, .L554+8
 13635 0c66 0B46     		mov	r3, r1
 13636 0c68 9B00     		lsls	r3, r3, #2
 13637 0c6a 0B44     		add	r3, r3, r1
 13638 0c6c 1344     		add	r3, r3, r2
 13639 0c6e 03F50173 		add	r3, r3, #516
 13640 0c72 0246     		mov	r2, r0
 13641 0c74 1A70     		strb	r2, [r3]
1856:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13642              		.loc 1 1856 0
 13643 0c76 BB1D     		adds	r3, r7, #6
 13644 0c78 1A88     		ldrh	r2, [r3]
 13645 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13646 0c7e D31A     		subs	r3, r2, r3
 13647 0c80 594A     		ldr	r2, .L554+12
 13648 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13649 0c84 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 306


 13650 0c86 564B     		ldr	r3, .L554+4
 13651 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13652 0c8a 564A     		ldr	r2, .L554+8
 13653 0c8c 0B46     		mov	r3, r1
 13654 0c8e 9B00     		lsls	r3, r3, #2
 13655 0c90 0B44     		add	r3, r3, r1
 13656 0c92 1344     		add	r3, r3, r2
 13657 0c94 03F20523 		addw	r3, r3, #517
 13658 0c98 0246     		mov	r2, r0
 13659 0c9a 1A70     		strb	r2, [r3]
1857:..\src/command_processing.c ****                 
 13660              		.loc 1 1857 0
 13661 0c9c BB1D     		adds	r3, r7, #6
 13662 0c9e 1A88     		ldrh	r2, [r3]
 13663 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13664 0ca4 D31A     		subs	r3, r2, r3
 13665 0ca6 504A     		ldr	r2, .L554+12
 13666 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13667 0caa 1946     		mov	r1, r3
 13668 0cac 4C4B     		ldr	r3, .L554+4
 13669 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13670 0cb0 4C4A     		ldr	r2, .L554+8
 13671 0cb2 0B46     		mov	r3, r1
 13672 0cb4 9B00     		lsls	r3, r3, #2
 13673 0cb6 0B44     		add	r3, r3, r1
 13674 0cb8 1344     		add	r3, r3, r2
 13675 0cba 03F20623 		addw	r3, r3, #518
 13676 0cbe 0246     		mov	r2, r0
 13677 0cc0 1A70     		strb	r2, [r3]
1860:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13678              		.loc 1 1860 0
 13679 0cc2 4A4B     		ldr	r3, .L554+16
 13680 0cc4 0122     		movs	r2, #1
 13681 0cc6 1A60     		str	r2, [r3]
1861:..\src/command_processing.c ****                 {
 13682              		.loc 1 1861 0
 13683 0cc8 0023     		movs	r3, #0
 13684 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13685 0cce 71E0     		b	.L544
 13686              	.L545:
1863:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13687              		.loc 1 1863 0 discriminator 3
 13688 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13689 0cd4 444A     		ldr	r2, .L554+12
 13690 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13691 0cd8 1C46     		mov	r4, r3
 13692 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13693 0cde 424A     		ldr	r2, .L554+12
 13694 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13695 0ce2 1946     		mov	r1, r3
 13696 0ce4 3F4A     		ldr	r2, .L554+8
 13697 0ce6 0B46     		mov	r3, r1
 13698 0ce8 9B00     		lsls	r3, r3, #2
 13699 0cea 0B44     		add	r3, r3, r1
 13700 0cec 1344     		add	r3, r3, r2
 13701 0cee 03F20223 		addw	r3, r3, #514
 13702 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 307


 13703 0cf4 1A46     		mov	r2, r3
 13704 0cf6 1346     		mov	r3, r2
 13705 0cf8 5B00     		lsls	r3, r3, #1
 13706 0cfa 1344     		add	r3, r3, r2
 13707 0cfc 5B00     		lsls	r3, r3, #1
 13708 0cfe 5A1C     		adds	r2, r3, #1
 13709 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13710 0d04 3849     		ldr	r1, .L554+12
 13711 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13712 0d08 1846     		mov	r0, r3
 13713 0d0a 3649     		ldr	r1, .L554+8
 13714 0d0c 0346     		mov	r3, r0
 13715 0d0e 9B00     		lsls	r3, r3, #2
 13716 0d10 0344     		add	r3, r3, r0
 13717 0d12 0B44     		add	r3, r3, r1
 13718 0d14 03F20323 		addw	r3, r3, #515
 13719 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13720 0d1a 1946     		mov	r1, r3
 13721 0d1c 0B46     		mov	r3, r1
 13722 0d1e 5B00     		lsls	r3, r3, #1
 13723 0d20 0B44     		add	r3, r3, r1
 13724 0d22 5B00     		lsls	r3, r3, #1
 13725 0d24 1A44     		add	r2, r2, r3
 13726 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13727 0d2a 2F49     		ldr	r1, .L554+12
 13728 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13729 0d2e 1846     		mov	r0, r3
 13730 0d30 2C49     		ldr	r1, .L554+8
 13731 0d32 0346     		mov	r3, r0
 13732 0d34 9B00     		lsls	r3, r3, #2
 13733 0d36 0344     		add	r3, r3, r0
 13734 0d38 0B44     		add	r3, r3, r1
 13735 0d3a 03F50173 		add	r3, r3, #516
 13736 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13737 0d40 1946     		mov	r1, r3
 13738 0d42 0B46     		mov	r3, r1
 13739 0d44 5B00     		lsls	r3, r3, #1
 13740 0d46 0B44     		add	r3, r3, r1
 13741 0d48 5B00     		lsls	r3, r3, #1
 13742 0d4a 1A44     		add	r2, r2, r3
 13743 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13744 0d50 2549     		ldr	r1, .L554+12
 13745 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13746 0d54 1846     		mov	r0, r3
 13747 0d56 2349     		ldr	r1, .L554+8
 13748 0d58 0346     		mov	r3, r0
 13749 0d5a 9B00     		lsls	r3, r3, #2
 13750 0d5c 0344     		add	r3, r3, r0
 13751 0d5e 0B44     		add	r3, r3, r1
 13752 0d60 03F20523 		addw	r3, r3, #517
 13753 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13754 0d66 1B01     		lsls	r3, r3, #4
 13755 0d68 1A44     		add	r2, r2, r3
 13756 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13757 0d6e 1E49     		ldr	r1, .L554+12
 13758 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13759 0d72 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 308


 13760 0d74 1B49     		ldr	r1, .L554+8
 13761 0d76 0346     		mov	r3, r0
 13762 0d78 9B00     		lsls	r3, r3, #2
 13763 0d7a 0344     		add	r3, r3, r0
 13764 0d7c 0B44     		add	r3, r3, r1
 13765 0d7e 03F20623 		addw	r3, r3, #518
 13766 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13767 0d84 5B00     		lsls	r3, r3, #1
 13768 0d86 1344     		add	r3, r3, r2
 13769 0d88 0133     		adds	r3, r3, #1
 13770 0d8a 194A     		ldr	r2, .L554+20
 13771 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1864:..\src/command_processing.c ****                 }
 13772              		.loc 1 1864 0 discriminator 3
 13773 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13774 0d94 144A     		ldr	r2, .L554+12
 13775 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13776 0d98 1A46     		mov	r2, r3
 13777 0d9a 154B     		ldr	r3, .L554+20
 13778 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13779 0da0 124B     		ldr	r3, .L554+16
 13780 0da2 1B68     		ldr	r3, [r3]
 13781 0da4 1344     		add	r3, r3, r2
 13782 0da6 114A     		ldr	r2, .L554+16
 13783 0da8 1360     		str	r3, [r2]
1861:..\src/command_processing.c ****                 {
 13784              		.loc 1 1861 0 discriminator 3
 13785 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13786 0dae 0133     		adds	r3, r3, #1
 13787 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13788              	.L544:
1861:..\src/command_processing.c ****                 {
 13789              		.loc 1 1861 0 is_stmt 0 discriminator 1
 13790 0db4 094B     		ldr	r3, .L554
 13791 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13792 0db8 9BB2     		uxth	r3, r3
 13793 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13794 0dbe 9A42     		cmp	r2, r3
 13795 0dc0 86D3     		bcc	.L545
1866:..\src/command_processing.c ****             
 13796              		.loc 1 1866 0 is_stmt 1
 13797 0dc2 0A4B     		ldr	r3, .L554+16
 13798 0dc4 1B68     		ldr	r3, [r3]
 13799 0dc6 0133     		adds	r3, r3, #1
 13800 0dc8 084A     		ldr	r2, .L554+16
 13801 0dca 1360     		str	r3, [r2]
 13802              		.loc 1 1870 0
 13803 0dcc 00E0     		b	.L539
 13804              	.L547:
1840:..\src/command_processing.c ****             
 13805              		.loc 1 1840 0
 13806 0dce 00BF     		nop
 13807              	.L539:
1871:..\src/command_processing.c ****     }
1872:..\src/command_processing.c **** }
 13808              		.loc 1 1872 0 discriminator 1
 13809 0dd0 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 309


 13810 0dd2 07F5D567 		add	r7, r7, #1704
 13811              		.cfi_def_cfa_offset 16
 13812 0dd6 BD46     		mov	sp, r7
 13813              		.cfi_def_cfa_register 13
 13814              		@ sp needed
 13815 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13816              	.L555:
 13817 0dda 00BF     		.align	2
 13818              	.L554:
 13819 0ddc 00000000 		.word	N_IMU_Connected
 13820 0de0 00000000 		.word	g_rx
 13821 0de4 00000000 		.word	g_mem
 13822 0de8 00000000 		.word	IMU_connected
 13823 0dec 00000000 		.word	imus_data_size
 13824 0df0 00000000 		.word	single_imu_size
 13825              		.cfi_endproc
 13826              	.LFE70:
 13827              		.size	get_IMU_param_list, .-get_IMU_param_list
 13828              		.section	.text.setZeros,"ax",%progbits
 13829              		.align	2
 13830              		.global	setZeros
 13831              		.thumb
 13832              		.thumb_func
 13833              		.type	setZeros, %function
 13834              	setZeros:
 13835              	.LFB71:
1873:..\src/command_processing.c **** 
1874:..\src/command_processing.c **** //==============================================================================
1875:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1876:..\src/command_processing.c **** //==============================================================================
1877:..\src/command_processing.c **** 
1878:..\src/command_processing.c **** void setZeros()
1879:..\src/command_processing.c **** {
 13836              		.loc 1 1879 0
 13837              		.cfi_startproc
 13838              		@ args = 0, pretend = 0, frame = 8
 13839              		@ frame_needed = 1, uses_anonymous_args = 0
 13840 0000 B0B5     		push	{r4, r5, r7, lr}
 13841              		.cfi_def_cfa_offset 16
 13842              		.cfi_offset 4, -16
 13843              		.cfi_offset 5, -12
 13844              		.cfi_offset 7, -8
 13845              		.cfi_offset 14, -4
 13846 0002 82B0     		sub	sp, sp, #8
 13847              		.cfi_def_cfa_offset 24
 13848 0004 00AF     		add	r7, sp, #0
 13849              		.cfi_def_cfa_register 7
1880:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1881:..\src/command_processing.c ****     
1882:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13850              		.loc 1 1882 0
 13851 0006 0023     		movs	r3, #0
 13852 0008 BB71     		strb	r3, [r7, #6]
 13853 000a 2FE0     		b	.L557
 13854              	.L560:
1883:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13855              		.loc 1 1883 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 310


 13856 000c 0023     		movs	r3, #0
 13857 000e FB71     		strb	r3, [r7, #7]
 13858 0010 22E0     		b	.L558
 13859              	.L559:
1884:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13860              		.loc 1 1884 0 discriminator 3
 13861 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13862 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13863 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13864 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13865 001a 194D     		ldr	r5, .L561
 13866 001c 0B46     		mov	r3, r1
 13867 001e 9B00     		lsls	r3, r3, #2
 13868 0020 0B44     		add	r3, r3, r1
 13869 0022 2344     		add	r3, r3, r4
 13870 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13871 0028 1C46     		mov	r4, r3
 13872 002a 1649     		ldr	r1, .L561+4
 13873 002c 1346     		mov	r3, r2
 13874 002e 5B00     		lsls	r3, r3, #1
 13875 0030 1344     		add	r3, r3, r2
 13876 0032 9B00     		lsls	r3, r3, #2
 13877 0034 0344     		add	r3, r3, r0
 13878 0036 6633     		adds	r3, r3, #102
 13879 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1885:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13880              		.loc 1 1885 0 discriminator 3
 13881 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13882 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13883 0040 1149     		ldr	r1, .L561+8
 13884 0042 3420     		movs	r0, #52
 13885 0044 00FB02F2 		mul	r2, r0, r2
 13886 0048 0A44     		add	r2, r2, r1
 13887 004a 1344     		add	r3, r3, r2
 13888 004c 1833     		adds	r3, r3, #24
 13889 004e 0022     		movs	r2, #0
 13890 0050 1A70     		strb	r2, [r3]
1883:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13891              		.loc 1 1883 0 discriminator 3
 13892 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13893 0054 0133     		adds	r3, r3, #1
 13894 0056 FB71     		strb	r3, [r7, #7]
 13895              	.L558:
1883:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13896              		.loc 1 1883 0 is_stmt 0 discriminator 1
 13897 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13898 005a 022B     		cmp	r3, #2
 13899 005c D9D9     		bls	.L559
1886:..\src/command_processing.c ****         }
1887:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13900              		.loc 1 1887 0 is_stmt 1 discriminator 2
 13901 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13902 0060 0A4A     		ldr	r2, .L561+12
 13903 0062 0121     		movs	r1, #1
 13904 0064 D154     		strb	r1, [r2, r3]
1882:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13905              		.loc 1 1882 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 311


 13906 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13907 0068 0133     		adds	r3, r3, #1
 13908 006a BB71     		strb	r3, [r7, #6]
 13909              	.L557:
1882:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13910              		.loc 1 1882 0 is_stmt 0 discriminator 1
 13911 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13912 006e 012B     		cmp	r3, #1
 13913 0070 CCD9     		bls	.L560
1888:..\src/command_processing.c ****     }
1889:..\src/command_processing.c **** 
1890:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13914              		.loc 1 1890 0 is_stmt 1
 13915 0072 0120     		movs	r0, #1
 13916 0074 FFF7FEFF 		bl	sendAcknowledgment
1891:..\src/command_processing.c **** }
 13917              		.loc 1 1891 0
 13918 0078 00BF     		nop
 13919 007a 0837     		adds	r7, r7, #8
 13920              		.cfi_def_cfa_offset 16
 13921 007c BD46     		mov	sp, r7
 13922              		.cfi_def_cfa_register 13
 13923              		@ sp needed
 13924 007e B0BD     		pop	{r4, r5, r7, pc}
 13925              	.L562:
 13926              		.align	2
 13927              	.L561:
 13928 0080 00000000 		.word	data_encoder_raw
 13929 0084 00000000 		.word	g_mem
 13930 0088 00000000 		.word	g_meas
 13931 008c 00000000 		.word	reset_last_value_flag
 13932              		.cfi_endproc
 13933              	.LFE71:
 13934              		.size	setZeros, .-setZeros
 13935              		.section	.rodata
 13936              		.align	2
 13937              	.LC152:
 13938 1158 0D0A00   		.ascii	"\015\012\000"
 13939 115b 00       		.align	2
 13940              	.LC153:
 13941 115c 4669726D 		.ascii	"Firmware version: \000"
 13941      77617265 
 13941      20766572 
 13941      73696F6E 
 13941      3A2000
 13942 116f 00       		.align	2
 13943              	.LC154:
 13944 1170 41697220 		.ascii	"Air Chambers Haptic Feedback firmware v. 1.10.1 (PS"
 13944      4368616D 
 13944      62657273 
 13944      20486170 
 13944      74696320 
 13945 11a3 6F433529 		.ascii	"oC5) - Master configuration\000"
 13945      202D204D 
 13945      61737465 
 13945      7220636F 
 13945      6E666967 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 312


 13946 11bf 00       		.align	2
 13947              	.LC155:
 13948 11c0 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13948      0A00
 13949 11c6 0000     		.align	2
 13950              	.LC156:
 13951 11c8 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13951      43452049 
 13951      4E464F0D 
 13951      0A00
 13952 11d6 0000     		.align	2
 13953              	.LC157:
 13954 11d8 49443A20 		.ascii	"ID: %d\015\012\000"
 13954      25640D0A 
 13954      00
 13955 11e1 000000   		.align	2
 13956              	.LC158:
 13957 11e4 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13957      63653A20 
 13957      534F4654 
 13957      48414E44 
 13957      2050524F 
 13958 11fb 00       		.align	2
 13959              	.LC159:
 13960 11fc 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13960      63653A20 
 13960      47454E45 
 13960      52494320 
 13960      32204D4F 
 13961 1217 00       		.align	2
 13962              	.LC160:
 13963 1218 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13963      63653A20 
 13963      41495220 
 13963      4348414D 
 13963      42455253 
 13964 123f 00       		.align	2
 13965              	.LC161:
 13966 1240 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13966      63653A20 
 13966      4F54544F 
 13966      424F434B 
 13966      20367620 
 13967 126a 0000     		.align	2
 13968              	.LC162:
 13969 126c 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13969      63653A20 
 13969      534F4654 
 13969      48414E44 
 13969      2032204D 
 13970              		.align	2
 13971              	.LC163:
 13972 1288 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13972      20736964 
 13972      653A2052 
 13972      49474854 
 13972      0D0A00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 313


 13973 129b 00       		.align	2
 13974              	.LC164:
 13975 129c 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13975      20736964 
 13975      653A204C 
 13975      4546540D 
 13975      0A00
 13976 12ae 0000     		.align	2
 13977              	.LC165:
 13978 12b0 55736572 		.ascii	"User: MARIA\015\012\000"
 13978      3A204D41 
 13978      5249410D 
 13978      0A00
 13979 12be 0000     		.align	2
 13980              	.LC166:
 13981 12c0 55736572 		.ascii	"User: R01\015\012\000"
 13981      3A205230 
 13981      310D0A00 
 13982              		.align	2
 13983              	.LC167:
 13984 12cc 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13984      3A204745 
 13984      4E455249 
 13984      43205553 
 13984      45520D0A 
 13985 12e1 000000   		.align	2
 13986              	.LC168:
 13987 12e4 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13987      52202564 
 13987      20494E46 
 13987      4F0D0A00 
 13988              		.align	2
 13989              	.LC169:
 13990 12f4 4D6F746F 		.ascii	"Motor reference\000"
 13990      72207265 
 13990      66657265 
 13990      6E636500 
 13991              		.align	2
 13992              	.LC170:
 13993 1304 202D2043 		.ascii	" - Currents: \000"
 13993      75727265 
 13993      6E74733A 
 13993      2000
 13994 1312 0000     		.align	2
 13995              	.LC171:
 13996 1314 202D2050 		.ascii	" - Pwm: \000"
 13996      776D3A20 
 13996      00
 13997 131d 000000   		.align	2
 13998              	.LC172:
 13999 1320 202D2050 		.ascii	" - Position: \000"
 13999      6F736974 
 13999      696F6E3A 
 13999      2000
 14000 132e 0000     		.align	2
 14001              	.LC173:
 14002 1330 25642000 		.ascii	"%d \000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 314


 14003              		.align	2
 14004              	.LC174:
 14005 1334 4D6F746F 		.ascii	"Motor enabled: \000"
 14005      7220656E 
 14005      61626C65 
 14005      643A2000 
 14006              		.align	2
 14007              	.LC175:
 14008 1344 5945530D 		.ascii	"YES\015\012\000"
 14008      0A00
 14009 134a 0000     		.align	2
 14010              	.LC176:
 14011 134c 4E4F0D0A 		.ascii	"NO\015\012\000"
 14011      00
 14012 1351 000000   		.align	2
 14013              	.LC177:
 14014 1354 50574D20 		.ascii	"PWM rescaling activation: \000"
 14014      72657363 
 14014      616C696E 
 14014      67206163 
 14014      74697661 
 14015 136f 00       		.align	2
 14016              	.LC178:
 14017 1370 5945530A 		.ascii	"YES\012\000"
 14017      00
 14018 1375 000000   		.align	2
 14019              	.LC179:
 14020 1378 4E4F0A00 		.ascii	"NO\012\000"
 14021              		.align	2
 14022              	.LC180:
 14023 137c 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 14023      4C696D69 
 14023      743A2025 
 14023      640D0A00 
 14024              		.align	2
 14025              	.LC181:
 14026 138c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 14026      41535552 
 14026      454D454E 
 14026      54532049 
 14026      4E464F0D 
 14027 13a2 0000     		.align	2
 14028              	.LC182:
 14029 13a4 53656E73 		.ascii	"Sensor value: \000"
 14029      6F722076 
 14029      616C7565 
 14029      3A2000
 14030 13b3 00       		.align	2
 14031              	.LC183:
 14032 13b4 256400   		.ascii	"%d\000"
 14033 13b7 00       		.align	2
 14034              	.LC184:
 14035 13b8 2C2000   		.ascii	", \000"
 14036 13bb 00       		.align	2
 14037              	.LC185:
 14038 13bc 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 14038      7469636B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 315


 14038      206D6561 
 14038      73757265 
 14038      6D656E74 
 14039 13da 0000     		.align	2
 14040              	.LC186:
 14041 13dc 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 14041      65727920 
 14041      25642056 
 14041      6F6C7461 
 14041      67652028 
 14042 13f9 000000   		.align	2
 14043              	.LC187:
 14044 13fc 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 14044      20636861 
 14044      72676520 
 14044      706F7765 
 14044      72207465 
 14045 1423 00       		.align	2
 14046              	.LC188:
 14047 1424 43757272 		.ascii	"Current %d (mA): %ld\000"
 14047      656E7420 
 14047      25642028 
 14047      6D41293A 
 14047      20256C64 
 14048 1439 000000   		.align	2
 14049              	.LC189:
 14050 143c 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 14050      20477261 
 14050      73702048 
 14050      6F6C6420 
 14050      43757272 
 14051 1461 000000   		.align	2
 14052              	.LC190:
 14053 1464 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 14053      544F5220 
 14053      25642043 
 14053      4F4E4649 
 14053      47555241 
 14054 147f 00       		.align	2
 14055              	.LC191:
 14056 1480 50494420 		.ascii	"PID Controller: \000"
 14056      436F6E74 
 14056      726F6C6C 
 14056      65723A20 
 14056      00
 14057              		.global	__aeabi_i2d
 14058              		.global	__aeabi_ddiv
 14059 1491 000000   		.align	2
 14060              	.LC192:
 14061 1494 50202D3E 		.ascii	"P -> %f  \000"
 14061      20256620 
 14061      2000
 14062 149e 0000     		.align	2
 14063              	.LC193:
 14064 14a0 49202D3E 		.ascii	"I -> %f  \000"
 14064      20256620 
 14064      2000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 316


 14065 14aa 0000     		.align	2
 14066              	.LC194:
 14067 14ac 44202D3E 		.ascii	"D -> %f\015\012\000"
 14067      2025660D 
 14067      0A00
 14068 14b6 0000     		.align	2
 14069              	.LC195:
 14070 14b8 43757272 		.ascii	"Current PID Controller: \000"
 14070      656E7420 
 14070      50494420 
 14070      436F6E74 
 14070      726F6C6C 
 14071 14d1 000000   		.align	2
 14072              	.LC196:
 14073 14d4 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14073      74757020 
 14073      61637469 
 14073      76617469 
 14073      6F6E3A20 
 14074 14ee 0000     		.align	2
 14075              	.LC197:
 14076 14f0 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14076      74757020 
 14076      61637469 
 14076      76617469 
 14076      6F6E3A20 
 14077 1509 000000   		.align	2
 14078              	.LC198:
 14079 150c 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14079      74206D6F 
 14079      64653A20 
 14079      5553420D 
 14079      0A00
 14080 151e 0000     		.align	2
 14081              	.LC199:
 14082 1520 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14082      74206D6F 
 14082      64653A20 
 14082      48616E64 
 14082      6C650D0A 
 14083 1535 000000   		.align	2
 14084              	.LC200:
 14085 1538 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14085      74206D6F 
 14085      64653A20 
 14085      454D4720 
 14085      70726F70 
 14086 1557 00       		.align	2
 14087              	.LC201:
 14088 1558 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14088      74206D6F 
 14088      64653A20 
 14088      454D4720 
 14088      696E7465 
 14089 1573 00       		.align	2
 14090              	.LC202:
 14091 1574 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 317


 14091      74206D6F 
 14091      64653A20 
 14091      454D4720 
 14091      46434653 
 14092 158b 00       		.align	2
 14093              	.LC203:
 14094 158c 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14094      74206D6F 
 14094      64653A20 
 14094      454D4720 
 14094      46434653 
 14095 15a7 00       		.align	2
 14096              	.LC204:
 14097 15a8 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14097      74206D6F 
 14097      64653A20 
 14097      4A6F7973 
 14097      7469636B 
 14098 15bf 00       		.align	2
 14099              	.LC205:
 14100 15c0 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 14100      74206D6F 
 14100      64653A20 
 14100      454D4720 
 14100      70726F70 
 14101 15ee 00       		.ascii	"\000"
 14102 15ef 00       		.align	2
 14103              	.LC206:
 14104 15f0 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14104      726F6C20 
 14104      6D6F6465 
 14104      3A20506F 
 14104      73697469 
 14105 1609 000000   		.align	2
 14106              	.LC207:
 14107 160c 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14107      726F6C20 
 14107      6D6F6465 
 14107      3A205057 
 14107      4D0D0A00 
 14108              		.align	2
 14109              	.LC208:
 14110 1620 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14110      726F6C20 
 14110      6D6F6465 
 14110      3A204375 
 14110      7272656E 
 14111              		.align	2
 14112              	.LC209:
 14113 1638 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14113      726F6C20 
 14113      6D6F6465 
 14113      3A20506F 
 14113      73697469 
 14114 165d 000000   		.align	2
 14115              	.LC210:
 14116 1660 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 318


 14116      6C757465 
 14116      20656E63 
 14116      6F646572 
 14116      20706F73 
 14117 1681 000000   		.align	2
 14118              	.LC211:
 14119 1684 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14119      6C757465 
 14119      20656E63 
 14119      6F646572 
 14119      20706F73 
 14120              		.align	2
 14121              	.LC212:
 14122 16a4 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14122      722D4861 
 14122      6E646C65 
 14122      20526174 
 14122      696F3A20 
 14123 16bd 000000   		.align	2
 14124              	.LC213:
 14125 16c0 53656E73 		.ascii	"Sensor resolution: \000"
 14125      6F722072 
 14125      65736F6C 
 14125      7574696F 
 14125      6E3A2000 
 14126              		.align	2
 14127              	.LC214:
 14128 16d4 4D656173 		.ascii	"Measurement Offset: \000"
 14128      7572656D 
 14128      656E7420 
 14128      4F666673 
 14128      65743A20 
 14129 16e9 000000   		.align	2
 14130              	.LC215:
 14131 16ec 256C6400 		.ascii	"%ld\000"
 14132              		.align	2
 14133              	.LC216:
 14134 16f0 4D656173 		.ascii	"Measurement Multiplier: \000"
 14134      7572656D 
 14134      656E7420 
 14134      4D756C74 
 14134      69706C69 
 14135              		.global	__aeabi_f2d
 14136 1709 000000   		.align	2
 14137              	.LC217:
 14138 170c 256600   		.ascii	"%f\000"
 14139 170f 00       		.align	2
 14140              	.LC218:
 14141 1710 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14141      656E7420 
 14141      6C6F6F6B 
 14141      75702074 
 14141      61626C65 
 14142 173e 00       		.ascii	"\000"
 14143 173f 00       		.align	2
 14144              	.LC219:
 14145 1740 506F7369 		.ascii	"Position limit active: %d\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 319


 14145      74696F6E 
 14145      206C696D 
 14145      69742061 
 14145      63746976 
 14146 175a 0000     		.align	2
 14147              	.LC220:
 14148 175c 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14148      74696F6E 
 14148      206C696D 
 14148      6974206D 
 14148      6F746F72 
 14149 177f 00       		.align	2
 14150              	.LC221:
 14151 1780 73757020 		.ascii	"sup -> %ld\015\012\000"
 14151      2D3E2025 
 14151      6C640D0A 
 14151      00
 14152 178d 000000   		.align	2
 14153              	.LC222:
 14154 1790 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14154      73746570 
 14154      20706F73 
 14154      20616E64 
 14154      206E6567 
 14155              		.align	2
 14156              	.LC223:
 14157 17ac 43757272 		.ascii	"Current limit: %d\015\012\000"
 14157      656E7420 
 14157      6C696D69 
 14157      743A2025 
 14157      640D0A00 
 14158              		.align	2
 14159              	.LC224:
 14160 17c0 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14160      434F4E46 
 14160      49475552 
 14160      4154494F 
 14160      4E0D0A00 
 14161              		.align	2
 14162              	.LC225:
 14163 17d4 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14163      74687265 
 14163      73686F6C 
 14163      6473205B 
 14163      30202D20 
 14164 17f6 0000     		.align	2
 14165              	.LC226:
 14166 17f8 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14166      6D617820 
 14166      76616C75 
 14166      6573205B 
 14166      30202D20 
 14167              		.align	2
 14168              	.LC227:
 14169 181c 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14169      696E7665 
 14169      7273696F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 320


 14169      6E3A2059 
 14169      45530D0A 
 14170 1831 000000   		.align	2
 14171              	.LC228:
 14172 1834 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14172      696E7665 
 14172      7273696F 
 14172      6E3A204E 
 14172      4F0D0A00 
 14173              		.align	2
 14174              	.LC229:
 14175 1848 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14175      62726174 
 14175      696F6E20 
 14175      656E6162 
 14175      6C65643A 
 14176 1863 00       		.align	2
 14177              	.LC230:
 14178 1864 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14178      62726174 
 14178      696F6E20 
 14178      656E6162 
 14178      6C65643A 
 14179 187e 0000     		.align	2
 14180              	.LC231:
 14181 1880 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14181      6D617820 
 14181      73706565 
 14181      643A2025 
 14181      64202564 
 14182 1895 000000   		.align	2
 14183              	.LC232:
 14184 1898 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14184      74696F6E 
 14184      616C2041 
 14184      44432073 
 14184      656E736F 
 14185              		.align	2
 14186              	.LC233:
 14187 18b8 41444320 		.ascii	"ADC %d -> %d\000"
 14187      2564202D 
 14187      3E202564 
 14187      00
 14188 18c5 000000   		.align	2
 14189              	.LC234:
 14190 18c8 454D4720 		.ascii	"EMG input %d -> %d\000"
 14190      696E7075 
 14190      74202564 
 14190      202D3E20 
 14190      256400
 14191 18db 00       		.align	2
 14192              	.LC235:
 14193 18dc 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14193      2074696D 
 14193      65206465 
 14193      6C617920 
 14193      286D7329 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 321


 14194 18f5 000000   		.align	2
 14195              	.LC236:
 14196 18f8 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14196      2076656C 
 14196      6F636974 
 14196      7920636C 
 14196      6F737572 
 14197 191e 0000     		.align	2
 14198              	.LC237:
 14199 1920 52657374 		.ascii	"Rest position: %d\000"
 14199      20706F73 
 14199      6974696F 
 14199      6E3A2025 
 14199      6400
 14200 1932 0000     		.align	2
 14201              	.LC238:
 14202 1934 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14202      436F6E6E 
 14202      65637465 
 14202      643A2025 
 14202      640D0A00 
 14203              		.align	2
 14204              	.LC239:
 14205 1948 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14205      20434F4E 
 14205      46494755 
 14205      52415449 
 14205      4F4E0D0A 
 14206 195d 000000   		.align	2
 14207              	.LC240:
 14208 1960 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14208      2564200D 
 14208      0A094944 
 14208      3A202564 
 14208      0D0A00
 14209 1973 00       		.align	2
 14210              	.LC241:
 14211 1974 09416363 		.ascii	"\011Accelerometers: \000"
 14211      656C6572 
 14211      6F6D6574 
 14211      6572733A 
 14211      2000
 14212 1986 0000     		.align	2
 14213              	.LC242:
 14214 1988 09477972 		.ascii	"\011Gyroscopes: \000"
 14214      6F73636F 
 14214      7065733A 
 14214      2000
 14215 1996 0000     		.align	2
 14216              	.LC243:
 14217 1998 094D6167 		.ascii	"\011Magnetometers: \000"
 14217      6E65746F 
 14217      6D657465 
 14217      72733A20 
 14217      00
 14218 19a9 000000   		.align	2
 14219              	.LC244:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 322


 14220 19ac 09517561 		.ascii	"\011Quaternion: \000"
 14220      7465726E 
 14220      696F6E3A 
 14220      2000
 14221 19ba 0000     		.align	2
 14222              	.LC245:
 14223 19bc 0954656D 		.ascii	"\011Temperature: \000"
 14223      70657261 
 14223      74757265 
 14223      3A2000
 14224 19cb 00       		.align	2
 14225              	.LC246:
 14226 19cc 536C6176 		.ascii	"Slave communication active: YES\015\012\000"
 14226      6520636F 
 14226      6D6D756E 
 14226      69636174 
 14226      696F6E20 
 14227 19ee 0000     		.align	2
 14228              	.LC247:
 14229 19f0 536C6176 		.ascii	"Slave communication active: NO\015\012\000"
 14229      6520636F 
 14229      6D6D756E 
 14229      69636174 
 14229      696F6E20 
 14230 1a11 000000   		.align	2
 14231              	.LC248:
 14232 1a14 536C6176 		.ascii	"Slave ID: %d\015\012\000"
 14232      65204944 
 14232      3A202564 
 14232      0D0A00
 14233 1a23 00       		.align	2
 14234              	.LC249:
 14235 1a24 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14235      20465720 
 14235      6379636C 
 14235      65207469 
 14235      6D653A20 
 14236              		.align	2
 14237              	.LC250:
 14238 1a40 0D0A0000 		.ascii	"\015\012\000\000"
 14239              		.section	.text.prepare_generic_info,"ax",%progbits
 14240              		.align	2
 14241              		.global	prepare_generic_info
 14242              		.thumb
 14243              		.thumb_func
 14244              		.type	prepare_generic_info, %function
 14245              	prepare_generic_info:
 14246              	.LFB72:
1892:..\src/command_processing.c **** 
1893:..\src/command_processing.c **** //==============================================================================
1894:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1895:..\src/command_processing.c **** //==============================================================================
1896:..\src/command_processing.c **** 
1897:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1898:..\src/command_processing.c **** {
 14247              		.loc 1 1898 0
 14248              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 323


 14249              		@ args = 0, pretend = 0, frame = 152
 14250              		@ frame_needed = 1, uses_anonymous_args = 0
 14251 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14252              		.cfi_def_cfa_offset 36
 14253              		.cfi_offset 4, -36
 14254              		.cfi_offset 5, -32
 14255              		.cfi_offset 6, -28
 14256              		.cfi_offset 7, -24
 14257              		.cfi_offset 8, -20
 14258              		.cfi_offset 9, -16
 14259              		.cfi_offset 10, -12
 14260              		.cfi_offset 11, -8
 14261              		.cfi_offset 14, -4
 14262 0004 B1B0     		sub	sp, sp, #196
 14263              		.cfi_def_cfa_offset 232
 14264 0006 0AAF     		add	r7, sp, #40
 14265              		.cfi_def_cfa 7, 192
 14266 0008 7861     		str	r0, [r7, #20]
1899:..\src/command_processing.c ****     int i;
1900:..\src/command_processing.c **** 
1901:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14267              		.loc 1 1901 0
 14268 000a BF4B     		ldr	r3, .L667
 14269 000c C7F88C30 		str	r3, [r7, #140]
1902:..\src/command_processing.c ****     
1903:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14270              		.loc 1 1903 0
 14271 0010 BD4B     		ldr	r3, .L667
 14272 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14273 0016 FA2B     		cmp	r3, #250
 14274 0018 01F01B86 		beq	.L664
 14275              	.LBB24:
1904:..\src/command_processing.c ****         char str[100];
1905:..\src/command_processing.c ****         strcpy(info_string, "");
 14276              		.loc 1 1905 0
 14277 001c 7B69     		ldr	r3, [r7, #20]
 14278 001e 0022     		movs	r2, #0
 14279 0020 1A70     		strb	r2, [r3]
1906:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14280              		.loc 1 1906 0
 14281 0022 7869     		ldr	r0, [r7, #20]
 14282 0024 FFF7FEFF 		bl	strlen
 14283 0028 0346     		mov	r3, r0
 14284 002a 1A46     		mov	r2, r3
 14285 002c 7B69     		ldr	r3, [r7, #20]
 14286 002e 1344     		add	r3, r3, r2
 14287 0030 B64A     		ldr	r2, .L667+4
 14288 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14289 0034 9278     		ldrb	r2, [r2, #2]
 14290 0036 1980     		strh	r1, [r3]	@ unaligned
 14291 0038 9A70     		strb	r2, [r3, #2]
1907:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14292              		.loc 1 1907 0
 14293 003a 7869     		ldr	r0, [r7, #20]
 14294 003c FFF7FEFF 		bl	strlen
 14295 0040 0346     		mov	r3, r0
 14296 0042 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 324


 14297 0044 7B69     		ldr	r3, [r7, #20]
 14298 0046 1344     		add	r3, r3, r2
 14299 0048 B14A     		ldr	r2, .L667+8
 14300 004a 1D46     		mov	r5, r3
 14301 004c 1446     		mov	r4, r2
 14302 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14303 0050 2860     		str	r0, [r5]	@ unaligned
 14304 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14305 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14306 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14307 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14308 005a A278     		ldrb	r2, [r4, #2]
 14309 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14310 005e 1346     		mov	r3, r2
 14311 0060 AB74     		strb	r3, [r5, #18]
1908:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14312              		.loc 1 1908 0
 14313 0062 7869     		ldr	r0, [r7, #20]
 14314 0064 FFF7FEFF 		bl	strlen
 14315 0068 0346     		mov	r3, r0
 14316 006a 1A46     		mov	r2, r3
 14317 006c 7B69     		ldr	r3, [r7, #20]
 14318 006e 1344     		add	r3, r3, r2
 14319 0070 A84A     		ldr	r2, .L667+12
 14320 0072 1846     		mov	r0, r3
 14321 0074 1146     		mov	r1, r2
 14322 0076 4F23     		movs	r3, #79
 14323 0078 1A46     		mov	r2, r3
 14324 007a FFF7FEFF 		bl	memcpy
1909:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14325              		.loc 1 1909 0
 14326 007e 7869     		ldr	r0, [r7, #20]
 14327 0080 FFF7FEFF 		bl	strlen
 14328 0084 0346     		mov	r3, r0
 14329 0086 1A46     		mov	r2, r3
 14330 0088 7B69     		ldr	r3, [r7, #20]
 14331 008a 1344     		add	r3, r3, r2
 14332 008c A24A     		ldr	r2, .L667+16
 14333 008e 1068     		ldr	r0, [r2]	@ unaligned
 14334 0090 1860     		str	r0, [r3]	@ unaligned
 14335 0092 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14336 0094 9A80     		strh	r2, [r3, #4]	@ unaligned
1910:..\src/command_processing.c **** 
1911:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14337              		.loc 1 1911 0
 14338 0096 7869     		ldr	r0, [r7, #20]
 14339 0098 FFF7FEFF 		bl	strlen
 14340 009c 0346     		mov	r3, r0
 14341 009e 1A46     		mov	r2, r3
 14342 00a0 7B69     		ldr	r3, [r7, #20]
 14343 00a2 1344     		add	r3, r3, r2
 14344 00a4 9D4A     		ldr	r2, .L667+20
 14345 00a6 1C46     		mov	r4, r3
 14346 00a8 1346     		mov	r3, r2
 14347 00aa 07CB     		ldmia	r3!, {r0, r1, r2}
 14348 00ac 2060     		str	r0, [r4]	@ unaligned
 14349 00ae 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 325


 14350 00b0 A260     		str	r2, [r4, #8]	@ unaligned
 14351 00b2 1B88     		ldrh	r3, [r3]	@ unaligned
 14352 00b4 A381     		strh	r3, [r4, #12]	@ unaligned
1912:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14353              		.loc 1 1912 0
 14354 00b6 D7F88C30 		ldr	r3, [r7, #140]
 14355 00ba 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14356 00be 1A46     		mov	r2, r3
 14357 00c0 07F11C03 		add	r3, r7, #28
 14358 00c4 9649     		ldr	r1, .L667+24
 14359 00c6 1846     		mov	r0, r3
 14360 00c8 FFF7FEFF 		bl	sprintf
1913:..\src/command_processing.c ****         strcat(info_string, str);
 14361              		.loc 1 1913 0
 14362 00cc 07F11C03 		add	r3, r7, #28
 14363 00d0 1946     		mov	r1, r3
 14364 00d2 7869     		ldr	r0, [r7, #20]
 14365 00d4 FFF7FEFF 		bl	strcat
1914:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14366              		.loc 1 1914 0
 14367 00d8 D7F88C30 		ldr	r3, [r7, #140]
 14368 00dc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14369 00e0 042B     		cmp	r3, #4
 14370 00e2 00F29180 		bhi	.L665
 14371 00e6 01A2     		adr	r2, .L567
 14372 00e8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14373              		.p2align 2
 14374              	.L567:
 14375 00ec 01010000 		.word	.L566+1
 14376 00f0 2F010000 		.word	.L568+1
 14377 00f4 5F010000 		.word	.L569+1
 14378 00f8 A1010000 		.word	.L570+1
 14379 00fc E1010000 		.word	.L571+1
 14380              		.p2align 1
 14381              	.L566:
1915:..\src/command_processing.c ****             case SOFTHAND_PRO:
1916:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14382              		.loc 1 1916 0
 14383 0100 7869     		ldr	r0, [r7, #20]
 14384 0102 FFF7FEFF 		bl	strlen
 14385 0106 0346     		mov	r3, r0
 14386 0108 1A46     		mov	r2, r3
 14387 010a 7B69     		ldr	r3, [r7, #20]
 14388 010c 1344     		add	r3, r3, r2
 14389 010e 854A     		ldr	r2, .L667+28
 14390 0110 1C46     		mov	r4, r3
 14391 0112 1546     		mov	r5, r2
 14392 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14393 0116 2060     		str	r0, [r4]	@ unaligned
 14394 0118 6160     		str	r1, [r4, #4]	@ unaligned
 14395 011a A260     		str	r2, [r4, #8]	@ unaligned
 14396 011c E360     		str	r3, [r4, #12]	@ unaligned
 14397 011e 2868     		ldr	r0, [r5]	@ unaligned
 14398 0120 2061     		str	r0, [r4, #16]	@ unaligned
 14399 0122 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14400 0124 AA79     		ldrb	r2, [r5, #6]
 14401 0126 A382     		strh	r3, [r4, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 326


 14402 0128 1346     		mov	r3, r2
 14403 012a A375     		strb	r3, [r4, #22]
1917:..\src/command_processing.c ****                 break;
 14404              		.loc 1 1917 0
 14405 012c 6DE0     		b	.L572
 14406              	.L568:
1918:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1919:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14407              		.loc 1 1919 0
 14408 012e 7869     		ldr	r0, [r7, #20]
 14409 0130 FFF7FEFF 		bl	strlen
 14410 0134 0346     		mov	r3, r0
 14411 0136 1A46     		mov	r2, r3
 14412 0138 7B69     		ldr	r3, [r7, #20]
 14413 013a 1344     		add	r3, r3, r2
 14414 013c 7A4A     		ldr	r2, .L667+32
 14415 013e 1D46     		mov	r5, r3
 14416 0140 1446     		mov	r4, r2
 14417 0142 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14418 0144 2860     		str	r0, [r5]	@ unaligned
 14419 0146 6960     		str	r1, [r5, #4]	@ unaligned
 14420 0148 AA60     		str	r2, [r5, #8]	@ unaligned
 14421 014a EB60     		str	r3, [r5, #12]	@ unaligned
 14422 014c 03CC     		ldmia	r4!, {r0, r1}
 14423 014e 2861     		str	r0, [r5, #16]	@ unaligned
 14424 0150 6961     		str	r1, [r5, #20]	@ unaligned
 14425 0152 2388     		ldrh	r3, [r4]	@ unaligned
 14426 0154 A278     		ldrb	r2, [r4, #2]
 14427 0156 2B83     		strh	r3, [r5, #24]	@ unaligned
 14428 0158 1346     		mov	r3, r2
 14429 015a AB76     		strb	r3, [r5, #26]
1920:..\src/command_processing.c ****                 break;
 14430              		.loc 1 1920 0
 14431 015c 55E0     		b	.L572
 14432              	.L569:
1921:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1922:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14433              		.loc 1 1922 0
 14434 015e 7869     		ldr	r0, [r7, #20]
 14435 0160 FFF7FEFF 		bl	strlen
 14436 0164 0346     		mov	r3, r0
 14437 0166 1A46     		mov	r2, r3
 14438 0168 7B69     		ldr	r3, [r7, #20]
 14439 016a 1344     		add	r3, r3, r2
 14440 016c 6F4A     		ldr	r2, .L667+36
 14441 016e 1446     		mov	r4, r2
 14442 0170 9E46     		mov	lr, r3
 14443 0172 04F1200C 		add	ip, r4, #32
 14444              	.L573:
 14445 0176 7546     		mov	r5, lr
 14446 0178 2646     		mov	r6, r4
 14447 017a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14448 017c 2860     		str	r0, [r5]	@ unaligned
 14449 017e 6960     		str	r1, [r5, #4]	@ unaligned
 14450 0180 AA60     		str	r2, [r5, #8]	@ unaligned
 14451 0182 EB60     		str	r3, [r5, #12]	@ unaligned
 14452 0184 1034     		adds	r4, r4, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 327


 14453 0186 0EF1100E 		add	lr, lr, #16
 14454 018a 6445     		cmp	r4, ip
 14455 018c F3D1     		bne	.L573
 14456 018e 7346     		mov	r3, lr
 14457 0190 2246     		mov	r2, r4
 14458 0192 1068     		ldr	r0, [r2]	@ unaligned
 14459 0194 1860     		str	r0, [r3]	@ unaligned
 14460 0196 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14461 0198 9279     		ldrb	r2, [r2, #6]
 14462 019a 9980     		strh	r1, [r3, #4]	@ unaligned
 14463 019c 9A71     		strb	r2, [r3, #6]
1923:..\src/command_processing.c ****                 break;
 14464              		.loc 1 1923 0
 14465 019e 34E0     		b	.L572
 14466              	.L570:
1924:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1925:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14467              		.loc 1 1925 0
 14468 01a0 7869     		ldr	r0, [r7, #20]
 14469 01a2 FFF7FEFF 		bl	strlen
 14470 01a6 0346     		mov	r3, r0
 14471 01a8 1A46     		mov	r2, r3
 14472 01aa 7B69     		ldr	r3, [r7, #20]
 14473 01ac 1344     		add	r3, r3, r2
 14474 01ae 604A     		ldr	r2, .L667+40
 14475 01b0 1446     		mov	r4, r2
 14476 01b2 9E46     		mov	lr, r3
 14477 01b4 04F1200C 		add	ip, r4, #32
 14478              	.L574:
 14479 01b8 7546     		mov	r5, lr
 14480 01ba 2646     		mov	r6, r4
 14481 01bc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14482 01be 2860     		str	r0, [r5]	@ unaligned
 14483 01c0 6960     		str	r1, [r5, #4]	@ unaligned
 14484 01c2 AA60     		str	r2, [r5, #8]	@ unaligned
 14485 01c4 EB60     		str	r3, [r5, #12]	@ unaligned
 14486 01c6 1034     		adds	r4, r4, #16
 14487 01c8 0EF1100E 		add	lr, lr, #16
 14488 01cc 6445     		cmp	r4, ip
 14489 01ce F3D1     		bne	.L574
 14490 01d0 7246     		mov	r2, lr
 14491 01d2 2346     		mov	r3, r4
 14492 01d4 03CB     		ldmia	r3!, {r0, r1}
 14493 01d6 1060     		str	r0, [r2]	@ unaligned
 14494 01d8 5160     		str	r1, [r2, #4]	@ unaligned
 14495 01da 1B88     		ldrh	r3, [r3]	@ unaligned
 14496 01dc 1381     		strh	r3, [r2, #8]	@ unaligned
1926:..\src/command_processing.c ****                 break;
 14497              		.loc 1 1926 0
 14498 01de 14E0     		b	.L572
 14499              	.L571:
1927:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1928:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14500              		.loc 1 1928 0
 14501 01e0 7869     		ldr	r0, [r7, #20]
 14502 01e2 FFF7FEFF 		bl	strlen
 14503 01e6 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 328


 14504 01e8 1A46     		mov	r2, r3
 14505 01ea 7B69     		ldr	r3, [r7, #20]
 14506 01ec 1344     		add	r3, r3, r2
 14507 01ee 514A     		ldr	r2, .L667+44
 14508 01f0 1D46     		mov	r5, r3
 14509 01f2 1446     		mov	r4, r2
 14510 01f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14511 01f6 2860     		str	r0, [r5]	@ unaligned
 14512 01f8 6960     		str	r1, [r5, #4]	@ unaligned
 14513 01fa AA60     		str	r2, [r5, #8]	@ unaligned
 14514 01fc EB60     		str	r3, [r5, #12]	@ unaligned
 14515 01fe 07CC     		ldmia	r4!, {r0, r1, r2}
 14516 0200 2861     		str	r0, [r5, #16]	@ unaligned
 14517 0202 6961     		str	r1, [r5, #20]	@ unaligned
 14518 0204 AA61     		str	r2, [r5, #24]	@ unaligned
1929:..\src/command_processing.c ****                 break;
 14519              		.loc 1 1929 0
 14520 0206 00E0     		b	.L572
 14521              	.L665:
1930:..\src/command_processing.c ****             default:
1931:..\src/command_processing.c ****                 break;
 14522              		.loc 1 1931 0
 14523 0208 00BF     		nop
 14524              	.L572:
1932:..\src/command_processing.c ****         }
1933:..\src/command_processing.c ****         
1934:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14525              		.loc 1 1934 0
 14526 020a D7F88C30 		ldr	r3, [r7, #140]
 14527 020e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14528 0212 002B     		cmp	r3, #0
 14529 0214 02D0     		beq	.L576
 14530 0216 012B     		cmp	r3, #1
 14531 0218 15D0     		beq	.L577
 14532 021a 26E0     		b	.L575
 14533              	.L576:
1935:..\src/command_processing.c ****             case RIGHT_HAND:
1936:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14534              		.loc 1 1936 0
 14535 021c 7869     		ldr	r0, [r7, #20]
 14536 021e FFF7FEFF 		bl	strlen
 14537 0222 0346     		mov	r3, r0
 14538 0224 1A46     		mov	r2, r3
 14539 0226 7B69     		ldr	r3, [r7, #20]
 14540 0228 1344     		add	r3, r3, r2
 14541 022a 434A     		ldr	r2, .L667+48
 14542 022c 1D46     		mov	r5, r3
 14543 022e 1446     		mov	r4, r2
 14544 0230 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14545 0232 2860     		str	r0, [r5]	@ unaligned
 14546 0234 6960     		str	r1, [r5, #4]	@ unaligned
 14547 0236 AA60     		str	r2, [r5, #8]	@ unaligned
 14548 0238 EB60     		str	r3, [r5, #12]	@ unaligned
 14549 023a 2388     		ldrh	r3, [r4]	@ unaligned
 14550 023c A278     		ldrb	r2, [r4, #2]
 14551 023e 2B82     		strh	r3, [r5, #16]	@ unaligned
 14552 0240 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 329


 14553 0242 AB74     		strb	r3, [r5, #18]
1937:..\src/command_processing.c ****                 break;
 14554              		.loc 1 1937 0
 14555 0244 11E0     		b	.L575
 14556              	.L577:
1938:..\src/command_processing.c ****             case LEFT_HAND:
1939:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14557              		.loc 1 1939 0
 14558 0246 7869     		ldr	r0, [r7, #20]
 14559 0248 FFF7FEFF 		bl	strlen
 14560 024c 0346     		mov	r3, r0
 14561 024e 1A46     		mov	r2, r3
 14562 0250 7B69     		ldr	r3, [r7, #20]
 14563 0252 1344     		add	r3, r3, r2
 14564 0254 394A     		ldr	r2, .L667+52
 14565 0256 1D46     		mov	r5, r3
 14566 0258 1446     		mov	r4, r2
 14567 025a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14568 025c 2860     		str	r0, [r5]	@ unaligned
 14569 025e 6960     		str	r1, [r5, #4]	@ unaligned
 14570 0260 AA60     		str	r2, [r5, #8]	@ unaligned
 14571 0262 EB60     		str	r3, [r5, #12]	@ unaligned
 14572 0264 2388     		ldrh	r3, [r4]	@ unaligned
 14573 0266 2B82     		strh	r3, [r5, #16]	@ unaligned
1940:..\src/command_processing.c ****                 break;
 14574              		.loc 1 1940 0
 14575 0268 00BF     		nop
 14576              	.L575:
1941:..\src/command_processing.c ****         }
1942:..\src/command_processing.c **** 
1943:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14577              		.loc 1 1943 0
 14578 026a D7F88C30 		ldr	r3, [r7, #140]
 14579 026e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14580 0272 012B     		cmp	r3, #1
 14581 0274 02D0     		beq	.L579
 14582 0276 022B     		cmp	r3, #2
 14583 0278 11D0     		beq	.L580
 14584 027a 1FE0     		b	.L663
 14585              	.L579:
1944:..\src/command_processing.c ****             case MARIA:
1945:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14586              		.loc 1 1945 0
 14587 027c 7869     		ldr	r0, [r7, #20]
 14588 027e FFF7FEFF 		bl	strlen
 14589 0282 0346     		mov	r3, r0
 14590 0284 1A46     		mov	r2, r3
 14591 0286 7B69     		ldr	r3, [r7, #20]
 14592 0288 1344     		add	r3, r3, r2
 14593 028a 2D4A     		ldr	r2, .L667+56
 14594 028c 1C46     		mov	r4, r3
 14595 028e 1346     		mov	r3, r2
 14596 0290 07CB     		ldmia	r3!, {r0, r1, r2}
 14597 0292 2060     		str	r0, [r4]	@ unaligned
 14598 0294 6160     		str	r1, [r4, #4]	@ unaligned
 14599 0296 A260     		str	r2, [r4, #8]	@ unaligned
 14600 0298 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 330


 14601 029a A381     		strh	r3, [r4, #12]	@ unaligned
1946:..\src/command_processing.c ****                 break;
 14602              		.loc 1 1946 0
 14603 029c 22E0     		b	.L581
 14604              	.L580:
1947:..\src/command_processing.c ****             case R01:
1948:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
 14605              		.loc 1 1948 0
 14606 029e 7869     		ldr	r0, [r7, #20]
 14607 02a0 FFF7FEFF 		bl	strlen
 14608 02a4 0346     		mov	r3, r0
 14609 02a6 1A46     		mov	r2, r3
 14610 02a8 7B69     		ldr	r3, [r7, #20]
 14611 02aa 1344     		add	r3, r3, r2
 14612 02ac 254A     		ldr	r2, .L667+60
 14613 02ae 1C46     		mov	r4, r3
 14614 02b0 1346     		mov	r3, r2
 14615 02b2 07CB     		ldmia	r3!, {r0, r1, r2}
 14616 02b4 2060     		str	r0, [r4]	@ unaligned
 14617 02b6 6160     		str	r1, [r4, #4]	@ unaligned
 14618 02b8 A260     		str	r2, [r4, #8]	@ unaligned
1949:..\src/command_processing.c ****                 break;
 14619              		.loc 1 1949 0
 14620 02ba 13E0     		b	.L581
 14621              	.L663:
1950:..\src/command_processing.c ****             default:
1951:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14622              		.loc 1 1951 0
 14623 02bc 7869     		ldr	r0, [r7, #20]
 14624 02be FFF7FEFF 		bl	strlen
 14625 02c2 0346     		mov	r3, r0
 14626 02c4 1A46     		mov	r2, r3
 14627 02c6 7B69     		ldr	r3, [r7, #20]
 14628 02c8 1344     		add	r3, r3, r2
 14629 02ca 1F4A     		ldr	r2, .L667+64
 14630 02cc 1D46     		mov	r5, r3
 14631 02ce 1446     		mov	r4, r2
 14632 02d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14633 02d2 2860     		str	r0, [r5]	@ unaligned
 14634 02d4 6960     		str	r1, [r5, #4]	@ unaligned
 14635 02d6 AA60     		str	r2, [r5, #8]	@ unaligned
 14636 02d8 EB60     		str	r3, [r5, #12]	@ unaligned
 14637 02da 2068     		ldr	r0, [r4]	@ unaligned
 14638 02dc 2861     		str	r0, [r5, #16]	@ unaligned
 14639 02de 2379     		ldrb	r3, [r4, #4]
 14640 02e0 2B75     		strb	r3, [r5, #20]
1952:..\src/command_processing.c ****                 break;
 14641              		.loc 1 1952 0
 14642 02e2 00BF     		nop
 14643              	.L581:
1953:..\src/command_processing.c ****         }
1954:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14644              		.loc 1 1954 0
 14645 02e4 7869     		ldr	r0, [r7, #20]
 14646 02e6 FFF7FEFF 		bl	strlen
 14647 02ea 0346     		mov	r3, r0
 14648 02ec 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 331


 14649 02ee 7B69     		ldr	r3, [r7, #20]
 14650 02f0 1344     		add	r3, r3, r2
 14651 02f2 064A     		ldr	r2, .L667+4
 14652 02f4 1188     		ldrh	r1, [r2]	@ unaligned
 14653 02f6 9278     		ldrb	r2, [r2, #2]
 14654 02f8 1980     		strh	r1, [r3]	@ unaligned
 14655 02fa 9A70     		strb	r2, [r3, #2]
 14656              	.LBB25:
1955:..\src/command_processing.c ****         
1956:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14657              		.loc 1 1956 0
 14658 02fc 0023     		movs	r3, #0
 14659 02fe 87F89330 		strb	r3, [r7, #147]
 14660 0302 01F070B8 		b	.L582
 14661              	.L668:
 14662 0306 00BF     		.align	2
 14663              	.L667:
 14664 0308 00000000 		.word	c_mem
 14665 030c 58110000 		.word	.LC152
 14666 0310 5C110000 		.word	.LC153
 14667 0314 70110000 		.word	.LC154
 14668 0318 C0110000 		.word	.LC155
 14669 031c C8110000 		.word	.LC156
 14670 0320 D8110000 		.word	.LC157
 14671 0324 E4110000 		.word	.LC158
 14672 0328 FC110000 		.word	.LC159
 14673 032c 18120000 		.word	.LC160
 14674 0330 40120000 		.word	.LC161
 14675 0334 6C120000 		.word	.LC162
 14676 0338 88120000 		.word	.LC163
 14677 033c 9C120000 		.word	.LC164
 14678 0340 B0120000 		.word	.LC165
 14679 0344 C0120000 		.word	.LC166
 14680 0348 CC120000 		.word	.LC167
 14681              	.L635:
 14682              	.LBB26:
1957:..\src/command_processing.c ****             
1958:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14683              		.loc 1 1958 0
 14684 034c 97F89330 		ldrb	r3, [r7, #147]
 14685 0350 87F88B30 		strb	r3, [r7, #139]
1959:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14686              		.loc 1 1959 0
 14687 0354 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 14688 0358 1346     		mov	r3, r2
 14689 035a DB00     		lsls	r3, r3, #3
 14690 035c 9B1A     		subs	r3, r3, r2
 14691 035e 1B01     		lsls	r3, r3, #4
 14692 0360 B033     		adds	r3, r3, #176
 14693 0362 D7F88C20 		ldr	r2, [r7, #140]
 14694 0366 1344     		add	r3, r3, r2
 14695 0368 C7F88430 		str	r3, [r7, #132]
1960:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14696              		.loc 1 1960 0
 14697 036c D7F88430 		ldr	r3, [r7, #132]
 14698 0370 93F86030 		ldrb	r3, [r3, #96]
 14699 0374 87F88330 		strb	r3, [r7, #131]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 332


1961:..\src/command_processing.c ****                   
1962:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14700              		.loc 1 1962 0
 14701 0378 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14702 037c 5A1C     		adds	r2, r3, #1
 14703 037e 07F11C03 		add	r3, r7, #28
 14704 0382 AE49     		ldr	r1, .L669
 14705 0384 1846     		mov	r0, r3
 14706 0386 FFF7FEFF 		bl	sprintf
1963:..\src/command_processing.c ****             strcat(info_string, str);
 14707              		.loc 1 1963 0
 14708 038a 07F11C03 		add	r3, r7, #28
 14709 038e 1946     		mov	r1, r3
 14710 0390 7869     		ldr	r0, [r7, #20]
 14711 0392 FFF7FEFF 		bl	strcat
1964:..\src/command_processing.c ****                         
1965:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14712              		.loc 1 1965 0
 14713 0396 7869     		ldr	r0, [r7, #20]
 14714 0398 FFF7FEFF 		bl	strlen
 14715 039c 0346     		mov	r3, r0
 14716 039e 1A46     		mov	r2, r3
 14717 03a0 7B69     		ldr	r3, [r7, #20]
 14718 03a2 1344     		add	r3, r3, r2
 14719 03a4 A64A     		ldr	r2, .L669+4
 14720 03a6 1C46     		mov	r4, r3
 14721 03a8 1546     		mov	r5, r2
 14722 03aa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14723 03ac 2060     		str	r0, [r4]	@ unaligned
 14724 03ae 6160     		str	r1, [r4, #4]	@ unaligned
 14725 03b0 A260     		str	r2, [r4, #8]	@ unaligned
 14726 03b2 E360     		str	r3, [r4, #12]	@ unaligned
1966:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14727              		.loc 1 1966 0
 14728 03b4 D7F88430 		ldr	r3, [r7, #132]
 14729 03b8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14730 03bc 022B     		cmp	r3, #2
 14731 03be 10D1     		bne	.L583
1967:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14732              		.loc 1 1967 0
 14733 03c0 7869     		ldr	r0, [r7, #20]
 14734 03c2 FFF7FEFF 		bl	strlen
 14735 03c6 0346     		mov	r3, r0
 14736 03c8 1A46     		mov	r2, r3
 14737 03ca 7B69     		ldr	r3, [r7, #20]
 14738 03cc 1344     		add	r3, r3, r2
 14739 03ce 9D4A     		ldr	r2, .L669+8
 14740 03d0 1C46     		mov	r4, r3
 14741 03d2 1346     		mov	r3, r2
 14742 03d4 07CB     		ldmia	r3!, {r0, r1, r2}
 14743 03d6 2060     		str	r0, [r4]	@ unaligned
 14744 03d8 6160     		str	r1, [r4, #4]	@ unaligned
 14745 03da A260     		str	r2, [r4, #8]	@ unaligned
 14746 03dc 1B88     		ldrh	r3, [r3]	@ unaligned
 14747 03de A381     		strh	r3, [r4, #12]	@ unaligned
 14748 03e0 25E0     		b	.L584
 14749              	.L583:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 333


1968:..\src/command_processing.c ****             else {
1969:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14750              		.loc 1 1969 0
 14751 03e2 D7F88430 		ldr	r3, [r7, #132]
 14752 03e6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14753 03ea 012B     		cmp	r3, #1
 14754 03ec 0FD1     		bne	.L585
1970:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14755              		.loc 1 1970 0
 14756 03ee 7869     		ldr	r0, [r7, #20]
 14757 03f0 FFF7FEFF 		bl	strlen
 14758 03f4 0346     		mov	r3, r0
 14759 03f6 1A46     		mov	r2, r3
 14760 03f8 7B69     		ldr	r3, [r7, #20]
 14761 03fa 1344     		add	r3, r3, r2
 14762 03fc 9249     		ldr	r1, .L669+12
 14763 03fe 1A46     		mov	r2, r3
 14764 0400 0B46     		mov	r3, r1
 14765 0402 03CB     		ldmia	r3!, {r0, r1}
 14766 0404 1060     		str	r0, [r2]	@ unaligned
 14767 0406 5160     		str	r1, [r2, #4]	@ unaligned
 14768 0408 1B78     		ldrb	r3, [r3]
 14769 040a 1372     		strb	r3, [r2, #8]
 14770 040c 0FE0     		b	.L584
 14771              	.L585:
1971:..\src/command_processing.c ****                 else
1972:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14772              		.loc 1 1972 0
 14773 040e 7869     		ldr	r0, [r7, #20]
 14774 0410 FFF7FEFF 		bl	strlen
 14775 0414 0346     		mov	r3, r0
 14776 0416 1A46     		mov	r2, r3
 14777 0418 7B69     		ldr	r3, [r7, #20]
 14778 041a 1344     		add	r3, r3, r2
 14779 041c 8B4A     		ldr	r2, .L669+16
 14780 041e 1C46     		mov	r4, r3
 14781 0420 1346     		mov	r3, r2
 14782 0422 07CB     		ldmia	r3!, {r0, r1, r2}
 14783 0424 2060     		str	r0, [r4]	@ unaligned
 14784 0426 6160     		str	r1, [r4, #4]	@ unaligned
 14785 0428 A260     		str	r2, [r4, #8]	@ unaligned
 14786 042a 1B88     		ldrh	r3, [r3]	@ unaligned
 14787 042c A381     		strh	r3, [r4, #12]	@ unaligned
 14788              	.L584:
1973:..\src/command_processing.c ****             }
1974:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14789              		.loc 1 1974 0
 14790 042e D7F88430 		ldr	r3, [r7, #132]
 14791 0432 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14792 0436 022B     		cmp	r3, #2
 14793 0438 13D1     		bne	.L586
1975:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14794              		.loc 1 1975 0
 14795 043a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14796 043e 844A     		ldr	r2, .L669+20
 14797 0440 1B01     		lsls	r3, r3, #4
 14798 0442 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 334


 14799 0444 0433     		adds	r3, r3, #4
 14800 0446 1A68     		ldr	r2, [r3]
 14801 0448 07F11C03 		add	r3, r7, #28
 14802 044c 8149     		ldr	r1, .L669+24
 14803 044e 1846     		mov	r0, r3
 14804 0450 FFF7FEFF 		bl	sprintf
1976:..\src/command_processing.c ****                 strcat(info_string,str);
 14805              		.loc 1 1976 0
 14806 0454 07F11C03 		add	r3, r7, #28
 14807 0458 1946     		mov	r1, r3
 14808 045a 7869     		ldr	r0, [r7, #20]
 14809 045c FFF7FEFF 		bl	strcat
 14810 0460 39E0     		b	.L587
 14811              	.L586:
1977:..\src/command_processing.c ****             }
1978:..\src/command_processing.c ****             else {
1979:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14812              		.loc 1 1979 0
 14813 0462 D7F88430 		ldr	r3, [r7, #132]
 14814 0466 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14815 046a 012B     		cmp	r3, #1
 14816 046c 13D1     		bne	.L588
1980:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14817              		.loc 1 1980 0
 14818 046e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14819 0472 774A     		ldr	r2, .L669+20
 14820 0474 1B01     		lsls	r3, r3, #4
 14821 0476 1344     		add	r3, r3, r2
 14822 0478 0833     		adds	r3, r3, #8
 14823 047a 1A68     		ldr	r2, [r3]
 14824 047c 07F11C03 		add	r3, r7, #28
 14825 0480 7449     		ldr	r1, .L669+24
 14826 0482 1846     		mov	r0, r3
 14827 0484 FFF7FEFF 		bl	sprintf
1981:..\src/command_processing.c ****                     strcat(info_string,str);
 14828              		.loc 1 1981 0
 14829 0488 07F11C03 		add	r3, r7, #28
 14830 048c 1946     		mov	r1, r3
 14831 048e 7869     		ldr	r0, [r7, #20]
 14832 0490 FFF7FEFF 		bl	strcat
 14833 0494 1FE0     		b	.L587
 14834              	.L588:
1982:..\src/command_processing.c ****                 }
1983:..\src/command_processing.c ****                 else {
1984:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14835              		.loc 1 1984 0
 14836 0496 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14837 049a 6D4A     		ldr	r2, .L669+20
 14838 049c 1B01     		lsls	r3, r3, #4
 14839 049e 1344     		add	r3, r3, r2
 14840 04a0 1968     		ldr	r1, [r3]
 14841 04a2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14842 04a6 D7F88C00 		ldr	r0, [r7, #140]
 14843 04aa 1346     		mov	r3, r2
 14844 04ac 5B00     		lsls	r3, r3, #1
 14845 04ae 1344     		add	r3, r3, r2
 14846 04b0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 335


 14847 04b2 0344     		add	r3, r3, r0
 14848 04b4 03F29513 		addw	r3, r3, #405
 14849 04b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14850 04ba 41FA03F2 		asr	r2, r1, r3
 14851 04be 07F11C03 		add	r3, r7, #28
 14852 04c2 6449     		ldr	r1, .L669+24
 14853 04c4 1846     		mov	r0, r3
 14854 04c6 FFF7FEFF 		bl	sprintf
1985:..\src/command_processing.c ****                     strcat(info_string,str);
 14855              		.loc 1 1985 0
 14856 04ca 07F11C03 		add	r3, r7, #28
 14857 04ce 1946     		mov	r1, r3
 14858 04d0 7869     		ldr	r0, [r7, #20]
 14859 04d2 FFF7FEFF 		bl	strcat
 14860              	.L587:
1986:..\src/command_processing.c ****                 }
1987:..\src/command_processing.c ****             }
1988:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14861              		.loc 1 1988 0
 14862 04d6 7869     		ldr	r0, [r7, #20]
 14863 04d8 FFF7FEFF 		bl	strlen
 14864 04dc 0346     		mov	r3, r0
 14865 04de 1A46     		mov	r2, r3
 14866 04e0 7B69     		ldr	r3, [r7, #20]
 14867 04e2 1344     		add	r3, r3, r2
 14868 04e4 5C4A     		ldr	r2, .L669+28
 14869 04e6 1188     		ldrh	r1, [r2]	@ unaligned
 14870 04e8 9278     		ldrb	r2, [r2, #2]
 14871 04ea 1980     		strh	r1, [r3]	@ unaligned
 14872 04ec 9A70     		strb	r2, [r3, #2]
1989:..\src/command_processing.c **** 
1990:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14873              		.loc 1 1990 0
 14874 04ee 07F11C03 		add	r3, r7, #28
 14875 04f2 5A4A     		ldr	r2, .L669+32
 14876 04f4 1C46     		mov	r4, r3
 14877 04f6 1346     		mov	r3, r2
 14878 04f8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14879 04fa 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1991:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14880              		.loc 1 1991 0
 14881 04fe 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14882 0502 574A     		ldr	r2, .L669+36
 14883 0504 1B01     		lsls	r3, r3, #4
 14884 0506 1344     		add	r3, r3, r2
 14885 0508 0C33     		adds	r3, r3, #12
 14886 050a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14887 050c 03F00103 		and	r3, r3, #1
 14888 0510 002B     		cmp	r3, #0
 14889 0512 0FD0     		beq	.L589
1992:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14890              		.loc 1 1992 0
 14891 0514 07F11C03 		add	r3, r7, #28
 14892 0518 1846     		mov	r0, r3
 14893 051a FFF7FEFF 		bl	strlen
 14894 051e 0346     		mov	r3, r0
 14895 0520 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 336


 14896 0522 07F11C03 		add	r3, r7, #28
 14897 0526 1344     		add	r3, r3, r2
 14898 0528 4E4A     		ldr	r2, .L669+40
 14899 052a 1068     		ldr	r0, [r2]	@ unaligned
 14900 052c 1860     		str	r0, [r3]	@ unaligned
 14901 052e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14902 0530 9A80     		strh	r2, [r3, #4]	@ unaligned
 14903 0532 0EE0     		b	.L590
 14904              	.L589:
1993:..\src/command_processing.c ****             } else {
1994:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14905              		.loc 1 1994 0
 14906 0534 07F11C03 		add	r3, r7, #28
 14907 0538 1846     		mov	r0, r3
 14908 053a FFF7FEFF 		bl	strlen
 14909 053e 0346     		mov	r3, r0
 14910 0540 1A46     		mov	r2, r3
 14911 0542 07F11C03 		add	r3, r7, #28
 14912 0546 1344     		add	r3, r3, r2
 14913 0548 474A     		ldr	r2, .L669+44
 14914 054a 1068     		ldr	r0, [r2]	@ unaligned
 14915 054c 1860     		str	r0, [r3]	@ unaligned
 14916 054e 1279     		ldrb	r2, [r2, #4]
 14917 0550 1A71     		strb	r2, [r3, #4]
 14918              	.L590:
1995:..\src/command_processing.c ****             }
1996:..\src/command_processing.c ****             strcat(info_string, str);
 14919              		.loc 1 1996 0
 14920 0552 07F11C03 		add	r3, r7, #28
 14921 0556 1946     		mov	r1, r3
 14922 0558 7869     		ldr	r0, [r7, #20]
 14923 055a FFF7FEFF 		bl	strcat
1997:..\src/command_processing.c ****                         
1998:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14924              		.loc 1 1998 0
 14925 055e 7869     		ldr	r0, [r7, #20]
 14926 0560 FFF7FEFF 		bl	strlen
 14927 0564 0346     		mov	r3, r0
 14928 0566 1A46     		mov	r2, r3
 14929 0568 7B69     		ldr	r3, [r7, #20]
 14930 056a 1344     		add	r3, r3, r2
 14931 056c 3F4A     		ldr	r2, .L669+48
 14932 056e 1D46     		mov	r5, r3
 14933 0570 1446     		mov	r4, r2
 14934 0572 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14935 0574 2860     		str	r0, [r5]	@ unaligned
 14936 0576 6960     		str	r1, [r5, #4]	@ unaligned
 14937 0578 AA60     		str	r2, [r5, #8]	@ unaligned
 14938 057a EB60     		str	r3, [r5, #12]	@ unaligned
 14939 057c 03CC     		ldmia	r4!, {r0, r1}
 14940 057e 2861     		str	r0, [r5, #16]	@ unaligned
 14941 0580 6961     		str	r1, [r5, #20]	@ unaligned
 14942 0582 2388     		ldrh	r3, [r4]	@ unaligned
 14943 0584 A278     		ldrb	r2, [r4, #2]
 14944 0586 2B83     		strh	r3, [r5, #24]	@ unaligned
 14945 0588 1346     		mov	r3, r2
 14946 058a AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 337


1999:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14947              		.loc 1 1999 0
 14948 058c D7F88430 		ldr	r3, [r7, #132]
 14949 0590 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14950 0594 012B     		cmp	r3, #1
 14951 0596 0CD1     		bne	.L591
2000:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14952              		.loc 1 2000 0
 14953 0598 7869     		ldr	r0, [r7, #20]
 14954 059a FFF7FEFF 		bl	strlen
 14955 059e 0346     		mov	r3, r0
 14956 05a0 1A46     		mov	r2, r3
 14957 05a2 7B69     		ldr	r3, [r7, #20]
 14958 05a4 1344     		add	r3, r3, r2
 14959 05a6 324A     		ldr	r2, .L669+52
 14960 05a8 1068     		ldr	r0, [r2]	@ unaligned
 14961 05aa 1860     		str	r0, [r3]	@ unaligned
 14962 05ac 1279     		ldrb	r2, [r2, #4]
 14963 05ae 1A71     		strb	r2, [r3, #4]
 14964 05b0 09E0     		b	.L592
 14965              	.L591:
2001:..\src/command_processing.c ****             else
2002:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14966              		.loc 1 2002 0
 14967 05b2 7869     		ldr	r0, [r7, #20]
 14968 05b4 FFF7FEFF 		bl	strlen
 14969 05b8 0346     		mov	r3, r0
 14970 05ba 1A46     		mov	r2, r3
 14971 05bc 7B69     		ldr	r3, [r7, #20]
 14972 05be 1344     		add	r3, r3, r2
 14973 05c0 2C4A     		ldr	r2, .L669+56
 14974 05c2 1068     		ldr	r0, [r2]	@ unaligned
 14975 05c4 1860     		str	r0, [r3]	@ unaligned
 14976              	.L592:
2003:..\src/command_processing.c ****             
2004:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14977              		.loc 1 2004 0
 14978 05c6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14979 05ca 2B4A     		ldr	r2, .L669+60
 14980 05cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 14981 05d0 1A46     		mov	r2, r3
 14982 05d2 07F11C03 		add	r3, r7, #28
 14983 05d6 2949     		ldr	r1, .L669+64
 14984 05d8 1846     		mov	r0, r3
 14985 05da FFF7FEFF 		bl	sprintf
2005:..\src/command_processing.c ****             strcat(info_string, str);
 14986              		.loc 1 2005 0
 14987 05de 07F11C03 		add	r3, r7, #28
 14988 05e2 1946     		mov	r1, r3
 14989 05e4 7869     		ldr	r0, [r7, #20]
 14990 05e6 FFF7FEFF 		bl	strcat
2006:..\src/command_processing.c **** 
2007:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14991              		.loc 1 2007 0
 14992 05ea 7869     		ldr	r0, [r7, #20]
 14993 05ec FFF7FEFF 		bl	strlen
 14994 05f0 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 338


 14995 05f2 1A46     		mov	r2, r3
 14996 05f4 7B69     		ldr	r3, [r7, #20]
 14997 05f6 1344     		add	r3, r3, r2
 14998 05f8 214A     		ldr	r2, .L669+68
 14999 05fa 1D46     		mov	r5, r3
 15000 05fc 1446     		mov	r4, r2
 15001 05fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15002 0600 2860     		str	r0, [r5]	@ unaligned
 15003 0602 6960     		str	r1, [r5, #4]	@ unaligned
 15004 0604 AA60     		str	r2, [r5, #8]	@ unaligned
 15005 0606 EB60     		str	r3, [r5, #12]	@ unaligned
 15006 0608 2068     		ldr	r0, [r4]	@ unaligned
 15007 060a 2861     		str	r0, [r5, #16]	@ unaligned
 15008 060c A388     		ldrh	r3, [r4, #4]	@ unaligned
 15009 060e AB82     		strh	r3, [r5, #20]	@ unaligned
2008:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15010              		.loc 1 2008 0
 15011 0610 7869     		ldr	r0, [r7, #20]
 15012 0612 FFF7FEFF 		bl	strlen
 15013 0616 0346     		mov	r3, r0
 15014 0618 1A46     		mov	r2, r3
 15015 061a 7B69     		ldr	r3, [r7, #20]
 15016 061c 1344     		add	r3, r3, r2
 15017 061e 194A     		ldr	r2, .L669+72
 15018 0620 1C46     		mov	r4, r3
 15019 0622 1346     		mov	r3, r2
 15020 0624 07CB     		ldmia	r3!, {r0, r1, r2}
 15021 0626 2060     		str	r0, [r4]	@ unaligned
 15022 0628 6160     		str	r1, [r4, #4]	@ unaligned
 15023 062a A260     		str	r2, [r4, #8]	@ unaligned
 15024 062c 1A88     		ldrh	r2, [r3]	@ unaligned
 15025 062e 9B78     		ldrb	r3, [r3, #2]
 15026 0630 A281     		strh	r2, [r4, #12]	@ unaligned
 15027 0632 A373     		strb	r3, [r4, #14]
2009:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15028              		.loc 1 2009 0
 15029 0634 0023     		movs	r3, #0
 15030 0636 C7F89430 		str	r3, [r7, #148]
 15031 063a 64E0     		b	.L593
 15032              	.L670:
 15033              		.align	2
 15034              	.L669:
 15035 063c E4120000 		.word	.LC168
 15036 0640 F4120000 		.word	.LC169
 15037 0644 04130000 		.word	.LC170
 15038 0648 14130000 		.word	.LC171
 15039 064c 20130000 		.word	.LC172
 15040 0650 00000000 		.word	g_refOld
 15041 0654 30130000 		.word	.LC173
 15042 0658 58110000 		.word	.LC152
 15043 065c 34130000 		.word	.LC174
 15044 0660 00000000 		.word	g_ref
 15045 0664 44130000 		.word	.LC175
 15046 0668 4C130000 		.word	.LC176
 15047 066c 54130000 		.word	.LC177
 15048 0670 70130000 		.word	.LC178
 15049 0674 78130000 		.word	.LC179
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 339


 15050 0678 00000000 		.word	dev_pwm_limit
 15051 067c 7C130000 		.word	.LC180
 15052 0680 8C130000 		.word	.LC181
 15053 0684 A4130000 		.word	.LC182
 15054              	.L595:
2010:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15055              		.loc 1 2010 0
 15056 0688 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15057 068c B849     		ldr	r1, .L671
 15058 068e 1346     		mov	r3, r2
 15059 0690 5B00     		lsls	r3, r3, #1
 15060 0692 1344     		add	r3, r3, r2
 15061 0694 9B00     		lsls	r3, r3, #2
 15062 0696 1344     		add	r3, r3, r2
 15063 0698 D7F89420 		ldr	r2, [r7, #148]
 15064 069c 1344     		add	r3, r3, r2
 15065 069e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15066 06a2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15067 06a6 D7F88C00 		ldr	r0, [r7, #140]
 15068 06aa 1346     		mov	r3, r2
 15069 06ac 5B00     		lsls	r3, r3, #1
 15070 06ae 1344     		add	r3, r3, r2
 15071 06b0 1B01     		lsls	r3, r3, #4
 15072 06b2 C218     		adds	r2, r0, r3
 15073 06b4 D7F89430 		ldr	r3, [r7, #148]
 15074 06b8 1344     		add	r3, r3, r2
 15075 06ba 03F29513 		addw	r3, r3, #405
 15076 06be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15077 06c0 41FA03F2 		asr	r2, r1, r3
 15078 06c4 07F11C03 		add	r3, r7, #28
 15079 06c8 AA49     		ldr	r1, .L671+4
 15080 06ca 1846     		mov	r0, r3
 15081 06cc FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****                 strcat(info_string, str);
 15082              		.loc 1 2011 0
 15083 06d0 07F11C03 		add	r3, r7, #28
 15084 06d4 1946     		mov	r1, r3
 15085 06d6 7869     		ldr	r0, [r7, #20]
 15086 06d8 FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15087              		.loc 1 2012 0
 15088 06dc D7F89430 		ldr	r3, [r7, #148]
 15089 06e0 022B     		cmp	r3, #2
 15090 06e2 0BD0     		beq	.L594
2013:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15091              		.loc 1 2013 0
 15092 06e4 7869     		ldr	r0, [r7, #20]
 15093 06e6 FFF7FEFF 		bl	strlen
 15094 06ea 0346     		mov	r3, r0
 15095 06ec 1A46     		mov	r2, r3
 15096 06ee 7B69     		ldr	r3, [r7, #20]
 15097 06f0 1344     		add	r3, r3, r2
 15098 06f2 A14A     		ldr	r2, .L671+8
 15099 06f4 1188     		ldrh	r1, [r2]	@ unaligned
 15100 06f6 9278     		ldrb	r2, [r2, #2]
 15101 06f8 1980     		strh	r1, [r3]	@ unaligned
 15102 06fa 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 340


 15103              	.L594:
2009:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15104              		.loc 1 2009 0 discriminator 2
 15105 06fc D7F89430 		ldr	r3, [r7, #148]
 15106 0700 0133     		adds	r3, r3, #1
 15107 0702 C7F89430 		str	r3, [r7, #148]
 15108              	.L593:
2009:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15109              		.loc 1 2009 0 is_stmt 0 discriminator 1
 15110 0706 D7F89430 		ldr	r3, [r7, #148]
 15111 070a 022B     		cmp	r3, #2
 15112 070c BCDD     		ble	.L595
2014:..\src/command_processing.c ****                 }                
2015:..\src/command_processing.c ****             }
2016:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15113              		.loc 1 2016 0 is_stmt 1
 15114 070e 7869     		ldr	r0, [r7, #20]
 15115 0710 FFF7FEFF 		bl	strlen
 15116 0714 0346     		mov	r3, r0
 15117 0716 1A46     		mov	r2, r3
 15118 0718 7B69     		ldr	r3, [r7, #20]
 15119 071a 1344     		add	r3, r3, r2
 15120 071c 974A     		ldr	r2, .L671+12
 15121 071e 1188     		ldrh	r1, [r2]	@ unaligned
 15122 0720 9278     		ldrb	r2, [r2, #2]
 15123 0722 1980     		strh	r1, [r3]	@ unaligned
 15124 0724 9A70     		strb	r2, [r3, #2]
2017:..\src/command_processing.c ****             
2018:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15125              		.loc 1 2018 0
 15126 0726 D7F88430 		ldr	r3, [r7, #132]
 15127 072a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15128 072e 062B     		cmp	r3, #6
 15129 0730 1AD1     		bne	.L596
2019:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15130              		.loc 1 2019 0
 15131 0732 934B     		ldr	r3, .L671+16
 15132 0734 1A6A     		ldr	r2, [r3, #32]
 15133 0736 924B     		ldr	r3, .L671+16
 15134 0738 5B6A     		ldr	r3, [r3, #36]
 15135 073a 07F11C00 		add	r0, r7, #28
 15136 073e 9149     		ldr	r1, .L671+20
 15137 0740 FFF7FEFF 		bl	sprintf
2020:..\src/command_processing.c ****                 strcat(info_string, str);
 15138              		.loc 1 2020 0
 15139 0744 07F11C03 		add	r3, r7, #28
 15140 0748 1946     		mov	r1, r3
 15141 074a 7869     		ldr	r0, [r7, #20]
 15142 074c FFF7FEFF 		bl	strcat
2021:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15143              		.loc 1 2021 0
 15144 0750 7869     		ldr	r0, [r7, #20]
 15145 0752 FFF7FEFF 		bl	strlen
 15146 0756 0346     		mov	r3, r0
 15147 0758 1A46     		mov	r2, r3
 15148 075a 7B69     		ldr	r3, [r7, #20]
 15149 075c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 341


 15150 075e 874A     		ldr	r2, .L671+12
 15151 0760 1188     		ldrh	r1, [r2]	@ unaligned
 15152 0762 9278     		ldrb	r2, [r2, #2]
 15153 0764 1980     		strh	r1, [r3]	@ unaligned
 15154 0766 9A70     		strb	r2, [r3, #2]
 15155              	.L596:
2022:..\src/command_processing.c ****             }
2023:..\src/command_processing.c **** 
2024:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15156              		.loc 1 2024 0
 15157 0768 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15158 076c 591C     		adds	r1, r3, #1
 15159 076e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15160 0772 854A     		ldr	r2, .L671+24
 15161 0774 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15162 0778 07F11C00 		add	r0, r7, #28
 15163 077c 0A46     		mov	r2, r1
 15164 077e 8349     		ldr	r1, .L671+28
 15165 0780 FFF7FEFF 		bl	sprintf
2025:..\src/command_processing.c ****             strcat(info_string, str);
 15166              		.loc 1 2025 0
 15167 0784 07F11C03 		add	r3, r7, #28
 15168 0788 1946     		mov	r1, r3
 15169 078a 7869     		ldr	r0, [r7, #20]
 15170 078c FFF7FEFF 		bl	strcat
2026:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15171              		.loc 1 2026 0
 15172 0790 7869     		ldr	r0, [r7, #20]
 15173 0792 FFF7FEFF 		bl	strlen
 15174 0796 0346     		mov	r3, r0
 15175 0798 1A46     		mov	r2, r3
 15176 079a 7B69     		ldr	r3, [r7, #20]
 15177 079c 1344     		add	r3, r3, r2
 15178 079e 774A     		ldr	r2, .L671+12
 15179 07a0 1188     		ldrh	r1, [r2]	@ unaligned
 15180 07a2 9278     		ldrb	r2, [r2, #2]
 15181 07a4 1980     		strh	r1, [r3]	@ unaligned
 15182 07a6 9A70     		strb	r2, [r3, #2]
2027:..\src/command_processing.c ****             
2028:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15183              		.loc 1 2028 0
 15184 07a8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15185 07ac 591C     		adds	r1, r3, #1
 15186 07ae 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15187 07b2 774A     		ldr	r2, .L671+32
 15188 07b4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15189 07b8 07F11C00 		add	r0, r7, #28
 15190 07bc 0A46     		mov	r2, r1
 15191 07be 7549     		ldr	r1, .L671+36
 15192 07c0 FFF7FEFF 		bl	sprintf
2029:..\src/command_processing.c ****             strcat(info_string, str);
 15193              		.loc 1 2029 0
 15194 07c4 07F11C03 		add	r3, r7, #28
 15195 07c8 1946     		mov	r1, r3
 15196 07ca 7869     		ldr	r0, [r7, #20]
 15197 07cc FFF7FEFF 		bl	strcat
2030:..\src/command_processing.c ****             strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 342


 15198              		.loc 1 2030 0
 15199 07d0 7869     		ldr	r0, [r7, #20]
 15200 07d2 FFF7FEFF 		bl	strlen
 15201 07d6 0346     		mov	r3, r0
 15202 07d8 1A46     		mov	r2, r3
 15203 07da 7B69     		ldr	r3, [r7, #20]
 15204 07dc 1344     		add	r3, r3, r2
 15205 07de 674A     		ldr	r2, .L671+12
 15206 07e0 1188     		ldrh	r1, [r2]	@ unaligned
 15207 07e2 9278     		ldrb	r2, [r2, #2]
 15208 07e4 1980     		strh	r1, [r3]	@ unaligned
 15209 07e6 9A70     		strb	r2, [r3, #2]
2031:..\src/command_processing.c **** 
2032:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15210              		.loc 1 2032 0
 15211 07e8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15212 07ec 5C1C     		adds	r4, r3, #1
 15213 07ee 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15214 07f2 5F4A     		ldr	r2, .L671
 15215 07f4 3421     		movs	r1, #52
 15216 07f6 01FB03F3 		mul	r3, r1, r3
 15217 07fa 1344     		add	r3, r3, r2
 15218 07fc 0C33     		adds	r3, r3, #12
 15219 07fe 1B68     		ldr	r3, [r3]
 15220 0800 07F11C00 		add	r0, r7, #28
 15221 0804 2246     		mov	r2, r4
 15222 0806 6449     		ldr	r1, .L671+40
 15223 0808 FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****             strcat(info_string, str);
 15224              		.loc 1 2033 0
 15225 080c 07F11C03 		add	r3, r7, #28
 15226 0810 1946     		mov	r1, r3
 15227 0812 7869     		ldr	r0, [r7, #20]
 15228 0814 FFF7FEFF 		bl	strcat
2034:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15229              		.loc 1 2034 0
 15230 0818 7869     		ldr	r0, [r7, #20]
 15231 081a FFF7FEFF 		bl	strlen
 15232 081e 0346     		mov	r3, r0
 15233 0820 1A46     		mov	r2, r3
 15234 0822 7B69     		ldr	r3, [r7, #20]
 15235 0824 1344     		add	r3, r3, r2
 15236 0826 554A     		ldr	r2, .L671+12
 15237 0828 1188     		ldrh	r1, [r2]	@ unaligned
 15238 082a 9278     		ldrb	r2, [r2, #2]
 15239 082c 1980     		strh	r1, [r3]	@ unaligned
 15240 082e 9A70     		strb	r2, [r3, #2]
2035:..\src/command_processing.c ****             
2036:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15241              		.loc 1 2036 0
 15242 0830 D7F88430 		ldr	r3, [r7, #132]
 15243 0834 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15244 0838 012B     		cmp	r3, #1
 15245 083a 23D1     		bne	.L597
2037:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15246              		.loc 1 2037 0
 15247 083c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 343


 15248 0840 5C1C     		adds	r4, r3, #1
 15249 0842 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15250 0846 4A4A     		ldr	r2, .L671
 15251 0848 3421     		movs	r1, #52
 15252 084a 01FB03F3 		mul	r3, r1, r3
 15253 084e 1344     		add	r3, r3, r2
 15254 0850 1433     		adds	r3, r3, #20
 15255 0852 1B68     		ldr	r3, [r3]
 15256 0854 07F11C00 		add	r0, r7, #28
 15257 0858 2246     		mov	r2, r4
 15258 085a 5049     		ldr	r1, .L671+44
 15259 085c FFF7FEFF 		bl	sprintf
2038:..\src/command_processing.c ****                 strcat(info_string, str);
 15260              		.loc 1 2038 0
 15261 0860 07F11C03 		add	r3, r7, #28
 15262 0864 1946     		mov	r1, r3
 15263 0866 7869     		ldr	r0, [r7, #20]
 15264 0868 FFF7FEFF 		bl	strcat
2039:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15265              		.loc 1 2039 0
 15266 086c 7869     		ldr	r0, [r7, #20]
 15267 086e FFF7FEFF 		bl	strlen
 15268 0872 0346     		mov	r3, r0
 15269 0874 1A46     		mov	r2, r3
 15270 0876 7B69     		ldr	r3, [r7, #20]
 15271 0878 1344     		add	r3, r3, r2
 15272 087a 404A     		ldr	r2, .L671+12
 15273 087c 1188     		ldrh	r1, [r2]	@ unaligned
 15274 087e 9278     		ldrb	r2, [r2, #2]
 15275 0880 1980     		strh	r1, [r3]	@ unaligned
 15276 0882 9A70     		strb	r2, [r3, #2]
 15277              	.L597:
2040:..\src/command_processing.c ****             }
2041:..\src/command_processing.c ****             
2042:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15278              		.loc 1 2042 0
 15279 0884 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15280 0888 5A1C     		adds	r2, r3, #1
 15281 088a 07F11C03 		add	r3, r7, #28
 15282 088e 4449     		ldr	r1, .L671+48
 15283 0890 1846     		mov	r0, r3
 15284 0892 FFF7FEFF 		bl	sprintf
2043:..\src/command_processing.c ****             strcat(info_string, str);
 15285              		.loc 1 2043 0
 15286 0896 07F11C03 		add	r3, r7, #28
 15287 089a 1946     		mov	r1, r3
 15288 089c 7869     		ldr	r0, [r7, #20]
 15289 089e FFF7FEFF 		bl	strcat
2044:..\src/command_processing.c **** 
2045:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15290              		.loc 1 2045 0
 15291 08a2 7869     		ldr	r0, [r7, #20]
 15292 08a4 FFF7FEFF 		bl	strlen
 15293 08a8 0346     		mov	r3, r0
 15294 08aa 1A46     		mov	r2, r3
 15295 08ac 7B69     		ldr	r3, [r7, #20]
 15296 08ae 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 344


 15297 08b0 3C4A     		ldr	r2, .L671+52
 15298 08b2 1D46     		mov	r5, r3
 15299 08b4 1446     		mov	r4, r2
 15300 08b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15301 08b8 2860     		str	r0, [r5]	@ unaligned
 15302 08ba 6960     		str	r1, [r5, #4]	@ unaligned
 15303 08bc AA60     		str	r2, [r5, #8]	@ unaligned
 15304 08be EB60     		str	r3, [r5, #12]	@ unaligned
 15305 08c0 2378     		ldrb	r3, [r4]
 15306 08c2 2B74     		strb	r3, [r5, #16]
2046:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15307              		.loc 1 2046 0
 15308 08c4 D7F88430 		ldr	r3, [r7, #132]
 15309 08c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15310 08cc 032B     		cmp	r3, #3
 15311 08ce 73D0     		beq	.L598
2047:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15312              		.loc 1 2047 0
 15313 08d0 D7F88430 		ldr	r3, [r7, #132]
 15314 08d4 1B68     		ldr	r3, [r3]
 15315 08d6 1846     		mov	r0, r3
 15316 08d8 FFF7FEFF 		bl	__aeabi_i2d
 15317 08dc 4FF00002 		mov	r2, #0
 15318 08e0 314B     		ldr	r3, .L671+56
 15319 08e2 FFF7FEFF 		bl	__aeabi_ddiv
 15320 08e6 0346     		mov	r3, r0
 15321 08e8 0C46     		mov	r4, r1
 15322 08ea 07F11C00 		add	r0, r7, #28
 15323 08ee 1A46     		mov	r2, r3
 15324 08f0 2346     		mov	r3, r4
 15325 08f2 2E49     		ldr	r1, .L671+60
 15326 08f4 FFF7FEFF 		bl	sprintf
2048:..\src/command_processing.c ****                 strcat(info_string, str);
 15327              		.loc 1 2048 0
 15328 08f8 07F11C03 		add	r3, r7, #28
 15329 08fc 1946     		mov	r1, r3
 15330 08fe 7869     		ldr	r0, [r7, #20]
 15331 0900 FFF7FEFF 		bl	strcat
2049:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15332              		.loc 1 2049 0
 15333 0904 D7F88430 		ldr	r3, [r7, #132]
 15334 0908 5B68     		ldr	r3, [r3, #4]
 15335 090a 1846     		mov	r0, r3
 15336 090c FFF7FEFF 		bl	__aeabi_i2d
 15337 0910 4FF00002 		mov	r2, #0
 15338 0914 244B     		ldr	r3, .L671+56
 15339 0916 FFF7FEFF 		bl	__aeabi_ddiv
 15340 091a 0346     		mov	r3, r0
 15341 091c 0C46     		mov	r4, r1
 15342 091e 07F11C00 		add	r0, r7, #28
 15343 0922 1A46     		mov	r2, r3
 15344 0924 2346     		mov	r3, r4
 15345 0926 2249     		ldr	r1, .L671+64
 15346 0928 FFF7FEFF 		bl	sprintf
2050:..\src/command_processing.c ****                 strcat(info_string, str);
 15347              		.loc 1 2050 0
 15348 092c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 345


 15349 0930 1946     		mov	r1, r3
 15350 0932 7869     		ldr	r0, [r7, #20]
 15351 0934 FFF7FEFF 		bl	strcat
2051:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15352              		.loc 1 2051 0
 15353 0938 D7F88430 		ldr	r3, [r7, #132]
 15354 093c 9B68     		ldr	r3, [r3, #8]
 15355 093e 1846     		mov	r0, r3
 15356 0940 FFF7FEFF 		bl	__aeabi_i2d
 15357 0944 4FF00002 		mov	r2, #0
 15358 0948 174B     		ldr	r3, .L671+56
 15359 094a FFF7FEFF 		bl	__aeabi_ddiv
 15360 094e 0346     		mov	r3, r0
 15361 0950 0C46     		mov	r4, r1
 15362 0952 07F11C00 		add	r0, r7, #28
 15363 0956 1A46     		mov	r2, r3
 15364 0958 2346     		mov	r3, r4
 15365 095a 1649     		ldr	r1, .L671+68
 15366 095c FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****                 strcat(info_string, str);
 15367              		.loc 1 2052 0
 15368 0960 07F11C03 		add	r3, r7, #28
 15369 0964 1946     		mov	r1, r3
 15370 0966 7869     		ldr	r0, [r7, #20]
 15371 0968 FFF7FEFF 		bl	strcat
 15372 096c 72E0     		b	.L599
 15373              	.L672:
 15374 096e 00BF     		.align	2
 15375              	.L671:
 15376 0970 00000000 		.word	g_meas
 15377 0974 B4130000 		.word	.LC183
 15378 0978 B8130000 		.word	.LC184
 15379 097c 58110000 		.word	.LC152
 15380 0980 00000000 		.word	g_adc_measOld
 15381 0984 BC130000 		.word	.LC185
 15382 0988 00000000 		.word	dev_tension
 15383 098c DC130000 		.word	.LC186
 15384 0990 00000000 		.word	pow_tension
 15385 0994 FC130000 		.word	.LC187
 15386 0998 24140000 		.word	.LC188
 15387 099c 3C140000 		.word	.LC189
 15388 09a0 64140000 		.word	.LC190
 15389 09a4 80140000 		.word	.LC191
 15390 09a8 0000F040 		.word	1089470464
 15391 09ac 94140000 		.word	.LC192
 15392 09b0 A0140000 		.word	.LC193
 15393 09b4 AC140000 		.word	.LC194
 15394              	.L598:
2053:..\src/command_processing.c ****             }
2054:..\src/command_processing.c ****             else { 
2055:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15395              		.loc 1 2055 0
 15396 09b8 D7F88430 		ldr	r3, [r7, #132]
 15397 09bc 9B69     		ldr	r3, [r3, #24]
 15398 09be 1846     		mov	r0, r3
 15399 09c0 FFF7FEFF 		bl	__aeabi_i2d
 15400 09c4 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 346


 15401 09c8 CE4B     		ldr	r3, .L673
 15402 09ca FFF7FEFF 		bl	__aeabi_ddiv
 15403 09ce 0346     		mov	r3, r0
 15404 09d0 0C46     		mov	r4, r1
 15405 09d2 07F11C00 		add	r0, r7, #28
 15406 09d6 1A46     		mov	r2, r3
 15407 09d8 2346     		mov	r3, r4
 15408 09da CB49     		ldr	r1, .L673+4
 15409 09dc FFF7FEFF 		bl	sprintf
2056:..\src/command_processing.c ****                 strcat(info_string, str);
 15410              		.loc 1 2056 0
 15411 09e0 07F11C03 		add	r3, r7, #28
 15412 09e4 1946     		mov	r1, r3
 15413 09e6 7869     		ldr	r0, [r7, #20]
 15414 09e8 FFF7FEFF 		bl	strcat
2057:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15415              		.loc 1 2057 0
 15416 09ec D7F88430 		ldr	r3, [r7, #132]
 15417 09f0 DB69     		ldr	r3, [r3, #28]
 15418 09f2 1846     		mov	r0, r3
 15419 09f4 FFF7FEFF 		bl	__aeabi_i2d
 15420 09f8 4FF00002 		mov	r2, #0
 15421 09fc C14B     		ldr	r3, .L673
 15422 09fe FFF7FEFF 		bl	__aeabi_ddiv
 15423 0a02 0346     		mov	r3, r0
 15424 0a04 0C46     		mov	r4, r1
 15425 0a06 07F11C00 		add	r0, r7, #28
 15426 0a0a 1A46     		mov	r2, r3
 15427 0a0c 2346     		mov	r3, r4
 15428 0a0e BF49     		ldr	r1, .L673+8
 15429 0a10 FFF7FEFF 		bl	sprintf
2058:..\src/command_processing.c ****                 strcat(info_string, str);
 15430              		.loc 1 2058 0
 15431 0a14 07F11C03 		add	r3, r7, #28
 15432 0a18 1946     		mov	r1, r3
 15433 0a1a 7869     		ldr	r0, [r7, #20]
 15434 0a1c FFF7FEFF 		bl	strcat
2059:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15435              		.loc 1 2059 0
 15436 0a20 D7F88430 		ldr	r3, [r7, #132]
 15437 0a24 1B6A     		ldr	r3, [r3, #32]
 15438 0a26 1846     		mov	r0, r3
 15439 0a28 FFF7FEFF 		bl	__aeabi_i2d
 15440 0a2c 4FF00002 		mov	r2, #0
 15441 0a30 B44B     		ldr	r3, .L673
 15442 0a32 FFF7FEFF 		bl	__aeabi_ddiv
 15443 0a36 0346     		mov	r3, r0
 15444 0a38 0C46     		mov	r4, r1
 15445 0a3a 07F11C00 		add	r0, r7, #28
 15446 0a3e 1A46     		mov	r2, r3
 15447 0a40 2346     		mov	r3, r4
 15448 0a42 B349     		ldr	r1, .L673+12
 15449 0a44 FFF7FEFF 		bl	sprintf
2060:..\src/command_processing.c ****                 strcat(info_string, str);
 15450              		.loc 1 2060 0
 15451 0a48 07F11C03 		add	r3, r7, #28
 15452 0a4c 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 347


 15453 0a4e 7869     		ldr	r0, [r7, #20]
 15454 0a50 FFF7FEFF 		bl	strcat
 15455              	.L599:
2061:..\src/command_processing.c ****             }
2062:..\src/command_processing.c **** 
2063:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15456              		.loc 1 2063 0
 15457 0a54 7869     		ldr	r0, [r7, #20]
 15458 0a56 FFF7FEFF 		bl	strlen
 15459 0a5a 0346     		mov	r3, r0
 15460 0a5c 1A46     		mov	r2, r3
 15461 0a5e 7B69     		ldr	r3, [r7, #20]
 15462 0a60 1344     		add	r3, r3, r2
 15463 0a62 AC4A     		ldr	r2, .L673+16
 15464 0a64 1D46     		mov	r5, r3
 15465 0a66 1446     		mov	r4, r2
 15466 0a68 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15467 0a6a 2860     		str	r0, [r5]	@ unaligned
 15468 0a6c 6960     		str	r1, [r5, #4]	@ unaligned
 15469 0a6e AA60     		str	r2, [r5, #8]	@ unaligned
 15470 0a70 EB60     		str	r3, [r5, #12]	@ unaligned
 15471 0a72 03CC     		ldmia	r4!, {r0, r1}
 15472 0a74 2861     		str	r0, [r5, #16]	@ unaligned
 15473 0a76 6961     		str	r1, [r5, #20]	@ unaligned
 15474 0a78 2378     		ldrb	r3, [r4]
 15475 0a7a 2B76     		strb	r3, [r5, #24]
2064:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15476              		.loc 1 2064 0
 15477 0a7c D7F88430 		ldr	r3, [r7, #132]
 15478 0a80 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15479 0a84 032B     		cmp	r3, #3
 15480 0a86 4ED0     		beq	.L600
2065:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15481              		.loc 1 2065 0
 15482 0a88 D7F88430 		ldr	r3, [r7, #132]
 15483 0a8c DB68     		ldr	r3, [r3, #12]
 15484 0a8e 1846     		mov	r0, r3
 15485 0a90 FFF7FEFF 		bl	__aeabi_i2d
 15486 0a94 4FF00002 		mov	r2, #0
 15487 0a98 9A4B     		ldr	r3, .L673
 15488 0a9a FFF7FEFF 		bl	__aeabi_ddiv
 15489 0a9e 0346     		mov	r3, r0
 15490 0aa0 0C46     		mov	r4, r1
 15491 0aa2 07F11C00 		add	r0, r7, #28
 15492 0aa6 1A46     		mov	r2, r3
 15493 0aa8 2346     		mov	r3, r4
 15494 0aaa 9749     		ldr	r1, .L673+4
 15495 0aac FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****                 strcat(info_string, str);
 15496              		.loc 1 2066 0
 15497 0ab0 07F11C03 		add	r3, r7, #28
 15498 0ab4 1946     		mov	r1, r3
 15499 0ab6 7869     		ldr	r0, [r7, #20]
 15500 0ab8 FFF7FEFF 		bl	strcat
2067:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15501              		.loc 1 2067 0
 15502 0abc D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 348


 15503 0ac0 1B69     		ldr	r3, [r3, #16]
 15504 0ac2 1846     		mov	r0, r3
 15505 0ac4 FFF7FEFF 		bl	__aeabi_i2d
 15506 0ac8 4FF00002 		mov	r2, #0
 15507 0acc 8D4B     		ldr	r3, .L673
 15508 0ace FFF7FEFF 		bl	__aeabi_ddiv
 15509 0ad2 0346     		mov	r3, r0
 15510 0ad4 0C46     		mov	r4, r1
 15511 0ad6 07F11C00 		add	r0, r7, #28
 15512 0ada 1A46     		mov	r2, r3
 15513 0adc 2346     		mov	r3, r4
 15514 0ade 8B49     		ldr	r1, .L673+8
 15515 0ae0 FFF7FEFF 		bl	sprintf
2068:..\src/command_processing.c ****                 strcat(info_string, str);
 15516              		.loc 1 2068 0
 15517 0ae4 07F11C03 		add	r3, r7, #28
 15518 0ae8 1946     		mov	r1, r3
 15519 0aea 7869     		ldr	r0, [r7, #20]
 15520 0aec FFF7FEFF 		bl	strcat
2069:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15521              		.loc 1 2069 0
 15522 0af0 D7F88430 		ldr	r3, [r7, #132]
 15523 0af4 5B69     		ldr	r3, [r3, #20]
 15524 0af6 1846     		mov	r0, r3
 15525 0af8 FFF7FEFF 		bl	__aeabi_i2d
 15526 0afc 4FF00002 		mov	r2, #0
 15527 0b00 804B     		ldr	r3, .L673
 15528 0b02 FFF7FEFF 		bl	__aeabi_ddiv
 15529 0b06 0346     		mov	r3, r0
 15530 0b08 0C46     		mov	r4, r1
 15531 0b0a 07F11C00 		add	r0, r7, #28
 15532 0b0e 1A46     		mov	r2, r3
 15533 0b10 2346     		mov	r3, r4
 15534 0b12 7F49     		ldr	r1, .L673+12
 15535 0b14 FFF7FEFF 		bl	sprintf
2070:..\src/command_processing.c ****                 strcat(info_string, str);
 15536              		.loc 1 2070 0
 15537 0b18 07F11C03 		add	r3, r7, #28
 15538 0b1c 1946     		mov	r1, r3
 15539 0b1e 7869     		ldr	r0, [r7, #20]
 15540 0b20 FFF7FEFF 		bl	strcat
 15541 0b24 4DE0     		b	.L601
 15542              	.L600:
2071:..\src/command_processing.c **** 
2072:..\src/command_processing.c ****             }
2073:..\src/command_processing.c ****             else {
2074:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15543              		.loc 1 2074 0
 15544 0b26 D7F88430 		ldr	r3, [r7, #132]
 15545 0b2a 5B6A     		ldr	r3, [r3, #36]
 15546 0b2c 1846     		mov	r0, r3
 15547 0b2e FFF7FEFF 		bl	__aeabi_i2d
 15548 0b32 4FF00002 		mov	r2, #0
 15549 0b36 734B     		ldr	r3, .L673
 15550 0b38 FFF7FEFF 		bl	__aeabi_ddiv
 15551 0b3c 0346     		mov	r3, r0
 15552 0b3e 0C46     		mov	r4, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 349


 15553 0b40 07F11C00 		add	r0, r7, #28
 15554 0b44 1A46     		mov	r2, r3
 15555 0b46 2346     		mov	r3, r4
 15556 0b48 6F49     		ldr	r1, .L673+4
 15557 0b4a FFF7FEFF 		bl	sprintf
2075:..\src/command_processing.c ****                 strcat(info_string, str);
 15558              		.loc 1 2075 0
 15559 0b4e 07F11C03 		add	r3, r7, #28
 15560 0b52 1946     		mov	r1, r3
 15561 0b54 7869     		ldr	r0, [r7, #20]
 15562 0b56 FFF7FEFF 		bl	strcat
2076:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15563              		.loc 1 2076 0
 15564 0b5a D7F88430 		ldr	r3, [r7, #132]
 15565 0b5e 9B6A     		ldr	r3, [r3, #40]
 15566 0b60 1846     		mov	r0, r3
 15567 0b62 FFF7FEFF 		bl	__aeabi_i2d
 15568 0b66 4FF00002 		mov	r2, #0
 15569 0b6a 664B     		ldr	r3, .L673
 15570 0b6c FFF7FEFF 		bl	__aeabi_ddiv
 15571 0b70 0346     		mov	r3, r0
 15572 0b72 0C46     		mov	r4, r1
 15573 0b74 07F11C00 		add	r0, r7, #28
 15574 0b78 1A46     		mov	r2, r3
 15575 0b7a 2346     		mov	r3, r4
 15576 0b7c 6349     		ldr	r1, .L673+8
 15577 0b7e FFF7FEFF 		bl	sprintf
2077:..\src/command_processing.c ****                 strcat(info_string, str);
 15578              		.loc 1 2077 0
 15579 0b82 07F11C03 		add	r3, r7, #28
 15580 0b86 1946     		mov	r1, r3
 15581 0b88 7869     		ldr	r0, [r7, #20]
 15582 0b8a FFF7FEFF 		bl	strcat
2078:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15583              		.loc 1 2078 0
 15584 0b8e D7F88430 		ldr	r3, [r7, #132]
 15585 0b92 DB6A     		ldr	r3, [r3, #44]
 15586 0b94 1846     		mov	r0, r3
 15587 0b96 FFF7FEFF 		bl	__aeabi_i2d
 15588 0b9a 4FF00002 		mov	r2, #0
 15589 0b9e 594B     		ldr	r3, .L673
 15590 0ba0 FFF7FEFF 		bl	__aeabi_ddiv
 15591 0ba4 0346     		mov	r3, r0
 15592 0ba6 0C46     		mov	r4, r1
 15593 0ba8 07F11C00 		add	r0, r7, #28
 15594 0bac 1A46     		mov	r2, r3
 15595 0bae 2346     		mov	r3, r4
 15596 0bb0 5749     		ldr	r1, .L673+12
 15597 0bb2 FFF7FEFF 		bl	sprintf
2079:..\src/command_processing.c ****                 strcat(info_string, str);
 15598              		.loc 1 2079 0
 15599 0bb6 07F11C03 		add	r3, r7, #28
 15600 0bba 1946     		mov	r1, r3
 15601 0bbc 7869     		ldr	r0, [r7, #20]
 15602 0bbe FFF7FEFF 		bl	strcat
 15603              	.L601:
2080:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 350


2081:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15604              		.loc 1 2081 0
 15605 0bc2 D7F88430 		ldr	r3, [r7, #132]
 15606 0bc6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15607 0bca 012B     		cmp	r3, #1
 15608 0bcc 14D1     		bne	.L602
2082:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15609              		.loc 1 2082 0
 15610 0bce 7869     		ldr	r0, [r7, #20]
 15611 0bd0 FFF7FEFF 		bl	strlen
 15612 0bd4 0346     		mov	r3, r0
 15613 0bd6 1A46     		mov	r2, r3
 15614 0bd8 7B69     		ldr	r3, [r7, #20]
 15615 0bda 1344     		add	r3, r3, r2
 15616 0bdc 4E4A     		ldr	r2, .L673+20
 15617 0bde 1D46     		mov	r5, r3
 15618 0be0 1446     		mov	r4, r2
 15619 0be2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15620 0be4 2860     		str	r0, [r5]	@ unaligned
 15621 0be6 6960     		str	r1, [r5, #4]	@ unaligned
 15622 0be8 AA60     		str	r2, [r5, #8]	@ unaligned
 15623 0bea EB60     		str	r3, [r5, #12]	@ unaligned
 15624 0bec 03CC     		ldmia	r4!, {r0, r1}
 15625 0bee 2861     		str	r0, [r5, #16]	@ unaligned
 15626 0bf0 6961     		str	r1, [r5, #20]	@ unaligned
 15627 0bf2 2388     		ldrh	r3, [r4]	@ unaligned
 15628 0bf4 2B83     		strh	r3, [r5, #24]	@ unaligned
 15629 0bf6 13E0     		b	.L603
 15630              	.L602:
2083:..\src/command_processing.c ****             else
2084:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15631              		.loc 1 2084 0
 15632 0bf8 7869     		ldr	r0, [r7, #20]
 15633 0bfa FFF7FEFF 		bl	strlen
 15634 0bfe 0346     		mov	r3, r0
 15635 0c00 1A46     		mov	r2, r3
 15636 0c02 7B69     		ldr	r3, [r7, #20]
 15637 0c04 1344     		add	r3, r3, r2
 15638 0c06 454A     		ldr	r2, .L673+24
 15639 0c08 1D46     		mov	r5, r3
 15640 0c0a 1446     		mov	r4, r2
 15641 0c0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15642 0c0e 2860     		str	r0, [r5]	@ unaligned
 15643 0c10 6960     		str	r1, [r5, #4]	@ unaligned
 15644 0c12 AA60     		str	r2, [r5, #8]	@ unaligned
 15645 0c14 EB60     		str	r3, [r5, #12]	@ unaligned
 15646 0c16 03CC     		ldmia	r4!, {r0, r1}
 15647 0c18 2861     		str	r0, [r5, #16]	@ unaligned
 15648 0c1a 6961     		str	r1, [r5, #20]	@ unaligned
 15649 0c1c 2378     		ldrb	r3, [r4]
 15650 0c1e 2B76     		strb	r3, [r5, #24]
 15651              	.L603:
2085:..\src/command_processing.c **** 
2086:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15652              		.loc 1 2086 0
 15653 0c20 D7F88430 		ldr	r3, [r7, #132]
 15654 0c24 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 351


 15655 0c28 072B     		cmp	r3, #7
 15656 0c2a 00F2EA80 		bhi	.L604
 15657 0c2e 01A2     		adr	r2, .L606
 15658 0c30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15659              		.p2align 2
 15660              	.L606:
 15661 0c34 550C0000 		.word	.L605+1
 15662 0c38 790C0000 		.word	.L607+1
 15663 0c3c A10C0000 		.word	.L608+1
 15664 0c40 D30C0000 		.word	.L609+1
 15665 0c44 310D0000 		.word	.L610+1
 15666 0c48 5F0D0000 		.word	.L611+1
 15667 0c4c 8F0D0000 		.word	.L612+1
 15668 0c50 BD0D0000 		.word	.L613+1
 15669              		.p2align 1
 15670              	.L605:
2087:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2088:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15671              		.loc 1 2088 0
 15672 0c54 7869     		ldr	r0, [r7, #20]
 15673 0c56 FFF7FEFF 		bl	strlen
 15674 0c5a 0346     		mov	r3, r0
 15675 0c5c 1A46     		mov	r2, r3
 15676 0c5e 7B69     		ldr	r3, [r7, #20]
 15677 0c60 1344     		add	r3, r3, r2
 15678 0c62 2F4A     		ldr	r2, .L673+28
 15679 0c64 1D46     		mov	r5, r3
 15680 0c66 1446     		mov	r4, r2
 15681 0c68 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15682 0c6a 2860     		str	r0, [r5]	@ unaligned
 15683 0c6c 6960     		str	r1, [r5, #4]	@ unaligned
 15684 0c6e AA60     		str	r2, [r5, #8]	@ unaligned
 15685 0c70 EB60     		str	r3, [r5, #12]	@ unaligned
 15686 0c72 2388     		ldrh	r3, [r4]	@ unaligned
 15687 0c74 2B82     		strh	r3, [r5, #16]	@ unaligned
2089:..\src/command_processing.c ****                     break;
 15688              		.loc 1 2089 0
 15689 0c76 C4E0     		b	.L604
 15690              	.L607:
2090:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2091:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15691              		.loc 1 2091 0
 15692 0c78 7869     		ldr	r0, [r7, #20]
 15693 0c7a FFF7FEFF 		bl	strlen
 15694 0c7e 0346     		mov	r3, r0
 15695 0c80 1A46     		mov	r2, r3
 15696 0c82 7B69     		ldr	r3, [r7, #20]
 15697 0c84 1344     		add	r3, r3, r2
 15698 0c86 274A     		ldr	r2, .L673+32
 15699 0c88 1D46     		mov	r5, r3
 15700 0c8a 1446     		mov	r4, r2
 15701 0c8c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15702 0c8e 2860     		str	r0, [r5]	@ unaligned
 15703 0c90 6960     		str	r1, [r5, #4]	@ unaligned
 15704 0c92 AA60     		str	r2, [r5, #8]	@ unaligned
 15705 0c94 EB60     		str	r3, [r5, #12]	@ unaligned
 15706 0c96 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 352


 15707 0c98 2861     		str	r0, [r5, #16]	@ unaligned
 15708 0c9a 2379     		ldrb	r3, [r4, #4]
 15709 0c9c 2B75     		strb	r3, [r5, #20]
2092:..\src/command_processing.c ****                     break;
 15710              		.loc 1 2092 0
 15711 0c9e B0E0     		b	.L604
 15712              	.L608:
2093:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2094:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15713              		.loc 1 2094 0
 15714 0ca0 7869     		ldr	r0, [r7, #20]
 15715 0ca2 FFF7FEFF 		bl	strlen
 15716 0ca6 0346     		mov	r3, r0
 15717 0ca8 1A46     		mov	r2, r3
 15718 0caa 7B69     		ldr	r3, [r7, #20]
 15719 0cac 1344     		add	r3, r3, r2
 15720 0cae 1E4A     		ldr	r2, .L673+36
 15721 0cb0 1D46     		mov	r5, r3
 15722 0cb2 1446     		mov	r4, r2
 15723 0cb4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15724 0cb6 2860     		str	r0, [r5]	@ unaligned
 15725 0cb8 6960     		str	r1, [r5, #4]	@ unaligned
 15726 0cba AA60     		str	r2, [r5, #8]	@ unaligned
 15727 0cbc EB60     		str	r3, [r5, #12]	@ unaligned
 15728 0cbe 07CC     		ldmia	r4!, {r0, r1, r2}
 15729 0cc0 2861     		str	r0, [r5, #16]	@ unaligned
 15730 0cc2 6961     		str	r1, [r5, #20]	@ unaligned
 15731 0cc4 AA61     		str	r2, [r5, #24]	@ unaligned
 15732 0cc6 2388     		ldrh	r3, [r4]	@ unaligned
 15733 0cc8 A278     		ldrb	r2, [r4, #2]
 15734 0cca AB83     		strh	r3, [r5, #28]	@ unaligned
 15735 0ccc 1346     		mov	r3, r2
 15736 0cce AB77     		strb	r3, [r5, #30]
2095:..\src/command_processing.c ****                     break;
 15737              		.loc 1 2095 0
 15738 0cd0 97E0     		b	.L604
 15739              	.L609:
2096:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2097:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15740              		.loc 1 2097 0
 15741 0cd2 7869     		ldr	r0, [r7, #20]
 15742 0cd4 FFF7FEFF 		bl	strlen
 15743 0cd8 0346     		mov	r3, r0
 15744 0cda 1A46     		mov	r2, r3
 15745 0cdc 7B69     		ldr	r3, [r7, #20]
 15746 0cde 1344     		add	r3, r3, r2
 15747 0ce0 124A     		ldr	r2, .L673+40
 15748 0ce2 1D46     		mov	r5, r3
 15749 0ce4 1446     		mov	r4, r2
 15750 0ce6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15751 0ce8 2860     		str	r0, [r5]	@ unaligned
 15752 0cea 6960     		str	r1, [r5, #4]	@ unaligned
 15753 0cec AA60     		str	r2, [r5, #8]	@ unaligned
 15754 0cee EB60     		str	r3, [r5, #12]	@ unaligned
 15755 0cf0 03CC     		ldmia	r4!, {r0, r1}
 15756 0cf2 2861     		str	r0, [r5, #16]	@ unaligned
 15757 0cf4 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 353


 15758 0cf6 2388     		ldrh	r3, [r4]	@ unaligned
 15759 0cf8 A278     		ldrb	r2, [r4, #2]
 15760 0cfa 2B83     		strh	r3, [r5, #24]	@ unaligned
 15761 0cfc 1346     		mov	r3, r2
 15762 0cfe AB76     		strb	r3, [r5, #26]
2098:..\src/command_processing.c ****                     break;
 15763              		.loc 1 2098 0
 15764 0d00 7FE0     		b	.L604
 15765              	.L674:
 15766 0d02 00BF     		.align	2
 15767              	.L673:
 15768 0d04 0000F040 		.word	1089470464
 15769 0d08 94140000 		.word	.LC192
 15770 0d0c A0140000 		.word	.LC193
 15771 0d10 AC140000 		.word	.LC194
 15772 0d14 B8140000 		.word	.LC195
 15773 0d18 D4140000 		.word	.LC196
 15774 0d1c F0140000 		.word	.LC197
 15775 0d20 0C150000 		.word	.LC198
 15776 0d24 20150000 		.word	.LC199
 15777 0d28 38150000 		.word	.LC200
 15778 0d2c 58150000 		.word	.LC201
 15779              	.L610:
2099:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2100:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15780              		.loc 1 2100 0
 15781 0d30 7869     		ldr	r0, [r7, #20]
 15782 0d32 FFF7FEFF 		bl	strlen
 15783 0d36 0346     		mov	r3, r0
 15784 0d38 1A46     		mov	r2, r3
 15785 0d3a 7B69     		ldr	r3, [r7, #20]
 15786 0d3c 1344     		add	r3, r3, r2
 15787 0d3e CF4A     		ldr	r2, .L675
 15788 0d40 1C46     		mov	r4, r3
 15789 0d42 1546     		mov	r5, r2
 15790 0d44 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15791 0d46 2060     		str	r0, [r4]	@ unaligned
 15792 0d48 6160     		str	r1, [r4, #4]	@ unaligned
 15793 0d4a A260     		str	r2, [r4, #8]	@ unaligned
 15794 0d4c E360     		str	r3, [r4, #12]	@ unaligned
 15795 0d4e 2868     		ldr	r0, [r5]	@ unaligned
 15796 0d50 2061     		str	r0, [r4, #16]	@ unaligned
 15797 0d52 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15798 0d54 AA79     		ldrb	r2, [r5, #6]
 15799 0d56 A382     		strh	r3, [r4, #20]	@ unaligned
 15800 0d58 1346     		mov	r3, r2
 15801 0d5a A375     		strb	r3, [r4, #22]
2101:..\src/command_processing.c ****                     break;
 15802              		.loc 1 2101 0
 15803 0d5c 51E0     		b	.L604
 15804              	.L611:
2102:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2103:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15805              		.loc 1 2103 0
 15806 0d5e 7869     		ldr	r0, [r7, #20]
 15807 0d60 FFF7FEFF 		bl	strlen
 15808 0d64 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 354


 15809 0d66 1A46     		mov	r2, r3
 15810 0d68 7B69     		ldr	r3, [r7, #20]
 15811 0d6a 1344     		add	r3, r3, r2
 15812 0d6c C44A     		ldr	r2, .L675+4
 15813 0d6e 1D46     		mov	r5, r3
 15814 0d70 1446     		mov	r4, r2
 15815 0d72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15816 0d74 2860     		str	r0, [r5]	@ unaligned
 15817 0d76 6960     		str	r1, [r5, #4]	@ unaligned
 15818 0d78 AA60     		str	r2, [r5, #8]	@ unaligned
 15819 0d7a EB60     		str	r3, [r5, #12]	@ unaligned
 15820 0d7c 03CC     		ldmia	r4!, {r0, r1}
 15821 0d7e 2861     		str	r0, [r5, #16]	@ unaligned
 15822 0d80 6961     		str	r1, [r5, #20]	@ unaligned
 15823 0d82 2388     		ldrh	r3, [r4]	@ unaligned
 15824 0d84 A278     		ldrb	r2, [r4, #2]
 15825 0d86 2B83     		strh	r3, [r5, #24]	@ unaligned
 15826 0d88 1346     		mov	r3, r2
 15827 0d8a AB76     		strb	r3, [r5, #26]
2104:..\src/command_processing.c ****                     break;
 15828              		.loc 1 2104 0
 15829 0d8c 39E0     		b	.L604
 15830              	.L612:
2105:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2106:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15831              		.loc 1 2106 0
 15832 0d8e 7869     		ldr	r0, [r7, #20]
 15833 0d90 FFF7FEFF 		bl	strlen
 15834 0d94 0346     		mov	r3, r0
 15835 0d96 1A46     		mov	r2, r3
 15836 0d98 7B69     		ldr	r3, [r7, #20]
 15837 0d9a 1344     		add	r3, r3, r2
 15838 0d9c B94A     		ldr	r2, .L675+8
 15839 0d9e 1C46     		mov	r4, r3
 15840 0da0 1546     		mov	r5, r2
 15841 0da2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15842 0da4 2060     		str	r0, [r4]	@ unaligned
 15843 0da6 6160     		str	r1, [r4, #4]	@ unaligned
 15844 0da8 A260     		str	r2, [r4, #8]	@ unaligned
 15845 0daa E360     		str	r3, [r4, #12]	@ unaligned
 15846 0dac 2868     		ldr	r0, [r5]	@ unaligned
 15847 0dae 2061     		str	r0, [r4, #16]	@ unaligned
 15848 0db0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15849 0db2 AA79     		ldrb	r2, [r5, #6]
 15850 0db4 A382     		strh	r3, [r4, #20]	@ unaligned
 15851 0db6 1346     		mov	r3, r2
 15852 0db8 A375     		strb	r3, [r4, #22]
2107:..\src/command_processing.c ****                     break;
 15853              		.loc 1 2107 0
 15854 0dba 22E0     		b	.L604
 15855              	.L613:
2108:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2109:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15856              		.loc 1 2109 0
 15857 0dbc 7869     		ldr	r0, [r7, #20]
 15858 0dbe FFF7FEFF 		bl	strlen
 15859 0dc2 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 355


 15860 0dc4 1A46     		mov	r2, r3
 15861 0dc6 7B69     		ldr	r3, [r7, #20]
 15862 0dc8 1344     		add	r3, r3, r2
 15863 0dca AF4A     		ldr	r2, .L675+12
 15864 0dcc 1546     		mov	r5, r2
 15865 0dce 9E46     		mov	lr, r3
 15866 0dd0 05F1200C 		add	ip, r5, #32
 15867              	.L614:
 15868 0dd4 7446     		mov	r4, lr
 15869 0dd6 2E46     		mov	r6, r5
 15870 0dd8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15871 0dda 2060     		str	r0, [r4]	@ unaligned
 15872 0ddc 6160     		str	r1, [r4, #4]	@ unaligned
 15873 0dde A260     		str	r2, [r4, #8]	@ unaligned
 15874 0de0 E360     		str	r3, [r4, #12]	@ unaligned
 15875 0de2 1035     		adds	r5, r5, #16
 15876 0de4 0EF1100E 		add	lr, lr, #16
 15877 0de8 6545     		cmp	r5, ip
 15878 0dea F3D1     		bne	.L614
 15879 0dec 7446     		mov	r4, lr
 15880 0dee 2B46     		mov	r3, r5
 15881 0df0 07CB     		ldmia	r3!, {r0, r1, r2}
 15882 0df2 2060     		str	r0, [r4]	@ unaligned
 15883 0df4 6160     		str	r1, [r4, #4]	@ unaligned
 15884 0df6 A260     		str	r2, [r4, #8]	@ unaligned
 15885 0df8 1A88     		ldrh	r2, [r3]	@ unaligned
 15886 0dfa 9B78     		ldrb	r3, [r3, #2]
 15887 0dfc A281     		strh	r2, [r4, #12]	@ unaligned
 15888 0dfe A373     		strb	r3, [r4, #14]
2110:..\src/command_processing.c ****                     break;
 15889              		.loc 1 2110 0
 15890 0e00 00BF     		nop
 15891              	.L604:
2111:..\src/command_processing.c ****             }
2112:..\src/command_processing.c **** 
2113:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15892              		.loc 1 2113 0
 15893 0e02 D7F88430 		ldr	r3, [r7, #132]
 15894 0e06 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15895 0e0a 032B     		cmp	r3, #3
 15896 0e0c 63D8     		bhi	.L666
 15897 0e0e 01A2     		adr	r2, .L617
 15898 0e10 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15899              		.p2align 2
 15900              	.L617:
 15901 0e14 250E0000 		.word	.L616+1
 15902 0e18 4F0E0000 		.word	.L618+1
 15903 0e1c 730E0000 		.word	.L619+1
 15904 0e20 990E0000 		.word	.L620+1
 15905              		.p2align 1
 15906              	.L616:
2114:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2115:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15907              		.loc 1 2115 0
 15908 0e24 7869     		ldr	r0, [r7, #20]
 15909 0e26 FFF7FEFF 		bl	strlen
 15910 0e2a 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 356


 15911 0e2c 1A46     		mov	r2, r3
 15912 0e2e 7B69     		ldr	r3, [r7, #20]
 15913 0e30 1344     		add	r3, r3, r2
 15914 0e32 964A     		ldr	r2, .L675+16
 15915 0e34 1D46     		mov	r5, r3
 15916 0e36 1446     		mov	r4, r2
 15917 0e38 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15918 0e3a 2860     		str	r0, [r5]	@ unaligned
 15919 0e3c 6960     		str	r1, [r5, #4]	@ unaligned
 15920 0e3e AA60     		str	r2, [r5, #8]	@ unaligned
 15921 0e40 EB60     		str	r3, [r5, #12]	@ unaligned
 15922 0e42 03CC     		ldmia	r4!, {r0, r1}
 15923 0e44 2861     		str	r0, [r5, #16]	@ unaligned
 15924 0e46 6961     		str	r1, [r5, #20]	@ unaligned
 15925 0e48 2378     		ldrb	r3, [r4]
 15926 0e4a 2B76     		strb	r3, [r5, #24]
2116:..\src/command_processing.c ****                     break;
 15927              		.loc 1 2116 0
 15928 0e4c 44E0     		b	.L621
 15929              	.L618:
2117:..\src/command_processing.c ****                 case CONTROL_PWM:
2118:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15930              		.loc 1 2118 0
 15931 0e4e 7869     		ldr	r0, [r7, #20]
 15932 0e50 FFF7FEFF 		bl	strlen
 15933 0e54 0346     		mov	r3, r0
 15934 0e56 1A46     		mov	r2, r3
 15935 0e58 7B69     		ldr	r3, [r7, #20]
 15936 0e5a 1344     		add	r3, r3, r2
 15937 0e5c 8C4A     		ldr	r2, .L675+20
 15938 0e5e 1D46     		mov	r5, r3
 15939 0e60 1446     		mov	r4, r2
 15940 0e62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15941 0e64 2860     		str	r0, [r5]	@ unaligned
 15942 0e66 6960     		str	r1, [r5, #4]	@ unaligned
 15943 0e68 AA60     		str	r2, [r5, #8]	@ unaligned
 15944 0e6a EB60     		str	r3, [r5, #12]	@ unaligned
 15945 0e6c 2068     		ldr	r0, [r4]	@ unaligned
 15946 0e6e 2861     		str	r0, [r5, #16]	@ unaligned
2119:..\src/command_processing.c ****                     break;
 15947              		.loc 1 2119 0
 15948 0e70 32E0     		b	.L621
 15949              	.L619:
2120:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2121:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15950              		.loc 1 2121 0
 15951 0e72 7869     		ldr	r0, [r7, #20]
 15952 0e74 FFF7FEFF 		bl	strlen
 15953 0e78 0346     		mov	r3, r0
 15954 0e7a 1A46     		mov	r2, r3
 15955 0e7c 7B69     		ldr	r3, [r7, #20]
 15956 0e7e 1344     		add	r3, r3, r2
 15957 0e80 844A     		ldr	r2, .L675+24
 15958 0e82 1D46     		mov	r5, r3
 15959 0e84 1446     		mov	r4, r2
 15960 0e86 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15961 0e88 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 357


 15962 0e8a 6960     		str	r1, [r5, #4]	@ unaligned
 15963 0e8c AA60     		str	r2, [r5, #8]	@ unaligned
 15964 0e8e EB60     		str	r3, [r5, #12]	@ unaligned
 15965 0e90 03CC     		ldmia	r4!, {r0, r1}
 15966 0e92 2861     		str	r0, [r5, #16]	@ unaligned
 15967 0e94 6961     		str	r1, [r5, #20]	@ unaligned
2122:..\src/command_processing.c ****                     break;
 15968              		.loc 1 2122 0
 15969 0e96 1FE0     		b	.L621
 15970              	.L620:
2123:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2124:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15971              		.loc 1 2124 0
 15972 0e98 7869     		ldr	r0, [r7, #20]
 15973 0e9a FFF7FEFF 		bl	strlen
 15974 0e9e 0346     		mov	r3, r0
 15975 0ea0 1A46     		mov	r2, r3
 15976 0ea2 7B69     		ldr	r3, [r7, #20]
 15977 0ea4 1344     		add	r3, r3, r2
 15978 0ea6 7C4A     		ldr	r2, .L675+28
 15979 0ea8 1446     		mov	r4, r2
 15980 0eaa 9E46     		mov	lr, r3
 15981 0eac 04F1200C 		add	ip, r4, #32
 15982              	.L622:
 15983 0eb0 7546     		mov	r5, lr
 15984 0eb2 2646     		mov	r6, r4
 15985 0eb4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15986 0eb6 2860     		str	r0, [r5]	@ unaligned
 15987 0eb8 6960     		str	r1, [r5, #4]	@ unaligned
 15988 0eba AA60     		str	r2, [r5, #8]	@ unaligned
 15989 0ebc EB60     		str	r3, [r5, #12]	@ unaligned
 15990 0ebe 1034     		adds	r4, r4, #16
 15991 0ec0 0EF1100E 		add	lr, lr, #16
 15992 0ec4 6445     		cmp	r4, ip
 15993 0ec6 F3D1     		bne	.L622
 15994 0ec8 7346     		mov	r3, lr
 15995 0eca 2246     		mov	r2, r4
 15996 0ecc 1068     		ldr	r0, [r2]	@ unaligned
 15997 0ece 1860     		str	r0, [r3]	@ unaligned
 15998 0ed0 1279     		ldrb	r2, [r2, #4]
 15999 0ed2 1A71     		strb	r2, [r3, #4]
2125:..\src/command_processing.c ****                     break;
 16000              		.loc 1 2125 0
 16001 0ed4 00E0     		b	.L621
 16002              	.L666:
2126:..\src/command_processing.c ****                 default:
2127:..\src/command_processing.c ****                     break;
 16003              		.loc 1 2127 0
 16004 0ed6 00BF     		nop
 16005              	.L621:
2128:..\src/command_processing.c ****             }
2129:..\src/command_processing.c **** 
2130:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16006              		.loc 1 2130 0
 16007 0ed8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16008 0edc D7F88C10 		ldr	r1, [r7, #140]
 16009 0ee0 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 358


 16010 0ee2 5B00     		lsls	r3, r3, #1
 16011 0ee4 1344     		add	r3, r3, r2
 16012 0ee6 1B01     		lsls	r3, r3, #4
 16013 0ee8 0B44     		add	r3, r3, r1
 16014 0eea 03F5D873 		add	r3, r3, #432
 16015 0eee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16016 0ef0 002B     		cmp	r3, #0
 16017 0ef2 1CD0     		beq	.L623
2131:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16018              		.loc 1 2131 0
 16019 0ef4 7869     		ldr	r0, [r7, #20]
 16020 0ef6 FFF7FEFF 		bl	strlen
 16021 0efa 0346     		mov	r3, r0
 16022 0efc 1A46     		mov	r2, r3
 16023 0efe 7B69     		ldr	r3, [r7, #20]
 16024 0f00 1344     		add	r3, r3, r2
 16025 0f02 664A     		ldr	r2, .L675+32
 16026 0f04 1446     		mov	r4, r2
 16027 0f06 9E46     		mov	lr, r3
 16028 0f08 04F1200C 		add	ip, r4, #32
 16029              	.L624:
 16030 0f0c 7546     		mov	r5, lr
 16031 0f0e 2646     		mov	r6, r4
 16032 0f10 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16033 0f12 2860     		str	r0, [r5]	@ unaligned
 16034 0f14 6960     		str	r1, [r5, #4]	@ unaligned
 16035 0f16 AA60     		str	r2, [r5, #8]	@ unaligned
 16036 0f18 EB60     		str	r3, [r5, #12]	@ unaligned
 16037 0f1a 1034     		adds	r4, r4, #16
 16038 0f1c 0EF1100E 		add	lr, lr, #16
 16039 0f20 6445     		cmp	r4, ip
 16040 0f22 F3D1     		bne	.L624
 16041 0f24 7346     		mov	r3, lr
 16042 0f26 2246     		mov	r2, r4
 16043 0f28 1278     		ldrb	r2, [r2]
 16044 0f2a 1A70     		strb	r2, [r3]
 16045 0f2c 13E0     		b	.L625
 16046              	.L623:
2132:..\src/command_processing.c ****             else
2133:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16047              		.loc 1 2133 0
 16048 0f2e 7869     		ldr	r0, [r7, #20]
 16049 0f30 FFF7FEFF 		bl	strlen
 16050 0f34 0346     		mov	r3, r0
 16051 0f36 1A46     		mov	r2, r3
 16052 0f38 7B69     		ldr	r3, [r7, #20]
 16053 0f3a 1344     		add	r3, r3, r2
 16054 0f3c 584A     		ldr	r2, .L675+36
 16055 0f3e 1C46     		mov	r4, r3
 16056 0f40 1546     		mov	r5, r2
 16057 0f42 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16058 0f44 2060     		str	r0, [r4]	@ unaligned
 16059 0f46 6160     		str	r1, [r4, #4]	@ unaligned
 16060 0f48 A260     		str	r2, [r4, #8]	@ unaligned
 16061 0f4a E360     		str	r3, [r4, #12]	@ unaligned
 16062 0f4c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16063 0f4e 2061     		str	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 359


 16064 0f50 6161     		str	r1, [r4, #20]	@ unaligned
 16065 0f52 A261     		str	r2, [r4, #24]	@ unaligned
 16066 0f54 E361     		str	r3, [r4, #28]	@ unaligned
 16067              	.L625:
2134:..\src/command_processing.c **** 
2135:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16068              		.loc 1 2135 0
 16069 0f56 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16070 0f5a D7F88C10 		ldr	r1, [r7, #140]
 16071 0f5e 1346     		mov	r3, r2
 16072 0f60 5B00     		lsls	r3, r3, #1
 16073 0f62 1344     		add	r3, r3, r2
 16074 0f64 1B01     		lsls	r3, r3, #4
 16075 0f66 0B44     		add	r3, r3, r1
 16076 0f68 03F5DA73 		add	r3, r3, #436
 16077 0f6c 93F90030 		ldrsb	r3, [r3]
 16078 0f70 1A46     		mov	r2, r3
 16079 0f72 07F11C03 		add	r3, r7, #28
 16080 0f76 4B49     		ldr	r1, .L675+40
 16081 0f78 1846     		mov	r0, r3
 16082 0f7a FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 16083              		.loc 1 2136 0
 16084 0f7e 07F11C03 		add	r3, r7, #28
 16085 0f82 1946     		mov	r1, r3
 16086 0f84 7869     		ldr	r0, [r7, #20]
 16087 0f86 FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2138:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
2139:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
2140:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
2141:..\src/command_processing.c ****                 strcat(info_string, str);
2142:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
2143:..\src/command_processing.c ****                     strcat(info_string, ", ");
2144:..\src/command_processing.c ****                 }                
2145:..\src/command_processing.c ****             }
2146:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2147:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2148:..\src/command_processing.c ****             strcat(info_string, str);
2149:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2150:..\src/command_processing.c ****             strcat(info_string, str);
2151:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2152:..\src/command_processing.c ****             strcat(info_string, str);
2153:..\src/command_processing.c **** #endif            
2154:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16088              		.loc 1 2154 0
 16089 0f8a 7869     		ldr	r0, [r7, #20]
 16090 0f8c FFF7FEFF 		bl	strlen
 16091 0f90 0346     		mov	r3, r0
 16092 0f92 1A46     		mov	r2, r3
 16093 0f94 7B69     		ldr	r3, [r7, #20]
 16094 0f96 1344     		add	r3, r3, r2
 16095 0f98 434A     		ldr	r2, .L675+44
 16096 0f9a 1188     		ldrh	r1, [r2]	@ unaligned
 16097 0f9c 9278     		ldrb	r2, [r2, #2]
 16098 0f9e 1980     		strh	r1, [r3]	@ unaligned
 16099 0fa0 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 360


2155:..\src/command_processing.c **** 
2156:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16100              		.loc 1 2156 0
 16101 0fa2 7869     		ldr	r0, [r7, #20]
 16102 0fa4 FFF7FEFF 		bl	strlen
 16103 0fa8 0346     		mov	r3, r0
 16104 0faa 1A46     		mov	r2, r3
 16105 0fac 7B69     		ldr	r3, [r7, #20]
 16106 0fae 1344     		add	r3, r3, r2
 16107 0fb0 3E4A     		ldr	r2, .L675+48
 16108 0fb2 1D46     		mov	r5, r3
 16109 0fb4 1446     		mov	r4, r2
 16110 0fb6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16111 0fb8 2860     		str	r0, [r5]	@ unaligned
 16112 0fba 6960     		str	r1, [r5, #4]	@ unaligned
 16113 0fbc AA60     		str	r2, [r5, #8]	@ unaligned
 16114 0fbe EB60     		str	r3, [r5, #12]	@ unaligned
 16115 0fc0 2068     		ldr	r0, [r4]	@ unaligned
 16116 0fc2 2861     		str	r0, [r5, #16]	@ unaligned
2157:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16117              		.loc 1 2157 0
 16118 0fc4 0023     		movs	r3, #0
 16119 0fc6 C7F89430 		str	r3, [r7, #148]
 16120 0fca 30E0     		b	.L626
 16121              	.L628:
2158:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16122              		.loc 1 2158 0
 16123 0fcc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16124 0fd0 D7F88C10 		ldr	r1, [r7, #140]
 16125 0fd4 1346     		mov	r3, r2
 16126 0fd6 5B00     		lsls	r3, r3, #1
 16127 0fd8 1344     		add	r3, r3, r2
 16128 0fda 1B01     		lsls	r3, r3, #4
 16129 0fdc CA18     		adds	r2, r1, r3
 16130 0fde D7F89430 		ldr	r3, [r7, #148]
 16131 0fe2 1344     		add	r3, r3, r2
 16132 0fe4 03F29513 		addw	r3, r3, #405
 16133 0fe8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16134 0fea 1A46     		mov	r2, r3
 16135 0fec 07F11C03 		add	r3, r7, #28
 16136 0ff0 2F49     		ldr	r1, .L675+52
 16137 0ff2 1846     		mov	r0, r3
 16138 0ff4 FFF7FEFF 		bl	sprintf
2159:..\src/command_processing.c ****                 strcat(info_string, str);
 16139              		.loc 1 2159 0
 16140 0ff8 07F11C03 		add	r3, r7, #28
 16141 0ffc 1946     		mov	r1, r3
 16142 0ffe 7869     		ldr	r0, [r7, #20]
 16143 1000 FFF7FEFF 		bl	strcat
2160:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16144              		.loc 1 2160 0
 16145 1004 D7F89430 		ldr	r3, [r7, #148]
 16146 1008 022B     		cmp	r3, #2
 16147 100a 0BD0     		beq	.L627
2161:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16148              		.loc 1 2161 0
 16149 100c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 361


 16150 100e FFF7FEFF 		bl	strlen
 16151 1012 0346     		mov	r3, r0
 16152 1014 1A46     		mov	r2, r3
 16153 1016 7B69     		ldr	r3, [r7, #20]
 16154 1018 1344     		add	r3, r3, r2
 16155 101a 264A     		ldr	r2, .L675+56
 16156 101c 1188     		ldrh	r1, [r2]	@ unaligned
 16157 101e 9278     		ldrb	r2, [r2, #2]
 16158 1020 1980     		strh	r1, [r3]	@ unaligned
 16159 1022 9A70     		strb	r2, [r3, #2]
 16160              	.L627:
2157:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16161              		.loc 1 2157 0 discriminator 2
 16162 1024 D7F89430 		ldr	r3, [r7, #148]
 16163 1028 0133     		adds	r3, r3, #1
 16164 102a C7F89430 		str	r3, [r7, #148]
 16165              	.L626:
2157:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16166              		.loc 1 2157 0 is_stmt 0 discriminator 1
 16167 102e D7F89430 		ldr	r3, [r7, #148]
 16168 1032 022B     		cmp	r3, #2
 16169 1034 CADD     		ble	.L628
2162:..\src/command_processing.c ****                 }                
2163:..\src/command_processing.c ****             }
2164:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16170              		.loc 1 2164 0 is_stmt 1
 16171 1036 7869     		ldr	r0, [r7, #20]
 16172 1038 FFF7FEFF 		bl	strlen
 16173 103c 0346     		mov	r3, r0
 16174 103e 1A46     		mov	r2, r3
 16175 1040 7B69     		ldr	r3, [r7, #20]
 16176 1042 1344     		add	r3, r3, r2
 16177 1044 184A     		ldr	r2, .L675+44
 16178 1046 1188     		ldrh	r1, [r2]	@ unaligned
 16179 1048 9278     		ldrb	r2, [r2, #2]
 16180 104a 1980     		strh	r1, [r3]	@ unaligned
 16181 104c 9A70     		strb	r2, [r3, #2]
2165:..\src/command_processing.c **** 
2166:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16182              		.loc 1 2166 0
 16183 104e 7869     		ldr	r0, [r7, #20]
 16184 1050 FFF7FEFF 		bl	strlen
 16185 1054 0346     		mov	r3, r0
 16186 1056 1A46     		mov	r2, r3
 16187 1058 7B69     		ldr	r3, [r7, #20]
 16188 105a 1344     		add	r3, r3, r2
 16189 105c 164A     		ldr	r2, .L675+60
 16190 105e 1D46     		mov	r5, r3
 16191 1060 1446     		mov	r4, r2
 16192 1062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16193 1064 2860     		str	r0, [r5]	@ unaligned
 16194 1066 6960     		str	r1, [r5, #4]	@ unaligned
 16195 1068 AA60     		str	r2, [r5, #8]	@ unaligned
 16196 106a EB60     		str	r3, [r5, #12]	@ unaligned
 16197 106c 2068     		ldr	r0, [r4]	@ unaligned
 16198 106e 2861     		str	r0, [r5, #16]	@ unaligned
 16199 1070 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 362


 16200 1072 2B75     		strb	r3, [r5, #20]
2167:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16201              		.loc 1 2167 0
 16202 1074 0023     		movs	r3, #0
 16203 1076 C7F89430 		str	r3, [r7, #148]
 16204 107a 5FE0     		b	.L629
 16205              	.L676:
 16206              		.align	2
 16207              	.L675:
 16208 107c 74150000 		.word	.LC202
 16209 1080 8C150000 		.word	.LC203
 16210 1084 A8150000 		.word	.LC204
 16211 1088 C0150000 		.word	.LC205
 16212 108c F0150000 		.word	.LC206
 16213 1090 0C160000 		.word	.LC207
 16214 1094 20160000 		.word	.LC208
 16215 1098 38160000 		.word	.LC209
 16216 109c 60160000 		.word	.LC210
 16217 10a0 84160000 		.word	.LC211
 16218 10a4 A4160000 		.word	.LC212
 16219 10a8 58110000 		.word	.LC152
 16220 10ac C0160000 		.word	.LC213
 16221 10b0 B4130000 		.word	.LC183
 16222 10b4 B8130000 		.word	.LC184
 16223 10b8 D4160000 		.word	.LC214
 16224              	.L631:
2168:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16225              		.loc 1 2168 0
 16226 10bc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16227 10c0 D7F88C10 		ldr	r1, [r7, #140]
 16228 10c4 1346     		mov	r3, r2
 16229 10c6 5B00     		lsls	r3, r3, #1
 16230 10c8 1344     		add	r3, r3, r2
 16231 10ca 9B00     		lsls	r3, r3, #2
 16232 10cc D7F89420 		ldr	r2, [r7, #148]
 16233 10d0 1344     		add	r3, r3, r2
 16234 10d2 6633     		adds	r3, r3, #102
 16235 10d4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16236 10d8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16237 10dc D7F88C00 		ldr	r0, [r7, #140]
 16238 10e0 1346     		mov	r3, r2
 16239 10e2 5B00     		lsls	r3, r3, #1
 16240 10e4 1344     		add	r3, r3, r2
 16241 10e6 1B01     		lsls	r3, r3, #4
 16242 10e8 C218     		adds	r2, r0, r3
 16243 10ea D7F89430 		ldr	r3, [r7, #148]
 16244 10ee 1344     		add	r3, r3, r2
 16245 10f0 03F29513 		addw	r3, r3, #405
 16246 10f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16247 10f6 41FA03F2 		asr	r2, r1, r3
 16248 10fa 07F11C03 		add	r3, r7, #28
 16249 10fe 2349     		ldr	r1, .L677
 16250 1100 1846     		mov	r0, r3
 16251 1102 FFF7FEFF 		bl	sprintf
2169:..\src/command_processing.c ****                 strcat(info_string, str);
 16252              		.loc 1 2169 0
 16253 1106 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 363


 16254 110a 1946     		mov	r1, r3
 16255 110c 7869     		ldr	r0, [r7, #20]
 16256 110e FFF7FEFF 		bl	strcat
2170:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16257              		.loc 1 2170 0
 16258 1112 D7F89430 		ldr	r3, [r7, #148]
 16259 1116 022B     		cmp	r3, #2
 16260 1118 0BD0     		beq	.L630
2171:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16261              		.loc 1 2171 0
 16262 111a 7869     		ldr	r0, [r7, #20]
 16263 111c FFF7FEFF 		bl	strlen
 16264 1120 0346     		mov	r3, r0
 16265 1122 1A46     		mov	r2, r3
 16266 1124 7B69     		ldr	r3, [r7, #20]
 16267 1126 1344     		add	r3, r3, r2
 16268 1128 194A     		ldr	r2, .L677+4
 16269 112a 1188     		ldrh	r1, [r2]	@ unaligned
 16270 112c 9278     		ldrb	r2, [r2, #2]
 16271 112e 1980     		strh	r1, [r3]	@ unaligned
 16272 1130 9A70     		strb	r2, [r3, #2]
 16273              	.L630:
2167:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16274              		.loc 1 2167 0 discriminator 2
 16275 1132 D7F89430 		ldr	r3, [r7, #148]
 16276 1136 0133     		adds	r3, r3, #1
 16277 1138 C7F89430 		str	r3, [r7, #148]
 16278              	.L629:
2167:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16279              		.loc 1 2167 0 is_stmt 0 discriminator 1
 16280 113c D7F89430 		ldr	r3, [r7, #148]
 16281 1140 022B     		cmp	r3, #2
 16282 1142 BBDD     		ble	.L631
2172:..\src/command_processing.c ****                 }
2173:..\src/command_processing.c ****             }
2174:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16283              		.loc 1 2174 0 is_stmt 1
 16284 1144 7869     		ldr	r0, [r7, #20]
 16285 1146 FFF7FEFF 		bl	strlen
 16286 114a 0346     		mov	r3, r0
 16287 114c 1A46     		mov	r2, r3
 16288 114e 7B69     		ldr	r3, [r7, #20]
 16289 1150 1344     		add	r3, r3, r2
 16290 1152 104A     		ldr	r2, .L677+8
 16291 1154 1188     		ldrh	r1, [r2]	@ unaligned
 16292 1156 9278     		ldrb	r2, [r2, #2]
 16293 1158 1980     		strh	r1, [r3]	@ unaligned
 16294 115a 9A70     		strb	r2, [r3, #2]
2175:..\src/command_processing.c ****                 
2176:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16295              		.loc 1 2176 0
 16296 115c 7869     		ldr	r0, [r7, #20]
 16297 115e FFF7FEFF 		bl	strlen
 16298 1162 0346     		mov	r3, r0
 16299 1164 1A46     		mov	r2, r3
 16300 1166 7B69     		ldr	r3, [r7, #20]
 16301 1168 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 364


 16302 116a 0B4A     		ldr	r2, .L677+12
 16303 116c 1D46     		mov	r5, r3
 16304 116e 1446     		mov	r4, r2
 16305 1170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16306 1172 2860     		str	r0, [r5]	@ unaligned
 16307 1174 6960     		str	r1, [r5, #4]	@ unaligned
 16308 1176 AA60     		str	r2, [r5, #8]	@ unaligned
 16309 1178 EB60     		str	r3, [r5, #12]	@ unaligned
 16310 117a 03CC     		ldmia	r4!, {r0, r1}
 16311 117c 2861     		str	r0, [r5, #16]	@ unaligned
 16312 117e 6961     		str	r1, [r5, #20]	@ unaligned
 16313 1180 2378     		ldrb	r3, [r4]
 16314 1182 2B76     		strb	r3, [r5, #24]
2177:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16315              		.loc 1 2177 0
 16316 1184 0023     		movs	r3, #0
 16317 1186 C7F89430 		str	r3, [r7, #148]
 16318 118a 3DE0     		b	.L632
 16319              	.L678:
 16320              		.align	2
 16321              	.L677:
 16322 118c EC160000 		.word	.LC215
 16323 1190 B8130000 		.word	.LC184
 16324 1194 58110000 		.word	.LC152
 16325 1198 F0160000 		.word	.LC216
 16326              	.L634:
2178:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16327              		.loc 1 2178 0
 16328 119c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16329 11a0 D7F88C10 		ldr	r1, [r7, #140]
 16330 11a4 1346     		mov	r3, r2
 16331 11a6 5B00     		lsls	r3, r3, #1
 16332 11a8 1344     		add	r3, r3, r2
 16333 11aa 9B00     		lsls	r3, r3, #2
 16334 11ac D7F89420 		ldr	r2, [r7, #148]
 16335 11b0 1344     		add	r3, r3, r2
 16336 11b2 6833     		adds	r3, r3, #104
 16337 11b4 9B00     		lsls	r3, r3, #2
 16338 11b6 0B44     		add	r3, r3, r1
 16339 11b8 5B68     		ldr	r3, [r3, #4]	@ float
 16340 11ba 1846     		mov	r0, r3
 16341 11bc FFF7FEFF 		bl	__aeabi_f2d
 16342 11c0 0346     		mov	r3, r0
 16343 11c2 0C46     		mov	r4, r1
 16344 11c4 07F11C00 		add	r0, r7, #28
 16345 11c8 1A46     		mov	r2, r3
 16346 11ca 2346     		mov	r3, r4
 16347 11cc BF49     		ldr	r1, .L679
 16348 11ce FFF7FEFF 		bl	sprintf
2179:..\src/command_processing.c ****                 strcat(info_string, str);
 16349              		.loc 1 2179 0
 16350 11d2 07F11C03 		add	r3, r7, #28
 16351 11d6 1946     		mov	r1, r3
 16352 11d8 7869     		ldr	r0, [r7, #20]
 16353 11da FFF7FEFF 		bl	strcat
2180:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16354              		.loc 1 2180 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 365


 16355 11de D7F89430 		ldr	r3, [r7, #148]
 16356 11e2 022B     		cmp	r3, #2
 16357 11e4 0BD0     		beq	.L633
2181:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16358              		.loc 1 2181 0
 16359 11e6 7869     		ldr	r0, [r7, #20]
 16360 11e8 FFF7FEFF 		bl	strlen
 16361 11ec 0346     		mov	r3, r0
 16362 11ee 1A46     		mov	r2, r3
 16363 11f0 7B69     		ldr	r3, [r7, #20]
 16364 11f2 1344     		add	r3, r3, r2
 16365 11f4 B64A     		ldr	r2, .L679+4
 16366 11f6 1188     		ldrh	r1, [r2]	@ unaligned
 16367 11f8 9278     		ldrb	r2, [r2, #2]
 16368 11fa 1980     		strh	r1, [r3]	@ unaligned
 16369 11fc 9A70     		strb	r2, [r3, #2]
 16370              	.L633:
2177:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16371              		.loc 1 2177 0 discriminator 2
 16372 11fe D7F89430 		ldr	r3, [r7, #148]
 16373 1202 0133     		adds	r3, r3, #1
 16374 1204 C7F89430 		str	r3, [r7, #148]
 16375              	.L632:
2177:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16376              		.loc 1 2177 0 is_stmt 0 discriminator 1
 16377 1208 D7F89430 		ldr	r3, [r7, #148]
 16378 120c 022B     		cmp	r3, #2
 16379 120e C5DD     		ble	.L634
2182:..\src/command_processing.c ****                 }
2183:..\src/command_processing.c ****             }
2184:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16380              		.loc 1 2184 0 is_stmt 1 discriminator 2
 16381 1210 7869     		ldr	r0, [r7, #20]
 16382 1212 FFF7FEFF 		bl	strlen
 16383 1216 0346     		mov	r3, r0
 16384 1218 1A46     		mov	r2, r3
 16385 121a 7B69     		ldr	r3, [r7, #20]
 16386 121c 1344     		add	r3, r3, r2
 16387 121e AD4A     		ldr	r2, .L679+8
 16388 1220 1188     		ldrh	r1, [r2]	@ unaligned
 16389 1222 9278     		ldrb	r2, [r2, #2]
 16390 1224 1980     		strh	r1, [r3]	@ unaligned
 16391 1226 9A70     		strb	r2, [r3, #2]
2185:..\src/command_processing.c ****             
2186:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2187:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16392              		.loc 1 2187 0 discriminator 2
 16393 1228 D7F88430 		ldr	r3, [r7, #132]
 16394 122c 5B6C     		ldr	r3, [r3, #68]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16395              		.loc 1 2186 0 discriminator 2
 16396 122e 1846     		mov	r0, r3
 16397 1230 FFF7FEFF 		bl	__aeabi_f2d
 16398 1234 C7E90201 		strd	r0, [r7, #8]
 16399              		.loc 1 2187 0 discriminator 2
 16400 1238 D7F88430 		ldr	r3, [r7, #132]
 16401 123c 9B6C     		ldr	r3, [r3, #72]	@ float
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 366


2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16402              		.loc 1 2186 0 discriminator 2
 16403 123e 1846     		mov	r0, r3
 16404 1240 FFF7FEFF 		bl	__aeabi_f2d
 16405 1244 0446     		mov	r4, r0
 16406 1246 0D46     		mov	r5, r1
 16407              		.loc 1 2187 0 discriminator 2
 16408 1248 D7F88430 		ldr	r3, [r7, #132]
 16409 124c DB6C     		ldr	r3, [r3, #76]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16410              		.loc 1 2186 0 discriminator 2
 16411 124e 1846     		mov	r0, r3
 16412 1250 FFF7FEFF 		bl	__aeabi_f2d
 16413 1254 8046     		mov	r8, r0
 16414 1256 8946     		mov	r9, r1
2188:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16415              		.loc 1 2188 0 discriminator 2
 16416 1258 D7F88430 		ldr	r3, [r7, #132]
 16417 125c 1B6D     		ldr	r3, [r3, #80]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16418              		.loc 1 2186 0 discriminator 2
 16419 125e 1846     		mov	r0, r3
 16420 1260 FFF7FEFF 		bl	__aeabi_f2d
 16421 1264 8246     		mov	r10, r0
 16422 1266 8B46     		mov	fp, r1
 16423              		.loc 1 2188 0 discriminator 2
 16424 1268 D7F88430 		ldr	r3, [r7, #132]
 16425 126c 5B6D     		ldr	r3, [r3, #84]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16426              		.loc 1 2186 0 discriminator 2
 16427 126e 1846     		mov	r0, r3
 16428 1270 FFF7FEFF 		bl	__aeabi_f2d
 16429 1274 C7E90001 		strd	r0, [r7]
 16430              		.loc 1 2188 0 discriminator 2
 16431 1278 D7F88430 		ldr	r3, [r7, #132]
 16432 127c 9B6D     		ldr	r3, [r3, #88]	@ float
2186:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16433              		.loc 1 2186 0 discriminator 2
 16434 127e 1846     		mov	r0, r3
 16435 1280 FFF7FEFF 		bl	__aeabi_f2d
 16436 1284 0246     		mov	r2, r0
 16437 1286 0B46     		mov	r3, r1
 16438 1288 07F11C00 		add	r0, r7, #28
 16439 128c CDE90823 		strd	r2, [sp, #32]
 16440 1290 D7E90012 		ldrd	r1, [r7]
 16441 1294 CDE90612 		strd	r1, [sp, #24]
 16442 1298 CDE904AB 		strd	r10, [sp, #16]
 16443 129c CDE90289 		strd	r8, [sp, #8]
 16444 12a0 CDE90045 		strd	r4, [sp]
 16445 12a4 D7E90223 		ldrd	r2, [r7, #8]
 16446 12a8 8B49     		ldr	r1, .L679+12
 16447 12aa FFF7FEFF 		bl	sprintf
2189:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16448              		.loc 1 2189 0 discriminator 2
 16449 12ae 07F11C03 		add	r3, r7, #28
 16450 12b2 1946     		mov	r1, r3
 16451 12b4 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 367


 16452 12b6 FFF7FEFF 		bl	strcat
2190:..\src/command_processing.c **** 
2191:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16453              		.loc 1 2191 0 discriminator 2
 16454 12ba D7F88430 		ldr	r3, [r7, #132]
 16455 12be 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16456 12c2 1A46     		mov	r2, r3
 16457 12c4 07F11C03 		add	r3, r7, #28
 16458 12c8 8449     		ldr	r1, .L679+16
 16459 12ca 1846     		mov	r0, r3
 16460 12cc FFF7FEFF 		bl	sprintf
2192:..\src/command_processing.c ****             strcat(info_string, str);
 16461              		.loc 1 2192 0 discriminator 2
 16462 12d0 07F11C03 		add	r3, r7, #28
 16463 12d4 1946     		mov	r1, r3
 16464 12d6 7869     		ldr	r0, [r7, #20]
 16465 12d8 FFF7FEFF 		bl	strcat
2193:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16466              		.loc 1 2193 0 discriminator 2
 16467 12dc 7869     		ldr	r0, [r7, #20]
 16468 12de FFF7FEFF 		bl	strlen
 16469 12e2 0346     		mov	r3, r0
 16470 12e4 1A46     		mov	r2, r3
 16471 12e6 7B69     		ldr	r3, [r7, #20]
 16472 12e8 1344     		add	r3, r3, r2
 16473 12ea 7A4A     		ldr	r2, .L679+8
 16474 12ec 1188     		ldrh	r1, [r2]	@ unaligned
 16475 12ee 9278     		ldrb	r2, [r2, #2]
 16476 12f0 1980     		strh	r1, [r3]	@ unaligned
 16477 12f2 9A70     		strb	r2, [r3, #2]
2194:..\src/command_processing.c **** 
2195:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16478              		.loc 1 2195 0 discriminator 2
 16479 12f4 D7F88430 		ldr	r3, [r7, #132]
 16480 12f8 596B     		ldr	r1, [r3, #52]
 16481 12fa 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16482 12fe D7F88C00 		ldr	r0, [r7, #140]
 16483 1302 1346     		mov	r3, r2
 16484 1304 5B00     		lsls	r3, r3, #1
 16485 1306 1344     		add	r3, r3, r2
 16486 1308 1B01     		lsls	r3, r3, #4
 16487 130a 0344     		add	r3, r3, r0
 16488 130c 03F29513 		addw	r3, r3, #405
 16489 1310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16490 1312 41FA03F2 		asr	r2, r1, r3
 16491 1316 07F11C03 		add	r3, r7, #28
 16492 131a 7149     		ldr	r1, .L679+20
 16493 131c 1846     		mov	r0, r3
 16494 131e FFF7FEFF 		bl	sprintf
2196:..\src/command_processing.c ****             strcat(info_string, str);
 16495              		.loc 1 2196 0 discriminator 2
 16496 1322 07F11C03 		add	r3, r7, #28
 16497 1326 1946     		mov	r1, r3
 16498 1328 7869     		ldr	r0, [r7, #20]
 16499 132a FFF7FEFF 		bl	strcat
2197:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16500              		.loc 1 2197 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 368


 16501 132e D7F88430 		ldr	r3, [r7, #132]
 16502 1332 996B     		ldr	r1, [r3, #56]
 16503 1334 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16504 1338 D7F88C00 		ldr	r0, [r7, #140]
 16505 133c 1346     		mov	r3, r2
 16506 133e 5B00     		lsls	r3, r3, #1
 16507 1340 1344     		add	r3, r3, r2
 16508 1342 1B01     		lsls	r3, r3, #4
 16509 1344 0344     		add	r3, r3, r0
 16510 1346 03F29513 		addw	r3, r3, #405
 16511 134a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16512 134c 41FA03F2 		asr	r2, r1, r3
 16513 1350 07F11C03 		add	r3, r7, #28
 16514 1354 6349     		ldr	r1, .L679+24
 16515 1356 1846     		mov	r0, r3
 16516 1358 FFF7FEFF 		bl	sprintf
2198:..\src/command_processing.c ****             strcat(info_string, str);
 16517              		.loc 1 2198 0 discriminator 2
 16518 135c 07F11C03 		add	r3, r7, #28
 16519 1360 1946     		mov	r1, r3
 16520 1362 7869     		ldr	r0, [r7, #20]
 16521 1364 FFF7FEFF 		bl	strcat
2199:..\src/command_processing.c **** 
2200:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16522              		.loc 1 2200 0 discriminator 2
 16523 1368 D7F88430 		ldr	r3, [r7, #132]
 16524 136c 1A6C     		ldr	r2, [r3, #64]
 16525 136e D7F88430 		ldr	r3, [r7, #132]
 16526 1372 DB6B     		ldr	r3, [r3, #60]
 16527 1374 07F11C00 		add	r0, r7, #28
 16528 1378 5B49     		ldr	r1, .L679+28
 16529 137a FFF7FEFF 		bl	sprintf
2201:..\src/command_processing.c ****             strcat(info_string, str);
 16530              		.loc 1 2201 0 discriminator 2
 16531 137e 07F11C03 		add	r3, r7, #28
 16532 1382 1946     		mov	r1, r3
 16533 1384 7869     		ldr	r0, [r7, #20]
 16534 1386 FFF7FEFF 		bl	strcat
2202:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16535              		.loc 1 2202 0 discriminator 2
 16536 138a 7869     		ldr	r0, [r7, #20]
 16537 138c FFF7FEFF 		bl	strlen
 16538 1390 0346     		mov	r3, r0
 16539 1392 1A46     		mov	r2, r3
 16540 1394 7B69     		ldr	r3, [r7, #20]
 16541 1396 1344     		add	r3, r3, r2
 16542 1398 4E4A     		ldr	r2, .L679+8
 16543 139a 1188     		ldrh	r1, [r2]	@ unaligned
 16544 139c 9278     		ldrb	r2, [r2, #2]
 16545 139e 1980     		strh	r1, [r3]	@ unaligned
 16546 13a0 9A70     		strb	r2, [r3, #2]
2203:..\src/command_processing.c **** 
2204:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16547              		.loc 1 2204 0 discriminator 2
 16548 13a2 D7F88430 		ldr	r3, [r7, #132]
 16549 13a6 B3F95C30 		ldrsh	r3, [r3, #92]
 16550 13aa 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 369


 16551 13ac 07F11C03 		add	r3, r7, #28
 16552 13b0 4E49     		ldr	r1, .L679+32
 16553 13b2 1846     		mov	r0, r3
 16554 13b4 FFF7FEFF 		bl	sprintf
2205:..\src/command_processing.c ****             strcat(info_string, str);
 16555              		.loc 1 2205 0 discriminator 2
 16556 13b8 07F11C03 		add	r3, r7, #28
 16557 13bc 1946     		mov	r1, r3
 16558 13be 7869     		ldr	r0, [r7, #20]
 16559 13c0 FFF7FEFF 		bl	strcat
2206:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2207:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2208:..\src/command_processing.c ****             strcat(info_string, str);
2209:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2210:..\src/command_processing.c ****                 case DRIVER_MC33887:
2211:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2212:..\src/command_processing.c ****                     break;
2213:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2214:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2215:..\src/command_processing.c ****                     break;
2216:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
2217:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
2218:..\src/command_processing.c ****                     break;
2219:..\src/command_processing.c ****                 default:
2220:..\src/command_processing.c ****                     break;
2221:..\src/command_processing.c ****             }
2222:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2223:..\src/command_processing.c ****             strcat(info_string, str);
2224:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2225:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2226:..\src/command_processing.c ****             else
2227:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2228:..\src/command_processing.c **** #endif                
2229:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16560              		.loc 1 2229 0 discriminator 2
 16561 13c4 7869     		ldr	r0, [r7, #20]
 16562 13c6 FFF7FEFF 		bl	strlen
 16563 13ca 0346     		mov	r3, r0
 16564 13cc 1A46     		mov	r2, r3
 16565 13ce 7B69     		ldr	r3, [r7, #20]
 16566 13d0 1344     		add	r3, r3, r2
 16567 13d2 404A     		ldr	r2, .L679+8
 16568 13d4 1188     		ldrh	r1, [r2]	@ unaligned
 16569 13d6 9278     		ldrb	r2, [r2, #2]
 16570 13d8 1980     		strh	r1, [r3]	@ unaligned
 16571 13da 9A70     		strb	r2, [r3, #2]
 16572              	.LBE26:
1956:..\src/command_processing.c ****             
 16573              		.loc 1 1956 0 discriminator 2
 16574 13dc 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16575 13e0 0133     		adds	r3, r3, #1
 16576 13e2 87F89330 		strb	r3, [r7, #147]
 16577              	.L582:
1956:..\src/command_processing.c ****             
 16578              		.loc 1 1956 0 is_stmt 0 discriminator 1
 16579 13e6 D7F88C30 		ldr	r3, [r7, #140]
 16580 13ea 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 370


 16581 13ee 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16582 13f2 9A42     		cmp	r2, r3
 16583 13f4 7EF6AAAF 		bls	.L635
 16584              	.LBE25:
2230:..\src/command_processing.c ****         }
2231:..\src/command_processing.c ****       
2232:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16585              		.loc 1 2232 0 is_stmt 1
 16586 13f8 7869     		ldr	r0, [r7, #20]
 16587 13fa FFF7FEFF 		bl	strlen
 16588 13fe 0346     		mov	r3, r0
 16589 1400 1A46     		mov	r2, r3
 16590 1402 7B69     		ldr	r3, [r7, #20]
 16591 1404 1344     		add	r3, r3, r2
 16592 1406 3A4A     		ldr	r2, .L679+36
 16593 1408 1D46     		mov	r5, r3
 16594 140a 1446     		mov	r4, r2
 16595 140c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16596 140e 2860     		str	r0, [r5]	@ unaligned
 16597 1410 6960     		str	r1, [r5, #4]	@ unaligned
 16598 1412 AA60     		str	r2, [r5, #8]	@ unaligned
 16599 1414 EB60     		str	r3, [r5, #12]	@ unaligned
 16600 1416 2068     		ldr	r0, [r4]	@ unaligned
 16601 1418 2861     		str	r0, [r5, #16]	@ unaligned
2233:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16602              		.loc 1 2233 0
 16603 141a D7F88C30 		ldr	r3, [r7, #140]
 16604 141e B3F8F031 		ldrh	r3, [r3, #496]
 16605 1422 1A46     		mov	r2, r3
 16606 1424 D7F88C30 		ldr	r3, [r7, #140]
 16607 1428 B3F8F231 		ldrh	r3, [r3, #498]
 16608 142c 07F11C00 		add	r0, r7, #28
 16609 1430 3049     		ldr	r1, .L679+40
 16610 1432 FFF7FEFF 		bl	sprintf
2234:..\src/command_processing.c ****         strcat(info_string, str);
 16611              		.loc 1 2234 0
 16612 1436 07F11C03 		add	r3, r7, #28
 16613 143a 1946     		mov	r1, r3
 16614 143c 7869     		ldr	r0, [r7, #20]
 16615 143e FFF7FEFF 		bl	strcat
2235:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16616              		.loc 1 2235 0
 16617 1442 7869     		ldr	r0, [r7, #20]
 16618 1444 FFF7FEFF 		bl	strlen
 16619 1448 0346     		mov	r3, r0
 16620 144a 1A46     		mov	r2, r3
 16621 144c 7B69     		ldr	r3, [r7, #20]
 16622 144e 1344     		add	r3, r3, r2
 16623 1450 204A     		ldr	r2, .L679+8
 16624 1452 1188     		ldrh	r1, [r2]	@ unaligned
 16625 1454 9278     		ldrb	r2, [r2, #2]
 16626 1456 1980     		strh	r1, [r3]	@ unaligned
 16627 1458 9A70     		strb	r2, [r3, #2]
2236:..\src/command_processing.c **** 
2237:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16628              		.loc 1 2237 0
 16629 145a D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 371


 16630 145e D3F8F421 		ldr	r2, [r3, #500]
 16631 1462 D7F88C30 		ldr	r3, [r7, #140]
 16632 1466 D3F8F831 		ldr	r3, [r3, #504]
 16633 146a 07F11C00 		add	r0, r7, #28
 16634 146e 2249     		ldr	r1, .L679+44
 16635 1470 FFF7FEFF 		bl	sprintf
2238:..\src/command_processing.c ****         strcat(info_string, str);
 16636              		.loc 1 2238 0
 16637 1474 07F11C03 		add	r3, r7, #28
 16638 1478 1946     		mov	r1, r3
 16639 147a 7869     		ldr	r0, [r7, #20]
 16640 147c FFF7FEFF 		bl	strcat
2239:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16641              		.loc 1 2239 0
 16642 1480 7869     		ldr	r0, [r7, #20]
 16643 1482 FFF7FEFF 		bl	strlen
 16644 1486 0346     		mov	r3, r0
 16645 1488 1A46     		mov	r2, r3
 16646 148a 7B69     		ldr	r3, [r7, #20]
 16647 148c 1344     		add	r3, r3, r2
 16648 148e 114A     		ldr	r2, .L679+8
 16649 1490 1188     		ldrh	r1, [r2]	@ unaligned
 16650 1492 9278     		ldrb	r2, [r2, #2]
 16651 1494 1980     		strh	r1, [r3]	@ unaligned
 16652 1496 9A70     		strb	r2, [r3, #2]
2240:..\src/command_processing.c **** 
2241:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16653              		.loc 1 2241 0
 16654 1498 D7F88C30 		ldr	r3, [r7, #140]
 16655 149c 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16656 14a0 002B     		cmp	r3, #0
 16657 14a2 2DD0     		beq	.L636
2242:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16658              		.loc 1 2242 0
 16659 14a4 7869     		ldr	r0, [r7, #20]
 16660 14a6 FFF7FEFF 		bl	strlen
 16661 14aa 0346     		mov	r3, r0
 16662 14ac 1A46     		mov	r2, r3
 16663 14ae 7B69     		ldr	r3, [r7, #20]
 16664 14b0 1344     		add	r3, r3, r2
 16665 14b2 124A     		ldr	r2, .L679+48
 16666 14b4 1D46     		mov	r5, r3
 16667 14b6 1446     		mov	r4, r2
 16668 14b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16669 14ba 2860     		str	r0, [r5]	@ unaligned
 16670 14bc 6960     		str	r1, [r5, #4]	@ unaligned
 16671 14be AA60     		str	r2, [r5, #8]	@ unaligned
 16672 14c0 EB60     		str	r3, [r5, #12]	@ unaligned
 16673 14c2 2068     		ldr	r0, [r4]	@ unaligned
 16674 14c4 2861     		str	r0, [r5, #16]	@ unaligned
 16675 14c6 2379     		ldrb	r3, [r4, #4]
 16676 14c8 2B75     		strb	r3, [r5, #20]
 16677 14ca 2AE0     		b	.L637
 16678              	.L680:
 16679              		.align	2
 16680              	.L679:
 16681 14cc 0C170000 		.word	.LC217
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 372


 16682 14d0 B8130000 		.word	.LC184
 16683 14d4 58110000 		.word	.LC152
 16684 14d8 10170000 		.word	.LC218
 16685 14dc 40170000 		.word	.LC219
 16686 14e0 5C170000 		.word	.LC220
 16687 14e4 80170000 		.word	.LC221
 16688 14e8 90170000 		.word	.LC222
 16689 14ec AC170000 		.word	.LC223
 16690 14f0 C0170000 		.word	.LC224
 16691 14f4 D4170000 		.word	.LC225
 16692 14f8 F8170000 		.word	.LC226
 16693 14fc 1C180000 		.word	.LC227
 16694              	.L636:
2243:..\src/command_processing.c ****         else
2244:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16695              		.loc 1 2244 0
 16696 1500 7869     		ldr	r0, [r7, #20]
 16697 1502 FFF7FEFF 		bl	strlen
 16698 1506 0346     		mov	r3, r0
 16699 1508 1A46     		mov	r2, r3
 16700 150a 7B69     		ldr	r3, [r7, #20]
 16701 150c 1344     		add	r3, r3, r2
 16702 150e BA4A     		ldr	r2, .L681
 16703 1510 1D46     		mov	r5, r3
 16704 1512 1446     		mov	r4, r2
 16705 1514 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16706 1516 2860     		str	r0, [r5]	@ unaligned
 16707 1518 6960     		str	r1, [r5, #4]	@ unaligned
 16708 151a AA60     		str	r2, [r5, #8]	@ unaligned
 16709 151c EB60     		str	r3, [r5, #12]	@ unaligned
 16710 151e 2068     		ldr	r0, [r4]	@ unaligned
 16711 1520 2861     		str	r0, [r5, #16]	@ unaligned
 16712              	.L637:
2245:..\src/command_processing.c ****             
2246:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16713              		.loc 1 2246 0
 16714 1522 D7F88C30 		ldr	r3, [r7, #140]
 16715 1526 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16716 152a 002B     		cmp	r3, #0
 16717 152c 17D0     		beq	.L638
2247:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16718              		.loc 1 2247 0
 16719 152e 7869     		ldr	r0, [r7, #20]
 16720 1530 FFF7FEFF 		bl	strlen
 16721 1534 0346     		mov	r3, r0
 16722 1536 1A46     		mov	r2, r3
 16723 1538 7B69     		ldr	r3, [r7, #20]
 16724 153a 1344     		add	r3, r3, r2
 16725 153c AF4A     		ldr	r2, .L681+4
 16726 153e 1D46     		mov	r5, r3
 16727 1540 1446     		mov	r4, r2
 16728 1542 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16729 1544 2860     		str	r0, [r5]	@ unaligned
 16730 1546 6960     		str	r1, [r5, #4]	@ unaligned
 16731 1548 AA60     		str	r2, [r5, #8]	@ unaligned
 16732 154a EB60     		str	r3, [r5, #12]	@ unaligned
 16733 154c 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 373


 16734 154e 2861     		str	r0, [r5, #16]	@ unaligned
 16735 1550 6961     		str	r1, [r5, #20]	@ unaligned
 16736 1552 2388     		ldrh	r3, [r4]	@ unaligned
 16737 1554 A278     		ldrb	r2, [r4, #2]
 16738 1556 2B83     		strh	r3, [r5, #24]	@ unaligned
 16739 1558 1346     		mov	r3, r2
 16740 155a AB76     		strb	r3, [r5, #26]
 16741 155c 13E0     		b	.L639
 16742              	.L638:
2248:..\src/command_processing.c ****         else
2249:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16743              		.loc 1 2249 0
 16744 155e 7869     		ldr	r0, [r7, #20]
 16745 1560 FFF7FEFF 		bl	strlen
 16746 1564 0346     		mov	r3, r0
 16747 1566 1A46     		mov	r2, r3
 16748 1568 7B69     		ldr	r3, [r7, #20]
 16749 156a 1344     		add	r3, r3, r2
 16750 156c A44A     		ldr	r2, .L681+8
 16751 156e 1D46     		mov	r5, r3
 16752 1570 1446     		mov	r4, r2
 16753 1572 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16754 1574 2860     		str	r0, [r5]	@ unaligned
 16755 1576 6960     		str	r1, [r5, #4]	@ unaligned
 16756 1578 AA60     		str	r2, [r5, #8]	@ unaligned
 16757 157a EB60     		str	r3, [r5, #12]	@ unaligned
 16758 157c 03CC     		ldmia	r4!, {r0, r1}
 16759 157e 2861     		str	r0, [r5, #16]	@ unaligned
 16760 1580 6961     		str	r1, [r5, #20]	@ unaligned
 16761 1582 2388     		ldrh	r3, [r4]	@ unaligned
 16762 1584 2B83     		strh	r3, [r5, #24]	@ unaligned
 16763              	.L639:
2250:..\src/command_processing.c **** 
2251:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16764              		.loc 1 2251 0
 16765 1586 D7F88C30 		ldr	r3, [r7, #140]
 16766 158a 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16767 158e 1A46     		mov	r2, r3
 16768 1590 D7F88C30 		ldr	r3, [r7, #140]
 16769 1594 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16770 1598 07F11C00 		add	r0, r7, #28
 16771 159c 9949     		ldr	r1, .L681+12
 16772 159e FFF7FEFF 		bl	sprintf
2252:..\src/command_processing.c ****         strcat(info_string, str);
 16773              		.loc 1 2252 0
 16774 15a2 07F11C03 		add	r3, r7, #28
 16775 15a6 1946     		mov	r1, r3
 16776 15a8 7869     		ldr	r0, [r7, #20]
 16777 15aa FFF7FEFF 		bl	strcat
2253:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16778              		.loc 1 2253 0
 16779 15ae 7869     		ldr	r0, [r7, #20]
 16780 15b0 FFF7FEFF 		bl	strlen
 16781 15b4 0346     		mov	r3, r0
 16782 15b6 1A46     		mov	r2, r3
 16783 15b8 7B69     		ldr	r3, [r7, #20]
 16784 15ba 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 374


 16785 15bc 924A     		ldr	r2, .L681+16
 16786 15be 1188     		ldrh	r1, [r2]	@ unaligned
 16787 15c0 9278     		ldrb	r2, [r2, #2]
 16788 15c2 1980     		strh	r1, [r3]	@ unaligned
 16789 15c4 9A70     		strb	r2, [r3, #2]
2254:..\src/command_processing.c **** 
2255:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16790              		.loc 1 2255 0
 16791 15c6 D7F88C30 		ldr	r3, [r7, #140]
 16792 15ca 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16793 15ce 012B     		cmp	r3, #1
 16794 15d0 6ED1     		bne	.L640
2256:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16795              		.loc 1 2256 0
 16796 15d2 7869     		ldr	r0, [r7, #20]
 16797 15d4 FFF7FEFF 		bl	strlen
 16798 15d8 0346     		mov	r3, r0
 16799 15da 1A46     		mov	r2, r3
 16800 15dc 7B69     		ldr	r3, [r7, #20]
 16801 15de 1344     		add	r3, r3, r2
 16802 15e0 8A4A     		ldr	r2, .L681+20
 16803 15e2 1C46     		mov	r4, r3
 16804 15e4 1546     		mov	r5, r2
 16805 15e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16806 15e8 2060     		str	r0, [r4]	@ unaligned
 16807 15ea 6160     		str	r1, [r4, #4]	@ unaligned
 16808 15ec A260     		str	r2, [r4, #8]	@ unaligned
 16809 15ee E360     		str	r3, [r4, #12]	@ unaligned
 16810 15f0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16811 15f2 2061     		str	r0, [r4, #16]	@ unaligned
 16812 15f4 6161     		str	r1, [r4, #20]	@ unaligned
 16813 15f6 A261     		str	r2, [r4, #24]	@ unaligned
 16814 15f8 E361     		str	r3, [r4, #28]	@ unaligned
2257:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16815              		.loc 1 2257 0
 16816 15fa 0023     		movs	r3, #0
 16817 15fc C7F89430 		str	r3, [r7, #148]
 16818 1600 25E0     		b	.L641
 16819              	.L642:
2258:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16820              		.loc 1 2258 0 discriminator 3
 16821 1602 D7F89430 		ldr	r3, [r7, #148]
 16822 1606 591C     		adds	r1, r3, #1
 16823 1608 814A     		ldr	r2, .L681+24
 16824 160a D7F89430 		ldr	r3, [r7, #148]
 16825 160e 0233     		adds	r3, r3, #2
 16826 1610 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16827 1614 07F11C00 		add	r0, r7, #28
 16828 1618 0A46     		mov	r2, r1
 16829 161a 7E49     		ldr	r1, .L681+28
 16830 161c FFF7FEFF 		bl	sprintf
2259:..\src/command_processing.c ****                 strcat(info_string, str);
 16831              		.loc 1 2259 0 discriminator 3
 16832 1620 07F11C03 		add	r3, r7, #28
 16833 1624 1946     		mov	r1, r3
 16834 1626 7869     		ldr	r0, [r7, #20]
 16835 1628 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 375


2260:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16836              		.loc 1 2260 0 discriminator 3
 16837 162c 7869     		ldr	r0, [r7, #20]
 16838 162e FFF7FEFF 		bl	strlen
 16839 1632 0346     		mov	r3, r0
 16840 1634 1A46     		mov	r2, r3
 16841 1636 7B69     		ldr	r3, [r7, #20]
 16842 1638 1344     		add	r3, r3, r2
 16843 163a 734A     		ldr	r2, .L681+16
 16844 163c 1188     		ldrh	r1, [r2]	@ unaligned
 16845 163e 9278     		ldrb	r2, [r2, #2]
 16846 1640 1980     		strh	r1, [r3]	@ unaligned
 16847 1642 9A70     		strb	r2, [r3, #2]
2257:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16848              		.loc 1 2257 0 discriminator 3
 16849 1644 D7F89430 		ldr	r3, [r7, #148]
 16850 1648 0133     		adds	r3, r3, #1
 16851 164a C7F89430 		str	r3, [r7, #148]
 16852              	.L641:
2257:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16853              		.loc 1 2257 0 is_stmt 0 discriminator 1
 16854 164e D7F89430 		ldr	r3, [r7, #148]
 16855 1652 052B     		cmp	r3, #5
 16856 1654 D5DD     		ble	.L642
2261:..\src/command_processing.c ****             }
2262:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 16857              		.loc 1 2262 0 is_stmt 1
 16858 1656 0023     		movs	r3, #0
 16859 1658 C7F89430 		str	r3, [r7, #148]
 16860 165c 24E0     		b	.L643
 16861              	.L644:
2263:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16862              		.loc 1 2263 0 discriminator 3
 16863 165e D7F89430 		ldr	r3, [r7, #148]
 16864 1662 591C     		adds	r1, r3, #1
 16865 1664 6A4A     		ldr	r2, .L681+24
 16866 1666 D7F89430 		ldr	r3, [r7, #148]
 16867 166a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16868 166e 07F11C00 		add	r0, r7, #28
 16869 1672 0A46     		mov	r2, r1
 16870 1674 6849     		ldr	r1, .L681+32
 16871 1676 FFF7FEFF 		bl	sprintf
2264:..\src/command_processing.c ****                 strcat(info_string, str);
 16872              		.loc 1 2264 0 discriminator 3
 16873 167a 07F11C03 		add	r3, r7, #28
 16874 167e 1946     		mov	r1, r3
 16875 1680 7869     		ldr	r0, [r7, #20]
 16876 1682 FFF7FEFF 		bl	strcat
2265:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16877              		.loc 1 2265 0 discriminator 3
 16878 1686 7869     		ldr	r0, [r7, #20]
 16879 1688 FFF7FEFF 		bl	strlen
 16880 168c 0346     		mov	r3, r0
 16881 168e 1A46     		mov	r2, r3
 16882 1690 7B69     		ldr	r3, [r7, #20]
 16883 1692 1344     		add	r3, r3, r2
 16884 1694 5C4A     		ldr	r2, .L681+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 376


 16885 1696 1188     		ldrh	r1, [r2]	@ unaligned
 16886 1698 9278     		ldrb	r2, [r2, #2]
 16887 169a 1980     		strh	r1, [r3]	@ unaligned
 16888 169c 9A70     		strb	r2, [r3, #2]
2262:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16889              		.loc 1 2262 0 discriminator 3
 16890 169e D7F89430 		ldr	r3, [r7, #148]
 16891 16a2 0133     		adds	r3, r3, #1
 16892 16a4 C7F89430 		str	r3, [r7, #148]
 16893              	.L643:
2262:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16894              		.loc 1 2262 0 is_stmt 0 discriminator 1
 16895 16a8 D7F89430 		ldr	r3, [r7, #148]
 16896 16ac 012B     		cmp	r3, #1
 16897 16ae D6DD     		ble	.L644
 16898              	.L640:
2266:..\src/command_processing.c ****             }
2267:..\src/command_processing.c ****         }
2268:..\src/command_processing.c **** 
2269:..\src/command_processing.c **** #ifdef GENERIC_FW
2270:..\src/command_processing.c ****     
2271:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2272:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
2273:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
2274:..\src/command_processing.c ****         strcat(info_string, str);
2275:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2276:..\src/command_processing.c **** 
2277:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
2278:..\src/command_processing.c ****         strcat(info_string, str);
2279:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2280:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
2281:..\src/command_processing.c ****         strcat(info_string, str);
2282:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2283:..\src/command_processing.c **** 
2284:..\src/command_processing.c **** #endif
2285:..\src/command_processing.c ****         
2286:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 16899              		.loc 1 2286 0 is_stmt 1
 16900 16b0 D7F88C30 		ldr	r3, [r7, #140]
 16901 16b4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 16902 16b8 002B     		cmp	r3, #0
 16903 16ba 63D0     		beq	.L645
2287:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 16904              		.loc 1 2287 0
 16905 16bc D7F88C30 		ldr	r3, [r7, #140]
 16906 16c0 D3F8A422 		ldr	r2, [r3, #676]
 16907 16c4 07F11C03 		add	r3, r7, #28
 16908 16c8 5449     		ldr	r1, .L681+36
 16909 16ca 1846     		mov	r0, r3
 16910 16cc FFF7FEFF 		bl	sprintf
2288:..\src/command_processing.c ****             strcat(info_string, str);
 16911              		.loc 1 2288 0
 16912 16d0 07F11C03 		add	r3, r7, #28
 16913 16d4 1946     		mov	r1, r3
 16914 16d6 7869     		ldr	r0, [r7, #20]
 16915 16d8 FFF7FEFF 		bl	strcat
2289:..\src/command_processing.c ****             strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 377


 16916              		.loc 1 2289 0
 16917 16dc 7869     		ldr	r0, [r7, #20]
 16918 16de FFF7FEFF 		bl	strlen
 16919 16e2 0346     		mov	r3, r0
 16920 16e4 1A46     		mov	r2, r3
 16921 16e6 7B69     		ldr	r3, [r7, #20]
 16922 16e8 1344     		add	r3, r3, r2
 16923 16ea 474A     		ldr	r2, .L681+16
 16924 16ec 1188     		ldrh	r1, [r2]	@ unaligned
 16925 16ee 9278     		ldrb	r2, [r2, #2]
 16926 16f0 1980     		strh	r1, [r3]	@ unaligned
 16927 16f2 9A70     		strb	r2, [r3, #2]
2290:..\src/command_processing.c ****             
2291:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 16928              		.loc 1 2291 0
 16929 16f4 D7F88C30 		ldr	r3, [r7, #140]
 16930 16f8 D3F8A822 		ldr	r2, [r3, #680]
 16931 16fc 07F11C03 		add	r3, r7, #28
 16932 1700 4749     		ldr	r1, .L681+40
 16933 1702 1846     		mov	r0, r3
 16934 1704 FFF7FEFF 		bl	sprintf
2292:..\src/command_processing.c ****             strcat(info_string, str);
 16935              		.loc 1 2292 0
 16936 1708 07F11C03 		add	r3, r7, #28
 16937 170c 1946     		mov	r1, r3
 16938 170e 7869     		ldr	r0, [r7, #20]
 16939 1710 FFF7FEFF 		bl	strcat
2293:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16940              		.loc 1 2293 0
 16941 1714 7869     		ldr	r0, [r7, #20]
 16942 1716 FFF7FEFF 		bl	strlen
 16943 171a 0346     		mov	r3, r0
 16944 171c 1A46     		mov	r2, r3
 16945 171e 7B69     		ldr	r3, [r7, #20]
 16946 1720 1344     		add	r3, r3, r2
 16947 1722 394A     		ldr	r2, .L681+16
 16948 1724 1188     		ldrh	r1, [r2]	@ unaligned
 16949 1726 9278     		ldrb	r2, [r2, #2]
 16950 1728 1980     		strh	r1, [r3]	@ unaligned
 16951 172a 9A70     		strb	r2, [r3, #2]
2294:..\src/command_processing.c ****             
2295:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 16952              		.loc 1 2295 0
 16953 172c D7F88C30 		ldr	r3, [r7, #140]
 16954 1730 D3F8A022 		ldr	r2, [r3, #672]
 16955 1734 D7F88C30 		ldr	r3, [r7, #140]
 16956 1738 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 16957 173c 1846     		mov	r0, r3
 16958 173e D7F88C10 		ldr	r1, [r7, #140]
 16959 1742 0346     		mov	r3, r0
 16960 1744 5B00     		lsls	r3, r3, #1
 16961 1746 0344     		add	r3, r3, r0
 16962 1748 1B01     		lsls	r3, r3, #4
 16963 174a 0B44     		add	r3, r3, r1
 16964 174c 03F29513 		addw	r3, r3, #405
 16965 1750 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16966 1752 1A41     		asrs	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 378


 16967 1754 07F11C03 		add	r3, r7, #28
 16968 1758 3249     		ldr	r1, .L681+44
 16969 175a 1846     		mov	r0, r3
 16970 175c FFF7FEFF 		bl	sprintf
2296:..\src/command_processing.c ****             strcat(info_string, str);
 16971              		.loc 1 2296 0
 16972 1760 07F11C03 		add	r3, r7, #28
 16973 1764 1946     		mov	r1, r3
 16974 1766 7869     		ldr	r0, [r7, #20]
 16975 1768 FFF7FEFF 		bl	strcat
2297:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 16976              		.loc 1 2297 0
 16977 176c 7869     		ldr	r0, [r7, #20]
 16978 176e FFF7FEFF 		bl	strlen
 16979 1772 0346     		mov	r3, r0
 16980 1774 1A46     		mov	r2, r3
 16981 1776 7B69     		ldr	r3, [r7, #20]
 16982 1778 1344     		add	r3, r3, r2
 16983 177a 234A     		ldr	r2, .L681+16
 16984 177c 1188     		ldrh	r1, [r2]	@ unaligned
 16985 177e 9278     		ldrb	r2, [r2, #2]
 16986 1780 1980     		strh	r1, [r3]	@ unaligned
 16987 1782 9A70     		strb	r2, [r3, #2]
 16988              	.L645:
2298:..\src/command_processing.c ****         }
2299:..\src/command_processing.c **** 
2300:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 16989              		.loc 1 2300 0
 16990 1784 D7F88C30 		ldr	r3, [r7, #140]
 16991 1788 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 16992 178c 002B     		cmp	r3, #0
 16993 178e 00F0CD81 		beq	.L646
2301:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 16994              		.loc 1 2301 0
 16995 1792 254B     		ldr	r3, .L681+48
 16996 1794 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16997 1796 1A46     		mov	r2, r3
 16998 1798 07F11C03 		add	r3, r7, #28
 16999 179c 2349     		ldr	r1, .L681+52
 17000 179e 1846     		mov	r0, r3
 17001 17a0 FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****             strcat(info_string, str);
 17002              		.loc 1 2302 0
 17003 17a4 07F11C03 		add	r3, r7, #28
 17004 17a8 1946     		mov	r1, r3
 17005 17aa 7869     		ldr	r0, [r7, #20]
 17006 17ac FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****             
2304:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17007              		.loc 1 2304 0
 17008 17b0 7869     		ldr	r0, [r7, #20]
 17009 17b2 FFF7FEFF 		bl	strlen
 17010 17b6 0346     		mov	r3, r0
 17011 17b8 1A46     		mov	r2, r3
 17012 17ba 7B69     		ldr	r3, [r7, #20]
 17013 17bc 1344     		add	r3, r3, r2
 17014 17be 124A     		ldr	r2, .L681+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 379


 17015 17c0 1188     		ldrh	r1, [r2]	@ unaligned
 17016 17c2 9278     		ldrb	r2, [r2, #2]
 17017 17c4 1980     		strh	r1, [r3]	@ unaligned
 17018 17c6 9A70     		strb	r2, [r3, #2]
2305:..\src/command_processing.c ****             
2306:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17019              		.loc 1 2306 0
 17020 17c8 7869     		ldr	r0, [r7, #20]
 17021 17ca FFF7FEFF 		bl	strlen
 17022 17ce 0346     		mov	r3, r0
 17023 17d0 1A46     		mov	r2, r3
 17024 17d2 7B69     		ldr	r3, [r7, #20]
 17025 17d4 1344     		add	r3, r3, r2
 17026 17d6 164A     		ldr	r2, .L681+56
 17027 17d8 1D46     		mov	r5, r3
 17028 17da 1446     		mov	r4, r2
 17029 17dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17030 17de 2860     		str	r0, [r5]	@ unaligned
 17031 17e0 6960     		str	r1, [r5, #4]	@ unaligned
 17032 17e2 AA60     		str	r2, [r5, #8]	@ unaligned
 17033 17e4 EB60     		str	r3, [r5, #12]	@ unaligned
 17034 17e6 2068     		ldr	r0, [r4]	@ unaligned
 17035 17e8 2861     		str	r0, [r5, #16]	@ unaligned
 17036 17ea 2379     		ldrb	r3, [r4, #4]
 17037 17ec 2B75     		strb	r3, [r5, #20]
2307:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17038              		.loc 1 2307 0
 17039 17ee 0023     		movs	r3, #0
 17040 17f0 C7F89430 		str	r3, [r7, #148]
 17041 17f4 83E1     		b	.L647
 17042              	.L682:
 17043 17f6 00BF     		.align	2
 17044              	.L681:
 17045 17f8 34180000 		.word	.LC228
 17046 17fc 48180000 		.word	.LC229
 17047 1800 64180000 		.word	.LC230
 17048 1804 80180000 		.word	.LC231
 17049 1808 58110000 		.word	.LC152
 17050 180c 98180000 		.word	.LC232
 17051 1810 00000000 		.word	g_adc_meas
 17052 1814 B8180000 		.word	.LC233
 17053 1818 C8180000 		.word	.LC234
 17054 181c DC180000 		.word	.LC235
 17055 1820 F8180000 		.word	.LC236
 17056 1824 20190000 		.word	.LC237
 17057 1828 00000000 		.word	N_IMU_Connected
 17058 182c 34190000 		.word	.LC238
 17059 1830 48190000 		.word	.LC239
 17060              	.L658:
2308:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17061              		.loc 1 2308 0
 17062 1834 D54A     		ldr	r2, .L683
 17063 1836 D7F89430 		ldr	r3, [r7, #148]
 17064 183a 1344     		add	r3, r3, r2
 17065 183c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17066 183e 07F11C00 		add	r0, r7, #28
 17067 1842 D7F89420 		ldr	r2, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 380


 17068 1846 D249     		ldr	r1, .L683+4
 17069 1848 FFF7FEFF 		bl	sprintf
2309:..\src/command_processing.c ****                 strcat(info_string, str);
 17070              		.loc 1 2309 0
 17071 184c 07F11C03 		add	r3, r7, #28
 17072 1850 1946     		mov	r1, r3
 17073 1852 7869     		ldr	r0, [r7, #20]
 17074 1854 FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c ****                 
2311:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17075              		.loc 1 2311 0
 17076 1858 07F11C03 		add	r3, r7, #28
 17077 185c CD4A     		ldr	r2, .L683+8
 17078 185e 1C46     		mov	r4, r3
 17079 1860 1546     		mov	r5, r2
 17080 1862 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17081 1864 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17082 1866 2B68     		ldr	r3, [r5]
 17083 1868 2380     		strh	r3, [r4]	@ movhi
2312:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17084              		.loc 1 2312 0
 17085 186a C84A     		ldr	r2, .L683
 17086 186c D7F89430 		ldr	r3, [r7, #148]
 17087 1870 1344     		add	r3, r3, r2
 17088 1872 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17089 1874 1946     		mov	r1, r3
 17090 1876 D7F88C20 		ldr	r2, [r7, #140]
 17091 187a 0B46     		mov	r3, r1
 17092 187c 9B00     		lsls	r3, r3, #2
 17093 187e 0B44     		add	r3, r3, r1
 17094 1880 1344     		add	r3, r3, r2
 17095 1882 03F20223 		addw	r3, r3, #514
 17096 1886 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17097 1888 002B     		cmp	r3, #0
 17098 188a 0FD0     		beq	.L648
2313:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17099              		.loc 1 2313 0
 17100 188c 07F11C03 		add	r3, r7, #28
 17101 1890 1846     		mov	r0, r3
 17102 1892 FFF7FEFF 		bl	strlen
 17103 1896 0346     		mov	r3, r0
 17104 1898 1A46     		mov	r2, r3
 17105 189a 07F11C03 		add	r3, r7, #28
 17106 189e 1344     		add	r3, r3, r2
 17107 18a0 BD4A     		ldr	r2, .L683+12
 17108 18a2 1068     		ldr	r0, [r2]	@ unaligned
 17109 18a4 1860     		str	r0, [r3]	@ unaligned
 17110 18a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17111 18a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 17112 18aa 0EE0     		b	.L649
 17113              	.L648:
2314:..\src/command_processing.c ****                 else
2315:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17114              		.loc 1 2315 0
 17115 18ac 07F11C03 		add	r3, r7, #28
 17116 18b0 1846     		mov	r0, r3
 17117 18b2 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 381


 17118 18b6 0346     		mov	r3, r0
 17119 18b8 1A46     		mov	r2, r3
 17120 18ba 07F11C03 		add	r3, r7, #28
 17121 18be 1344     		add	r3, r3, r2
 17122 18c0 B64A     		ldr	r2, .L683+16
 17123 18c2 1068     		ldr	r0, [r2]	@ unaligned
 17124 18c4 1860     		str	r0, [r3]	@ unaligned
 17125 18c6 1279     		ldrb	r2, [r2, #4]
 17126 18c8 1A71     		strb	r2, [r3, #4]
 17127              	.L649:
2316:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17128              		.loc 1 2316 0
 17129 18ca 07F11C03 		add	r3, r7, #28
 17130 18ce 1846     		mov	r0, r3
 17131 18d0 FFF7FEFF 		bl	strlen
 17132 18d4 0346     		mov	r3, r0
 17133 18d6 1A46     		mov	r2, r3
 17134 18d8 07F11C03 		add	r3, r7, #28
 17135 18dc 1344     		add	r3, r3, r2
 17136 18de B04A     		ldr	r2, .L683+20
 17137 18e0 1C46     		mov	r4, r3
 17138 18e2 1346     		mov	r3, r2
 17139 18e4 07CB     		ldmia	r3!, {r0, r1, r2}
 17140 18e6 2060     		str	r0, [r4]	@ unaligned
 17141 18e8 6160     		str	r1, [r4, #4]	@ unaligned
 17142 18ea A260     		str	r2, [r4, #8]	@ unaligned
 17143 18ec 1B88     		ldrh	r3, [r3]	@ unaligned
 17144 18ee A381     		strh	r3, [r4, #12]	@ unaligned
2317:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17145              		.loc 1 2317 0
 17146 18f0 A64A     		ldr	r2, .L683
 17147 18f2 D7F89430 		ldr	r3, [r7, #148]
 17148 18f6 1344     		add	r3, r3, r2
 17149 18f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17150 18fa 1946     		mov	r1, r3
 17151 18fc D7F88C20 		ldr	r2, [r7, #140]
 17152 1900 0B46     		mov	r3, r1
 17153 1902 9B00     		lsls	r3, r3, #2
 17154 1904 0B44     		add	r3, r3, r1
 17155 1906 1344     		add	r3, r3, r2
 17156 1908 03F20323 		addw	r3, r3, #515
 17157 190c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17158 190e 002B     		cmp	r3, #0
 17159 1910 0FD0     		beq	.L650
2318:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17160              		.loc 1 2318 0
 17161 1912 07F11C03 		add	r3, r7, #28
 17162 1916 1846     		mov	r0, r3
 17163 1918 FFF7FEFF 		bl	strlen
 17164 191c 0346     		mov	r3, r0
 17165 191e 1A46     		mov	r2, r3
 17166 1920 07F11C03 		add	r3, r7, #28
 17167 1924 1344     		add	r3, r3, r2
 17168 1926 9C4A     		ldr	r2, .L683+12
 17169 1928 1068     		ldr	r0, [r2]	@ unaligned
 17170 192a 1860     		str	r0, [r3]	@ unaligned
 17171 192c 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 382


 17172 192e 9A80     		strh	r2, [r3, #4]	@ unaligned
 17173 1930 0EE0     		b	.L651
 17174              	.L650:
2319:..\src/command_processing.c ****                 else
2320:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17175              		.loc 1 2320 0
 17176 1932 07F11C03 		add	r3, r7, #28
 17177 1936 1846     		mov	r0, r3
 17178 1938 FFF7FEFF 		bl	strlen
 17179 193c 0346     		mov	r3, r0
 17180 193e 1A46     		mov	r2, r3
 17181 1940 07F11C03 		add	r3, r7, #28
 17182 1944 1344     		add	r3, r3, r2
 17183 1946 954A     		ldr	r2, .L683+16
 17184 1948 1068     		ldr	r0, [r2]	@ unaligned
 17185 194a 1860     		str	r0, [r3]	@ unaligned
 17186 194c 1279     		ldrb	r2, [r2, #4]
 17187 194e 1A71     		strb	r2, [r3, #4]
 17188              	.L651:
2321:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17189              		.loc 1 2321 0
 17190 1950 07F11C03 		add	r3, r7, #28
 17191 1954 1846     		mov	r0, r3
 17192 1956 FFF7FEFF 		bl	strlen
 17193 195a 0346     		mov	r3, r0
 17194 195c 1A46     		mov	r2, r3
 17195 195e 07F11C03 		add	r3, r7, #28
 17196 1962 1344     		add	r3, r3, r2
 17197 1964 8F4A     		ldr	r2, .L683+24
 17198 1966 1D46     		mov	r5, r3
 17199 1968 1446     		mov	r4, r2
 17200 196a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17201 196c 2860     		str	r0, [r5]	@ unaligned
 17202 196e 6960     		str	r1, [r5, #4]	@ unaligned
 17203 1970 AA60     		str	r2, [r5, #8]	@ unaligned
 17204 1972 EB60     		str	r3, [r5, #12]	@ unaligned
 17205 1974 2378     		ldrb	r3, [r4]
 17206 1976 2B74     		strb	r3, [r5, #16]
2322:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17207              		.loc 1 2322 0
 17208 1978 844A     		ldr	r2, .L683
 17209 197a D7F89430 		ldr	r3, [r7, #148]
 17210 197e 1344     		add	r3, r3, r2
 17211 1980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17212 1982 1946     		mov	r1, r3
 17213 1984 D7F88C20 		ldr	r2, [r7, #140]
 17214 1988 0B46     		mov	r3, r1
 17215 198a 9B00     		lsls	r3, r3, #2
 17216 198c 0B44     		add	r3, r3, r1
 17217 198e 1344     		add	r3, r3, r2
 17218 1990 03F50173 		add	r3, r3, #516
 17219 1994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17220 1996 002B     		cmp	r3, #0
 17221 1998 0FD0     		beq	.L652
2323:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17222              		.loc 1 2323 0
 17223 199a 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 383


 17224 199e 1846     		mov	r0, r3
 17225 19a0 FFF7FEFF 		bl	strlen
 17226 19a4 0346     		mov	r3, r0
 17227 19a6 1A46     		mov	r2, r3
 17228 19a8 07F11C03 		add	r3, r7, #28
 17229 19ac 1344     		add	r3, r3, r2
 17230 19ae 7A4A     		ldr	r2, .L683+12
 17231 19b0 1068     		ldr	r0, [r2]	@ unaligned
 17232 19b2 1860     		str	r0, [r3]	@ unaligned
 17233 19b4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17234 19b6 9A80     		strh	r2, [r3, #4]	@ unaligned
 17235 19b8 0EE0     		b	.L653
 17236              	.L652:
2324:..\src/command_processing.c ****                 else
2325:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17237              		.loc 1 2325 0
 17238 19ba 07F11C03 		add	r3, r7, #28
 17239 19be 1846     		mov	r0, r3
 17240 19c0 FFF7FEFF 		bl	strlen
 17241 19c4 0346     		mov	r3, r0
 17242 19c6 1A46     		mov	r2, r3
 17243 19c8 07F11C03 		add	r3, r7, #28
 17244 19cc 1344     		add	r3, r3, r2
 17245 19ce 734A     		ldr	r2, .L683+16
 17246 19d0 1068     		ldr	r0, [r2]	@ unaligned
 17247 19d2 1860     		str	r0, [r3]	@ unaligned
 17248 19d4 1279     		ldrb	r2, [r2, #4]
 17249 19d6 1A71     		strb	r2, [r3, #4]
 17250              	.L653:
2326:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17251              		.loc 1 2326 0
 17252 19d8 07F11C03 		add	r3, r7, #28
 17253 19dc 1846     		mov	r0, r3
 17254 19de FFF7FEFF 		bl	strlen
 17255 19e2 0346     		mov	r3, r0
 17256 19e4 1A46     		mov	r2, r3
 17257 19e6 07F11C03 		add	r3, r7, #28
 17258 19ea 1344     		add	r3, r3, r2
 17259 19ec 6E4A     		ldr	r2, .L683+28
 17260 19ee 1C46     		mov	r4, r3
 17261 19f0 1346     		mov	r3, r2
 17262 19f2 07CB     		ldmia	r3!, {r0, r1, r2}
 17263 19f4 2060     		str	r0, [r4]	@ unaligned
 17264 19f6 6160     		str	r1, [r4, #4]	@ unaligned
 17265 19f8 A260     		str	r2, [r4, #8]	@ unaligned
 17266 19fa 1B88     		ldrh	r3, [r3]	@ unaligned
 17267 19fc A381     		strh	r3, [r4, #12]	@ unaligned
2327:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17268              		.loc 1 2327 0
 17269 19fe 634A     		ldr	r2, .L683
 17270 1a00 D7F89430 		ldr	r3, [r7, #148]
 17271 1a04 1344     		add	r3, r3, r2
 17272 1a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17273 1a08 1946     		mov	r1, r3
 17274 1a0a D7F88C20 		ldr	r2, [r7, #140]
 17275 1a0e 0B46     		mov	r3, r1
 17276 1a10 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 384


 17277 1a12 0B44     		add	r3, r3, r1
 17278 1a14 1344     		add	r3, r3, r2
 17279 1a16 03F20523 		addw	r3, r3, #517
 17280 1a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17281 1a1c 002B     		cmp	r3, #0
 17282 1a1e 0FD0     		beq	.L654
2328:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17283              		.loc 1 2328 0
 17284 1a20 07F11C03 		add	r3, r7, #28
 17285 1a24 1846     		mov	r0, r3
 17286 1a26 FFF7FEFF 		bl	strlen
 17287 1a2a 0346     		mov	r3, r0
 17288 1a2c 1A46     		mov	r2, r3
 17289 1a2e 07F11C03 		add	r3, r7, #28
 17290 1a32 1344     		add	r3, r3, r2
 17291 1a34 584A     		ldr	r2, .L683+12
 17292 1a36 1068     		ldr	r0, [r2]	@ unaligned
 17293 1a38 1860     		str	r0, [r3]	@ unaligned
 17294 1a3a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17295 1a3c 9A80     		strh	r2, [r3, #4]	@ unaligned
 17296 1a3e 0EE0     		b	.L655
 17297              	.L654:
2329:..\src/command_processing.c ****                 else
2330:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17298              		.loc 1 2330 0
 17299 1a40 07F11C03 		add	r3, r7, #28
 17300 1a44 1846     		mov	r0, r3
 17301 1a46 FFF7FEFF 		bl	strlen
 17302 1a4a 0346     		mov	r3, r0
 17303 1a4c 1A46     		mov	r2, r3
 17304 1a4e 07F11C03 		add	r3, r7, #28
 17305 1a52 1344     		add	r3, r3, r2
 17306 1a54 514A     		ldr	r2, .L683+16
 17307 1a56 1068     		ldr	r0, [r2]	@ unaligned
 17308 1a58 1860     		str	r0, [r3]	@ unaligned
 17309 1a5a 1279     		ldrb	r2, [r2, #4]
 17310 1a5c 1A71     		strb	r2, [r3, #4]
 17311              	.L655:
2331:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17312              		.loc 1 2331 0
 17313 1a5e 07F11C03 		add	r3, r7, #28
 17314 1a62 1846     		mov	r0, r3
 17315 1a64 FFF7FEFF 		bl	strlen
 17316 1a68 0346     		mov	r3, r0
 17317 1a6a 1A46     		mov	r2, r3
 17318 1a6c 07F11C03 		add	r3, r7, #28
 17319 1a70 1344     		add	r3, r3, r2
 17320 1a72 4E4A     		ldr	r2, .L683+32
 17321 1a74 1C46     		mov	r4, r3
 17322 1a76 1346     		mov	r3, r2
 17323 1a78 07CB     		ldmia	r3!, {r0, r1, r2}
 17324 1a7a 2060     		str	r0, [r4]	@ unaligned
 17325 1a7c 6160     		str	r1, [r4, #4]	@ unaligned
 17326 1a7e A260     		str	r2, [r4, #8]	@ unaligned
 17327 1a80 1A88     		ldrh	r2, [r3]	@ unaligned
 17328 1a82 9B78     		ldrb	r3, [r3, #2]
 17329 1a84 A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 385


 17330 1a86 A373     		strb	r3, [r4, #14]
2332:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17331              		.loc 1 2332 0
 17332 1a88 404A     		ldr	r2, .L683
 17333 1a8a D7F89430 		ldr	r3, [r7, #148]
 17334 1a8e 1344     		add	r3, r3, r2
 17335 1a90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17336 1a92 1946     		mov	r1, r3
 17337 1a94 D7F88C20 		ldr	r2, [r7, #140]
 17338 1a98 0B46     		mov	r3, r1
 17339 1a9a 9B00     		lsls	r3, r3, #2
 17340 1a9c 0B44     		add	r3, r3, r1
 17341 1a9e 1344     		add	r3, r3, r2
 17342 1aa0 03F20623 		addw	r3, r3, #518
 17343 1aa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17344 1aa6 002B     		cmp	r3, #0
 17345 1aa8 0FD0     		beq	.L656
2333:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17346              		.loc 1 2333 0
 17347 1aaa 07F11C03 		add	r3, r7, #28
 17348 1aae 1846     		mov	r0, r3
 17349 1ab0 FFF7FEFF 		bl	strlen
 17350 1ab4 0346     		mov	r3, r0
 17351 1ab6 1A46     		mov	r2, r3
 17352 1ab8 07F11C03 		add	r3, r7, #28
 17353 1abc 1344     		add	r3, r3, r2
 17354 1abe 364A     		ldr	r2, .L683+12
 17355 1ac0 1068     		ldr	r0, [r2]	@ unaligned
 17356 1ac2 1860     		str	r0, [r3]	@ unaligned
 17357 1ac4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17358 1ac6 9A80     		strh	r2, [r3, #4]	@ unaligned
 17359 1ac8 0EE0     		b	.L657
 17360              	.L656:
2334:..\src/command_processing.c ****                 else
2335:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17361              		.loc 1 2335 0
 17362 1aca 07F11C03 		add	r3, r7, #28
 17363 1ace 1846     		mov	r0, r3
 17364 1ad0 FFF7FEFF 		bl	strlen
 17365 1ad4 0346     		mov	r3, r0
 17366 1ad6 1A46     		mov	r2, r3
 17367 1ad8 07F11C03 		add	r3, r7, #28
 17368 1adc 1344     		add	r3, r3, r2
 17369 1ade 2F4A     		ldr	r2, .L683+16
 17370 1ae0 1068     		ldr	r0, [r2]	@ unaligned
 17371 1ae2 1860     		str	r0, [r3]	@ unaligned
 17372 1ae4 1279     		ldrb	r2, [r2, #4]
 17373 1ae6 1A71     		strb	r2, [r3, #4]
 17374              	.L657:
2336:..\src/command_processing.c ****                      
2337:..\src/command_processing.c ****                 strcat(info_string, str);
 17375              		.loc 1 2337 0 discriminator 2
 17376 1ae8 07F11C03 		add	r3, r7, #28
 17377 1aec 1946     		mov	r1, r3
 17378 1aee 7869     		ldr	r0, [r7, #20]
 17379 1af0 FFF7FEFF 		bl	strcat
2307:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 386


 17380              		.loc 1 2307 0 discriminator 2
 17381 1af4 D7F89430 		ldr	r3, [r7, #148]
 17382 1af8 0133     		adds	r3, r3, #1
 17383 1afa C7F89430 		str	r3, [r7, #148]
 17384              	.L647:
2307:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17385              		.loc 1 2307 0 is_stmt 0 discriminator 1
 17386 1afe 2C4B     		ldr	r3, .L683+36
 17387 1b00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17388 1b02 1A46     		mov	r2, r3
 17389 1b04 D7F89430 		ldr	r3, [r7, #148]
 17390 1b08 9A42     		cmp	r2, r3
 17391 1b0a 3FF793AE 		bgt	.L658
2338:..\src/command_processing.c ****             }       
2339:..\src/command_processing.c ****             
2340:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17392              		.loc 1 2340 0 is_stmt 1
 17393 1b0e 7869     		ldr	r0, [r7, #20]
 17394 1b10 FFF7FEFF 		bl	strlen
 17395 1b14 0346     		mov	r3, r0
 17396 1b16 1A46     		mov	r2, r3
 17397 1b18 7B69     		ldr	r3, [r7, #20]
 17398 1b1a 1344     		add	r3, r3, r2
 17399 1b1c 254A     		ldr	r2, .L683+40
 17400 1b1e 1188     		ldrh	r1, [r2]	@ unaligned
 17401 1b20 9278     		ldrb	r2, [r2, #2]
 17402 1b22 1980     		strh	r1, [r3]	@ unaligned
 17403 1b24 9A70     		strb	r2, [r3, #2]
2341:..\src/command_processing.c ****           
2342:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17404              		.loc 1 2342 0
 17405 1b26 7869     		ldr	r0, [r7, #20]
 17406 1b28 FFF7FEFF 		bl	IMU_reading_info
 17407              	.L646:
2343:..\src/command_processing.c ****         }
2344:..\src/command_processing.c ****         
2345:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17408              		.loc 1 2345 0
 17409 1b2c 7869     		ldr	r0, [r7, #20]
 17410 1b2e FFF7FEFF 		bl	strlen
 17411 1b32 0346     		mov	r3, r0
 17412 1b34 1A46     		mov	r2, r3
 17413 1b36 7B69     		ldr	r3, [r7, #20]
 17414 1b38 1344     		add	r3, r3, r2
 17415 1b3a 1E4A     		ldr	r2, .L683+40
 17416 1b3c 1188     		ldrh	r1, [r2]	@ unaligned
 17417 1b3e 9278     		ldrb	r2, [r2, #2]
 17418 1b40 1980     		strh	r1, [r3]	@ unaligned
 17419 1b42 9A70     		strb	r2, [r3, #2]
2346:..\src/command_processing.c **** 
2347:..\src/command_processing.c **** #ifdef GENERIC_FW   
2348:..\src/command_processing.c ****         int j;
2349:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2350:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2351:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2352:..\src/command_processing.c ****             strcat(info_string, str);
2353:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 387


2354:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2355:..\src/command_processing.c ****                 strcat(info_string, str);
2356:..\src/command_processing.c ****             }
2357:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2358:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2359:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2360:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2361:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2362:..\src/command_processing.c ****                     strcat(info_string, str);
2363:..\src/command_processing.c ****                 }
2364:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2365:..\src/command_processing.c ****             }
2366:..\src/command_processing.c ****         }
2367:..\src/command_processing.c **** #endif   
2368:..\src/command_processing.c ****         
2369:..\src/command_processing.c **** #ifdef MASTER_FW
2370:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
 17420              		.loc 1 2370 0
 17421 1b44 D7F88C30 		ldr	r3, [r7, #140]
 17422 1b48 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 17423 1b4c 002B     		cmp	r3, #0
 17424 1b4e 35D0     		beq	.L659
2371:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
 17425              		.loc 1 2371 0
 17426 1b50 7869     		ldr	r0, [r7, #20]
 17427 1b52 FFF7FEFF 		bl	strlen
 17428 1b56 0346     		mov	r3, r0
 17429 1b58 1A46     		mov	r2, r3
 17430 1b5a 7B69     		ldr	r3, [r7, #20]
 17431 1b5c 1344     		add	r3, r3, r2
 17432 1b5e 164A     		ldr	r2, .L683+44
 17433 1b60 1446     		mov	r4, r2
 17434 1b62 9E46     		mov	lr, r3
 17435 1b64 04F1200C 		add	ip, r4, #32
 17436              	.L660:
 17437 1b68 7546     		mov	r5, lr
 17438 1b6a 2646     		mov	r6, r4
 17439 1b6c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17440 1b6e 2860     		str	r0, [r5]	@ unaligned
 17441 1b70 6960     		str	r1, [r5, #4]	@ unaligned
 17442 1b72 AA60     		str	r2, [r5, #8]	@ unaligned
 17443 1b74 EB60     		str	r3, [r5, #12]	@ unaligned
 17444 1b76 1034     		adds	r4, r4, #16
 17445 1b78 0EF1100E 		add	lr, lr, #16
 17446 1b7c 6445     		cmp	r4, ip
 17447 1b7e F3D1     		bne	.L660
 17448 1b80 7246     		mov	r2, lr
 17449 1b82 2346     		mov	r3, r4
 17450 1b84 1B88     		ldrh	r3, [r3]	@ unaligned
 17451 1b86 1380     		strh	r3, [r2]	@ unaligned
 17452 1b88 34E0     		b	.L661
 17453              	.L684:
 17454 1b8a 00BF     		.align	2
 17455              	.L683:
 17456 1b8c 00000000 		.word	IMU_connected
 17457 1b90 60190000 		.word	.LC240
 17458 1b94 74190000 		.word	.LC241
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 388


 17459 1b98 44130000 		.word	.LC175
 17460 1b9c 4C130000 		.word	.LC176
 17461 1ba0 88190000 		.word	.LC242
 17462 1ba4 98190000 		.word	.LC243
 17463 1ba8 AC190000 		.word	.LC244
 17464 1bac BC190000 		.word	.LC245
 17465 1bb0 00000000 		.word	N_IMU_Connected
 17466 1bb4 58110000 		.word	.LC152
 17467 1bb8 CC190000 		.word	.LC246
 17468              	.L659:
2372:..\src/command_processing.c ****         else
2373:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
 17469              		.loc 1 2373 0
 17470 1bbc 7869     		ldr	r0, [r7, #20]
 17471 1bbe FFF7FEFF 		bl	strlen
 17472 1bc2 0346     		mov	r3, r0
 17473 1bc4 1A46     		mov	r2, r3
 17474 1bc6 7B69     		ldr	r3, [r7, #20]
 17475 1bc8 1344     		add	r3, r3, r2
 17476 1bca 244A     		ldr	r2, .L685
 17477 1bcc 1446     		mov	r4, r2
 17478 1bce 9E46     		mov	lr, r3
 17479 1bd0 04F1200C 		add	ip, r4, #32
 17480              	.L662:
 17481 1bd4 7546     		mov	r5, lr
 17482 1bd6 2646     		mov	r6, r4
 17483 1bd8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17484 1bda 2860     		str	r0, [r5]	@ unaligned
 17485 1bdc 6960     		str	r1, [r5, #4]	@ unaligned
 17486 1bde AA60     		str	r2, [r5, #8]	@ unaligned
 17487 1be0 EB60     		str	r3, [r5, #12]	@ unaligned
 17488 1be2 1034     		adds	r4, r4, #16
 17489 1be4 0EF1100E 		add	lr, lr, #16
 17490 1be8 6445     		cmp	r4, ip
 17491 1bea F3D1     		bne	.L662
 17492 1bec 7346     		mov	r3, lr
 17493 1bee 2246     		mov	r2, r4
 17494 1bf0 1278     		ldrb	r2, [r2]
 17495 1bf2 1A70     		strb	r2, [r3]
 17496              	.L661:
2374:..\src/command_processing.c **** 
2375:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
 17497              		.loc 1 2375 0
 17498 1bf4 D7F88C30 		ldr	r3, [r7, #140]
 17499 1bf8 93F8C132 		ldrb	r3, [r3, #705]	@ zero_extendqisi2
 17500 1bfc 1A46     		mov	r2, r3
 17501 1bfe 07F11C03 		add	r3, r7, #28
 17502 1c02 1749     		ldr	r1, .L685+4
 17503 1c04 1846     		mov	r0, r3
 17504 1c06 FFF7FEFF 		bl	sprintf
2376:..\src/command_processing.c ****         strcat(info_string, str);
 17505              		.loc 1 2376 0
 17506 1c0a 07F11C03 		add	r3, r7, #28
 17507 1c0e 1946     		mov	r1, r3
 17508 1c10 7869     		ldr	r0, [r7, #20]
 17509 1c12 FFF7FEFF 		bl	strcat
2377:..\src/command_processing.c **** #endif
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 389


2378:..\src/command_processing.c **** 
2379:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17510              		.loc 1 2379 0
 17511 1c16 134B     		ldr	r3, .L685+8
 17512 1c18 1B88     		ldrh	r3, [r3]
 17513 1c1a 1A46     		mov	r2, r3
 17514 1c1c 124B     		ldr	r3, .L685+12
 17515 1c1e 1B88     		ldrh	r3, [r3]
 17516 1c20 D21A     		subs	r2, r2, r3
 17517 1c22 07F11C03 		add	r3, r7, #28
 17518 1c26 1149     		ldr	r1, .L685+16
 17519 1c28 1846     		mov	r0, r3
 17520 1c2a FFF7FEFF 		bl	sprintf
2380:..\src/command_processing.c ****         strcat(info_string, str);
 17521              		.loc 1 2380 0
 17522 1c2e 07F11C03 		add	r3, r7, #28
 17523 1c32 1946     		mov	r1, r3
 17524 1c34 7869     		ldr	r0, [r7, #20]
 17525 1c36 FFF7FEFF 		bl	strcat
2381:..\src/command_processing.c ****   
2382:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17526              		.loc 1 2382 0
 17527 1c3a 7869     		ldr	r0, [r7, #20]
 17528 1c3c FFF7FEFF 		bl	strlen
 17529 1c40 0346     		mov	r3, r0
 17530 1c42 1A46     		mov	r2, r3
 17531 1c44 7B69     		ldr	r3, [r7, #20]
 17532 1c46 1344     		add	r3, r3, r2
 17533 1c48 094A     		ldr	r2, .L685+20
 17534 1c4a 1188     		ldrh	r1, [r2]	@ unaligned
 17535 1c4c 9278     		ldrb	r2, [r2, #2]
 17536 1c4e 1980     		strh	r1, [r3]	@ unaligned
 17537 1c50 9A70     		strb	r2, [r3, #2]
 17538              	.L664:
 17539              	.LBE24:
2383:..\src/command_processing.c ****     }
2384:..\src/command_processing.c **** }
 17540              		.loc 1 2384 0
 17541 1c52 00BF     		nop
 17542 1c54 9C37     		adds	r7, r7, #156
 17543              		.cfi_def_cfa_offset 36
 17544 1c56 BD46     		mov	sp, r7
 17545              		.cfi_def_cfa_register 13
 17546              		@ sp needed
 17547 1c58 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17548              	.L686:
 17549              		.align	2
 17550              	.L685:
 17551 1c5c F0190000 		.word	.LC247
 17552 1c60 141A0000 		.word	.LC248
 17553 1c64 00000000 		.word	timer_value0
 17554 1c68 00000000 		.word	timer_value
 17555 1c6c 241A0000 		.word	.LC249
 17556 1c70 401A0000 		.word	.LC250
 17557              		.cfi_endproc
 17558              	.LFE72:
 17559              		.size	prepare_generic_info, .-prepare_generic_info
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 390


 17560              		.section	.rodata
 17561              		.align	2
 17562              	.LC251:
 17563 1a44 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17563      41474520 
 17563      53544154 
 17563      49535449 
 17563      43530D0A 
 17564 1a59 000000   		.align	2
 17565              	.LC252:
 17566 1a5c 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17566      206F6620 
 17566      4857206D 
 17566      61696E74 
 17566      656E616E 
 17567 1a87 00       		.align	2
 17568              	.LC253:
 17569 1a88 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17569      206F6620 
 17569      75736167 
 17569      65207374 
 17569      61747320 
 17570 1abb 0A00     		.ascii	"\012\000"
 17571 1abd 000000   		.align	2
 17572              	.LC254:
 17573 1ac0 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17573      20636865 
 17573      636B6564 
 17573      2054696D 
 17573      653A2025 
 17574 1af3 0A00     		.ascii	"\012\000"
 17575 1af5 000000   		.align	2
 17576              	.LC255:
 17577 1af8 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17577      74696F6E 
 17577      73206869 
 17577      73746F67 
 17577      72616D20 
 17578 1b17 00       		.align	2
 17579              	.LC256:
 17580 1b18 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17580      2564205B 
 17580      25642D25 
 17580      645D3A20 
 17580      256C750D 
 17581 1b2e 0000     		.align	2
 17582              	.LC257:
 17583 1b30 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17583      656E7420 
 17583      68697374 
 17583      6F677261 
 17583      6D20286D 
 17584 1b4a 0000     		.align	2
 17585              	.LC258:
 17586 1b4c 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17586      73686F6C 
 17586      64202564 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 391


 17586      205B2564 
 17586      2D25645D 
 17587              		.align	2
 17588              	.LC259:
 17589 1b68 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 17589      6F6E7320 
 17589      7468726F 
 17589      75676820 
 17589      454D4720 
 17590 1b8e 0000     		.align	2
 17591              	.LC260:
 17592 1b90 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17592      20706F73 
 17592      6974696F 
 17592      6E206F63 
 17592      63757272 
 17593 1baf 00       		.align	2
 17594              	.LC261:
 17595 1bb0 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17595      6520746F 
 17595      74616C20 
 17595      64697370 
 17595      6C616365 
 17596 1bd6 0000     		.align	2
 17597              	.LC262:
 17598 1bd8 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17598      6C20706F 
 17598      77657220 
 17598      6F6E2074 
 17598      696D6520 
 17599 1bf7 00       		.align	2
 17600              	.LC263:
 17601 1bf8 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17601      6C207265 
 17601      73742070 
 17601      6F736974 
 17601      696F6E20 
 17602              		.section	.text.prepare_counter_info,"ax",%progbits
 17603              		.align	2
 17604              		.global	prepare_counter_info
 17605              		.thumb
 17606              		.thumb_func
 17607              		.type	prepare_counter_info, %function
 17608              	prepare_counter_info:
 17609              	.LFB73:
2385:..\src/command_processing.c **** 
2386:..\src/command_processing.c **** //==============================================================================
2387:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2388:..\src/command_processing.c **** //==============================================================================
2389:..\src/command_processing.c **** 
2390:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2391:..\src/command_processing.c **** {
 17610              		.loc 1 2391 0
 17611              		.cfi_startproc
 17612              		@ args = 0, pretend = 0, frame = 432
 17613              		@ frame_needed = 1, uses_anonymous_args = 0
 17614 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 392


 17615              		.cfi_def_cfa_offset 20
 17616              		.cfi_offset 4, -20
 17617              		.cfi_offset 5, -16
 17618              		.cfi_offset 6, -12
 17619              		.cfi_offset 7, -8
 17620              		.cfi_offset 14, -4
 17621 0002 F1B0     		sub	sp, sp, #452
 17622              		.cfi_def_cfa_offset 472
 17623 0004 04AF     		add	r7, sp, #16
 17624              		.cfi_def_cfa 7, 456
 17625 0006 3B1D     		adds	r3, r7, #4
 17626 0008 1860     		str	r0, [r3]
2392:..\src/command_processing.c ****     char str[100];  
2393:..\src/command_processing.c ****     int i;
2394:..\src/command_processing.c ****     int step;
2395:..\src/command_processing.c **** 
2396:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17627              		.loc 1 2396 0
 17628 000a 964B     		ldr	r3, .L693
 17629 000c C7F8A831 		str	r3, [r7, #424]
2397:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 17630              		.loc 1 2397 0
 17631 0010 D7F8A831 		ldr	r3, [r7, #424]
 17632 0014 B033     		adds	r3, r3, #176
 17633 0016 C7F8A431 		str	r3, [r7, #420]
2398:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 17634              		.loc 1 2398 0
 17635 001a D7F8A431 		ldr	r3, [r7, #420]
 17636 001e 93F86030 		ldrb	r3, [r3, #96]
 17637 0022 87F8A331 		strb	r3, [r7, #419]
2399:..\src/command_processing.c ****     
2400:..\src/command_processing.c ****     strcpy(info_string, "");
 17638              		.loc 1 2400 0
 17639 0026 3B1D     		adds	r3, r7, #4
 17640 0028 1B68     		ldr	r3, [r3]
 17641 002a 0022     		movs	r2, #0
 17642 002c 1A70     		strb	r2, [r3]
2401:..\src/command_processing.c ****     
2402:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17643              		.loc 1 2402 0
 17644 002e 3B1D     		adds	r3, r7, #4
 17645 0030 1868     		ldr	r0, [r3]
 17646 0032 FFF7FEFF 		bl	strlen
 17647 0036 0346     		mov	r3, r0
 17648 0038 1A46     		mov	r2, r3
 17649 003a 3B1D     		adds	r3, r7, #4
 17650 003c 1B68     		ldr	r3, [r3]
 17651 003e 1344     		add	r3, r3, r2
 17652 0040 894A     		ldr	r2, .L693+4
 17653 0042 1D46     		mov	r5, r3
 17654 0044 1446     		mov	r4, r2
 17655 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17656 0048 2860     		str	r0, [r5]	@ unaligned
 17657 004a 6960     		str	r1, [r5, #4]	@ unaligned
 17658 004c AA60     		str	r2, [r5, #8]	@ unaligned
 17659 004e EB60     		str	r3, [r5, #12]	@ unaligned
 17660 0050 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 393


 17661 0052 2861     		str	r0, [r5, #16]	@ unaligned
 17662 0054 2379     		ldrb	r3, [r4, #4]
 17663 0056 2B75     		strb	r3, [r5, #20]
2403:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17664              		.loc 1 2403 0
 17665 0058 3B1D     		adds	r3, r7, #4
 17666 005a 1868     		ldr	r0, [r3]
 17667 005c FFF7FEFF 		bl	strlen
 17668 0060 0346     		mov	r3, r0
 17669 0062 1A46     		mov	r2, r3
 17670 0064 3B1D     		adds	r3, r7, #4
 17671 0066 1B68     		ldr	r3, [r3]
 17672 0068 1344     		add	r3, r3, r2
 17673 006a 804A     		ldr	r2, .L693+8
 17674 006c 1188     		ldrh	r1, [r2]	@ unaligned
 17675 006e 9278     		ldrb	r2, [r2, #2]
 17676 0070 1980     		strh	r1, [r3]	@ unaligned
 17677 0072 9A70     		strb	r2, [r3, #2]
2404:..\src/command_processing.c ****     
2405:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17678              		.loc 1 2405 0
 17679 0074 D7F8A831 		ldr	r3, [r7, #424]
 17680 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17681 007c 1A46     		mov	r2, r3
 17682 007e D7F8A831 		ldr	r3, [r7, #424]
 17683 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17684 0086 1946     		mov	r1, r3
 17685 0088 D7F8A831 		ldr	r3, [r7, #424]
 17686 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17687 0090 07F59C70 		add	r0, r7, #312
 17688 0094 0093     		str	r3, [sp]
 17689 0096 0B46     		mov	r3, r1
 17690 0098 7549     		ldr	r1, .L693+12
 17691 009a FFF7FEFF 		bl	sprintf
2406:..\src/command_processing.c ****     strcat(info_string, str);
 17692              		.loc 1 2406 0
 17693 009e 07F59C72 		add	r2, r7, #312
 17694 00a2 3B1D     		adds	r3, r7, #4
 17695 00a4 1146     		mov	r1, r2
 17696 00a6 1868     		ldr	r0, [r3]
 17697 00a8 FFF7FEFF 		bl	strcat
2407:..\src/command_processing.c ****     
2408:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17698              		.loc 1 2408 0
 17699 00ac D7F8A831 		ldr	r3, [r7, #424]
 17700 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17701 00b4 1A46     		mov	r2, r3
 17702 00b6 D7F8A831 		ldr	r3, [r7, #424]
 17703 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17704 00be 1946     		mov	r1, r3
 17705 00c0 D7F8A831 		ldr	r3, [r7, #424]
 17706 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17707 00c8 07F59C70 		add	r0, r7, #312
 17708 00cc 0093     		str	r3, [sp]
 17709 00ce 0B46     		mov	r3, r1
 17710 00d0 6849     		ldr	r1, .L693+16
 17711 00d2 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 394


2409:..\src/command_processing.c ****     strcat(info_string, str);
 17712              		.loc 1 2409 0
 17713 00d6 07F59C72 		add	r2, r7, #312
 17714 00da 3B1D     		adds	r3, r7, #4
 17715 00dc 1146     		mov	r1, r2
 17716 00de 1868     		ldr	r0, [r3]
 17717 00e0 FFF7FEFF 		bl	strcat
2410:..\src/command_processing.c ****             
2411:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17718              		.loc 1 2411 0
 17719 00e4 D7F8A831 		ldr	r3, [r7, #424]
 17720 00e8 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17721 00ec 1D46     		mov	r5, r3
 17722 00ee D7F8A831 		ldr	r3, [r7, #424]
 17723 00f2 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17724 00f6 1E46     		mov	r6, r3
 17725 00f8 D7F8A831 		ldr	r3, [r7, #424]
 17726 00fc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 17727 0100 1A46     		mov	r2, r3
 17728 0102 D7F8A831 		ldr	r3, [r7, #424]
 17729 0106 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17730 010a 1946     		mov	r1, r3
 17731 010c D7F8A831 		ldr	r3, [r7, #424]
 17732 0110 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17733 0114 1C46     		mov	r4, r3
 17734 0116 D7F8A831 		ldr	r3, [r7, #424]
 17735 011a 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17736 011e 07F59C70 		add	r0, r7, #312
 17737 0122 0393     		str	r3, [sp, #12]
 17738 0124 0294     		str	r4, [sp, #8]
 17739 0126 0191     		str	r1, [sp, #4]
 17740 0128 0092     		str	r2, [sp]
 17741 012a 3346     		mov	r3, r6
 17742 012c 2A46     		mov	r2, r5
 17743 012e 5249     		ldr	r1, .L693+20
 17744 0130 FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****     strcat(info_string, str);
 17745              		.loc 1 2412 0
 17746 0134 07F59C72 		add	r2, r7, #312
 17747 0138 3B1D     		adds	r3, r7, #4
 17748 013a 1146     		mov	r1, r2
 17749 013c 1868     		ldr	r0, [r3]
 17750 013e FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****     
2414:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17751              		.loc 1 2414 0
 17752 0142 07F59C73 		add	r3, r7, #312
 17753 0146 4D4A     		ldr	r2, .L693+24
 17754 0148 1C46     		mov	r4, r3
 17755 014a 1546     		mov	r5, r2
 17756 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17757 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17758 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17759 0154 07C4     		stmia	r4!, {r0, r1, r2}
 17760 0156 2380     		strh	r3, [r4]	@ movhi
 17761 0158 0234     		adds	r4, r4, #2
 17762 015a 1B0C     		lsrs	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 395


 17763 015c 2370     		strb	r3, [r4]
2415:..\src/command_processing.c ****     strcat(info_string, str);
 17764              		.loc 1 2415 0
 17765 015e 07F59C72 		add	r2, r7, #312
 17766 0162 3B1D     		adds	r3, r7, #4
 17767 0164 1146     		mov	r1, r2
 17768 0166 1868     		ldr	r0, [r3]
 17769 0168 FFF7FEFF 		bl	strcat
2416:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17770              		.loc 1 2416 0
 17771 016c D7F8A431 		ldr	r3, [r7, #420]
 17772 0170 996B     		ldr	r1, [r3, #56]
 17773 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 17774 0176 D7F8A801 		ldr	r0, [r7, #424]
 17775 017a 1346     		mov	r3, r2
 17776 017c 5B00     		lsls	r3, r3, #1
 17777 017e 1344     		add	r3, r3, r2
 17778 0180 1B01     		lsls	r3, r3, #4
 17779 0182 0344     		add	r3, r3, r0
 17780 0184 03F29513 		addw	r3, r3, #405
 17781 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17782 018a 41FA03F3 		asr	r3, r1, r3
 17783 018e 3C4A     		ldr	r2, .L693+28
 17784 0190 82FB0312 		smull	r1, r2, r2, r3
 17785 0194 9210     		asrs	r2, r2, #2
 17786 0196 DB17     		asrs	r3, r3, #31
 17787 0198 D31A     		subs	r3, r2, r3
 17788 019a C7F89C31 		str	r3, [r7, #412]
2417:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17789              		.loc 1 2417 0
 17790 019e 0123     		movs	r3, #1
 17791 01a0 C7F8AC31 		str	r3, [r7, #428]
 17792 01a4 2BE0     		b	.L688
 17793              	.L689:
2418:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17794              		.loc 1 2418 0 discriminator 3
 17795 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 17796 01aa 013B     		subs	r3, r3, #1
 17797 01ac D7F89C21 		ldr	r2, [r7, #412]
 17798 01b0 02FB03F3 		mul	r3, r2, r3
 17799 01b4 5C1C     		adds	r4, r3, #1
 17800 01b6 D7F89C31 		ldr	r3, [r7, #412]
 17801 01ba D7F8AC21 		ldr	r2, [r7, #428]
 17802 01be 02FB03F3 		mul	r3, r2, r3
 17803 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 17804 01c6 511E     		subs	r1, r2, #1
 17805 01c8 D7F8A821 		ldr	r2, [r7, #424]
 17806 01cc 0631     		adds	r1, r1, #6
 17807 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17808 01d2 07F59C70 		add	r0, r7, #312
 17809 01d6 0192     		str	r2, [sp, #4]
 17810 01d8 0093     		str	r3, [sp]
 17811 01da 2346     		mov	r3, r4
 17812 01dc D7F8AC21 		ldr	r2, [r7, #428]
 17813 01e0 2849     		ldr	r1, .L693+32
 17814 01e2 FFF7FEFF 		bl	sprintf
2419:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 396


 17815              		.loc 1 2419 0 discriminator 3
 17816 01e6 07F59C72 		add	r2, r7, #312
 17817 01ea 3B1D     		adds	r3, r7, #4
 17818 01ec 1146     		mov	r1, r2
 17819 01ee 1868     		ldr	r0, [r3]
 17820 01f0 FFF7FEFF 		bl	strcat
2417:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17821              		.loc 1 2417 0 discriminator 3
 17822 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 17823 01f8 0133     		adds	r3, r3, #1
 17824 01fa C7F8AC31 		str	r3, [r7, #428]
 17825              	.L688:
2417:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17826              		.loc 1 2417 0 is_stmt 0 discriminator 1
 17827 01fe D7F8AC31 		ldr	r3, [r7, #428]
 17828 0202 0A2B     		cmp	r3, #10
 17829 0204 CFDD     		ble	.L689
2420:..\src/command_processing.c ****     }
2421:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17830              		.loc 1 2421 0 is_stmt 1
 17831 0206 3B1D     		adds	r3, r7, #4
 17832 0208 1868     		ldr	r0, [r3]
 17833 020a FFF7FEFF 		bl	strlen
 17834 020e 0346     		mov	r3, r0
 17835 0210 1A46     		mov	r2, r3
 17836 0212 3B1D     		adds	r3, r7, #4
 17837 0214 1B68     		ldr	r3, [r3]
 17838 0216 1344     		add	r3, r3, r2
 17839 0218 144A     		ldr	r2, .L693+8
 17840 021a 1188     		ldrh	r1, [r2]	@ unaligned
 17841 021c 9278     		ldrb	r2, [r2, #2]
 17842 021e 1980     		strh	r1, [r3]	@ unaligned
 17843 0220 9A70     		strb	r2, [r3, #2]
2422:..\src/command_processing.c ****     
2423:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17844              		.loc 1 2423 0
 17845 0222 07F59C73 		add	r3, r7, #312
 17846 0226 184A     		ldr	r2, .L693+36
 17847 0228 1C46     		mov	r4, r3
 17848 022a 1546     		mov	r5, r2
 17849 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17850 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17851 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 17852 0234 03C4     		stmia	r4!, {r0, r1}
 17853 0236 2280     		strh	r2, [r4]	@ movhi
2424:..\src/command_processing.c ****     strcat(info_string, str);
 17854              		.loc 1 2424 0
 17855 0238 07F59C72 		add	r2, r7, #312
 17856 023c 3B1D     		adds	r3, r7, #4
 17857 023e 1146     		mov	r1, r2
 17858 0240 1868     		ldr	r0, [r3]
 17859 0242 FFF7FEFF 		bl	strcat
2425:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17860              		.loc 1 2425 0
 17861 0246 D7F8A431 		ldr	r3, [r7, #420]
 17862 024a B3F95C30 		ldrsh	r3, [r3, #92]
 17863 024e 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 397


 17864 0250 00DA     		bge	.L690
 17865 0252 0333     		adds	r3, r3, #3
 17866              	.L690:
 17867 0254 9B10     		asrs	r3, r3, #2
 17868 0256 1BB2     		sxth	r3, r3
 17869 0258 C7F89C31 		str	r3, [r7, #412]
2426:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17870              		.loc 1 2426 0
 17871 025c 0123     		movs	r3, #1
 17872 025e C7F8AC31 		str	r3, [r7, #428]
 17873 0262 3EE0     		b	.L691
 17874              	.L694:
 17875              		.align	2
 17876              	.L693:
 17877 0264 00000000 		.word	g_mem
 17878 0268 441A0000 		.word	.LC251
 17879 026c 58110000 		.word	.LC152
 17880 0270 5C1A0000 		.word	.LC252
 17881 0274 881A0000 		.word	.LC253
 17882 0278 C01A0000 		.word	.LC254
 17883 027c F81A0000 		.word	.LC255
 17884 0280 67666666 		.word	1717986919
 17885 0284 181B0000 		.word	.LC256
 17886 0288 301B0000 		.word	.LC257
 17887              	.L692:
2427:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17888              		.loc 1 2427 0 discriminator 3
 17889 028c D7F8AC31 		ldr	r3, [r7, #428]
 17890 0290 013B     		subs	r3, r3, #1
 17891 0292 D7F89C21 		ldr	r2, [r7, #412]
 17892 0296 02FB03F4 		mul	r4, r2, r3
 17893 029a D7F89C31 		ldr	r3, [r7, #412]
 17894 029e D7F8AC21 		ldr	r2, [r7, #428]
 17895 02a2 02FB03F3 		mul	r3, r2, r3
 17896 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 17897 02aa 511E     		subs	r1, r2, #1
 17898 02ac D7F8A821 		ldr	r2, [r7, #424]
 17899 02b0 1031     		adds	r1, r1, #16
 17900 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17901 02b6 07F59C70 		add	r0, r7, #312
 17902 02ba 0192     		str	r2, [sp, #4]
 17903 02bc 0093     		str	r3, [sp]
 17904 02be 2346     		mov	r3, r4
 17905 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 17906 02c4 6B49     		ldr	r1, .L695
 17907 02c6 FFF7FEFF 		bl	sprintf
2428:..\src/command_processing.c ****         strcat(info_string, str);
 17908              		.loc 1 2428 0 discriminator 3
 17909 02ca 07F59C72 		add	r2, r7, #312
 17910 02ce 3B1D     		adds	r3, r7, #4
 17911 02d0 1146     		mov	r1, r2
 17912 02d2 1868     		ldr	r0, [r3]
 17913 02d4 FFF7FEFF 		bl	strcat
2426:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17914              		.loc 1 2426 0 discriminator 3
 17915 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 17916 02dc 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 398


 17917 02de C7F8AC31 		str	r3, [r7, #428]
 17918              	.L691:
2426:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17919              		.loc 1 2426 0 is_stmt 0 discriminator 1
 17920 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 17921 02e6 042B     		cmp	r3, #4
 17922 02e8 D0DD     		ble	.L692
2429:..\src/command_processing.c ****     }
2430:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17923              		.loc 1 2430 0 is_stmt 1
 17924 02ea 3B1D     		adds	r3, r7, #4
 17925 02ec 1868     		ldr	r0, [r3]
 17926 02ee FFF7FEFF 		bl	strlen
 17927 02f2 0346     		mov	r3, r0
 17928 02f4 1A46     		mov	r2, r3
 17929 02f6 3B1D     		adds	r3, r7, #4
 17930 02f8 1B68     		ldr	r3, [r3]
 17931 02fa 1344     		add	r3, r3, r2
 17932 02fc 5E4A     		ldr	r2, .L695+4
 17933 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 17934 0300 9278     		ldrb	r2, [r2, #2]
 17935 0302 1980     		strh	r1, [r3]	@ unaligned
 17936 0304 9A70     		strb	r2, [r3, #2]
2431:..\src/command_processing.c ****             
2432:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
 17937              		.loc 1 2432 0
 17938 0306 D7F8A831 		ldr	r3, [r7, #424]
 17939 030a DA6E     		ldr	r2, [r3, #108]
 17940 030c D7F8A831 		ldr	r3, [r7, #424]
 17941 0310 1B6F     		ldr	r3, [r3, #112]
 17942 0312 07F59C70 		add	r0, r7, #312
 17943 0316 5949     		ldr	r1, .L695+8
 17944 0318 FFF7FEFF 		bl	sprintf
2433:..\src/command_processing.c ****     strcat(info_string, str);
 17945              		.loc 1 2433 0
 17946 031c 07F59C72 		add	r2, r7, #312
 17947 0320 3B1D     		adds	r3, r7, #4
 17948 0322 1146     		mov	r1, r2
 17949 0324 1868     		ldr	r0, [r3]
 17950 0326 FFF7FEFF 		bl	strcat
2434:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17951              		.loc 1 2434 0
 17952 032a 3B1D     		adds	r3, r7, #4
 17953 032c 1868     		ldr	r0, [r3]
 17954 032e FFF7FEFF 		bl	strlen
 17955 0332 0346     		mov	r3, r0
 17956 0334 1A46     		mov	r2, r3
 17957 0336 3B1D     		adds	r3, r7, #4
 17958 0338 1B68     		ldr	r3, [r3]
 17959 033a 1344     		add	r3, r3, r2
 17960 033c 4E4A     		ldr	r2, .L695+4
 17961 033e 1188     		ldrh	r1, [r2]	@ unaligned
 17962 0340 9278     		ldrb	r2, [r2, #2]
 17963 0342 1980     		strh	r1, [r3]	@ unaligned
 17964 0344 9A70     		strb	r2, [r3, #2]
2435:..\src/command_processing.c ****     
2436:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 399


 17965              		.loc 1 2436 0
 17966 0346 D7F8A831 		ldr	r3, [r7, #424]
 17967 034a 1A6D     		ldr	r2, [r3, #80]
 17968 034c 07F59C73 		add	r3, r7, #312
 17969 0350 4B49     		ldr	r1, .L695+12
 17970 0352 1846     		mov	r0, r3
 17971 0354 FFF7FEFF 		bl	sprintf
2437:..\src/command_processing.c ****     strcat(info_string, str);
 17972              		.loc 1 2437 0
 17973 0358 07F59C72 		add	r2, r7, #312
 17974 035c 3B1D     		adds	r3, r7, #4
 17975 035e 1146     		mov	r1, r2
 17976 0360 1868     		ldr	r0, [r3]
 17977 0362 FFF7FEFF 		bl	strcat
2438:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17978              		.loc 1 2438 0
 17979 0366 3B1D     		adds	r3, r7, #4
 17980 0368 1868     		ldr	r0, [r3]
 17981 036a FFF7FEFF 		bl	strlen
 17982 036e 0346     		mov	r3, r0
 17983 0370 1A46     		mov	r2, r3
 17984 0372 3B1D     		adds	r3, r7, #4
 17985 0374 1B68     		ldr	r3, [r3]
 17986 0376 1344     		add	r3, r3, r2
 17987 0378 3F4A     		ldr	r2, .L695+4
 17988 037a 1188     		ldrh	r1, [r2]	@ unaligned
 17989 037c 9278     		ldrb	r2, [r2, #2]
 17990 037e 1980     		strh	r1, [r3]	@ unaligned
 17991 0380 9A70     		strb	r2, [r3, #2]
2439:..\src/command_processing.c ****     
2440:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 17992              		.loc 1 2440 0
 17993 0382 D7F8A831 		ldr	r3, [r7, #424]
 17994 0386 5A6D     		ldr	r2, [r3, #84]
 17995 0388 07F59C73 		add	r3, r7, #312
 17996 038c 3D49     		ldr	r1, .L695+16
 17997 038e 1846     		mov	r0, r3
 17998 0390 FFF7FEFF 		bl	sprintf
2441:..\src/command_processing.c ****     strcat(info_string, str);
 17999              		.loc 1 2441 0
 18000 0394 07F59C72 		add	r2, r7, #312
 18001 0398 3B1D     		adds	r3, r7, #4
 18002 039a 1146     		mov	r1, r2
 18003 039c 1868     		ldr	r0, [r3]
 18004 039e FFF7FEFF 		bl	strcat
2442:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18005              		.loc 1 2442 0
 18006 03a2 3B1D     		adds	r3, r7, #4
 18007 03a4 1868     		ldr	r0, [r3]
 18008 03a6 FFF7FEFF 		bl	strlen
 18009 03aa 0346     		mov	r3, r0
 18010 03ac 1A46     		mov	r2, r3
 18011 03ae 3B1D     		adds	r3, r7, #4
 18012 03b0 1B68     		ldr	r3, [r3]
 18013 03b2 1344     		add	r3, r3, r2
 18014 03b4 304A     		ldr	r2, .L695+4
 18015 03b6 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 400


 18016 03b8 9278     		ldrb	r2, [r2, #2]
 18017 03ba 1980     		strh	r1, [r3]	@ unaligned
 18018 03bc 9A70     		strb	r2, [r3, #2]
2443:..\src/command_processing.c ****     
2444:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 18019              		.loc 1 2444 0
 18020 03be D7F8A831 		ldr	r3, [r7, #424]
 18021 03c2 9A6D     		ldr	r2, [r3, #88]
 18022 03c4 07F59C73 		add	r3, r7, #312
 18023 03c8 2F49     		ldr	r1, .L695+20
 18024 03ca 1846     		mov	r0, r3
 18025 03cc FFF7FEFF 		bl	sprintf
2445:..\src/command_processing.c ****     strcat(info_string, str);
 18026              		.loc 1 2445 0
 18027 03d0 07F59C72 		add	r2, r7, #312
 18028 03d4 3B1D     		adds	r3, r7, #4
 18029 03d6 1146     		mov	r1, r2
 18030 03d8 1868     		ldr	r0, [r3]
 18031 03da FFF7FEFF 		bl	strcat
2446:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18032              		.loc 1 2446 0
 18033 03de 3B1D     		adds	r3, r7, #4
 18034 03e0 1868     		ldr	r0, [r3]
 18035 03e2 FFF7FEFF 		bl	strlen
 18036 03e6 0346     		mov	r3, r0
 18037 03e8 1A46     		mov	r2, r3
 18038 03ea 3B1D     		adds	r3, r7, #4
 18039 03ec 1B68     		ldr	r3, [r3]
 18040 03ee 1344     		add	r3, r3, r2
 18041 03f0 214A     		ldr	r2, .L695+4
 18042 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 18043 03f4 9278     		ldrb	r2, [r2, #2]
 18044 03f6 1980     		strh	r1, [r3]	@ unaligned
 18045 03f8 9A70     		strb	r2, [r3, #2]
2447:..\src/command_processing.c ****     
2448:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18046              		.loc 1 2448 0
 18047 03fa D7F8A831 		ldr	r3, [r7, #424]
 18048 03fe DA6D     		ldr	r2, [r3, #92]
 18049 0400 07F59C73 		add	r3, r7, #312
 18050 0404 2149     		ldr	r1, .L695+24
 18051 0406 1846     		mov	r0, r3
 18052 0408 FFF7FEFF 		bl	sprintf
2449:..\src/command_processing.c ****     strcat(info_string, str);
 18053              		.loc 1 2449 0
 18054 040c 07F59C72 		add	r2, r7, #312
 18055 0410 3B1D     		adds	r3, r7, #4
 18056 0412 1146     		mov	r1, r2
 18057 0414 1868     		ldr	r0, [r3]
 18058 0416 FFF7FEFF 		bl	strcat
2450:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18059              		.loc 1 2450 0
 18060 041a 3B1D     		adds	r3, r7, #4
 18061 041c 1868     		ldr	r0, [r3]
 18062 041e FFF7FEFF 		bl	strlen
 18063 0422 0346     		mov	r3, r0
 18064 0424 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 401


 18065 0426 3B1D     		adds	r3, r7, #4
 18066 0428 1B68     		ldr	r3, [r3]
 18067 042a 1344     		add	r3, r3, r2
 18068 042c 124A     		ldr	r2, .L695+4
 18069 042e 1188     		ldrh	r1, [r2]	@ unaligned
 18070 0430 9278     		ldrb	r2, [r2, #2]
 18071 0432 1980     		strh	r1, [r3]	@ unaligned
 18072 0434 9A70     		strb	r2, [r3, #2]
2451:..\src/command_processing.c ****     
2452:..\src/command_processing.c ****     
2453:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2454:..\src/command_processing.c ****     char CYDATA R01_str[300];
2455:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 18073              		.loc 1 2455 0
 18074 0436 07F10C03 		add	r3, r7, #12
 18075 043a 1846     		mov	r0, r3
 18076 043c FFF7FEFF 		bl	prepare_R01_info
2456:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18077              		.loc 1 2456 0
 18078 0440 3B1D     		adds	r3, r7, #4
 18079 0442 1868     		ldr	r0, [r3]
 18080 0444 FFF7FEFF 		bl	strlen
 18081 0448 0346     		mov	r3, r0
 18082 044a 1A46     		mov	r2, r3
 18083 044c 3B1D     		adds	r3, r7, #4
 18084 044e 1B68     		ldr	r3, [r3]
 18085 0450 1344     		add	r3, r3, r2
 18086 0452 094A     		ldr	r2, .L695+4
 18087 0454 1188     		ldrh	r1, [r2]	@ unaligned
 18088 0456 9278     		ldrb	r2, [r2, #2]
 18089 0458 1980     		strh	r1, [r3]	@ unaligned
 18090 045a 9A70     		strb	r2, [r3, #2]
2457:..\src/command_processing.c ****     strcat(info_string, R01_str);
 18091              		.loc 1 2457 0
 18092 045c 07F10C02 		add	r2, r7, #12
 18093 0460 3B1D     		adds	r3, r7, #4
 18094 0462 1146     		mov	r1, r2
 18095 0464 1868     		ldr	r0, [r3]
 18096 0466 FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** }
 18097              		.loc 1 2458 0
 18098 046a 00BF     		nop
 18099 046c 07F5DA77 		add	r7, r7, #436
 18100              		.cfi_def_cfa_offset 20
 18101 0470 BD46     		mov	sp, r7
 18102              		.cfi_def_cfa_register 13
 18103              		@ sp needed
 18104 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 18105              	.L696:
 18106              		.align	2
 18107              	.L695:
 18108 0474 4C1B0000 		.word	.LC258
 18109 0478 58110000 		.word	.LC152
 18110 047c 681B0000 		.word	.LC259
 18111 0480 901B0000 		.word	.LC260
 18112 0484 B01B0000 		.word	.LC261
 18113 0488 D81B0000 		.word	.LC262
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 402


 18114 048c F81B0000 		.word	.LC263
 18115              		.cfi_endproc
 18116              	.LFE73:
 18117              		.size	prepare_counter_info, .-prepare_counter_info
 18118              		.section	.rodata
 18119              		.align	2
 18120              	.LC264:
 18121 1c1c 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 18121      50524F4A 
 18121      45435420 
 18121      53544154 
 18121      49535449 
 18122 1c35 000000   		.align	2
 18123              	.LC265:
 18124 1c38 506F7765 		.ascii	"Power cycles: %lu\000"
 18124      72206379 
 18124      636C6573 
 18124      3A20256C 
 18124      7500
 18125 1c4a 0000     		.align	2
 18126              	.LC266:
 18127 1c4c 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18127      61637469 
 18127      76617469 
 18127      6F6E7320 
 18127      636F756E 
 18128 1c6e 0000     		.align	2
 18129              	.LC267:
 18130 1c70 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 18130      6572206F 
 18130      66206D6F 
 18130      74696F6E 
 18130      73202863 
 18131 1c99 000000   		.align	2
 18132              	.LC268:
 18133 1c9c 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 18133      73736976 
 18133      65207369 
 18133      676E616C 
 18133      20616374 
 18134 1ccd 000000   		.align	2
 18135              	.LC269:
 18136 1cd0 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 18136      6C207275 
 18136      6E74696D 
 18136      65202873 
 18136      6563293A 
 18137              		.global	__aeabi_ui2f
 18138 1ce9 000000   		.align	2
 18139              	.LC270:
 18140 1cec 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 18140      61676520 
 18140      64757261 
 18140      74696F6E 
 18140      206F6620 
 18141 1d1f 6600     		.ascii	"f\000"
 18142 1d21 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 403


 18143              	.LC271:
 18144 1d24 46726571 		.ascii	"Frequency of motions: %.4f\000"
 18144      75656E63 
 18144      79206F66 
 18144      206D6F74 
 18144      696F6E73 
 18145              		.section	.text.prepare_R01_info,"ax",%progbits
 18146              		.align	2
 18147              		.global	prepare_R01_info
 18148              		.thumb
 18149              		.thumb_func
 18150              		.type	prepare_R01_info, %function
 18151              	prepare_R01_info:
 18152              	.LFB74:
2459:..\src/command_processing.c **** 
2460:..\src/command_processing.c **** //==============================================================================
2461:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2462:..\src/command_processing.c **** //==============================================================================
2463:..\src/command_processing.c **** 
2464:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2465:..\src/command_processing.c **** {
 18153              		.loc 1 2465 0
 18154              		.cfi_startproc
 18155              		@ args = 0, pretend = 0, frame = 168
 18156              		@ frame_needed = 1, uses_anonymous_args = 0
 18157 0000 B0B5     		push	{r4, r5, r7, lr}
 18158              		.cfi_def_cfa_offset 16
 18159              		.cfi_offset 4, -16
 18160              		.cfi_offset 5, -12
 18161              		.cfi_offset 7, -8
 18162              		.cfi_offset 14, -4
 18163 0002 AAB0     		sub	sp, sp, #168
 18164              		.cfi_def_cfa_offset 184
 18165 0004 00AF     		add	r7, sp, #0
 18166              		.cfi_def_cfa_register 7
 18167 0006 7860     		str	r0, [r7, #4]
2466:..\src/command_processing.c ****     char str[150];  
2467:..\src/command_processing.c **** 
2468:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18168              		.loc 1 2468 0
 18169 0008 8A4B     		ldr	r3, .L698
 18170 000a C7F8A430 		str	r3, [r7, #164]
2469:..\src/command_processing.c **** 
2470:..\src/command_processing.c ****     strcpy(info_string, "");
 18171              		.loc 1 2470 0
 18172 000e 7B68     		ldr	r3, [r7, #4]
 18173 0010 0022     		movs	r2, #0
 18174 0012 1A70     		strb	r2, [r3]
2471:..\src/command_processing.c ****     
2472:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 18175              		.loc 1 2472 0
 18176 0014 7868     		ldr	r0, [r7, #4]
 18177 0016 FFF7FEFF 		bl	strlen
 18178 001a 0346     		mov	r3, r0
 18179 001c 1A46     		mov	r2, r3
 18180 001e 7B68     		ldr	r3, [r7, #4]
 18181 0020 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 404


 18182 0022 854A     		ldr	r2, .L698+4
 18183 0024 1D46     		mov	r5, r3
 18184 0026 1446     		mov	r4, r2
 18185 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18186 002a 2860     		str	r0, [r5]	@ unaligned
 18187 002c 6960     		str	r1, [r5, #4]	@ unaligned
 18188 002e AA60     		str	r2, [r5, #8]	@ unaligned
 18189 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 18190 0032 03CC     		ldmia	r4!, {r0, r1}
 18191 0034 2861     		str	r0, [r5, #16]	@ unaligned
 18192 0036 6961     		str	r1, [r5, #20]	@ unaligned
 18193 0038 2378     		ldrb	r3, [r4]
 18194 003a 2B76     		strb	r3, [r5, #24]
2473:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18195              		.loc 1 2473 0
 18196 003c 7868     		ldr	r0, [r7, #4]
 18197 003e FFF7FEFF 		bl	strlen
 18198 0042 0346     		mov	r3, r0
 18199 0044 1A46     		mov	r2, r3
 18200 0046 7B68     		ldr	r3, [r7, #4]
 18201 0048 1344     		add	r3, r3, r2
 18202 004a 7C4A     		ldr	r2, .L698+8
 18203 004c 1188     		ldrh	r1, [r2]	@ unaligned
 18204 004e 9278     		ldrb	r2, [r2, #2]
 18205 0050 1980     		strh	r1, [r3]	@ unaligned
 18206 0052 9A70     		strb	r2, [r3, #2]
2474:..\src/command_processing.c ****     
2475:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 18207              		.loc 1 2475 0
 18208 0054 D7F8A430 		ldr	r3, [r7, #164]
 18209 0058 1A6E     		ldr	r2, [r3, #96]
 18210 005a 07F10C03 		add	r3, r7, #12
 18211 005e 7849     		ldr	r1, .L698+12
 18212 0060 1846     		mov	r0, r3
 18213 0062 FFF7FEFF 		bl	sprintf
2476:..\src/command_processing.c ****     strcat(info_string, str);
 18214              		.loc 1 2476 0
 18215 0066 07F10C03 		add	r3, r7, #12
 18216 006a 1946     		mov	r1, r3
 18217 006c 7868     		ldr	r0, [r7, #4]
 18218 006e FFF7FEFF 		bl	strcat
2477:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18219              		.loc 1 2477 0
 18220 0072 7868     		ldr	r0, [r7, #4]
 18221 0074 FFF7FEFF 		bl	strlen
 18222 0078 0346     		mov	r3, r0
 18223 007a 1A46     		mov	r2, r3
 18224 007c 7B68     		ldr	r3, [r7, #4]
 18225 007e 1344     		add	r3, r3, r2
 18226 0080 6E4A     		ldr	r2, .L698+8
 18227 0082 1188     		ldrh	r1, [r2]	@ unaligned
 18228 0084 9278     		ldrb	r2, [r2, #2]
 18229 0086 1980     		strh	r1, [r3]	@ unaligned
 18230 0088 9A70     		strb	r2, [r3, #2]
2478:..\src/command_processing.c ****     
2479:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 18231              		.loc 1 2479 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 405


 18232 008a D7F8A430 		ldr	r3, [r7, #164]
 18233 008e 1A69     		ldr	r2, [r3, #16]
 18234 0090 D7F8A430 		ldr	r3, [r7, #164]
 18235 0094 5B69     		ldr	r3, [r3, #20]
 18236 0096 07F10C00 		add	r0, r7, #12
 18237 009a 6A49     		ldr	r1, .L698+16
 18238 009c FFF7FEFF 		bl	sprintf
2480:..\src/command_processing.c ****     strcat(info_string, str);
 18239              		.loc 1 2480 0
 18240 00a0 07F10C03 		add	r3, r7, #12
 18241 00a4 1946     		mov	r1, r3
 18242 00a6 7868     		ldr	r0, [r7, #4]
 18243 00a8 FFF7FEFF 		bl	strcat
2481:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18244              		.loc 1 2481 0
 18245 00ac 7868     		ldr	r0, [r7, #4]
 18246 00ae FFF7FEFF 		bl	strlen
 18247 00b2 0346     		mov	r3, r0
 18248 00b4 1A46     		mov	r2, r3
 18249 00b6 7B68     		ldr	r3, [r7, #4]
 18250 00b8 1344     		add	r3, r3, r2
 18251 00ba 604A     		ldr	r2, .L698+8
 18252 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 18253 00be 9278     		ldrb	r2, [r2, #2]
 18254 00c0 1980     		strh	r1, [r3]	@ unaligned
 18255 00c2 9A70     		strb	r2, [r3, #2]
2482:..\src/command_processing.c ****     
2483:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 18256              		.loc 1 2483 0
 18257 00c4 D7F8A430 		ldr	r3, [r7, #164]
 18258 00c8 DA6E     		ldr	r2, [r3, #108]
 18259 00ca D7F8A430 		ldr	r3, [r7, #164]
 18260 00ce 1B6F     		ldr	r3, [r3, #112]
 18261 00d0 07F10C00 		add	r0, r7, #12
 18262 00d4 5C49     		ldr	r1, .L698+20
 18263 00d6 FFF7FEFF 		bl	sprintf
2484:..\src/command_processing.c ****     strcat(info_string, str);
 18264              		.loc 1 2484 0
 18265 00da 07F10C03 		add	r3, r7, #12
 18266 00de 1946     		mov	r1, r3
 18267 00e0 7868     		ldr	r0, [r7, #4]
 18268 00e2 FFF7FEFF 		bl	strcat
2485:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18269              		.loc 1 2485 0
 18270 00e6 7868     		ldr	r0, [r7, #4]
 18271 00e8 FFF7FEFF 		bl	strlen
 18272 00ec 0346     		mov	r3, r0
 18273 00ee 1A46     		mov	r2, r3
 18274 00f0 7B68     		ldr	r3, [r7, #4]
 18275 00f2 1344     		add	r3, r3, r2
 18276 00f4 514A     		ldr	r2, .L698+8
 18277 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 18278 00f8 9278     		ldrb	r2, [r2, #2]
 18279 00fa 1980     		strh	r1, [r3]	@ unaligned
 18280 00fc 9A70     		strb	r2, [r3, #2]
2486:..\src/command_processing.c ****     
2487:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 406


 18281              		.loc 1 2487 0
 18282 00fe D7F8A430 		ldr	r3, [r7, #164]
 18283 0102 5A6E     		ldr	r2, [r3, #100]
 18284 0104 D7F8A430 		ldr	r3, [r7, #164]
 18285 0108 9B6E     		ldr	r3, [r3, #104]
 18286 010a 07F10C00 		add	r0, r7, #12
 18287 010e 4F49     		ldr	r1, .L698+24
 18288 0110 FFF7FEFF 		bl	sprintf
2488:..\src/command_processing.c ****     strcat(info_string, str);
 18289              		.loc 1 2488 0
 18290 0114 07F10C03 		add	r3, r7, #12
 18291 0118 1946     		mov	r1, r3
 18292 011a 7868     		ldr	r0, [r7, #4]
 18293 011c FFF7FEFF 		bl	strcat
2489:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18294              		.loc 1 2489 0
 18295 0120 7868     		ldr	r0, [r7, #4]
 18296 0122 FFF7FEFF 		bl	strlen
 18297 0126 0346     		mov	r3, r0
 18298 0128 1A46     		mov	r2, r3
 18299 012a 7B68     		ldr	r3, [r7, #4]
 18300 012c 1344     		add	r3, r3, r2
 18301 012e 434A     		ldr	r2, .L698+8
 18302 0130 1188     		ldrh	r1, [r2]	@ unaligned
 18303 0132 9278     		ldrb	r2, [r2, #2]
 18304 0134 1980     		strh	r1, [r3]	@ unaligned
 18305 0136 9A70     		strb	r2, [r3, #2]
2490:..\src/command_processing.c ****     
2491:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 18306              		.loc 1 2491 0
 18307 0138 D7F8A430 		ldr	r3, [r7, #164]
 18308 013c 9A6D     		ldr	r2, [r3, #88]
 18309 013e 07F10C03 		add	r3, r7, #12
 18310 0142 4349     		ldr	r1, .L698+28
 18311 0144 1846     		mov	r0, r3
 18312 0146 FFF7FEFF 		bl	sprintf
2492:..\src/command_processing.c ****     strcat(info_string, str);
 18313              		.loc 1 2492 0
 18314 014a 07F10C03 		add	r3, r7, #12
 18315 014e 1946     		mov	r1, r3
 18316 0150 7868     		ldr	r0, [r7, #4]
 18317 0152 FFF7FEFF 		bl	strcat
2493:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18318              		.loc 1 2493 0
 18319 0156 7868     		ldr	r0, [r7, #4]
 18320 0158 FFF7FEFF 		bl	strlen
 18321 015c 0346     		mov	r3, r0
 18322 015e 1A46     		mov	r2, r3
 18323 0160 7B68     		ldr	r3, [r7, #4]
 18324 0162 1344     		add	r3, r3, r2
 18325 0164 354A     		ldr	r2, .L698+8
 18326 0166 1188     		ldrh	r1, [r2]	@ unaligned
 18327 0168 9278     		ldrb	r2, [r2, #2]
 18328 016a 1980     		strh	r1, [r3]	@ unaligned
 18329 016c 9A70     		strb	r2, [r3, #2]
2494:..\src/command_processing.c ****     
2495:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 407


 18330              		.loc 1 2495 0
 18331 016e D7F8A430 		ldr	r3, [r7, #164]
 18332 0172 9A6D     		ldr	r2, [r3, #88]
 18333 0174 D7F8A430 		ldr	r3, [r7, #164]
 18334 0178 1B6E     		ldr	r3, [r3, #96]
 18335 017a B2FBF3F3 		udiv	r3, r2, r3
 18336 017e 1846     		mov	r0, r3
 18337 0180 FFF7FEFF 		bl	__aeabi_ui2f
 18338 0184 0346     		mov	r3, r0
 18339 0186 1846     		mov	r0, r3
 18340 0188 FFF7FEFF 		bl	__aeabi_f2d
 18341 018c 0346     		mov	r3, r0
 18342 018e 0C46     		mov	r4, r1
 18343 0190 07F10C00 		add	r0, r7, #12
 18344 0194 1A46     		mov	r2, r3
 18345 0196 2346     		mov	r3, r4
 18346 0198 2E49     		ldr	r1, .L698+32
 18347 019a FFF7FEFF 		bl	sprintf
2496:..\src/command_processing.c ****     strcat(info_string, str);
 18348              		.loc 1 2496 0
 18349 019e 07F10C03 		add	r3, r7, #12
 18350 01a2 1946     		mov	r1, r3
 18351 01a4 7868     		ldr	r0, [r7, #4]
 18352 01a6 FFF7FEFF 		bl	strcat
2497:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18353              		.loc 1 2497 0
 18354 01aa 7868     		ldr	r0, [r7, #4]
 18355 01ac FFF7FEFF 		bl	strlen
 18356 01b0 0346     		mov	r3, r0
 18357 01b2 1A46     		mov	r2, r3
 18358 01b4 7B68     		ldr	r3, [r7, #4]
 18359 01b6 1344     		add	r3, r3, r2
 18360 01b8 204A     		ldr	r2, .L698+8
 18361 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 18362 01bc 9278     		ldrb	r2, [r2, #2]
 18363 01be 1980     		strh	r1, [r3]	@ unaligned
 18364 01c0 9A70     		strb	r2, [r3, #2]
2498:..\src/command_processing.c ****     
2499:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 18365              		.loc 1 2499 0
 18366 01c2 D7F8A430 		ldr	r3, [r7, #164]
 18367 01c6 1A69     		ldr	r2, [r3, #16]
 18368 01c8 D7F8A430 		ldr	r3, [r7, #164]
 18369 01cc 5B69     		ldr	r3, [r3, #20]
 18370 01ce 1344     		add	r3, r3, r2
 18371 01d0 1846     		mov	r0, r3
 18372 01d2 FFF7FEFF 		bl	__aeabi_ui2f
 18373 01d6 0446     		mov	r4, r0
 18374 01d8 D7F8A430 		ldr	r3, [r7, #164]
 18375 01dc 9B6D     		ldr	r3, [r3, #88]
 18376 01de 1846     		mov	r0, r3
 18377 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 18378 01e4 0346     		mov	r3, r0
 18379 01e6 1946     		mov	r1, r3
 18380 01e8 2046     		mov	r0, r4
 18381 01ea FFF7FEFF 		bl	__aeabi_fdiv
 18382 01ee 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 408


 18383 01f0 1846     		mov	r0, r3
 18384 01f2 FFF7FEFF 		bl	__aeabi_f2d
 18385 01f6 0346     		mov	r3, r0
 18386 01f8 0C46     		mov	r4, r1
 18387 01fa 07F10C00 		add	r0, r7, #12
 18388 01fe 1A46     		mov	r2, r3
 18389 0200 2346     		mov	r3, r4
 18390 0202 1549     		ldr	r1, .L698+36
 18391 0204 FFF7FEFF 		bl	sprintf
2500:..\src/command_processing.c ****     strcat(info_string, str);
 18392              		.loc 1 2500 0
 18393 0208 07F10C03 		add	r3, r7, #12
 18394 020c 1946     		mov	r1, r3
 18395 020e 7868     		ldr	r0, [r7, #4]
 18396 0210 FFF7FEFF 		bl	strcat
2501:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18397              		.loc 1 2501 0
 18398 0214 7868     		ldr	r0, [r7, #4]
 18399 0216 FFF7FEFF 		bl	strlen
 18400 021a 0346     		mov	r3, r0
 18401 021c 1A46     		mov	r2, r3
 18402 021e 7B68     		ldr	r3, [r7, #4]
 18403 0220 1344     		add	r3, r3, r2
 18404 0222 064A     		ldr	r2, .L698+8
 18405 0224 1188     		ldrh	r1, [r2]	@ unaligned
 18406 0226 9278     		ldrb	r2, [r2, #2]
 18407 0228 1980     		strh	r1, [r3]	@ unaligned
 18408 022a 9A70     		strb	r2, [r3, #2]
2502:..\src/command_processing.c **** 
2503:..\src/command_processing.c **** }
 18409              		.loc 1 2503 0
 18410 022c 00BF     		nop
 18411 022e A837     		adds	r7, r7, #168
 18412              		.cfi_def_cfa_offset 16
 18413 0230 BD46     		mov	sp, r7
 18414              		.cfi_def_cfa_register 13
 18415              		@ sp needed
 18416 0232 B0BD     		pop	{r4, r5, r7, pc}
 18417              	.L699:
 18418              		.align	2
 18419              	.L698:
 18420 0234 00000000 		.word	g_mem
 18421 0238 1C1C0000 		.word	.LC264
 18422 023c 58110000 		.word	.LC152
 18423 0240 381C0000 		.word	.LC265
 18424 0244 4C1C0000 		.word	.LC266
 18425 0248 701C0000 		.word	.LC267
 18426 024c 9C1C0000 		.word	.LC268
 18427 0250 D01C0000 		.word	.LC269
 18428 0254 EC1C0000 		.word	.LC270
 18429 0258 241D0000 		.word	.LC271
 18430              		.cfi_endproc
 18431              	.LFE74:
 18432              		.size	prepare_R01_info, .-prepare_R01_info
 18433              		.section	.rodata
 18434 1d3f 00       		.align	2
 18435              	.LC272:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 409


 18436 1d40 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18436      77617265 
 18436      20766572 
 18436      73696F6E 
 18436      3A202573 
 18437 1d57 00       		.align	2
 18438              	.LC273:
 18439 1d58 506F7369 		.ascii	"Position PID: \000"
 18439      74696F6E 
 18439      20504944 
 18439      3A2000
 18440 1d67 00       		.align	2
 18441              	.LC274:
 18442 1d68 43757272 		.ascii	"Current PID: \000"
 18442      656E7420 
 18442      5049443A 
 18442      2000
 18443 1d76 0000     		.align	2
 18444              	.LC275:
 18445 1d78 5265736F 		.ascii	"Resolutions: \000"
 18445      6C757469 
 18445      6F6E733A 
 18445      2000
 18446 1d86 0000     		.align	2
 18447              	.LC276:
 18448 1d88 4F666673 		.ascii	"Offsets: \000"
 18448      6574733A 
 18448      2000
 18449 1d92 0000     		.align	2
 18450              	.LC277:
 18451 1d94 4D756C74 		.ascii	"Multipliers: \000"
 18451      69706C69 
 18451      6572733A 
 18451      2000
 18452 1da2 0000     		.align	2
 18453              	.LC278:
 18454 1da4 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18454      656E7420 
 18454      6C6F6F6B 
 18454      75702074 
 18454      61626C65 
 18455 1dd7 662C2025 		.ascii	"f, %f\015\012\000"
 18455      660D0A00 
 18456 1ddf 00       		.align	2
 18457              	.LC279:
 18458 1de0 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18458      74696F6E 
 18458      206C696D 
 18458      69742061 
 18458      63746976 
 18459              		.align	2
 18460              	.LC280:
 18461 1dfc 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18461      74696F6E 
 18461      206C696D 
 18461      6974733A 
 18461      20696E66 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 410


 18462              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18463              		.align	2
 18464              		.global	prepare_SD_param_info
 18465              		.thumb
 18466              		.thumb_func
 18467              		.type	prepare_SD_param_info, %function
 18468              	prepare_SD_param_info:
 18469              	.LFB75:
2504:..\src/command_processing.c **** 
2505:..\src/command_processing.c **** //==============================================================================
2506:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2507:..\src/command_processing.c **** //==============================================================================
2508:..\src/command_processing.c **** 
2509:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2510:..\src/command_processing.c **** {
 18470              		.loc 1 2510 0
 18471              		.cfi_startproc
 18472              		@ args = 0, pretend = 0, frame = 152
 18473              		@ frame_needed = 1, uses_anonymous_args = 0
 18474 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18475              		.cfi_def_cfa_offset 36
 18476              		.cfi_offset 4, -36
 18477              		.cfi_offset 5, -32
 18478              		.cfi_offset 6, -28
 18479              		.cfi_offset 7, -24
 18480              		.cfi_offset 8, -20
 18481              		.cfi_offset 9, -16
 18482              		.cfi_offset 10, -12
 18483              		.cfi_offset 11, -8
 18484              		.cfi_offset 14, -4
 18485 0004 B1B0     		sub	sp, sp, #196
 18486              		.cfi_def_cfa_offset 232
 18487 0006 0AAF     		add	r7, sp, #40
 18488              		.cfi_def_cfa 7, 192
 18489 0008 7861     		str	r0, [r7, #20]
2511:..\src/command_processing.c ****     char str[100];  
2512:..\src/command_processing.c ****     int i;
2513:..\src/command_processing.c ****            
2514:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2515:..\src/command_processing.c ****     
2516:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18490              		.loc 1 2516 0
 18491 000a AC4B     		ldr	r3, .L765
 18492 000c C7F88C30 		str	r3, [r7, #140]
2517:..\src/command_processing.c ****         
2518:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18493              		.loc 1 2518 0
 18494 0010 AB4A     		ldr	r2, .L765+4
 18495 0012 AC49     		ldr	r1, .L765+8
 18496 0014 7869     		ldr	r0, [r7, #20]
 18497 0016 FFF7FEFF 		bl	sprintf
2519:..\src/command_processing.c ****     
2520:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18498              		.loc 1 2520 0
 18499 001a D7F88C30 		ldr	r3, [r7, #140]
 18500 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18501 0022 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 411


 18502 0024 07F11C03 		add	r3, r7, #28
 18503 0028 A749     		ldr	r1, .L765+12
 18504 002a 1846     		mov	r0, r3
 18505 002c FFF7FEFF 		bl	sprintf
2521:..\src/command_processing.c ****     strcat(info_string, str);
 18506              		.loc 1 2521 0
 18507 0030 07F11C03 		add	r3, r7, #28
 18508 0034 1946     		mov	r1, r3
 18509 0036 7869     		ldr	r0, [r7, #20]
 18510 0038 FFF7FEFF 		bl	strcat
2522:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18511              		.loc 1 2522 0
 18512 003c D7F88C30 		ldr	r3, [r7, #140]
 18513 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18514 0044 002B     		cmp	r3, #0
 18515 0046 02D0     		beq	.L702
 18516 0048 012B     		cmp	r3, #1
 18517 004a 15D0     		beq	.L703
 18518 004c 26E0     		b	.L701
 18519              	.L702:
2523:..\src/command_processing.c ****         case RIGHT_HAND:
2524:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18520              		.loc 1 2524 0
 18521 004e 7869     		ldr	r0, [r7, #20]
 18522 0050 FFF7FEFF 		bl	strlen
 18523 0054 0346     		mov	r3, r0
 18524 0056 1A46     		mov	r2, r3
 18525 0058 7B69     		ldr	r3, [r7, #20]
 18526 005a 1344     		add	r3, r3, r2
 18527 005c 9B4A     		ldr	r2, .L765+16
 18528 005e 1D46     		mov	r5, r3
 18529 0060 1446     		mov	r4, r2
 18530 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18531 0064 2860     		str	r0, [r5]	@ unaligned
 18532 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18533 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18534 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18535 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18536 006e A278     		ldrb	r2, [r4, #2]
 18537 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18538 0072 1346     		mov	r3, r2
 18539 0074 AB74     		strb	r3, [r5, #18]
2525:..\src/command_processing.c ****             break;
 18540              		.loc 1 2525 0
 18541 0076 11E0     		b	.L701
 18542              	.L703:
2526:..\src/command_processing.c ****         case LEFT_HAND:
2527:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18543              		.loc 1 2527 0
 18544 0078 7869     		ldr	r0, [r7, #20]
 18545 007a FFF7FEFF 		bl	strlen
 18546 007e 0346     		mov	r3, r0
 18547 0080 1A46     		mov	r2, r3
 18548 0082 7B69     		ldr	r3, [r7, #20]
 18549 0084 1344     		add	r3, r3, r2
 18550 0086 924A     		ldr	r2, .L765+20
 18551 0088 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 412


 18552 008a 1446     		mov	r4, r2
 18553 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18554 008e 2860     		str	r0, [r5]	@ unaligned
 18555 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18556 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18557 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18558 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18559 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2528:..\src/command_processing.c ****             break;
 18560              		.loc 1 2528 0
 18561 009a 00BF     		nop
 18562              	.L701:
2529:..\src/command_processing.c ****     }
2530:..\src/command_processing.c **** 
2531:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18563              		.loc 1 2531 0
 18564 009c D7F88C30 		ldr	r3, [r7, #140]
 18565 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18566 00a4 1A46     		mov	r2, r3
 18567 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18568 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18569 00ae 1946     		mov	r1, r3
 18570 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18571 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18572 00b8 07F11C00 		add	r0, r7, #28
 18573 00bc 0093     		str	r3, [sp]
 18574 00be 0B46     		mov	r3, r1
 18575 00c0 8449     		ldr	r1, .L765+24
 18576 00c2 FFF7FEFF 		bl	sprintf
2532:..\src/command_processing.c ****     strcat(info_string, str);
 18577              		.loc 1 2532 0
 18578 00c6 07F11C03 		add	r3, r7, #28
 18579 00ca 1946     		mov	r1, r3
 18580 00cc 7869     		ldr	r0, [r7, #20]
 18581 00ce FFF7FEFF 		bl	strcat
2533:..\src/command_processing.c ****     
2534:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18582              		.loc 1 2534 0
 18583 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18584 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18585 00da 1A46     		mov	r2, r3
 18586 00dc D7F88C30 		ldr	r3, [r7, #140]
 18587 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18588 00e4 1946     		mov	r1, r3
 18589 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18590 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18591 00ee 07F11C00 		add	r0, r7, #28
 18592 00f2 0093     		str	r3, [sp]
 18593 00f4 0B46     		mov	r3, r1
 18594 00f6 7849     		ldr	r1, .L765+28
 18595 00f8 FFF7FEFF 		bl	sprintf
2535:..\src/command_processing.c ****     strcat(info_string, str);
 18596              		.loc 1 2535 0
 18597 00fc 07F11C03 		add	r3, r7, #28
 18598 0100 1946     		mov	r1, r3
 18599 0102 7869     		ldr	r0, [r7, #20]
 18600 0104 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 413


 18601              	.LBB27:
2536:..\src/command_processing.c ****     
2537:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18602              		.loc 1 2537 0
 18603 0108 0023     		movs	r3, #0
 18604 010a 87F89330 		strb	r3, [r7, #147]
 18605 010e 00F05EBE 		b	.L704
 18606              	.L748:
 18607              	.LBB28:
2538:..\src/command_processing.c ****             
2539:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18608              		.loc 1 2539 0
 18609 0112 97F89330 		ldrb	r3, [r7, #147]
 18610 0116 87F88B30 		strb	r3, [r7, #139]
2540:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18611              		.loc 1 2540 0
 18612 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18613 011e 1346     		mov	r3, r2
 18614 0120 DB00     		lsls	r3, r3, #3
 18615 0122 9B1A     		subs	r3, r3, r2
 18616 0124 1B01     		lsls	r3, r3, #4
 18617 0126 B033     		adds	r3, r3, #176
 18618 0128 D7F88C20 		ldr	r2, [r7, #140]
 18619 012c 1344     		add	r3, r3, r2
 18620 012e C7F88430 		str	r3, [r7, #132]
2541:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18621              		.loc 1 2541 0
 18622 0132 D7F88430 		ldr	r3, [r7, #132]
 18623 0136 93F86030 		ldrb	r3, [r3, #96]
 18624 013a 87F88330 		strb	r3, [r7, #131]
2542:..\src/command_processing.c ****               
2543:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18625              		.loc 1 2543 0
 18626 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18627 0142 5A1C     		adds	r2, r3, #1
 18628 0144 07F11C03 		add	r3, r7, #28
 18629 0148 6449     		ldr	r1, .L765+32
 18630 014a 1846     		mov	r0, r3
 18631 014c FFF7FEFF 		bl	sprintf
2544:..\src/command_processing.c ****         strcat(info_string, str);
 18632              		.loc 1 2544 0
 18633 0150 07F11C03 		add	r3, r7, #28
 18634 0154 1946     		mov	r1, r3
 18635 0156 7869     		ldr	r0, [r7, #20]
 18636 0158 FFF7FEFF 		bl	strcat
2545:..\src/command_processing.c ****                     
2546:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18637              		.loc 1 2546 0
 18638 015c 7869     		ldr	r0, [r7, #20]
 18639 015e FFF7FEFF 		bl	strlen
 18640 0162 0346     		mov	r3, r0
 18641 0164 1A46     		mov	r2, r3
 18642 0166 7B69     		ldr	r3, [r7, #20]
 18643 0168 1344     		add	r3, r3, r2
 18644 016a 5D4A     		ldr	r2, .L765+36
 18645 016c 1D46     		mov	r5, r3
 18646 016e 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 414


 18647 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18648 0172 2860     		str	r0, [r5]	@ unaligned
 18649 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18650 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18651 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18652 017a 03CC     		ldmia	r4!, {r0, r1}
 18653 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18654 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18655 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18656 0182 A278     		ldrb	r2, [r4, #2]
 18657 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18658 0186 1346     		mov	r3, r2
 18659 0188 AB76     		strb	r3, [r5, #26]
2547:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18660              		.loc 1 2547 0
 18661 018a D7F88430 		ldr	r3, [r7, #132]
 18662 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18663 0192 012B     		cmp	r3, #1
 18664 0194 0CD1     		bne	.L705
2548:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18665              		.loc 1 2548 0
 18666 0196 7869     		ldr	r0, [r7, #20]
 18667 0198 FFF7FEFF 		bl	strlen
 18668 019c 0346     		mov	r3, r0
 18669 019e 1A46     		mov	r2, r3
 18670 01a0 7B69     		ldr	r3, [r7, #20]
 18671 01a2 1344     		add	r3, r3, r2
 18672 01a4 4F4A     		ldr	r2, .L765+40
 18673 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18674 01a8 1860     		str	r0, [r3]	@ unaligned
 18675 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18676 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18677 01ae 0BE0     		b	.L706
 18678              	.L705:
2549:..\src/command_processing.c ****         else
2550:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18679              		.loc 1 2550 0
 18680 01b0 7869     		ldr	r0, [r7, #20]
 18681 01b2 FFF7FEFF 		bl	strlen
 18682 01b6 0346     		mov	r3, r0
 18683 01b8 1A46     		mov	r2, r3
 18684 01ba 7B69     		ldr	r3, [r7, #20]
 18685 01bc 1344     		add	r3, r3, r2
 18686 01be 4A4A     		ldr	r2, .L765+44
 18687 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18688 01c2 1860     		str	r0, [r3]	@ unaligned
 18689 01c4 1279     		ldrb	r2, [r2, #4]
 18690 01c6 1A71     		strb	r2, [r3, #4]
 18691              	.L706:
2551:..\src/command_processing.c ****         
2552:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18692              		.loc 1 2552 0
 18693 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18694 01cc 474A     		ldr	r2, .L765+48
 18695 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 18696 01d2 1A46     		mov	r2, r3
 18697 01d4 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 415


 18698 01d8 4549     		ldr	r1, .L765+52
 18699 01da 1846     		mov	r0, r3
 18700 01dc FFF7FEFF 		bl	sprintf
2553:..\src/command_processing.c ****         strcat(info_string, str);
 18701              		.loc 1 2553 0
 18702 01e0 07F11C03 		add	r3, r7, #28
 18703 01e4 1946     		mov	r1, r3
 18704 01e6 7869     		ldr	r0, [r7, #20]
 18705 01e8 FFF7FEFF 		bl	strcat
2554:..\src/command_processing.c **** 
2555:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18706              		.loc 1 2555 0
 18707 01ec 7869     		ldr	r0, [r7, #20]
 18708 01ee FFF7FEFF 		bl	strlen
 18709 01f2 0346     		mov	r3, r0
 18710 01f4 1A46     		mov	r2, r3
 18711 01f6 7B69     		ldr	r3, [r7, #20]
 18712 01f8 1344     		add	r3, r3, r2
 18713 01fa 3E4A     		ldr	r2, .L765+56
 18714 01fc 1C46     		mov	r4, r3
 18715 01fe 1346     		mov	r3, r2
 18716 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 18717 0202 2060     		str	r0, [r4]	@ unaligned
 18718 0204 6160     		str	r1, [r4, #4]	@ unaligned
 18719 0206 A260     		str	r2, [r4, #8]	@ unaligned
 18720 0208 1A88     		ldrh	r2, [r3]	@ unaligned
 18721 020a 9B78     		ldrb	r3, [r3, #2]
 18722 020c A281     		strh	r2, [r4, #12]	@ unaligned
 18723 020e A373     		strb	r3, [r4, #14]
2556:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18724              		.loc 1 2556 0
 18725 0210 D7F88430 		ldr	r3, [r7, #132]
 18726 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18727 0218 032B     		cmp	r3, #3
 18728 021a 75D0     		beq	.L707
2557:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18729              		.loc 1 2557 0
 18730 021c D7F88430 		ldr	r3, [r7, #132]
 18731 0220 1B68     		ldr	r3, [r3]
 18732 0222 1846     		mov	r0, r3
 18733 0224 FFF7FEFF 		bl	__aeabi_i2d
 18734 0228 4FF00002 		mov	r2, #0
 18735 022c 324B     		ldr	r3, .L765+60
 18736 022e FFF7FEFF 		bl	__aeabi_ddiv
 18737 0232 0346     		mov	r3, r0
 18738 0234 0C46     		mov	r4, r1
 18739 0236 07F11C00 		add	r0, r7, #28
 18740 023a 1A46     		mov	r2, r3
 18741 023c 2346     		mov	r3, r4
 18742 023e 2F49     		ldr	r1, .L765+64
 18743 0240 FFF7FEFF 		bl	sprintf
2558:..\src/command_processing.c ****             strcat(info_string, str);
 18744              		.loc 1 2558 0
 18745 0244 07F11C03 		add	r3, r7, #28
 18746 0248 1946     		mov	r1, r3
 18747 024a 7869     		ldr	r0, [r7, #20]
 18748 024c FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 416


2559:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18749              		.loc 1 2559 0
 18750 0250 D7F88430 		ldr	r3, [r7, #132]
 18751 0254 5B68     		ldr	r3, [r3, #4]
 18752 0256 1846     		mov	r0, r3
 18753 0258 FFF7FEFF 		bl	__aeabi_i2d
 18754 025c 4FF00002 		mov	r2, #0
 18755 0260 254B     		ldr	r3, .L765+60
 18756 0262 FFF7FEFF 		bl	__aeabi_ddiv
 18757 0266 0346     		mov	r3, r0
 18758 0268 0C46     		mov	r4, r1
 18759 026a 07F11C00 		add	r0, r7, #28
 18760 026e 1A46     		mov	r2, r3
 18761 0270 2346     		mov	r3, r4
 18762 0272 2349     		ldr	r1, .L765+68
 18763 0274 FFF7FEFF 		bl	sprintf
2560:..\src/command_processing.c ****             strcat(info_string, str);
 18764              		.loc 1 2560 0
 18765 0278 07F11C03 		add	r3, r7, #28
 18766 027c 1946     		mov	r1, r3
 18767 027e 7869     		ldr	r0, [r7, #20]
 18768 0280 FFF7FEFF 		bl	strcat
2561:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18769              		.loc 1 2561 0
 18770 0284 D7F88430 		ldr	r3, [r7, #132]
 18771 0288 9B68     		ldr	r3, [r3, #8]
 18772 028a 1846     		mov	r0, r3
 18773 028c FFF7FEFF 		bl	__aeabi_i2d
 18774 0290 4FF00002 		mov	r2, #0
 18775 0294 184B     		ldr	r3, .L765+60
 18776 0296 FFF7FEFF 		bl	__aeabi_ddiv
 18777 029a 0346     		mov	r3, r0
 18778 029c 0C46     		mov	r4, r1
 18779 029e 07F11C00 		add	r0, r7, #28
 18780 02a2 1A46     		mov	r2, r3
 18781 02a4 2346     		mov	r3, r4
 18782 02a6 1749     		ldr	r1, .L765+72
 18783 02a8 FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c ****             strcat(info_string, str);
 18784              		.loc 1 2562 0
 18785 02ac 07F11C03 		add	r3, r7, #28
 18786 02b0 1946     		mov	r1, r3
 18787 02b2 7869     		ldr	r0, [r7, #20]
 18788 02b4 FFF7FEFF 		bl	strcat
 18789 02b8 74E0     		b	.L708
 18790              	.L766:
 18791 02ba 00BF     		.align	2
 18792              	.L765:
 18793 02bc 00000000 		.word	g_mem
 18794 02c0 70110000 		.word	.LC154
 18795 02c4 401D0000 		.word	.LC272
 18796 02c8 D8110000 		.word	.LC157
 18797 02cc 88120000 		.word	.LC163
 18798 02d0 9C120000 		.word	.LC164
 18799 02d4 5C1A0000 		.word	.LC252
 18800 02d8 881A0000 		.word	.LC253
 18801 02dc E4120000 		.word	.LC168
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 417


 18802 02e0 54130000 		.word	.LC177
 18803 02e4 44130000 		.word	.LC175
 18804 02e8 4C130000 		.word	.LC176
 18805 02ec 00000000 		.word	dev_pwm_limit
 18806 02f0 7C130000 		.word	.LC180
 18807 02f4 581D0000 		.word	.LC273
 18808 02f8 0000F040 		.word	1089470464
 18809 02fc 94140000 		.word	.LC192
 18810 0300 A0140000 		.word	.LC193
 18811 0304 AC140000 		.word	.LC194
 18812              	.L707:
2563:..\src/command_processing.c ****         }
2564:..\src/command_processing.c ****         else { 
2565:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18813              		.loc 1 2565 0
 18814 0308 D7F88430 		ldr	r3, [r7, #132]
 18815 030c 9B69     		ldr	r3, [r3, #24]
 18816 030e 1846     		mov	r0, r3
 18817 0310 FFF7FEFF 		bl	__aeabi_i2d
 18818 0314 4FF00002 		mov	r2, #0
 18819 0318 CC4B     		ldr	r3, .L767
 18820 031a FFF7FEFF 		bl	__aeabi_ddiv
 18821 031e 0346     		mov	r3, r0
 18822 0320 0C46     		mov	r4, r1
 18823 0322 07F11C00 		add	r0, r7, #28
 18824 0326 1A46     		mov	r2, r3
 18825 0328 2346     		mov	r3, r4
 18826 032a C949     		ldr	r1, .L767+4
 18827 032c FFF7FEFF 		bl	sprintf
2566:..\src/command_processing.c ****             strcat(info_string, str);
 18828              		.loc 1 2566 0
 18829 0330 07F11C03 		add	r3, r7, #28
 18830 0334 1946     		mov	r1, r3
 18831 0336 7869     		ldr	r0, [r7, #20]
 18832 0338 FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18833              		.loc 1 2567 0
 18834 033c D7F88430 		ldr	r3, [r7, #132]
 18835 0340 DB69     		ldr	r3, [r3, #28]
 18836 0342 1846     		mov	r0, r3
 18837 0344 FFF7FEFF 		bl	__aeabi_i2d
 18838 0348 4FF00002 		mov	r2, #0
 18839 034c BF4B     		ldr	r3, .L767
 18840 034e FFF7FEFF 		bl	__aeabi_ddiv
 18841 0352 0346     		mov	r3, r0
 18842 0354 0C46     		mov	r4, r1
 18843 0356 07F11C00 		add	r0, r7, #28
 18844 035a 1A46     		mov	r2, r3
 18845 035c 2346     		mov	r3, r4
 18846 035e BD49     		ldr	r1, .L767+8
 18847 0360 FFF7FEFF 		bl	sprintf
2568:..\src/command_processing.c ****             strcat(info_string, str);
 18848              		.loc 1 2568 0
 18849 0364 07F11C03 		add	r3, r7, #28
 18850 0368 1946     		mov	r1, r3
 18851 036a 7869     		ldr	r0, [r7, #20]
 18852 036c FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 418


2569:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18853              		.loc 1 2569 0
 18854 0370 D7F88430 		ldr	r3, [r7, #132]
 18855 0374 1B6A     		ldr	r3, [r3, #32]
 18856 0376 1846     		mov	r0, r3
 18857 0378 FFF7FEFF 		bl	__aeabi_i2d
 18858 037c 4FF00002 		mov	r2, #0
 18859 0380 B24B     		ldr	r3, .L767
 18860 0382 FFF7FEFF 		bl	__aeabi_ddiv
 18861 0386 0346     		mov	r3, r0
 18862 0388 0C46     		mov	r4, r1
 18863 038a 07F11C00 		add	r0, r7, #28
 18864 038e 1A46     		mov	r2, r3
 18865 0390 2346     		mov	r3, r4
 18866 0392 B149     		ldr	r1, .L767+12
 18867 0394 FFF7FEFF 		bl	sprintf
2570:..\src/command_processing.c ****             strcat(info_string, str);
 18868              		.loc 1 2570 0
 18869 0398 07F11C03 		add	r3, r7, #28
 18870 039c 1946     		mov	r1, r3
 18871 039e 7869     		ldr	r0, [r7, #20]
 18872 03a0 FFF7FEFF 		bl	strcat
 18873              	.L708:
2571:..\src/command_processing.c ****         }
2572:..\src/command_processing.c **** 
2573:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18874              		.loc 1 2573 0
 18875 03a4 7869     		ldr	r0, [r7, #20]
 18876 03a6 FFF7FEFF 		bl	strlen
 18877 03aa 0346     		mov	r3, r0
 18878 03ac 1A46     		mov	r2, r3
 18879 03ae 7B69     		ldr	r3, [r7, #20]
 18880 03b0 1344     		add	r3, r3, r2
 18881 03b2 AA4A     		ldr	r2, .L767+16
 18882 03b4 1C46     		mov	r4, r3
 18883 03b6 1346     		mov	r3, r2
 18884 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 18885 03ba 2060     		str	r0, [r4]	@ unaligned
 18886 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 18887 03be A260     		str	r2, [r4, #8]	@ unaligned
 18888 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 18889 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2574:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18890              		.loc 1 2574 0
 18891 03c4 D7F88430 		ldr	r3, [r7, #132]
 18892 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18893 03cc 032B     		cmp	r3, #3
 18894 03ce 4ED0     		beq	.L709
2575:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18895              		.loc 1 2575 0
 18896 03d0 D7F88430 		ldr	r3, [r7, #132]
 18897 03d4 DB68     		ldr	r3, [r3, #12]
 18898 03d6 1846     		mov	r0, r3
 18899 03d8 FFF7FEFF 		bl	__aeabi_i2d
 18900 03dc 4FF00002 		mov	r2, #0
 18901 03e0 9A4B     		ldr	r3, .L767
 18902 03e2 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 419


 18903 03e6 0346     		mov	r3, r0
 18904 03e8 0C46     		mov	r4, r1
 18905 03ea 07F11C00 		add	r0, r7, #28
 18906 03ee 1A46     		mov	r2, r3
 18907 03f0 2346     		mov	r3, r4
 18908 03f2 9749     		ldr	r1, .L767+4
 18909 03f4 FFF7FEFF 		bl	sprintf
2576:..\src/command_processing.c ****             strcat(info_string, str);
 18910              		.loc 1 2576 0
 18911 03f8 07F11C03 		add	r3, r7, #28
 18912 03fc 1946     		mov	r1, r3
 18913 03fe 7869     		ldr	r0, [r7, #20]
 18914 0400 FFF7FEFF 		bl	strcat
2577:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 18915              		.loc 1 2577 0
 18916 0404 D7F88430 		ldr	r3, [r7, #132]
 18917 0408 1B69     		ldr	r3, [r3, #16]
 18918 040a 1846     		mov	r0, r3
 18919 040c FFF7FEFF 		bl	__aeabi_i2d
 18920 0410 4FF00002 		mov	r2, #0
 18921 0414 8D4B     		ldr	r3, .L767
 18922 0416 FFF7FEFF 		bl	__aeabi_ddiv
 18923 041a 0346     		mov	r3, r0
 18924 041c 0C46     		mov	r4, r1
 18925 041e 07F11C00 		add	r0, r7, #28
 18926 0422 1A46     		mov	r2, r3
 18927 0424 2346     		mov	r3, r4
 18928 0426 8B49     		ldr	r1, .L767+8
 18929 0428 FFF7FEFF 		bl	sprintf
2578:..\src/command_processing.c ****             strcat(info_string, str);
 18930              		.loc 1 2578 0
 18931 042c 07F11C03 		add	r3, r7, #28
 18932 0430 1946     		mov	r1, r3
 18933 0432 7869     		ldr	r0, [r7, #20]
 18934 0434 FFF7FEFF 		bl	strcat
2579:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 18935              		.loc 1 2579 0
 18936 0438 D7F88430 		ldr	r3, [r7, #132]
 18937 043c 5B69     		ldr	r3, [r3, #20]
 18938 043e 1846     		mov	r0, r3
 18939 0440 FFF7FEFF 		bl	__aeabi_i2d
 18940 0444 4FF00002 		mov	r2, #0
 18941 0448 804B     		ldr	r3, .L767
 18942 044a FFF7FEFF 		bl	__aeabi_ddiv
 18943 044e 0346     		mov	r3, r0
 18944 0450 0C46     		mov	r4, r1
 18945 0452 07F11C00 		add	r0, r7, #28
 18946 0456 1A46     		mov	r2, r3
 18947 0458 2346     		mov	r3, r4
 18948 045a 7F49     		ldr	r1, .L767+12
 18949 045c FFF7FEFF 		bl	sprintf
2580:..\src/command_processing.c ****             strcat(info_string, str);
 18950              		.loc 1 2580 0
 18951 0460 07F11C03 		add	r3, r7, #28
 18952 0464 1946     		mov	r1, r3
 18953 0466 7869     		ldr	r0, [r7, #20]
 18954 0468 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 420


 18955 046c 4DE0     		b	.L710
 18956              	.L709:
2581:..\src/command_processing.c **** 
2582:..\src/command_processing.c ****         }
2583:..\src/command_processing.c ****         else {
2584:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 18957              		.loc 1 2584 0
 18958 046e D7F88430 		ldr	r3, [r7, #132]
 18959 0472 5B6A     		ldr	r3, [r3, #36]
 18960 0474 1846     		mov	r0, r3
 18961 0476 FFF7FEFF 		bl	__aeabi_i2d
 18962 047a 4FF00002 		mov	r2, #0
 18963 047e 734B     		ldr	r3, .L767
 18964 0480 FFF7FEFF 		bl	__aeabi_ddiv
 18965 0484 0346     		mov	r3, r0
 18966 0486 0C46     		mov	r4, r1
 18967 0488 07F11C00 		add	r0, r7, #28
 18968 048c 1A46     		mov	r2, r3
 18969 048e 2346     		mov	r3, r4
 18970 0490 6F49     		ldr	r1, .L767+4
 18971 0492 FFF7FEFF 		bl	sprintf
2585:..\src/command_processing.c ****             strcat(info_string, str);
 18972              		.loc 1 2585 0
 18973 0496 07F11C03 		add	r3, r7, #28
 18974 049a 1946     		mov	r1, r3
 18975 049c 7869     		ldr	r0, [r7, #20]
 18976 049e FFF7FEFF 		bl	strcat
2586:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 18977              		.loc 1 2586 0
 18978 04a2 D7F88430 		ldr	r3, [r7, #132]
 18979 04a6 9B6A     		ldr	r3, [r3, #40]
 18980 04a8 1846     		mov	r0, r3
 18981 04aa FFF7FEFF 		bl	__aeabi_i2d
 18982 04ae 4FF00002 		mov	r2, #0
 18983 04b2 664B     		ldr	r3, .L767
 18984 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 18985 04b8 0346     		mov	r3, r0
 18986 04ba 0C46     		mov	r4, r1
 18987 04bc 07F11C00 		add	r0, r7, #28
 18988 04c0 1A46     		mov	r2, r3
 18989 04c2 2346     		mov	r3, r4
 18990 04c4 6349     		ldr	r1, .L767+8
 18991 04c6 FFF7FEFF 		bl	sprintf
2587:..\src/command_processing.c ****             strcat(info_string, str);
 18992              		.loc 1 2587 0
 18993 04ca 07F11C03 		add	r3, r7, #28
 18994 04ce 1946     		mov	r1, r3
 18995 04d0 7869     		ldr	r0, [r7, #20]
 18996 04d2 FFF7FEFF 		bl	strcat
2588:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 18997              		.loc 1 2588 0
 18998 04d6 D7F88430 		ldr	r3, [r7, #132]
 18999 04da DB6A     		ldr	r3, [r3, #44]
 19000 04dc 1846     		mov	r0, r3
 19001 04de FFF7FEFF 		bl	__aeabi_i2d
 19002 04e2 4FF00002 		mov	r2, #0
 19003 04e6 594B     		ldr	r3, .L767
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 421


 19004 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 19005 04ec 0346     		mov	r3, r0
 19006 04ee 0C46     		mov	r4, r1
 19007 04f0 07F11C00 		add	r0, r7, #28
 19008 04f4 1A46     		mov	r2, r3
 19009 04f6 2346     		mov	r3, r4
 19010 04f8 5749     		ldr	r1, .L767+12
 19011 04fa FFF7FEFF 		bl	sprintf
2589:..\src/command_processing.c ****             strcat(info_string, str);
 19012              		.loc 1 2589 0
 19013 04fe 07F11C03 		add	r3, r7, #28
 19014 0502 1946     		mov	r1, r3
 19015 0504 7869     		ldr	r0, [r7, #20]
 19016 0506 FFF7FEFF 		bl	strcat
 19017              	.L710:
2590:..\src/command_processing.c ****         }
2591:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19018              		.loc 1 2591 0
 19019 050a D7F88430 		ldr	r3, [r7, #132]
 19020 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19021 0512 012B     		cmp	r3, #1
 19022 0514 14D1     		bne	.L711
2592:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19023              		.loc 1 2592 0
 19024 0516 7869     		ldr	r0, [r7, #20]
 19025 0518 FFF7FEFF 		bl	strlen
 19026 051c 0346     		mov	r3, r0
 19027 051e 1A46     		mov	r2, r3
 19028 0520 7B69     		ldr	r3, [r7, #20]
 19029 0522 1344     		add	r3, r3, r2
 19030 0524 4E4A     		ldr	r2, .L767+20
 19031 0526 1D46     		mov	r5, r3
 19032 0528 1446     		mov	r4, r2
 19033 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19034 052c 2860     		str	r0, [r5]	@ unaligned
 19035 052e 6960     		str	r1, [r5, #4]	@ unaligned
 19036 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 19037 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 19038 0534 03CC     		ldmia	r4!, {r0, r1}
 19039 0536 2861     		str	r0, [r5, #16]	@ unaligned
 19040 0538 6961     		str	r1, [r5, #20]	@ unaligned
 19041 053a 2388     		ldrh	r3, [r4]	@ unaligned
 19042 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 19043 053e 13E0     		b	.L712
 19044              	.L711:
2593:..\src/command_processing.c ****         else
2594:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19045              		.loc 1 2594 0
 19046 0540 7869     		ldr	r0, [r7, #20]
 19047 0542 FFF7FEFF 		bl	strlen
 19048 0546 0346     		mov	r3, r0
 19049 0548 1A46     		mov	r2, r3
 19050 054a 7B69     		ldr	r3, [r7, #20]
 19051 054c 1344     		add	r3, r3, r2
 19052 054e 454A     		ldr	r2, .L767+24
 19053 0550 1D46     		mov	r5, r3
 19054 0552 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 422


 19055 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19056 0556 2860     		str	r0, [r5]	@ unaligned
 19057 0558 6960     		str	r1, [r5, #4]	@ unaligned
 19058 055a AA60     		str	r2, [r5, #8]	@ unaligned
 19059 055c EB60     		str	r3, [r5, #12]	@ unaligned
 19060 055e 03CC     		ldmia	r4!, {r0, r1}
 19061 0560 2861     		str	r0, [r5, #16]	@ unaligned
 19062 0562 6961     		str	r1, [r5, #20]	@ unaligned
 19063 0564 2378     		ldrb	r3, [r4]
 19064 0566 2B76     		strb	r3, [r5, #24]
 19065              	.L712:
2595:..\src/command_processing.c **** 
2596:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19066              		.loc 1 2596 0
 19067 0568 D7F88430 		ldr	r3, [r7, #132]
 19068 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19069 0570 072B     		cmp	r3, #7
 19070 0572 00F2EA80 		bhi	.L713
 19071 0576 01A2     		adr	r2, .L715
 19072 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19073              		.p2align 2
 19074              	.L715:
 19075 057c 9D050000 		.word	.L714+1
 19076 0580 C1050000 		.word	.L716+1
 19077 0584 E9050000 		.word	.L717+1
 19078 0588 1B060000 		.word	.L718+1
 19079 058c 79060000 		.word	.L719+1
 19080 0590 A7060000 		.word	.L720+1
 19081 0594 D7060000 		.word	.L721+1
 19082 0598 05070000 		.word	.L722+1
 19083              		.p2align 1
 19084              	.L714:
2597:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2598:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19085              		.loc 1 2598 0
 19086 059c 7869     		ldr	r0, [r7, #20]
 19087 059e FFF7FEFF 		bl	strlen
 19088 05a2 0346     		mov	r3, r0
 19089 05a4 1A46     		mov	r2, r3
 19090 05a6 7B69     		ldr	r3, [r7, #20]
 19091 05a8 1344     		add	r3, r3, r2
 19092 05aa 2F4A     		ldr	r2, .L767+28
 19093 05ac 1D46     		mov	r5, r3
 19094 05ae 1446     		mov	r4, r2
 19095 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19096 05b2 2860     		str	r0, [r5]	@ unaligned
 19097 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 19098 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 19099 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 19100 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 19101 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2599:..\src/command_processing.c ****                 break;
 19102              		.loc 1 2599 0
 19103 05be C4E0     		b	.L713
 19104              	.L716:
2600:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2601:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 423


 19105              		.loc 1 2601 0
 19106 05c0 7869     		ldr	r0, [r7, #20]
 19107 05c2 FFF7FEFF 		bl	strlen
 19108 05c6 0346     		mov	r3, r0
 19109 05c8 1A46     		mov	r2, r3
 19110 05ca 7B69     		ldr	r3, [r7, #20]
 19111 05cc 1344     		add	r3, r3, r2
 19112 05ce 274A     		ldr	r2, .L767+32
 19113 05d0 1D46     		mov	r5, r3
 19114 05d2 1446     		mov	r4, r2
 19115 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19116 05d6 2860     		str	r0, [r5]	@ unaligned
 19117 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 19118 05da AA60     		str	r2, [r5, #8]	@ unaligned
 19119 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 19120 05de 2068     		ldr	r0, [r4]	@ unaligned
 19121 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 19122 05e2 2379     		ldrb	r3, [r4, #4]
 19123 05e4 2B75     		strb	r3, [r5, #20]
2602:..\src/command_processing.c ****                 break;
 19124              		.loc 1 2602 0
 19125 05e6 B0E0     		b	.L713
 19126              	.L717:
2603:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2604:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19127              		.loc 1 2604 0
 19128 05e8 7869     		ldr	r0, [r7, #20]
 19129 05ea FFF7FEFF 		bl	strlen
 19130 05ee 0346     		mov	r3, r0
 19131 05f0 1A46     		mov	r2, r3
 19132 05f2 7B69     		ldr	r3, [r7, #20]
 19133 05f4 1344     		add	r3, r3, r2
 19134 05f6 1E4A     		ldr	r2, .L767+36
 19135 05f8 1D46     		mov	r5, r3
 19136 05fa 1446     		mov	r4, r2
 19137 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19138 05fe 2860     		str	r0, [r5]	@ unaligned
 19139 0600 6960     		str	r1, [r5, #4]	@ unaligned
 19140 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 19141 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 19142 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 19143 0608 2861     		str	r0, [r5, #16]	@ unaligned
 19144 060a 6961     		str	r1, [r5, #20]	@ unaligned
 19145 060c AA61     		str	r2, [r5, #24]	@ unaligned
 19146 060e 2388     		ldrh	r3, [r4]	@ unaligned
 19147 0610 A278     		ldrb	r2, [r4, #2]
 19148 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 19149 0614 1346     		mov	r3, r2
 19150 0616 AB77     		strb	r3, [r5, #30]
2605:..\src/command_processing.c ****                 break;
 19151              		.loc 1 2605 0
 19152 0618 97E0     		b	.L713
 19153              	.L718:
2606:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2607:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19154              		.loc 1 2607 0
 19155 061a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 424


 19156 061c FFF7FEFF 		bl	strlen
 19157 0620 0346     		mov	r3, r0
 19158 0622 1A46     		mov	r2, r3
 19159 0624 7B69     		ldr	r3, [r7, #20]
 19160 0626 1344     		add	r3, r3, r2
 19161 0628 124A     		ldr	r2, .L767+40
 19162 062a 1D46     		mov	r5, r3
 19163 062c 1446     		mov	r4, r2
 19164 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19165 0630 2860     		str	r0, [r5]	@ unaligned
 19166 0632 6960     		str	r1, [r5, #4]	@ unaligned
 19167 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 19168 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 19169 0638 03CC     		ldmia	r4!, {r0, r1}
 19170 063a 2861     		str	r0, [r5, #16]	@ unaligned
 19171 063c 6961     		str	r1, [r5, #20]	@ unaligned
 19172 063e 2388     		ldrh	r3, [r4]	@ unaligned
 19173 0640 A278     		ldrb	r2, [r4, #2]
 19174 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 19175 0644 1346     		mov	r3, r2
 19176 0646 AB76     		strb	r3, [r5, #26]
2608:..\src/command_processing.c ****                 break;
 19177              		.loc 1 2608 0
 19178 0648 7FE0     		b	.L713
 19179              	.L768:
 19180 064a 00BF     		.align	2
 19181              	.L767:
 19182 064c 0000F040 		.word	1089470464
 19183 0650 94140000 		.word	.LC192
 19184 0654 A0140000 		.word	.LC193
 19185 0658 AC140000 		.word	.LC194
 19186 065c 681D0000 		.word	.LC274
 19187 0660 D4140000 		.word	.LC196
 19188 0664 F0140000 		.word	.LC197
 19189 0668 0C150000 		.word	.LC198
 19190 066c 20150000 		.word	.LC199
 19191 0670 38150000 		.word	.LC200
 19192 0674 58150000 		.word	.LC201
 19193              	.L719:
2609:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2610:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19194              		.loc 1 2610 0
 19195 0678 7869     		ldr	r0, [r7, #20]
 19196 067a FFF7FEFF 		bl	strlen
 19197 067e 0346     		mov	r3, r0
 19198 0680 1A46     		mov	r2, r3
 19199 0682 7B69     		ldr	r3, [r7, #20]
 19200 0684 1344     		add	r3, r3, r2
 19201 0686 BA4A     		ldr	r2, .L769
 19202 0688 1C46     		mov	r4, r3
 19203 068a 1546     		mov	r5, r2
 19204 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19205 068e 2060     		str	r0, [r4]	@ unaligned
 19206 0690 6160     		str	r1, [r4, #4]	@ unaligned
 19207 0692 A260     		str	r2, [r4, #8]	@ unaligned
 19208 0694 E360     		str	r3, [r4, #12]	@ unaligned
 19209 0696 2868     		ldr	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 425


 19210 0698 2061     		str	r0, [r4, #16]	@ unaligned
 19211 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19212 069c AA79     		ldrb	r2, [r5, #6]
 19213 069e A382     		strh	r3, [r4, #20]	@ unaligned
 19214 06a0 1346     		mov	r3, r2
 19215 06a2 A375     		strb	r3, [r4, #22]
2611:..\src/command_processing.c ****                 break;
 19216              		.loc 1 2611 0
 19217 06a4 51E0     		b	.L713
 19218              	.L720:
2612:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2613:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19219              		.loc 1 2613 0
 19220 06a6 7869     		ldr	r0, [r7, #20]
 19221 06a8 FFF7FEFF 		bl	strlen
 19222 06ac 0346     		mov	r3, r0
 19223 06ae 1A46     		mov	r2, r3
 19224 06b0 7B69     		ldr	r3, [r7, #20]
 19225 06b2 1344     		add	r3, r3, r2
 19226 06b4 AF4A     		ldr	r2, .L769+4
 19227 06b6 1D46     		mov	r5, r3
 19228 06b8 1446     		mov	r4, r2
 19229 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19230 06bc 2860     		str	r0, [r5]	@ unaligned
 19231 06be 6960     		str	r1, [r5, #4]	@ unaligned
 19232 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
 19233 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 19234 06c4 03CC     		ldmia	r4!, {r0, r1}
 19235 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 19236 06c8 6961     		str	r1, [r5, #20]	@ unaligned
 19237 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 19238 06cc A278     		ldrb	r2, [r4, #2]
 19239 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 19240 06d0 1346     		mov	r3, r2
 19241 06d2 AB76     		strb	r3, [r5, #26]
2614:..\src/command_processing.c ****                 break;
 19242              		.loc 1 2614 0
 19243 06d4 39E0     		b	.L713
 19244              	.L721:
2615:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2616:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19245              		.loc 1 2616 0
 19246 06d6 7869     		ldr	r0, [r7, #20]
 19247 06d8 FFF7FEFF 		bl	strlen
 19248 06dc 0346     		mov	r3, r0
 19249 06de 1A46     		mov	r2, r3
 19250 06e0 7B69     		ldr	r3, [r7, #20]
 19251 06e2 1344     		add	r3, r3, r2
 19252 06e4 A44A     		ldr	r2, .L769+8
 19253 06e6 1C46     		mov	r4, r3
 19254 06e8 1546     		mov	r5, r2
 19255 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19256 06ec 2060     		str	r0, [r4]	@ unaligned
 19257 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 19258 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 19259 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 19260 06f4 2868     		ldr	r0, [r5]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 426


 19261 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 19262 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19263 06fa AA79     		ldrb	r2, [r5, #6]
 19264 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 19265 06fe 1346     		mov	r3, r2
 19266 0700 A375     		strb	r3, [r4, #22]
2617:..\src/command_processing.c ****                 break;
 19267              		.loc 1 2617 0
 19268 0702 22E0     		b	.L713
 19269              	.L722:
2618:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2619:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19270              		.loc 1 2619 0
 19271 0704 7869     		ldr	r0, [r7, #20]
 19272 0706 FFF7FEFF 		bl	strlen
 19273 070a 0346     		mov	r3, r0
 19274 070c 1A46     		mov	r2, r3
 19275 070e 7B69     		ldr	r3, [r7, #20]
 19276 0710 1344     		add	r3, r3, r2
 19277 0712 9A4A     		ldr	r2, .L769+12
 19278 0714 1546     		mov	r5, r2
 19279 0716 9E46     		mov	lr, r3
 19280 0718 05F1200C 		add	ip, r5, #32
 19281              	.L723:
 19282 071c 7446     		mov	r4, lr
 19283 071e 2E46     		mov	r6, r5
 19284 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19285 0722 2060     		str	r0, [r4]	@ unaligned
 19286 0724 6160     		str	r1, [r4, #4]	@ unaligned
 19287 0726 A260     		str	r2, [r4, #8]	@ unaligned
 19288 0728 E360     		str	r3, [r4, #12]	@ unaligned
 19289 072a 1035     		adds	r5, r5, #16
 19290 072c 0EF1100E 		add	lr, lr, #16
 19291 0730 6545     		cmp	r5, ip
 19292 0732 F3D1     		bne	.L723
 19293 0734 7446     		mov	r4, lr
 19294 0736 2B46     		mov	r3, r5
 19295 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 19296 073a 2060     		str	r0, [r4]	@ unaligned
 19297 073c 6160     		str	r1, [r4, #4]	@ unaligned
 19298 073e A260     		str	r2, [r4, #8]	@ unaligned
 19299 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 19300 0742 9B78     		ldrb	r3, [r3, #2]
 19301 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 19302 0746 A373     		strb	r3, [r4, #14]
2620:..\src/command_processing.c ****                 break;
 19303              		.loc 1 2620 0
 19304 0748 00BF     		nop
 19305              	.L713:
2621:..\src/command_processing.c ****         }
2622:..\src/command_processing.c **** 
2623:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19306              		.loc 1 2623 0
 19307 074a D7F88430 		ldr	r3, [r7, #132]
 19308 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19309 0752 032B     		cmp	r3, #3
 19310 0754 63D8     		bhi	.L763
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 427


 19311 0756 01A2     		adr	r2, .L726
 19312 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19313              		.p2align 2
 19314              	.L726:
 19315 075c 6D070000 		.word	.L725+1
 19316 0760 97070000 		.word	.L727+1
 19317 0764 BB070000 		.word	.L728+1
 19318 0768 E1070000 		.word	.L729+1
 19319              		.p2align 1
 19320              	.L725:
2624:..\src/command_processing.c ****             case CONTROL_ANGLE:
2625:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19321              		.loc 1 2625 0
 19322 076c 7869     		ldr	r0, [r7, #20]
 19323 076e FFF7FEFF 		bl	strlen
 19324 0772 0346     		mov	r3, r0
 19325 0774 1A46     		mov	r2, r3
 19326 0776 7B69     		ldr	r3, [r7, #20]
 19327 0778 1344     		add	r3, r3, r2
 19328 077a 814A     		ldr	r2, .L769+16
 19329 077c 1D46     		mov	r5, r3
 19330 077e 1446     		mov	r4, r2
 19331 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19332 0782 2860     		str	r0, [r5]	@ unaligned
 19333 0784 6960     		str	r1, [r5, #4]	@ unaligned
 19334 0786 AA60     		str	r2, [r5, #8]	@ unaligned
 19335 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 19336 078a 03CC     		ldmia	r4!, {r0, r1}
 19337 078c 2861     		str	r0, [r5, #16]	@ unaligned
 19338 078e 6961     		str	r1, [r5, #20]	@ unaligned
 19339 0790 2378     		ldrb	r3, [r4]
 19340 0792 2B76     		strb	r3, [r5, #24]
2626:..\src/command_processing.c ****                 break;
 19341              		.loc 1 2626 0
 19342 0794 44E0     		b	.L730
 19343              	.L727:
2627:..\src/command_processing.c ****             case CONTROL_PWM:
2628:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19344              		.loc 1 2628 0
 19345 0796 7869     		ldr	r0, [r7, #20]
 19346 0798 FFF7FEFF 		bl	strlen
 19347 079c 0346     		mov	r3, r0
 19348 079e 1A46     		mov	r2, r3
 19349 07a0 7B69     		ldr	r3, [r7, #20]
 19350 07a2 1344     		add	r3, r3, r2
 19351 07a4 774A     		ldr	r2, .L769+20
 19352 07a6 1D46     		mov	r5, r3
 19353 07a8 1446     		mov	r4, r2
 19354 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19355 07ac 2860     		str	r0, [r5]	@ unaligned
 19356 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 19357 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 19358 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 19359 07b4 2068     		ldr	r0, [r4]	@ unaligned
 19360 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2629:..\src/command_processing.c ****                 break;
 19361              		.loc 1 2629 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 428


 19362 07b8 32E0     		b	.L730
 19363              	.L728:
2630:..\src/command_processing.c ****             case CONTROL_CURRENT:
2631:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19364              		.loc 1 2631 0
 19365 07ba 7869     		ldr	r0, [r7, #20]
 19366 07bc FFF7FEFF 		bl	strlen
 19367 07c0 0346     		mov	r3, r0
 19368 07c2 1A46     		mov	r2, r3
 19369 07c4 7B69     		ldr	r3, [r7, #20]
 19370 07c6 1344     		add	r3, r3, r2
 19371 07c8 6F4A     		ldr	r2, .L769+24
 19372 07ca 1D46     		mov	r5, r3
 19373 07cc 1446     		mov	r4, r2
 19374 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19375 07d0 2860     		str	r0, [r5]	@ unaligned
 19376 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 19377 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
 19378 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 19379 07d8 03CC     		ldmia	r4!, {r0, r1}
 19380 07da 2861     		str	r0, [r5, #16]	@ unaligned
 19381 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2632:..\src/command_processing.c ****                 break;
 19382              		.loc 1 2632 0
 19383 07de 1FE0     		b	.L730
 19384              	.L729:
2633:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2634:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19385              		.loc 1 2634 0
 19386 07e0 7869     		ldr	r0, [r7, #20]
 19387 07e2 FFF7FEFF 		bl	strlen
 19388 07e6 0346     		mov	r3, r0
 19389 07e8 1A46     		mov	r2, r3
 19390 07ea 7B69     		ldr	r3, [r7, #20]
 19391 07ec 1344     		add	r3, r3, r2
 19392 07ee 674A     		ldr	r2, .L769+28
 19393 07f0 1446     		mov	r4, r2
 19394 07f2 9E46     		mov	lr, r3
 19395 07f4 04F1200C 		add	ip, r4, #32
 19396              	.L731:
 19397 07f8 7546     		mov	r5, lr
 19398 07fa 2646     		mov	r6, r4
 19399 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19400 07fe 2860     		str	r0, [r5]	@ unaligned
 19401 0800 6960     		str	r1, [r5, #4]	@ unaligned
 19402 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 19403 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 19404 0806 1034     		adds	r4, r4, #16
 19405 0808 0EF1100E 		add	lr, lr, #16
 19406 080c 6445     		cmp	r4, ip
 19407 080e F3D1     		bne	.L731
 19408 0810 7346     		mov	r3, lr
 19409 0812 2246     		mov	r2, r4
 19410 0814 1068     		ldr	r0, [r2]	@ unaligned
 19411 0816 1860     		str	r0, [r3]	@ unaligned
 19412 0818 1279     		ldrb	r2, [r2, #4]
 19413 081a 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 429


2635:..\src/command_processing.c ****                 break;
 19414              		.loc 1 2635 0
 19415 081c 00E0     		b	.L730
 19416              	.L763:
2636:..\src/command_processing.c ****             default:
2637:..\src/command_processing.c ****                 break;
 19417              		.loc 1 2637 0
 19418 081e 00BF     		nop
 19419              	.L730:
2638:..\src/command_processing.c ****         }
2639:..\src/command_processing.c **** 
2640:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19420              		.loc 1 2640 0
 19421 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19422 0824 D7F88C10 		ldr	r1, [r7, #140]
 19423 0828 1346     		mov	r3, r2
 19424 082a 5B00     		lsls	r3, r3, #1
 19425 082c 1344     		add	r3, r3, r2
 19426 082e 1B01     		lsls	r3, r3, #4
 19427 0830 0B44     		add	r3, r3, r1
 19428 0832 03F5D873 		add	r3, r3, #432
 19429 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19430 0838 002B     		cmp	r3, #0
 19431 083a 1CD0     		beq	.L732
2641:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19432              		.loc 1 2641 0
 19433 083c 7869     		ldr	r0, [r7, #20]
 19434 083e FFF7FEFF 		bl	strlen
 19435 0842 0346     		mov	r3, r0
 19436 0844 1A46     		mov	r2, r3
 19437 0846 7B69     		ldr	r3, [r7, #20]
 19438 0848 1344     		add	r3, r3, r2
 19439 084a 514A     		ldr	r2, .L769+32
 19440 084c 1446     		mov	r4, r2
 19441 084e 9E46     		mov	lr, r3
 19442 0850 04F1200C 		add	ip, r4, #32
 19443              	.L733:
 19444 0854 7546     		mov	r5, lr
 19445 0856 2646     		mov	r6, r4
 19446 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19447 085a 2860     		str	r0, [r5]	@ unaligned
 19448 085c 6960     		str	r1, [r5, #4]	@ unaligned
 19449 085e AA60     		str	r2, [r5, #8]	@ unaligned
 19450 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 19451 0862 1034     		adds	r4, r4, #16
 19452 0864 0EF1100E 		add	lr, lr, #16
 19453 0868 6445     		cmp	r4, ip
 19454 086a F3D1     		bne	.L733
 19455 086c 7346     		mov	r3, lr
 19456 086e 2246     		mov	r2, r4
 19457 0870 1278     		ldrb	r2, [r2]
 19458 0872 1A70     		strb	r2, [r3]
 19459 0874 13E0     		b	.L734
 19460              	.L732:
2642:..\src/command_processing.c ****         else
2643:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19461              		.loc 1 2643 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 430


 19462 0876 7869     		ldr	r0, [r7, #20]
 19463 0878 FFF7FEFF 		bl	strlen
 19464 087c 0346     		mov	r3, r0
 19465 087e 1A46     		mov	r2, r3
 19466 0880 7B69     		ldr	r3, [r7, #20]
 19467 0882 1344     		add	r3, r3, r2
 19468 0884 434A     		ldr	r2, .L769+36
 19469 0886 1C46     		mov	r4, r3
 19470 0888 1546     		mov	r5, r2
 19471 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19472 088c 2060     		str	r0, [r4]	@ unaligned
 19473 088e 6160     		str	r1, [r4, #4]	@ unaligned
 19474 0890 A260     		str	r2, [r4, #8]	@ unaligned
 19475 0892 E360     		str	r3, [r4, #12]	@ unaligned
 19476 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19477 0896 2061     		str	r0, [r4, #16]	@ unaligned
 19478 0898 6161     		str	r1, [r4, #20]	@ unaligned
 19479 089a A261     		str	r2, [r4, #24]	@ unaligned
 19480 089c E361     		str	r3, [r4, #28]	@ unaligned
 19481              	.L734:
2644:..\src/command_processing.c **** 
2645:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19482              		.loc 1 2645 0
 19483 089e 7869     		ldr	r0, [r7, #20]
 19484 08a0 FFF7FEFF 		bl	strlen
 19485 08a4 0346     		mov	r3, r0
 19486 08a6 1A46     		mov	r2, r3
 19487 08a8 7B69     		ldr	r3, [r7, #20]
 19488 08aa 1344     		add	r3, r3, r2
 19489 08ac 3A4A     		ldr	r2, .L769+40
 19490 08ae 1C46     		mov	r4, r3
 19491 08b0 1346     		mov	r3, r2
 19492 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 19493 08b4 2060     		str	r0, [r4]	@ unaligned
 19494 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 19495 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 19496 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 19497 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2646:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19498              		.loc 1 2646 0
 19499 08be 0023     		movs	r3, #0
 19500 08c0 C7F89430 		str	r3, [r7, #148]
 19501 08c4 30E0     		b	.L735
 19502              	.L737:
2647:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19503              		.loc 1 2647 0
 19504 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19505 08ca D7F88C10 		ldr	r1, [r7, #140]
 19506 08ce 1346     		mov	r3, r2
 19507 08d0 5B00     		lsls	r3, r3, #1
 19508 08d2 1344     		add	r3, r3, r2
 19509 08d4 1B01     		lsls	r3, r3, #4
 19510 08d6 CA18     		adds	r2, r1, r3
 19511 08d8 D7F89430 		ldr	r3, [r7, #148]
 19512 08dc 1344     		add	r3, r3, r2
 19513 08de 03F29513 		addw	r3, r3, #405
 19514 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 431


 19515 08e4 1A46     		mov	r2, r3
 19516 08e6 07F11C03 		add	r3, r7, #28
 19517 08ea 2C49     		ldr	r1, .L769+44
 19518 08ec 1846     		mov	r0, r3
 19519 08ee FFF7FEFF 		bl	sprintf
2648:..\src/command_processing.c ****             strcat(info_string, str);
 19520              		.loc 1 2648 0
 19521 08f2 07F11C03 		add	r3, r7, #28
 19522 08f6 1946     		mov	r1, r3
 19523 08f8 7869     		ldr	r0, [r7, #20]
 19524 08fa FFF7FEFF 		bl	strcat
2649:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19525              		.loc 1 2649 0
 19526 08fe D7F89430 		ldr	r3, [r7, #148]
 19527 0902 022B     		cmp	r3, #2
 19528 0904 0BD0     		beq	.L736
2650:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19529              		.loc 1 2650 0
 19530 0906 7869     		ldr	r0, [r7, #20]
 19531 0908 FFF7FEFF 		bl	strlen
 19532 090c 0346     		mov	r3, r0
 19533 090e 1A46     		mov	r2, r3
 19534 0910 7B69     		ldr	r3, [r7, #20]
 19535 0912 1344     		add	r3, r3, r2
 19536 0914 224A     		ldr	r2, .L769+48
 19537 0916 1188     		ldrh	r1, [r2]	@ unaligned
 19538 0918 9278     		ldrb	r2, [r2, #2]
 19539 091a 1980     		strh	r1, [r3]	@ unaligned
 19540 091c 9A70     		strb	r2, [r3, #2]
 19541              	.L736:
2646:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19542              		.loc 1 2646 0 discriminator 2
 19543 091e D7F89430 		ldr	r3, [r7, #148]
 19544 0922 0133     		adds	r3, r3, #1
 19545 0924 C7F89430 		str	r3, [r7, #148]
 19546              	.L735:
2646:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19547              		.loc 1 2646 0 is_stmt 0 discriminator 1
 19548 0928 D7F89430 		ldr	r3, [r7, #148]
 19549 092c 022B     		cmp	r3, #2
 19550 092e CADD     		ble	.L737
2651:..\src/command_processing.c ****             }                
2652:..\src/command_processing.c ****         }
2653:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19551              		.loc 1 2653 0 is_stmt 1
 19552 0930 7869     		ldr	r0, [r7, #20]
 19553 0932 FFF7FEFF 		bl	strlen
 19554 0936 0346     		mov	r3, r0
 19555 0938 1A46     		mov	r2, r3
 19556 093a 7B69     		ldr	r3, [r7, #20]
 19557 093c 1344     		add	r3, r3, r2
 19558 093e 194A     		ldr	r2, .L769+52
 19559 0940 1188     		ldrh	r1, [r2]	@ unaligned
 19560 0942 9278     		ldrb	r2, [r2, #2]
 19561 0944 1980     		strh	r1, [r3]	@ unaligned
 19562 0946 9A70     		strb	r2, [r3, #2]
2654:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 432


2655:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19563              		.loc 1 2655 0
 19564 0948 7869     		ldr	r0, [r7, #20]
 19565 094a FFF7FEFF 		bl	strlen
 19566 094e 0346     		mov	r3, r0
 19567 0950 1A46     		mov	r2, r3
 19568 0952 7B69     		ldr	r3, [r7, #20]
 19569 0954 1344     		add	r3, r3, r2
 19570 0956 1449     		ldr	r1, .L769+56
 19571 0958 1A46     		mov	r2, r3
 19572 095a 0B46     		mov	r3, r1
 19573 095c 03CB     		ldmia	r3!, {r0, r1}
 19574 095e 1060     		str	r0, [r2]	@ unaligned
 19575 0960 5160     		str	r1, [r2, #4]	@ unaligned
 19576 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 19577 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2656:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19578              		.loc 1 2656 0
 19579 0966 0023     		movs	r3, #0
 19580 0968 C7F89430 		str	r3, [r7, #148]
 19581 096c 5EE0     		b	.L738
 19582              	.L770:
 19583 096e 00BF     		.align	2
 19584              	.L769:
 19585 0970 74150000 		.word	.LC202
 19586 0974 8C150000 		.word	.LC203
 19587 0978 A8150000 		.word	.LC204
 19588 097c C0150000 		.word	.LC205
 19589 0980 F0150000 		.word	.LC206
 19590 0984 0C160000 		.word	.LC207
 19591 0988 20160000 		.word	.LC208
 19592 098c 38160000 		.word	.LC209
 19593 0990 60160000 		.word	.LC210
 19594 0994 84160000 		.word	.LC211
 19595 0998 781D0000 		.word	.LC275
 19596 099c B4130000 		.word	.LC183
 19597 09a0 B8130000 		.word	.LC184
 19598 09a4 58110000 		.word	.LC152
 19599 09a8 881D0000 		.word	.LC276
 19600              	.L740:
2657:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19601              		.loc 1 2657 0
 19602 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19603 09b0 D7F88C10 		ldr	r1, [r7, #140]
 19604 09b4 1346     		mov	r3, r2
 19605 09b6 5B00     		lsls	r3, r3, #1
 19606 09b8 1344     		add	r3, r3, r2
 19607 09ba 9B00     		lsls	r3, r3, #2
 19608 09bc D7F89420 		ldr	r2, [r7, #148]
 19609 09c0 1344     		add	r3, r3, r2
 19610 09c2 6633     		adds	r3, r3, #102
 19611 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19612 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19613 09cc D7F88C00 		ldr	r0, [r7, #140]
 19614 09d0 1346     		mov	r3, r2
 19615 09d2 5B00     		lsls	r3, r3, #1
 19616 09d4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 433


 19617 09d6 1B01     		lsls	r3, r3, #4
 19618 09d8 C218     		adds	r2, r0, r3
 19619 09da D7F89430 		ldr	r3, [r7, #148]
 19620 09de 1344     		add	r3, r3, r2
 19621 09e0 03F29513 		addw	r3, r3, #405
 19622 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19623 09e6 41FA03F2 		asr	r2, r1, r3
 19624 09ea 07F11C03 		add	r3, r7, #28
 19625 09ee CF49     		ldr	r1, .L771
 19626 09f0 1846     		mov	r0, r3
 19627 09f2 FFF7FEFF 		bl	sprintf
2658:..\src/command_processing.c ****             strcat(info_string, str);
 19628              		.loc 1 2658 0
 19629 09f6 07F11C03 		add	r3, r7, #28
 19630 09fa 1946     		mov	r1, r3
 19631 09fc 7869     		ldr	r0, [r7, #20]
 19632 09fe FFF7FEFF 		bl	strcat
2659:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19633              		.loc 1 2659 0
 19634 0a02 D7F89430 		ldr	r3, [r7, #148]
 19635 0a06 022B     		cmp	r3, #2
 19636 0a08 0BD0     		beq	.L739
2660:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19637              		.loc 1 2660 0
 19638 0a0a 7869     		ldr	r0, [r7, #20]
 19639 0a0c FFF7FEFF 		bl	strlen
 19640 0a10 0346     		mov	r3, r0
 19641 0a12 1A46     		mov	r2, r3
 19642 0a14 7B69     		ldr	r3, [r7, #20]
 19643 0a16 1344     		add	r3, r3, r2
 19644 0a18 C54A     		ldr	r2, .L771+4
 19645 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 19646 0a1c 9278     		ldrb	r2, [r2, #2]
 19647 0a1e 1980     		strh	r1, [r3]	@ unaligned
 19648 0a20 9A70     		strb	r2, [r3, #2]
 19649              	.L739:
2656:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19650              		.loc 1 2656 0 discriminator 2
 19651 0a22 D7F89430 		ldr	r3, [r7, #148]
 19652 0a26 0133     		adds	r3, r3, #1
 19653 0a28 C7F89430 		str	r3, [r7, #148]
 19654              	.L738:
2656:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19655              		.loc 1 2656 0 is_stmt 0 discriminator 1
 19656 0a2c D7F89430 		ldr	r3, [r7, #148]
 19657 0a30 022B     		cmp	r3, #2
 19658 0a32 BBDD     		ble	.L740
2661:..\src/command_processing.c ****             }
2662:..\src/command_processing.c ****         }
2663:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19659              		.loc 1 2663 0 is_stmt 1
 19660 0a34 7869     		ldr	r0, [r7, #20]
 19661 0a36 FFF7FEFF 		bl	strlen
 19662 0a3a 0346     		mov	r3, r0
 19663 0a3c 1A46     		mov	r2, r3
 19664 0a3e 7B69     		ldr	r3, [r7, #20]
 19665 0a40 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 434


 19666 0a42 BC4A     		ldr	r2, .L771+8
 19667 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 19668 0a46 9278     		ldrb	r2, [r2, #2]
 19669 0a48 1980     		strh	r1, [r3]	@ unaligned
 19670 0a4a 9A70     		strb	r2, [r3, #2]
2664:..\src/command_processing.c ****             
2665:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19671              		.loc 1 2665 0
 19672 0a4c 7869     		ldr	r0, [r7, #20]
 19673 0a4e FFF7FEFF 		bl	strlen
 19674 0a52 0346     		mov	r3, r0
 19675 0a54 1A46     		mov	r2, r3
 19676 0a56 7B69     		ldr	r3, [r7, #20]
 19677 0a58 1344     		add	r3, r3, r2
 19678 0a5a B74A     		ldr	r2, .L771+12
 19679 0a5c 1C46     		mov	r4, r3
 19680 0a5e 1346     		mov	r3, r2
 19681 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
 19682 0a62 2060     		str	r0, [r4]	@ unaligned
 19683 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 19684 0a66 A260     		str	r2, [r4, #8]	@ unaligned
 19685 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 19686 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2666:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19687              		.loc 1 2666 0
 19688 0a6c 0023     		movs	r3, #0
 19689 0a6e C7F89430 		str	r3, [r7, #148]
 19690 0a72 35E0     		b	.L741
 19691              	.L743:
2667:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19692              		.loc 1 2667 0
 19693 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19694 0a78 D7F88C10 		ldr	r1, [r7, #140]
 19695 0a7c 1346     		mov	r3, r2
 19696 0a7e 5B00     		lsls	r3, r3, #1
 19697 0a80 1344     		add	r3, r3, r2
 19698 0a82 9B00     		lsls	r3, r3, #2
 19699 0a84 D7F89420 		ldr	r2, [r7, #148]
 19700 0a88 1344     		add	r3, r3, r2
 19701 0a8a 6833     		adds	r3, r3, #104
 19702 0a8c 9B00     		lsls	r3, r3, #2
 19703 0a8e 0B44     		add	r3, r3, r1
 19704 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 19705 0a92 1846     		mov	r0, r3
 19706 0a94 FFF7FEFF 		bl	__aeabi_f2d
 19707 0a98 0346     		mov	r3, r0
 19708 0a9a 0C46     		mov	r4, r1
 19709 0a9c 07F11C00 		add	r0, r7, #28
 19710 0aa0 1A46     		mov	r2, r3
 19711 0aa2 2346     		mov	r3, r4
 19712 0aa4 A549     		ldr	r1, .L771+16
 19713 0aa6 FFF7FEFF 		bl	sprintf
2668:..\src/command_processing.c ****             strcat(info_string, str);
 19714              		.loc 1 2668 0
 19715 0aaa 07F11C03 		add	r3, r7, #28
 19716 0aae 1946     		mov	r1, r3
 19717 0ab0 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 435


 19718 0ab2 FFF7FEFF 		bl	strcat
2669:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19719              		.loc 1 2669 0
 19720 0ab6 D7F89430 		ldr	r3, [r7, #148]
 19721 0aba 022B     		cmp	r3, #2
 19722 0abc 0BD0     		beq	.L742
2670:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19723              		.loc 1 2670 0
 19724 0abe 7869     		ldr	r0, [r7, #20]
 19725 0ac0 FFF7FEFF 		bl	strlen
 19726 0ac4 0346     		mov	r3, r0
 19727 0ac6 1A46     		mov	r2, r3
 19728 0ac8 7B69     		ldr	r3, [r7, #20]
 19729 0aca 1344     		add	r3, r3, r2
 19730 0acc 984A     		ldr	r2, .L771+4
 19731 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 19732 0ad0 9278     		ldrb	r2, [r2, #2]
 19733 0ad2 1980     		strh	r1, [r3]	@ unaligned
 19734 0ad4 9A70     		strb	r2, [r3, #2]
 19735              	.L742:
2666:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19736              		.loc 1 2666 0 discriminator 2
 19737 0ad6 D7F89430 		ldr	r3, [r7, #148]
 19738 0ada 0133     		adds	r3, r3, #1
 19739 0adc C7F89430 		str	r3, [r7, #148]
 19740              	.L741:
2666:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19741              		.loc 1 2666 0 is_stmt 0 discriminator 1
 19742 0ae0 D7F89430 		ldr	r3, [r7, #148]
 19743 0ae4 022B     		cmp	r3, #2
 19744 0ae6 C5DD     		ble	.L743
2671:..\src/command_processing.c ****             }
2672:..\src/command_processing.c ****         }
2673:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19745              		.loc 1 2673 0 is_stmt 1
 19746 0ae8 7869     		ldr	r0, [r7, #20]
 19747 0aea FFF7FEFF 		bl	strlen
 19748 0aee 0346     		mov	r3, r0
 19749 0af0 1A46     		mov	r2, r3
 19750 0af2 7B69     		ldr	r3, [r7, #20]
 19751 0af4 1344     		add	r3, r3, r2
 19752 0af6 8F4A     		ldr	r2, .L771+8
 19753 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 19754 0afa 9278     		ldrb	r2, [r2, #2]
 19755 0afc 1980     		strh	r1, [r3]	@ unaligned
 19756 0afe 9A70     		strb	r2, [r3, #2]
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19757              		.loc 1 2675 0
 19758 0b00 D7F88430 		ldr	r3, [r7, #132]
 19759 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 19760 0b06 1846     		mov	r0, r3
 19761 0b08 FFF7FEFF 		bl	__aeabi_f2d
 19762 0b0c C7E90201 		strd	r0, [r7, #8]
 19763 0b10 D7F88430 		ldr	r3, [r7, #132]
 19764 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 19765 0b16 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 436


 19766 0b18 FFF7FEFF 		bl	__aeabi_f2d
 19767 0b1c 0446     		mov	r4, r0
 19768 0b1e 0D46     		mov	r5, r1
 19769 0b20 D7F88430 		ldr	r3, [r7, #132]
 19770 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 19771 0b26 1846     		mov	r0, r3
 19772 0b28 FFF7FEFF 		bl	__aeabi_f2d
 19773 0b2c 8046     		mov	r8, r0
 19774 0b2e 8946     		mov	r9, r1
 19775 0b30 D7F88430 		ldr	r3, [r7, #132]
 19776 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 19777 0b36 1846     		mov	r0, r3
 19778 0b38 FFF7FEFF 		bl	__aeabi_f2d
 19779 0b3c 8246     		mov	r10, r0
 19780 0b3e 8B46     		mov	fp, r1
 19781 0b40 D7F88430 		ldr	r3, [r7, #132]
 19782 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 19783 0b46 1846     		mov	r0, r3
 19784 0b48 FFF7FEFF 		bl	__aeabi_f2d
 19785 0b4c C7E90001 		strd	r0, [r7]
 19786 0b50 D7F88430 		ldr	r3, [r7, #132]
 19787 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 19788 0b56 1846     		mov	r0, r3
 19789 0b58 FFF7FEFF 		bl	__aeabi_f2d
 19790 0b5c 0246     		mov	r2, r0
 19791 0b5e 0B46     		mov	r3, r1
 19792 0b60 07F11C00 		add	r0, r7, #28
 19793 0b64 CDE90823 		strd	r2, [sp, #32]
 19794 0b68 D7E90012 		ldrd	r1, [r7]
 19795 0b6c CDE90612 		strd	r1, [sp, #24]
 19796 0b70 CDE904AB 		strd	r10, [sp, #16]
 19797 0b74 CDE90289 		strd	r8, [sp, #8]
 19798 0b78 CDE90045 		strd	r4, [sp]
 19799 0b7c D7E90223 		ldrd	r2, [r7, #8]
 19800 0b80 6F49     		ldr	r1, .L771+20
 19801 0b82 FFF7FEFF 		bl	sprintf
2676:..\src/command_processing.c **** 		strcat(info_string, str);
 19802              		.loc 1 2676 0
 19803 0b86 07F11C03 		add	r3, r7, #28
 19804 0b8a 1946     		mov	r1, r3
 19805 0b8c 7869     		ldr	r0, [r7, #20]
 19806 0b8e FFF7FEFF 		bl	strcat
2677:..\src/command_processing.c **** 
2678:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19807              		.loc 1 2678 0
 19808 0b92 D7F88430 		ldr	r3, [r7, #132]
 19809 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19810 0b9a 1A46     		mov	r2, r3
 19811 0b9c 07F11C03 		add	r3, r7, #28
 19812 0ba0 6849     		ldr	r1, .L771+24
 19813 0ba2 1846     		mov	r0, r3
 19814 0ba4 FFF7FEFF 		bl	sprintf
2679:..\src/command_processing.c **** 		strcat(info_string, str);
 19815              		.loc 1 2679 0
 19816 0ba8 07F11C03 		add	r3, r7, #28
 19817 0bac 1946     		mov	r1, r3
 19818 0bae 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 437


 19819 0bb0 FFF7FEFF 		bl	strcat
2680:..\src/command_processing.c **** 
2681:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19820              		.loc 1 2681 0
 19821 0bb4 D7F88430 		ldr	r3, [r7, #132]
 19822 0bb8 596B     		ldr	r1, [r3, #52]
 19823 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19824 0bbe D7F88C00 		ldr	r0, [r7, #140]
 19825 0bc2 1346     		mov	r3, r2
 19826 0bc4 5B00     		lsls	r3, r3, #1
 19827 0bc6 1344     		add	r3, r3, r2
 19828 0bc8 1B01     		lsls	r3, r3, #4
 19829 0bca 0344     		add	r3, r3, r0
 19830 0bcc 03F29513 		addw	r3, r3, #405
 19831 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19832 0bd2 41FA03F4 		asr	r4, r1, r3
 19833 0bd6 D7F88430 		ldr	r3, [r7, #132]
 19834 0bda 996B     		ldr	r1, [r3, #56]
 19835 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19836 0be0 D7F88C00 		ldr	r0, [r7, #140]
 19837 0be4 1346     		mov	r3, r2
 19838 0be6 5B00     		lsls	r3, r3, #1
 19839 0be8 1344     		add	r3, r3, r2
 19840 0bea 1B01     		lsls	r3, r3, #4
 19841 0bec 0344     		add	r3, r3, r0
 19842 0bee 03F29513 		addw	r3, r3, #405
 19843 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19844 0bf4 41FA03F3 		asr	r3, r1, r3
 19845 0bf8 07F11C00 		add	r0, r7, #28
 19846 0bfc 2246     		mov	r2, r4
 19847 0bfe 5249     		ldr	r1, .L771+28
 19848 0c00 FFF7FEFF 		bl	sprintf
2682:..\src/command_processing.c **** 		strcat(info_string, str);
 19849              		.loc 1 2682 0
 19850 0c04 07F11C03 		add	r3, r7, #28
 19851 0c08 1946     		mov	r1, r3
 19852 0c0a 7869     		ldr	r0, [r7, #20]
 19853 0c0c FFF7FEFF 		bl	strcat
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19854              		.loc 1 2684 0
 19855 0c10 D7F88430 		ldr	r3, [r7, #132]
 19856 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 19857 0c18 1A46     		mov	r2, r3
 19858 0c1a 07F11C03 		add	r3, r7, #28
 19859 0c1e 4B49     		ldr	r1, .L771+32
 19860 0c20 1846     		mov	r0, r3
 19861 0c22 FFF7FEFF 		bl	sprintf
2685:..\src/command_processing.c **** 		strcat(info_string, str);
 19862              		.loc 1 2685 0
 19863 0c26 07F11C03 		add	r3, r7, #28
 19864 0c2a 1946     		mov	r1, r3
 19865 0c2c 7869     		ldr	r0, [r7, #20]
 19866 0c2e FFF7FEFF 		bl	strcat
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 19867              		.loc 1 2687 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 438


 19868 0c32 D7F88430 		ldr	r3, [r7, #132]
 19869 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19870 0c3a 022B     		cmp	r3, #2
 19871 0c3c 18D0     		beq	.L744
2688:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19872              		.loc 1 2688 0 discriminator 1
 19873 0c3e D7F88430 		ldr	r3, [r7, #132]
 19874 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2687:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19875              		.loc 1 2687 0 discriminator 1
 19876 0c46 032B     		cmp	r3, #3
 19877 0c48 12D0     		beq	.L744
2689:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19878              		.loc 1 2689 0
 19879 0c4a D7F88430 		ldr	r3, [r7, #132]
 19880 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2688:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19881              		.loc 1 2688 0
 19882 0c52 042B     		cmp	r3, #4
 19883 0c54 0CD0     		beq	.L744
2690:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19884              		.loc 1 2690 0
 19885 0c56 D7F88430 		ldr	r3, [r7, #132]
 19886 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2689:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19887              		.loc 1 2689 0
 19888 0c5e 052B     		cmp	r3, #5
 19889 0c60 06D0     		beq	.L744
2691:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 19890              		.loc 1 2691 0
 19891 0c62 D7F88430 		ldr	r3, [r7, #132]
 19892 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2690:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19893              		.loc 1 2690 0
 19894 0c6a 072B     		cmp	r3, #7
 19895 0c6c 40F0AA80 		bne	.L745
 19896              	.L744:
2692:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19897              		.loc 1 2692 0
 19898 0c70 D7F88C30 		ldr	r3, [r7, #140]
 19899 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 19900 0c78 1A46     		mov	r2, r3
 19901 0c7a D7F88C30 		ldr	r3, [r7, #140]
 19902 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 19903 0c82 07F11C00 		add	r0, r7, #28
 19904 0c86 3249     		ldr	r1, .L771+36
 19905 0c88 FFF7FEFF 		bl	sprintf
2693:..\src/command_processing.c **** 			strcat(info_string, str);
 19906              		.loc 1 2693 0
 19907 0c8c 07F11C03 		add	r3, r7, #28
 19908 0c90 1946     		mov	r1, r3
 19909 0c92 7869     		ldr	r0, [r7, #20]
 19910 0c94 FFF7FEFF 		bl	strcat
2694:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19911              		.loc 1 2694 0
 19912 0c98 7869     		ldr	r0, [r7, #20]
 19913 0c9a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 439


 19914 0c9e 0346     		mov	r3, r0
 19915 0ca0 1A46     		mov	r2, r3
 19916 0ca2 7B69     		ldr	r3, [r7, #20]
 19917 0ca4 1344     		add	r3, r3, r2
 19918 0ca6 234A     		ldr	r2, .L771+8
 19919 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 19920 0caa 9278     		ldrb	r2, [r2, #2]
 19921 0cac 1980     		strh	r1, [r3]	@ unaligned
 19922 0cae 9A70     		strb	r2, [r3, #2]
2695:..\src/command_processing.c **** 
2696:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 19923              		.loc 1 2696 0
 19924 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 19925 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 19926 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 19927 0cbc D3F8F831 		ldr	r3, [r3, #504]
 19928 0cc0 07F11C00 		add	r0, r7, #28
 19929 0cc4 2349     		ldr	r1, .L771+40
 19930 0cc6 FFF7FEFF 		bl	sprintf
2697:..\src/command_processing.c **** 			strcat(info_string, str);
 19931              		.loc 1 2697 0
 19932 0cca 07F11C03 		add	r3, r7, #28
 19933 0cce 1946     		mov	r1, r3
 19934 0cd0 7869     		ldr	r0, [r7, #20]
 19935 0cd2 FFF7FEFF 		bl	strcat
2698:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19936              		.loc 1 2698 0
 19937 0cd6 7869     		ldr	r0, [r7, #20]
 19938 0cd8 FFF7FEFF 		bl	strlen
 19939 0cdc 0346     		mov	r3, r0
 19940 0cde 1A46     		mov	r2, r3
 19941 0ce0 7B69     		ldr	r3, [r7, #20]
 19942 0ce2 1344     		add	r3, r3, r2
 19943 0ce4 134A     		ldr	r2, .L771+8
 19944 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 19945 0ce8 9278     		ldrb	r2, [r2, #2]
 19946 0cea 1980     		strh	r1, [r3]	@ unaligned
 19947 0cec 9A70     		strb	r2, [r3, #2]
2699:..\src/command_processing.c **** 
2700:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 19948              		.loc 1 2700 0
 19949 0cee D7F88C30 		ldr	r3, [r7, #140]
 19950 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 19951 0cf6 002B     		cmp	r3, #0
 19952 0cf8 30D0     		beq	.L746
2701:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 19953              		.loc 1 2701 0
 19954 0cfa 7869     		ldr	r0, [r7, #20]
 19955 0cfc FFF7FEFF 		bl	strlen
 19956 0d00 0346     		mov	r3, r0
 19957 0d02 1A46     		mov	r2, r3
 19958 0d04 7B69     		ldr	r3, [r7, #20]
 19959 0d06 1344     		add	r3, r3, r2
 19960 0d08 134A     		ldr	r2, .L771+44
 19961 0d0a 1D46     		mov	r5, r3
 19962 0d0c 1446     		mov	r4, r2
 19963 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 440


 19964 0d10 2860     		str	r0, [r5]	@ unaligned
 19965 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 19966 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 19967 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 19968 0d18 03CC     		ldmia	r4!, {r0, r1}
 19969 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 19970 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 19971 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
 19972 0d20 A278     		ldrb	r2, [r4, #2]
 19973 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 19974 0d24 1346     		mov	r3, r2
 19975 0d26 AB76     		strb	r3, [r5, #26]
 19976 0d28 2CE0     		b	.L747
 19977              	.L772:
 19978 0d2a 00BF     		.align	2
 19979              	.L771:
 19980 0d2c EC160000 		.word	.LC215
 19981 0d30 B8130000 		.word	.LC184
 19982 0d34 58110000 		.word	.LC152
 19983 0d38 941D0000 		.word	.LC277
 19984 0d3c 0C170000 		.word	.LC217
 19985 0d40 A41D0000 		.word	.LC278
 19986 0d44 E01D0000 		.word	.LC279
 19987 0d48 FC1D0000 		.word	.LC280
 19988 0d4c AC170000 		.word	.LC223
 19989 0d50 D4170000 		.word	.LC225
 19990 0d54 F8170000 		.word	.LC226
 19991 0d58 48180000 		.word	.LC229
 19992              	.L746:
2702:..\src/command_processing.c **** 			else
2703:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 19993              		.loc 1 2703 0
 19994 0d5c 7869     		ldr	r0, [r7, #20]
 19995 0d5e FFF7FEFF 		bl	strlen
 19996 0d62 0346     		mov	r3, r0
 19997 0d64 1A46     		mov	r2, r3
 19998 0d66 7B69     		ldr	r3, [r7, #20]
 19999 0d68 1344     		add	r3, r3, r2
 20000 0d6a D04A     		ldr	r2, .L773
 20001 0d6c 1D46     		mov	r5, r3
 20002 0d6e 1446     		mov	r4, r2
 20003 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20004 0d72 2860     		str	r0, [r5]	@ unaligned
 20005 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 20006 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 20007 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 20008 0d7a 03CC     		ldmia	r4!, {r0, r1}
 20009 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 20010 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 20011 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 20012 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 20013              	.L747:
2704:..\src/command_processing.c **** 
2705:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20014              		.loc 1 2705 0
 20015 0d84 D7F88C30 		ldr	r3, [r7, #140]
 20016 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 441


 20017 0d8c 1A46     		mov	r2, r3
 20018 0d8e D7F88C30 		ldr	r3, [r7, #140]
 20019 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20020 0d96 07F11C00 		add	r0, r7, #28
 20021 0d9a C549     		ldr	r1, .L773+4
 20022 0d9c FFF7FEFF 		bl	sprintf
2706:..\src/command_processing.c **** 			strcat(info_string, str);
 20023              		.loc 1 2706 0
 20024 0da0 07F11C03 		add	r3, r7, #28
 20025 0da4 1946     		mov	r1, r3
 20026 0da6 7869     		ldr	r0, [r7, #20]
 20027 0da8 FFF7FEFF 		bl	strcat
2707:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20028              		.loc 1 2707 0
 20029 0dac 7869     		ldr	r0, [r7, #20]
 20030 0dae FFF7FEFF 		bl	strlen
 20031 0db2 0346     		mov	r3, r0
 20032 0db4 1A46     		mov	r2, r3
 20033 0db6 7B69     		ldr	r3, [r7, #20]
 20034 0db8 1344     		add	r3, r3, r2
 20035 0dba BE4A     		ldr	r2, .L773+8
 20036 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 20037 0dbe 9278     		ldrb	r2, [r2, #2]
 20038 0dc0 1980     		strh	r1, [r3]	@ unaligned
 20039 0dc2 9A70     		strb	r2, [r3, #2]
 20040              	.L745:
 20041              	.LBE28:
2537:..\src/command_processing.c ****             
 20042              		.loc 1 2537 0 discriminator 2
 20043 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20044 0dc8 0133     		adds	r3, r3, #1
 20045 0dca 87F89330 		strb	r3, [r7, #147]
 20046              	.L704:
2537:..\src/command_processing.c ****             
 20047              		.loc 1 2537 0 is_stmt 0 discriminator 1
 20048 0dce D7F88C30 		ldr	r3, [r7, #140]
 20049 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20050 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20051 0dda 9A42     		cmp	r2, r3
 20052 0ddc 7FF699A9 		bls	.L748
 20053              	.LBE27:
2708:..\src/command_processing.c **** 		}
2709:..\src/command_processing.c **** 	}
2710:..\src/command_processing.c **** 	 
2711:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20054              		.loc 1 2711 0 is_stmt 1
 20055 0de0 D7F88C30 		ldr	r3, [r7, #140]
 20056 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20057 0de8 002B     		cmp	r3, #0
 20058 0dea 63D0     		beq	.L749
2712:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20059              		.loc 1 2712 0
 20060 0dec D7F88C30 		ldr	r3, [r7, #140]
 20061 0df0 D3F8A422 		ldr	r2, [r3, #676]
 20062 0df4 07F11C03 		add	r3, r7, #28
 20063 0df8 AF49     		ldr	r1, .L773+12
 20064 0dfa 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 442


 20065 0dfc FFF7FEFF 		bl	sprintf
2713:..\src/command_processing.c ****         strcat(info_string, str);
 20066              		.loc 1 2713 0
 20067 0e00 07F11C03 		add	r3, r7, #28
 20068 0e04 1946     		mov	r1, r3
 20069 0e06 7869     		ldr	r0, [r7, #20]
 20070 0e08 FFF7FEFF 		bl	strcat
2714:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20071              		.loc 1 2714 0
 20072 0e0c 7869     		ldr	r0, [r7, #20]
 20073 0e0e FFF7FEFF 		bl	strlen
 20074 0e12 0346     		mov	r3, r0
 20075 0e14 1A46     		mov	r2, r3
 20076 0e16 7B69     		ldr	r3, [r7, #20]
 20077 0e18 1344     		add	r3, r3, r2
 20078 0e1a A64A     		ldr	r2, .L773+8
 20079 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 20080 0e1e 9278     		ldrb	r2, [r2, #2]
 20081 0e20 1980     		strh	r1, [r3]	@ unaligned
 20082 0e22 9A70     		strb	r2, [r3, #2]
2715:..\src/command_processing.c ****         
2716:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20083              		.loc 1 2716 0
 20084 0e24 D7F88C30 		ldr	r3, [r7, #140]
 20085 0e28 D3F8A822 		ldr	r2, [r3, #680]
 20086 0e2c 07F11C03 		add	r3, r7, #28
 20087 0e30 A249     		ldr	r1, .L773+16
 20088 0e32 1846     		mov	r0, r3
 20089 0e34 FFF7FEFF 		bl	sprintf
2717:..\src/command_processing.c ****         strcat(info_string, str);
 20090              		.loc 1 2717 0
 20091 0e38 07F11C03 		add	r3, r7, #28
 20092 0e3c 1946     		mov	r1, r3
 20093 0e3e 7869     		ldr	r0, [r7, #20]
 20094 0e40 FFF7FEFF 		bl	strcat
2718:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20095              		.loc 1 2718 0
 20096 0e44 7869     		ldr	r0, [r7, #20]
 20097 0e46 FFF7FEFF 		bl	strlen
 20098 0e4a 0346     		mov	r3, r0
 20099 0e4c 1A46     		mov	r2, r3
 20100 0e4e 7B69     		ldr	r3, [r7, #20]
 20101 0e50 1344     		add	r3, r3, r2
 20102 0e52 984A     		ldr	r2, .L773+8
 20103 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 20104 0e56 9278     		ldrb	r2, [r2, #2]
 20105 0e58 1980     		strh	r1, [r3]	@ unaligned
 20106 0e5a 9A70     		strb	r2, [r3, #2]
2719:..\src/command_processing.c ****         
2720:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20107              		.loc 1 2720 0
 20108 0e5c D7F88C30 		ldr	r3, [r7, #140]
 20109 0e60 D3F8A022 		ldr	r2, [r3, #672]
 20110 0e64 D7F88C30 		ldr	r3, [r7, #140]
 20111 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20112 0e6c 1846     		mov	r0, r3
 20113 0e6e D7F88C10 		ldr	r1, [r7, #140]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 443


 20114 0e72 0346     		mov	r3, r0
 20115 0e74 5B00     		lsls	r3, r3, #1
 20116 0e76 0344     		add	r3, r3, r0
 20117 0e78 1B01     		lsls	r3, r3, #4
 20118 0e7a 0B44     		add	r3, r3, r1
 20119 0e7c 03F29513 		addw	r3, r3, #405
 20120 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20121 0e82 1A41     		asrs	r2, r2, r3
 20122 0e84 07F11C03 		add	r3, r7, #28
 20123 0e88 8D49     		ldr	r1, .L773+20
 20124 0e8a 1846     		mov	r0, r3
 20125 0e8c FFF7FEFF 		bl	sprintf
2721:..\src/command_processing.c ****         strcat(info_string, str);
 20126              		.loc 1 2721 0
 20127 0e90 07F11C03 		add	r3, r7, #28
 20128 0e94 1946     		mov	r1, r3
 20129 0e96 7869     		ldr	r0, [r7, #20]
 20130 0e98 FFF7FEFF 		bl	strcat
2722:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20131              		.loc 1 2722 0
 20132 0e9c 7869     		ldr	r0, [r7, #20]
 20133 0e9e FFF7FEFF 		bl	strlen
 20134 0ea2 0346     		mov	r3, r0
 20135 0ea4 1A46     		mov	r2, r3
 20136 0ea6 7B69     		ldr	r3, [r7, #20]
 20137 0ea8 1344     		add	r3, r3, r2
 20138 0eaa 824A     		ldr	r2, .L773+8
 20139 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 20140 0eae 9278     		ldrb	r2, [r2, #2]
 20141 0eb0 1980     		strh	r1, [r3]	@ unaligned
 20142 0eb2 9A70     		strb	r2, [r3, #2]
 20143              	.L749:
2723:..\src/command_processing.c ****     }
2724:..\src/command_processing.c **** 	
2725:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20144              		.loc 1 2725 0
 20145 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 20146 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20147 0ebc 002B     		cmp	r3, #0
 20148 0ebe 00F0CB81 		beq	.L764
2726:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20149              		.loc 1 2726 0
 20150 0ec2 804B     		ldr	r3, .L773+24
 20151 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20152 0ec6 1A46     		mov	r2, r3
 20153 0ec8 07F11C03 		add	r3, r7, #28
 20154 0ecc 7E49     		ldr	r1, .L773+28
 20155 0ece 1846     		mov	r0, r3
 20156 0ed0 FFF7FEFF 		bl	sprintf
2727:..\src/command_processing.c **** 		strcat(info_string, str);
 20157              		.loc 1 2727 0
 20158 0ed4 07F11C03 		add	r3, r7, #28
 20159 0ed8 1946     		mov	r1, r3
 20160 0eda 7869     		ldr	r0, [r7, #20]
 20161 0edc FFF7FEFF 		bl	strcat
2728:..\src/command_processing.c **** 		
2729:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 444


 20162              		.loc 1 2729 0
 20163 0ee0 7869     		ldr	r0, [r7, #20]
 20164 0ee2 FFF7FEFF 		bl	strlen
 20165 0ee6 0346     		mov	r3, r0
 20166 0ee8 1A46     		mov	r2, r3
 20167 0eea 7B69     		ldr	r3, [r7, #20]
 20168 0eec 1344     		add	r3, r3, r2
 20169 0eee 714A     		ldr	r2, .L773+8
 20170 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 20171 0ef2 9278     		ldrb	r2, [r2, #2]
 20172 0ef4 1980     		strh	r1, [r3]	@ unaligned
 20173 0ef6 9A70     		strb	r2, [r3, #2]
2730:..\src/command_processing.c **** 		
2731:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20174              		.loc 1 2731 0
 20175 0ef8 7869     		ldr	r0, [r7, #20]
 20176 0efa FFF7FEFF 		bl	strlen
 20177 0efe 0346     		mov	r3, r0
 20178 0f00 1A46     		mov	r2, r3
 20179 0f02 7B69     		ldr	r3, [r7, #20]
 20180 0f04 1344     		add	r3, r3, r2
 20181 0f06 714A     		ldr	r2, .L773+32
 20182 0f08 1D46     		mov	r5, r3
 20183 0f0a 1446     		mov	r4, r2
 20184 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20185 0f0e 2860     		str	r0, [r5]	@ unaligned
 20186 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 20187 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 20188 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 20189 0f16 2068     		ldr	r0, [r4]	@ unaligned
 20190 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 20191 0f1a 2379     		ldrb	r3, [r4, #4]
 20192 0f1c 2B75     		strb	r3, [r5, #20]
2732:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20193              		.loc 1 2732 0
 20194 0f1e 0023     		movs	r3, #0
 20195 0f20 C7F89430 		str	r3, [r7, #148]
 20196 0f24 84E1     		b	.L751
 20197              	.L762:
2733:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20198              		.loc 1 2733 0
 20199 0f26 6A4A     		ldr	r2, .L773+36
 20200 0f28 D7F89430 		ldr	r3, [r7, #148]
 20201 0f2c 1344     		add	r3, r3, r2
 20202 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20203 0f30 07F11C00 		add	r0, r7, #28
 20204 0f34 D7F89420 		ldr	r2, [r7, #148]
 20205 0f38 6649     		ldr	r1, .L773+40
 20206 0f3a FFF7FEFF 		bl	sprintf
2734:..\src/command_processing.c **** 			strcat(info_string, str);
 20207              		.loc 1 2734 0
 20208 0f3e 07F11C03 		add	r3, r7, #28
 20209 0f42 1946     		mov	r1, r3
 20210 0f44 7869     		ldr	r0, [r7, #20]
 20211 0f46 FFF7FEFF 		bl	strcat
2735:..\src/command_processing.c **** 			
2736:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 445


 20212              		.loc 1 2736 0
 20213 0f4a 07F11C03 		add	r3, r7, #28
 20214 0f4e 624A     		ldr	r2, .L773+44
 20215 0f50 1C46     		mov	r4, r3
 20216 0f52 1546     		mov	r5, r2
 20217 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20218 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20219 0f58 2B68     		ldr	r3, [r5]
 20220 0f5a 2380     		strh	r3, [r4]	@ movhi
2737:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20221              		.loc 1 2737 0
 20222 0f5c 5C4A     		ldr	r2, .L773+36
 20223 0f5e D7F89430 		ldr	r3, [r7, #148]
 20224 0f62 1344     		add	r3, r3, r2
 20225 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20226 0f66 1946     		mov	r1, r3
 20227 0f68 D7F88C20 		ldr	r2, [r7, #140]
 20228 0f6c 0B46     		mov	r3, r1
 20229 0f6e 9B00     		lsls	r3, r3, #2
 20230 0f70 0B44     		add	r3, r3, r1
 20231 0f72 1344     		add	r3, r3, r2
 20232 0f74 03F20223 		addw	r3, r3, #514
 20233 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20234 0f7a 002B     		cmp	r3, #0
 20235 0f7c 0FD0     		beq	.L752
2738:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20236              		.loc 1 2738 0
 20237 0f7e 07F11C03 		add	r3, r7, #28
 20238 0f82 1846     		mov	r0, r3
 20239 0f84 FFF7FEFF 		bl	strlen
 20240 0f88 0346     		mov	r3, r0
 20241 0f8a 1A46     		mov	r2, r3
 20242 0f8c 07F11C03 		add	r3, r7, #28
 20243 0f90 1344     		add	r3, r3, r2
 20244 0f92 524A     		ldr	r2, .L773+48
 20245 0f94 1068     		ldr	r0, [r2]	@ unaligned
 20246 0f96 1860     		str	r0, [r3]	@ unaligned
 20247 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20248 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20249 0f9c 0EE0     		b	.L753
 20250              	.L752:
2739:..\src/command_processing.c **** 			else
2740:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20251              		.loc 1 2740 0
 20252 0f9e 07F11C03 		add	r3, r7, #28
 20253 0fa2 1846     		mov	r0, r3
 20254 0fa4 FFF7FEFF 		bl	strlen
 20255 0fa8 0346     		mov	r3, r0
 20256 0faa 1A46     		mov	r2, r3
 20257 0fac 07F11C03 		add	r3, r7, #28
 20258 0fb0 1344     		add	r3, r3, r2
 20259 0fb2 4B4A     		ldr	r2, .L773+52
 20260 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 20261 0fb6 1860     		str	r0, [r3]	@ unaligned
 20262 0fb8 1279     		ldrb	r2, [r2, #4]
 20263 0fba 1A71     		strb	r2, [r3, #4]
 20264              	.L753:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 446


2741:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20265              		.loc 1 2741 0
 20266 0fbc 07F11C03 		add	r3, r7, #28
 20267 0fc0 1846     		mov	r0, r3
 20268 0fc2 FFF7FEFF 		bl	strlen
 20269 0fc6 0346     		mov	r3, r0
 20270 0fc8 1A46     		mov	r2, r3
 20271 0fca 07F11C03 		add	r3, r7, #28
 20272 0fce 1344     		add	r3, r3, r2
 20273 0fd0 444A     		ldr	r2, .L773+56
 20274 0fd2 1C46     		mov	r4, r3
 20275 0fd4 1346     		mov	r3, r2
 20276 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 20277 0fd8 2060     		str	r0, [r4]	@ unaligned
 20278 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 20279 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 20280 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 20281 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
2742:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20282              		.loc 1 2742 0
 20283 0fe2 3B4A     		ldr	r2, .L773+36
 20284 0fe4 D7F89430 		ldr	r3, [r7, #148]
 20285 0fe8 1344     		add	r3, r3, r2
 20286 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20287 0fec 1946     		mov	r1, r3
 20288 0fee D7F88C20 		ldr	r2, [r7, #140]
 20289 0ff2 0B46     		mov	r3, r1
 20290 0ff4 9B00     		lsls	r3, r3, #2
 20291 0ff6 0B44     		add	r3, r3, r1
 20292 0ff8 1344     		add	r3, r3, r2
 20293 0ffa 03F20323 		addw	r3, r3, #515
 20294 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20295 1000 002B     		cmp	r3, #0
 20296 1002 0FD0     		beq	.L754
2743:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20297              		.loc 1 2743 0
 20298 1004 07F11C03 		add	r3, r7, #28
 20299 1008 1846     		mov	r0, r3
 20300 100a FFF7FEFF 		bl	strlen
 20301 100e 0346     		mov	r3, r0
 20302 1010 1A46     		mov	r2, r3
 20303 1012 07F11C03 		add	r3, r7, #28
 20304 1016 1344     		add	r3, r3, r2
 20305 1018 304A     		ldr	r2, .L773+48
 20306 101a 1068     		ldr	r0, [r2]	@ unaligned
 20307 101c 1860     		str	r0, [r3]	@ unaligned
 20308 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20309 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 20310 1022 0EE0     		b	.L755
 20311              	.L754:
2744:..\src/command_processing.c **** 			else
2745:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20312              		.loc 1 2745 0
 20313 1024 07F11C03 		add	r3, r7, #28
 20314 1028 1846     		mov	r0, r3
 20315 102a FFF7FEFF 		bl	strlen
 20316 102e 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 447


 20317 1030 1A46     		mov	r2, r3
 20318 1032 07F11C03 		add	r3, r7, #28
 20319 1036 1344     		add	r3, r3, r2
 20320 1038 294A     		ldr	r2, .L773+52
 20321 103a 1068     		ldr	r0, [r2]	@ unaligned
 20322 103c 1860     		str	r0, [r3]	@ unaligned
 20323 103e 1279     		ldrb	r2, [r2, #4]
 20324 1040 1A71     		strb	r2, [r3, #4]
 20325              	.L755:
2746:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20326              		.loc 1 2746 0
 20327 1042 07F11C03 		add	r3, r7, #28
 20328 1046 1846     		mov	r0, r3
 20329 1048 FFF7FEFF 		bl	strlen
 20330 104c 0346     		mov	r3, r0
 20331 104e 1A46     		mov	r2, r3
 20332 1050 07F11C03 		add	r3, r7, #28
 20333 1054 1344     		add	r3, r3, r2
 20334 1056 244A     		ldr	r2, .L773+60
 20335 1058 1D46     		mov	r5, r3
 20336 105a 1446     		mov	r4, r2
 20337 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20338 105e 2860     		str	r0, [r5]	@ unaligned
 20339 1060 6960     		str	r1, [r5, #4]	@ unaligned
 20340 1062 AA60     		str	r2, [r5, #8]	@ unaligned
 20341 1064 EB60     		str	r3, [r5, #12]	@ unaligned
 20342 1066 2378     		ldrb	r3, [r4]
 20343 1068 2B74     		strb	r3, [r5, #16]
2747:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20344              		.loc 1 2747 0
 20345 106a 194A     		ldr	r2, .L773+36
 20346 106c D7F89430 		ldr	r3, [r7, #148]
 20347 1070 1344     		add	r3, r3, r2
 20348 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20349 1074 1946     		mov	r1, r3
 20350 1076 D7F88C20 		ldr	r2, [r7, #140]
 20351 107a 0B46     		mov	r3, r1
 20352 107c 9B00     		lsls	r3, r3, #2
 20353 107e 0B44     		add	r3, r3, r1
 20354 1080 1344     		add	r3, r3, r2
 20355 1082 03F50173 		add	r3, r3, #516
 20356 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20357 1088 002B     		cmp	r3, #0
 20358 108a 2FD0     		beq	.L756
2748:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20359              		.loc 1 2748 0
 20360 108c 07F11C03 		add	r3, r7, #28
 20361 1090 1846     		mov	r0, r3
 20362 1092 FFF7FEFF 		bl	strlen
 20363 1096 0346     		mov	r3, r0
 20364 1098 1A46     		mov	r2, r3
 20365 109a 07F11C03 		add	r3, r7, #28
 20366 109e 1344     		add	r3, r3, r2
 20367 10a0 0E4A     		ldr	r2, .L773+48
 20368 10a2 1068     		ldr	r0, [r2]	@ unaligned
 20369 10a4 1860     		str	r0, [r3]	@ unaligned
 20370 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 448


 20371 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20372 10aa 2EE0     		b	.L757
 20373              	.L774:
 20374              		.align	2
 20375              	.L773:
 20376 10ac 64180000 		.word	.LC230
 20377 10b0 80180000 		.word	.LC231
 20378 10b4 58110000 		.word	.LC152
 20379 10b8 DC180000 		.word	.LC235
 20380 10bc F8180000 		.word	.LC236
 20381 10c0 20190000 		.word	.LC237
 20382 10c4 00000000 		.word	N_IMU_Connected
 20383 10c8 34190000 		.word	.LC238
 20384 10cc 48190000 		.word	.LC239
 20385 10d0 00000000 		.word	IMU_connected
 20386 10d4 60190000 		.word	.LC240
 20387 10d8 74190000 		.word	.LC241
 20388 10dc 44130000 		.word	.LC175
 20389 10e0 4C130000 		.word	.LC176
 20390 10e4 88190000 		.word	.LC242
 20391 10e8 98190000 		.word	.LC243
 20392              	.L756:
2749:..\src/command_processing.c **** 			else
2750:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20393              		.loc 1 2750 0
 20394 10ec 07F11C03 		add	r3, r7, #28
 20395 10f0 1846     		mov	r0, r3
 20396 10f2 FFF7FEFF 		bl	strlen
 20397 10f6 0346     		mov	r3, r0
 20398 10f8 1A46     		mov	r2, r3
 20399 10fa 07F11C03 		add	r3, r7, #28
 20400 10fe 1344     		add	r3, r3, r2
 20401 1100 584A     		ldr	r2, .L775
 20402 1102 1068     		ldr	r0, [r2]	@ unaligned
 20403 1104 1860     		str	r0, [r3]	@ unaligned
 20404 1106 1279     		ldrb	r2, [r2, #4]
 20405 1108 1A71     		strb	r2, [r3, #4]
 20406              	.L757:
2751:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20407              		.loc 1 2751 0
 20408 110a 07F11C03 		add	r3, r7, #28
 20409 110e 1846     		mov	r0, r3
 20410 1110 FFF7FEFF 		bl	strlen
 20411 1114 0346     		mov	r3, r0
 20412 1116 1A46     		mov	r2, r3
 20413 1118 07F11C03 		add	r3, r7, #28
 20414 111c 1344     		add	r3, r3, r2
 20415 111e 524A     		ldr	r2, .L775+4
 20416 1120 1C46     		mov	r4, r3
 20417 1122 1346     		mov	r3, r2
 20418 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 20419 1126 2060     		str	r0, [r4]	@ unaligned
 20420 1128 6160     		str	r1, [r4, #4]	@ unaligned
 20421 112a A260     		str	r2, [r4, #8]	@ unaligned
 20422 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 20423 112e A381     		strh	r3, [r4, #12]	@ unaligned
2752:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 449


 20424              		.loc 1 2752 0
 20425 1130 4E4A     		ldr	r2, .L775+8
 20426 1132 D7F89430 		ldr	r3, [r7, #148]
 20427 1136 1344     		add	r3, r3, r2
 20428 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20429 113a 1946     		mov	r1, r3
 20430 113c D7F88C20 		ldr	r2, [r7, #140]
 20431 1140 0B46     		mov	r3, r1
 20432 1142 9B00     		lsls	r3, r3, #2
 20433 1144 0B44     		add	r3, r3, r1
 20434 1146 1344     		add	r3, r3, r2
 20435 1148 03F20523 		addw	r3, r3, #517
 20436 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20437 114e 002B     		cmp	r3, #0
 20438 1150 0FD0     		beq	.L758
2753:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20439              		.loc 1 2753 0
 20440 1152 07F11C03 		add	r3, r7, #28
 20441 1156 1846     		mov	r0, r3
 20442 1158 FFF7FEFF 		bl	strlen
 20443 115c 0346     		mov	r3, r0
 20444 115e 1A46     		mov	r2, r3
 20445 1160 07F11C03 		add	r3, r7, #28
 20446 1164 1344     		add	r3, r3, r2
 20447 1166 424A     		ldr	r2, .L775+12
 20448 1168 1068     		ldr	r0, [r2]	@ unaligned
 20449 116a 1860     		str	r0, [r3]	@ unaligned
 20450 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20451 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 20452 1170 0EE0     		b	.L759
 20453              	.L758:
2754:..\src/command_processing.c **** 			else
2755:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20454              		.loc 1 2755 0
 20455 1172 07F11C03 		add	r3, r7, #28
 20456 1176 1846     		mov	r0, r3
 20457 1178 FFF7FEFF 		bl	strlen
 20458 117c 0346     		mov	r3, r0
 20459 117e 1A46     		mov	r2, r3
 20460 1180 07F11C03 		add	r3, r7, #28
 20461 1184 1344     		add	r3, r3, r2
 20462 1186 374A     		ldr	r2, .L775
 20463 1188 1068     		ldr	r0, [r2]	@ unaligned
 20464 118a 1860     		str	r0, [r3]	@ unaligned
 20465 118c 1279     		ldrb	r2, [r2, #4]
 20466 118e 1A71     		strb	r2, [r3, #4]
 20467              	.L759:
2756:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20468              		.loc 1 2756 0
 20469 1190 07F11C03 		add	r3, r7, #28
 20470 1194 1846     		mov	r0, r3
 20471 1196 FFF7FEFF 		bl	strlen
 20472 119a 0346     		mov	r3, r0
 20473 119c 1A46     		mov	r2, r3
 20474 119e 07F11C03 		add	r3, r7, #28
 20475 11a2 1344     		add	r3, r3, r2
 20476 11a4 334A     		ldr	r2, .L775+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 450


 20477 11a6 1C46     		mov	r4, r3
 20478 11a8 1346     		mov	r3, r2
 20479 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 20480 11ac 2060     		str	r0, [r4]	@ unaligned
 20481 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 20482 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 20483 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 20484 11b4 9B78     		ldrb	r3, [r3, #2]
 20485 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 20486 11b8 A373     		strb	r3, [r4, #14]
2757:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20487              		.loc 1 2757 0
 20488 11ba 2C4A     		ldr	r2, .L775+8
 20489 11bc D7F89430 		ldr	r3, [r7, #148]
 20490 11c0 1344     		add	r3, r3, r2
 20491 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20492 11c4 1946     		mov	r1, r3
 20493 11c6 D7F88C20 		ldr	r2, [r7, #140]
 20494 11ca 0B46     		mov	r3, r1
 20495 11cc 9B00     		lsls	r3, r3, #2
 20496 11ce 0B44     		add	r3, r3, r1
 20497 11d0 1344     		add	r3, r3, r2
 20498 11d2 03F20623 		addw	r3, r3, #518
 20499 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20500 11d8 002B     		cmp	r3, #0
 20501 11da 0FD0     		beq	.L760
2758:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20502              		.loc 1 2758 0
 20503 11dc 07F11C03 		add	r3, r7, #28
 20504 11e0 1846     		mov	r0, r3
 20505 11e2 FFF7FEFF 		bl	strlen
 20506 11e6 0346     		mov	r3, r0
 20507 11e8 1A46     		mov	r2, r3
 20508 11ea 07F11C03 		add	r3, r7, #28
 20509 11ee 1344     		add	r3, r3, r2
 20510 11f0 1F4A     		ldr	r2, .L775+12
 20511 11f2 1068     		ldr	r0, [r2]	@ unaligned
 20512 11f4 1860     		str	r0, [r3]	@ unaligned
 20513 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20514 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20515 11fa 0EE0     		b	.L761
 20516              	.L760:
2759:..\src/command_processing.c **** 			else
2760:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20517              		.loc 1 2760 0
 20518 11fc 07F11C03 		add	r3, r7, #28
 20519 1200 1846     		mov	r0, r3
 20520 1202 FFF7FEFF 		bl	strlen
 20521 1206 0346     		mov	r3, r0
 20522 1208 1A46     		mov	r2, r3
 20523 120a 07F11C03 		add	r3, r7, #28
 20524 120e 1344     		add	r3, r3, r2
 20525 1210 144A     		ldr	r2, .L775
 20526 1212 1068     		ldr	r0, [r2]	@ unaligned
 20527 1214 1860     		str	r0, [r3]	@ unaligned
 20528 1216 1279     		ldrb	r2, [r2, #4]
 20529 1218 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 451


 20530              	.L761:
2761:..\src/command_processing.c **** 				 
2762:..\src/command_processing.c **** 			strcat(info_string, str);
 20531              		.loc 1 2762 0 discriminator 2
 20532 121a 07F11C03 		add	r3, r7, #28
 20533 121e 1946     		mov	r1, r3
 20534 1220 7869     		ldr	r0, [r7, #20]
 20535 1222 FFF7FEFF 		bl	strcat
2732:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20536              		.loc 1 2732 0 discriminator 2
 20537 1226 D7F89430 		ldr	r3, [r7, #148]
 20538 122a 0133     		adds	r3, r3, #1
 20539 122c C7F89430 		str	r3, [r7, #148]
 20540              	.L751:
2732:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20541              		.loc 1 2732 0 is_stmt 0 discriminator 1
 20542 1230 114B     		ldr	r3, .L775+20
 20543 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20544 1234 1A46     		mov	r2, r3
 20545 1236 D7F89430 		ldr	r3, [r7, #148]
 20546 123a 9A42     		cmp	r2, r3
 20547 123c 3FF773AE 		bgt	.L762
2763:..\src/command_processing.c **** 		}       
2764:..\src/command_processing.c **** 		
2765:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20548              		.loc 1 2765 0 is_stmt 1
 20549 1240 7869     		ldr	r0, [r7, #20]
 20550 1242 FFF7FEFF 		bl	strlen
 20551 1246 0346     		mov	r3, r0
 20552 1248 1A46     		mov	r2, r3
 20553 124a 7B69     		ldr	r3, [r7, #20]
 20554 124c 1344     		add	r3, r3, r2
 20555 124e 0B4A     		ldr	r2, .L775+24
 20556 1250 1188     		ldrh	r1, [r2]	@ unaligned
 20557 1252 9278     		ldrb	r2, [r2, #2]
 20558 1254 1980     		strh	r1, [r3]	@ unaligned
 20559 1256 9A70     		strb	r2, [r3, #2]
 20560              	.L764:
2766:..\src/command_processing.c **** 	}
2767:..\src/command_processing.c **** }
 20561              		.loc 1 2767 0
 20562 1258 00BF     		nop
 20563 125a 9C37     		adds	r7, r7, #156
 20564              		.cfi_def_cfa_offset 36
 20565 125c BD46     		mov	sp, r7
 20566              		.cfi_def_cfa_register 13
 20567              		@ sp needed
 20568 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20569              	.L776:
 20570 1262 00BF     		.align	2
 20571              	.L775:
 20572 1264 4C130000 		.word	.LC176
 20573 1268 AC190000 		.word	.LC244
 20574 126c 00000000 		.word	IMU_connected
 20575 1270 44130000 		.word	.LC175
 20576 1274 BC190000 		.word	.LC245
 20577 1278 00000000 		.word	N_IMU_Connected
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 452


 20578 127c 58110000 		.word	.LC152
 20579              		.cfi_endproc
 20580              	.LFE75:
 20581              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20582              		.section	.rodata
 20583 1e26 0000     		.align	2
 20584              	.LC281:
 20585 1e28 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20585      2C4D696E 
 20585      2C536563 
 20585      2C00
 20586 1e36 0000     		.align	2
 20587              	.LC282:
 20588 1e38 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20588      25645F50 
 20588      6F732C00 
 20589              		.align	2
 20590              	.LC283:
 20591 1e44 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20591      25645F43 
 20591      7572722C 
 20591      00
 20592 1e51 000000   		.align	2
 20593              	.LC284:
 20594 1e54 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
 20594      5F74696D 
 20594      65732C57 
 20594      6972655F 
 20594      64697370 
 20595 1e87 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
 20595      5F616374 
 20595      2C454D47 
 20595      5F325F61 
 20595      63742C45 
 20596 1eba 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 20596      6F74696F 
 20596      6E5F322C 
 20596      546F7461 
 20596      6C5F7275 
 20597              		.section	.text.prepare_SD_legend,"ax",%progbits
 20598              		.align	2
 20599              		.global	prepare_SD_legend
 20600              		.thumb
 20601              		.thumb_func
 20602              		.type	prepare_SD_legend, %function
 20603              	prepare_SD_legend:
 20604              	.LFB76:
2768:..\src/command_processing.c **** 
2769:..\src/command_processing.c **** 
2770:..\src/command_processing.c **** //==============================================================================
2771:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2772:..\src/command_processing.c **** //==============================================================================
2773:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2774:..\src/command_processing.c **** {
 20605              		.loc 1 2774 0
 20606              		.cfi_startproc
 20607              		@ args = 0, pretend = 0, frame = 152
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 453


 20608              		@ frame_needed = 1, uses_anonymous_args = 0
 20609 0000 90B5     		push	{r4, r7, lr}
 20610              		.cfi_def_cfa_offset 12
 20611              		.cfi_offset 4, -12
 20612              		.cfi_offset 7, -8
 20613              		.cfi_offset 14, -4
 20614 0002 A7B0     		sub	sp, sp, #156
 20615              		.cfi_def_cfa_offset 168
 20616 0004 00AF     		add	r7, sp, #0
 20617              		.cfi_def_cfa_register 7
 20618 0006 7860     		str	r0, [r7, #4]
2775:..\src/command_processing.c ****     char str[140];  
2776:..\src/command_processing.c ****     int i;
2777:..\src/command_processing.c ****         
2778:..\src/command_processing.c ****     // Legend
2779:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20619              		.loc 1 2779 0
 20620 0008 7B68     		ldr	r3, [r7, #4]
 20621 000a 2F4A     		ldr	r2, .L782
 20622 000c 1C46     		mov	r4, r3
 20623 000e 1346     		mov	r3, r2
 20624 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20625 0012 2060     		str	r0, [r4]	@ unaligned
 20626 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20627 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20628 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20629 001a A381     		strh	r3, [r4, #12]	@ unaligned
2780:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20630              		.loc 1 2780 0
 20631 001c 0123     		movs	r3, #1
 20632 001e C7F89430 		str	r3, [r7, #148]
 20633 0022 12E0     		b	.L778
 20634              	.L779:
2781:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20635              		.loc 1 2781 0 discriminator 3
 20636 0024 07F10803 		add	r3, r7, #8
 20637 0028 D7F89420 		ldr	r2, [r7, #148]
 20638 002c 2749     		ldr	r1, .L782+4
 20639 002e 1846     		mov	r0, r3
 20640 0030 FFF7FEFF 		bl	sprintf
2782:..\src/command_processing.c ****         strcat(info_string, str);
 20641              		.loc 1 2782 0 discriminator 3
 20642 0034 07F10803 		add	r3, r7, #8
 20643 0038 1946     		mov	r1, r3
 20644 003a 7868     		ldr	r0, [r7, #4]
 20645 003c FFF7FEFF 		bl	strcat
2780:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20646              		.loc 1 2780 0 discriminator 3
 20647 0040 D7F89430 		ldr	r3, [r7, #148]
 20648 0044 0133     		adds	r3, r3, #1
 20649 0046 C7F89430 		str	r3, [r7, #148]
 20650              	.L778:
2780:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20651              		.loc 1 2780 0 is_stmt 0 discriminator 1
 20652 004a D7F89430 		ldr	r3, [r7, #148]
 20653 004e 0A2B     		cmp	r3, #10
 20654 0050 E8DD     		ble	.L779
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 454


2783:..\src/command_processing.c ****     }
2784:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20655              		.loc 1 2784 0 is_stmt 1
 20656 0052 0123     		movs	r3, #1
 20657 0054 C7F89430 		str	r3, [r7, #148]
 20658 0058 12E0     		b	.L780
 20659              	.L781:
2785:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20660              		.loc 1 2785 0 discriminator 3
 20661 005a 07F10803 		add	r3, r7, #8
 20662 005e D7F89420 		ldr	r2, [r7, #148]
 20663 0062 1B49     		ldr	r1, .L782+8
 20664 0064 1846     		mov	r0, r3
 20665 0066 FFF7FEFF 		bl	sprintf
2786:..\src/command_processing.c ****         strcat(info_string, str);
 20666              		.loc 1 2786 0 discriminator 3
 20667 006a 07F10803 		add	r3, r7, #8
 20668 006e 1946     		mov	r1, r3
 20669 0070 7868     		ldr	r0, [r7, #4]
 20670 0072 FFF7FEFF 		bl	strcat
2784:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20671              		.loc 1 2784 0 discriminator 3
 20672 0076 D7F89430 		ldr	r3, [r7, #148]
 20673 007a 0133     		adds	r3, r3, #1
 20674 007c C7F89430 		str	r3, [r7, #148]
 20675              	.L780:
2784:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20676              		.loc 1 2784 0 is_stmt 0 discriminator 1
 20677 0080 D7F89430 		ldr	r3, [r7, #148]
 20678 0084 042B     		cmp	r3, #4
 20679 0086 E8DD     		ble	.L781
2787:..\src/command_processing.c ****     }
2788:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 20680              		.loc 1 2788 0 is_stmt 1
 20681 0088 07F10803 		add	r3, r7, #8
 20682 008c 114A     		ldr	r2, .L782+12
 20683 008e 1846     		mov	r0, r3
 20684 0090 1146     		mov	r1, r2
 20685 0092 8023     		movs	r3, #128
 20686 0094 1A46     		mov	r2, r3
 20687 0096 FFF7FEFF 		bl	memcpy
2789:..\src/command_processing.c ****     strcat(info_string, str);
 20688              		.loc 1 2789 0
 20689 009a 07F10803 		add	r3, r7, #8
 20690 009e 1946     		mov	r1, r3
 20691 00a0 7868     		ldr	r0, [r7, #4]
 20692 00a2 FFF7FEFF 		bl	strcat
2790:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20693              		.loc 1 2790 0
 20694 00a6 7868     		ldr	r0, [r7, #4]
 20695 00a8 FFF7FEFF 		bl	strlen
 20696 00ac 0346     		mov	r3, r0
 20697 00ae 1A46     		mov	r2, r3
 20698 00b0 7B68     		ldr	r3, [r7, #4]
 20699 00b2 1344     		add	r3, r3, r2
 20700 00b4 084A     		ldr	r2, .L782+16
 20701 00b6 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 455


 20702 00b8 9278     		ldrb	r2, [r2, #2]
 20703 00ba 1980     		strh	r1, [r3]	@ unaligned
 20704 00bc 9A70     		strb	r2, [r3, #2]
2791:..\src/command_processing.c **** }
 20705              		.loc 1 2791 0
 20706 00be 00BF     		nop
 20707 00c0 9C37     		adds	r7, r7, #156
 20708              		.cfi_def_cfa_offset 12
 20709 00c2 BD46     		mov	sp, r7
 20710              		.cfi_def_cfa_register 13
 20711              		@ sp needed
 20712 00c4 90BD     		pop	{r4, r7, pc}
 20713              	.L783:
 20714 00c6 00BF     		.align	2
 20715              	.L782:
 20716 00c8 281E0000 		.word	.LC281
 20717 00cc 381E0000 		.word	.LC282
 20718 00d0 441E0000 		.word	.LC283
 20719 00d4 541E0000 		.word	.LC284
 20720 00d8 58110000 		.word	.LC152
 20721              		.cfi_endproc
 20722              	.LFE76:
 20723              		.size	prepare_SD_legend, .-prepare_SD_legend
 20724              		.section	.rodata
 20725              		.align	2
 20726              	.LC285:
 20727 1ed4 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20727      2C253032 
 20727      642C2530 
 20727      32642C00 
 20728              		.align	2
 20729              	.LC286:
 20730 1ee4 256C752C 		.ascii	"%lu,\000"
 20730      00
 20731 1ee9 000000   		.align	2
 20732              	.LC287:
 20733 1eec 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 20733      256C752C 
 20733      256C752C 
 20733      256C752C 
 20733      00
 20734 1efd 000000   		.align	2
 20735              	.LC288:
 20736 1f00 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 20736      256C752C 
 20736      256C752C 
 20736      256C752C 
 20736      256C752C 
 20737 1f19 000000   		.align	2
 20738              	.LC289:
 20739 1f1c 256C7500 		.ascii	"%lu\000"
 20740              		.section	.text.prepare_SD_info,"ax",%progbits
 20741              		.align	2
 20742              		.global	prepare_SD_info
 20743              		.thumb
 20744              		.thumb_func
 20745              		.type	prepare_SD_info, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 456


 20746              	prepare_SD_info:
 20747              	.LFB77:
2792:..\src/command_processing.c **** 
2793:..\src/command_processing.c **** 
2794:..\src/command_processing.c **** //==============================================================================
2795:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2796:..\src/command_processing.c **** //==============================================================================
2797:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2798:..\src/command_processing.c **** {
 20748              		.loc 1 2798 0
 20749              		.cfi_startproc
 20750              		@ args = 0, pretend = 0, frame = 136
 20751              		@ frame_needed = 1, uses_anonymous_args = 0
 20752 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 20753              		.cfi_def_cfa_offset 20
 20754              		.cfi_offset 4, -20
 20755              		.cfi_offset 5, -16
 20756              		.cfi_offset 6, -12
 20757              		.cfi_offset 7, -8
 20758              		.cfi_offset 14, -4
 20759 0002 A7B0     		sub	sp, sp, #156
 20760              		.cfi_def_cfa_offset 176
 20761 0004 04AF     		add	r7, sp, #16
 20762              		.cfi_def_cfa 7, 160
 20763 0006 7860     		str	r0, [r7, #4]
2799:..\src/command_processing.c ****     char str[120];  
2800:..\src/command_processing.c ****     int i;
2801:..\src/command_processing.c ****             
2802:..\src/command_processing.c ****     strcpy(info_string, "");
 20764              		.loc 1 2802 0
 20765 0008 7B68     		ldr	r3, [r7, #4]
 20766 000a 0022     		movs	r2, #0
 20767 000c 1A70     		strb	r2, [r3]
2803:..\src/command_processing.c ****     
2804:..\src/command_processing.c ****     // Time
2805:..\src/command_processing.c ****     strcat(info_string, "");
2806:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20768              		.loc 1 2806 0
 20769 000e 554B     		ldr	r3, .L789
 20770 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20771 0014 1A46     		mov	r2, r3
 20772 0016 534B     		ldr	r3, .L789
 20773 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20774 001c 1946     		mov	r1, r3
 20775 001e 514B     		ldr	r3, .L789
 20776 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20777 0024 07F10C00 		add	r0, r7, #12
 20778 0028 0093     		str	r3, [sp]
 20779 002a 0B46     		mov	r3, r1
 20780 002c 4E49     		ldr	r1, .L789+4
 20781 002e FFF7FEFF 		bl	sprintf
2807:..\src/command_processing.c ****     strcat(info_string, str);
 20782              		.loc 1 2807 0
 20783 0032 07F10C03 		add	r3, r7, #12
 20784 0036 1946     		mov	r1, r3
 20785 0038 7868     		ldr	r0, [r7, #4]
 20786 003a FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 457


2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c ****     // Pos_Bin
2810:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20787              		.loc 1 2810 0
 20788 003e 0123     		movs	r3, #1
 20789 0040 C7F88430 		str	r3, [r7, #132]
 20790 0044 17E0     		b	.L785
 20791              	.L786:
2811:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20792              		.loc 1 2811 0 discriminator 3
 20793 0046 D7F88430 		ldr	r3, [r7, #132]
 20794 004a 013B     		subs	r3, r3, #1
 20795 004c 454A     		ldr	r2, .L789
 20796 004e 0633     		adds	r3, r3, #6
 20797 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20798 0054 07F10C03 		add	r3, r7, #12
 20799 0058 4449     		ldr	r1, .L789+8
 20800 005a 1846     		mov	r0, r3
 20801 005c FFF7FEFF 		bl	sprintf
2812:..\src/command_processing.c ****         strcat(info_string, str);
 20802              		.loc 1 2812 0 discriminator 3
 20803 0060 07F10C03 		add	r3, r7, #12
 20804 0064 1946     		mov	r1, r3
 20805 0066 7868     		ldr	r0, [r7, #4]
 20806 0068 FFF7FEFF 		bl	strcat
2810:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20807              		.loc 1 2810 0 discriminator 3
 20808 006c D7F88430 		ldr	r3, [r7, #132]
 20809 0070 0133     		adds	r3, r3, #1
 20810 0072 C7F88430 		str	r3, [r7, #132]
 20811              	.L785:
2810:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20812              		.loc 1 2810 0 is_stmt 0 discriminator 1
 20813 0076 D7F88430 		ldr	r3, [r7, #132]
 20814 007a 0A2B     		cmp	r3, #10
 20815 007c E3DD     		ble	.L786
2813:..\src/command_processing.c ****     }
2814:..\src/command_processing.c ****     
2815:..\src/command_processing.c ****     // Curr_Bin
2816:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20816              		.loc 1 2816 0 is_stmt 1
 20817 007e 0123     		movs	r3, #1
 20818 0080 C7F88430 		str	r3, [r7, #132]
 20819 0084 17E0     		b	.L787
 20820              	.L788:
2817:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20821              		.loc 1 2817 0 discriminator 3
 20822 0086 D7F88430 		ldr	r3, [r7, #132]
 20823 008a 013B     		subs	r3, r3, #1
 20824 008c 354A     		ldr	r2, .L789
 20825 008e 1033     		adds	r3, r3, #16
 20826 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20827 0094 07F10C03 		add	r3, r7, #12
 20828 0098 3449     		ldr	r1, .L789+8
 20829 009a 1846     		mov	r0, r3
 20830 009c FFF7FEFF 		bl	sprintf
2818:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 458


 20831              		.loc 1 2818 0 discriminator 3
 20832 00a0 07F10C03 		add	r3, r7, #12
 20833 00a4 1946     		mov	r1, r3
 20834 00a6 7868     		ldr	r0, [r7, #4]
 20835 00a8 FFF7FEFF 		bl	strcat
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20836              		.loc 1 2816 0 discriminator 3
 20837 00ac D7F88430 		ldr	r3, [r7, #132]
 20838 00b0 0133     		adds	r3, r3, #1
 20839 00b2 C7F88430 		str	r3, [r7, #132]
 20840              	.L787:
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20841              		.loc 1 2816 0 is_stmt 0 discriminator 1
 20842 00b6 D7F88430 		ldr	r3, [r7, #132]
 20843 00ba 042B     		cmp	r3, #4
 20844 00bc E3DD     		ble	.L788
2819:..\src/command_processing.c ****     }
2820:..\src/command_processing.c **** 
2821:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2822:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 20845              		.loc 1 2822 0 is_stmt 1
 20846 00be 294B     		ldr	r3, .L789
 20847 00c0 196D     		ldr	r1, [r3, #80]
 20848 00c2 284B     		ldr	r3, .L789
 20849 00c4 5C6D     		ldr	r4, [r3, #84]
 20850 00c6 274B     		ldr	r3, .L789
 20851 00c8 DB6D     		ldr	r3, [r3, #92]
 20852 00ca 264A     		ldr	r2, .L789
 20853 00cc 126E     		ldr	r2, [r2, #96]
 20854 00ce 07F10C00 		add	r0, r7, #12
 20855 00d2 0192     		str	r2, [sp, #4]
 20856 00d4 0093     		str	r3, [sp]
 20857 00d6 2346     		mov	r3, r4
 20858 00d8 0A46     		mov	r2, r1
 20859 00da 2549     		ldr	r1, .L789+12
 20860 00dc FFF7FEFF 		bl	sprintf
2823:..\src/command_processing.c ****     strcat(info_string, str);
 20861              		.loc 1 2823 0
 20862 00e0 07F10C03 		add	r3, r7, #12
 20863 00e4 1946     		mov	r1, r3
 20864 00e6 7868     		ldr	r0, [r7, #4]
 20865 00e8 FFF7FEFF 		bl	strcat
2824:..\src/command_processing.c ****     
2825:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2826:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 20866              		.loc 1 2826 0
 20867 00ec 1D4B     		ldr	r3, .L789
 20868 00ee 1D69     		ldr	r5, [r3, #16]
 20869 00f0 1C4B     		ldr	r3, .L789
 20870 00f2 5E69     		ldr	r6, [r3, #20]
 20871 00f4 1B4B     		ldr	r3, .L789
 20872 00f6 5B6E     		ldr	r3, [r3, #100]
 20873 00f8 1A4A     		ldr	r2, .L789
 20874 00fa 926E     		ldr	r2, [r2, #104]
 20875 00fc 1949     		ldr	r1, .L789
 20876 00fe C96E     		ldr	r1, [r1, #108]
 20877 0100 1848     		ldr	r0, .L789
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 459


 20878 0102 006F     		ldr	r0, [r0, #112]
 20879 0104 07F10C04 		add	r4, r7, #12
 20880 0108 0390     		str	r0, [sp, #12]
 20881 010a 0291     		str	r1, [sp, #8]
 20882 010c 0192     		str	r2, [sp, #4]
 20883 010e 0093     		str	r3, [sp]
 20884 0110 3346     		mov	r3, r6
 20885 0112 2A46     		mov	r2, r5
 20886 0114 1749     		ldr	r1, .L789+16
 20887 0116 2046     		mov	r0, r4
 20888 0118 FFF7FEFF 		bl	sprintf
2827:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2828:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2829:..\src/command_processing.c ****     strcat(info_string, str);
 20889              		.loc 1 2829 0
 20890 011c 07F10C03 		add	r3, r7, #12
 20891 0120 1946     		mov	r1, r3
 20892 0122 7868     		ldr	r0, [r7, #4]
 20893 0124 FFF7FEFF 		bl	strcat
2830:..\src/command_processing.c ****     
2831:..\src/command_processing.c ****     // Total_runtime
2832:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 20894              		.loc 1 2832 0
 20895 0128 0E4B     		ldr	r3, .L789
 20896 012a 9A6D     		ldr	r2, [r3, #88]
 20897 012c 07F10C03 		add	r3, r7, #12
 20898 0130 1149     		ldr	r1, .L789+20
 20899 0132 1846     		mov	r0, r3
 20900 0134 FFF7FEFF 		bl	sprintf
2833:..\src/command_processing.c ****     strcat(info_string, str);
 20901              		.loc 1 2833 0
 20902 0138 07F10C03 		add	r3, r7, #12
 20903 013c 1946     		mov	r1, r3
 20904 013e 7868     		ldr	r0, [r7, #4]
 20905 0140 FFF7FEFF 		bl	strcat
2834:..\src/command_processing.c ****     
2835:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20906              		.loc 1 2835 0
 20907 0144 7868     		ldr	r0, [r7, #4]
 20908 0146 FFF7FEFF 		bl	strlen
 20909 014a 0346     		mov	r3, r0
 20910 014c 1A46     		mov	r2, r3
 20911 014e 7B68     		ldr	r3, [r7, #4]
 20912 0150 1344     		add	r3, r3, r2
 20913 0152 0A4A     		ldr	r2, .L789+24
 20914 0154 1188     		ldrh	r1, [r2]	@ unaligned
 20915 0156 9278     		ldrb	r2, [r2, #2]
 20916 0158 1980     		strh	r1, [r3]	@ unaligned
 20917 015a 9A70     		strb	r2, [r3, #2]
2836:..\src/command_processing.c **** }
 20918              		.loc 1 2836 0
 20919 015c 00BF     		nop
 20920 015e 8C37     		adds	r7, r7, #140
 20921              		.cfi_def_cfa_offset 20
 20922 0160 BD46     		mov	sp, r7
 20923              		.cfi_def_cfa_register 13
 20924              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 460


 20925 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 20926              	.L790:
 20927              		.align	2
 20928              	.L789:
 20929 0164 00000000 		.word	g_mem
 20930 0168 D41E0000 		.word	.LC285
 20931 016c E41E0000 		.word	.LC286
 20932 0170 EC1E0000 		.word	.LC287
 20933 0174 001F0000 		.word	.LC288
 20934 0178 1C1F0000 		.word	.LC289
 20935 017c 58110000 		.word	.LC152
 20936              		.cfi_endproc
 20937              	.LFE77:
 20938              		.size	prepare_SD_info, .-prepare_SD_info
 20939              		.section	.rodata
 20940              		.align	2
 20941              	.LC290:
 20942 1f20 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 20942      2C454D47 
 20942      312C454D 
 20942      47320A00 
 20943              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 20944              		.align	2
 20945              		.global	prepare_SD_EMG_History_legend
 20946              		.thumb
 20947              		.thumb_func
 20948              		.type	prepare_SD_EMG_History_legend, %function
 20949              	prepare_SD_EMG_History_legend:
 20950              	.LFB78:
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** //==============================================================================
2839:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2840:..\src/command_processing.c **** //==============================================================================
2841:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2842:..\src/command_processing.c **** {
 20951              		.loc 1 2842 0
 20952              		.cfi_startproc
 20953              		@ args = 0, pretend = 0, frame = 8
 20954              		@ frame_needed = 1, uses_anonymous_args = 0
 20955              		@ link register save eliminated.
 20956 0000 B0B4     		push	{r4, r5, r7}
 20957              		.cfi_def_cfa_offset 12
 20958              		.cfi_offset 4, -12
 20959              		.cfi_offset 5, -8
 20960              		.cfi_offset 7, -4
 20961 0002 83B0     		sub	sp, sp, #12
 20962              		.cfi_def_cfa_offset 24
 20963 0004 00AF     		add	r7, sp, #0
 20964              		.cfi_def_cfa_register 7
 20965 0006 7860     		str	r0, [r7, #4]
2843:..\src/command_processing.c ****         
2844:..\src/command_processing.c ****     // Legend
2845:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 20966              		.loc 1 2845 0
 20967 0008 7B68     		ldr	r3, [r7, #4]
 20968 000a 064A     		ldr	r2, .L792
 20969 000c 1C46     		mov	r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 461


 20970 000e 1546     		mov	r5, r2
 20971 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20972 0012 2060     		str	r0, [r4]	@ unaligned
 20973 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20974 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20975 0018 E360     		str	r3, [r4, #12]	@ unaligned
2846:..\src/command_processing.c ****     
2847:..\src/command_processing.c **** }
 20976              		.loc 1 2847 0
 20977 001a 00BF     		nop
 20978 001c 0C37     		adds	r7, r7, #12
 20979              		.cfi_def_cfa_offset 12
 20980 001e BD46     		mov	sp, r7
 20981              		.cfi_def_cfa_register 13
 20982              		@ sp needed
 20983 0020 B0BC     		pop	{r4, r5, r7}
 20984              		.cfi_restore 7
 20985              		.cfi_restore 5
 20986              		.cfi_restore 4
 20987              		.cfi_def_cfa_offset 0
 20988 0022 7047     		bx	lr
 20989              	.L793:
 20990              		.align	2
 20991              	.L792:
 20992 0024 201F0000 		.word	.LC290
 20993              		.cfi_endproc
 20994              	.LFE78:
 20995              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 20996              		.section	.rodata
 20997              		.align	2
 20998              	.LC291:
 20999 1f30 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 20999      2C25752C 
 20999      25750A00 
 21000              		.global	__aeabi_dadd
 21001              		.global	__aeabi_d2f
 21002              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21003              		.align	2
 21004              		.global	prepare_SD_EMG_history
 21005              		.thumb
 21006              		.thumb_func
 21007              		.type	prepare_SD_EMG_history, %function
 21008              	prepare_SD_EMG_history:
 21009              	.LFB79:
2848:..\src/command_processing.c **** 
2849:..\src/command_processing.c **** //==============================================================================
2850:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2851:..\src/command_processing.c **** //==============================================================================
2852:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2853:..\src/command_processing.c **** {
 21010              		.loc 1 2853 0
 21011              		.cfi_startproc
 21012              		@ args = 0, pretend = 0, frame = 120
 21013              		@ frame_needed = 1, uses_anonymous_args = 0
 21014 0000 B0B5     		push	{r4, r5, r7, lr}
 21015              		.cfi_def_cfa_offset 16
 21016              		.cfi_offset 4, -16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 462


 21017              		.cfi_offset 5, -12
 21018              		.cfi_offset 7, -8
 21019              		.cfi_offset 14, -4
 21020 0002 A0B0     		sub	sp, sp, #128
 21021              		.cfi_def_cfa_offset 144
 21022 0004 02AF     		add	r7, sp, #8
 21023              		.cfi_def_cfa 7, 136
 21024 0006 7860     		str	r0, [r7, #4]
2854:..\src/command_processing.c ****     char str_data[100] = "";
 21025              		.loc 1 2854 0
 21026 0008 0023     		movs	r3, #0
 21027 000a FB60     		str	r3, [r7, #12]
 21028 000c 07F11003 		add	r3, r7, #16
 21029 0010 6022     		movs	r2, #96
 21030 0012 0021     		movs	r1, #0
 21031 0014 1846     		mov	r0, r3
 21032 0016 FFF7FEFF 		bl	memset
2855:..\src/command_processing.c ****     uint16 v_idx = 0;
 21033              		.loc 1 2855 0
 21034 001a 0023     		movs	r3, #0
 21035 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2856:..\src/command_processing.c ****     static float h_time = 0.0;
2857:..\src/command_processing.c ****                 
2858:..\src/command_processing.c ****     strcpy(info_string, "");
 21036              		.loc 1 2858 0
 21037 0020 7B68     		ldr	r3, [r7, #4]
 21038 0022 0022     		movs	r2, #0
 21039 0024 1A70     		strb	r2, [r3]
 21040              	.LBB29:
2859:..\src/command_processing.c ****     
2860:..\src/command_processing.c ****     // Oldest samples of the vector
2861:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21041              		.loc 1 2861 0
 21042 0026 0023     		movs	r3, #0
 21043 0028 3B67     		str	r3, [r7, #112]
 21044 002a 4AE0     		b	.L795
 21045              	.L797:
2862:..\src/command_processing.c ****               
2863:..\src/command_processing.c ****         // Send line per line all the history vector
2864:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2865:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21046              		.loc 1 2865 0
 21047 002c 2C4B     		ldr	r3, .L798+8
 21048 002e 1B68     		ldr	r3, [r3]
 21049 0030 9AB2     		uxth	r2, r3
 21050 0032 3B6F     		ldr	r3, [r7, #112]
 21051 0034 9BB2     		uxth	r3, r3
 21052 0036 1344     		add	r3, r3, r2
 21053 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2866:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21054              		.loc 1 2866 0
 21055 003c B7F87630 		ldrh	r3, [r7, #118]
 21056 0040 B3F5167F 		cmp	r3, #600
 21057 0044 05D9     		bls	.L796
2867:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21058              		.loc 1 2867 0
 21059 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 463


 21060 004a A3F51673 		sub	r3, r3, #600
 21061 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21062              	.L796:
2868:..\src/command_processing.c ****         }
2869:..\src/command_processing.c ****         
2870:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2871:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21063              		.loc 1 2871 0 discriminator 2
 21064 0052 244B     		ldr	r3, .L798+12
 21065 0054 1B68     		ldr	r3, [r3]	@ float
 21066 0056 1846     		mov	r0, r3
 21067 0058 FFF7FEFF 		bl	__aeabi_f2d
 21068 005c 0446     		mov	r4, r0
 21069 005e 0D46     		mov	r5, r1
 21070 0060 B7F87630 		ldrh	r3, [r7, #118]
 21071 0064 204A     		ldr	r2, .L798+16
 21072 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21073 006a 1946     		mov	r1, r3
 21074 006c B7F87630 		ldrh	r3, [r7, #118]
 21075 0070 1D4A     		ldr	r2, .L798+16
 21076 0072 9B00     		lsls	r3, r3, #2
 21077 0074 1344     		add	r3, r3, r2
 21078 0076 5B88     		ldrh	r3, [r3, #2]
 21079 0078 07F10C00 		add	r0, r7, #12
 21080 007c 0193     		str	r3, [sp, #4]
 21081 007e 0091     		str	r1, [sp]
 21082 0080 2246     		mov	r2, r4
 21083 0082 2B46     		mov	r3, r5
 21084 0084 1949     		ldr	r1, .L798+20
 21085 0086 FFF7FEFF 		bl	sprintf
2872:..\src/command_processing.c ****         
2873:..\src/command_processing.c ****         strcat(info_string, str_data);
 21086              		.loc 1 2873 0 discriminator 2
 21087 008a 07F10C03 		add	r3, r7, #12
 21088 008e 1946     		mov	r1, r3
 21089 0090 7868     		ldr	r0, [r7, #4]
 21090 0092 FFF7FEFF 		bl	strcat
2874:..\src/command_processing.c ****         
2875:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21091              		.loc 1 2875 0 discriminator 2
 21092 0096 134B     		ldr	r3, .L798+12
 21093 0098 1B68     		ldr	r3, [r3]	@ float
 21094 009a 1846     		mov	r0, r3
 21095 009c FFF7FEFF 		bl	__aeabi_f2d
 21096 00a0 0DA3     		adr	r3, .L798
 21097 00a2 D3E90023 		ldrd	r2, [r3]
 21098 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21099 00aa 0346     		mov	r3, r0
 21100 00ac 0C46     		mov	r4, r1
 21101 00ae 1846     		mov	r0, r3
 21102 00b0 2146     		mov	r1, r4
 21103 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21104 00b6 0246     		mov	r2, r0
 21105 00b8 0A4B     		ldr	r3, .L798+12
 21106 00ba 1A60     		str	r2, [r3]	@ float
2861:..\src/command_processing.c ****               
 21107              		.loc 1 2861 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 464


 21108 00bc 3B6F     		ldr	r3, [r7, #112]
 21109 00be 0133     		adds	r3, r3, #1
 21110 00c0 3B67     		str	r3, [r7, #112]
 21111              	.L795:
2861:..\src/command_processing.c ****               
 21112              		.loc 1 2861 0 is_stmt 0 discriminator 1
 21113 00c2 3B6F     		ldr	r3, [r7, #112]
 21114 00c4 B3F5167F 		cmp	r3, #600
 21115 00c8 B0DB     		blt	.L797
 21116              	.LBE29:
2876:..\src/command_processing.c **** 
2877:..\src/command_processing.c ****     }
2878:..\src/command_processing.c ****     
2879:..\src/command_processing.c **** }
 21117              		.loc 1 2879 0 is_stmt 1
 21118 00ca 00BF     		nop
 21119 00cc 7837     		adds	r7, r7, #120
 21120              		.cfi_def_cfa_offset 16
 21121 00ce BD46     		mov	sp, r7
 21122              		.cfi_def_cfa_register 13
 21123              		@ sp needed
 21124 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21125              	.L799:
 21126 00d2 00BFAFF3 		.align	3
 21126      0080
 21127              	.L798:
 21128 00d8 9A999999 		.word	-1717986918
 21129 00dc 9999C93F 		.word	1070176665
 21130 00e0 00000000 		.word	emg_history_next_idx
 21131 00e4 00000000 		.word	h_time.11231
 21132 00e8 00000000 		.word	emg_history
 21133 00ec 301F0000 		.word	.LC291
 21134              		.cfi_endproc
 21135              	.LFE79:
 21136              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21137              		.section	.rodata
 21138              		.align	2
 21139              	.LC292:
 21140 1f3c 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21140      4F525320 
 21140      494E464F 
 21140      0D0A00
 21141 1f4b 00       		.align	2
 21142              	.LC293:
 21143 1f4c 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21143      3A202564 
 21143      09256409 
 21143      25640D0A 
 21143      00
 21144 1f5d 000000   		.align	2
 21145              	.LC294:
 21146 1f60 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21146      6F3A2025 
 21146      64092564 
 21146      0925640D 
 21146      0A00
 21147 1f72 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 465


 21148              	.LC295:
 21149 1f74 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21149      3A202564 
 21149      09256409 
 21149      25640D0A 
 21149      00
 21150 1f85 000000   		.align	2
 21151              	.LC296:
 21152 1f88 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21152      743A2025 
 21152      2E336609 
 21152      252E3366 
 21152      09252E33 
 21153 1fa5 000000   		.align	2
 21154              	.LC297:
 21155 1fa8 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21155      70657261 
 21155      74757265 
 21155      3A202564 
 21155      0D0A00
 21156              		.section	.text.IMU_reading_info,"ax",%progbits
 21157              		.align	2
 21158              		.global	IMU_reading_info
 21159              		.thumb
 21160              		.thumb_func
 21161              		.type	IMU_reading_info, %function
 21162              	IMU_reading_info:
 21163              	.LFB80:
2880:..\src/command_processing.c **** 
2881:..\src/command_processing.c **** //==============================================================================
2882:..\src/command_processing.c **** //                                                              IMU READING INFO
2883:..\src/command_processing.c **** //==============================================================================
2884:..\src/command_processing.c **** 
2885:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2886:..\src/command_processing.c **** {
 21164              		.loc 1 2886 0
 21165              		.cfi_startproc
 21166              		@ args = 0, pretend = 0, frame = 312
 21167              		@ frame_needed = 1, uses_anonymous_args = 0
 21168 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21169              		.cfi_def_cfa_offset 32
 21170              		.cfi_offset 4, -32
 21171              		.cfi_offset 5, -28
 21172              		.cfi_offset 7, -24
 21173              		.cfi_offset 8, -20
 21174              		.cfi_offset 9, -16
 21175              		.cfi_offset 10, -12
 21176              		.cfi_offset 11, -8
 21177              		.cfi_offset 14, -4
 21178 0004 D4B0     		sub	sp, sp, #336
 21179              		.cfi_def_cfa_offset 368
 21180 0006 06AF     		add	r7, sp, #24
 21181              		.cfi_def_cfa 7, 344
 21182 0008 3B1D     		adds	r3, r7, #4
 21183 000a 1860     		str	r0, [r3]
2887:..\src/command_processing.c ****     char str[300];  
2888:..\src/command_processing.c ****     int i;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 466


2889:..\src/command_processing.c ****                  
2890:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21184              		.loc 1 2890 0
 21185 000c 3B1D     		adds	r3, r7, #4
 21186 000e 1868     		ldr	r0, [r3]
 21187 0010 FFF7FEFF 		bl	strlen
 21188 0014 0346     		mov	r3, r0
 21189 0016 1A46     		mov	r2, r3
 21190 0018 3B1D     		adds	r3, r7, #4
 21191 001a 1B68     		ldr	r3, [r3]
 21192 001c 1344     		add	r3, r3, r2
 21193 001e C94A     		ldr	r2, .L808
 21194 0020 1C46     		mov	r4, r3
 21195 0022 1346     		mov	r3, r2
 21196 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21197 0026 2060     		str	r0, [r4]	@ unaligned
 21198 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21199 002a A260     		str	r2, [r4, #8]	@ unaligned
 21200 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21201 002e 9B78     		ldrb	r3, [r3, #2]
 21202 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21203 0032 A373     		strb	r3, [r4, #14]
2891:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21204              		.loc 1 2891 0
 21205 0034 0023     		movs	r3, #0
 21206 0036 C7F83431 		str	r3, [r7, #308]
 21207 003a 66E1     		b	.L801
 21208              	.L807:
2892:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21209              		.loc 1 2892 0
 21210 003c C24A     		ldr	r2, .L808+4
 21211 003e D7F83431 		ldr	r3, [r7, #308]
 21212 0042 1344     		add	r3, r3, r2
 21213 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21214 0046 07F10800 		add	r0, r7, #8
 21215 004a D7F83421 		ldr	r2, [r7, #308]
 21216 004e BF49     		ldr	r1, .L808+8
 21217 0050 FFF7FEFF 		bl	sprintf
2893:..\src/command_processing.c ****         strcat(info_string, str);
 21218              		.loc 1 2893 0
 21219 0054 07F10802 		add	r2, r7, #8
 21220 0058 3B1D     		adds	r3, r7, #4
 21221 005a 1146     		mov	r1, r2
 21222 005c 1868     		ldr	r0, [r3]
 21223 005e FFF7FEFF 		bl	strcat
2894:..\src/command_processing.c ****         
2895:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21224              		.loc 1 2895 0
 21225 0062 B94A     		ldr	r2, .L808+4
 21226 0064 D7F83431 		ldr	r3, [r7, #308]
 21227 0068 1344     		add	r3, r3, r2
 21228 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21229 006c 1946     		mov	r1, r3
 21230 006e B84A     		ldr	r2, .L808+12
 21231 0070 0B46     		mov	r3, r1
 21232 0072 9B00     		lsls	r3, r3, #2
 21233 0074 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 467


 21234 0076 1344     		add	r3, r3, r2
 21235 0078 03F20223 		addw	r3, r3, #514
 21236 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21237 007e 002B     		cmp	r3, #0
 21238 0080 31D0     		beq	.L802
2896:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21239              		.loc 1 2896 0
 21240 0082 B449     		ldr	r1, .L808+16
 21241 0084 D7F83421 		ldr	r2, [r7, #308]
 21242 0088 1346     		mov	r3, r2
 21243 008a 9B00     		lsls	r3, r3, #2
 21244 008c 1344     		add	r3, r3, r2
 21245 008e DB00     		lsls	r3, r3, #3
 21246 0090 0B44     		add	r3, r3, r1
 21247 0092 0233     		adds	r3, r3, #2
 21248 0094 B3F90030 		ldrsh	r3, [r3]
 21249 0098 1C46     		mov	r4, r3
 21250 009a AE49     		ldr	r1, .L808+16
 21251 009c D7F83421 		ldr	r2, [r7, #308]
 21252 00a0 1346     		mov	r3, r2
 21253 00a2 9B00     		lsls	r3, r3, #2
 21254 00a4 1344     		add	r3, r3, r2
 21255 00a6 DB00     		lsls	r3, r3, #3
 21256 00a8 0B44     		add	r3, r3, r1
 21257 00aa 0433     		adds	r3, r3, #4
 21258 00ac B3F90030 		ldrsh	r3, [r3]
 21259 00b0 1D46     		mov	r5, r3
 21260 00b2 A849     		ldr	r1, .L808+16
 21261 00b4 D7F83421 		ldr	r2, [r7, #308]
 21262 00b8 1346     		mov	r3, r2
 21263 00ba 9B00     		lsls	r3, r3, #2
 21264 00bc 1344     		add	r3, r3, r2
 21265 00be DB00     		lsls	r3, r3, #3
 21266 00c0 0B44     		add	r3, r3, r1
 21267 00c2 0633     		adds	r3, r3, #6
 21268 00c4 B3F90030 		ldrsh	r3, [r3]
 21269 00c8 07F10800 		add	r0, r7, #8
 21270 00cc 0093     		str	r3, [sp]
 21271 00ce 2B46     		mov	r3, r5
 21272 00d0 2246     		mov	r2, r4
 21273 00d2 A149     		ldr	r1, .L808+20
 21274 00d4 FFF7FEFF 		bl	sprintf
2897:..\src/command_processing.c ****             strcat(info_string, str);
 21275              		.loc 1 2897 0
 21276 00d8 07F10802 		add	r2, r7, #8
 21277 00dc 3B1D     		adds	r3, r7, #4
 21278 00de 1146     		mov	r1, r2
 21279 00e0 1868     		ldr	r0, [r3]
 21280 00e2 FFF7FEFF 		bl	strcat
 21281              	.L802:
2898:..\src/command_processing.c ****         }
2899:..\src/command_processing.c **** 
2900:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21282              		.loc 1 2900 0
 21283 00e6 984A     		ldr	r2, .L808+4
 21284 00e8 D7F83431 		ldr	r3, [r7, #308]
 21285 00ec 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 468


 21286 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21287 00f0 1946     		mov	r1, r3
 21288 00f2 974A     		ldr	r2, .L808+12
 21289 00f4 0B46     		mov	r3, r1
 21290 00f6 9B00     		lsls	r3, r3, #2
 21291 00f8 0B44     		add	r3, r3, r1
 21292 00fa 1344     		add	r3, r3, r2
 21293 00fc 03F20323 		addw	r3, r3, #515
 21294 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21295 0102 002B     		cmp	r3, #0
 21296 0104 31D0     		beq	.L803
2901:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21297              		.loc 1 2901 0
 21298 0106 9349     		ldr	r1, .L808+16
 21299 0108 D7F83421 		ldr	r2, [r7, #308]
 21300 010c 1346     		mov	r3, r2
 21301 010e 9B00     		lsls	r3, r3, #2
 21302 0110 1344     		add	r3, r3, r2
 21303 0112 DB00     		lsls	r3, r3, #3
 21304 0114 0B44     		add	r3, r3, r1
 21305 0116 0833     		adds	r3, r3, #8
 21306 0118 B3F90030 		ldrsh	r3, [r3]
 21307 011c 1C46     		mov	r4, r3
 21308 011e 8D49     		ldr	r1, .L808+16
 21309 0120 D7F83421 		ldr	r2, [r7, #308]
 21310 0124 1346     		mov	r3, r2
 21311 0126 9B00     		lsls	r3, r3, #2
 21312 0128 1344     		add	r3, r3, r2
 21313 012a DB00     		lsls	r3, r3, #3
 21314 012c 0B44     		add	r3, r3, r1
 21315 012e 0A33     		adds	r3, r3, #10
 21316 0130 B3F90030 		ldrsh	r3, [r3]
 21317 0134 1D46     		mov	r5, r3
 21318 0136 8749     		ldr	r1, .L808+16
 21319 0138 D7F83421 		ldr	r2, [r7, #308]
 21320 013c 1346     		mov	r3, r2
 21321 013e 9B00     		lsls	r3, r3, #2
 21322 0140 1344     		add	r3, r3, r2
 21323 0142 DB00     		lsls	r3, r3, #3
 21324 0144 0B44     		add	r3, r3, r1
 21325 0146 0C33     		adds	r3, r3, #12
 21326 0148 B3F90030 		ldrsh	r3, [r3]
 21327 014c 07F10800 		add	r0, r7, #8
 21328 0150 0093     		str	r3, [sp]
 21329 0152 2B46     		mov	r3, r5
 21330 0154 2246     		mov	r2, r4
 21331 0156 8149     		ldr	r1, .L808+24
 21332 0158 FFF7FEFF 		bl	sprintf
2902:..\src/command_processing.c ****             strcat(info_string, str);
 21333              		.loc 1 2902 0
 21334 015c 07F10802 		add	r2, r7, #8
 21335 0160 3B1D     		adds	r3, r7, #4
 21336 0162 1146     		mov	r1, r2
 21337 0164 1868     		ldr	r0, [r3]
 21338 0166 FFF7FEFF 		bl	strcat
 21339              	.L803:
2903:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 469


2904:..\src/command_processing.c **** 
2905:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21340              		.loc 1 2905 0
 21341 016a 774A     		ldr	r2, .L808+4
 21342 016c D7F83431 		ldr	r3, [r7, #308]
 21343 0170 1344     		add	r3, r3, r2
 21344 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21345 0174 1946     		mov	r1, r3
 21346 0176 764A     		ldr	r2, .L808+12
 21347 0178 0B46     		mov	r3, r1
 21348 017a 9B00     		lsls	r3, r3, #2
 21349 017c 0B44     		add	r3, r3, r1
 21350 017e 1344     		add	r3, r3, r2
 21351 0180 03F50173 		add	r3, r3, #516
 21352 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21353 0186 002B     		cmp	r3, #0
 21354 0188 31D0     		beq	.L804
2906:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21355              		.loc 1 2906 0
 21356 018a 7249     		ldr	r1, .L808+16
 21357 018c D7F83421 		ldr	r2, [r7, #308]
 21358 0190 1346     		mov	r3, r2
 21359 0192 9B00     		lsls	r3, r3, #2
 21360 0194 1344     		add	r3, r3, r2
 21361 0196 DB00     		lsls	r3, r3, #3
 21362 0198 0B44     		add	r3, r3, r1
 21363 019a 0E33     		adds	r3, r3, #14
 21364 019c B3F90030 		ldrsh	r3, [r3]
 21365 01a0 1C46     		mov	r4, r3
 21366 01a2 6C49     		ldr	r1, .L808+16
 21367 01a4 D7F83421 		ldr	r2, [r7, #308]
 21368 01a8 1346     		mov	r3, r2
 21369 01aa 9B00     		lsls	r3, r3, #2
 21370 01ac 1344     		add	r3, r3, r2
 21371 01ae DB00     		lsls	r3, r3, #3
 21372 01b0 0B44     		add	r3, r3, r1
 21373 01b2 1033     		adds	r3, r3, #16
 21374 01b4 B3F90030 		ldrsh	r3, [r3]
 21375 01b8 1D46     		mov	r5, r3
 21376 01ba 6649     		ldr	r1, .L808+16
 21377 01bc D7F83421 		ldr	r2, [r7, #308]
 21378 01c0 1346     		mov	r3, r2
 21379 01c2 9B00     		lsls	r3, r3, #2
 21380 01c4 1344     		add	r3, r3, r2
 21381 01c6 DB00     		lsls	r3, r3, #3
 21382 01c8 0B44     		add	r3, r3, r1
 21383 01ca 1233     		adds	r3, r3, #18
 21384 01cc B3F90030 		ldrsh	r3, [r3]
 21385 01d0 07F10800 		add	r0, r7, #8
 21386 01d4 0093     		str	r3, [sp]
 21387 01d6 2B46     		mov	r3, r5
 21388 01d8 2246     		mov	r2, r4
 21389 01da 6149     		ldr	r1, .L808+28
 21390 01dc FFF7FEFF 		bl	sprintf
2907:..\src/command_processing.c ****             strcat(info_string, str);
 21391              		.loc 1 2907 0
 21392 01e0 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 470


 21393 01e4 3B1D     		adds	r3, r7, #4
 21394 01e6 1146     		mov	r1, r2
 21395 01e8 1868     		ldr	r0, [r3]
 21396 01ea FFF7FEFF 		bl	strcat
 21397              	.L804:
2908:..\src/command_processing.c ****         }
2909:..\src/command_processing.c ****         
2910:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21398              		.loc 1 2910 0
 21399 01ee 564A     		ldr	r2, .L808+4
 21400 01f0 D7F83431 		ldr	r3, [r7, #308]
 21401 01f4 1344     		add	r3, r3, r2
 21402 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21403 01f8 1946     		mov	r1, r3
 21404 01fa 554A     		ldr	r2, .L808+12
 21405 01fc 0B46     		mov	r3, r1
 21406 01fe 9B00     		lsls	r3, r3, #2
 21407 0200 0B44     		add	r3, r3, r1
 21408 0202 1344     		add	r3, r3, r2
 21409 0204 03F20523 		addw	r3, r3, #517
 21410 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21411 020a 002B     		cmp	r3, #0
 21412 020c 4FD0     		beq	.L805
2911:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21413              		.loc 1 2911 0
 21414 020e 5149     		ldr	r1, .L808+16
 21415 0210 D7F83421 		ldr	r2, [r7, #308]
 21416 0214 1346     		mov	r3, r2
 21417 0216 9B00     		lsls	r3, r3, #2
 21418 0218 1344     		add	r3, r3, r2
 21419 021a DB00     		lsls	r3, r3, #3
 21420 021c 0B44     		add	r3, r3, r1
 21421 021e 1433     		adds	r3, r3, #20
 21422 0220 1B68     		ldr	r3, [r3]	@ float
 21423 0222 1846     		mov	r0, r3
 21424 0224 FFF7FEFF 		bl	__aeabi_f2d
 21425 0228 8246     		mov	r10, r0
 21426 022a 8B46     		mov	fp, r1
 21427 022c 4949     		ldr	r1, .L808+16
 21428 022e D7F83421 		ldr	r2, [r7, #308]
 21429 0232 1346     		mov	r3, r2
 21430 0234 9B00     		lsls	r3, r3, #2
 21431 0236 1344     		add	r3, r3, r2
 21432 0238 DB00     		lsls	r3, r3, #3
 21433 023a 0B44     		add	r3, r3, r1
 21434 023c 1833     		adds	r3, r3, #24
 21435 023e 1B68     		ldr	r3, [r3]	@ float
 21436 0240 1846     		mov	r0, r3
 21437 0242 FFF7FEFF 		bl	__aeabi_f2d
 21438 0246 0446     		mov	r4, r0
 21439 0248 0D46     		mov	r5, r1
 21440 024a 4249     		ldr	r1, .L808+16
 21441 024c D7F83421 		ldr	r2, [r7, #308]
 21442 0250 1346     		mov	r3, r2
 21443 0252 9B00     		lsls	r3, r3, #2
 21444 0254 1344     		add	r3, r3, r2
 21445 0256 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 471


 21446 0258 0B44     		add	r3, r3, r1
 21447 025a 1C33     		adds	r3, r3, #28
 21448 025c 1B68     		ldr	r3, [r3]	@ float
 21449 025e 1846     		mov	r0, r3
 21450 0260 FFF7FEFF 		bl	__aeabi_f2d
 21451 0264 8046     		mov	r8, r0
 21452 0266 8946     		mov	r9, r1
 21453 0268 3A49     		ldr	r1, .L808+16
 21454 026a D7F83421 		ldr	r2, [r7, #308]
 21455 026e 1346     		mov	r3, r2
 21456 0270 9B00     		lsls	r3, r3, #2
 21457 0272 1344     		add	r3, r3, r2
 21458 0274 DB00     		lsls	r3, r3, #3
 21459 0276 0B44     		add	r3, r3, r1
 21460 0278 2033     		adds	r3, r3, #32
 21461 027a 1B68     		ldr	r3, [r3]	@ float
 21462 027c 1846     		mov	r0, r3
 21463 027e FFF7FEFF 		bl	__aeabi_f2d
 21464 0282 0246     		mov	r2, r0
 21465 0284 0B46     		mov	r3, r1
 21466 0286 07F10800 		add	r0, r7, #8
 21467 028a CDE90423 		strd	r2, [sp, #16]
 21468 028e CDE90289 		strd	r8, [sp, #8]
 21469 0292 CDE90045 		strd	r4, [sp]
 21470 0296 5246     		mov	r2, r10
 21471 0298 5B46     		mov	r3, fp
 21472 029a 3249     		ldr	r1, .L808+32
 21473 029c FFF7FEFF 		bl	sprintf
2912:..\src/command_processing.c ****             strcat(info_string, str);
 21474              		.loc 1 2912 0
 21475 02a0 07F10802 		add	r2, r7, #8
 21476 02a4 3B1D     		adds	r3, r7, #4
 21477 02a6 1146     		mov	r1, r2
 21478 02a8 1868     		ldr	r0, [r3]
 21479 02aa FFF7FEFF 		bl	strcat
 21480              	.L805:
2913:..\src/command_processing.c ****         }
2914:..\src/command_processing.c ****         
2915:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21481              		.loc 1 2915 0
 21482 02ae 264A     		ldr	r2, .L808+4
 21483 02b0 D7F83431 		ldr	r3, [r7, #308]
 21484 02b4 1344     		add	r3, r3, r2
 21485 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21486 02b8 1946     		mov	r1, r3
 21487 02ba 254A     		ldr	r2, .L808+12
 21488 02bc 0B46     		mov	r3, r1
 21489 02be 9B00     		lsls	r3, r3, #2
 21490 02c0 0B44     		add	r3, r3, r1
 21491 02c2 1344     		add	r3, r3, r2
 21492 02c4 03F20623 		addw	r3, r3, #518
 21493 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21494 02ca 002B     		cmp	r3, #0
 21495 02cc 18D0     		beq	.L806
2916:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21496              		.loc 1 2916 0
 21497 02ce 2149     		ldr	r1, .L808+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 472


 21498 02d0 D7F83421 		ldr	r2, [r7, #308]
 21499 02d4 1346     		mov	r3, r2
 21500 02d6 9B00     		lsls	r3, r3, #2
 21501 02d8 1344     		add	r3, r3, r2
 21502 02da DB00     		lsls	r3, r3, #3
 21503 02dc 0B44     		add	r3, r3, r1
 21504 02de 2433     		adds	r3, r3, #36
 21505 02e0 B3F90030 		ldrsh	r3, [r3]
 21506 02e4 1A46     		mov	r2, r3
 21507 02e6 07F10803 		add	r3, r7, #8
 21508 02ea 1F49     		ldr	r1, .L808+36
 21509 02ec 1846     		mov	r0, r3
 21510 02ee FFF7FEFF 		bl	sprintf
2917:..\src/command_processing.c ****             strcat(info_string, str);
 21511              		.loc 1 2917 0
 21512 02f2 07F10802 		add	r2, r7, #8
 21513 02f6 3B1D     		adds	r3, r7, #4
 21514 02f8 1146     		mov	r1, r2
 21515 02fa 1868     		ldr	r0, [r3]
 21516 02fc FFF7FEFF 		bl	strcat
 21517              	.L806:
2891:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21518              		.loc 1 2891 0 discriminator 2
 21519 0300 D7F83431 		ldr	r3, [r7, #308]
 21520 0304 0133     		adds	r3, r3, #1
 21521 0306 C7F83431 		str	r3, [r7, #308]
 21522              	.L801:
2891:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21523              		.loc 1 2891 0 is_stmt 0 discriminator 1
 21524 030a 184B     		ldr	r3, .L808+40
 21525 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21526 030e 1A46     		mov	r2, r3
 21527 0310 D7F83431 		ldr	r3, [r7, #308]
 21528 0314 9A42     		cmp	r2, r3
 21529 0316 3FF791AE 		bgt	.L807
2918:..\src/command_processing.c ****         }
2919:..\src/command_processing.c ****         
2920:..\src/command_processing.c ****     }
2921:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21530              		.loc 1 2921 0 is_stmt 1
 21531 031a 3B1D     		adds	r3, r7, #4
 21532 031c 1868     		ldr	r0, [r3]
 21533 031e FFF7FEFF 		bl	strlen
 21534 0322 0346     		mov	r3, r0
 21535 0324 1A46     		mov	r2, r3
 21536 0326 3B1D     		adds	r3, r7, #4
 21537 0328 1B68     		ldr	r3, [r3]
 21538 032a 1344     		add	r3, r3, r2
 21539 032c 104A     		ldr	r2, .L808+44
 21540 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21541 0330 9278     		ldrb	r2, [r2, #2]
 21542 0332 1980     		strh	r1, [r3]	@ unaligned
 21543 0334 9A70     		strb	r2, [r3, #2]
2922:..\src/command_processing.c **** }
 21544              		.loc 1 2922 0
 21545 0336 00BF     		nop
 21546 0338 07F59C77 		add	r7, r7, #312
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 473


 21547              		.cfi_def_cfa_offset 32
 21548 033c BD46     		mov	sp, r7
 21549              		.cfi_def_cfa_register 13
 21550              		@ sp needed
 21551 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21552              	.L809:
 21553 0342 00BF     		.align	2
 21554              	.L808:
 21555 0344 3C1F0000 		.word	.LC292
 21556 0348 00000000 		.word	IMU_connected
 21557 034c 60190000 		.word	.LC240
 21558 0350 00000000 		.word	c_mem
 21559 0354 00000000 		.word	g_imu
 21560 0358 4C1F0000 		.word	.LC293
 21561 035c 601F0000 		.word	.LC294
 21562 0360 741F0000 		.word	.LC295
 21563 0364 881F0000 		.word	.LC296
 21564 0368 A81F0000 		.word	.LC297
 21565 036c 00000000 		.word	N_IMU_Connected
 21566 0370 58110000 		.word	.LC152
 21567              		.cfi_endproc
 21568              	.LFE80:
 21569              		.size	IMU_reading_info, .-IMU_reading_info
 21570              		.section	.text.commWrite_old_id,"ax",%progbits
 21571              		.align	2
 21572              		.global	commWrite_old_id
 21573              		.thumb
 21574              		.thumb_func
 21575              		.type	commWrite_old_id, %function
 21576              	commWrite_old_id:
 21577              	.LFB81:
2923:..\src/command_processing.c **** 
2924:..\src/command_processing.c **** //==============================================================================
2925:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2926:..\src/command_processing.c **** //==============================================================================
2927:..\src/command_processing.c **** 
2928:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2929:..\src/command_processing.c **** {
 21578              		.loc 1 2929 0
 21579              		.cfi_startproc
 21580              		@ args = 0, pretend = 0, frame = 16
 21581              		@ frame_needed = 1, uses_anonymous_args = 0
 21582 0000 80B5     		push	{r7, lr}
 21583              		.cfi_def_cfa_offset 8
 21584              		.cfi_offset 7, -8
 21585              		.cfi_offset 14, -4
 21586 0002 84B0     		sub	sp, sp, #16
 21587              		.cfi_def_cfa_offset 24
 21588 0004 00AF     		add	r7, sp, #0
 21589              		.cfi_def_cfa_register 7
 21590 0006 7860     		str	r0, [r7, #4]
 21591 0008 0B46     		mov	r3, r1
 21592 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21593 000c 1346     		mov	r3, r2
 21594 000e 7B70     		strb	r3, [r7, #1]
2930:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2931:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 474


2932:..\src/command_processing.c ****     // frame - start
2933:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21595              		.loc 1 2933 0
 21596 0010 3A20     		movs	r0, #58
 21597 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2934:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21598              		.loc 1 2934 0
 21599 0016 3A20     		movs	r0, #58
 21600 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2935:..\src/command_processing.c ****     // frame - ID
2936:..\src/command_processing.c ****     //if(old_id)
2937:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21601              		.loc 1 2937 0
 21602 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21603 001e 1846     		mov	r0, r3
 21604 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2938:..\src/command_processing.c ****     //else
2939:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2940:..\src/command_processing.c ****         
2941:..\src/command_processing.c ****     // frame - length
2942:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21605              		.loc 1 2942 0
 21606 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21607 0026 DBB2     		uxtb	r3, r3
 21608 0028 1846     		mov	r0, r3
 21609 002a FFF7FEFF 		bl	UART_RS485_PutChar
2943:..\src/command_processing.c ****     // frame - packet data
2944:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21610              		.loc 1 2944 0
 21611 002e 0023     		movs	r3, #0
 21612 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21613 0032 09E0     		b	.L811
 21614              	.L812:
2945:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21615              		.loc 1 2945 0 discriminator 3
 21616 0034 FB89     		ldrh	r3, [r7, #14]
 21617 0036 7A68     		ldr	r2, [r7, #4]
 21618 0038 1344     		add	r3, r3, r2
 21619 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21620 003c 1846     		mov	r0, r3
 21621 003e FFF7FEFF 		bl	UART_RS485_PutChar
2944:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21622              		.loc 1 2944 0 discriminator 3
 21623 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21624 0044 0133     		adds	r3, r3, #1
 21625 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21626              	.L811:
2944:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21627              		.loc 1 2944 0 is_stmt 0 discriminator 1
 21628 0048 FA89     		ldrh	r2, [r7, #14]
 21629 004a 7B88     		ldrh	r3, [r7, #2]
 21630 004c 9A42     		cmp	r2, r3
 21631 004e F1D3     		bcc	.L812
2946:..\src/command_processing.c ****     }
2947:..\src/command_processing.c **** 
2948:..\src/command_processing.c ****     index = 0;
 21632              		.loc 1 2948 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 475


 21633 0050 0023     		movs	r3, #0
 21634 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2949:..\src/command_processing.c **** 
2950:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21635              		.loc 1 2950 0
 21636 0054 00BF     		nop
 21637              	.L814:
 21638              		.loc 1 2950 0 is_stmt 0 discriminator 2
 21639 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21640 005a 0346     		mov	r3, r0
 21641 005c 03F00103 		and	r3, r3, #1
 21642 0060 002B     		cmp	r3, #0
 21643 0062 05D1     		bne	.L813
 21644              		.loc 1 2950 0 discriminator 1
 21645 0064 FB89     		ldrh	r3, [r7, #14]
 21646 0066 5A1C     		adds	r2, r3, #1
 21647 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21648 006a B3F57A7F 		cmp	r3, #1000
 21649 006e F2D9     		bls	.L814
 21650              	.L813:
2951:..\src/command_processing.c **** 
2952:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21651              		.loc 1 2952 0 is_stmt 1
 21652 0070 0120     		movs	r0, #1
 21653 0072 FFF7FEFF 		bl	RS485_CTS_Write
2953:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21654              		.loc 1 2953 0
 21655 0076 0020     		movs	r0, #0
 21656 0078 FFF7FEFF 		bl	RS485_CTS_Write
2954:..\src/command_processing.c **** }
 21657              		.loc 1 2954 0
 21658 007c 00BF     		nop
 21659 007e 1037     		adds	r7, r7, #16
 21660              		.cfi_def_cfa_offset 8
 21661 0080 BD46     		mov	sp, r7
 21662              		.cfi_def_cfa_register 13
 21663              		@ sp needed
 21664 0082 80BD     		pop	{r7, pc}
 21665              		.cfi_endproc
 21666              	.LFE81:
 21667              		.size	commWrite_old_id, .-commWrite_old_id
 21668              		.section	.text.commWrite,"ax",%progbits
 21669              		.align	2
 21670              		.global	commWrite
 21671              		.thumb
 21672              		.thumb_func
 21673              		.type	commWrite, %function
 21674              	commWrite:
 21675              	.LFB82:
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2957:..\src/command_processing.c **** {
 21676              		.loc 1 2957 0
 21677              		.cfi_startproc
 21678              		@ args = 0, pretend = 0, frame = 16
 21679              		@ frame_needed = 1, uses_anonymous_args = 0
 21680 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 476


 21681              		.cfi_def_cfa_offset 8
 21682              		.cfi_offset 7, -8
 21683              		.cfi_offset 14, -4
 21684 0002 84B0     		sub	sp, sp, #16
 21685              		.cfi_def_cfa_offset 24
 21686 0004 00AF     		add	r7, sp, #0
 21687              		.cfi_def_cfa_register 7
 21688 0006 7860     		str	r0, [r7, #4]
 21689 0008 0B46     		mov	r3, r1
 21690 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2958:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2959:..\src/command_processing.c **** 
2960:..\src/command_processing.c ****     // frame - start
2961:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21691              		.loc 1 2961 0
 21692 000c 3A20     		movs	r0, #58
 21693 000e FFF7FEFF 		bl	UART_RS485_PutChar
2962:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21694              		.loc 1 2962 0
 21695 0012 3A20     		movs	r0, #58
 21696 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2963:..\src/command_processing.c ****     // frame - ID
2964:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21697              		.loc 1 2964 0
 21698 0018 1A4B     		ldr	r3, .L820
 21699 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21700 001e 1846     		mov	r0, r3
 21701 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2965:..\src/command_processing.c ****     // frame - length
2966:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21702              		.loc 1 2966 0
 21703 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21704 0026 DBB2     		uxtb	r3, r3
 21705 0028 1846     		mov	r0, r3
 21706 002a FFF7FEFF 		bl	UART_RS485_PutChar
2967:..\src/command_processing.c ****     // frame - packet data
2968:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21707              		.loc 1 2968 0
 21708 002e 0023     		movs	r3, #0
 21709 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21710 0032 09E0     		b	.L816
 21711              	.L817:
2969:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21712              		.loc 1 2969 0 discriminator 3
 21713 0034 FB89     		ldrh	r3, [r7, #14]
 21714 0036 7A68     		ldr	r2, [r7, #4]
 21715 0038 1344     		add	r3, r3, r2
 21716 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21717 003c 1846     		mov	r0, r3
 21718 003e FFF7FEFF 		bl	UART_RS485_PutChar
2968:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21719              		.loc 1 2968 0 discriminator 3
 21720 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21721 0044 0133     		adds	r3, r3, #1
 21722 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21723              	.L816:
2968:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 477


 21724              		.loc 1 2968 0 is_stmt 0 discriminator 1
 21725 0048 FA89     		ldrh	r2, [r7, #14]
 21726 004a 7B88     		ldrh	r3, [r7, #2]
 21727 004c 9A42     		cmp	r2, r3
 21728 004e F1D3     		bcc	.L817
2970:..\src/command_processing.c ****     }
2971:..\src/command_processing.c **** 
2972:..\src/command_processing.c ****     index = 0;
 21729              		.loc 1 2972 0 is_stmt 1
 21730 0050 0023     		movs	r3, #0
 21731 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2973:..\src/command_processing.c **** 
2974:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21732              		.loc 1 2974 0
 21733 0054 00BF     		nop
 21734              	.L819:
 21735              		.loc 1 2974 0 is_stmt 0 discriminator 2
 21736 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21737 005a 0346     		mov	r3, r0
 21738 005c 03F00103 		and	r3, r3, #1
 21739 0060 002B     		cmp	r3, #0
 21740 0062 05D1     		bne	.L818
 21741              		.loc 1 2974 0 discriminator 1
 21742 0064 FB89     		ldrh	r3, [r7, #14]
 21743 0066 5A1C     		adds	r2, r3, #1
 21744 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21745 006a B3F57A7F 		cmp	r3, #1000
 21746 006e F2D9     		bls	.L819
 21747              	.L818:
2975:..\src/command_processing.c **** 
2976:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21748              		.loc 1 2976 0 is_stmt 1
 21749 0070 0120     		movs	r0, #1
 21750 0072 FFF7FEFF 		bl	RS485_CTS_Write
2977:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21751              		.loc 1 2977 0
 21752 0076 0020     		movs	r0, #0
 21753 0078 FFF7FEFF 		bl	RS485_CTS_Write
2978:..\src/command_processing.c **** }
 21754              		.loc 1 2978 0
 21755 007c 00BF     		nop
 21756 007e 1037     		adds	r7, r7, #16
 21757              		.cfi_def_cfa_offset 8
 21758 0080 BD46     		mov	sp, r7
 21759              		.cfi_def_cfa_register 13
 21760              		@ sp needed
 21761 0082 80BD     		pop	{r7, pc}
 21762              	.L821:
 21763              		.align	2
 21764              	.L820:
 21765 0084 00000000 		.word	g_mem
 21766              		.cfi_endproc
 21767              	.LFE82:
 21768              		.size	commWrite, .-commWrite
 21769              		.section	.text.commWriteID,"ax",%progbits
 21770              		.align	2
 21771              		.global	commWriteID
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 478


 21772              		.thumb
 21773              		.thumb_func
 21774              		.type	commWriteID, %function
 21775              	commWriteID:
 21776              	.LFB83:
2979:..\src/command_processing.c **** 
2980:..\src/command_processing.c **** //==============================================================================
2981:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2982:..\src/command_processing.c **** //==============================================================================
2983:..\src/command_processing.c **** 
2984:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2985:..\src/command_processing.c **** {
 21777              		.loc 1 2985 0
 21778              		.cfi_startproc
 21779              		@ args = 0, pretend = 0, frame = 8
 21780              		@ frame_needed = 1, uses_anonymous_args = 0
 21781 0000 80B5     		push	{r7, lr}
 21782              		.cfi_def_cfa_offset 8
 21783              		.cfi_offset 7, -8
 21784              		.cfi_offset 14, -4
 21785 0002 82B0     		sub	sp, sp, #8
 21786              		.cfi_def_cfa_offset 16
 21787 0004 00AF     		add	r7, sp, #0
 21788              		.cfi_def_cfa_register 7
 21789 0006 7860     		str	r0, [r7, #4]
 21790 0008 0B46     		mov	r3, r1
 21791 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21792 000c 1346     		mov	r3, r2
 21793 000e 7B70     		strb	r3, [r7, #1]
2986:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2987:..\src/command_processing.c **** 
2988:..\src/command_processing.c ****     // frame - start
2989:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21794              		.loc 1 2989 0
 21795 0010 3A20     		movs	r0, #58
 21796 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2990:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21797              		.loc 1 2990 0
 21798 0016 3A20     		movs	r0, #58
 21799 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2991:..\src/command_processing.c ****     // frame - ID
2992:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21800              		.loc 1 2992 0
 21801 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21802 001e 1846     		mov	r0, r3
 21803 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2993:..\src/command_processing.c ****     // frame - length
2994:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21804              		.loc 1 2994 0
 21805 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21806 0026 DBB2     		uxtb	r3, r3
 21807 0028 1846     		mov	r0, r3
 21808 002a FFF7FEFF 		bl	UART_RS485_PutChar
2995:..\src/command_processing.c ****     // frame - packet data
2996:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 21809              		.loc 1 2996 0
 21810 002e 1B4B     		ldr	r3, .L827
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 479


 21811 0030 0022     		movs	r2, #0
 21812 0032 1A80     		strh	r2, [r3]	@ movhi
 21813 0034 0EE0     		b	.L823
 21814              	.L824:
2997:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21815              		.loc 1 2997 0 discriminator 3
 21816 0036 194B     		ldr	r3, .L827
 21817 0038 1B88     		ldrh	r3, [r3]
 21818 003a 1A46     		mov	r2, r3
 21819 003c 7B68     		ldr	r3, [r7, #4]
 21820 003e 1344     		add	r3, r3, r2
 21821 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21822 0042 1846     		mov	r0, r3
 21823 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2996:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21824              		.loc 1 2996 0 discriminator 3
 21825 0048 144B     		ldr	r3, .L827
 21826 004a 1B88     		ldrh	r3, [r3]
 21827 004c 0133     		adds	r3, r3, #1
 21828 004e 9AB2     		uxth	r2, r3
 21829 0050 124B     		ldr	r3, .L827
 21830 0052 1A80     		strh	r2, [r3]	@ movhi
 21831              	.L823:
2996:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21832              		.loc 1 2996 0 is_stmt 0 discriminator 1
 21833 0054 114B     		ldr	r3, .L827
 21834 0056 1B88     		ldrh	r3, [r3]
 21835 0058 7A88     		ldrh	r2, [r7, #2]
 21836 005a 9A42     		cmp	r2, r3
 21837 005c EBD8     		bhi	.L824
2998:..\src/command_processing.c ****     }
2999:..\src/command_processing.c **** 
3000:..\src/command_processing.c ****     i = 0;
 21838              		.loc 1 3000 0 is_stmt 1
 21839 005e 0F4B     		ldr	r3, .L827
 21840 0060 0022     		movs	r2, #0
 21841 0062 1A80     		strh	r2, [r3]	@ movhi
3001:..\src/command_processing.c **** 
3002:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 21842              		.loc 1 3002 0
 21843 0064 00BF     		nop
 21844              	.L826:
 21845              		.loc 1 3002 0 is_stmt 0 discriminator 2
 21846 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21847 006a 0346     		mov	r3, r0
 21848 006c 03F00103 		and	r3, r3, #1
 21849 0070 002B     		cmp	r3, #0
 21850 0072 08D1     		bne	.L825
 21851              		.loc 1 3002 0 discriminator 1
 21852 0074 094B     		ldr	r3, .L827
 21853 0076 1B88     		ldrh	r3, [r3]
 21854 0078 5A1C     		adds	r2, r3, #1
 21855 007a 91B2     		uxth	r1, r2
 21856 007c 074A     		ldr	r2, .L827
 21857 007e 1180     		strh	r1, [r2]	@ movhi
 21858 0080 B3F57A7F 		cmp	r3, #1000
 21859 0084 EFD9     		bls	.L826
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 480


 21860              	.L825:
3003:..\src/command_processing.c ****     
3004:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21861              		.loc 1 3004 0 is_stmt 1
 21862 0086 0120     		movs	r0, #1
 21863 0088 FFF7FEFF 		bl	RS485_CTS_Write
3005:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21864              		.loc 1 3005 0
 21865 008c 0020     		movs	r0, #0
 21866 008e FFF7FEFF 		bl	RS485_CTS_Write
3006:..\src/command_processing.c **** }
 21867              		.loc 1 3006 0
 21868 0092 00BF     		nop
 21869 0094 0837     		adds	r7, r7, #8
 21870              		.cfi_def_cfa_offset 8
 21871 0096 BD46     		mov	sp, r7
 21872              		.cfi_def_cfa_register 13
 21873              		@ sp needed
 21874 0098 80BD     		pop	{r7, pc}
 21875              	.L828:
 21876 009a 00BF     		.align	2
 21877              	.L827:
 21878 009c 04000000 		.word	i.11272
 21879              		.cfi_endproc
 21880              	.LFE83:
 21881              		.size	commWriteID, .-commWriteID
 21882              		.section	.text.LCRChecksum,"ax",%progbits
 21883              		.align	2
 21884              		.global	LCRChecksum
 21885              		.thumb
 21886              		.thumb_func
 21887              		.type	LCRChecksum, %function
 21888              	LCRChecksum:
 21889              	.LFB84:
3007:..\src/command_processing.c **** 
3008:..\src/command_processing.c **** //==============================================================================
3009:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
3010:..\src/command_processing.c **** //==============================================================================
3011:..\src/command_processing.c **** 
3012:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 21890              		.loc 1 3014 0
 21891              		.cfi_startproc
 21892              		@ args = 0, pretend = 0, frame = 16
 21893              		@ frame_needed = 1, uses_anonymous_args = 0
 21894              		@ link register save eliminated.
 21895 0000 80B4     		push	{r7}
 21896              		.cfi_def_cfa_offset 4
 21897              		.cfi_offset 7, -4
 21898 0002 85B0     		sub	sp, sp, #20
 21899              		.cfi_def_cfa_offset 24
 21900 0004 00AF     		add	r7, sp, #0
 21901              		.cfi_def_cfa_register 7
 21902 0006 7860     		str	r0, [r7, #4]
 21903 0008 0B46     		mov	r3, r1
 21904 000a FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 481


3015:..\src/command_processing.c ****     
3016:..\src/command_processing.c ****     uint8 CYDATA i;
3017:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 21905              		.loc 1 3017 0
 21906 000c 0023     		movs	r3, #0
 21907 000e BB73     		strb	r3, [r7, #14]
3018:..\src/command_processing.c ****     
3019:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 21908              		.loc 1 3019 0
 21909 0010 0023     		movs	r3, #0
 21910 0012 FB73     		strb	r3, [r7, #15]
 21911 0014 09E0     		b	.L830
 21912              	.L831:
3020:..\src/command_processing.c ****        checksum ^= data_array[i];
 21913              		.loc 1 3020 0 discriminator 3
 21914 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21915 0018 7A68     		ldr	r2, [r7, #4]
 21916 001a 1344     		add	r3, r3, r2
 21917 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 21918 001e BB7B     		ldrb	r3, [r7, #14]
 21919 0020 5340     		eors	r3, r3, r2
 21920 0022 BB73     		strb	r3, [r7, #14]
3019:..\src/command_processing.c ****        checksum ^= data_array[i];
 21921              		.loc 1 3019 0 discriminator 3
 21922 0024 FB7B     		ldrb	r3, [r7, #15]
 21923 0026 0133     		adds	r3, r3, #1
 21924 0028 FB73     		strb	r3, [r7, #15]
 21925              	.L830:
3019:..\src/command_processing.c ****        checksum ^= data_array[i];
 21926              		.loc 1 3019 0 is_stmt 0 discriminator 1
 21927 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 21928 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21929 002e 9A42     		cmp	r2, r3
 21930 0030 F1D3     		bcc	.L831
3021:..\src/command_processing.c ****   
3022:..\src/command_processing.c ****     return checksum;
 21931              		.loc 1 3022 0 is_stmt 1
 21932 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
3023:..\src/command_processing.c **** }
 21933              		.loc 1 3023 0
 21934 0034 1846     		mov	r0, r3
 21935 0036 1437     		adds	r7, r7, #20
 21936              		.cfi_def_cfa_offset 4
 21937 0038 BD46     		mov	sp, r7
 21938              		.cfi_def_cfa_register 13
 21939              		@ sp needed
 21940 003a 80BC     		pop	{r7}
 21941              		.cfi_restore 7
 21942              		.cfi_def_cfa_offset 0
 21943 003c 7047     		bx	lr
 21944              		.cfi_endproc
 21945              	.LFE84:
 21946              		.size	LCRChecksum, .-LCRChecksum
 21947 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 21948              		.align	2
 21949              		.global	sendAcknowledgment
 21950              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 482


 21951              		.thumb_func
 21952              		.type	sendAcknowledgment, %function
 21953              	sendAcknowledgment:
 21954              	.LFB85:
3024:..\src/command_processing.c **** 
3025:..\src/command_processing.c **** 
3026:..\src/command_processing.c **** //==============================================================================
3027:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
3028:..\src/command_processing.c **** //==============================================================================
3029:..\src/command_processing.c **** 
3030:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 21955              		.loc 1 3030 0
 21956              		.cfi_startproc
 21957              		@ args = 0, pretend = 0, frame = 16
 21958              		@ frame_needed = 1, uses_anonymous_args = 0
 21959 0000 80B5     		push	{r7, lr}
 21960              		.cfi_def_cfa_offset 8
 21961              		.cfi_offset 7, -8
 21962              		.cfi_offset 14, -4
 21963 0002 84B0     		sub	sp, sp, #16
 21964              		.cfi_def_cfa_offset 24
 21965 0004 00AF     		add	r7, sp, #0
 21966              		.cfi_def_cfa_register 7
 21967 0006 0346     		mov	r3, r0
 21968 0008 FB71     		strb	r3, [r7, #7]
3031:..\src/command_processing.c ****     int packet_lenght = 2;
 21969              		.loc 1 3031 0
 21970 000a 0223     		movs	r3, #2
 21971 000c FB60     		str	r3, [r7, #12]
3032:..\src/command_processing.c ****     uint8 packet_data[2];
3033:..\src/command_processing.c **** 
3034:..\src/command_processing.c ****     packet_data[0] = value;
 21972              		.loc 1 3034 0
 21973 000e FB79     		ldrb	r3, [r7, #7]
 21974 0010 3B72     		strb	r3, [r7, #8]
3035:..\src/command_processing.c ****     packet_data[1] = value;
 21975              		.loc 1 3035 0
 21976 0012 FB79     		ldrb	r3, [r7, #7]
 21977 0014 7B72     		strb	r3, [r7, #9]
3036:..\src/command_processing.c **** 
3037:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 21978              		.loc 1 3037 0
 21979 0016 FB68     		ldr	r3, [r7, #12]
 21980 0018 9AB2     		uxth	r2, r3
 21981 001a 07F10803 		add	r3, r7, #8
 21982 001e 1146     		mov	r1, r2
 21983 0020 1846     		mov	r0, r3
 21984 0022 FFF7FEFF 		bl	commWrite
3038:..\src/command_processing.c **** }
 21985              		.loc 1 3038 0
 21986 0026 00BF     		nop
 21987 0028 1037     		adds	r7, r7, #16
 21988              		.cfi_def_cfa_offset 8
 21989 002a BD46     		mov	sp, r7
 21990              		.cfi_def_cfa_register 13
 21991              		@ sp needed
 21992 002c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 483


 21993              		.cfi_endproc
 21994              	.LFE85:
 21995              		.size	sendAcknowledgment, .-sendAcknowledgment
 21996 002e 00BF     		.section	.text.memStore,"ax",%progbits
 21997              		.align	2
 21998              		.global	memStore
 21999              		.thumb
 22000              		.thumb_func
 22001              		.type	memStore, %function
 22002              	memStore:
 22003              	.LFB86:
3039:..\src/command_processing.c **** 
3040:..\src/command_processing.c **** //==============================================================================
3041:..\src/command_processing.c **** //                                                                  STORE MEMORY
3042:..\src/command_processing.c **** //==============================================================================
3043:..\src/command_processing.c **** 
3044:..\src/command_processing.c **** 
3045:..\src/command_processing.c **** uint8 memStore(int displacement)
3046:..\src/command_processing.c **** {
 22004              		.loc 1 3046 0
 22005              		.cfi_startproc
 22006              		@ args = 0, pretend = 0, frame = 24
 22007              		@ frame_needed = 1, uses_anonymous_args = 0
 22008 0000 80B5     		push	{r7, lr}
 22009              		.cfi_def_cfa_offset 8
 22010              		.cfi_offset 7, -8
 22011              		.cfi_offset 14, -4
 22012 0002 86B0     		sub	sp, sp, #24
 22013              		.cfi_def_cfa_offset 32
 22014 0004 00AF     		add	r7, sp, #0
 22015              		.cfi_def_cfa_register 7
 22016 0006 7860     		str	r0, [r7, #4]
3047:..\src/command_processing.c ****     int i;  // iterator
3048:..\src/command_processing.c ****     uint8 writeStatus;
3049:..\src/command_processing.c ****     int pages;
3050:..\src/command_processing.c ****     uint8 ret_val = 1;
 22017              		.loc 1 3050 0
 22018 0008 0123     		movs	r3, #1
 22019 000a FB74     		strb	r3, [r7, #19]
3051:..\src/command_processing.c **** 
3052:..\src/command_processing.c ****     // Disable Interrupt
3053:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22020              		.loc 1 3053 0
 22021 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
3054:..\src/command_processing.c **** 
3055:..\src/command_processing.c ****     // Stop motor
3056:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22022              		.loc 1 3056 0
 22023 0010 0020     		movs	r0, #0
 22024 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
3057:..\src/command_processing.c **** 
3058:..\src/command_processing.c ****     // Update temperature information for better writing performance
3059:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22025              		.loc 1 3059 0
 22026 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 484


 22027              		.loc 1 3061 0
 22028 001a 1D4A     		ldr	r2, .L840
 22029 001c 1D4B     		ldr	r3, .L840+4
 22030 001e 1046     		mov	r0, r2
 22031 0020 1946     		mov	r1, r3
 22032 0022 4FF43D73 		mov	r3, #756
 22033 0026 1A46     		mov	r2, r3
 22034 0028 FFF7FEFF 		bl	memcpy
3062:..\src/command_processing.c **** 
3063:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22035              		.loc 1 3063 0
 22036 002c 3023     		movs	r3, #48
 22037 002e FB60     		str	r3, [r7, #12]
3064:..\src/command_processing.c **** 
3065:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22038              		.loc 1 3065 0
 22039 0030 0023     		movs	r3, #0
 22040 0032 7B61     		str	r3, [r7, #20]
 22041 0034 18E0     		b	.L835
 22042              	.L838:
3066:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22043              		.loc 1 3066 0
 22044 0036 7B69     		ldr	r3, [r7, #20]
 22045 0038 1B01     		lsls	r3, r3, #4
 22046 003a 1A46     		mov	r2, r3
 22047 003c 154B     		ldr	r3, .L840+4
 22048 003e D018     		adds	r0, r2, r3
 22049 0040 7B69     		ldr	r3, [r7, #20]
 22050 0042 DAB2     		uxtb	r2, r3
 22051 0044 7B68     		ldr	r3, [r7, #4]
 22052 0046 DBB2     		uxtb	r3, r3
 22053 0048 1344     		add	r3, r3, r2
 22054 004a DBB2     		uxtb	r3, r3
 22055 004c 1946     		mov	r1, r3
 22056 004e FFF7FEFF 		bl	EEPROM_Write
 22057 0052 0346     		mov	r3, r0
 22058 0054 FB72     		strb	r3, [r7, #11]
3067:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22059              		.loc 1 3067 0
 22060 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22061 0058 002B     		cmp	r3, #0
 22062 005a 02D0     		beq	.L836
3068:..\src/command_processing.c ****             ret_val = 0;
 22063              		.loc 1 3068 0
 22064 005c 0023     		movs	r3, #0
 22065 005e FB74     		strb	r3, [r7, #19]
3069:..\src/command_processing.c ****             break;
 22066              		.loc 1 3069 0
 22067 0060 06E0     		b	.L837
 22068              	.L836:
3065:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22069              		.loc 1 3065 0 discriminator 2
 22070 0062 7B69     		ldr	r3, [r7, #20]
 22071 0064 0133     		adds	r3, r3, #1
 22072 0066 7B61     		str	r3, [r7, #20]
 22073              	.L835:
3065:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 485


 22074              		.loc 1 3065 0 is_stmt 0 discriminator 1
 22075 0068 7A69     		ldr	r2, [r7, #20]
 22076 006a FB68     		ldr	r3, [r7, #12]
 22077 006c 9A42     		cmp	r2, r3
 22078 006e E2DB     		blt	.L838
 22079              	.L837:
3070:..\src/command_processing.c ****         }
3071:..\src/command_processing.c ****     }
3072:..\src/command_processing.c **** 
3073:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22080              		.loc 1 3073 0 is_stmt 1
 22081 0070 084A     		ldr	r2, .L840+4
 22082 0072 074B     		ldr	r3, .L840
 22083 0074 1046     		mov	r0, r2
 22084 0076 1946     		mov	r1, r3
 22085 0078 4FF43D73 		mov	r3, #756
 22086 007c 1A46     		mov	r2, r3
 22087 007e FFF7FEFF 		bl	memcpy
3074:..\src/command_processing.c **** 
3075:..\src/command_processing.c ****     // Re-Enable Interrupt
3076:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22088              		.loc 1 3076 0
 22089 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3077:..\src/command_processing.c **** 
3078:..\src/command_processing.c ****     return ret_val;
 22090              		.loc 1 3078 0
 22091 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3079:..\src/command_processing.c **** }
 22092              		.loc 1 3079 0
 22093 0088 1846     		mov	r0, r3
 22094 008a 1837     		adds	r7, r7, #24
 22095              		.cfi_def_cfa_offset 8
 22096 008c BD46     		mov	sp, r7
 22097              		.cfi_def_cfa_register 13
 22098              		@ sp needed
 22099 008e 80BD     		pop	{r7, pc}
 22100              	.L841:
 22101              		.align	2
 22102              	.L840:
 22103 0090 00000000 		.word	c_mem
 22104 0094 00000000 		.word	g_mem
 22105              		.cfi_endproc
 22106              	.LFE86:
 22107              		.size	memStore, .-memStore
 22108              		.section	.text.memRecall,"ax",%progbits
 22109              		.align	2
 22110              		.global	memRecall
 22111              		.thumb
 22112              		.thumb_func
 22113              		.type	memRecall, %function
 22114              	memRecall:
 22115              	.LFB87:
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c **** 
3082:..\src/command_processing.c **** //==============================================================================
3083:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3084:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 486


3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c **** 
3087:..\src/command_processing.c **** void memRecall(void)
3088:..\src/command_processing.c **** {
 22116              		.loc 1 3088 0
 22117              		.cfi_startproc
 22118              		@ args = 0, pretend = 0, frame = 8
 22119              		@ frame_needed = 1, uses_anonymous_args = 0
 22120 0000 80B5     		push	{r7, lr}
 22121              		.cfi_def_cfa_offset 8
 22122              		.cfi_offset 7, -8
 22123              		.cfi_offset 14, -4
 22124 0002 82B0     		sub	sp, sp, #8
 22125              		.cfi_def_cfa_offset 16
 22126 0004 00AF     		add	r7, sp, #0
 22127              		.cfi_def_cfa_register 7
3089:..\src/command_processing.c ****     uint16 i;
3090:..\src/command_processing.c **** 
3091:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22128              		.loc 1 3091 0
 22129 0006 0023     		movs	r3, #0
 22130 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22131 000a 0CE0     		b	.L843
 22132              	.L844:
3092:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22133              		.loc 1 3092 0 discriminator 3
 22134 000c FB88     		ldrh	r3, [r7, #6]
 22135 000e 184A     		ldr	r2, .L848
 22136 0010 1344     		add	r3, r3, r2
 22137 0012 184A     		ldr	r2, .L848+4
 22138 0014 1168     		ldr	r1, [r2]
 22139 0016 FA88     		ldrh	r2, [r7, #6]
 22140 0018 0A44     		add	r2, r2, r1
 22141 001a 1278     		ldrb	r2, [r2]
 22142 001c D2B2     		uxtb	r2, r2
 22143 001e 1A70     		strb	r2, [r3]
3091:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22144              		.loc 1 3091 0 discriminator 3
 22145 0020 FB88     		ldrh	r3, [r7, #6]
 22146 0022 0133     		adds	r3, r3, #1
 22147 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22148              	.L843:
3091:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22149              		.loc 1 3091 0 is_stmt 0 discriminator 1
 22150 0026 FB88     		ldrh	r3, [r7, #6]
 22151 0028 B3F53D7F 		cmp	r3, #756
 22152 002c EED3     		bcc	.L844
3093:..\src/command_processing.c ****     }
3094:..\src/command_processing.c ****     
3095:..\src/command_processing.c ****     // Recall saved user_emg structure
3096:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22153              		.loc 1 3096 0 is_stmt 1
 22154 002e 104B     		ldr	r3, .L848
 22155 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22156 0034 5B01     		lsls	r3, r3, #5
 22157 0036 03F51273 		add	r3, r3, #584
 22158 003a 0D4A     		ldr	r2, .L848
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 487


 22159 003c 1344     		add	r3, r3, r2
 22160 003e 1022     		movs	r2, #16
 22161 0040 1946     		mov	r1, r3
 22162 0042 0D48     		ldr	r0, .L848+8
 22163 0044 FFF7FEFF 		bl	memcpy
3097:..\src/command_processing.c **** 
3098:..\src/command_processing.c ****     //check for initialization
3099:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22164              		.loc 1 3099 0
 22165 0048 094B     		ldr	r3, .L848
 22166 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22167 004c 002B     		cmp	r3, #0
 22168 004e 02D1     		bne	.L845
3100:..\src/command_processing.c ****         memRestore();
 22169              		.loc 1 3100 0
 22170 0050 FFF7FEFF 		bl	memRestore
3101:..\src/command_processing.c ****     } else {
3102:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3103:..\src/command_processing.c ****     }        
3104:..\src/command_processing.c **** }
 22171              		.loc 1 3104 0
 22172 0054 08E0     		b	.L847
 22173              	.L845:
3102:..\src/command_processing.c ****     }        
 22174              		.loc 1 3102 0
 22175 0056 094A     		ldr	r2, .L848+12
 22176 0058 054B     		ldr	r3, .L848
 22177 005a 1046     		mov	r0, r2
 22178 005c 1946     		mov	r1, r3
 22179 005e 4FF43D73 		mov	r3, #756
 22180 0062 1A46     		mov	r2, r3
 22181 0064 FFF7FEFF 		bl	memcpy
 22182              	.L847:
 22183              		.loc 1 3104 0
 22184 0068 00BF     		nop
 22185 006a 0837     		adds	r7, r7, #8
 22186              		.cfi_def_cfa_offset 8
 22187 006c BD46     		mov	sp, r7
 22188              		.cfi_def_cfa_register 13
 22189              		@ sp needed
 22190 006e 80BD     		pop	{r7, pc}
 22191              	.L849:
 22192              		.align	2
 22193              	.L848:
 22194 0070 00000000 		.word	g_mem
 22195 0074 00000000 		.word	EEPROM_ADDR
 22196 0078 F0010000 		.word	g_mem+496
 22197 007c 00000000 		.word	c_mem
 22198              		.cfi_endproc
 22199              	.LFE87:
 22200              		.size	memRecall, .-memRecall
 22201              		.section	.text.memRestore,"ax",%progbits
 22202              		.align	2
 22203              		.global	memRestore
 22204              		.thumb
 22205              		.thumb_func
 22206              		.type	memRestore, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 488


 22207              	memRestore:
 22208              	.LFB88:
3105:..\src/command_processing.c **** 
3106:..\src/command_processing.c **** 
3107:..\src/command_processing.c **** //==============================================================================
3108:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3109:..\src/command_processing.c **** //==============================================================================
3110:..\src/command_processing.c **** 
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c **** uint8 memRestore(void) {
 22209              		.loc 1 3112 0
 22210              		.cfi_startproc
 22211              		@ args = 0, pretend = 0, frame = 8
 22212              		@ frame_needed = 1, uses_anonymous_args = 0
 22213 0000 80B5     		push	{r7, lr}
 22214              		.cfi_def_cfa_offset 8
 22215              		.cfi_offset 7, -8
 22216              		.cfi_offset 14, -4
 22217 0002 82B0     		sub	sp, sp, #8
 22218              		.cfi_def_cfa_offset 16
 22219 0004 00AF     		add	r7, sp, #0
 22220              		.cfi_def_cfa_register 7
3113:..\src/command_processing.c ****     uint16 i;
3114:..\src/command_processing.c **** 
3115:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22221              		.loc 1 3115 0
 22222 0006 0023     		movs	r3, #0
 22223 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22224 000a 0EE0     		b	.L851
 22225              	.L852:
3116:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22226              		.loc 1 3116 0 discriminator 3
 22227 000c FB88     		ldrh	r3, [r7, #6]
 22228 000e 114A     		ldr	r2, .L855
 22229 0010 1344     		add	r3, r3, r2
 22230 0012 114A     		ldr	r2, .L855+4
 22231 0014 1168     		ldr	r1, [r2]
 22232 0016 FA88     		ldrh	r2, [r7, #6]
 22233 0018 02F54872 		add	r2, r2, #800
 22234 001c 0A44     		add	r2, r2, r1
 22235 001e 1278     		ldrb	r2, [r2]
 22236 0020 D2B2     		uxtb	r2, r2
 22237 0022 1A70     		strb	r2, [r3]
3115:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22238              		.loc 1 3115 0 discriminator 3
 22239 0024 FB88     		ldrh	r3, [r7, #6]
 22240 0026 0133     		adds	r3, r3, #1
 22241 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22242              	.L851:
3115:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22243              		.loc 1 3115 0 is_stmt 0 discriminator 1
 22244 002a FB88     		ldrh	r3, [r7, #6]
 22245 002c B3F53D7F 		cmp	r3, #756
 22246 0030 ECD3     		bcc	.L852
3117:..\src/command_processing.c ****     }
3118:..\src/command_processing.c **** 
3119:..\src/command_processing.c ****     //check for initialization
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 489


3120:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22247              		.loc 1 3120 0 is_stmt 1
 22248 0032 084B     		ldr	r3, .L855
 22249 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22250 0036 002B     		cmp	r3, #0
 22251 0038 03D1     		bne	.L853
3121:..\src/command_processing.c ****         return memInit();
 22252              		.loc 1 3121 0
 22253 003a FFF7FEFF 		bl	memInit
 22254 003e 0346     		mov	r3, r0
 22255 0040 03E0     		b	.L854
 22256              	.L853:
3122:..\src/command_processing.c ****     } else {
3123:..\src/command_processing.c ****         return memStore(0);
 22257              		.loc 1 3123 0
 22258 0042 0020     		movs	r0, #0
 22259 0044 FFF7FEFF 		bl	memStore
 22260 0048 0346     		mov	r3, r0
 22261              	.L854:
3124:..\src/command_processing.c ****     }  
3125:..\src/command_processing.c **** }
 22262              		.loc 1 3125 0
 22263 004a 1846     		mov	r0, r3
 22264 004c 0837     		adds	r7, r7, #8
 22265              		.cfi_def_cfa_offset 8
 22266 004e BD46     		mov	sp, r7
 22267              		.cfi_def_cfa_register 13
 22268              		@ sp needed
 22269 0050 80BD     		pop	{r7, pc}
 22270              	.L856:
 22271 0052 00BF     		.align	2
 22272              	.L855:
 22273 0054 00000000 		.word	g_mem
 22274 0058 00000000 		.word	EEPROM_ADDR
 22275              		.cfi_endproc
 22276              	.LFE88:
 22277              		.size	memRestore, .-memRestore
 22278              		.section	.rodata
 22279 1fbb 00       		.align	2
 22280              	.LC298:
 22281 1fbc 47454E30 		.ascii	"GEN001\000"
 22281      303100
 22282              		.section	.text.memInit,"ax",%progbits
 22283              		.align	2
 22284              		.global	memInit
 22285              		.thumb
 22286              		.thumb_func
 22287              		.type	memInit, %function
 22288              	memInit:
 22289              	.LFB89:
3126:..\src/command_processing.c **** 
3127:..\src/command_processing.c **** //==============================================================================
3128:..\src/command_processing.c **** //                                                                   MEMORY INIT
3129:..\src/command_processing.c **** //==============================================================================
3130:..\src/command_processing.c **** 
3131:..\src/command_processing.c **** uint8 memInit(void)
3132:..\src/command_processing.c **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 490


 22290              		.loc 1 3132 0
 22291              		.cfi_startproc
 22292              		@ args = 0, pretend = 0, frame = 8
 22293              		@ frame_needed = 1, uses_anonymous_args = 0
 22294 0000 80B5     		push	{r7, lr}
 22295              		.cfi_def_cfa_offset 8
 22296              		.cfi_offset 7, -8
 22297              		.cfi_offset 14, -4
 22298 0002 82B0     		sub	sp, sp, #8
 22299              		.cfi_def_cfa_offset 16
 22300 0004 00AF     		add	r7, sp, #0
 22301              		.cfi_def_cfa_register 7
3133:..\src/command_processing.c ****     uint8 i, j;
3134:..\src/command_processing.c **** 
3135:..\src/command_processing.c ****     //initialize memory settings
3136:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22302              		.loc 1 3136 0
 22303 0006 0023     		movs	r3, #0
 22304 0008 FB71     		strb	r3, [r7, #7]
 22305 000a 07E0     		b	.L858
 22306              	.L859:
3137:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22307              		.loc 1 3137 0 discriminator 3
 22308 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22309 000e B44A     		ldr	r2, .L884
 22310 0010 1344     		add	r3, r3, r2
 22311 0012 0022     		movs	r2, #0
 22312 0014 5A70     		strb	r2, [r3, #1]
3136:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22313              		.loc 1 3136 0 discriminator 3
 22314 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22315 0018 0133     		adds	r3, r3, #1
 22316 001a FB71     		strb	r3, [r7, #7]
 22317              	.L858:
3136:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22318              		.loc 1 3136 0 is_stmt 0 discriminator 1
 22319 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22320 001e 0E2B     		cmp	r3, #14
 22321 0020 F4D9     		bls	.L859
3138:..\src/command_processing.c ****     }
3139:..\src/command_processing.c ****         
3140:..\src/command_processing.c ****     // DEV STRUCT
3141:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22322              		.loc 1 3141 0 is_stmt 1
 22323 0022 AF4B     		ldr	r3, .L884
 22324 0024 0122     		movs	r2, #1
 22325 0026 83F8A020 		strb	r2, [r3, #160]
3142:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22326              		.loc 1 3142 0
 22327 002a AD4B     		ldr	r3, .L884
 22328 002c 0022     		movs	r2, #0
 22329 002e 83F8A720 		strb	r2, [r3, #167]
3143:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22330              		.loc 1 3143 0
 22331 0032 AB4B     		ldr	r3, .L884
 22332 0034 0122     		movs	r2, #1
 22333 0036 83F8AC20 		strb	r2, [r3, #172]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 491


3144:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22334              		.loc 1 3144 0
 22335 003a A94B     		ldr	r3, .L884
 22336 003c 0022     		movs	r2, #0
 22337 003e 83F8A820 		strb	r2, [r3, #168]
3145:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22338              		.loc 1 3145 0
 22339 0042 FFF7FEFF 		bl	reset_counters
3146:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22340              		.loc 1 3146 0
 22341 0046 0023     		movs	r3, #0
 22342 0048 FB71     		strb	r3, [r7, #7]
 22343 004a 08E0     		b	.L860
 22344              	.L861:
3147:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22345              		.loc 1 3147 0 discriminator 3
 22346 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22347 004e A44A     		ldr	r2, .L884
 22348 0050 1344     		add	r3, r3, r2
 22349 0052 0022     		movs	r2, #0
 22350 0054 83F88020 		strb	r2, [r3, #128]
3146:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22351              		.loc 1 3146 0 discriminator 3
 22352 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22353 005a 0133     		adds	r3, r3, #1
 22354 005c FB71     		strb	r3, [r7, #7]
 22355              	.L860:
3146:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22356              		.loc 1 3146 0 is_stmt 0 discriminator 1
 22357 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22358 0060 1F2B     		cmp	r3, #31
 22359 0062 F3D9     		bls	.L861
3148:..\src/command_processing.c ****     }
3149:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22360              		.loc 1 3149 0 is_stmt 1
 22361 0064 9E4B     		ldr	r3, .L884
 22362 0066 0022     		movs	r2, #0
 22363 0068 83F8A920 		strb	r2, [r3, #169]
3150:..\src/command_processing.c **** 
3151:..\src/command_processing.c ****     // MOTOR STRUCT
3152:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22364              		.loc 1 3152 0
 22365 006c 0023     		movs	r3, #0
 22366 006e FB71     		strb	r3, [r7, #7]
 22367 0070 15E1     		b	.L862
 22368              	.L865:
3153:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22369              		.loc 1 3153 0
 22370 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22371 0074 9A49     		ldr	r1, .L884
 22372 0076 1346     		mov	r3, r2
 22373 0078 DB00     		lsls	r3, r3, #3
 22374 007a 9B1A     		subs	r3, r3, r2
 22375 007c 1B01     		lsls	r3, r3, #4
 22376 007e 0B44     		add	r3, r3, r1
 22377 0080 B033     		adds	r3, r3, #176
 22378 0082 40F23942 		movw	r2, #1081
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 492


 22379 0086 1A60     		str	r2, [r3]
3154:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22380              		.loc 1 3154 0
 22381 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22382 008a 9549     		ldr	r1, .L884
 22383 008c 1346     		mov	r3, r2
 22384 008e DB00     		lsls	r3, r3, #3
 22385 0090 9B1A     		subs	r3, r3, r2
 22386 0092 1B01     		lsls	r3, r3, #4
 22387 0094 0B44     		add	r3, r3, r1
 22388 0096 B433     		adds	r3, r3, #180
 22389 0098 0022     		movs	r2, #0
 22390 009a 1A60     		str	r2, [r3]
3155:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22391              		.loc 1 3155 0
 22392 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22393 009e 9049     		ldr	r1, .L884
 22394 00a0 1346     		mov	r3, r2
 22395 00a2 DB00     		lsls	r3, r3, #3
 22396 00a4 9B1A     		subs	r3, r3, r2
 22397 00a6 1B01     		lsls	r3, r3, #4
 22398 00a8 0B44     		add	r3, r3, r1
 22399 00aa B833     		adds	r3, r3, #184
 22400 00ac 4FF4E572 		mov	r2, #458
 22401 00b0 1A60     		str	r2, [r3]
3156:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22402              		.loc 1 3156 0
 22403 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22404 00b4 8A49     		ldr	r1, .L884
 22405 00b6 1346     		mov	r3, r2
 22406 00b8 DB00     		lsls	r3, r3, #3
 22407 00ba 9B1A     		subs	r3, r3, r2
 22408 00bc 1B01     		lsls	r3, r3, #4
 22409 00be 0B44     		add	r3, r3, r1
 22410 00c0 BC33     		adds	r3, r3, #188
 22411 00c2 4FF48032 		mov	r2, #65536
 22412 00c6 1A60     		str	r2, [r3]
3157:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22413              		.loc 1 3157 0
 22414 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22415 00ca 8549     		ldr	r1, .L884
 22416 00cc 1346     		mov	r3, r2
 22417 00ce DB00     		lsls	r3, r3, #3
 22418 00d0 9B1A     		subs	r3, r3, r2
 22419 00d2 1B01     		lsls	r3, r3, #4
 22420 00d4 0B44     		add	r3, r3, r1
 22421 00d6 C033     		adds	r3, r3, #192
 22422 00d8 4122     		movs	r2, #65
 22423 00da 1A60     		str	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22424              		.loc 1 3158 0
 22425 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22426 00de 8049     		ldr	r1, .L884
 22427 00e0 1346     		mov	r3, r2
 22428 00e2 DB00     		lsls	r3, r3, #3
 22429 00e4 9B1A     		subs	r3, r3, r2
 22430 00e6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 493


 22431 00e8 0B44     		add	r3, r3, r1
 22432 00ea C433     		adds	r3, r3, #196
 22433 00ec 0022     		movs	r2, #0
 22434 00ee 1A60     		str	r2, [r3]
3159:..\src/command_processing.c **** 
3160:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22435              		.loc 1 3160 0
 22436 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22437 00f2 7B49     		ldr	r1, .L884
 22438 00f4 1346     		mov	r3, r2
 22439 00f6 DB00     		lsls	r3, r3, #3
 22440 00f8 9B1A     		subs	r3, r3, r2
 22441 00fa 1B01     		lsls	r3, r3, #4
 22442 00fc 0B44     		add	r3, r3, r1
 22443 00fe C833     		adds	r3, r3, #200
 22444 0100 41F69912 		movw	r2, #6553
 22445 0104 1A60     		str	r2, [r3]
3161:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22446              		.loc 1 3161 0
 22447 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22448 0108 7549     		ldr	r1, .L884
 22449 010a 1346     		mov	r3, r2
 22450 010c DB00     		lsls	r3, r3, #3
 22451 010e 9B1A     		subs	r3, r3, r2
 22452 0110 1B01     		lsls	r3, r3, #4
 22453 0112 0B44     		add	r3, r3, r1
 22454 0114 CC33     		adds	r3, r3, #204
 22455 0116 0022     		movs	r2, #0
 22456 0118 1A60     		str	r2, [r3]
3162:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22457              		.loc 1 3162 0
 22458 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22459 011c 7049     		ldr	r1, .L884
 22460 011e 1346     		mov	r3, r2
 22461 0120 DB00     		lsls	r3, r3, #3
 22462 0122 9B1A     		subs	r3, r3, r2
 22463 0124 1B01     		lsls	r3, r3, #4
 22464 0126 0B44     		add	r3, r3, r1
 22465 0128 D033     		adds	r3, r3, #208
 22466 012a 0022     		movs	r2, #0
 22467 012c 1A60     		str	r2, [r3]
3163:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22468              		.loc 1 3163 0
 22469 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22470 0130 6B49     		ldr	r1, .L884
 22471 0132 1346     		mov	r3, r2
 22472 0134 DB00     		lsls	r3, r3, #3
 22473 0136 9B1A     		subs	r3, r3, r2
 22474 0138 1B01     		lsls	r3, r3, #4
 22475 013a 0B44     		add	r3, r3, r1
 22476 013c D433     		adds	r3, r3, #212
 22477 013e 44F6CC42 		movw	r2, #19660
 22478 0142 1A60     		str	r2, [r3]
3164:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22479              		.loc 1 3164 0
 22480 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22481 0146 6649     		ldr	r1, .L884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 494


 22482 0148 1346     		mov	r3, r2
 22483 014a DB00     		lsls	r3, r3, #3
 22484 014c 9B1A     		subs	r3, r3, r2
 22485 014e 1B01     		lsls	r3, r3, #4
 22486 0150 0B44     		add	r3, r3, r1
 22487 0152 D833     		adds	r3, r3, #216
 22488 0154 0D22     		movs	r2, #13
 22489 0156 1A60     		str	r2, [r3]
3165:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22490              		.loc 1 3165 0
 22491 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22492 015a 6149     		ldr	r1, .L884
 22493 015c 1346     		mov	r3, r2
 22494 015e DB00     		lsls	r3, r3, #3
 22495 0160 9B1A     		subs	r3, r3, r2
 22496 0162 1B01     		lsls	r3, r3, #4
 22497 0164 0B44     		add	r3, r3, r1
 22498 0166 DC33     		adds	r3, r3, #220
 22499 0168 0022     		movs	r2, #0
 22500 016a 1A60     		str	r2, [r3]
3166:..\src/command_processing.c **** 
3167:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22501              		.loc 1 3167 0
 22502 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22503 016e 5C49     		ldr	r1, .L884
 22504 0170 1346     		mov	r3, r2
 22505 0172 DB00     		lsls	r3, r3, #3
 22506 0174 9B1A     		subs	r3, r3, r2
 22507 0176 1B01     		lsls	r3, r3, #4
 22508 0178 0B44     		add	r3, r3, r1
 22509 017a E033     		adds	r3, r3, #224
 22510 017c 0122     		movs	r2, #1
 22511 017e 1A70     		strb	r2, [r3]
3168:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22512              		.loc 1 3168 0
 22513 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22514 0182 5749     		ldr	r1, .L884
 22515 0184 1346     		mov	r3, r2
 22516 0186 DB00     		lsls	r3, r3, #3
 22517 0188 9B1A     		subs	r3, r3, r2
 22518 018a 1B01     		lsls	r3, r3, #4
 22519 018c 0B44     		add	r3, r3, r1
 22520 018e E133     		adds	r3, r3, #225
 22521 0190 0022     		movs	r2, #0
 22522 0192 1A70     		strb	r2, [r3]
3169:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22523              		.loc 1 3169 0
 22524 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22525 0196 5249     		ldr	r1, .L884
 22526 0198 1346     		mov	r3, r2
 22527 019a DB00     		lsls	r3, r3, #3
 22528 019c 9B1A     		subs	r3, r3, r2
 22529 019e 1B01     		lsls	r3, r3, #4
 22530 01a0 0B44     		add	r3, r3, r1
 22531 01a2 E233     		adds	r3, r3, #226
 22532 01a4 0022     		movs	r2, #0
 22533 01a6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 495


3170:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22534              		.loc 1 3170 0
 22535 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22536 01aa 4D49     		ldr	r1, .L884
 22537 01ac 1346     		mov	r3, r2
 22538 01ae DB00     		lsls	r3, r3, #3
 22539 01b0 9B1A     		subs	r3, r3, r2
 22540 01b2 1B01     		lsls	r3, r3, #4
 22541 01b4 0B44     		add	r3, r3, r1
 22542 01b6 03F58773 		add	r3, r3, #270
 22543 01ba 0022     		movs	r2, #0
 22544 01bc 1A70     		strb	r2, [r3]
3171:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22545              		.loc 1 3171 0
 22546 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22547 01c0 4749     		ldr	r1, .L884
 22548 01c2 1346     		mov	r3, r2
 22549 01c4 DB00     		lsls	r3, r3, #3
 22550 01c6 9B1A     		subs	r3, r3, r2
 22551 01c8 1B01     		lsls	r3, r3, #4
 22552 01ca 0B44     		add	r3, r3, r1
 22553 01cc 03F20F13 		addw	r3, r3, #271
 22554 01d0 0022     		movs	r2, #0
 22555 01d2 1A70     		strb	r2, [r3]
3172:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22556              		.loc 1 3172 0
 22557 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22558 01d6 4249     		ldr	r1, .L884
 22559 01d8 1346     		mov	r3, r2
 22560 01da DB00     		lsls	r3, r3, #3
 22561 01dc 9B1A     		subs	r3, r3, r2
 22562 01de 1B01     		lsls	r3, r3, #4
 22563 01e0 0B44     		add	r3, r3, r1
 22564 01e2 F033     		adds	r3, r3, #240
 22565 01e4 0022     		movs	r2, #0
 22566 01e6 1A60     		str	r2, [r3]
3173:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22567              		.loc 1 3173 0
 22568 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22569 01ea 3D49     		ldr	r1, .L884
 22570 01ec 1346     		mov	r3, r2
 22571 01ee DB00     		lsls	r3, r3, #3
 22572 01f0 9B1A     		subs	r3, r3, r2
 22573 01f2 1B01     		lsls	r3, r3, #4
 22574 01f4 0B44     		add	r3, r3, r1
 22575 01f6 EC33     		adds	r3, r3, #236
 22576 01f8 0022     		movs	r2, #0
 22577 01fa 1A60     		str	r2, [r3]
3174:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22578              		.loc 1 3174 0
 22579 01fc 0023     		movs	r3, #0
 22580 01fe BB71     		strb	r3, [r7, #6]
 22581 0200 10E0     		b	.L863
 22582              	.L864:
3175:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22583              		.loc 1 3175 0 discriminator 3
 22584 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 496


 22585 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22586 0206 3648     		ldr	r0, .L884
 22587 0208 1346     		mov	r3, r2
 22588 020a DB00     		lsls	r3, r3, #3
 22589 020c 9B1A     		subs	r3, r3, r2
 22590 020e 9B00     		lsls	r3, r3, #2
 22591 0210 0B44     		add	r3, r3, r1
 22592 0212 3C33     		adds	r3, r3, #60
 22593 0214 9B00     		lsls	r3, r3, #2
 22594 0216 0344     		add	r3, r3, r0
 22595 0218 4FF00002 		mov	r2, #0
 22596 021c 5A60     		str	r2, [r3, #4]	@ float
3174:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22597              		.loc 1 3174 0 discriminator 3
 22598 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22599 0220 0133     		adds	r3, r3, #1
 22600 0222 BB71     		strb	r3, [r7, #6]
 22601              	.L863:
3174:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22602              		.loc 1 3174 0 is_stmt 0 discriminator 1
 22603 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22604 0226 052B     		cmp	r3, #5
 22605 0228 EBD9     		bls	.L864
3176:..\src/command_processing.c ****         }
3177:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22606              		.loc 1 3177 0 is_stmt 1 discriminator 2
 22607 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22608 022c 2C49     		ldr	r1, .L884
 22609 022e 1346     		mov	r3, r2
 22610 0230 DB00     		lsls	r3, r3, #3
 22611 0232 9B1A     		subs	r3, r3, r2
 22612 0234 1B01     		lsls	r3, r3, #4
 22613 0236 0B44     		add	r3, r3, r1
 22614 0238 03F58673 		add	r3, r3, #268
 22615 023c 40F2DC52 		movw	r2, #1500
 22616 0240 1A80     		strh	r2, [r3]	@ movhi
3178:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22617              		.loc 1 3178 0 discriminator 2
 22618 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22619 0244 2649     		ldr	r1, .L884
 22620 0246 1346     		mov	r3, r2
 22621 0248 DB00     		lsls	r3, r3, #3
 22622 024a 9B1A     		subs	r3, r3, r2
 22623 024c 1B01     		lsls	r3, r3, #4
 22624 024e 0B44     		add	r3, r3, r1
 22625 0250 03F58873 		add	r3, r3, #272
 22626 0254 FA79     		ldrb	r2, [r7, #7]
 22627 0256 1A70     		strb	r2, [r3]
3179:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22628              		.loc 1 3179 0 discriminator 2
 22629 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22630 025a 2149     		ldr	r1, .L884
 22631 025c 1346     		mov	r3, r2
 22632 025e DB00     		lsls	r3, r3, #3
 22633 0260 9B1A     		subs	r3, r3, r2
 22634 0262 1B01     		lsls	r3, r3, #4
 22635 0264 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 497


 22636 0266 E333     		adds	r3, r3, #227
 22637 0268 0122     		movs	r2, #1
 22638 026a 1A70     		strb	r2, [r3]
3180:..\src/command_processing.c ****         
3181:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22639              		.loc 1 3181 0 discriminator 2
 22640 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22641 026e 1C49     		ldr	r1, .L884
 22642 0270 1346     		mov	r3, r2
 22643 0272 DB00     		lsls	r3, r3, #3
 22644 0274 9B1A     		subs	r3, r3, r2
 22645 0276 1B01     		lsls	r3, r3, #4
 22646 0278 0B44     		add	r3, r3, r1
 22647 027a 03F21113 		addw	r3, r3, #273
 22648 027e 0122     		movs	r2, #1
 22649 0280 1A70     		strb	r2, [r3]
3182:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22650              		.loc 1 3182 0 discriminator 2
 22651 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22652 0284 1649     		ldr	r1, .L884
 22653 0286 1346     		mov	r3, r2
 22654 0288 DB00     		lsls	r3, r3, #3
 22655 028a 9B1A     		subs	r3, r3, r2
 22656 028c 1B01     		lsls	r3, r3, #4
 22657 028e 0B44     		add	r3, r3, r1
 22658 0290 03F58973 		add	r3, r3, #274
 22659 0294 0022     		movs	r2, #0
 22660 0296 1A70     		strb	r2, [r3]
3152:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22661              		.loc 1 3152 0 discriminator 2
 22662 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22663 029a 0133     		adds	r3, r3, #1
 22664 029c FB71     		strb	r3, [r7, #7]
 22665              	.L862:
3152:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22666              		.loc 1 3152 0 is_stmt 0 discriminator 1
 22667 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22668 02a0 012B     		cmp	r3, #1
 22669 02a2 7FF6E6AE 		bls	.L865
3183:..\src/command_processing.c ****     }
3184:..\src/command_processing.c ****     
3185:..\src/command_processing.c ****     // ENC STRUCT
3186:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22670              		.loc 1 3186 0 is_stmt 1
 22671 02a6 0023     		movs	r3, #0
 22672 02a8 FB71     		strb	r3, [r7, #7]
 22673 02aa 98E0     		b	.L866
 22674              	.L873:
3187:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22675              		.loc 1 3187 0
 22676 02ac 0023     		movs	r3, #0
 22677 02ae BB71     		strb	r3, [r7, #6]
 22678 02b0 0FE0     		b	.L867
 22679              	.L868:
3188:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22680              		.loc 1 3188 0 discriminator 3
 22681 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 498


 22682 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22683 02b6 0A48     		ldr	r0, .L884
 22684 02b8 1346     		mov	r3, r2
 22685 02ba 5B00     		lsls	r3, r3, #1
 22686 02bc 1344     		add	r3, r3, r2
 22687 02be 1B01     		lsls	r3, r3, #4
 22688 02c0 0344     		add	r3, r3, r0
 22689 02c2 0B44     		add	r3, r3, r1
 22690 02c4 03F5C873 		add	r3, r3, #400
 22691 02c8 0022     		movs	r2, #0
 22692 02ca 1A70     		strb	r2, [r3]
3187:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22693              		.loc 1 3187 0 discriminator 3
 22694 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22695 02ce 0133     		adds	r3, r3, #1
 22696 02d0 BB71     		strb	r3, [r7, #6]
 22697              	.L867:
3187:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22698              		.loc 1 3187 0 is_stmt 0 discriminator 1
 22699 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22700 02d4 042B     		cmp	r3, #4
 22701 02d6 ECD9     		bls	.L868
3189:..\src/command_processing.c ****         }
3190:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22702              		.loc 1 3190 0 is_stmt 1
 22703 02d8 0023     		movs	r3, #0
 22704 02da BB71     		strb	r3, [r7, #6]
 22705 02dc 2CE0     		b	.L869
 22706              	.L885:
 22707 02de 00BF     		.align	2
 22708              	.L884:
 22709 02e0 00000000 		.word	g_mem
 22710              	.L870:
3191:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22711              		.loc 1 3191 0 discriminator 3
 22712 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22713 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22714 02e8 A548     		ldr	r0, .L886
 22715 02ea 1346     		mov	r3, r2
 22716 02ec 5B00     		lsls	r3, r3, #1
 22717 02ee 1344     		add	r3, r3, r2
 22718 02f0 1B01     		lsls	r3, r3, #4
 22719 02f2 0344     		add	r3, r3, r0
 22720 02f4 0B44     		add	r3, r3, r1
 22721 02f6 03F29513 		addw	r3, r3, #405
 22722 02fa 0322     		movs	r2, #3
 22723 02fc 1A70     		strb	r2, [r3]
3192:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22724              		.loc 1 3192 0 discriminator 3
 22725 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22726 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22727 0302 9F48     		ldr	r0, .L886
 22728 0304 1346     		mov	r3, r2
 22729 0306 5B00     		lsls	r3, r3, #1
 22730 0308 1344     		add	r3, r3, r2
 22731 030a 9B00     		lsls	r3, r3, #2
 22732 030c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 499


 22733 030e 6833     		adds	r3, r3, #104
 22734 0310 9B00     		lsls	r3, r3, #2
 22735 0312 0344     		add	r3, r3, r0
 22736 0314 4FF07E52 		mov	r2, #1065353216
 22737 0318 5A60     		str	r2, [r3, #4]	@ float
3193:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22738              		.loc 1 3193 0 discriminator 3
 22739 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22740 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22741 031e 9848     		ldr	r0, .L886
 22742 0320 1346     		mov	r3, r2
 22743 0322 5B00     		lsls	r3, r3, #1
 22744 0324 1344     		add	r3, r3, r2
 22745 0326 9B00     		lsls	r3, r3, #2
 22746 0328 0B44     		add	r3, r3, r1
 22747 032a 6633     		adds	r3, r3, #102
 22748 032c 0022     		movs	r2, #0
 22749 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3190:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22750              		.loc 1 3190 0 discriminator 3
 22751 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22752 0334 0133     		adds	r3, r3, #1
 22753 0336 BB71     		strb	r3, [r7, #6]
 22754              	.L869:
3190:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22755              		.loc 1 3190 0 is_stmt 0 discriminator 1
 22756 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22757 033a 022B     		cmp	r3, #2
 22758 033c D2D9     		bls	.L870
3194:..\src/command_processing.c ****         }
3195:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22759              		.loc 1 3195 0 is_stmt 1
 22760 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22761 0340 8F49     		ldr	r1, .L886
 22762 0342 1346     		mov	r3, r2
 22763 0344 5B00     		lsls	r3, r3, #1
 22764 0346 1344     		add	r3, r3, r2
 22765 0348 1B01     		lsls	r3, r3, #4
 22766 034a 0B44     		add	r3, r3, r1
 22767 034c 03F5D873 		add	r3, r3, #432
 22768 0350 0022     		movs	r2, #0
 22769 0352 1A70     		strb	r2, [r3]
3196:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22770              		.loc 1 3196 0
 22771 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22772 0356 8A49     		ldr	r1, .L886
 22773 0358 1346     		mov	r3, r2
 22774 035a 5B00     		lsls	r3, r3, #1
 22775 035c 1344     		add	r3, r3, r2
 22776 035e 1B01     		lsls	r3, r3, #4
 22777 0360 0B44     		add	r3, r3, r1
 22778 0362 03F5DA73 		add	r3, r3, #436
 22779 0366 1622     		movs	r2, #22
 22780 0368 1A70     		strb	r2, [r3]
3197:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22781              		.loc 1 3197 0
 22782 036a 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 500


 22783 036c BB71     		strb	r3, [r7, #6]
 22784 036e 0FE0     		b	.L871
 22785              	.L872:
3198:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22786              		.loc 1 3198 0 discriminator 3
 22787 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22788 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22789 0374 8248     		ldr	r0, .L886
 22790 0376 1346     		mov	r3, r2
 22791 0378 5B00     		lsls	r3, r3, #1
 22792 037a 1344     		add	r3, r3, r2
 22793 037c 1B01     		lsls	r3, r3, #4
 22794 037e 0344     		add	r3, r3, r0
 22795 0380 0B44     		add	r3, r3, r1
 22796 0382 03F2B113 		addw	r3, r3, #433
 22797 0386 BA79     		ldrb	r2, [r7, #6]
 22798 0388 1A70     		strb	r2, [r3]
3197:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22799              		.loc 1 3197 0 discriminator 3
 22800 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22801 038c 0133     		adds	r3, r3, #1
 22802 038e BB71     		strb	r3, [r7, #6]
 22803              	.L871:
3197:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22804              		.loc 1 3197 0 is_stmt 0 discriminator 1
 22805 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22806 0392 022B     		cmp	r3, #2
 22807 0394 ECD9     		bls	.L872
3199:..\src/command_processing.c ****         }
3200:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22808              		.loc 1 3200 0 is_stmt 1 discriminator 2
 22809 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22810 0398 7949     		ldr	r1, .L886
 22811 039a 1346     		mov	r3, r2
 22812 039c 5B00     		lsls	r3, r3, #1
 22813 039e 1344     		add	r3, r3, r2
 22814 03a0 1B01     		lsls	r3, r3, #4
 22815 03a2 0B44     		add	r3, r3, r1
 22816 03a4 03F2B513 		addw	r3, r3, #437
 22817 03a8 0F22     		movs	r2, #15
 22818 03aa 1A70     		strb	r2, [r3]
3201:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22819              		.loc 1 3201 0 discriminator 2
 22820 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22821 03ae 7449     		ldr	r1, .L886
 22822 03b0 1346     		mov	r3, r2
 22823 03b2 5B00     		lsls	r3, r3, #1
 22824 03b4 1344     		add	r3, r3, r2
 22825 03b6 1B01     		lsls	r3, r3, #4
 22826 03b8 0B44     		add	r3, r3, r1
 22827 03ba 03F5DB73 		add	r3, r3, #438
 22828 03be 0E22     		movs	r2, #14
 22829 03c0 1A70     		strb	r2, [r3]
3202:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22830              		.loc 1 3202 0 discriminator 2
 22831 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22832 03c4 6E49     		ldr	r1, .L886
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 501


 22833 03c6 1346     		mov	r3, r2
 22834 03c8 5B00     		lsls	r3, r3, #1
 22835 03ca 1344     		add	r3, r3, r2
 22836 03cc 1B01     		lsls	r3, r3, #4
 22837 03ce 0B44     		add	r3, r3, r1
 22838 03d0 03F2B713 		addw	r3, r3, #439
 22839 03d4 0122     		movs	r2, #1
 22840 03d6 1A70     		strb	r2, [r3]
3186:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22841              		.loc 1 3186 0 discriminator 2
 22842 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22843 03da 0133     		adds	r3, r3, #1
 22844 03dc FB71     		strb	r3, [r7, #7]
 22845              	.L866:
3186:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22846              		.loc 1 3186 0 is_stmt 0 discriminator 1
 22847 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22848 03e0 012B     		cmp	r3, #1
 22849 03e2 7FF663AF 		bls	.L873
3203:..\src/command_processing.c ****     }
3204:..\src/command_processing.c ****     
3205:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22850              		.loc 1 3205 0 is_stmt 1
 22851 03e6 0023     		movs	r3, #0
 22852 03e8 FB71     		strb	r3, [r7, #7]
 22853 03ea 2EE0     		b	.L874
 22854              	.L875:
3206:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22855              		.loc 1 3206 0 discriminator 3
 22856 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22857 03ee 6449     		ldr	r1, .L886
 22858 03f0 1346     		mov	r3, r2
 22859 03f2 DB00     		lsls	r3, r3, #3
 22860 03f4 9B1A     		subs	r3, r3, r2
 22861 03f6 1B01     		lsls	r3, r3, #4
 22862 03f8 0B44     		add	r3, r3, r1
 22863 03fa E433     		adds	r3, r3, #228
 22864 03fc 0022     		movs	r2, #0
 22865 03fe 1A60     		str	r2, [r3]
3207:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 22866              		.loc 1 3207 0 discriminator 3
 22867 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22868 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 22869 0404 5E48     		ldr	r0, .L886
 22870 0406 0B46     		mov	r3, r1
 22871 0408 DB00     		lsls	r3, r3, #3
 22872 040a 5B1A     		subs	r3, r3, r1
 22873 040c 1B01     		lsls	r3, r3, #4
 22874 040e 0344     		add	r3, r3, r0
 22875 0410 03F58873 		add	r3, r3, #272
 22876 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22877 0416 1846     		mov	r0, r3
 22878 0418 5949     		ldr	r1, .L886
 22879 041a 0346     		mov	r3, r0
 22880 041c 5B00     		lsls	r3, r3, #1
 22881 041e 0344     		add	r3, r3, r0
 22882 0420 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 502


 22883 0422 0B44     		add	r3, r3, r1
 22884 0424 03F29513 		addw	r3, r3, #405
 22885 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22886 042a 1946     		mov	r1, r3
 22887 042c 44F63823 		movw	r3, #19000
 22888 0430 03FA01F1 		lsl	r1, r3, r1
 22889 0434 5248     		ldr	r0, .L886
 22890 0436 1346     		mov	r3, r2
 22891 0438 DB00     		lsls	r3, r3, #3
 22892 043a 9B1A     		subs	r3, r3, r2
 22893 043c 1B01     		lsls	r3, r3, #4
 22894 043e 0344     		add	r3, r3, r0
 22895 0440 E833     		adds	r3, r3, #232
 22896 0442 1960     		str	r1, [r3]
3205:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22897              		.loc 1 3205 0 discriminator 3
 22898 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22899 0446 0133     		adds	r3, r3, #1
 22900 0448 FB71     		strb	r3, [r7, #7]
 22901              	.L874:
3205:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22902              		.loc 1 3205 0 is_stmt 0 discriminator 1
 22903 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22904 044c 012B     		cmp	r3, #1
 22905 044e CDD9     		bls	.L875
3208:..\src/command_processing.c ****     }
3209:..\src/command_processing.c ****     
3210:..\src/command_processing.c ****     // EMG STRUCT     
3211:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22906              		.loc 1 3211 0 is_stmt 1
 22907 0450 4B4B     		ldr	r3, .L886
 22908 0452 C822     		movs	r2, #200
 22909 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3212:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22910              		.loc 1 3212 0
 22911 0458 494B     		ldr	r3, .L886
 22912 045a C822     		movs	r2, #200
 22913 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3213:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22914              		.loc 1 3213 0
 22915 0460 474B     		ldr	r3, .L886
 22916 0462 4FF48062 		mov	r2, #1024
 22917 0466 C3F8F421 		str	r2, [r3, #500]
3214:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 22918              		.loc 1 3214 0
 22919 046a 454B     		ldr	r3, .L886
 22920 046c 4FF48062 		mov	r2, #1024
 22921 0470 C3F8F821 		str	r2, [r3, #504]
3215:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 22922              		.loc 1 3215 0
 22923 0474 424B     		ldr	r3, .L886
 22924 0476 6422     		movs	r2, #100
 22925 0478 83F8FC21 		strb	r2, [r3, #508]
3216:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 22926              		.loc 1 3216 0
 22927 047c 404B     		ldr	r3, .L886
 22928 047e 6422     		movs	r2, #100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 503


 22929 0480 83F8FD21 		strb	r2, [r3, #509]
3217:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 22930              		.loc 1 3217 0
 22931 0484 3E4B     		ldr	r3, .L886
 22932 0486 0022     		movs	r2, #0
 22933 0488 83F8FE21 		strb	r2, [r3, #510]
3218:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 22934              		.loc 1 3218 0
 22935 048c 3C4B     		ldr	r3, .L886
 22936 048e 0022     		movs	r2, #0
 22937 0490 83F8FF21 		strb	r2, [r3, #511]
3219:..\src/command_processing.c **** 
3220:..\src/command_processing.c ****     // IMU STRUCT
3221:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 22938              		.loc 1 3221 0
 22939 0494 3A4B     		ldr	r3, .L886
 22940 0496 0022     		movs	r2, #0
 22941 0498 83F80022 		strb	r2, [r3, #512]
3222:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 22942              		.loc 1 3222 0
 22943 049c 384B     		ldr	r3, .L886
 22944 049e 0022     		movs	r2, #0
 22945 04a0 83F80122 		strb	r2, [r3, #513]
3223:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 22946              		.loc 1 3223 0
 22947 04a4 0023     		movs	r3, #0
 22948 04a6 FB71     		strb	r3, [r7, #7]
 22949 04a8 34E0     		b	.L876
 22950              	.L877:
3224:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22951              		.loc 1 3224 0 discriminator 3
 22952 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22953 04ac 3449     		ldr	r1, .L886
 22954 04ae 1346     		mov	r3, r2
 22955 04b0 9B00     		lsls	r3, r3, #2
 22956 04b2 1344     		add	r3, r3, r2
 22957 04b4 0B44     		add	r3, r3, r1
 22958 04b6 03F20223 		addw	r3, r3, #514
 22959 04ba 0122     		movs	r2, #1
 22960 04bc 1A70     		strb	r2, [r3]
3225:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 22961              		.loc 1 3225 0 discriminator 3
 22962 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22963 04c0 2F49     		ldr	r1, .L886
 22964 04c2 1346     		mov	r3, r2
 22965 04c4 9B00     		lsls	r3, r3, #2
 22966 04c6 1344     		add	r3, r3, r2
 22967 04c8 0B44     		add	r3, r3, r1
 22968 04ca 03F20323 		addw	r3, r3, #515
 22969 04ce 0122     		movs	r2, #1
 22970 04d0 1A70     		strb	r2, [r3]
3226:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 22971              		.loc 1 3226 0 discriminator 3
 22972 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22973 04d4 2A49     		ldr	r1, .L886
 22974 04d6 1346     		mov	r3, r2
 22975 04d8 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 504


 22976 04da 1344     		add	r3, r3, r2
 22977 04dc 0B44     		add	r3, r3, r1
 22978 04de 03F50173 		add	r3, r3, #516
 22979 04e2 0022     		movs	r2, #0
 22980 04e4 1A70     		strb	r2, [r3]
3227:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 22981              		.loc 1 3227 0 discriminator 3
 22982 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22983 04e8 2549     		ldr	r1, .L886
 22984 04ea 1346     		mov	r3, r2
 22985 04ec 9B00     		lsls	r3, r3, #2
 22986 04ee 1344     		add	r3, r3, r2
 22987 04f0 0B44     		add	r3, r3, r1
 22988 04f2 03F20523 		addw	r3, r3, #517
 22989 04f6 0022     		movs	r2, #0
 22990 04f8 1A70     		strb	r2, [r3]
3228:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 22991              		.loc 1 3228 0 discriminator 3
 22992 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22993 04fc 2049     		ldr	r1, .L886
 22994 04fe 1346     		mov	r3, r2
 22995 0500 9B00     		lsls	r3, r3, #2
 22996 0502 1344     		add	r3, r3, r2
 22997 0504 0B44     		add	r3, r3, r1
 22998 0506 03F20623 		addw	r3, r3, #518
 22999 050a 0022     		movs	r2, #0
 23000 050c 1A70     		strb	r2, [r3]
3223:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23001              		.loc 1 3223 0 discriminator 3
 23002 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23003 0510 0133     		adds	r3, r3, #1
 23004 0512 FB71     		strb	r3, [r7, #7]
 23005              	.L876:
3223:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23006              		.loc 1 3223 0 is_stmt 0 discriminator 1
 23007 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23008 0516 042B     		cmp	r3, #4
 23009 0518 C7D9     		bls	.L877
3229:..\src/command_processing.c ****     }
3230:..\src/command_processing.c ****      
3231:..\src/command_processing.c ****     // EXP STRUCT
3232:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23010              		.loc 1 3232 0 is_stmt 1
 23011 051a 194B     		ldr	r3, .L886
 23012 051c 0022     		movs	r2, #0
 23013 051e 83F82622 		strb	r2, [r3, #550]
3233:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23014              		.loc 1 3233 0
 23015 0522 174B     		ldr	r3, .L886
 23016 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23017 0528 1233     		adds	r3, r3, #18
 23018 052a 5B01     		lsls	r3, r3, #5
 23019 052c 144A     		ldr	r2, .L886
 23020 052e 1344     		add	r3, r3, r2
 23021 0530 144A     		ldr	r2, .L886+4
 23022 0532 1068     		ldr	r0, [r2]	@ unaligned
 23023 0534 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 505


 23024 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23025 0538 9279     		ldrb	r2, [r2, #6]
 23026 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23027 053c 9A71     		strb	r2, [r3, #6]
3234:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23028              		.loc 1 3234 0
 23029 053e 104B     		ldr	r3, .L886
 23030 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23031 0544 012B     		cmp	r3, #1
 23032 0546 13D1     		bne	.L878
3235:..\src/command_processing.c ****         // Set date of maintenance from RTC
3236:..\src/command_processing.c ****         store_RTC_current_time();
 23033              		.loc 1 3236 0
 23034 0548 FFF7FEFF 		bl	store_RTC_current_time
3237:..\src/command_processing.c ****         
3238:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23035              		.loc 1 3238 0
 23036 054c 0C4B     		ldr	r3, .L886
 23037 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23038 0552 0B4B     		ldr	r3, .L886
 23039 0554 83F8A420 		strb	r2, [r3, #164]
3239:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23040              		.loc 1 3239 0
 23041 0558 094B     		ldr	r3, .L886
 23042 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23043 055e 084B     		ldr	r3, .L886
 23044 0560 83F8A520 		strb	r2, [r3, #165]
3240:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23045              		.loc 1 3240 0
 23046 0564 064B     		ldr	r3, .L886
 23047 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23048 056a 054B     		ldr	r3, .L886
 23049 056c 83F8A620 		strb	r2, [r3, #166]
 23050              	.L878:
3241:..\src/command_processing.c ****     }
3242:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23051              		.loc 1 3242 0
 23052 0570 034B     		ldr	r3, .L886
 23053 0572 0022     		movs	r2, #0
 23054 0574 83F82722 		strb	r2, [r3, #551]
3243:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23055              		.loc 1 3243 0
 23056 0578 0023     		movs	r3, #0
 23057 057a FB71     		strb	r3, [r7, #7]
 23058 057c 0DE0     		b	.L879
 23059              	.L887:
 23060 057e 00BF     		.align	2
 23061              	.L886:
 23062 0580 00000000 		.word	g_mem
 23063 0584 BC1F0000 		.word	.LC298
 23064              	.L880:
3244:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23065              		.loc 1 3244 0 discriminator 3
 23066 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23067 058a 284A     		ldr	r2, .L888
 23068 058c 1344     		add	r3, r3, r2
 23069 058e 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 506


 23070 0590 83F82822 		strb	r2, [r3, #552]
3243:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23071              		.loc 1 3243 0 discriminator 3
 23072 0594 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23073 0596 0133     		adds	r3, r3, #1
 23074 0598 FB71     		strb	r3, [r7, #7]
 23075              	.L879:
3243:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23076              		.loc 1 3243 0 is_stmt 0 discriminator 1
 23077 059a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23078 059c 0B2B     		cmp	r3, #11
 23079 059e F3D9     		bls	.L880
3245:..\src/command_processing.c ****     }
3246:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3247:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23080              		.loc 1 3247 0 is_stmt 1
 23081 05a0 224B     		ldr	r3, .L888
 23082 05a2 0122     		movs	r2, #1
 23083 05a4 83F82A22 		strb	r2, [r3, #554]
3248:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23084              		.loc 1 3248 0
 23085 05a8 204B     		ldr	r3, .L888
 23086 05aa 0122     		movs	r2, #1
 23087 05ac 83F82B22 		strb	r2, [r3, #555]
3249:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23088              		.loc 1 3249 0
 23089 05b0 1E4B     		ldr	r3, .L888
 23090 05b2 0022     		movs	r2, #0
 23091 05b4 83F83422 		strb	r2, [r3, #564]
3250:..\src/command_processing.c **** 
3251:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3252:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23092              		.loc 1 3252 0
 23093 05b8 1C4B     		ldr	r3, .L888
 23094 05ba 0022     		movs	r2, #0
 23095 05bc 83F8E022 		strb	r2, [r3, #736]
3253:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23096              		.loc 1 3253 0
 23097 05c0 1A4B     		ldr	r3, .L888
 23098 05c2 4FF44872 		mov	r2, #800
 23099 05c6 A3F8E222 		strh	r2, [r3, #738]	@ movhi
3254:..\src/command_processing.c **** 
3255:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3256:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3257:..\src/command_processing.c ****     memInit_SoftHandPro();
3258:..\src/command_processing.c **** #endif 
3259:..\src/command_processing.c **** 
3260:..\src/command_processing.c **** #ifdef MASTER_FW
3261:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3262:..\src/command_processing.c ****     memInit_Master();
 23100              		.loc 1 3262 0
 23101 05ca FFF7FEFF 		bl	memInit_Master
3263:..\src/command_processing.c **** #endif 
3264:..\src/command_processing.c **** 
3265:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3266:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3267:..\src/command_processing.c ****     memInit_AirChambersFb();
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 507


 23102              		.loc 1 3267 0
 23103 05ce FFF7FEFF 		bl	memInit_AirChambersFb
3268:..\src/command_processing.c **** #endif 
3269:..\src/command_processing.c **** 
3270:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3271:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3272:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3273:..\src/command_processing.c **** #endif
3274:..\src/command_processing.c **** 
3275:..\src/command_processing.c ****     // JOYSTICK STRUCT
3276:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23104              		.loc 1 3276 0
 23105 05d2 164B     		ldr	r3, .L888
 23106 05d4 9622     		movs	r2, #150
 23107 05d6 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3277:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23108              		.loc 1 3277 0
 23109 05da 144B     		ldr	r3, .L888
 23110 05dc 6422     		movs	r2, #100
 23111 05de A3F8B222 		strh	r2, [r3, #690]	@ movhi
3278:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23112              		.loc 1 3278 0
 23113 05e2 124B     		ldr	r3, .L888
 23114 05e4 4FF48062 		mov	r2, #1024
 23115 05e8 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3279:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23116              		.loc 1 3279 0
 23117 05ec 0F4B     		ldr	r3, .L888
 23118 05ee 4FF48062 		mov	r2, #1024
 23119 05f2 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c ****     // Default generic user_id
3282:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23120              		.loc 1 3282 0
 23121 05f6 0D4B     		ldr	r3, .L888
 23122 05f8 0022     		movs	r2, #0
 23123 05fa 83F8AB20 		strb	r2, [r3, #171]
3283:..\src/command_processing.c **** 
3284:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3285:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23124              		.loc 1 3285 0
 23125 05fe 0B4B     		ldr	r3, .L888
 23126 0600 0122     		movs	r2, #1
 23127 0602 1A70     		strb	r2, [r3]
3286:..\src/command_processing.c ****     
3287:..\src/command_processing.c ****     //write that configuration to EEPROM
3288:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23128              		.loc 1 3288 0
 23129 0604 0020     		movs	r0, #0
 23130 0606 FFF7FEFF 		bl	memStore
 23131 060a 0346     		mov	r3, r0
 23132 060c 002B     		cmp	r3, #0
 23133 060e 07D0     		beq	.L881
 23134              		.loc 1 3288 0 is_stmt 0 discriminator 1
 23135 0610 3220     		movs	r0, #50
 23136 0612 FFF7FEFF 		bl	memStore
 23137 0616 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 508


 23138 0618 002B     		cmp	r3, #0
 23139 061a 01D0     		beq	.L881
 23140              		.loc 1 3288 0 discriminator 3
 23141 061c 0123     		movs	r3, #1
 23142 061e 00E0     		b	.L882
 23143              	.L881:
 23144              		.loc 1 3288 0 discriminator 4
 23145 0620 0023     		movs	r3, #0
 23146              	.L882:
 23147              		.loc 1 3288 0 discriminator 6
 23148 0622 DBB2     		uxtb	r3, r3
3289:..\src/command_processing.c **** }
 23149              		.loc 1 3289 0 is_stmt 1 discriminator 6
 23150 0624 1846     		mov	r0, r3
 23151 0626 0837     		adds	r7, r7, #8
 23152              		.cfi_def_cfa_offset 8
 23153 0628 BD46     		mov	sp, r7
 23154              		.cfi_def_cfa_register 13
 23155              		@ sp needed
 23156 062a 80BD     		pop	{r7, pc}
 23157              	.L889:
 23158              		.align	2
 23159              	.L888:
 23160 062c 00000000 		.word	g_mem
 23161              		.cfi_endproc
 23162              	.LFE89:
 23163              		.size	memInit, .-memInit
 23164              		.section	.rodata
 23165 1fc3 00       		.align	2
 23166              	.LC299:
 23167 1fc4 55535230 		.ascii	"USR001\000"
 23167      303100
 23168              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23169              		.align	2
 23170              		.global	memInit_SoftHandPro
 23171              		.thumb
 23172              		.thumb_func
 23173              		.type	memInit_SoftHandPro, %function
 23174              	memInit_SoftHandPro:
 23175              	.LFB90:
3290:..\src/command_processing.c **** 
3291:..\src/command_processing.c **** //==============================================================================
3292:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3293:..\src/command_processing.c **** //==============================================================================
3294:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3295:..\src/command_processing.c **** {
 23176              		.loc 1 3295 0
 23177              		.cfi_startproc
 23178              		@ args = 0, pretend = 0, frame = 8
 23179              		@ frame_needed = 1, uses_anonymous_args = 0
 23180              		@ link register save eliminated.
 23181 0000 80B4     		push	{r7}
 23182              		.cfi_def_cfa_offset 4
 23183              		.cfi_offset 7, -4
 23184 0002 83B0     		sub	sp, sp, #12
 23185              		.cfi_def_cfa_offset 16
 23186 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 509


 23187              		.cfi_def_cfa_register 7
3296:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23188              		.loc 1 3296 0
 23189 0006 0023     		movs	r3, #0
 23190 0008 FB70     		strb	r3, [r7, #3]
3297:..\src/command_processing.c ****     
3298:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3299:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23191              		.loc 1 3299 0
 23192 000a 8B4B     		ldr	r3, .L893
 23193 000c 0122     		movs	r2, #1
 23194 000e 83F8A720 		strb	r2, [r3, #167]
3300:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23195              		.loc 1 3300 0
 23196 0012 894B     		ldr	r3, .L893
 23197 0014 0022     		movs	r2, #0
 23198 0016 83F8AC20 		strb	r2, [r3, #172]
3301:..\src/command_processing.c ****     
3302:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23199              		.loc 1 3302 0
 23200 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23201 001c 8649     		ldr	r1, .L893
 23202 001e 1346     		mov	r3, r2
 23203 0020 DB00     		lsls	r3, r3, #3
 23204 0022 9B1A     		subs	r3, r3, r2
 23205 0024 1B01     		lsls	r3, r3, #4
 23206 0026 0B44     		add	r3, r3, r1
 23207 0028 E033     		adds	r3, r3, #224
 23208 002a 0122     		movs	r2, #1
 23209 002c 1A70     		strb	r2, [r3]
3303:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23210              		.loc 1 3303 0
 23211 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23212 0030 8149     		ldr	r1, .L893
 23213 0032 1346     		mov	r3, r2
 23214 0034 DB00     		lsls	r3, r3, #3
 23215 0036 9B1A     		subs	r3, r3, r2
 23216 0038 1B01     		lsls	r3, r3, #4
 23217 003a 0B44     		add	r3, r3, r1
 23218 003c 03F58773 		add	r3, r3, #270
 23219 0040 0022     		movs	r2, #0
 23220 0042 1A70     		strb	r2, [r3]
3304:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23221              		.loc 1 3304 0
 23222 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23223 0046 7C49     		ldr	r1, .L893
 23224 0048 1346     		mov	r3, r2
 23225 004a DB00     		lsls	r3, r3, #3
 23226 004c 9B1A     		subs	r3, r3, r2
 23227 004e 1B01     		lsls	r3, r3, #4
 23228 0050 0B44     		add	r3, r3, r1
 23229 0052 03F20F13 		addw	r3, r3, #271
 23230 0056 0022     		movs	r2, #0
 23231 0058 1A70     		strb	r2, [r3]
3305:..\src/command_processing.c ****     
3306:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3307:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 510


 23232              		.loc 1 3307 0
 23233 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23234 005c 764B     		ldr	r3, .L893
 23235 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23236 0062 7549     		ldr	r1, .L893
 23237 0064 1346     		mov	r3, r2
 23238 0066 DB00     		lsls	r3, r3, #3
 23239 0068 9B1A     		subs	r3, r3, r2
 23240 006a 1B01     		lsls	r3, r3, #4
 23241 006c 0B44     		add	r3, r3, r1
 23242 006e 03F58873 		add	r3, r3, #272
 23243 0072 0246     		mov	r2, r0
 23244 0074 1A70     		strb	r2, [r3]
3308:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23245              		.loc 1 3308 0
 23246 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23247 0078 6F49     		ldr	r1, .L893
 23248 007a 1346     		mov	r3, r2
 23249 007c DB00     		lsls	r3, r3, #3
 23250 007e 9B1A     		subs	r3, r3, r2
 23251 0080 1B01     		lsls	r3, r3, #4
 23252 0082 0B44     		add	r3, r3, r1
 23253 0084 03F21113 		addw	r3, r3, #273
 23254 0088 0122     		movs	r2, #1
 23255 008a 1A70     		strb	r2, [r3]
3309:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23256              		.loc 1 3309 0
 23257 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23258 008e 6A49     		ldr	r1, .L893
 23259 0090 1346     		mov	r3, r2
 23260 0092 DB00     		lsls	r3, r3, #3
 23261 0094 9B1A     		subs	r3, r3, r2
 23262 0096 1B01     		lsls	r3, r3, #4
 23263 0098 0B44     		add	r3, r3, r1
 23264 009a 03F58973 		add	r3, r3, #274
 23265 009e 0122     		movs	r2, #1
 23266 00a0 1A70     		strb	r2, [r3]
3310:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23267              		.loc 1 3310 0
 23268 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23269 00a4 6449     		ldr	r1, .L893
 23270 00a6 1346     		mov	r3, r2
 23271 00a8 DB00     		lsls	r3, r3, #3
 23272 00aa 9B1A     		subs	r3, r3, r2
 23273 00ac 1B01     		lsls	r3, r3, #4
 23274 00ae 0B44     		add	r3, r3, r1
 23275 00b0 E433     		adds	r3, r3, #228
 23276 00b2 0022     		movs	r2, #0
 23277 00b4 1A60     		str	r2, [r3]
3311:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23278              		.loc 1 3311 0
 23279 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23280 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23281 00ba 5F48     		ldr	r0, .L893
 23282 00bc 0B46     		mov	r3, r1
 23283 00be DB00     		lsls	r3, r3, #3
 23284 00c0 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 511


 23285 00c2 1B01     		lsls	r3, r3, #4
 23286 00c4 0344     		add	r3, r3, r0
 23287 00c6 03F58873 		add	r3, r3, #272
 23288 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23289 00cc 1846     		mov	r0, r3
 23290 00ce 5A49     		ldr	r1, .L893
 23291 00d0 0346     		mov	r3, r0
 23292 00d2 5B00     		lsls	r3, r3, #1
 23293 00d4 0344     		add	r3, r3, r0
 23294 00d6 1B01     		lsls	r3, r3, #4
 23295 00d8 0B44     		add	r3, r3, r1
 23296 00da 03F29513 		addw	r3, r3, #405
 23297 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23298 00e0 1946     		mov	r1, r3
 23299 00e2 4FF47A53 		mov	r3, #16000
 23300 00e6 03FA01F1 		lsl	r1, r3, r1
 23301 00ea 5348     		ldr	r0, .L893
 23302 00ec 1346     		mov	r3, r2
 23303 00ee DB00     		lsls	r3, r3, #3
 23304 00f0 9B1A     		subs	r3, r3, r2
 23305 00f2 1B01     		lsls	r3, r3, #4
 23306 00f4 0344     		add	r3, r3, r0
 23307 00f6 E833     		adds	r3, r3, #232
 23308 00f8 1960     		str	r1, [r3]
 23309              	.LBB30:
3312:..\src/command_processing.c ****     
3313:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23310              		.loc 1 3313 0
 23311 00fa 0023     		movs	r3, #0
 23312 00fc 7B60     		str	r3, [r7, #4]
 23313 00fe 2EE0     		b	.L891
 23314              	.L892:
3314:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3315:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23315              		.loc 1 3315 0 discriminator 3
 23316 0100 4D49     		ldr	r1, .L893
 23317 0102 7A68     		ldr	r2, [r7, #4]
 23318 0104 1346     		mov	r3, r2
 23319 0106 5B00     		lsls	r3, r3, #1
 23320 0108 1344     		add	r3, r3, r2
 23321 010a 1B01     		lsls	r3, r3, #4
 23322 010c 0B44     		add	r3, r3, r1
 23323 010e 03F5D873 		add	r3, r3, #432
 23324 0112 0122     		movs	r2, #1
 23325 0114 1A70     		strb	r2, [r3]
3316:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23326              		.loc 1 3316 0 discriminator 3
 23327 0116 4849     		ldr	r1, .L893
 23328 0118 7A68     		ldr	r2, [r7, #4]
 23329 011a 1346     		mov	r3, r2
 23330 011c 5B00     		lsls	r3, r3, #1
 23331 011e 1344     		add	r3, r3, r2
 23332 0120 1B01     		lsls	r3, r3, #4
 23333 0122 0B44     		add	r3, r3, r1
 23334 0124 03F2B513 		addw	r3, r3, #437
 23335 0128 2322     		movs	r2, #35
 23336 012a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 512


3317:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23337              		.loc 1 3317 0 discriminator 3
 23338 012c 4249     		ldr	r1, .L893
 23339 012e 7A68     		ldr	r2, [r7, #4]
 23340 0130 1346     		mov	r3, r2
 23341 0132 5B00     		lsls	r3, r3, #1
 23342 0134 1344     		add	r3, r3, r2
 23343 0136 1B01     		lsls	r3, r3, #4
 23344 0138 0B44     		add	r3, r3, r1
 23345 013a 03F5DB73 		add	r3, r3, #438
 23346 013e 0322     		movs	r2, #3
 23347 0140 1A70     		strb	r2, [r3]
3318:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23348              		.loc 1 3318 0 discriminator 3
 23349 0142 3D49     		ldr	r1, .L893
 23350 0144 7A68     		ldr	r2, [r7, #4]
 23351 0146 1346     		mov	r3, r2
 23352 0148 5B00     		lsls	r3, r3, #1
 23353 014a 1344     		add	r3, r3, r2
 23354 014c 1B01     		lsls	r3, r3, #4
 23355 014e 0B44     		add	r3, r3, r1
 23356 0150 03F2B713 		addw	r3, r3, #439
 23357 0154 FF22     		movs	r2, #255
 23358 0156 1A70     		strb	r2, [r3]
3313:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23359              		.loc 1 3313 0 discriminator 3
 23360 0158 7B68     		ldr	r3, [r7, #4]
 23361 015a 0133     		adds	r3, r3, #1
 23362 015c 7B60     		str	r3, [r7, #4]
 23363              	.L891:
3313:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23364              		.loc 1 3313 0 is_stmt 0 discriminator 1
 23365 015e 7B68     		ldr	r3, [r7, #4]
 23366 0160 012B     		cmp	r3, #1
 23367 0162 CDDD     		ble	.L892
 23368              	.LBE30:
3319:..\src/command_processing.c ****     }
3320:..\src/command_processing.c ****     
3321:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23369              		.loc 1 3321 0 is_stmt 1
 23370 0164 344B     		ldr	r3, .L893
 23371 0166 4FF48062 		mov	r2, #1024
 23372 016a C3F8F421 		str	r2, [r3, #500]
3322:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23373              		.loc 1 3322 0
 23374 016e 324B     		ldr	r3, .L893
 23375 0170 4FF48062 		mov	r2, #1024
 23376 0174 C3F8F821 		str	r2, [r3, #504]
3323:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23377              		.loc 1 3323 0
 23378 0178 2F4B     		ldr	r3, .L893
 23379 017a C822     		movs	r2, #200
 23380 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3324:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23381              		.loc 1 3324 0
 23382 0180 2D4B     		ldr	r3, .L893
 23383 0182 C822     		movs	r2, #200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 513


 23384 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3325:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23385              		.loc 1 3325 0
 23386 0188 2B4B     		ldr	r3, .L893
 23387 018a 6422     		movs	r2, #100
 23388 018c 83F8FC21 		strb	r2, [r3, #508]
3326:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23389              		.loc 1 3326 0
 23390 0190 294B     		ldr	r3, .L893
 23391 0192 6422     		movs	r2, #100
 23392 0194 83F8FD21 		strb	r2, [r3, #509]
3327:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23393              		.loc 1 3327 0
 23394 0198 274B     		ldr	r3, .L893
 23395 019a 0022     		movs	r2, #0
 23396 019c 83F8FE21 		strb	r2, [r3, #510]
3328:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23397              		.loc 1 3328 0
 23398 01a0 254B     		ldr	r3, .L893
 23399 01a2 0022     		movs	r2, #0
 23400 01a4 83F8FF21 		strb	r2, [r3, #511]
3329:..\src/command_processing.c ****     
3330:..\src/command_processing.c ****     //Initialize rest position parameters  
3331:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23401              		.loc 1 3331 0
 23402 01a8 234B     		ldr	r3, .L893
 23403 01aa 0022     		movs	r2, #0
 23404 01ac 83F8AC22 		strb	r2, [r3, #684]
3332:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23405              		.loc 1 3332 0
 23406 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23407 01b2 2149     		ldr	r1, .L893
 23408 01b4 1346     		mov	r3, r2
 23409 01b6 DB00     		lsls	r3, r3, #3
 23410 01b8 9B1A     		subs	r3, r3, r2
 23411 01ba 1B01     		lsls	r3, r3, #4
 23412 01bc 0B44     		add	r3, r3, r1
 23413 01be 03F58873 		add	r3, r3, #272
 23414 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23415 01c4 1946     		mov	r1, r3
 23416 01c6 1C4A     		ldr	r2, .L893
 23417 01c8 0B46     		mov	r3, r1
 23418 01ca 5B00     		lsls	r3, r3, #1
 23419 01cc 0B44     		add	r3, r3, r1
 23420 01ce 1B01     		lsls	r3, r3, #4
 23421 01d0 1344     		add	r3, r3, r2
 23422 01d2 03F29513 		addw	r3, r3, #405
 23423 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23424 01d8 1A46     		mov	r2, r3
 23425 01da 41F65833 		movw	r3, #7000
 23426 01de 9340     		lsls	r3, r3, r2
 23427 01e0 154A     		ldr	r2, .L893
 23428 01e2 C2F8A032 		str	r3, [r2, #672]
3333:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23429              		.loc 1 3333 0
 23430 01e6 144B     		ldr	r3, .L893
 23431 01e8 0A22     		movs	r2, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 514


 23432 01ea C3F8A422 		str	r2, [r3, #676]
3334:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23433              		.loc 1 3334 0
 23434 01ee 124B     		ldr	r3, .L893
 23435 01f0 42F21072 		movw	r2, #10000
 23436 01f4 C3F8A822 		str	r2, [r3, #680]
3335:..\src/command_processing.c **** 	
3336:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23437              		.loc 1 3336 0
 23438 01f8 0F4B     		ldr	r3, .L893
 23439 01fa 0022     		movs	r2, #0
 23440 01fc 83F80022 		strb	r2, [r3, #512]
3337:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23441              		.loc 1 3337 0
 23442 0200 0D4B     		ldr	r3, .L893
 23443 0202 0022     		movs	r2, #0
 23444 0204 83F82622 		strb	r2, [r3, #550]
3338:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23445              		.loc 1 3338 0
 23446 0208 0B4B     		ldr	r3, .L893
 23447 020a 0022     		movs	r2, #0
 23448 020c 83F83422 		strb	r2, [r3, #564]
3339:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23449              		.loc 1 3339 0
 23450 0210 094B     		ldr	r3, .L893
 23451 0212 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23452 0216 1233     		adds	r3, r3, #18
 23453 0218 5B01     		lsls	r3, r3, #5
 23454 021a 074A     		ldr	r2, .L893
 23455 021c 1344     		add	r3, r3, r2
 23456 021e 074A     		ldr	r2, .L893+4
 23457 0220 1068     		ldr	r0, [r2]	@ unaligned
 23458 0222 1860     		str	r0, [r3]	@ unaligned
 23459 0224 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23460 0226 9279     		ldrb	r2, [r2, #6]
 23461 0228 9980     		strh	r1, [r3, #4]	@ unaligned
 23462 022a 9A71     		strb	r2, [r3, #6]
3340:..\src/command_processing.c **** }
 23463              		.loc 1 3340 0
 23464 022c 00BF     		nop
 23465 022e 0C37     		adds	r7, r7, #12
 23466              		.cfi_def_cfa_offset 4
 23467 0230 BD46     		mov	sp, r7
 23468              		.cfi_def_cfa_register 13
 23469              		@ sp needed
 23470 0232 80BC     		pop	{r7}
 23471              		.cfi_restore 7
 23472              		.cfi_def_cfa_offset 0
 23473 0234 7047     		bx	lr
 23474              	.L894:
 23475 0236 00BF     		.align	2
 23476              	.L893:
 23477 0238 00000000 		.word	g_mem
 23478 023c C41F0000 		.word	.LC299
 23479              		.cfi_endproc
 23480              	.LFE90:
 23481              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 515


 23482              		.section	.text.memInit_Master,"ax",%progbits
 23483              		.align	2
 23484              		.global	memInit_Master
 23485              		.thumb
 23486              		.thumb_func
 23487              		.type	memInit_Master, %function
 23488              	memInit_Master:
 23489              	.LFB91:
3341:..\src/command_processing.c **** 
3342:..\src/command_processing.c **** //==============================================================================
3343:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3344:..\src/command_processing.c **** //==============================================================================
3345:..\src/command_processing.c **** void memInit_Master(void)
3346:..\src/command_processing.c **** {
 23490              		.loc 1 3346 0
 23491              		.cfi_startproc
 23492              		@ args = 0, pretend = 0, frame = 0
 23493              		@ frame_needed = 1, uses_anonymous_args = 0
 23494              		@ link register save eliminated.
 23495 0000 80B4     		push	{r7}
 23496              		.cfi_def_cfa_offset 4
 23497              		.cfi_offset 7, -4
 23498 0002 00AF     		add	r7, sp, #0
 23499              		.cfi_def_cfa_register 7
3347:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23500              		.loc 1 3347 0
 23501 0004 074B     		ldr	r3, .L896
 23502 0006 0222     		movs	r2, #2
 23503 0008 83F8A020 		strb	r2, [r3, #160]
3348:..\src/command_processing.c ****     
3349:..\src/command_processing.c ****     // MS STRUCT
3350:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23504              		.loc 1 3350 0
 23505 000c 054B     		ldr	r3, .L896
 23506 000e 0122     		movs	r2, #1
 23507 0010 83F8C122 		strb	r2, [r3, #705]
3351:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23508              		.loc 1 3351 0
 23509 0014 034B     		ldr	r3, .L896
 23510 0016 0022     		movs	r2, #0
 23511 0018 83F8C022 		strb	r2, [r3, #704]
3352:..\src/command_processing.c **** }
 23512              		.loc 1 3352 0
 23513 001c 00BF     		nop
 23514 001e BD46     		mov	sp, r7
 23515              		.cfi_def_cfa_register 13
 23516              		@ sp needed
 23517 0020 80BC     		pop	{r7}
 23518              		.cfi_restore 7
 23519              		.cfi_def_cfa_offset 0
 23520 0022 7047     		bx	lr
 23521              	.L897:
 23522              		.align	2
 23523              	.L896:
 23524 0024 00000000 		.word	g_mem
 23525              		.cfi_endproc
 23526              	.LFE91:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 516


 23527              		.size	memInit_Master, .-memInit_Master
 23528              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23529              		.align	2
 23530              		.global	memInit_AirChambersFb
 23531              		.thumb
 23532              		.thumb_func
 23533              		.type	memInit_AirChambersFb, %function
 23534              	memInit_AirChambersFb:
 23535              	.LFB92:
3353:..\src/command_processing.c **** 
3354:..\src/command_processing.c **** //==============================================================================
3355:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3356:..\src/command_processing.c **** //==============================================================================
3357:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3358:..\src/command_processing.c **** {
 23536              		.loc 1 3358 0
 23537              		.cfi_startproc
 23538              		@ args = 0, pretend = 0, frame = 0
 23539              		@ frame_needed = 1, uses_anonymous_args = 0
 23540              		@ link register save eliminated.
 23541 0000 80B4     		push	{r7}
 23542              		.cfi_def_cfa_offset 4
 23543              		.cfi_offset 7, -4
 23544 0002 00AF     		add	r7, sp, #0
 23545              		.cfi_def_cfa_register 7
3359:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3360:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23546              		.loc 1 3360 0
 23547 0004 1A4B     		ldr	r3, .L899
 23548 0006 0222     		movs	r2, #2
 23549 0008 83F8AC20 		strb	r2, [r3, #172]
3361:..\src/command_processing.c ****     
3362:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23550              		.loc 1 3362 0
 23551 000c 184B     		ldr	r3, .L899
 23552 000e 0122     		movs	r2, #1
 23553 0010 83F80F21 		strb	r2, [r3, #271]
3363:..\src/command_processing.c ****     
3364:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3365:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3366:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23554              		.loc 1 3366 0
 23555 0014 164B     		ldr	r3, .L899
 23556 0016 0422     		movs	r2, #4
 23557 0018 83F87E21 		strb	r2, [r3, #382]
3367:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23558              		.loc 1 3367 0
 23559 001c 144B     		ldr	r3, .L899
 23560 001e 0022     		movs	r2, #0
 23561 0020 C3F85421 		str	r2, [r3, #340]
3368:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23562              		.loc 1 3368 0
 23563 0024 124B     		ldr	r3, .L899
 23564 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23565 002a 1946     		mov	r1, r3
 23566 002c 104A     		ldr	r2, .L899
 23567 002e 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 517


 23568 0030 5B00     		lsls	r3, r3, #1
 23569 0032 0B44     		add	r3, r3, r1
 23570 0034 1B01     		lsls	r3, r3, #4
 23571 0036 1344     		add	r3, r3, r2
 23572 0038 03F29513 		addw	r3, r3, #405
 23573 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23574 003e 1A46     		mov	r2, r3
 23575 0040 45F2F053 		movw	r3, #22000
 23576 0044 9340     		lsls	r3, r3, r2
 23577 0046 0A4A     		ldr	r2, .L899
 23578 0048 C2F85831 		str	r3, [r2, #344]
3369:..\src/command_processing.c ****     
3370:..\src/command_processing.c ****     // FB STRUCT
3371:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23579              		.loc 1 3371 0
 23580 004c 084B     		ldr	r3, .L899
 23581 004e 4FF4E172 		mov	r2, #450
 23582 0052 C3F8D022 		str	r2, [r3, #720]
3372:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23583              		.loc 1 3372 0
 23584 0056 064B     		ldr	r3, .L899
 23585 0058 064A     		ldr	r2, .L899+4
 23586 005a C3F8D422 		str	r2, [r3, #724]	@ float
3373:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23587              		.loc 1 3373 0
 23588 005e 044B     		ldr	r3, .L899
 23589 0060 4FF07E52 		mov	r2, #1065353216
 23590 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3374:..\src/command_processing.c **** }
 23591              		.loc 1 3374 0
 23592 0068 00BF     		nop
 23593 006a BD46     		mov	sp, r7
 23594              		.cfi_def_cfa_register 13
 23595              		@ sp needed
 23596 006c 80BC     		pop	{r7}
 23597              		.cfi_restore 7
 23598              		.cfi_def_cfa_offset 0
 23599 006e 7047     		bx	lr
 23600              	.L900:
 23601              		.align	2
 23602              	.L899:
 23603 0070 00000000 		.word	g_mem
 23604 0074 0000C841 		.word	1103626240
 23605              		.cfi_endproc
 23606              	.LFE92:
 23607              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23608              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23609              		.align	2
 23610              		.global	memInit_OtbkActWristMs
 23611              		.thumb
 23612              		.thumb_func
 23613              		.type	memInit_OtbkActWristMs, %function
 23614              	memInit_OtbkActWristMs:
 23615              	.LFB93:
3375:..\src/command_processing.c **** 
3376:..\src/command_processing.c **** //==============================================================================
3377:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 518


3378:..\src/command_processing.c **** //==============================================================================
3379:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3380:..\src/command_processing.c **** {
 23616              		.loc 1 3380 0
 23617              		.cfi_startproc
 23618              		@ args = 0, pretend = 0, frame = 0
 23619              		@ frame_needed = 1, uses_anonymous_args = 0
 23620              		@ link register save eliminated.
 23621 0000 80B4     		push	{r7}
 23622              		.cfi_def_cfa_offset 4
 23623              		.cfi_offset 7, -4
 23624 0002 00AF     		add	r7, sp, #0
 23625              		.cfi_def_cfa_register 7
3381:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3382:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23626              		.loc 1 3382 0
 23627 0004 294B     		ldr	r3, .L902
 23628 0006 0322     		movs	r2, #3
 23629 0008 83F8AC20 		strb	r2, [r3, #172]
3383:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23630              		.loc 1 3383 0
 23631 000c 274B     		ldr	r3, .L902
 23632 000e 0122     		movs	r2, #1
 23633 0010 83F8A720 		strb	r2, [r3, #167]
3384:..\src/command_processing.c ****     
3385:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23634              		.loc 1 3385 0
 23635 0014 254B     		ldr	r3, .L902
 23636 0016 0122     		movs	r2, #1
 23637 0018 83F80F21 		strb	r2, [r3, #271]
3386:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23638              		.loc 1 3386 0
 23639 001c 234B     		ldr	r3, .L902
 23640 001e 6422     		movs	r2, #100
 23641 0020 83F81121 		strb	r2, [r3, #273]
3387:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23642              		.loc 1 3387 0
 23643 0024 214B     		ldr	r3, .L902
 23644 0026 0022     		movs	r2, #0
 23645 0028 83F81221 		strb	r2, [r3, #274]
3388:..\src/command_processing.c ****     
3389:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3390:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3391:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23646              		.loc 1 3391 0
 23647 002c 1F4B     		ldr	r3, .L902
 23648 002e 0422     		movs	r2, #4
 23649 0030 83F87E21 		strb	r2, [r3, #382]
3392:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23650              		.loc 1 3392 0
 23651 0034 1D4B     		ldr	r3, .L902
 23652 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23653 003a 1C4B     		ldr	r3, .L902
 23654 003c 83F88021 		strb	r2, [r3, #384]
3393:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23655              		.loc 1 3393 0
 23656 0040 1A4B     		ldr	r3, .L902
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 519


 23657 0042 0122     		movs	r2, #1
 23658 0044 83F88121 		strb	r2, [r3, #385]
3394:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23659              		.loc 1 3394 0
 23660 0048 184B     		ldr	r3, .L902
 23661 004a 0022     		movs	r2, #0
 23662 004c 83F88221 		strb	r2, [r3, #386]
3395:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23663              		.loc 1 3395 0
 23664 0050 164B     		ldr	r3, .L902
 23665 0052 0022     		movs	r2, #0
 23666 0054 C3F85421 		str	r2, [r3, #340]
3396:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23667              		.loc 1 3396 0
 23668 0058 144B     		ldr	r3, .L902
 23669 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23670 005e 1946     		mov	r1, r3
 23671 0060 124A     		ldr	r2, .L902
 23672 0062 0B46     		mov	r3, r1
 23673 0064 5B00     		lsls	r3, r3, #1
 23674 0066 0B44     		add	r3, r3, r1
 23675 0068 1B01     		lsls	r3, r3, #4
 23676 006a 1344     		add	r3, r3, r2
 23677 006c 03F29513 		addw	r3, r3, #405
 23678 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23679 0072 1A46     		mov	r2, r3
 23680 0074 4FF47A53 		mov	r3, #16000
 23681 0078 9340     		lsls	r3, r3, r2
 23682 007a 0C4A     		ldr	r2, .L902
 23683 007c C2F85831 		str	r3, [r2, #344]
3397:..\src/command_processing.c ****     
3398:..\src/command_processing.c ****     // WR STRUCT
3399:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23684              		.loc 1 3399 0
 23685 0080 0A4B     		ldr	r3, .L902
 23686 0082 0022     		movs	r2, #0
 23687 0084 83F8E022 		strb	r2, [r3, #736]
3400:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23688              		.loc 1 3400 0
 23689 0088 084B     		ldr	r3, .L902
 23690 008a 4FF44872 		mov	r2, #800
 23691 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3401:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23692              		.loc 1 3401 0
 23693 0092 064B     		ldr	r3, .L902
 23694 0094 4FF44872 		mov	r2, #800
 23695 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3402:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23696              		.loc 1 3402 0
 23697 009c 034B     		ldr	r3, .L902
 23698 009e 0022     		movs	r2, #0
 23699 00a0 83F8E622 		strb	r2, [r3, #742]
3403:..\src/command_processing.c **** }
 23700              		.loc 1 3403 0
 23701 00a4 00BF     		nop
 23702 00a6 BD46     		mov	sp, r7
 23703              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 520


 23704              		@ sp needed
 23705 00a8 80BC     		pop	{r7}
 23706              		.cfi_restore 7
 23707              		.cfi_def_cfa_offset 0
 23708 00aa 7047     		bx	lr
 23709              	.L903:
 23710              		.align	2
 23711              	.L902:
 23712 00ac 00000000 		.word	g_mem
 23713              		.cfi_endproc
 23714              	.LFE93:
 23715              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23716              		.section	.text.cmd_get_measurements,"ax",%progbits
 23717              		.align	2
 23718              		.global	cmd_get_measurements
 23719              		.thumb
 23720              		.thumb_func
 23721              		.type	cmd_get_measurements, %function
 23722              	cmd_get_measurements:
 23723              	.LFB94:
3404:..\src/command_processing.c **** 
3405:..\src/command_processing.c **** //==============================================================================
3406:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3407:..\src/command_processing.c **** //==============================================================================
3408:..\src/command_processing.c **** /**
3409:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3410:..\src/command_processing.c **** **/
3411:..\src/command_processing.c **** 
3412:..\src/command_processing.c **** void cmd_get_measurements(){
 23724              		.loc 1 3412 0
 23725              		.cfi_startproc
 23726              		@ args = 0, pretend = 0, frame = 16
 23727              		@ frame_needed = 1, uses_anonymous_args = 0
 23728 0000 90B5     		push	{r4, r7, lr}
 23729              		.cfi_def_cfa_offset 12
 23730              		.cfi_offset 4, -12
 23731              		.cfi_offset 7, -8
 23732              		.cfi_offset 14, -4
 23733 0002 85B0     		sub	sp, sp, #20
 23734              		.cfi_def_cfa_offset 32
 23735 0004 00AF     		add	r7, sp, #0
 23736              		.cfi_def_cfa_register 7
3413:..\src/command_processing.c ****  
3414:..\src/command_processing.c ****     uint8 CYDATA index;
3415:..\src/command_processing.c ****     int16 aux_int16;
3416:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3417:..\src/command_processing.c ****     
3418:..\src/command_processing.c ****     uint8 packet_data[8]; 
3419:..\src/command_processing.c ****     
3420:..\src/command_processing.c ****     //Header package
3421:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23737              		.loc 1 3421 0
 23738 0006 8423     		movs	r3, #132
 23739 0008 3B71     		strb	r3, [r7, #4]
3422:..\src/command_processing.c ****     
3423:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23740              		.loc 1 3423 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 521


 23741 000a 0323     		movs	r3, #3
 23742 000c FB73     		strb	r3, [r7, #15]
 23743 000e 38E0     		b	.L905
 23744              	.L906:
3424:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23745              		.loc 1 3424 0
 23746 0010 434B     		ldr	r3, .L908
 23747 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23748 0016 1A46     		mov	r2, r3
 23749 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23750 001a 4248     		ldr	r0, .L908+4
 23751 001c 1346     		mov	r3, r2
 23752 001e 5B00     		lsls	r3, r3, #1
 23753 0020 1344     		add	r3, r3, r2
 23754 0022 9B00     		lsls	r3, r3, #2
 23755 0024 1344     		add	r3, r3, r2
 23756 0026 0B44     		add	r3, r3, r1
 23757 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23758 002c 3C4B     		ldr	r3, .L908
 23759 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23760 0032 1C46     		mov	r4, r3
 23761 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23762 0036 3A48     		ldr	r0, .L908
 23763 0038 2346     		mov	r3, r4
 23764 003a 5B00     		lsls	r3, r3, #1
 23765 003c 2344     		add	r3, r3, r4
 23766 003e 1B01     		lsls	r3, r3, #4
 23767 0040 0344     		add	r3, r3, r0
 23768 0042 0B44     		add	r3, r3, r1
 23769 0044 03F29513 		addw	r3, r3, #405
 23770 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23771 004a 42FA03F3 		asr	r3, r2, r3
 23772 004e 1BB2     		sxth	r3, r3
 23773 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3425:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23774              		.loc 1 3425 0
 23775 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23776 0054 5B00     		lsls	r3, r3, #1
 23777 0056 0233     		adds	r3, r3, #2
 23778 0058 07F10C02 		add	r2, r7, #12
 23779 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23780 005e 07F11001 		add	r1, r7, #16
 23781 0062 0B44     		add	r3, r3, r1
 23782 0064 03F80C2C 		strb	r2, [r3, #-12]
3426:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23783              		.loc 1 3426 0
 23784 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23785 006a 5B00     		lsls	r3, r3, #1
 23786 006c 5A1C     		adds	r2, r3, #1
 23787 006e 07F10C03 		add	r3, r7, #12
 23788 0072 0133     		adds	r3, r3, #1
 23789 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23790 0076 07F11003 		add	r3, r7, #16
 23791 007a 1344     		add	r3, r3, r2
 23792 007c 0A46     		mov	r2, r1
 23793 007e 03F80C2C 		strb	r2, [r3, #-12]
 23794              	.L905:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 522


3423:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23795              		.loc 1 3423 0 discriminator 1
 23796 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23797 0084 5A1E     		subs	r2, r3, #1
 23798 0086 FA73     		strb	r2, [r7, #15]
 23799 0088 002B     		cmp	r3, #0
 23800 008a C1D1     		bne	.L906
3427:..\src/command_processing.c ****     }
3428:..\src/command_processing.c **** 
3429:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23801              		.loc 1 3429 0
 23802 008c 244B     		ldr	r3, .L908
 23803 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23804 0092 012B     		cmp	r3, #1
 23805 0094 34D1     		bne	.L907
3430:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3431:..\src/command_processing.c ****         index = 1;
 23806              		.loc 1 3431 0
 23807 0096 0123     		movs	r3, #1
 23808 0098 FB73     		strb	r3, [r7, #15]
3432:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 23809              		.loc 1 3432 0
 23810 009a 214B     		ldr	r3, .L908
 23811 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23812 00a0 1946     		mov	r1, r3
 23813 00a2 204A     		ldr	r2, .L908+4
 23814 00a4 3423     		movs	r3, #52
 23815 00a6 03FB01F3 		mul	r3, r3, r1
 23816 00aa 1344     		add	r3, r3, r2
 23817 00ac 1A68     		ldr	r2, [r3]
 23818 00ae 1C4B     		ldr	r3, .L908
 23819 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23820 00b4 1846     		mov	r0, r3
 23821 00b6 1A49     		ldr	r1, .L908
 23822 00b8 0346     		mov	r3, r0
 23823 00ba 5B00     		lsls	r3, r3, #1
 23824 00bc 0344     		add	r3, r3, r0
 23825 00be 1B01     		lsls	r3, r3, #4
 23826 00c0 0B44     		add	r3, r3, r1
 23827 00c2 03F29513 		addw	r3, r3, #405
 23828 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23829 00c8 42FA03F3 		asr	r3, r2, r3
 23830 00cc 1BB2     		sxth	r3, r3
 23831 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3433:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23832              		.loc 1 3433 0
 23833 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23834 00d2 5B00     		lsls	r3, r3, #1
 23835 00d4 0233     		adds	r3, r3, #2
 23836 00d6 07F10C02 		add	r2, r7, #12
 23837 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23838 00dc 07F11001 		add	r1, r7, #16
 23839 00e0 0B44     		add	r3, r3, r1
 23840 00e2 03F80C2C 		strb	r2, [r3, #-12]
3434:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23841              		.loc 1 3434 0
 23842 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 523


 23843 00e8 5B00     		lsls	r3, r3, #1
 23844 00ea 5A1C     		adds	r2, r3, #1
 23845 00ec 07F10C03 		add	r3, r7, #12
 23846 00f0 0133     		adds	r3, r3, #1
 23847 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23848 00f4 07F11003 		add	r3, r7, #16
 23849 00f8 1344     		add	r3, r3, r2
 23850 00fa 0A46     		mov	r2, r1
 23851 00fc 03F80C2C 		strb	r2, [r3, #-12]
 23852              	.L907:
3435:..\src/command_processing.c ****     }
3436:..\src/command_processing.c ****     
3437:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3438:..\src/command_processing.c **** 
3439:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23853              		.loc 1 3439 0
 23854 0100 3B1D     		adds	r3, r7, #4
 23855 0102 0721     		movs	r1, #7
 23856 0104 1846     		mov	r0, r3
 23857 0106 FFF7FEFF 		bl	LCRChecksum
 23858 010a 0346     		mov	r3, r0
 23859 010c FB72     		strb	r3, [r7, #11]
3440:..\src/command_processing.c **** 
3441:..\src/command_processing.c ****     commWrite(packet_data, 8);
 23860              		.loc 1 3441 0
 23861 010e 3B1D     		adds	r3, r7, #4
 23862 0110 0821     		movs	r1, #8
 23863 0112 1846     		mov	r0, r3
 23864 0114 FFF7FEFF 		bl	commWrite
3442:..\src/command_processing.c ****    
3443:..\src/command_processing.c **** }
 23865              		.loc 1 3443 0
 23866 0118 00BF     		nop
 23867 011a 1437     		adds	r7, r7, #20
 23868              		.cfi_def_cfa_offset 12
 23869 011c BD46     		mov	sp, r7
 23870              		.cfi_def_cfa_register 13
 23871              		@ sp needed
 23872 011e 90BD     		pop	{r4, r7, pc}
 23873              	.L909:
 23874              		.align	2
 23875              	.L908:
 23876 0120 00000000 		.word	g_mem
 23877 0124 00000000 		.word	g_measOld
 23878              		.cfi_endproc
 23879              	.LFE94:
 23880              		.size	cmd_get_measurements, .-cmd_get_measurements
 23881              		.section	.text.cmd_get_velocities,"ax",%progbits
 23882              		.align	2
 23883              		.global	cmd_get_velocities
 23884              		.thumb
 23885              		.thumb_func
 23886              		.type	cmd_get_velocities, %function
 23887              	cmd_get_velocities:
 23888              	.LFB95:
3444:..\src/command_processing.c **** 
3445:..\src/command_processing.c **** void cmd_get_velocities(){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 524


 23889              		.loc 1 3445 0
 23890              		.cfi_startproc
 23891              		@ args = 0, pretend = 0, frame = 16
 23892              		@ frame_needed = 1, uses_anonymous_args = 0
 23893 0000 90B5     		push	{r4, r7, lr}
 23894              		.cfi_def_cfa_offset 12
 23895              		.cfi_offset 4, -12
 23896              		.cfi_offset 7, -8
 23897              		.cfi_offset 14, -4
 23898 0002 85B0     		sub	sp, sp, #20
 23899              		.cfi_def_cfa_offset 32
 23900 0004 00AF     		add	r7, sp, #0
 23901              		.cfi_def_cfa_register 7
3446:..\src/command_processing.c ****  
3447:..\src/command_processing.c ****     uint8 CYDATA index;
3448:..\src/command_processing.c ****     int16 aux_int16;
3449:..\src/command_processing.c ****    
3450:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3451:..\src/command_processing.c ****     
3452:..\src/command_processing.c ****     uint8 packet_data[8]; 
3453:..\src/command_processing.c ****     
3454:..\src/command_processing.c ****     //Header package
3455:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 23902              		.loc 1 3455 0
 23903 0006 8923     		movs	r3, #137
 23904 0008 3B71     		strb	r3, [r7, #4]
3456:..\src/command_processing.c ****     
3457:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23905              		.loc 1 3457 0
 23906 000a 0323     		movs	r3, #3
 23907 000c FB73     		strb	r3, [r7, #15]
 23908 000e 3AE0     		b	.L911
 23909              	.L912:
3458:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23910              		.loc 1 3458 0
 23911 0010 274B     		ldr	r3, .L913
 23912 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23913 0016 1A46     		mov	r2, r3
 23914 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23915 001a 2648     		ldr	r0, .L913+4
 23916 001c 1346     		mov	r3, r2
 23917 001e 5B00     		lsls	r3, r3, #1
 23918 0020 1344     		add	r3, r3, r2
 23919 0022 9B00     		lsls	r3, r3, #2
 23920 0024 1344     		add	r3, r3, r2
 23921 0026 0B44     		add	r3, r3, r1
 23922 0028 0633     		adds	r3, r3, #6
 23923 002a 9B00     		lsls	r3, r3, #2
 23924 002c 0344     		add	r3, r3, r0
 23925 002e 5A68     		ldr	r2, [r3, #4]
 23926 0030 1F4B     		ldr	r3, .L913
 23927 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23928 0036 1C46     		mov	r4, r3
 23929 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23930 003a 1D48     		ldr	r0, .L913
 23931 003c 2346     		mov	r3, r4
 23932 003e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 525


 23933 0040 2344     		add	r3, r3, r4
 23934 0042 1B01     		lsls	r3, r3, #4
 23935 0044 0344     		add	r3, r3, r0
 23936 0046 0B44     		add	r3, r3, r1
 23937 0048 03F29513 		addw	r3, r3, #405
 23938 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23939 004e 42FA03F3 		asr	r3, r2, r3
 23940 0052 1BB2     		sxth	r3, r3
 23941 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3459:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23942              		.loc 1 3459 0
 23943 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23944 0058 5B00     		lsls	r3, r3, #1
 23945 005a 0233     		adds	r3, r3, #2
 23946 005c 07F10C02 		add	r2, r7, #12
 23947 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23948 0062 07F11001 		add	r1, r7, #16
 23949 0066 0B44     		add	r3, r3, r1
 23950 0068 03F80C2C 		strb	r2, [r3, #-12]
3460:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23951              		.loc 1 3460 0
 23952 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23953 006e 5B00     		lsls	r3, r3, #1
 23954 0070 5A1C     		adds	r2, r3, #1
 23955 0072 07F10C03 		add	r3, r7, #12
 23956 0076 0133     		adds	r3, r3, #1
 23957 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23958 007a 07F11003 		add	r3, r7, #16
 23959 007e 1344     		add	r3, r3, r2
 23960 0080 0A46     		mov	r2, r1
 23961 0082 03F80C2C 		strb	r2, [r3, #-12]
 23962              	.L911:
3457:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23963              		.loc 1 3457 0 discriminator 1
 23964 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23965 0088 5A1E     		subs	r2, r3, #1
 23966 008a FA73     		strb	r2, [r7, #15]
 23967 008c 002B     		cmp	r3, #0
 23968 008e BFD1     		bne	.L912
3461:..\src/command_processing.c ****     }
3462:..\src/command_processing.c ****             
3463:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3464:..\src/command_processing.c **** 
3465:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23969              		.loc 1 3465 0
 23970 0090 3B1D     		adds	r3, r7, #4
 23971 0092 0721     		movs	r1, #7
 23972 0094 1846     		mov	r0, r3
 23973 0096 FFF7FEFF 		bl	LCRChecksum
 23974 009a 0346     		mov	r3, r0
 23975 009c FB72     		strb	r3, [r7, #11]
3466:..\src/command_processing.c **** 
3467:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23976              		.loc 1 3467 0
 23977 009e 3B1D     		adds	r3, r7, #4
 23978 00a0 0821     		movs	r1, #8
 23979 00a2 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 526


 23980 00a4 FFF7FEFF 		bl	commWrite
3468:..\src/command_processing.c **** }
 23981              		.loc 1 3468 0
 23982 00a8 00BF     		nop
 23983 00aa 1437     		adds	r7, r7, #20
 23984              		.cfi_def_cfa_offset 12
 23985 00ac BD46     		mov	sp, r7
 23986              		.cfi_def_cfa_register 13
 23987              		@ sp needed
 23988 00ae 90BD     		pop	{r4, r7, pc}
 23989              	.L914:
 23990              		.align	2
 23991              	.L913:
 23992 00b0 00000000 		.word	g_mem
 23993 00b4 00000000 		.word	g_measOld
 23994              		.cfi_endproc
 23995              	.LFE95:
 23996              		.size	cmd_get_velocities, .-cmd_get_velocities
 23997              		.section	.text.cmd_get_accelerations,"ax",%progbits
 23998              		.align	2
 23999              		.global	cmd_get_accelerations
 24000              		.thumb
 24001              		.thumb_func
 24002              		.type	cmd_get_accelerations, %function
 24003              	cmd_get_accelerations:
 24004              	.LFB96:
3469:..\src/command_processing.c **** 
3470:..\src/command_processing.c **** void cmd_get_accelerations(){
 24005              		.loc 1 3470 0
 24006              		.cfi_startproc
 24007              		@ args = 0, pretend = 0, frame = 16
 24008              		@ frame_needed = 1, uses_anonymous_args = 0
 24009 0000 90B5     		push	{r4, r7, lr}
 24010              		.cfi_def_cfa_offset 12
 24011              		.cfi_offset 4, -12
 24012              		.cfi_offset 7, -8
 24013              		.cfi_offset 14, -4
 24014 0002 85B0     		sub	sp, sp, #20
 24015              		.cfi_def_cfa_offset 32
 24016 0004 00AF     		add	r7, sp, #0
 24017              		.cfi_def_cfa_register 7
3471:..\src/command_processing.c ****  
3472:..\src/command_processing.c ****     uint8 CYDATA index;
3473:..\src/command_processing.c ****     int16 aux_int16;
3474:..\src/command_processing.c ****     
3475:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3476:..\src/command_processing.c ****     
3477:..\src/command_processing.c ****     uint8 packet_data[8]; 
3478:..\src/command_processing.c ****     
3479:..\src/command_processing.c ****     //Header package
3480:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24018              		.loc 1 3480 0
 24019 0006 8B23     		movs	r3, #139
 24020 0008 3B71     		strb	r3, [r7, #4]
3481:..\src/command_processing.c ****     
3482:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24021              		.loc 1 3482 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 527


 24022 000a 0323     		movs	r3, #3
 24023 000c FB73     		strb	r3, [r7, #15]
 24024 000e 39E0     		b	.L916
 24025              	.L917:
3483:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24026              		.loc 1 3483 0
 24027 0010 274B     		ldr	r3, .L918
 24028 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24029 0016 1A46     		mov	r2, r3
 24030 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24031 001a 2648     		ldr	r0, .L918+4
 24032 001c 1346     		mov	r3, r2
 24033 001e 5B00     		lsls	r3, r3, #1
 24034 0020 1344     		add	r3, r3, r2
 24035 0022 9B00     		lsls	r3, r3, #2
 24036 0024 1344     		add	r3, r3, r2
 24037 0026 0B44     		add	r3, r3, r1
 24038 0028 0A33     		adds	r3, r3, #10
 24039 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24040 002e 204B     		ldr	r3, .L918
 24041 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24042 0034 1C46     		mov	r4, r3
 24043 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24044 0038 1D48     		ldr	r0, .L918
 24045 003a 2346     		mov	r3, r4
 24046 003c 5B00     		lsls	r3, r3, #1
 24047 003e 2344     		add	r3, r3, r4
 24048 0040 1B01     		lsls	r3, r3, #4
 24049 0042 0344     		add	r3, r3, r0
 24050 0044 0B44     		add	r3, r3, r1
 24051 0046 03F29513 		addw	r3, r3, #405
 24052 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24053 004c 42FA03F3 		asr	r3, r2, r3
 24054 0050 1BB2     		sxth	r3, r3
 24055 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3484:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24056              		.loc 1 3484 0
 24057 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24058 0056 5B00     		lsls	r3, r3, #1
 24059 0058 0233     		adds	r3, r3, #2
 24060 005a 07F10C02 		add	r2, r7, #12
 24061 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24062 0060 07F11001 		add	r1, r7, #16
 24063 0064 0B44     		add	r3, r3, r1
 24064 0066 03F80C2C 		strb	r2, [r3, #-12]
3485:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24065              		.loc 1 3485 0
 24066 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24067 006c 5B00     		lsls	r3, r3, #1
 24068 006e 5A1C     		adds	r2, r3, #1
 24069 0070 07F10C03 		add	r3, r7, #12
 24070 0074 0133     		adds	r3, r3, #1
 24071 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24072 0078 07F11003 		add	r3, r7, #16
 24073 007c 1344     		add	r3, r3, r2
 24074 007e 0A46     		mov	r2, r1
 24075 0080 03F80C2C 		strb	r2, [r3, #-12]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 528


 24076              	.L916:
3482:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24077              		.loc 1 3482 0 discriminator 1
 24078 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24079 0086 5A1E     		subs	r2, r3, #1
 24080 0088 FA73     		strb	r2, [r7, #15]
 24081 008a 002B     		cmp	r3, #0
 24082 008c C0D1     		bne	.L917
3486:..\src/command_processing.c ****     }
3487:..\src/command_processing.c ****     
3488:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3489:..\src/command_processing.c **** 
3490:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24083              		.loc 1 3490 0
 24084 008e 3B1D     		adds	r3, r7, #4
 24085 0090 0721     		movs	r1, #7
 24086 0092 1846     		mov	r0, r3
 24087 0094 FFF7FEFF 		bl	LCRChecksum
 24088 0098 0346     		mov	r3, r0
 24089 009a FB72     		strb	r3, [r7, #11]
3491:..\src/command_processing.c **** 
3492:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24090              		.loc 1 3492 0
 24091 009c 3B1D     		adds	r3, r7, #4
 24092 009e 0821     		movs	r1, #8
 24093 00a0 1846     		mov	r0, r3
 24094 00a2 FFF7FEFF 		bl	commWrite
3493:..\src/command_processing.c **** }
 24095              		.loc 1 3493 0
 24096 00a6 00BF     		nop
 24097 00a8 1437     		adds	r7, r7, #20
 24098              		.cfi_def_cfa_offset 12
 24099 00aa BD46     		mov	sp, r7
 24100              		.cfi_def_cfa_register 13
 24101              		@ sp needed
 24102 00ac 90BD     		pop	{r4, r7, pc}
 24103              	.L919:
 24104 00ae 00BF     		.align	2
 24105              	.L918:
 24106 00b0 00000000 		.word	g_mem
 24107 00b4 00000000 		.word	g_measOld
 24108              		.cfi_endproc
 24109              	.LFE96:
 24110              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24111              		.section	.text.cmd_get_joystick,"ax",%progbits
 24112              		.align	2
 24113              		.global	cmd_get_joystick
 24114              		.thumb
 24115              		.thumb_func
 24116              		.type	cmd_get_joystick, %function
 24117              	cmd_get_joystick:
 24118              	.LFB97:
3494:..\src/command_processing.c **** 
3495:..\src/command_processing.c **** void cmd_get_joystick() {
 24119              		.loc 1 3495 0
 24120              		.cfi_startproc
 24121              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 529


 24122              		@ frame_needed = 1, uses_anonymous_args = 0
 24123 0000 80B5     		push	{r7, lr}
 24124              		.cfi_def_cfa_offset 8
 24125              		.cfi_offset 7, -8
 24126              		.cfi_offset 14, -4
 24127 0002 82B0     		sub	sp, sp, #8
 24128              		.cfi_def_cfa_offset 16
 24129 0004 00AF     		add	r7, sp, #0
 24130              		.cfi_def_cfa_register 7
3496:..\src/command_processing.c ****  
3497:..\src/command_processing.c ****     int16 aux_int16;
3498:..\src/command_processing.c ****     
3499:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3500:..\src/command_processing.c ****     
3501:..\src/command_processing.c ****     uint8 packet_data[6];
3502:..\src/command_processing.c ****     
3503:..\src/command_processing.c ****     // Header        
3504:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24131              		.loc 1 3504 0
 24132 0006 9223     		movs	r3, #146
 24133 0008 3B70     		strb	r3, [r7]
3505:..\src/command_processing.c ****     
3506:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24134              		.loc 1 3506 0
 24135 000a 134B     		ldr	r3, .L921
 24136 000c 1B6A     		ldr	r3, [r3, #32]
 24137 000e 1BB2     		sxth	r3, r3
 24138 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3507:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24139              		.loc 1 3507 0
 24140 0012 BB1D     		adds	r3, r7, #6
 24141 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24142 0016 BB70     		strb	r3, [r7, #2]
3508:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24143              		.loc 1 3508 0
 24144 0018 BB1D     		adds	r3, r7, #6
 24145 001a 0133     		adds	r3, r3, #1
 24146 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24147 001e 7B70     		strb	r3, [r7, #1]
3509:..\src/command_processing.c ****     
3510:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24148              		.loc 1 3510 0
 24149 0020 0D4B     		ldr	r3, .L921
 24150 0022 5B6A     		ldr	r3, [r3, #36]
 24151 0024 1BB2     		sxth	r3, r3
 24152 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3511:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24153              		.loc 1 3511 0
 24154 0028 BB1D     		adds	r3, r7, #6
 24155 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24156 002c 3B71     		strb	r3, [r7, #4]
3512:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24157              		.loc 1 3512 0
 24158 002e BB1D     		adds	r3, r7, #6
 24159 0030 0133     		adds	r3, r3, #1
 24160 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24161 0034 FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 530


3513:..\src/command_processing.c **** 
3514:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24162              		.loc 1 3514 0
 24163 0036 3B46     		mov	r3, r7
 24164 0038 0521     		movs	r1, #5
 24165 003a 1846     		mov	r0, r3
 24166 003c FFF7FEFF 		bl	LCRChecksum
 24167 0040 0346     		mov	r3, r0
 24168 0042 7B71     		strb	r3, [r7, #5]
3515:..\src/command_processing.c **** 
3516:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24169              		.loc 1 3516 0
 24170 0044 3B46     		mov	r3, r7
 24171 0046 0621     		movs	r1, #6
 24172 0048 1846     		mov	r0, r3
 24173 004a FFF7FEFF 		bl	commWrite
3517:..\src/command_processing.c **** }
 24174              		.loc 1 3517 0
 24175 004e 00BF     		nop
 24176 0050 0837     		adds	r7, r7, #8
 24177              		.cfi_def_cfa_offset 8
 24178 0052 BD46     		mov	sp, r7
 24179              		.cfi_def_cfa_register 13
 24180              		@ sp needed
 24181 0054 80BD     		pop	{r7, pc}
 24182              	.L922:
 24183 0056 00BF     		.align	2
 24184              	.L921:
 24185 0058 00000000 		.word	g_adc_measOld
 24186              		.cfi_endproc
 24187              	.LFE97:
 24188              		.size	cmd_get_joystick, .-cmd_get_joystick
 24189              		.section	.text.cmd_set_inputs,"ax",%progbits
 24190              		.align	2
 24191              		.global	cmd_set_inputs
 24192              		.thumb
 24193              		.thumb_func
 24194              		.type	cmd_set_inputs, %function
 24195              	cmd_set_inputs:
 24196              	.LFB98:
3518:..\src/command_processing.c **** 
3519:..\src/command_processing.c **** void cmd_set_inputs(){
 24197              		.loc 1 3519 0
 24198              		.cfi_startproc
 24199              		@ args = 0, pretend = 0, frame = 8
 24200              		@ frame_needed = 1, uses_anonymous_args = 0
 24201              		@ link register save eliminated.
 24202 0000 90B4     		push	{r4, r7}
 24203              		.cfi_def_cfa_offset 8
 24204              		.cfi_offset 4, -8
 24205              		.cfi_offset 7, -4
 24206 0002 82B0     		sub	sp, sp, #8
 24207              		.cfi_def_cfa_offset 16
 24208 0004 00AF     		add	r7, sp, #0
 24209              		.cfi_def_cfa_register 7
3520:..\src/command_processing.c ****     
3521:..\src/command_processing.c ****     // Store position setted in right variables
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 531


3522:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3523:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3524:..\src/command_processing.c ****     
3525:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24210              		.loc 1 3525 0
 24211 0006 894B     		ldr	r3, .L937
 24212 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24213 000a 1B02     		lsls	r3, r3, #8
 24214 000c 1AB2     		sxth	r2, r3
 24215 000e 874B     		ldr	r3, .L937
 24216 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24217 0012 1BB2     		sxth	r3, r3
 24218 0014 1343     		orrs	r3, r3, r2
 24219 0016 1BB2     		sxth	r3, r3
 24220 0018 3B80     		strh	r3, [r7]	@ movhi
3526:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24221              		.loc 1 3526 0
 24222 001a 844B     		ldr	r3, .L937
 24223 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24224 001e 1B02     		lsls	r3, r3, #8
 24225 0020 1AB2     		sxth	r2, r3
 24226 0022 824B     		ldr	r3, .L937
 24227 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24228 0026 1BB2     		sxth	r3, r3
 24229 0028 1343     		orrs	r3, r3, r2
 24230 002a 1BB2     		sxth	r3, r3
 24231 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24232              	.LBB31:
3527:..\src/command_processing.c ****     
3528:..\src/command_processing.c ****     // Check if last command received was the same as this 
3529:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3530:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24233              		.loc 1 3530 0
 24234 002e 0023     		movs	r3, #0
 24235 0030 FB71     		strb	r3, [r7, #7]
 24236 0032 1DE0     		b	.L924
 24237              	.L926:
3531:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24238              		.loc 1 3531 0
 24239 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24240 0036 7E4A     		ldr	r2, .L937+4
 24241 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24242 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24243 003e 5B00     		lsls	r3, r3, #1
 24244 0040 07F10801 		add	r1, r7, #8
 24245 0044 0B44     		add	r3, r3, r1
 24246 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24247 004a 9A42     		cmp	r2, r3
 24248 004c 02D0     		beq	.L925
3532:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24249              		.loc 1 3532 0
 24250 004e 794B     		ldr	r3, .L937+8
 24251 0050 0122     		movs	r2, #1
 24252 0052 1A70     		strb	r2, [r3]
 24253              	.L925:
3533:..\src/command_processing.c ****        }
3534:..\src/command_processing.c ****         // Update last command
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 532


3535:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24254              		.loc 1 3535 0 discriminator 2
 24255 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24256 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24257 0058 5B00     		lsls	r3, r3, #1
 24258 005a 07F10801 		add	r1, r7, #8
 24259 005e 0B44     		add	r3, r3, r1
 24260 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24261 0064 724B     		ldr	r3, .L937+4
 24262 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3530:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24263              		.loc 1 3530 0 discriminator 2
 24264 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24265 006c 0133     		adds	r3, r3, #1
 24266 006e FB71     		strb	r3, [r7, #7]
 24267              	.L924:
3530:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24268              		.loc 1 3530 0 is_stmt 0 discriminator 1
 24269 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24270 0072 714B     		ldr	r3, .L937+12
 24271 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24272 0078 0133     		adds	r3, r3, #1
 24273 007a 9A42     		cmp	r2, r3
 24274 007c DADB     		blt	.L926
 24275              	.LBE31:
3536:..\src/command_processing.c ****     }
3537:..\src/command_processing.c ****     
3538:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3539:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24276              		.loc 1 3539 0 is_stmt 1
 24277 007e 6D4B     		ldr	r3, .L937+8
 24278 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24279 0082 002B     		cmp	r3, #0
 24280 0084 00F0CC80 		beq	.L936
 24281              	.LBB32:
3540:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24282              		.loc 1 3540 0
 24283 0088 0023     		movs	r3, #0
 24284 008a BB71     		strb	r3, [r7, #6]
 24285 008c C4E0     		b	.L928
 24286              	.L935:
3541:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24287              		.loc 1 3541 0
 24288 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24289 0090 6A49     		ldr	r1, .L937+16
 24290 0092 1346     		mov	r3, r2
 24291 0094 DB00     		lsls	r3, r3, #3
 24292 0096 9B1A     		subs	r3, r3, r2
 24293 0098 1B01     		lsls	r3, r3, #4
 24294 009a 0B44     		add	r3, r3, r1
 24295 009c 03F20F13 		addw	r3, r3, #271
 24296 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24297 00a2 022B     		cmp	r3, #2
 24298 00a4 0ED1     		bne	.L929
3542:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24299              		.loc 1 3542 0
 24300 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 533


 24301 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24302 00aa 5B00     		lsls	r3, r3, #1
 24303 00ac 07F10801 		add	r1, r7, #8
 24304 00b0 0B44     		add	r3, r3, r1
 24305 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24306 00b6 1846     		mov	r0, r3
 24307 00b8 6149     		ldr	r1, .L937+20
 24308 00ba 1301     		lsls	r3, r2, #4
 24309 00bc 0B44     		add	r3, r3, r1
 24310 00be 0433     		adds	r3, r3, #4
 24311 00c0 1860     		str	r0, [r3]
 24312 00c2 47E0     		b	.L930
 24313              	.L929:
3543:..\src/command_processing.c ****             }
3544:..\src/command_processing.c ****             else {
3545:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24314              		.loc 1 3545 0
 24315 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24316 00c6 5D49     		ldr	r1, .L937+16
 24317 00c8 1346     		mov	r3, r2
 24318 00ca DB00     		lsls	r3, r3, #3
 24319 00cc 9B1A     		subs	r3, r3, r2
 24320 00ce 1B01     		lsls	r3, r3, #4
 24321 00d0 0B44     		add	r3, r3, r1
 24322 00d2 03F20F13 		addw	r3, r3, #271
 24323 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24324 00d8 012B     		cmp	r3, #1
 24325 00da 0ED1     		bne	.L931
3546:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24326              		.loc 1 3546 0
 24327 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24328 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24329 00e0 5B00     		lsls	r3, r3, #1
 24330 00e2 07F10801 		add	r1, r7, #8
 24331 00e6 0B44     		add	r3, r3, r1
 24332 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24333 00ec 1846     		mov	r0, r3
 24334 00ee 5449     		ldr	r1, .L937+20
 24335 00f0 1301     		lsls	r3, r2, #4
 24336 00f2 0B44     		add	r3, r3, r1
 24337 00f4 0833     		adds	r3, r3, #8
 24338 00f6 1860     		str	r0, [r3]
 24339 00f8 2CE0     		b	.L930
 24340              	.L931:
3547:..\src/command_processing.c ****                 }
3548:..\src/command_processing.c ****                 else {
3549:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24341              		.loc 1 3549 0
 24342 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24343 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24344 00fe 5B00     		lsls	r3, r3, #1
 24345 0100 07F10801 		add	r1, r7, #8
 24346 0104 0B44     		add	r3, r3, r1
 24347 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24348 010a 1846     		mov	r0, r3
 24349 010c 4C49     		ldr	r1, .L937+20
 24350 010e 1301     		lsls	r3, r2, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 534


 24351 0110 0B44     		add	r3, r3, r1
 24352 0112 1860     		str	r0, [r3]
3550:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24353              		.loc 1 3550 0
 24354 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24355 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24356 0118 494A     		ldr	r2, .L937+20
 24357 011a 1B01     		lsls	r3, r3, #4
 24358 011c 1344     		add	r3, r3, r2
 24359 011e 1868     		ldr	r0, [r3]
 24360 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24361 0122 454C     		ldr	r4, .L937+12
 24362 0124 1346     		mov	r3, r2
 24363 0126 DB00     		lsls	r3, r3, #3
 24364 0128 9B1A     		subs	r3, r3, r2
 24365 012a 1B01     		lsls	r3, r3, #4
 24366 012c 2344     		add	r3, r3, r4
 24367 012e 03F58873 		add	r3, r3, #272
 24368 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24369 0134 1C46     		mov	r4, r3
 24370 0136 414A     		ldr	r2, .L937+16
 24371 0138 2346     		mov	r3, r4
 24372 013a 5B00     		lsls	r3, r3, #1
 24373 013c 2344     		add	r3, r3, r4
 24374 013e 1B01     		lsls	r3, r3, #4
 24375 0140 1344     		add	r3, r3, r2
 24376 0142 03F29513 		addw	r3, r3, #405
 24377 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24378 0148 00FA03F2 		lsl	r2, r0, r3
 24379 014c 3C48     		ldr	r0, .L937+20
 24380 014e 0B01     		lsls	r3, r1, #4
 24381 0150 0344     		add	r3, r3, r0
 24382 0152 1A60     		str	r2, [r3]
 24383              	.L930:
3551:..\src/command_processing.c ****                 }
3552:..\src/command_processing.c ****             }  
3553:..\src/command_processing.c ****                
3554:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3555:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24384              		.loc 1 3555 0
 24385 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24386 0156 3849     		ldr	r1, .L937+12
 24387 0158 1346     		mov	r3, r2
 24388 015a DB00     		lsls	r3, r3, #3
 24389 015c 9B1A     		subs	r3, r3, r2
 24390 015e 1B01     		lsls	r3, r3, #4
 24391 0160 0B44     		add	r3, r3, r1
 24392 0162 E333     		adds	r3, r3, #227
 24393 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24394 0166 002B     		cmp	r3, #0
 24395 0168 53D0     		beq	.L932
 24396              		.loc 1 3555 0 is_stmt 0 discriminator 1
 24397 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24398 016c 3349     		ldr	r1, .L937+16
 24399 016e 1346     		mov	r3, r2
 24400 0170 DB00     		lsls	r3, r3, #3
 24401 0172 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 535


 24402 0174 1B01     		lsls	r3, r3, #4
 24403 0176 0B44     		add	r3, r3, r1
 24404 0178 03F20F13 		addw	r3, r3, #271
 24405 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24406 017e 032B     		cmp	r3, #3
 24407 0180 0BD0     		beq	.L933
 24408              		.loc 1 3555 0 discriminator 2
 24409 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24410 0184 2D49     		ldr	r1, .L937+16
 24411 0186 1346     		mov	r3, r2
 24412 0188 DB00     		lsls	r3, r3, #3
 24413 018a 9B1A     		subs	r3, r3, r2
 24414 018c 1B01     		lsls	r3, r3, #4
 24415 018e 0B44     		add	r3, r3, r1
 24416 0190 03F20F13 		addw	r3, r3, #271
 24417 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24418 0196 002B     		cmp	r3, #0
 24419 0198 3BD1     		bne	.L932
 24420              	.L933:
3556:..\src/command_processing.c ****                 
3557:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24421              		.loc 1 3557 0 is_stmt 1
 24422 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24423 019c 284A     		ldr	r2, .L937+20
 24424 019e 1B01     		lsls	r3, r3, #4
 24425 01a0 1344     		add	r3, r3, r2
 24426 01a2 1968     		ldr	r1, [r3]
 24427 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24428 01a6 2448     		ldr	r0, .L937+12
 24429 01a8 1346     		mov	r3, r2
 24430 01aa DB00     		lsls	r3, r3, #3
 24431 01ac 9B1A     		subs	r3, r3, r2
 24432 01ae 1B01     		lsls	r3, r3, #4
 24433 01b0 0344     		add	r3, r3, r0
 24434 01b2 E433     		adds	r3, r3, #228
 24435 01b4 1B68     		ldr	r3, [r3]
 24436 01b6 9942     		cmp	r1, r3
 24437 01b8 0DDA     		bge	.L934
3558:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24438              		.loc 1 3558 0
 24439 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24440 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24441 01be 1E48     		ldr	r0, .L937+12
 24442 01c0 1346     		mov	r3, r2
 24443 01c2 DB00     		lsls	r3, r3, #3
 24444 01c4 9B1A     		subs	r3, r3, r2
 24445 01c6 1B01     		lsls	r3, r3, #4
 24446 01c8 0344     		add	r3, r3, r0
 24447 01ca E433     		adds	r3, r3, #228
 24448 01cc 1A68     		ldr	r2, [r3]
 24449 01ce 1C48     		ldr	r0, .L937+20
 24450 01d0 0B01     		lsls	r3, r1, #4
 24451 01d2 0344     		add	r3, r3, r0
 24452 01d4 1A60     		str	r2, [r3]
 24453              	.L934:
3559:..\src/command_processing.c **** 
3560:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 536


 24454              		.loc 1 3560 0
 24455 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24456 01d8 194A     		ldr	r2, .L937+20
 24457 01da 1B01     		lsls	r3, r3, #4
 24458 01dc 1344     		add	r3, r3, r2
 24459 01de 1968     		ldr	r1, [r3]
 24460 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24461 01e2 1548     		ldr	r0, .L937+12
 24462 01e4 1346     		mov	r3, r2
 24463 01e6 DB00     		lsls	r3, r3, #3
 24464 01e8 9B1A     		subs	r3, r3, r2
 24465 01ea 1B01     		lsls	r3, r3, #4
 24466 01ec 0344     		add	r3, r3, r0
 24467 01ee E833     		adds	r3, r3, #232
 24468 01f0 1B68     		ldr	r3, [r3]
 24469 01f2 9942     		cmp	r1, r3
 24470 01f4 0DDD     		ble	.L932
3561:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24471              		.loc 1 3561 0
 24472 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24473 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24474 01fa 0F48     		ldr	r0, .L937+12
 24475 01fc 1346     		mov	r3, r2
 24476 01fe DB00     		lsls	r3, r3, #3
 24477 0200 9B1A     		subs	r3, r3, r2
 24478 0202 1B01     		lsls	r3, r3, #4
 24479 0204 0344     		add	r3, r3, r0
 24480 0206 E833     		adds	r3, r3, #232
 24481 0208 1A68     		ldr	r2, [r3]
 24482 020a 0D48     		ldr	r0, .L937+20
 24483 020c 0B01     		lsls	r3, r1, #4
 24484 020e 0344     		add	r3, r3, r0
 24485 0210 1A60     		str	r2, [r3]
 24486              	.L932:
3540:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24487              		.loc 1 3540 0 discriminator 2
 24488 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24489 0214 0133     		adds	r3, r3, #1
 24490 0216 BB71     		strb	r3, [r7, #6]
 24491              	.L928:
3540:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24492              		.loc 1 3540 0 is_stmt 0 discriminator 1
 24493 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24494 021a 012B     		cmp	r3, #1
 24495 021c 7FF637AF 		bls	.L935
 24496              	.L936:
 24497              	.LBE32:
3562:..\src/command_processing.c ****             }
3563:..\src/command_processing.c ****         }  
3564:..\src/command_processing.c ****     }
3565:..\src/command_processing.c **** }
 24498              		.loc 1 3565 0 is_stmt 1
 24499 0220 00BF     		nop
 24500 0222 0837     		adds	r7, r7, #8
 24501              		.cfi_def_cfa_offset 8
 24502 0224 BD46     		mov	sp, r7
 24503              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 537


 24504              		@ sp needed
 24505 0226 90BC     		pop	{r4, r7}
 24506              		.cfi_restore 7
 24507              		.cfi_restore 4
 24508              		.cfi_def_cfa_offset 0
 24509 0228 7047     		bx	lr
 24510              	.L938:
 24511 022a 00BF     		.align	2
 24512              	.L937:
 24513 022c 00000000 		.word	g_rx
 24514 0230 08000000 		.word	last_aux_int16.11403
 24515 0234 00000000 		.word	change_ext_ref_flag
 24516 0238 00000000 		.word	c_mem
 24517 023c 00000000 		.word	g_mem
 24518 0240 00000000 		.word	g_refNew
 24519              		.cfi_endproc
 24520              	.LFE98:
 24521              		.size	cmd_set_inputs, .-cmd_set_inputs
 24522              		.section	.text.cmd_activate,"ax",%progbits
 24523              		.align	2
 24524              		.global	cmd_activate
 24525              		.thumb
 24526              		.thumb_func
 24527              		.type	cmd_activate, %function
 24528              	cmd_activate:
 24529              	.LFB99:
3566:..\src/command_processing.c **** 
3567:..\src/command_processing.c **** void cmd_activate(){
 24530              		.loc 1 3567 0
 24531              		.cfi_startproc
 24532              		@ args = 0, pretend = 0, frame = 8
 24533              		@ frame_needed = 1, uses_anonymous_args = 0
 24534 0000 80B5     		push	{r7, lr}
 24535              		.cfi_def_cfa_offset 8
 24536              		.cfi_offset 7, -8
 24537              		.cfi_offset 14, -4
 24538 0002 82B0     		sub	sp, sp, #8
 24539              		.cfi_def_cfa_offset 16
 24540 0004 00AF     		add	r7, sp, #0
 24541              		.cfi_def_cfa_register 7
3568:..\src/command_processing.c ****     
3569:..\src/command_processing.c ****     // Store new value reads
3570:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24542              		.loc 1 3570 0
 24543 0006 334B     		ldr	r3, .L948
 24544 0008 5B78     		ldrb	r3, [r3, #1]
 24545 000a FB71     		strb	r3, [r7, #7]
3571:..\src/command_processing.c ****     
3572:..\src/command_processing.c ****     // Check type of control mode enabled
3573:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24546              		.loc 1 3573 0
 24547 000c 324B     		ldr	r3, .L948+4
 24548 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24549 0012 002B     		cmp	r3, #0
 24550 0014 04D0     		beq	.L940
 24551              		.loc 1 3573 0 is_stmt 0 discriminator 1
 24552 0016 304B     		ldr	r3, .L948+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 538


 24553 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24554 001c 032B     		cmp	r3, #3
 24555 001e 0BD1     		bne	.L941
 24556              	.L940:
3574:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24557              		.loc 1 3574 0 is_stmt 1
 24558 0020 2D4B     		ldr	r3, .L948+4
 24559 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24560 0026 1946     		mov	r1, r3
 24561 0028 2C4A     		ldr	r2, .L948+8
 24562 002a 3423     		movs	r3, #52
 24563 002c 03FB01F3 		mul	r3, r3, r1
 24564 0030 1344     		add	r3, r3, r2
 24565 0032 1B68     		ldr	r3, [r3]
 24566 0034 2A4A     		ldr	r2, .L948+12
 24567 0036 1360     		str	r3, [r2]
 24568              	.L941:
3575:..\src/command_processing.c ****     }
3576:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24569              		.loc 1 3576 0
 24570 0038 FB79     		ldrb	r3, [r7, #7]
 24571 003a 03F00103 		and	r3, r3, #1
 24572 003e DAB2     		uxtb	r2, r3
 24573 0040 274B     		ldr	r3, .L948+12
 24574 0042 1A73     		strb	r2, [r3, #12]
3577:..\src/command_processing.c ****     
3578:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3579:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 24575              		.loc 1 3579 0
 24576 0044 244B     		ldr	r3, .L948+4
 24577 0046 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24578 004a 022B     		cmp	r3, #2
 24579 004c 0FD1     		bne	.L942
3580:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3581:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3582:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
 24580              		.loc 1 3582 0
 24581 004e 244B     		ldr	r3, .L948+12
 24582 0050 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24583 0052 002B     		cmp	r3, #0
 24584 0054 02D1     		bne	.L943
3583:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
 24585              		.loc 1 3583 0
 24586 0056 224B     		ldr	r3, .L948+12
 24587 0058 0022     		movs	r2, #0
 24588 005a 9A60     		str	r2, [r3, #8]
 24589              	.L943:
3584:..\src/command_processing.c ****         }
3585:..\src/command_processing.c ****         
3586:..\src/command_processing.c ****         // Activate or deactivate the valve
3587:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
 24590              		.loc 1 3587 0
 24591 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24592 005e 5B08     		lsrs	r3, r3, #1
 24593 0060 DBB2     		uxtb	r3, r3
 24594 0062 03F00103 		and	r3, r3, #1
 24595 0066 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 539


 24596 0068 1846     		mov	r0, r3
 24597 006a FFF7FEFF 		bl	VALVE_Write
 24598              	.L942:
3588:..\src/command_processing.c ****     }
3589:..\src/command_processing.c **** #endif
3590:..\src/command_processing.c ****     
3591:..\src/command_processing.c ****     // Activate/Deactivate motor
3592:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24599              		.loc 1 3592 0
 24600 006e 1C4B     		ldr	r3, .L948+12
 24601 0070 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24602 0072 1946     		mov	r1, r3
 24603 0074 0020     		movs	r0, #0
 24604 0076 FFF7FEFF 		bl	enable_motor
3593:..\src/command_processing.c ****     
3594:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24605              		.loc 1 3594 0
 24606 007a 174B     		ldr	r3, .L948+4
 24607 007c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24608 0080 012B     		cmp	r3, #1
 24609 0082 23D1     		bne	.L947
3595:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24610              		.loc 1 3595 0
 24611 0084 144B     		ldr	r3, .L948+4
 24612 0086 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24613 008a 002B     		cmp	r3, #0
 24614 008c 04D0     		beq	.L945
 24615              		.loc 1 3595 0 is_stmt 0 discriminator 1
 24616 008e 124B     		ldr	r3, .L948+4
 24617 0090 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24618 0094 032B     		cmp	r3, #3
 24619 0096 0BD1     		bne	.L946
 24620              	.L945:
3596:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24621              		.loc 1 3596 0 is_stmt 1
 24622 0098 0F4B     		ldr	r3, .L948+4
 24623 009a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24624 009e 1946     		mov	r1, r3
 24625 00a0 0E4A     		ldr	r2, .L948+8
 24626 00a2 3423     		movs	r3, #52
 24627 00a4 03FB01F3 		mul	r3, r3, r1
 24628 00a8 1344     		add	r3, r3, r2
 24629 00aa 1B68     		ldr	r3, [r3]
 24630 00ac 0C4A     		ldr	r2, .L948+12
 24631 00ae 1361     		str	r3, [r2, #16]
 24632              	.L946:
3597:..\src/command_processing.c ****         }
3598:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24633              		.loc 1 3598 0
 24634 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24635 00b2 5B08     		lsrs	r3, r3, #1
 24636 00b4 DBB2     		uxtb	r3, r3
 24637 00b6 03F00103 		and	r3, r3, #1
 24638 00ba DAB2     		uxtb	r2, r3
 24639 00bc 084B     		ldr	r3, .L948+12
 24640 00be 1A77     		strb	r2, [r3, #28]
3599:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 540


 24641              		.loc 1 3599 0
 24642 00c0 074B     		ldr	r3, .L948+12
 24643 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24644 00c4 1946     		mov	r1, r3
 24645 00c6 0120     		movs	r0, #1
 24646 00c8 FFF7FEFF 		bl	enable_motor
 24647              	.L947:
3600:..\src/command_processing.c ****     }
3601:..\src/command_processing.c ****     
3602:..\src/command_processing.c **** }
 24648              		.loc 1 3602 0
 24649 00cc 00BF     		nop
 24650 00ce 0837     		adds	r7, r7, #8
 24651              		.cfi_def_cfa_offset 8
 24652 00d0 BD46     		mov	sp, r7
 24653              		.cfi_def_cfa_register 13
 24654              		@ sp needed
 24655 00d2 80BD     		pop	{r7, pc}
 24656              	.L949:
 24657              		.align	2
 24658              	.L948:
 24659 00d4 00000000 		.word	g_rx
 24660 00d8 00000000 		.word	g_mem
 24661 00dc 00000000 		.word	g_meas
 24662 00e0 00000000 		.word	g_refNew
 24663              		.cfi_endproc
 24664              	.LFE99:
 24665              		.size	cmd_activate, .-cmd_activate
 24666              		.section	.text.cmd_get_activate,"ax",%progbits
 24667              		.align	2
 24668              		.global	cmd_get_activate
 24669              		.thumb
 24670              		.thumb_func
 24671              		.type	cmd_get_activate, %function
 24672              	cmd_get_activate:
 24673              	.LFB100:
3603:..\src/command_processing.c **** 
3604:..\src/command_processing.c **** void cmd_get_activate(){
 24674              		.loc 1 3604 0
 24675              		.cfi_startproc
 24676              		@ args = 0, pretend = 0, frame = 8
 24677              		@ frame_needed = 1, uses_anonymous_args = 0
 24678 0000 80B5     		push	{r7, lr}
 24679              		.cfi_def_cfa_offset 8
 24680              		.cfi_offset 7, -8
 24681              		.cfi_offset 14, -4
 24682 0002 82B0     		sub	sp, sp, #8
 24683              		.cfi_def_cfa_offset 16
 24684 0004 00AF     		add	r7, sp, #0
 24685              		.cfi_def_cfa_register 7
3605:..\src/command_processing.c ****     
3606:..\src/command_processing.c ****     uint8 packet_data[3];
3607:..\src/command_processing.c **** 
3608:..\src/command_processing.c ****     // Header        
3609:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24686              		.loc 1 3609 0
 24687 0006 8123     		movs	r3, #129
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 541


 24688 0008 3B71     		strb	r3, [r7, #4]
3610:..\src/command_processing.c ****     
3611:..\src/command_processing.c ****     // Fill payload
3612:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24689              		.loc 1 3612 0
 24690 000a 124B     		ldr	r3, .L953
 24691 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24692 0010 012B     		cmp	r3, #1
 24693 0012 0BD1     		bne	.L951
3613:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24694              		.loc 1 3613 0
 24695 0014 104B     		ldr	r3, .L953+4
 24696 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24697 0018 5B00     		lsls	r3, r3, #1
 24698 001a 5AB2     		sxtb	r2, r3
 24699 001c 0E4B     		ldr	r3, .L953+4
 24700 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24701 0020 5BB2     		sxtb	r3, r3
 24702 0022 1343     		orrs	r3, r3, r2
 24703 0024 5BB2     		sxtb	r3, r3
 24704 0026 DBB2     		uxtb	r3, r3
 24705 0028 7B71     		strb	r3, [r7, #5]
 24706 002a 02E0     		b	.L952
 24707              	.L951:
3614:..\src/command_processing.c ****     } 
3615:..\src/command_processing.c ****     else {
3616:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24708              		.loc 1 3616 0
 24709 002c 0A4B     		ldr	r3, .L953+4
 24710 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24711 0030 7B71     		strb	r3, [r7, #5]
 24712              	.L952:
3617:..\src/command_processing.c ****     }
3618:..\src/command_processing.c ****     
3619:..\src/command_processing.c ****     // Calculate checksum
3620:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24713              		.loc 1 3620 0
 24714 0032 3B1D     		adds	r3, r7, #4
 24715 0034 0221     		movs	r1, #2
 24716 0036 1846     		mov	r0, r3
 24717 0038 FFF7FEFF 		bl	LCRChecksum
 24718 003c 0346     		mov	r3, r0
 24719 003e BB71     		strb	r3, [r7, #6]
3621:..\src/command_processing.c ****     
3622:..\src/command_processing.c ****     // Send package to UART
3623:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24720              		.loc 1 3623 0
 24721 0040 3B1D     		adds	r3, r7, #4
 24722 0042 0321     		movs	r1, #3
 24723 0044 1846     		mov	r0, r3
 24724 0046 FFF7FEFF 		bl	commWrite
3624:..\src/command_processing.c **** 
3625:..\src/command_processing.c **** }
 24725              		.loc 1 3625 0
 24726 004a 00BF     		nop
 24727 004c 0837     		adds	r7, r7, #8
 24728              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 542


 24729 004e BD46     		mov	sp, r7
 24730              		.cfi_def_cfa_register 13
 24731              		@ sp needed
 24732 0050 80BD     		pop	{r7, pc}
 24733              	.L954:
 24734 0052 00BF     		.align	2
 24735              	.L953:
 24736 0054 00000000 		.word	g_mem
 24737 0058 00000000 		.word	g_ref
 24738              		.cfi_endproc
 24739              	.LFE100:
 24740              		.size	cmd_get_activate, .-cmd_get_activate
 24741              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24742              		.align	2
 24743              		.global	cmd_get_curr_and_meas
 24744              		.thumb
 24745              		.thumb_func
 24746              		.type	cmd_get_curr_and_meas, %function
 24747              	cmd_get_curr_and_meas:
 24748              	.LFB101:
3626:..\src/command_processing.c **** 
3627:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24749              		.loc 1 3627 0
 24750              		.cfi_startproc
 24751              		@ args = 0, pretend = 0, frame = 16
 24752              		@ frame_needed = 1, uses_anonymous_args = 0
 24753 0000 90B5     		push	{r4, r7, lr}
 24754              		.cfi_def_cfa_offset 12
 24755              		.cfi_offset 4, -12
 24756              		.cfi_offset 7, -8
 24757              		.cfi_offset 14, -4
 24758 0002 85B0     		sub	sp, sp, #20
 24759              		.cfi_def_cfa_offset 32
 24760 0004 00AF     		add	r7, sp, #0
 24761              		.cfi_def_cfa_register 7
3628:..\src/command_processing.c ****     
3629:..\src/command_processing.c ****     uint8 CYDATA index;
3630:..\src/command_processing.c ****     int16 aux_int16;
3631:..\src/command_processing.c ****    
3632:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3633:..\src/command_processing.c ****     
3634:..\src/command_processing.c ****     uint8 packet_data[12]; 
3635:..\src/command_processing.c **** 
3636:..\src/command_processing.c ****     //Header package
3637:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24762              		.loc 1 3637 0
 24763 0006 8623     		movs	r3, #134
 24764 0008 3B70     		strb	r3, [r7]
3638:..\src/command_processing.c **** 
3639:..\src/command_processing.c ****     // Currents
3640:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24765              		.loc 1 3640 0
 24766 000a 484B     		ldr	r3, .L960
 24767 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24768 0010 1946     		mov	r1, r3
 24769 0012 474A     		ldr	r2, .L960+4
 24770 0014 3423     		movs	r3, #52
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 543


 24771 0016 03FB01F3 		mul	r3, r3, r1
 24772 001a 1344     		add	r3, r3, r2
 24773 001c 0C33     		adds	r3, r3, #12
 24774 001e 1B68     		ldr	r3, [r3]
 24775 0020 1BB2     		sxth	r3, r3
 24776 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3641:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24777              		.loc 1 3641 0
 24778 0024 07F10C03 		add	r3, r7, #12
 24779 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24780 002a BB70     		strb	r3, [r7, #2]
3642:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24781              		.loc 1 3642 0
 24782 002c 07F10C03 		add	r3, r7, #12
 24783 0030 0133     		adds	r3, r3, #1
 24784 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24785 0034 7B70     		strb	r3, [r7, #1]
3643:..\src/command_processing.c ****     
3644:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24786              		.loc 1 3644 0
 24787 0036 3F4B     		ldr	r3, .L960+8
 24788 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24789 003c 012B     		cmp	r3, #1
 24790 003e 0DD1     		bne	.L956
3645:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24791              		.loc 1 3645 0
 24792 0040 3A4B     		ldr	r3, .L960
 24793 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24794 0046 1946     		mov	r1, r3
 24795 0048 394A     		ldr	r2, .L960+4
 24796 004a 3423     		movs	r3, #52
 24797 004c 03FB01F3 		mul	r3, r3, r1
 24798 0050 1344     		add	r3, r3, r2
 24799 0052 0C33     		adds	r3, r3, #12
 24800 0054 1B68     		ldr	r3, [r3]
 24801 0056 1BB2     		sxth	r3, r3
 24802 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24803 005a 0CE0     		b	.L957
 24804              	.L956:
3646:..\src/command_processing.c ****     }
3647:..\src/command_processing.c ****     else {
3648:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24805              		.loc 1 3648 0
 24806 005c 334B     		ldr	r3, .L960
 24807 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24808 0062 1946     		mov	r1, r3
 24809 0064 324A     		ldr	r2, .L960+4
 24810 0066 3423     		movs	r3, #52
 24811 0068 03FB01F3 		mul	r3, r3, r1
 24812 006c 1344     		add	r3, r3, r2
 24813 006e 1033     		adds	r3, r3, #16
 24814 0070 1B68     		ldr	r3, [r3]
 24815 0072 1BB2     		sxth	r3, r3
 24816 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24817              	.L957:
3649:..\src/command_processing.c ****     }
3650:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 544


 24818              		.loc 1 3650 0
 24819 0076 07F10C03 		add	r3, r7, #12
 24820 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24821 007c 3B71     		strb	r3, [r7, #4]
3651:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24822              		.loc 1 3651 0
 24823 007e 07F10C03 		add	r3, r7, #12
 24824 0082 0133     		adds	r3, r3, #1
 24825 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24826 0086 FB70     		strb	r3, [r7, #3]
3652:..\src/command_processing.c **** 
3653:..\src/command_processing.c ****     // Positions
3654:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24827              		.loc 1 3654 0
 24828 0088 0323     		movs	r3, #3
 24829 008a FB73     		strb	r3, [r7, #15]
 24830 008c 38E0     		b	.L958
 24831              	.L959:
3655:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24832              		.loc 1 3655 0
 24833 008e 274B     		ldr	r3, .L960
 24834 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24835 0094 1A46     		mov	r2, r3
 24836 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24837 0098 2548     		ldr	r0, .L960+4
 24838 009a 1346     		mov	r3, r2
 24839 009c 5B00     		lsls	r3, r3, #1
 24840 009e 1344     		add	r3, r3, r2
 24841 00a0 9B00     		lsls	r3, r3, #2
 24842 00a2 1344     		add	r3, r3, r2
 24843 00a4 0B44     		add	r3, r3, r1
 24844 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24845 00aa 204B     		ldr	r3, .L960
 24846 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24847 00b0 1C46     		mov	r4, r3
 24848 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24849 00b4 1D48     		ldr	r0, .L960
 24850 00b6 2346     		mov	r3, r4
 24851 00b8 5B00     		lsls	r3, r3, #1
 24852 00ba 2344     		add	r3, r3, r4
 24853 00bc 1B01     		lsls	r3, r3, #4
 24854 00be 0344     		add	r3, r3, r0
 24855 00c0 0B44     		add	r3, r3, r1
 24856 00c2 03F29513 		addw	r3, r3, #405
 24857 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24858 00c8 42FA03F3 		asr	r3, r2, r3
 24859 00cc 1BB2     		sxth	r3, r3
 24860 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3656:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24861              		.loc 1 3656 0
 24862 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24863 00d2 5B00     		lsls	r3, r3, #1
 24864 00d4 0633     		adds	r3, r3, #6
 24865 00d6 07F10C02 		add	r2, r7, #12
 24866 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24867 00dc 07F11001 		add	r1, r7, #16
 24868 00e0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 545


 24869 00e2 03F8102C 		strb	r2, [r3, #-16]
3657:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24870              		.loc 1 3657 0
 24871 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24872 00e8 5B00     		lsls	r3, r3, #1
 24873 00ea 5A1D     		adds	r2, r3, #5
 24874 00ec 07F10C03 		add	r3, r7, #12
 24875 00f0 0133     		adds	r3, r3, #1
 24876 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24877 00f4 07F11003 		add	r3, r7, #16
 24878 00f8 1344     		add	r3, r3, r2
 24879 00fa 0A46     		mov	r2, r1
 24880 00fc 03F8102C 		strb	r2, [r3, #-16]
 24881              	.L958:
3654:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24882              		.loc 1 3654 0 discriminator 1
 24883 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24884 0102 5A1E     		subs	r2, r3, #1
 24885 0104 FA73     		strb	r2, [r7, #15]
 24886 0106 002B     		cmp	r3, #0
 24887 0108 C1D1     		bne	.L959
3658:..\src/command_processing.c ****     }
3659:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3660:..\src/command_processing.c ****         
3661:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 24888              		.loc 1 3661 0
 24889 010a 3B46     		mov	r3, r7
 24890 010c 0B21     		movs	r1, #11
 24891 010e 1846     		mov	r0, r3
 24892 0110 FFF7FEFF 		bl	LCRChecksum
 24893 0114 0346     		mov	r3, r0
 24894 0116 FB72     		strb	r3, [r7, #11]
3662:..\src/command_processing.c ****     commWrite(packet_data, 12);
 24895              		.loc 1 3662 0
 24896 0118 3B46     		mov	r3, r7
 24897 011a 0C21     		movs	r1, #12
 24898 011c 1846     		mov	r0, r3
 24899 011e FFF7FEFF 		bl	commWrite
3663:..\src/command_processing.c ****    
3664:..\src/command_processing.c **** }
 24900              		.loc 1 3664 0
 24901 0122 00BF     		nop
 24902 0124 1437     		adds	r7, r7, #20
 24903              		.cfi_def_cfa_offset 12
 24904 0126 BD46     		mov	sp, r7
 24905              		.cfi_def_cfa_register 13
 24906              		@ sp needed
 24907 0128 90BD     		pop	{r4, r7, pc}
 24908              	.L961:
 24909 012a 00BF     		.align	2
 24910              	.L960:
 24911 012c 00000000 		.word	g_mem
 24912 0130 00000000 		.word	g_measOld
 24913 0134 00000000 		.word	c_mem
 24914              		.cfi_endproc
 24915              	.LFE101:
 24916              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 546


 24917              		.global	__aeabi_dmul
 24918              		.global	__aeabi_d2iz
 24919              		.section	.text.cmd_get_currents,"ax",%progbits
 24920              		.align	2
 24921              		.global	cmd_get_currents
 24922              		.thumb
 24923              		.thumb_func
 24924              		.type	cmd_get_currents, %function
 24925              	cmd_get_currents:
 24926              	.LFB102:
3665:..\src/command_processing.c **** 
3666:..\src/command_processing.c **** void cmd_get_currents(){
 24927              		.loc 1 3666 0
 24928              		.cfi_startproc
 24929              		@ args = 0, pretend = 0, frame = 16
 24930              		@ frame_needed = 1, uses_anonymous_args = 0
 24931 0000 90B5     		push	{r4, r7, lr}
 24932              		.cfi_def_cfa_offset 12
 24933              		.cfi_offset 4, -12
 24934              		.cfi_offset 7, -8
 24935              		.cfi_offset 14, -4
 24936 0002 85B0     		sub	sp, sp, #20
 24937              		.cfi_def_cfa_offset 32
 24938 0004 00AF     		add	r7, sp, #0
 24939              		.cfi_def_cfa_register 7
3667:..\src/command_processing.c ****     
3668:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3669:..\src/command_processing.c ****     
3670:..\src/command_processing.c ****     uint8 packet_data[6]; 
3671:..\src/command_processing.c ****     int16 aux_int16;
3672:..\src/command_processing.c ****     
3673:..\src/command_processing.c ****     //Header package
3674:..\src/command_processing.c **** 
3675:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 24940              		.loc 1 3675 0
 24941 0006 8523     		movs	r3, #133
 24942 0008 3B72     		strb	r3, [r7, #8]
3676:..\src/command_processing.c **** 
3677:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 24943              		.loc 1 3677 0
 24944 000a 334B     		ldr	r3, .L967
 24945 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24946 0010 022B     		cmp	r3, #2
 24947 0012 0DD0     		beq	.L963
3678:..\src/command_processing.c ****         // Currents
3679:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 24948              		.loc 1 3679 0
 24949 0014 314B     		ldr	r3, .L967+4
 24950 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24951 001a 1946     		mov	r1, r3
 24952 001c 304A     		ldr	r2, .L967+8
 24953 001e 3423     		movs	r3, #52
 24954 0020 03FB01F3 		mul	r3, r3, r1
 24955 0024 1344     		add	r3, r3, r2
 24956 0026 0C33     		adds	r3, r3, #12
 24957 0028 1B68     		ldr	r3, [r3]
 24958 002a 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 547


 24959 002c FB80     		strh	r3, [r7, #6]	@ movhi
 24960 002e 12E0     		b	.L964
 24961              	.L963:
3680:..\src/command_processing.c ****     }
3681:..\src/command_processing.c ****     else {
3682:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3683:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 24962              		.loc 1 3683 0
 24963 0030 2C4B     		ldr	r3, .L967+12
 24964 0032 1B68     		ldr	r3, [r3]	@ float
 24965 0034 1846     		mov	r0, r3
 24966 0036 FFF7FEFF 		bl	__aeabi_f2d
 24967 003a 4FF00002 		mov	r2, #0
 24968 003e 2A4B     		ldr	r3, .L967+16
 24969 0040 FFF7FEFF 		bl	__aeabi_dmul
 24970 0044 0346     		mov	r3, r0
 24971 0046 0C46     		mov	r4, r1
 24972 0048 1846     		mov	r0, r3
 24973 004a 2146     		mov	r1, r4
 24974 004c FFF7FEFF 		bl	__aeabi_d2iz
 24975 0050 0346     		mov	r3, r0
 24976 0052 1BB2     		sxth	r3, r3
 24977 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 24978              	.L964:
3684:..\src/command_processing.c ****     }
3685:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24979              		.loc 1 3685 0
 24980 0056 BB1D     		adds	r3, r7, #6
 24981 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24982 005a BB72     		strb	r3, [r7, #10]
3686:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24983              		.loc 1 3686 0
 24984 005c BB1D     		adds	r3, r7, #6
 24985 005e 0133     		adds	r3, r3, #1
 24986 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24987 0062 7B72     		strb	r3, [r7, #9]
3687:..\src/command_processing.c ****     
3688:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24988              		.loc 1 3688 0
 24989 0064 1C4B     		ldr	r3, .L967
 24990 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24991 006a 012B     		cmp	r3, #1
 24992 006c 0DD1     		bne	.L965
3689:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24993              		.loc 1 3689 0
 24994 006e 1B4B     		ldr	r3, .L967+4
 24995 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24996 0074 1946     		mov	r1, r3
 24997 0076 1A4A     		ldr	r2, .L967+8
 24998 0078 3423     		movs	r3, #52
 24999 007a 03FB01F3 		mul	r3, r3, r1
 25000 007e 1344     		add	r3, r3, r2
 25001 0080 0C33     		adds	r3, r3, #12
 25002 0082 1B68     		ldr	r3, [r3]
 25003 0084 1BB2     		sxth	r3, r3
 25004 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25005 0088 0CE0     		b	.L966
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 548


 25006              	.L965:
3690:..\src/command_processing.c ****     }
3691:..\src/command_processing.c ****     else {
3692:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25007              		.loc 1 3692 0
 25008 008a 144B     		ldr	r3, .L967+4
 25009 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25010 0090 1946     		mov	r1, r3
 25011 0092 134A     		ldr	r2, .L967+8
 25012 0094 3423     		movs	r3, #52
 25013 0096 03FB01F3 		mul	r3, r3, r1
 25014 009a 1344     		add	r3, r3, r2
 25015 009c 1033     		adds	r3, r3, #16
 25016 009e 1B68     		ldr	r3, [r3]
 25017 00a0 1BB2     		sxth	r3, r3
 25018 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 25019              	.L966:
3693:..\src/command_processing.c ****     }
3694:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25020              		.loc 1 3694 0
 25021 00a4 BB1D     		adds	r3, r7, #6
 25022 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25023 00a8 3B73     		strb	r3, [r7, #12]
3695:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25024              		.loc 1 3695 0
 25025 00aa BB1D     		adds	r3, r7, #6
 25026 00ac 0133     		adds	r3, r3, #1
 25027 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25028 00b0 FB72     		strb	r3, [r7, #11]
3696:..\src/command_processing.c **** 
3697:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3698:..\src/command_processing.c **** 
3699:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25029              		.loc 1 3699 0
 25030 00b2 07F10803 		add	r3, r7, #8
 25031 00b6 0521     		movs	r1, #5
 25032 00b8 1846     		mov	r0, r3
 25033 00ba FFF7FEFF 		bl	LCRChecksum
 25034 00be 0346     		mov	r3, r0
 25035 00c0 7B73     		strb	r3, [r7, #13]
3700:..\src/command_processing.c ****     
3701:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25036              		.loc 1 3701 0
 25037 00c2 07F10803 		add	r3, r7, #8
 25038 00c6 0621     		movs	r1, #6
 25039 00c8 1846     		mov	r0, r3
 25040 00ca FFF7FEFF 		bl	commWrite
3702:..\src/command_processing.c **** }
 25041              		.loc 1 3702 0
 25042 00ce 00BF     		nop
 25043 00d0 1437     		adds	r7, r7, #20
 25044              		.cfi_def_cfa_offset 12
 25045 00d2 BD46     		mov	sp, r7
 25046              		.cfi_def_cfa_register 13
 25047              		@ sp needed
 25048 00d4 90BD     		pop	{r4, r7, pc}
 25049              	.L968:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 549


 25050 00d6 00BF     		.align	2
 25051              	.L967:
 25052 00d8 00000000 		.word	c_mem
 25053 00dc 00000000 		.word	g_mem
 25054 00e0 00000000 		.word	g_measOld
 25055 00e4 00000000 		.word	g_fb_meas
 25056 00e8 00005940 		.word	1079574528
 25057              		.cfi_endproc
 25058              	.LFE102:
 25059              		.size	cmd_get_currents, .-cmd_get_currents
 25060              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25061              		.align	2
 25062              		.global	cmd_get_currents_for_cuff
 25063              		.thumb
 25064              		.thumb_func
 25065              		.type	cmd_get_currents_for_cuff, %function
 25066              	cmd_get_currents_for_cuff:
 25067              	.LFB103:
3703:..\src/command_processing.c **** 
3704:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25068              		.loc 1 3704 0
 25069              		.cfi_startproc
 25070              		@ args = 0, pretend = 0, frame = 8
 25071              		@ frame_needed = 1, uses_anonymous_args = 0
 25072 0000 80B5     		push	{r7, lr}
 25073              		.cfi_def_cfa_offset 8
 25074              		.cfi_offset 7, -8
 25075              		.cfi_offset 14, -4
 25076 0002 82B0     		sub	sp, sp, #8
 25077              		.cfi_def_cfa_offset 16
 25078 0004 00AF     		add	r7, sp, #0
 25079              		.cfi_def_cfa_register 7
3705:..\src/command_processing.c ****     
3706:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3707:..\src/command_processing.c ****     
3708:..\src/command_processing.c ****     uint8 packet_data[4]; 
3709:..\src/command_processing.c ****     int16 aux_int16;
3710:..\src/command_processing.c ****     
3711:..\src/command_processing.c ****     //Header package
3712:..\src/command_processing.c **** 
3713:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25080              		.loc 1 3713 0
 25081 0006 8E23     		movs	r3, #142
 25082 0008 3B71     		strb	r3, [r7, #4]
3714:..\src/command_processing.c **** 
3715:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25083              		.loc 1 3715 0
 25084 000a 144B     		ldr	r3, .L970
 25085 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25086 0010 1946     		mov	r1, r3
 25087 0012 134A     		ldr	r2, .L970+4
 25088 0014 3423     		movs	r3, #52
 25089 0016 03FB01F3 		mul	r3, r3, r1
 25090 001a 1344     		add	r3, r3, r2
 25091 001c 1033     		adds	r3, r3, #16
 25092 001e 1B68     		ldr	r3, [r3]
 25093 0020 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 550


 25094 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3716:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25095              		.loc 1 3716 0
 25096 0024 BB1C     		adds	r3, r7, #2
 25097 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25098 0028 BB71     		strb	r3, [r7, #6]
3717:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25099              		.loc 1 3717 0
 25100 002a BB1C     		adds	r3, r7, #2
 25101 002c 0133     		adds	r3, r3, #1
 25102 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25103 0030 7B71     		strb	r3, [r7, #5]
3718:..\src/command_processing.c **** 
3719:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3720:..\src/command_processing.c **** 
3721:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25104              		.loc 1 3721 0
 25105 0032 3B1D     		adds	r3, r7, #4
 25106 0034 0321     		movs	r1, #3
 25107 0036 1846     		mov	r0, r3
 25108 0038 FFF7FEFF 		bl	LCRChecksum
 25109 003c 0346     		mov	r3, r0
 25110 003e FB71     		strb	r3, [r7, #7]
3722:..\src/command_processing.c ****     
3723:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25111              		.loc 1 3723 0
 25112 0040 064B     		ldr	r3, .L970
 25113 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25114 0046 013B     		subs	r3, r3, #1
 25115 0048 DAB2     		uxtb	r2, r3
 25116 004a 3B1D     		adds	r3, r7, #4
 25117 004c 0421     		movs	r1, #4
 25118 004e 1846     		mov	r0, r3
 25119 0050 FFF7FEFF 		bl	commWriteID
3724:..\src/command_processing.c **** }
 25120              		.loc 1 3724 0
 25121 0054 00BF     		nop
 25122 0056 0837     		adds	r7, r7, #8
 25123              		.cfi_def_cfa_offset 8
 25124 0058 BD46     		mov	sp, r7
 25125              		.cfi_def_cfa_register 13
 25126              		@ sp needed
 25127 005a 80BD     		pop	{r7, pc}
 25128              	.L971:
 25129              		.align	2
 25130              	.L970:
 25131 005c 00000000 		.word	g_mem
 25132 0060 00000000 		.word	g_measOld
 25133              		.cfi_endproc
 25134              	.LFE103:
 25135              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25136              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25137              		.align	2
 25138              		.global	commReadResCurrFromSH
 25139              		.thumb
 25140              		.thumb_func
 25141              		.type	commReadResCurrFromSH, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 551


 25142              	commReadResCurrFromSH:
 25143              	.LFB104:
3725:..\src/command_processing.c **** 
3726:..\src/command_processing.c **** //==============================================================================
3727:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3728:..\src/command_processing.c **** //==============================================================================
3729:..\src/command_processing.c **** 
3730:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3731:..\src/command_processing.c **** {
 25144              		.loc 1 3731 0
 25145              		.cfi_startproc
 25146              		@ args = 0, pretend = 0, frame = 32
 25147              		@ frame_needed = 1, uses_anonymous_args = 0
 25148 0000 80B5     		push	{r7, lr}
 25149              		.cfi_def_cfa_offset 8
 25150              		.cfi_offset 7, -8
 25151              		.cfi_offset 14, -4
 25152 0002 88B0     		sub	sp, sp, #32
 25153              		.cfi_def_cfa_offset 40
 25154 0004 00AF     		add	r7, sp, #0
 25155              		.cfi_def_cfa_register 7
3732:..\src/command_processing.c ****     uint8 packet_data[16];
3733:..\src/command_processing.c ****     uint8 packet_lenght;
3734:..\src/command_processing.c ****     int16 curr_diff = 0;
 25156              		.loc 1 3734 0
 25157 0006 0023     		movs	r3, #0
 25158 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3735:..\src/command_processing.c ****     uint32 t_start, t_end;
3736:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25159              		.loc 1 3736 0
 25160 000a 0123     		movs	r3, #1
 25161 000c 7B77     		strb	r3, [r7, #29]
3737:..\src/command_processing.c **** 
3738:..\src/command_processing.c ****     packet_lenght = 2;
 25162              		.loc 1 3738 0
 25163 000e 0223     		movs	r3, #2
 25164 0010 3B77     		strb	r3, [r7, #28]
3739:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25165              		.loc 1 3739 0
 25166 0012 8C23     		movs	r3, #140
 25167 0014 3B71     		strb	r3, [r7, #4]
3740:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25168              		.loc 1 3740 0
 25169 0016 8C23     		movs	r3, #140
 25170 0018 7B71     		strb	r3, [r7, #5]
3741:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 25171              		.loc 1 3741 0
 25172 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25173 001c 99B2     		uxth	r1, r3
 25174 001e 1D4B     		ldr	r3, .L979
 25175 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25176 0024 3B1D     		adds	r3, r7, #4
 25177 0026 1846     		mov	r0, r3
 25178 0028 FFF7FEFF 		bl	commWriteID
3742:..\src/command_processing.c **** 
3743:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25179              		.loc 1 3743 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 552


 25180 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25181 0030 0346     		mov	r3, r0
 25182 0032 BB61     		str	r3, [r7, #24]
3744:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25183              		.loc 1 3744 0
 25184 0034 18E0     		b	.L973
 25185              	.L976:
3745:..\src/command_processing.c ****         if (interrupt_flag){
 25186              		.loc 1 3745 0
 25187 0036 184B     		ldr	r3, .L979+4
 25188 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25189 003a 002B     		cmp	r3, #0
 25190 003c 04D0     		beq	.L974
3746:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25191              		.loc 1 3746 0
 25192 003e 164B     		ldr	r3, .L979+4
 25193 0040 0022     		movs	r2, #0
 25194 0042 1A70     		strb	r2, [r3]
3747:..\src/command_processing.c ****             interrupt_manager();
 25195              		.loc 1 3747 0
 25196 0044 FFF7FEFF 		bl	interrupt_manager
 25197              	.L974:
3748:..\src/command_processing.c ****         }
3749:..\src/command_processing.c **** 
3750:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25198              		.loc 1 3750 0
 25199 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25200 004c 0346     		mov	r3, r0
 25201 004e 7B61     		str	r3, [r7, #20]
3751:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25202              		.loc 1 3751 0
 25203 0050 BA69     		ldr	r2, [r7, #24]
 25204 0052 7B69     		ldr	r3, [r7, #20]
 25205 0054 D31A     		subs	r3, r2, r3
 25206 0056 114A     		ldr	r2, .L979+8
 25207 0058 9342     		cmp	r3, r2
 25208 005a 05D9     		bls	.L973
3752:..\src/command_processing.c ****             read_flag = FALSE;
 25209              		.loc 1 3752 0
 25210 005c 0023     		movs	r3, #0
 25211 005e 7B77     		strb	r3, [r7, #29]
3753:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25212              		.loc 1 3753 0
 25213 0060 0F4B     		ldr	r3, .L979+12
 25214 0062 0022     		movs	r2, #0
 25215 0064 1A70     		strb	r2, [r3]
3754:..\src/command_processing.c ****             break;
 25216              		.loc 1 3754 0
 25217 0066 03E0     		b	.L975
 25218              	.L973:
3744:..\src/command_processing.c ****         if (interrupt_flag){
 25219              		.loc 1 3744 0
 25220 0068 0E4B     		ldr	r3, .L979+16
 25221 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25222 006c 8E2B     		cmp	r3, #142
 25223 006e E2D1     		bne	.L976
 25224              	.L975:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 553


3755:..\src/command_processing.c ****         }
3756:..\src/command_processing.c ****     }
3757:..\src/command_processing.c **** 
3758:..\src/command_processing.c ****     if (read_flag) {
 25225              		.loc 1 3758 0
 25226 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25227 0072 002B     		cmp	r3, #0
 25228 0074 08D0     		beq	.L977
3759:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25229              		.loc 1 3759 0
 25230 0076 0B4B     		ldr	r3, .L979+16
 25231 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25232 007a 1B02     		lsls	r3, r3, #8
 25233 007c 1AB2     		sxth	r2, r3
 25234 007e 094B     		ldr	r3, .L979+16
 25235 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25236 0082 1BB2     		sxth	r3, r3
 25237 0084 1343     		orrs	r3, r3, r2
 25238 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25239              	.L977:
3760:..\src/command_processing.c ****     }
3761:..\src/command_processing.c ****     
3762:..\src/command_processing.c ****     return curr_diff;
 25240              		.loc 1 3762 0
 25241 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3763:..\src/command_processing.c **** }
 25242              		.loc 1 3763 0
 25243 008c 1846     		mov	r0, r3
 25244 008e 2037     		adds	r7, r7, #32
 25245              		.cfi_def_cfa_offset 8
 25246 0090 BD46     		mov	sp, r7
 25247              		.cfi_def_cfa_register 13
 25248              		@ sp needed
 25249 0092 80BD     		pop	{r7, pc}
 25250              	.L980:
 25251              		.align	2
 25252              	.L979:
 25253 0094 00000000 		.word	c_mem
 25254 0098 00000000 		.word	interrupt_flag
 25255 009c 20AA4400 		.word	4500000
 25256 00a0 00000000 		.word	master_mode
 25257 00a4 00000000 		.word	g_rx
 25258              		.cfi_endproc
 25259              	.LFE104:
 25260              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25261              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25262              		.align	2
 25263              		.global	cmd_set_baudrate
 25264              		.thumb
 25265              		.thumb_func
 25266              		.type	cmd_set_baudrate, %function
 25267              	cmd_set_baudrate:
 25268              	.LFB105:
3764:..\src/command_processing.c **** 
3765:..\src/command_processing.c **** void cmd_set_baudrate(){
 25269              		.loc 1 3765 0
 25270              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 554


 25271              		@ args = 0, pretend = 0, frame = 0
 25272              		@ frame_needed = 1, uses_anonymous_args = 0
 25273 0000 80B5     		push	{r7, lr}
 25274              		.cfi_def_cfa_offset 8
 25275              		.cfi_offset 7, -8
 25276              		.cfi_offset 14, -4
 25277 0002 00AF     		add	r7, sp, #0
 25278              		.cfi_def_cfa_register 7
3766:..\src/command_processing.c ****     
3767:..\src/command_processing.c ****     // Set BaudRate
3768:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25279              		.loc 1 3768 0
 25280 0004 094B     		ldr	r3, .L986
 25281 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25282 0008 094B     		ldr	r3, .L986+4
 25283 000a 83F8AA20 		strb	r2, [r3, #170]
3769:..\src/command_processing.c ****     
3770:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25284              		.loc 1 3770 0
 25285 000e 074B     		ldr	r3, .L986
 25286 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25287 0012 0D2B     		cmp	r3, #13
 25288 0014 04D1     		bne	.L985
3771:..\src/command_processing.c ****         case 13:
3772:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25289              		.loc 1 3772 0
 25290 0016 0121     		movs	r1, #1
 25291 0018 0C20     		movs	r0, #12
 25292 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3773:..\src/command_processing.c ****             break;
 25293              		.loc 1 3773 0
 25294 001e 03E0     		b	.L984
 25295              	.L985:
3774:..\src/command_processing.c ****         default:
3775:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25296              		.loc 1 3775 0
 25297 0020 0121     		movs	r1, #1
 25298 0022 0220     		movs	r0, #2
 25299 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25300              	.L984:
3776:..\src/command_processing.c ****     }
3777:..\src/command_processing.c **** }
 25301              		.loc 1 3777 0
 25302 0028 00BF     		nop
 25303 002a 80BD     		pop	{r7, pc}
 25304              	.L987:
 25305              		.align	2
 25306              	.L986:
 25307 002c 00000000 		.word	g_rx
 25308 0030 00000000 		.word	c_mem
 25309              		.cfi_endproc
 25310              	.LFE105:
 25311              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25312              		.section	.text.cmd_ping,"ax",%progbits
 25313              		.align	2
 25314              		.global	cmd_ping
 25315              		.thumb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 555


 25316              		.thumb_func
 25317              		.type	cmd_ping, %function
 25318              	cmd_ping:
 25319              	.LFB106:
3778:..\src/command_processing.c **** 
3779:..\src/command_processing.c **** void cmd_ping(){
 25320              		.loc 1 3779 0
 25321              		.cfi_startproc
 25322              		@ args = 0, pretend = 0, frame = 8
 25323              		@ frame_needed = 1, uses_anonymous_args = 0
 25324 0000 80B5     		push	{r7, lr}
 25325              		.cfi_def_cfa_offset 8
 25326              		.cfi_offset 7, -8
 25327              		.cfi_offset 14, -4
 25328 0002 82B0     		sub	sp, sp, #8
 25329              		.cfi_def_cfa_offset 16
 25330 0004 00AF     		add	r7, sp, #0
 25331              		.cfi_def_cfa_register 7
3780:..\src/command_processing.c **** 
3781:..\src/command_processing.c ****     uint8 packet_data[2];
3782:..\src/command_processing.c **** 
3783:..\src/command_processing.c ****     // Header
3784:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25332              		.loc 1 3784 0
 25333 0006 0023     		movs	r3, #0
 25334 0008 3B71     		strb	r3, [r7, #4]
3785:..\src/command_processing.c ****     
3786:..\src/command_processing.c ****     // Load Payload
3787:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25335              		.loc 1 3787 0
 25336 000a 0023     		movs	r3, #0
 25337 000c 7B71     		strb	r3, [r7, #5]
3788:..\src/command_processing.c **** 
3789:..\src/command_processing.c ****     // Send Package to uart
3790:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25338              		.loc 1 3790 0
 25339 000e 3B1D     		adds	r3, r7, #4
 25340 0010 0221     		movs	r1, #2
 25341 0012 1846     		mov	r0, r3
 25342 0014 FFF7FEFF 		bl	commWrite
3791:..\src/command_processing.c **** }
 25343              		.loc 1 3791 0
 25344 0018 00BF     		nop
 25345 001a 0837     		adds	r7, r7, #8
 25346              		.cfi_def_cfa_offset 8
 25347 001c BD46     		mov	sp, r7
 25348              		.cfi_def_cfa_register 13
 25349              		@ sp needed
 25350 001e 80BD     		pop	{r7, pc}
 25351              		.cfi_endproc
 25352              	.LFE106:
 25353              		.size	cmd_ping, .-cmd_ping
 25354              		.section	.text.cmd_get_inputs,"ax",%progbits
 25355              		.align	2
 25356              		.global	cmd_get_inputs
 25357              		.thumb
 25358              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 556


 25359              		.type	cmd_get_inputs, %function
 25360              	cmd_get_inputs:
 25361              	.LFB107:
3792:..\src/command_processing.c **** 
3793:..\src/command_processing.c **** void cmd_get_inputs(){
 25362              		.loc 1 3793 0
 25363              		.cfi_startproc
 25364              		@ args = 0, pretend = 0, frame = 16
 25365              		@ frame_needed = 1, uses_anonymous_args = 0
 25366 0000 80B5     		push	{r7, lr}
 25367              		.cfi_def_cfa_offset 8
 25368              		.cfi_offset 7, -8
 25369              		.cfi_offset 14, -4
 25370 0002 84B0     		sub	sp, sp, #16
 25371              		.cfi_def_cfa_offset 24
 25372 0004 00AF     		add	r7, sp, #0
 25373              		.cfi_def_cfa_register 7
3794:..\src/command_processing.c **** 
3795:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3796:..\src/command_processing.c **** 
3797:..\src/command_processing.c ****     uint8 packet_data[6]; 
3798:..\src/command_processing.c ****     int16 aux_int16;
3799:..\src/command_processing.c ****     
3800:..\src/command_processing.c ****     //Header package
3801:..\src/command_processing.c **** 
3802:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25374              		.loc 1 3802 0
 25375 0006 8323     		movs	r3, #131
 25376 0008 3B72     		strb	r3, [r7, #8]
3803:..\src/command_processing.c ****         
3804:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25377              		.loc 1 3804 0
 25378 000a 234B     		ldr	r3, .L990
 25379 000c 1A68     		ldr	r2, [r3]
 25380 000e 234B     		ldr	r3, .L990+4
 25381 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25382 0014 1846     		mov	r0, r3
 25383 0016 2149     		ldr	r1, .L990+4
 25384 0018 0346     		mov	r3, r0
 25385 001a 5B00     		lsls	r3, r3, #1
 25386 001c 0344     		add	r3, r3, r0
 25387 001e 1B01     		lsls	r3, r3, #4
 25388 0020 0B44     		add	r3, r3, r1
 25389 0022 03F29513 		addw	r3, r3, #405
 25390 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25391 0028 42FA03F3 		asr	r3, r2, r3
 25392 002c 1BB2     		sxth	r3, r3
 25393 002e FB80     		strh	r3, [r7, #6]	@ movhi
3805:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25394              		.loc 1 3805 0
 25395 0030 BB1D     		adds	r3, r7, #6
 25396 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25397 0034 BB72     		strb	r3, [r7, #10]
3806:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25398              		.loc 1 3806 0
 25399 0036 BB1D     		adds	r3, r7, #6
 25400 0038 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 557


 25401 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25402 003c 7B72     		strb	r3, [r7, #9]
3807:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25403              		.loc 1 3807 0
 25404 003e 164B     		ldr	r3, .L990
 25405 0040 1A69     		ldr	r2, [r3, #16]
 25406 0042 164B     		ldr	r3, .L990+4
 25407 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25408 0048 1846     		mov	r0, r3
 25409 004a 1449     		ldr	r1, .L990+4
 25410 004c 0346     		mov	r3, r0
 25411 004e 5B00     		lsls	r3, r3, #1
 25412 0050 0344     		add	r3, r3, r0
 25413 0052 1B01     		lsls	r3, r3, #4
 25414 0054 0B44     		add	r3, r3, r1
 25415 0056 03F29513 		addw	r3, r3, #405
 25416 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25417 005c 42FA03F3 		asr	r3, r2, r3
 25418 0060 1BB2     		sxth	r3, r3
 25419 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3808:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25420              		.loc 1 3808 0
 25421 0064 BB1D     		adds	r3, r7, #6
 25422 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25423 0068 3B73     		strb	r3, [r7, #12]
3809:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25424              		.loc 1 3809 0
 25425 006a BB1D     		adds	r3, r7, #6
 25426 006c 0133     		adds	r3, r3, #1
 25427 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25428 0070 FB72     		strb	r3, [r7, #11]
3810:..\src/command_processing.c ****     
3811:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3812:..\src/command_processing.c **** 
3813:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25429              		.loc 1 3813 0
 25430 0072 07F10803 		add	r3, r7, #8
 25431 0076 0521     		movs	r1, #5
 25432 0078 1846     		mov	r0, r3
 25433 007a FFF7FEFF 		bl	LCRChecksum
 25434 007e 0346     		mov	r3, r0
 25435 0080 7B73     		strb	r3, [r7, #13]
3814:..\src/command_processing.c **** 
3815:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25436              		.loc 1 3815 0
 25437 0082 07F10803 		add	r3, r7, #8
 25438 0086 0621     		movs	r1, #6
 25439 0088 1846     		mov	r0, r3
 25440 008a FFF7FEFF 		bl	commWrite
3816:..\src/command_processing.c **** }
 25441              		.loc 1 3816 0
 25442 008e 00BF     		nop
 25443 0090 1037     		adds	r7, r7, #16
 25444              		.cfi_def_cfa_offset 8
 25445 0092 BD46     		mov	sp, r7
 25446              		.cfi_def_cfa_register 13
 25447              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 558


 25448 0094 80BD     		pop	{r7, pc}
 25449              	.L991:
 25450 0096 00BF     		.align	2
 25451              	.L990:
 25452 0098 00000000 		.word	g_refOld
 25453 009c 00000000 		.word	g_mem
 25454              		.cfi_endproc
 25455              	.LFE107:
 25456              		.size	cmd_get_inputs, .-cmd_get_inputs
 25457              		.section	.text.cmd_store_params,"ax",%progbits
 25458              		.align	2
 25459              		.global	cmd_store_params
 25460              		.thumb
 25461              		.thumb_func
 25462              		.type	cmd_store_params, %function
 25463              	cmd_store_params:
 25464              	.LFB108:
3817:..\src/command_processing.c **** 
3818:..\src/command_processing.c **** void cmd_store_params(){
 25465              		.loc 1 3818 0
 25466              		.cfi_startproc
 25467              		@ args = 0, pretend = 0, frame = 16
 25468              		@ frame_needed = 1, uses_anonymous_args = 0
 25469 0000 80B5     		push	{r7, lr}
 25470              		.cfi_def_cfa_offset 8
 25471              		.cfi_offset 7, -8
 25472              		.cfi_offset 14, -4
 25473 0002 84B0     		sub	sp, sp, #16
 25474              		.cfi_def_cfa_offset 24
 25475 0004 00AF     		add	r7, sp, #0
 25476              		.cfi_def_cfa_register 7
3819:..\src/command_processing.c ****     
3820:..\src/command_processing.c ****     // Check input mode enabled
3821:..\src/command_processing.c ****     uint32 off_1;
3822:..\src/command_processing.c ****     float mult_1;
3823:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25477              		.loc 1 3823 0
 25478 0006 0223     		movs	r3, #2
 25479 0008 FB73     		strb	r3, [r7, #15]
3824:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3825:..\src/command_processing.c ****     uint8 CYDATA old_id;
3826:..\src/command_processing.c ****     
3827:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25480              		.loc 1 3827 0
 25481 000a 674B     		ldr	r3, .L1003
 25482 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25483 0010 002B     		cmp	r3, #0
 25484 0012 7CD1     		bne	.L993
3828:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25485              		.loc 1 3828 0
 25486 0014 644B     		ldr	r3, .L1003
 25487 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25488 001a 1946     		mov	r1, r3
 25489 001c 624A     		ldr	r2, .L1003
 25490 001e 0B46     		mov	r3, r1
 25491 0020 5B00     		lsls	r3, r3, #1
 25492 0022 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 559


 25493 0024 1B01     		lsls	r3, r3, #4
 25494 0026 1344     		add	r3, r3, r2
 25495 0028 03F5CC73 		add	r3, r3, #408
 25496 002c 1B68     		ldr	r3, [r3]
 25497 002e BB60     		str	r3, [r7, #8]
3829:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25498              		.loc 1 3829 0
 25499 0030 5D4B     		ldr	r3, .L1003
 25500 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25501 0036 1946     		mov	r1, r3
 25502 0038 5B4A     		ldr	r2, .L1003
 25503 003a 0B46     		mov	r3, r1
 25504 003c 5B00     		lsls	r3, r3, #1
 25505 003e 0B44     		add	r3, r3, r1
 25506 0040 1B01     		lsls	r3, r3, #4
 25507 0042 1344     		add	r3, r3, r2
 25508 0044 03F5D273 		add	r3, r3, #420
 25509 0048 1B68     		ldr	r3, [r3]	@ float
 25510 004a 7B60     		str	r3, [r7, #4]	@ float
3830:..\src/command_processing.c **** 
3831:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25511              		.loc 1 3831 0
 25512 004c 574B     		ldr	r3, .L1003+4
 25513 004e 1B68     		ldr	r3, [r3]
 25514 0050 1846     		mov	r0, r3
 25515 0052 FFF7FEFF 		bl	__aeabi_i2f
 25516 0056 0346     		mov	r3, r0
 25517 0058 7968     		ldr	r1, [r7, #4]	@ float
 25518 005a 1846     		mov	r0, r3
 25519 005c FFF7FEFF 		bl	__aeabi_fdiv
 25520 0060 0346     		mov	r3, r0
 25521 0062 1846     		mov	r0, r3
 25522 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25523 0068 0246     		mov	r2, r0
 25524 006a 504B     		ldr	r3, .L1003+4
 25525 006c 1A60     		str	r2, [r3]
3832:..\src/command_processing.c **** 
3833:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25526              		.loc 1 3833 0
 25527 006e 4F4B     		ldr	r3, .L1003+4
 25528 0070 1B68     		ldr	r3, [r3]
 25529 0072 1846     		mov	r0, r3
 25530 0074 FFF7FEFF 		bl	__aeabi_i2f
 25531 0078 4B4B     		ldr	r3, .L1003
 25532 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25533 007e 1946     		mov	r1, r3
 25534 0080 4B4A     		ldr	r2, .L1003+8
 25535 0082 0B46     		mov	r3, r1
 25536 0084 5B00     		lsls	r3, r3, #1
 25537 0086 0B44     		add	r3, r3, r1
 25538 0088 1B01     		lsls	r3, r3, #4
 25539 008a 1344     		add	r3, r3, r2
 25540 008c 03F5D273 		add	r3, r3, #420
 25541 0090 1B68     		ldr	r3, [r3]	@ float
 25542 0092 1946     		mov	r1, r3
 25543 0094 FFF7FEFF 		bl	__aeabi_fmul
 25544 0098 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 560


 25545 009a 1846     		mov	r0, r3
 25546 009c FFF7FEFF 		bl	__aeabi_f2iz
 25547 00a0 0246     		mov	r2, r0
 25548 00a2 424B     		ldr	r3, .L1003+4
 25549 00a4 1A60     		str	r2, [r3]
3834:..\src/command_processing.c **** 
3835:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25550              		.loc 1 3835 0
 25551 00a6 414B     		ldr	r3, .L1003+4
 25552 00a8 1B68     		ldr	r3, [r3]
 25553 00aa 1846     		mov	r0, r3
 25554 00ac 3E4B     		ldr	r3, .L1003
 25555 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25556 00b2 1946     		mov	r1, r3
 25557 00b4 3E4A     		ldr	r2, .L1003+8
 25558 00b6 0B46     		mov	r3, r1
 25559 00b8 5B00     		lsls	r3, r3, #1
 25560 00ba 0B44     		add	r3, r3, r1
 25561 00bc 1B01     		lsls	r3, r3, #4
 25562 00be 1344     		add	r3, r3, r2
 25563 00c0 03F5CC73 		add	r3, r3, #408
 25564 00c4 1B68     		ldr	r3, [r3]
 25565 00c6 1A46     		mov	r2, r3
 25566 00c8 BB68     		ldr	r3, [r7, #8]
 25567 00ca D31A     		subs	r3, r2, r3
 25568 00cc 0344     		add	r3, r3, r0
 25569 00ce 1A46     		mov	r2, r3
 25570 00d0 364B     		ldr	r3, .L1003+4
 25571 00d2 1A60     		str	r2, [r3]
3836:..\src/command_processing.c ****         
3837:..\src/command_processing.c ****         // Check position Limits
3838:..\src/command_processing.c **** 
3839:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25572              		.loc 1 3839 0
 25573 00d4 344B     		ldr	r3, .L1003
 25574 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25575 00da 002B     		cmp	r3, #0
 25576 00dc 17D0     		beq	.L993
3840:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25577              		.loc 1 3840 0
 25578 00de 334B     		ldr	r3, .L1003+4
 25579 00e0 1A68     		ldr	r2, [r3]
 25580 00e2 314B     		ldr	r3, .L1003
 25581 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25582 00e8 9A42     		cmp	r2, r3
 25583 00ea 04DA     		bge	.L994
3841:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25584              		.loc 1 3841 0
 25585 00ec 2E4B     		ldr	r3, .L1003
 25586 00ee D3F8E430 		ldr	r3, [r3, #228]
 25587 00f2 2E4A     		ldr	r2, .L1003+4
 25588 00f4 1360     		str	r3, [r2]
 25589              	.L994:
3842:..\src/command_processing.c **** 
3843:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25590              		.loc 1 3843 0
 25591 00f6 2D4B     		ldr	r3, .L1003+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 561


 25592 00f8 1A68     		ldr	r2, [r3]
 25593 00fa 2B4B     		ldr	r3, .L1003
 25594 00fc D3F8E830 		ldr	r3, [r3, #232]
 25595 0100 9A42     		cmp	r2, r3
 25596 0102 04DD     		ble	.L993
3844:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25597              		.loc 1 3844 0
 25598 0104 284B     		ldr	r3, .L1003
 25599 0106 D3F8E830 		ldr	r3, [r3, #232]
 25600 010a 284A     		ldr	r2, .L1003+4
 25601 010c 1360     		str	r3, [r2]
 25602              	.L993:
3845:..\src/command_processing.c ****         }
3846:..\src/command_processing.c ****     }
3847:..\src/command_processing.c ****     
3848:..\src/command_processing.c ****     // If SD is used, create new param and data file
3849:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25603              		.loc 1 3849 0
 25604 010e 264B     		ldr	r3, .L1003
 25605 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25606 0114 012B     		cmp	r3, #1
 25607 0116 06D1     		bne	.L995
3850:..\src/command_processing.c ****         FS_FClose(pFile);
 25608              		.loc 1 3850 0
 25609 0118 264B     		ldr	r3, .L1003+12
 25610 011a 1B68     		ldr	r3, [r3]
 25611 011c 1846     		mov	r0, r3
 25612 011e FFF7FEFF 		bl	FS_FClose
3851:..\src/command_processing.c ****         
3852:..\src/command_processing.c ****         InitSD_FS();
 25613              		.loc 1 3852 0
 25614 0122 FFF7FEFF 		bl	InitSD_FS
 25615              	.L995:
3853:..\src/command_processing.c ****     }
3854:..\src/command_processing.c ****    
3855:..\src/command_processing.c ****     // Store params 
3856:..\src/command_processing.c **** 
3857:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25616              		.loc 1 3857 0
 25617 0126 204B     		ldr	r3, .L1003
 25618 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25619 012c 204B     		ldr	r3, .L1003+8
 25620 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25621 0132 9A42     		cmp	r2, r3
 25622 0134 21D0     		beq	.L996
3858:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25623              		.loc 1 3858 0
 25624 0136 1C4B     		ldr	r3, .L1003
 25625 0138 93F8A030 		ldrb	r3, [r3, #160]
 25626 013c FB70     		strb	r3, [r7, #3]
3859:..\src/command_processing.c ****         if(memStore(0)) {
 25627              		.loc 1 3859 0
 25628 013e 0020     		movs	r0, #0
 25629 0140 FFF7FEFF 		bl	memStore
 25630 0144 0346     		mov	r3, r0
 25631 0146 002B     		cmp	r3, #0
 25632 0148 0BD0     		beq	.L997
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 562


3860:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25633              		.loc 1 3860 0
 25634 014a 0123     		movs	r3, #1
 25635 014c 3B70     		strb	r3, [r7]
3861:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25636              		.loc 1 3861 0
 25637 014e 0123     		movs	r3, #1
 25638 0150 7B70     		strb	r3, [r7, #1]
3862:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25639              		.loc 1 3862 0
 25640 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25641 0154 99B2     		uxth	r1, r3
 25642 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25643 0158 3B46     		mov	r3, r7
 25644 015a 1846     		mov	r0, r3
 25645 015c FFF7FEFF 		bl	commWrite_old_id
 25646 0160 18E0     		b	.L999
 25647              	.L997:
3863:..\src/command_processing.c ****         }    
3864:..\src/command_processing.c ****         else{
3865:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25648              		.loc 1 3865 0
 25649 0162 0023     		movs	r3, #0
 25650 0164 3B70     		strb	r3, [r7]
3866:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25651              		.loc 1 3866 0
 25652 0166 0023     		movs	r3, #0
 25653 0168 7B70     		strb	r3, [r7, #1]
3867:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25654              		.loc 1 3867 0
 25655 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25656 016c 99B2     		uxth	r1, r3
 25657 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25658 0170 3B46     		mov	r3, r7
 25659 0172 1846     		mov	r0, r3
 25660 0174 FFF7FEFF 		bl	commWrite_old_id
 25661 0178 0CE0     		b	.L999
 25662              	.L996:
3868:..\src/command_processing.c ****         }
3869:..\src/command_processing.c ****     }    
3870:..\src/command_processing.c ****     else {
3871:..\src/command_processing.c ****         if(memStore(0))
 25663              		.loc 1 3871 0
 25664 017a 0020     		movs	r0, #0
 25665 017c FFF7FEFF 		bl	memStore
 25666 0180 0346     		mov	r3, r0
 25667 0182 002B     		cmp	r3, #0
 25668 0184 03D0     		beq	.L1000
3872:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25669              		.loc 1 3872 0
 25670 0186 0120     		movs	r0, #1
 25671 0188 FFF7FEFF 		bl	sendAcknowledgment
 25672 018c 02E0     		b	.L999
 25673              	.L1000:
3873:..\src/command_processing.c ****         else
3874:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25674              		.loc 1 3874 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 563


 25675 018e 0020     		movs	r0, #0
 25676 0190 FFF7FEFF 		bl	sendAcknowledgment
 25677              	.L999:
3875:..\src/command_processing.c ****     }
3876:..\src/command_processing.c ****     
3877:..\src/command_processing.c ****     // FW reset (if necessary)
3878:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25678              		.loc 1 3878 0
 25679 0194 084B     		ldr	r3, .L1003+16
 25680 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25681 0198 012B     		cmp	r3, #1
 25682 019a 01D1     		bne	.L1002
3879:..\src/command_processing.c ****         CySoftwareReset();
 25683              		.loc 1 3879 0
 25684 019c FFF7FEFF 		bl	CySoftwareReset
 25685              	.L1002:
3880:..\src/command_processing.c ****     }
3881:..\src/command_processing.c **** }
 25686              		.loc 1 3881 0
 25687 01a0 00BF     		nop
 25688 01a2 1037     		adds	r7, r7, #16
 25689              		.cfi_def_cfa_offset 8
 25690 01a4 BD46     		mov	sp, r7
 25691              		.cfi_def_cfa_register 13
 25692              		@ sp needed
 25693 01a6 80BD     		pop	{r7, pc}
 25694              	.L1004:
 25695              		.align	2
 25696              	.L1003:
 25697 01a8 00000000 		.word	c_mem
 25698 01ac 00000000 		.word	g_refNew
 25699 01b0 00000000 		.word	g_mem
 25700 01b4 00000000 		.word	pFile
 25701 01b8 00000000 		.word	reset_PSoC_flag
 25702              		.cfi_endproc
 25703              	.LFE108:
 25704              		.size	cmd_store_params, .-cmd_store_params
 25705              		.section	.text.cmd_get_emg,"ax",%progbits
 25706              		.align	2
 25707              		.global	cmd_get_emg
 25708              		.thumb
 25709              		.thumb_func
 25710              		.type	cmd_get_emg, %function
 25711              	cmd_get_emg:
 25712              	.LFB109:
3882:..\src/command_processing.c **** 
3883:..\src/command_processing.c **** void cmd_get_emg(){
 25713              		.loc 1 3883 0
 25714              		.cfi_startproc
 25715              		@ args = 0, pretend = 0, frame = 16
 25716              		@ frame_needed = 1, uses_anonymous_args = 0
 25717 0000 80B5     		push	{r7, lr}
 25718              		.cfi_def_cfa_offset 8
 25719              		.cfi_offset 7, -8
 25720              		.cfi_offset 14, -4
 25721 0002 84B0     		sub	sp, sp, #16
 25722              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 564


 25723 0004 00AF     		add	r7, sp, #0
 25724              		.cfi_def_cfa_register 7
3884:..\src/command_processing.c ****     
3885:..\src/command_processing.c ****     uint8 packet_data[6];
3886:..\src/command_processing.c ****     int16 aux_int16;
3887:..\src/command_processing.c ****     
3888:..\src/command_processing.c ****     // Header        
3889:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25725              		.loc 1 3889 0
 25726 0006 8823     		movs	r3, #136
 25727 0008 3B72     		strb	r3, [r7, #8]
3890:..\src/command_processing.c ****     
3891:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25728              		.loc 1 3891 0
 25729 000a 144B     		ldr	r3, .L1006
 25730 000c 1B68     		ldr	r3, [r3]
 25731 000e 1BB2     		sxth	r3, r3
 25732 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3892:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25733              		.loc 1 3892 0
 25734 0012 BB1D     		adds	r3, r7, #6
 25735 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25736 0016 BB72     		strb	r3, [r7, #10]
3893:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25737              		.loc 1 3893 0
 25738 0018 BB1D     		adds	r3, r7, #6
 25739 001a 0133     		adds	r3, r3, #1
 25740 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25741 001e 7B72     		strb	r3, [r7, #9]
3894:..\src/command_processing.c ****     
3895:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25742              		.loc 1 3895 0
 25743 0020 0E4B     		ldr	r3, .L1006
 25744 0022 5B68     		ldr	r3, [r3, #4]
 25745 0024 1BB2     		sxth	r3, r3
 25746 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3896:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25747              		.loc 1 3896 0
 25748 0028 BB1D     		adds	r3, r7, #6
 25749 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25750 002c 3B73     		strb	r3, [r7, #12]
3897:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25751              		.loc 1 3897 0
 25752 002e BB1D     		adds	r3, r7, #6
 25753 0030 0133     		adds	r3, r3, #1
 25754 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25755 0034 FB72     		strb	r3, [r7, #11]
3898:..\src/command_processing.c **** 
3899:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25756              		.loc 1 3899 0
 25757 0036 07F10803 		add	r3, r7, #8
 25758 003a 0521     		movs	r1, #5
 25759 003c 1846     		mov	r0, r3
 25760 003e FFF7FEFF 		bl	LCRChecksum
 25761 0042 0346     		mov	r3, r0
 25762 0044 7B73     		strb	r3, [r7, #13]
3900:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 565


3901:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25763              		.loc 1 3901 0
 25764 0046 07F10803 		add	r3, r7, #8
 25765 004a 0621     		movs	r1, #6
 25766 004c 1846     		mov	r0, r3
 25767 004e FFF7FEFF 		bl	commWrite
3902:..\src/command_processing.c **** 
3903:..\src/command_processing.c **** }
 25768              		.loc 1 3903 0
 25769 0052 00BF     		nop
 25770 0054 1037     		adds	r7, r7, #16
 25771              		.cfi_def_cfa_offset 8
 25772 0056 BD46     		mov	sp, r7
 25773              		.cfi_def_cfa_register 13
 25774              		@ sp needed
 25775 0058 80BD     		pop	{r7, pc}
 25776              	.L1007:
 25777 005a 00BF     		.align	2
 25778              	.L1006:
 25779 005c 00000000 		.word	g_adc_measOld
 25780              		.cfi_endproc
 25781              	.LFE109:
 25782              		.size	cmd_get_emg, .-cmd_get_emg
 25783              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25784              		.align	2
 25785              		.global	cmd_get_imu_readings
 25786              		.thumb
 25787              		.thumb_func
 25788              		.type	cmd_get_imu_readings, %function
 25789              	cmd_get_imu_readings:
 25790              	.LFB110:
3904:..\src/command_processing.c **** 
3905:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25791              		.loc 1 3905 0
 25792              		.cfi_startproc
 25793              		@ args = 0, pretend = 0, frame = 400
 25794              		@ frame_needed = 1, uses_anonymous_args = 0
 25795 0000 90B5     		push	{r4, r7, lr}
 25796              		.cfi_def_cfa_offset 12
 25797              		.cfi_offset 4, -12
 25798              		.cfi_offset 7, -8
 25799              		.cfi_offset 14, -4
 25800 0002 E5B0     		sub	sp, sp, #404
 25801              		.cfi_def_cfa_offset 416
 25802 0004 00AF     		add	r7, sp, #0
 25803              		.cfi_def_cfa_register 7
3906:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3907:..\src/command_processing.c ****     
3908:..\src/command_processing.c ****     uint8 k_imu;
3909:..\src/command_processing.c ****     uint16 c = 1;
 25804              		.loc 1 3909 0
 25805 0006 0123     		movs	r3, #1
 25806 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3910:..\src/command_processing.c ****     uint8 k = 0;
 25807              		.loc 1 3910 0
 25808 000c 0023     		movs	r3, #0
 25809 000e 87F88B31 		strb	r3, [r7, #395]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 566


3911:..\src/command_processing.c ****     uint16 gl_c = 1;
 25810              		.loc 1 3911 0
 25811 0012 0123     		movs	r3, #1
 25812 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3912:..\src/command_processing.c ****     int16 aux_int16;
3913:..\src/command_processing.c ****     float aux_float;
3914:..\src/command_processing.c ****     
3915:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3916:..\src/command_processing.c ****     uint8 packet_data[350];
3917:..\src/command_processing.c ****     uint8 single_packet[32];
3918:..\src/command_processing.c ****     
3919:..\src/command_processing.c ****     //Header package 
3920:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25813              		.loc 1 3920 0
 25814 0018 07F12003 		add	r3, r7, #32
 25815 001c A122     		movs	r2, #161
 25816 001e 1A70     		strb	r2, [r3]
3921:..\src/command_processing.c ****  
3922:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25817              		.loc 1 3922 0
 25818 0020 0023     		movs	r3, #0
 25819 0022 87F88F31 		strb	r3, [r7, #399]
 25820 0026 82E2     		b	.L1009
 25821              	.L1025:
3923:..\src/command_processing.c ****     {	
3924:..\src/command_processing.c ****             
3925:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25822              		.loc 1 3925 0
 25823 0028 3B46     		mov	r3, r7
 25824 002a 3A22     		movs	r2, #58
 25825 002c 1A70     		strb	r2, [r3]
3926:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 25826              		.loc 1 3926 0
 25827 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25828 0032 DB4A     		ldr	r2, .L1026
 25829 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25830 0036 1946     		mov	r1, r3
 25831 0038 DA4A     		ldr	r2, .L1026+4
 25832 003a 0B46     		mov	r3, r1
 25833 003c 9B00     		lsls	r3, r3, #2
 25834 003e 0B44     		add	r3, r3, r1
 25835 0040 1344     		add	r3, r3, r2
 25836 0042 03F20223 		addw	r3, r3, #514
 25837 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25838 0048 002B     		cmp	r3, #0
 25839 004a 5DD0     		beq	.L1010
3927:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 25840              		.loc 1 3927 0
 25841 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25842 0050 D549     		ldr	r1, .L1026+8
 25843 0052 1346     		mov	r3, r2
 25844 0054 9B00     		lsls	r3, r3, #2
 25845 0056 1344     		add	r3, r3, r2
 25846 0058 DB00     		lsls	r3, r3, #3
 25847 005a 0B44     		add	r3, r3, r1
 25848 005c 0233     		adds	r3, r3, #2
 25849 005e B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 567


 25850 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3928:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25851              		.loc 1 3928 0
 25852 0066 B7F88C31 		ldrh	r3, [r7, #396]
 25853 006a 0133     		adds	r3, r3, #1
 25854 006c 07F5C372 		add	r2, r7, #390
 25855 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25856 0072 3A46     		mov	r2, r7
 25857 0074 D154     		strb	r1, [r2, r3]
3929:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25858              		.loc 1 3929 0
 25859 0076 B7F88C21 		ldrh	r2, [r7, #396]
 25860 007a 07F5C373 		add	r3, r7, #390
 25861 007e 0133     		adds	r3, r3, #1
 25862 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25863 0082 3B46     		mov	r3, r7
 25864 0084 9954     		strb	r1, [r3, r2]
3930:..\src/command_processing.c **** 
3931:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 25865              		.loc 1 3931 0
 25866 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25867 008a C749     		ldr	r1, .L1026+8
 25868 008c 1346     		mov	r3, r2
 25869 008e 9B00     		lsls	r3, r3, #2
 25870 0090 1344     		add	r3, r3, r2
 25871 0092 DB00     		lsls	r3, r3, #3
 25872 0094 0B44     		add	r3, r3, r1
 25873 0096 0433     		adds	r3, r3, #4
 25874 0098 B3F90030 		ldrsh	r3, [r3]
 25875 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3932:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25876              		.loc 1 3932 0
 25877 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 25878 00a4 0333     		adds	r3, r3, #3
 25879 00a6 07F5C372 		add	r2, r7, #390
 25880 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25881 00ac 3A46     		mov	r2, r7
 25882 00ae D154     		strb	r1, [r2, r3]
3933:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25883              		.loc 1 3933 0
 25884 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 25885 00b4 9A1C     		adds	r2, r3, #2
 25886 00b6 07F5C373 		add	r3, r7, #390
 25887 00ba 0133     		adds	r3, r3, #1
 25888 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25889 00be 3B46     		mov	r3, r7
 25890 00c0 9954     		strb	r1, [r3, r2]
3934:..\src/command_processing.c **** 
3935:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 25891              		.loc 1 3935 0
 25892 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25893 00c6 B849     		ldr	r1, .L1026+8
 25894 00c8 1346     		mov	r3, r2
 25895 00ca 9B00     		lsls	r3, r3, #2
 25896 00cc 1344     		add	r3, r3, r2
 25897 00ce DB00     		lsls	r3, r3, #3
 25898 00d0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 568


 25899 00d2 0633     		adds	r3, r3, #6
 25900 00d4 B3F90030 		ldrsh	r3, [r3]
 25901 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3936:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25902              		.loc 1 3936 0
 25903 00dc B7F88C31 		ldrh	r3, [r7, #396]
 25904 00e0 0533     		adds	r3, r3, #5
 25905 00e2 07F5C372 		add	r2, r7, #390
 25906 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25907 00e8 3A46     		mov	r2, r7
 25908 00ea D154     		strb	r1, [r2, r3]
3937:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25909              		.loc 1 3937 0
 25910 00ec B7F88C31 		ldrh	r3, [r7, #396]
 25911 00f0 1A1D     		adds	r2, r3, #4
 25912 00f2 07F5C373 		add	r3, r7, #390
 25913 00f6 0133     		adds	r3, r3, #1
 25914 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25915 00fa 3B46     		mov	r3, r7
 25916 00fc 9954     		strb	r1, [r3, r2]
3938:..\src/command_processing.c **** 
3939:..\src/command_processing.c ****             c = c + 6;
 25917              		.loc 1 3939 0
 25918 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25919 0102 0633     		adds	r3, r3, #6
 25920 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25921              	.L1010:
3940:..\src/command_processing.c ****         }
3941:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 25922              		.loc 1 3941 0
 25923 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25924 010c A44A     		ldr	r2, .L1026
 25925 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25926 0110 1946     		mov	r1, r3
 25927 0112 A44A     		ldr	r2, .L1026+4
 25928 0114 0B46     		mov	r3, r1
 25929 0116 9B00     		lsls	r3, r3, #2
 25930 0118 0B44     		add	r3, r3, r1
 25931 011a 1344     		add	r3, r3, r2
 25932 011c 03F20323 		addw	r3, r3, #515
 25933 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25934 0122 002B     		cmp	r3, #0
 25935 0124 5DD0     		beq	.L1011
3942:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 25936              		.loc 1 3942 0
 25937 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25938 012a 9F49     		ldr	r1, .L1026+8
 25939 012c 1346     		mov	r3, r2
 25940 012e 9B00     		lsls	r3, r3, #2
 25941 0130 1344     		add	r3, r3, r2
 25942 0132 DB00     		lsls	r3, r3, #3
 25943 0134 0B44     		add	r3, r3, r1
 25944 0136 0833     		adds	r3, r3, #8
 25945 0138 B3F90030 		ldrsh	r3, [r3]
 25946 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3943:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25947              		.loc 1 3943 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 569


 25948 0140 B7F88C31 		ldrh	r3, [r7, #396]
 25949 0144 0133     		adds	r3, r3, #1
 25950 0146 07F5C372 		add	r2, r7, #390
 25951 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25952 014c 3A46     		mov	r2, r7
 25953 014e D154     		strb	r1, [r2, r3]
3944:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25954              		.loc 1 3944 0
 25955 0150 B7F88C21 		ldrh	r2, [r7, #396]
 25956 0154 07F5C373 		add	r3, r7, #390
 25957 0158 0133     		adds	r3, r3, #1
 25958 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25959 015c 3B46     		mov	r3, r7
 25960 015e 9954     		strb	r1, [r3, r2]
3945:..\src/command_processing.c **** 
3946:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 25961              		.loc 1 3946 0
 25962 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25963 0164 9049     		ldr	r1, .L1026+8
 25964 0166 1346     		mov	r3, r2
 25965 0168 9B00     		lsls	r3, r3, #2
 25966 016a 1344     		add	r3, r3, r2
 25967 016c DB00     		lsls	r3, r3, #3
 25968 016e 0B44     		add	r3, r3, r1
 25969 0170 0A33     		adds	r3, r3, #10
 25970 0172 B3F90030 		ldrsh	r3, [r3]
 25971 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3947:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25972              		.loc 1 3947 0
 25973 017a B7F88C31 		ldrh	r3, [r7, #396]
 25974 017e 0333     		adds	r3, r3, #3
 25975 0180 07F5C372 		add	r2, r7, #390
 25976 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25977 0186 3A46     		mov	r2, r7
 25978 0188 D154     		strb	r1, [r2, r3]
3948:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25979              		.loc 1 3948 0
 25980 018a B7F88C31 		ldrh	r3, [r7, #396]
 25981 018e 9A1C     		adds	r2, r3, #2
 25982 0190 07F5C373 		add	r3, r7, #390
 25983 0194 0133     		adds	r3, r3, #1
 25984 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25985 0198 3B46     		mov	r3, r7
 25986 019a 9954     		strb	r1, [r3, r2]
3949:..\src/command_processing.c **** 
3950:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 25987              		.loc 1 3950 0
 25988 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25989 01a0 8149     		ldr	r1, .L1026+8
 25990 01a2 1346     		mov	r3, r2
 25991 01a4 9B00     		lsls	r3, r3, #2
 25992 01a6 1344     		add	r3, r3, r2
 25993 01a8 DB00     		lsls	r3, r3, #3
 25994 01aa 0B44     		add	r3, r3, r1
 25995 01ac 0C33     		adds	r3, r3, #12
 25996 01ae B3F90030 		ldrsh	r3, [r3]
 25997 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 570


3951:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25998              		.loc 1 3951 0
 25999 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26000 01ba 0533     		adds	r3, r3, #5
 26001 01bc 07F5C372 		add	r2, r7, #390
 26002 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26003 01c2 3A46     		mov	r2, r7
 26004 01c4 D154     		strb	r1, [r2, r3]
3952:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26005              		.loc 1 3952 0
 26006 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26007 01ca 1A1D     		adds	r2, r3, #4
 26008 01cc 07F5C373 		add	r3, r7, #390
 26009 01d0 0133     		adds	r3, r3, #1
 26010 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26011 01d4 3B46     		mov	r3, r7
 26012 01d6 9954     		strb	r1, [r3, r2]
3953:..\src/command_processing.c **** 
3954:..\src/command_processing.c ****             c = c + 6;
 26013              		.loc 1 3954 0
 26014 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26015 01dc 0633     		adds	r3, r3, #6
 26016 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26017              	.L1011:
3955:..\src/command_processing.c ****         }
3956:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26018              		.loc 1 3956 0
 26019 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26020 01e6 6E4A     		ldr	r2, .L1026
 26021 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26022 01ea 1946     		mov	r1, r3
 26023 01ec 6D4A     		ldr	r2, .L1026+4
 26024 01ee 0B46     		mov	r3, r1
 26025 01f0 9B00     		lsls	r3, r3, #2
 26026 01f2 0B44     		add	r3, r3, r1
 26027 01f4 1344     		add	r3, r3, r2
 26028 01f6 03F50173 		add	r3, r3, #516
 26029 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26030 01fc 002B     		cmp	r3, #0
 26031 01fe 5DD0     		beq	.L1012
3957:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26032              		.loc 1 3957 0
 26033 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26034 0204 6849     		ldr	r1, .L1026+8
 26035 0206 1346     		mov	r3, r2
 26036 0208 9B00     		lsls	r3, r3, #2
 26037 020a 1344     		add	r3, r3, r2
 26038 020c DB00     		lsls	r3, r3, #3
 26039 020e 0B44     		add	r3, r3, r1
 26040 0210 0E33     		adds	r3, r3, #14
 26041 0212 B3F90030 		ldrsh	r3, [r3]
 26042 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3958:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26043              		.loc 1 3958 0
 26044 021a B7F88C31 		ldrh	r3, [r7, #396]
 26045 021e 0133     		adds	r3, r3, #1
 26046 0220 07F5C372 		add	r2, r7, #390
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 571


 26047 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26048 0226 3A46     		mov	r2, r7
 26049 0228 D154     		strb	r1, [r2, r3]
3959:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26050              		.loc 1 3959 0
 26051 022a B7F88C21 		ldrh	r2, [r7, #396]
 26052 022e 07F5C373 		add	r3, r7, #390
 26053 0232 0133     		adds	r3, r3, #1
 26054 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26055 0236 3B46     		mov	r3, r7
 26056 0238 9954     		strb	r1, [r3, r2]
3960:..\src/command_processing.c **** 
3961:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26057              		.loc 1 3961 0
 26058 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26059 023e 5A49     		ldr	r1, .L1026+8
 26060 0240 1346     		mov	r3, r2
 26061 0242 9B00     		lsls	r3, r3, #2
 26062 0244 1344     		add	r3, r3, r2
 26063 0246 DB00     		lsls	r3, r3, #3
 26064 0248 0B44     		add	r3, r3, r1
 26065 024a 1033     		adds	r3, r3, #16
 26066 024c B3F90030 		ldrsh	r3, [r3]
 26067 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3962:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26068              		.loc 1 3962 0
 26069 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26070 0258 0333     		adds	r3, r3, #3
 26071 025a 07F5C372 		add	r2, r7, #390
 26072 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26073 0260 3A46     		mov	r2, r7
 26074 0262 D154     		strb	r1, [r2, r3]
3963:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26075              		.loc 1 3963 0
 26076 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26077 0268 9A1C     		adds	r2, r3, #2
 26078 026a 07F5C373 		add	r3, r7, #390
 26079 026e 0133     		adds	r3, r3, #1
 26080 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26081 0272 3B46     		mov	r3, r7
 26082 0274 9954     		strb	r1, [r3, r2]
3964:..\src/command_processing.c **** 
3965:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26083              		.loc 1 3965 0
 26084 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26085 027a 4B49     		ldr	r1, .L1026+8
 26086 027c 1346     		mov	r3, r2
 26087 027e 9B00     		lsls	r3, r3, #2
 26088 0280 1344     		add	r3, r3, r2
 26089 0282 DB00     		lsls	r3, r3, #3
 26090 0284 0B44     		add	r3, r3, r1
 26091 0286 1233     		adds	r3, r3, #18
 26092 0288 B3F90030 		ldrsh	r3, [r3]
 26093 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3966:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26094              		.loc 1 3966 0
 26095 0290 B7F88C31 		ldrh	r3, [r7, #396]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 572


 26096 0294 0533     		adds	r3, r3, #5
 26097 0296 07F5C372 		add	r2, r7, #390
 26098 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26099 029c 3A46     		mov	r2, r7
 26100 029e D154     		strb	r1, [r2, r3]
3967:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26101              		.loc 1 3967 0
 26102 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26103 02a4 1A1D     		adds	r2, r3, #4
 26104 02a6 07F5C373 		add	r3, r7, #390
 26105 02aa 0133     		adds	r3, r3, #1
 26106 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26107 02ae 3B46     		mov	r3, r7
 26108 02b0 9954     		strb	r1, [r3, r2]
3968:..\src/command_processing.c **** 
3969:..\src/command_processing.c ****             c = c + 6;
 26109              		.loc 1 3969 0
 26110 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26111 02b6 0633     		adds	r3, r3, #6
 26112 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26113              	.L1012:
3970:..\src/command_processing.c ****         }
3971:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26114              		.loc 1 3971 0
 26115 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26116 02c0 374A     		ldr	r2, .L1026
 26117 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26118 02c4 1946     		mov	r1, r3
 26119 02c6 374A     		ldr	r2, .L1026+4
 26120 02c8 0B46     		mov	r3, r1
 26121 02ca 9B00     		lsls	r3, r3, #2
 26122 02cc 0B44     		add	r3, r3, r1
 26123 02ce 1344     		add	r3, r3, r2
 26124 02d0 03F20523 		addw	r3, r3, #517
 26125 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26126 02d6 002B     		cmp	r3, #0
 26127 02d8 00F0AF80 		beq	.L1013
3972:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26128              		.loc 1 3972 0
 26129 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26130 02e0 3149     		ldr	r1, .L1026+8
 26131 02e2 1346     		mov	r3, r2
 26132 02e4 9B00     		lsls	r3, r3, #2
 26133 02e6 1344     		add	r3, r3, r2
 26134 02e8 DB00     		lsls	r3, r3, #3
 26135 02ea 0B44     		add	r3, r3, r1
 26136 02ec 1433     		adds	r3, r3, #20
 26137 02ee 1B68     		ldr	r3, [r3]	@ float
 26138 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3973:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26139              		.loc 1 3973 0
 26140 02f4 0023     		movs	r3, #0
 26141 02f6 87F88B31 		strb	r3, [r7, #395]
 26142 02fa 13E0     		b	.L1014
 26143              	.L1015:
3974:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26144              		.loc 1 3974 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 573


 26145 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26146 0300 1A1D     		adds	r2, r3, #4
 26147 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26148 0306 D31A     		subs	r3, r2, r3
 26149 0308 013B     		subs	r3, r3, #1
 26150 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26151 030e 07F5C071 		add	r1, r7, #384
 26152 0312 0A44     		add	r2, r2, r1
 26153 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26154 0316 3A46     		mov	r2, r7
 26155 0318 D154     		strb	r1, [r2, r3]
3973:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26156              		.loc 1 3973 0 discriminator 3
 26157 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26158 031e 0133     		adds	r3, r3, #1
 26159 0320 87F88B31 		strb	r3, [r7, #395]
 26160              	.L1014:
3973:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26161              		.loc 1 3973 0 is_stmt 0 discriminator 1
 26162 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26163 0328 032B     		cmp	r3, #3
 26164 032a E7D9     		bls	.L1015
3975:..\src/command_processing.c ****             }
3976:..\src/command_processing.c **** 
3977:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26165              		.loc 1 3977 0 is_stmt 1
 26166 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26167 0330 1D49     		ldr	r1, .L1026+8
 26168 0332 1346     		mov	r3, r2
 26169 0334 9B00     		lsls	r3, r3, #2
 26170 0336 1344     		add	r3, r3, r2
 26171 0338 DB00     		lsls	r3, r3, #3
 26172 033a 0B44     		add	r3, r3, r1
 26173 033c 1833     		adds	r3, r3, #24
 26174 033e 1B68     		ldr	r3, [r3]	@ float
 26175 0340 C7F88031 		str	r3, [r7, #384]	@ float
3978:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26176              		.loc 1 3978 0
 26177 0344 0023     		movs	r3, #0
 26178 0346 87F88B31 		strb	r3, [r7, #395]
 26179 034a 14E0     		b	.L1016
 26180              	.L1017:
3979:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26181              		.loc 1 3979 0 discriminator 3
 26182 034c B7F88C31 		ldrh	r3, [r7, #396]
 26183 0350 03F10802 		add	r2, r3, #8
 26184 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26185 0358 D31A     		subs	r3, r2, r3
 26186 035a 013B     		subs	r3, r3, #1
 26187 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26188 0360 07F5C071 		add	r1, r7, #384
 26189 0364 0A44     		add	r2, r2, r1
 26190 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26191 0368 3A46     		mov	r2, r7
 26192 036a D154     		strb	r1, [r2, r3]
3978:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26193              		.loc 1 3978 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 574


 26194 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26195 0370 0133     		adds	r3, r3, #1
 26196 0372 87F88B31 		strb	r3, [r7, #395]
 26197              	.L1016:
3978:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26198              		.loc 1 3978 0 is_stmt 0 discriminator 1
 26199 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26200 037a 032B     		cmp	r3, #3
 26201 037c E6D9     		bls	.L1017
3980:..\src/command_processing.c ****             }
3981:..\src/command_processing.c **** 
3982:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26202              		.loc 1 3982 0 is_stmt 1
 26203 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26204 0382 0949     		ldr	r1, .L1026+8
 26205 0384 1346     		mov	r3, r2
 26206 0386 9B00     		lsls	r3, r3, #2
 26207 0388 1344     		add	r3, r3, r2
 26208 038a DB00     		lsls	r3, r3, #3
 26209 038c 0B44     		add	r3, r3, r1
 26210 038e 1C33     		adds	r3, r3, #28
 26211 0390 1B68     		ldr	r3, [r3]	@ float
 26212 0392 C7F88031 		str	r3, [r7, #384]	@ float
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26213              		.loc 1 3983 0
 26214 0396 0023     		movs	r3, #0
 26215 0398 87F88B31 		strb	r3, [r7, #395]
 26216 039c 1BE0     		b	.L1018
 26217              	.L1027:
 26218 039e 00BF     		.align	2
 26219              	.L1026:
 26220 03a0 00000000 		.word	IMU_connected
 26221 03a4 00000000 		.word	c_mem
 26222 03a8 00000000 		.word	g_imu
 26223              	.L1019:
3984:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26224              		.loc 1 3984 0 discriminator 3
 26225 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26226 03b0 03F10C02 		add	r2, r3, #12
 26227 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26228 03b8 D31A     		subs	r3, r2, r3
 26229 03ba 013B     		subs	r3, r3, #1
 26230 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26231 03c0 07F5C071 		add	r1, r7, #384
 26232 03c4 0A44     		add	r2, r2, r1
 26233 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26234 03c8 3A46     		mov	r2, r7
 26235 03ca D154     		strb	r1, [r2, r3]
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26236              		.loc 1 3983 0 discriminator 3
 26237 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26238 03d0 0133     		adds	r3, r3, #1
 26239 03d2 87F88B31 		strb	r3, [r7, #395]
 26240              	.L1018:
3983:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26241              		.loc 1 3983 0 is_stmt 0 discriminator 1
 26242 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 575


 26243 03da 032B     		cmp	r3, #3
 26244 03dc E6D9     		bls	.L1019
3985:..\src/command_processing.c ****             }
3986:..\src/command_processing.c **** 
3987:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26245              		.loc 1 3987 0 is_stmt 1
 26246 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26247 03e2 6749     		ldr	r1, .L1028
 26248 03e4 1346     		mov	r3, r2
 26249 03e6 9B00     		lsls	r3, r3, #2
 26250 03e8 1344     		add	r3, r3, r2
 26251 03ea DB00     		lsls	r3, r3, #3
 26252 03ec 0B44     		add	r3, r3, r1
 26253 03ee 2033     		adds	r3, r3, #32
 26254 03f0 1B68     		ldr	r3, [r3]	@ float
 26255 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26256              		.loc 1 3988 0
 26257 03f6 0023     		movs	r3, #0
 26258 03f8 87F88B31 		strb	r3, [r7, #395]
 26259 03fc 14E0     		b	.L1020
 26260              	.L1021:
3989:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26261              		.loc 1 3989 0 discriminator 3
 26262 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26263 0402 03F11002 		add	r2, r3, #16
 26264 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26265 040a D31A     		subs	r3, r2, r3
 26266 040c 013B     		subs	r3, r3, #1
 26267 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26268 0412 07F5C071 		add	r1, r7, #384
 26269 0416 0A44     		add	r2, r2, r1
 26270 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26271 041a 3A46     		mov	r2, r7
 26272 041c D154     		strb	r1, [r2, r3]
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26273              		.loc 1 3988 0 discriminator 3
 26274 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26275 0422 0133     		adds	r3, r3, #1
 26276 0424 87F88B31 		strb	r3, [r7, #395]
 26277              	.L1020:
3988:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26278              		.loc 1 3988 0 is_stmt 0 discriminator 1
 26279 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26280 042c 032B     		cmp	r3, #3
 26281 042e E6D9     		bls	.L1021
3990:..\src/command_processing.c ****             }
3991:..\src/command_processing.c ****             c = c + 16;
 26282              		.loc 1 3991 0 is_stmt 1
 26283 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26284 0434 1033     		adds	r3, r3, #16
 26285 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26286              	.L1013:
3992:..\src/command_processing.c ****         }
3993:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26287              		.loc 1 3993 0
 26288 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 576


 26289 043e 514A     		ldr	r2, .L1028+4
 26290 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26291 0442 1946     		mov	r1, r3
 26292 0444 504A     		ldr	r2, .L1028+8
 26293 0446 0B46     		mov	r3, r1
 26294 0448 9B00     		lsls	r3, r3, #2
 26295 044a 0B44     		add	r3, r3, r1
 26296 044c 1344     		add	r3, r3, r2
 26297 044e 03F20623 		addw	r3, r3, #518
 26298 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26299 0454 002B     		cmp	r3, #0
 26300 0456 21D0     		beq	.L1022
3994:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26301              		.loc 1 3994 0
 26302 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26303 045c 4849     		ldr	r1, .L1028
 26304 045e 1346     		mov	r3, r2
 26305 0460 9B00     		lsls	r3, r3, #2
 26306 0462 1344     		add	r3, r3, r2
 26307 0464 DB00     		lsls	r3, r3, #3
 26308 0466 0B44     		add	r3, r3, r1
 26309 0468 2433     		adds	r3, r3, #36
 26310 046a B3F90030 		ldrsh	r3, [r3]
 26311 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3995:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26312              		.loc 1 3995 0
 26313 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26314 0476 0133     		adds	r3, r3, #1
 26315 0478 07F5C372 		add	r2, r7, #390
 26316 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26317 047e 3A46     		mov	r2, r7
 26318 0480 D154     		strb	r1, [r2, r3]
3996:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26319              		.loc 1 3996 0
 26320 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26321 0486 07F5C373 		add	r3, r7, #390
 26322 048a 0133     		adds	r3, r3, #1
 26323 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26324 048e 3B46     		mov	r3, r7
 26325 0490 9954     		strb	r1, [r3, r2]
3997:..\src/command_processing.c ****             c = c + 2;
 26326              		.loc 1 3997 0
 26327 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26328 0496 0233     		adds	r3, r3, #2
 26329 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26330              	.L1022:
3998:..\src/command_processing.c ****         }
3999:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26331              		.loc 1 3999 0
 26332 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26333 04a0 384A     		ldr	r2, .L1028+4
 26334 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26335 04a4 1A46     		mov	r2, r3
 26336 04a6 394B     		ldr	r3, .L1028+12
 26337 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26338 04ac 013B     		subs	r3, r3, #1
 26339 04ae 3A46     		mov	r2, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 577


 26340 04b0 3A21     		movs	r1, #58
 26341 04b2 D154     		strb	r1, [r2, r3]
4000:..\src/command_processing.c ****         c = 1;
 26342              		.loc 1 4000 0
 26343 04b4 0123     		movs	r3, #1
 26344 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
4001:..\src/command_processing.c ****                
4002:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26345              		.loc 1 4002 0
 26346 04ba 0023     		movs	r3, #0
 26347 04bc 87F88B31 		strb	r3, [r7, #395]
 26348 04c0 10E0     		b	.L1023
 26349              	.L1024:
4003:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26350              		.loc 1 4003 0 discriminator 3
 26351 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26352 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26353 04ca 1344     		add	r3, r3, r2
 26354 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26355 04d0 3946     		mov	r1, r7
 26356 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26357 04d4 07F12002 		add	r2, r7, #32
 26358 04d8 D154     		strb	r1, [r2, r3]
4002:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26359              		.loc 1 4002 0 discriminator 3
 26360 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26361 04de 0133     		adds	r3, r3, #1
 26362 04e0 87F88B31 		strb	r3, [r7, #395]
 26363              	.L1023:
4002:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26364              		.loc 1 4002 0 is_stmt 0 discriminator 1
 26365 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26366 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26367 04ec 2549     		ldr	r1, .L1028+4
 26368 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26369 04f0 1946     		mov	r1, r3
 26370 04f2 264B     		ldr	r3, .L1028+12
 26371 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26372 04f8 9A42     		cmp	r2, r3
 26373 04fa E2DB     		blt	.L1024
4004:..\src/command_processing.c ****         }
4005:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26374              		.loc 1 4005 0 is_stmt 1 discriminator 2
 26375 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26376 0500 204A     		ldr	r2, .L1028+4
 26377 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26378 0504 1A46     		mov	r2, r3
 26379 0506 214B     		ldr	r3, .L1028+12
 26380 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26381 050c 9AB2     		uxth	r2, r3
 26382 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26383 0512 1344     		add	r3, r3, r2
 26384 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
4006:..\src/command_processing.c ****         
4007:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26385              		.loc 1 4007 0 discriminator 2
 26386 0518 3B46     		mov	r3, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 578


 26387 051a 2022     		movs	r2, #32
 26388 051c 0021     		movs	r1, #0
 26389 051e 1846     		mov	r0, r3
 26390 0520 FFF7FEFF 		bl	memset
3922:..\src/command_processing.c ****     {	
 26391              		.loc 1 3922 0 discriminator 2
 26392 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26393 0528 0133     		adds	r3, r3, #1
 26394 052a 87F88F31 		strb	r3, [r7, #399]
 26395              	.L1009:
3922:..\src/command_processing.c ****     {	
 26396              		.loc 1 3922 0 is_stmt 0 discriminator 1
 26397 052e 184B     		ldr	r3, .L1028+16
 26398 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26399 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26400 0536 9A42     		cmp	r2, r3
 26401 0538 FFF476AD 		bcc	.L1025
4008:..\src/command_processing.c ****         
4009:..\src/command_processing.c ****     }
4010:..\src/command_processing.c **** 
4011:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4012:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26402              		.loc 1 4012 0 is_stmt 1
 26403 053c 154B     		ldr	r3, .L1028+20
 26404 053e 1B68     		ldr	r3, [r3]
 26405 0540 5C1E     		subs	r4, r3, #1
 26406 0542 144B     		ldr	r3, .L1028+20
 26407 0544 1B68     		ldr	r3, [r3]
 26408 0546 DBB2     		uxtb	r3, r3
 26409 0548 013B     		subs	r3, r3, #1
 26410 054a DAB2     		uxtb	r2, r3
 26411 054c 07F12003 		add	r3, r7, #32
 26412 0550 1146     		mov	r1, r2
 26413 0552 1846     		mov	r0, r3
 26414 0554 FFF7FEFF 		bl	LCRChecksum
 26415 0558 0346     		mov	r3, r0
 26416 055a 1A46     		mov	r2, r3
 26417 055c 07F12003 		add	r3, r7, #32
 26418 0560 1A55     		strb	r2, [r3, r4]
4013:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26419              		.loc 1 4013 0
 26420 0562 0C4B     		ldr	r3, .L1028+20
 26421 0564 1B68     		ldr	r3, [r3]
 26422 0566 9AB2     		uxth	r2, r3
 26423 0568 07F12003 		add	r3, r7, #32
 26424 056c 1146     		mov	r1, r2
 26425 056e 1846     		mov	r0, r3
 26426 0570 FFF7FEFF 		bl	commWrite
4014:..\src/command_processing.c **** }
 26427              		.loc 1 4014 0
 26428 0574 00BF     		nop
 26429 0576 07F5CA77 		add	r7, r7, #404
 26430              		.cfi_def_cfa_offset 12
 26431 057a BD46     		mov	sp, r7
 26432              		.cfi_def_cfa_register 13
 26433              		@ sp needed
 26434 057c 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 579


 26435              	.L1029:
 26436 057e 00BF     		.align	2
 26437              	.L1028:
 26438 0580 00000000 		.word	g_imu
 26439 0584 00000000 		.word	IMU_connected
 26440 0588 00000000 		.word	c_mem
 26441 058c 00000000 		.word	single_imu_size
 26442 0590 00000000 		.word	N_IMU_Connected
 26443 0594 00000000 		.word	imus_data_size
 26444              		.cfi_endproc
 26445              	.LFE110:
 26446              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26447              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26448              		.align	2
 26449              		.global	cmd_get_encoder_map
 26450              		.thumb
 26451              		.thumb_func
 26452              		.type	cmd_get_encoder_map, %function
 26453              	cmd_get_encoder_map:
 26454              	.LFB111:
4015:..\src/command_processing.c **** 
4016:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26455              		.loc 1 4016 0
 26456              		.cfi_startproc
 26457              		@ args = 0, pretend = 0, frame = 16
 26458              		@ frame_needed = 1, uses_anonymous_args = 0
 26459 0000 90B5     		push	{r4, r7, lr}
 26460              		.cfi_def_cfa_offset 12
 26461              		.cfi_offset 4, -12
 26462              		.cfi_offset 7, -8
 26463              		.cfi_offset 14, -4
 26464 0002 85B0     		sub	sp, sp, #20
 26465              		.cfi_def_cfa_offset 32
 26466 0004 00AF     		add	r7, sp, #0
 26467              		.cfi_def_cfa_register 7
4017:..\src/command_processing.c ****     //Retrieve Encoder map
4018:..\src/command_processing.c ****     
4019:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4020:..\src/command_processing.c ****     uint8 CYDATA i, j;
4021:..\src/command_processing.c ****     
4022:..\src/command_processing.c ****     // Header        
4023:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26468              		.loc 1 4023 0
 26469 0006 A323     		movs	r3, #163
 26470 0008 3B70     		strb	r3, [r7]
4024:..\src/command_processing.c ****     
4025:..\src/command_processing.c ****     // Fill payload
4026:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26471              		.loc 1 4026 0
 26472 000a 0223     		movs	r3, #2
 26473 000c 7B70     		strb	r3, [r7, #1]
4027:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26474              		.loc 1 4027 0
 26475 000e 0523     		movs	r3, #5
 26476 0010 BB70     		strb	r3, [r7, #2]
4028:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26477              		.loc 1 4028 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 580


 26478 0012 0023     		movs	r3, #0
 26479 0014 FB73     		strb	r3, [r7, #15]
 26480 0016 23E0     		b	.L1031
 26481              	.L1034:
4029:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26482              		.loc 1 4029 0
 26483 0018 0023     		movs	r3, #0
 26484 001a BB73     		strb	r3, [r7, #14]
 26485 001c 1AE0     		b	.L1032
 26486              	.L1033:
4030:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26487              		.loc 1 4030 0 discriminator 3
 26488 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26489 0020 1346     		mov	r3, r2
 26490 0022 9B00     		lsls	r3, r3, #2
 26491 0024 1344     		add	r3, r3, r2
 26492 0026 DA1C     		adds	r2, r3, #3
 26493 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26494 002a D118     		adds	r1, r2, r3
 26495 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26496 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26497 0030 154C     		ldr	r4, .L1035
 26498 0032 1346     		mov	r3, r2
 26499 0034 5B00     		lsls	r3, r3, #1
 26500 0036 1344     		add	r3, r3, r2
 26501 0038 1B01     		lsls	r3, r3, #4
 26502 003a 2344     		add	r3, r3, r4
 26503 003c 0344     		add	r3, r3, r0
 26504 003e 03F5C873 		add	r3, r3, #400
 26505 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26506 0044 07F11003 		add	r3, r7, #16
 26507 0048 0B44     		add	r3, r3, r1
 26508 004a 03F8102C 		strb	r2, [r3, #-16]
4029:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26509              		.loc 1 4029 0 discriminator 3
 26510 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26511 0050 0133     		adds	r3, r3, #1
 26512 0052 BB73     		strb	r3, [r7, #14]
 26513              	.L1032:
4029:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26514              		.loc 1 4029 0 is_stmt 0 discriminator 1
 26515 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26516 0056 042B     		cmp	r3, #4
 26517 0058 E1D9     		bls	.L1033
4028:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26518              		.loc 1 4028 0 is_stmt 1 discriminator 2
 26519 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26520 005c 0133     		adds	r3, r3, #1
 26521 005e FB73     		strb	r3, [r7, #15]
 26522              	.L1031:
4028:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26523              		.loc 1 4028 0 is_stmt 0 discriminator 1
 26524 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26525 0062 012B     		cmp	r3, #1
 26526 0064 D8D9     		bls	.L1034
4031:..\src/command_processing.c ****         }
4032:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 581


4033:..\src/command_processing.c ****     
4034:..\src/command_processing.c ****     // Calculate checksum
4035:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26527              		.loc 1 4035 0 is_stmt 1
 26528 0066 3B46     		mov	r3, r7
 26529 0068 0D21     		movs	r1, #13
 26530 006a 1846     		mov	r0, r3
 26531 006c FFF7FEFF 		bl	LCRChecksum
 26532 0070 0346     		mov	r3, r0
 26533 0072 7B73     		strb	r3, [r7, #13]
4036:..\src/command_processing.c ****     
4037:..\src/command_processing.c ****     // Send package to UART
4038:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26534              		.loc 1 4038 0
 26535 0074 3B46     		mov	r3, r7
 26536 0076 0E21     		movs	r1, #14
 26537 0078 1846     		mov	r0, r3
 26538 007a FFF7FEFF 		bl	commWrite
4039:..\src/command_processing.c **** }
 26539              		.loc 1 4039 0
 26540 007e 00BF     		nop
 26541 0080 1437     		adds	r7, r7, #20
 26542              		.cfi_def_cfa_offset 12
 26543 0082 BD46     		mov	sp, r7
 26544              		.cfi_def_cfa_register 13
 26545              		@ sp needed
 26546 0084 90BD     		pop	{r4, r7, pc}
 26547              	.L1036:
 26548 0086 00BF     		.align	2
 26549              	.L1035:
 26550 0088 00000000 		.word	c_mem
 26551              		.cfi_endproc
 26552              	.LFE111:
 26553              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26554              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26555              		.align	2
 26556              		.global	cmd_get_encoder_raw
 26557              		.thumb
 26558              		.thumb_func
 26559              		.type	cmd_get_encoder_raw, %function
 26560              	cmd_get_encoder_raw:
 26561              	.LFB112:
4040:..\src/command_processing.c **** 
4041:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26562              		.loc 1 4041 0
 26563              		.cfi_startproc
 26564              		@ args = 0, pretend = 0, frame = 32
 26565              		@ frame_needed = 1, uses_anonymous_args = 0
 26566 0000 90B5     		push	{r4, r7, lr}
 26567              		.cfi_def_cfa_offset 12
 26568              		.cfi_offset 4, -12
 26569              		.cfi_offset 7, -8
 26570              		.cfi_offset 14, -4
 26571 0002 89B0     		sub	sp, sp, #36
 26572              		.cfi_def_cfa_offset 48
 26573 0004 00AF     		add	r7, sp, #0
 26574              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 582


4042:..\src/command_processing.c ****     //Retrieve all Encoders raw values
4043:..\src/command_processing.c ****     
4044:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4045:..\src/command_processing.c ****     uint8 i, j, idx;
4046:..\src/command_processing.c ****     uint16 aux_uint16;
4047:..\src/command_processing.c ****     
4048:..\src/command_processing.c ****     //Header package 
4049:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26575              		.loc 1 4049 0
 26576 0006 A423     		movs	r3, #164
 26577 0008 3B71     		strb	r3, [r7, #4]
4050:..\src/command_processing.c ****  
4051:..\src/command_processing.c ****     // Fill payload
4052:..\src/command_processing.c ****     idx = 0;
 26578              		.loc 1 4052 0
 26579 000a 0023     		movs	r3, #0
 26580 000c 7B77     		strb	r3, [r7, #29]
4053:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26581              		.loc 1 4053 0
 26582 000e 0023     		movs	r3, #0
 26583 0010 FB77     		strb	r3, [r7, #31]
 26584 0012 3FE0     		b	.L1038
 26585              	.L1042:
4054:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26586              		.loc 1 4054 0
 26587 0014 0023     		movs	r3, #0
 26588 0016 BB77     		strb	r3, [r7, #30]
 26589 0018 33E0     		b	.L1039
 26590              	.L1041:
4055:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26591              		.loc 1 4055 0
 26592 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26593 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26594 001e 3048     		ldr	r0, .L1043
 26595 0020 1346     		mov	r3, r2
 26596 0022 5B00     		lsls	r3, r3, #1
 26597 0024 1344     		add	r3, r3, r2
 26598 0026 1B01     		lsls	r3, r3, #4
 26599 0028 0344     		add	r3, r3, r0
 26600 002a 0B44     		add	r3, r3, r1
 26601 002c 03F5C873 		add	r3, r3, #400
 26602 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26603 0032 012B     		cmp	r3, #1
 26604 0034 22D1     		bne	.L1040
4056:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26605              		.loc 1 4056 0
 26606 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26607 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26608 003a 2A48     		ldr	r0, .L1043+4
 26609 003c 1346     		mov	r3, r2
 26610 003e 9B00     		lsls	r3, r3, #2
 26611 0040 1344     		add	r3, r3, r2
 26612 0042 0B44     		add	r3, r3, r1
 26613 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26614 0048 7B80     		strh	r3, [r7, #2]	@ movhi
4057:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26615              		.loc 1 4057 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 583


 26616 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26617 004c 5B00     		lsls	r3, r3, #1
 26618 004e 0233     		adds	r3, r3, #2
 26619 0050 BA1C     		adds	r2, r7, #2
 26620 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26621 0054 07F12001 		add	r1, r7, #32
 26622 0058 0B44     		add	r3, r3, r1
 26623 005a 03F81C2C 		strb	r2, [r3, #-28]
4058:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26624              		.loc 1 4058 0
 26625 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26626 0060 5B00     		lsls	r3, r3, #1
 26627 0062 5A1C     		adds	r2, r3, #1
 26628 0064 BB1C     		adds	r3, r7, #2
 26629 0066 0133     		adds	r3, r3, #1
 26630 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26631 006a 07F12003 		add	r3, r7, #32
 26632 006e 1344     		add	r3, r3, r2
 26633 0070 0A46     		mov	r2, r1
 26634 0072 03F81C2C 		strb	r2, [r3, #-28]
4059:..\src/command_processing.c ****                 idx++;
 26635              		.loc 1 4059 0
 26636 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26637 0078 0133     		adds	r3, r3, #1
 26638 007a 7B77     		strb	r3, [r7, #29]
 26639              	.L1040:
4054:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26640              		.loc 1 4054 0 discriminator 2
 26641 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26642 007e 0133     		adds	r3, r3, #1
 26643 0080 BB77     		strb	r3, [r7, #30]
 26644              	.L1039:
4054:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26645              		.loc 1 4054 0 is_stmt 0 discriminator 1
 26646 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26647 0084 184A     		ldr	r2, .L1043+8
 26648 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26649 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26650 008a 9A42     		cmp	r2, r3
 26651 008c C5D3     		bcc	.L1041
4053:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26652              		.loc 1 4053 0 is_stmt 1 discriminator 2
 26653 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26654 0090 0133     		adds	r3, r3, #1
 26655 0092 FB77     		strb	r3, [r7, #31]
 26656              	.L1038:
4053:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26657              		.loc 1 4053 0 is_stmt 0 discriminator 1
 26658 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26659 0096 012B     		cmp	r3, #1
 26660 0098 BCD9     		bls	.L1042
4060:..\src/command_processing.c ****             }
4061:..\src/command_processing.c ****         }
4062:..\src/command_processing.c ****     }
4063:..\src/command_processing.c **** 
4064:..\src/command_processing.c ****     // Calculate checksum
4065:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 584


 26661              		.loc 1 4065 0 is_stmt 1
 26662 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26663 009c 5B00     		lsls	r3, r3, #1
 26664 009e 5C1C     		adds	r4, r3, #1
 26665 00a0 7B7F     		ldrb	r3, [r7, #29]
 26666 00a2 5B00     		lsls	r3, r3, #1
 26667 00a4 DBB2     		uxtb	r3, r3
 26668 00a6 0133     		adds	r3, r3, #1
 26669 00a8 DAB2     		uxtb	r2, r3
 26670 00aa 3B1D     		adds	r3, r7, #4
 26671 00ac 1146     		mov	r1, r2
 26672 00ae 1846     		mov	r0, r3
 26673 00b0 FFF7FEFF 		bl	LCRChecksum
 26674 00b4 0346     		mov	r3, r0
 26675 00b6 1A46     		mov	r2, r3
 26676 00b8 07F12003 		add	r3, r7, #32
 26677 00bc 2344     		add	r3, r3, r4
 26678 00be 03F81C2C 		strb	r2, [r3, #-28]
4066:..\src/command_processing.c ****     
4067:..\src/command_processing.c ****     // Send package to UART
4068:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26679              		.loc 1 4068 0
 26680 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26681 00c4 0133     		adds	r3, r3, #1
 26682 00c6 9BB2     		uxth	r3, r3
 26683 00c8 5B00     		lsls	r3, r3, #1
 26684 00ca 9AB2     		uxth	r2, r3
 26685 00cc 3B1D     		adds	r3, r7, #4
 26686 00ce 1146     		mov	r1, r2
 26687 00d0 1846     		mov	r0, r3
 26688 00d2 FFF7FEFF 		bl	commWrite
4069:..\src/command_processing.c **** }
 26689              		.loc 1 4069 0
 26690 00d6 00BF     		nop
 26691 00d8 2437     		adds	r7, r7, #36
 26692              		.cfi_def_cfa_offset 12
 26693 00da BD46     		mov	sp, r7
 26694              		.cfi_def_cfa_register 13
 26695              		@ sp needed
 26696 00dc 90BD     		pop	{r4, r7, pc}
 26697              	.L1044:
 26698 00de 00BF     		.align	2
 26699              	.L1043:
 26700 00e0 00000000 		.word	c_mem
 26701 00e4 00000000 		.word	Encoder_Value
 26702 00e8 00000000 		.word	N_Encoder_Line_Connected
 26703              		.cfi_endproc
 26704              	.LFE112:
 26705              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26706              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26707              		.align	2
 26708              		.global	cmd_get_ADC_map
 26709              		.thumb
 26710              		.thumb_func
 26711              		.type	cmd_get_ADC_map, %function
 26712              	cmd_get_ADC_map:
 26713              	.LFB113:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 585


4070:..\src/command_processing.c **** 
4071:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26714              		.loc 1 4071 0
 26715              		.cfi_startproc
 26716              		@ args = 0, pretend = 0, frame = 16
 26717              		@ frame_needed = 1, uses_anonymous_args = 0
 26718 0000 80B5     		push	{r7, lr}
 26719              		.cfi_def_cfa_offset 8
 26720              		.cfi_offset 7, -8
 26721              		.cfi_offset 14, -4
 26722 0002 84B0     		sub	sp, sp, #16
 26723              		.cfi_def_cfa_offset 24
 26724 0004 00AF     		add	r7, sp, #0
 26725              		.cfi_def_cfa_register 7
4072:..\src/command_processing.c ****     //Retrieve Encoder map
4073:..\src/command_processing.c ****     
4074:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4075:..\src/command_processing.c ****     uint8 CYDATA i;
4076:..\src/command_processing.c ****     
4077:..\src/command_processing.c ****     // Header        
4078:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26726              		.loc 1 4078 0
 26727 0006 A523     		movs	r3, #165
 26728 0008 3B70     		strb	r3, [r7]
4079:..\src/command_processing.c ****     
4080:..\src/command_processing.c ****     // Fill payload
4081:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26729              		.loc 1 4081 0
 26730 000a 0C23     		movs	r3, #12
 26731 000c 7B70     		strb	r3, [r7, #1]
4082:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26732              		.loc 1 4082 0
 26733 000e 0023     		movs	r3, #0
 26734 0010 FB73     		strb	r3, [r7, #15]
 26735 0012 0EE0     		b	.L1046
 26736              	.L1047:
4083:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26737              		.loc 1 4083 0 discriminator 3
 26738 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26739 0016 0233     		adds	r3, r3, #2
 26740 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26741 001a 0F49     		ldr	r1, .L1048
 26742 001c 0A44     		add	r2, r2, r1
 26743 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 26744 0022 07F11001 		add	r1, r7, #16
 26745 0026 0B44     		add	r3, r3, r1
 26746 0028 03F8102C 		strb	r2, [r3, #-16]
4082:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26747              		.loc 1 4082 0 discriminator 3
 26748 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26749 002e 0133     		adds	r3, r3, #1
 26750 0030 FB73     		strb	r3, [r7, #15]
 26751              	.L1046:
4082:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26752              		.loc 1 4082 0 is_stmt 0 discriminator 1
 26753 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26754 0034 0B2B     		cmp	r3, #11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 586


 26755 0036 EDD9     		bls	.L1047
4084:..\src/command_processing.c ****     }
4085:..\src/command_processing.c ****     
4086:..\src/command_processing.c ****     // Calculate checksum
4087:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26756              		.loc 1 4087 0 is_stmt 1
 26757 0038 3B46     		mov	r3, r7
 26758 003a 0E21     		movs	r1, #14
 26759 003c 1846     		mov	r0, r3
 26760 003e FFF7FEFF 		bl	LCRChecksum
 26761 0042 0346     		mov	r3, r0
 26762 0044 BB73     		strb	r3, [r7, #14]
4088:..\src/command_processing.c ****     
4089:..\src/command_processing.c ****     // Send package to UART
4090:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26763              		.loc 1 4090 0
 26764 0046 3B46     		mov	r3, r7
 26765 0048 0F21     		movs	r1, #15
 26766 004a 1846     		mov	r0, r3
 26767 004c FFF7FEFF 		bl	commWrite
4091:..\src/command_processing.c ****     
4092:..\src/command_processing.c **** }
 26768              		.loc 1 4092 0
 26769 0050 00BF     		nop
 26770 0052 1037     		adds	r7, r7, #16
 26771              		.cfi_def_cfa_offset 8
 26772 0054 BD46     		mov	sp, r7
 26773              		.cfi_def_cfa_register 13
 26774              		@ sp needed
 26775 0056 80BD     		pop	{r7, pc}
 26776              	.L1049:
 26777              		.align	2
 26778              	.L1048:
 26779 0058 00000000 		.word	c_mem
 26780              		.cfi_endproc
 26781              	.LFE113:
 26782              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26783              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26784              		.align	2
 26785              		.global	cmd_get_ADC_raw
 26786              		.thumb
 26787              		.thumb_func
 26788              		.type	cmd_get_ADC_raw, %function
 26789              	cmd_get_ADC_raw:
 26790              	.LFB114:
4093:..\src/command_processing.c **** 
4094:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26791              		.loc 1 4094 0
 26792              		.cfi_startproc
 26793              		@ args = 0, pretend = 0, frame = 32
 26794              		@ frame_needed = 1, uses_anonymous_args = 0
 26795 0000 90B5     		push	{r4, r7, lr}
 26796              		.cfi_def_cfa_offset 12
 26797              		.cfi_offset 4, -12
 26798              		.cfi_offset 7, -8
 26799              		.cfi_offset 14, -4
 26800 0002 89B0     		sub	sp, sp, #36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 587


 26801              		.cfi_def_cfa_offset 48
 26802 0004 00AF     		add	r7, sp, #0
 26803              		.cfi_def_cfa_register 7
4095:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4096:..\src/command_processing.c ****     
4097:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4098:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26804              		.loc 1 4098 0
 26805 0006 0023     		movs	r3, #0
 26806 0008 BB77     		strb	r3, [r7, #30]
4099:..\src/command_processing.c ****     int16 aux_int16;
4100:..\src/command_processing.c ****     
4101:..\src/command_processing.c ****     // Header        
4102:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26807              		.loc 1 4102 0
 26808 000a A623     		movs	r3, #166
 26809 000c 3B71     		strb	r3, [r7, #4]
4103:..\src/command_processing.c ****     
4104:..\src/command_processing.c ****     // Fill payload
4105:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26810              		.loc 1 4105 0
 26811 000e 0023     		movs	r3, #0
 26812 0010 FB77     		strb	r3, [r7, #31]
 26813 0012 27E0     		b	.L1051
 26814              	.L1053:
4106:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26815              		.loc 1 4106 0
 26816 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26817 0016 274A     		ldr	r2, .L1054
 26818 0018 1344     		add	r3, r3, r2
 26819 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26820 001e 012B     		cmp	r3, #1
 26821 0020 1DD1     		bne	.L1052
4107:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26822              		.loc 1 4107 0
 26823 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26824 0024 244A     		ldr	r2, .L1054+4
 26825 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 26826 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4108:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 26827              		.loc 1 4108 0
 26828 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26829 002e 5B00     		lsls	r3, r3, #1
 26830 0030 0233     		adds	r3, r3, #2
 26831 0032 BA1C     		adds	r2, r7, #2
 26832 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26833 0036 07F12001 		add	r1, r7, #32
 26834 003a 0B44     		add	r3, r3, r1
 26835 003c 03F81C2C 		strb	r2, [r3, #-28]
4109:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 26836              		.loc 1 4109 0
 26837 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26838 0042 5B00     		lsls	r3, r3, #1
 26839 0044 5A1C     		adds	r2, r3, #1
 26840 0046 BB1C     		adds	r3, r7, #2
 26841 0048 0133     		adds	r3, r3, #1
 26842 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 588


 26843 004c 07F12003 		add	r3, r7, #32
 26844 0050 1344     		add	r3, r3, r2
 26845 0052 0A46     		mov	r2, r1
 26846 0054 03F81C2C 		strb	r2, [r3, #-28]
4110:..\src/command_processing.c ****             idx++;
 26847              		.loc 1 4110 0
 26848 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26849 005a 0133     		adds	r3, r3, #1
 26850 005c BB77     		strb	r3, [r7, #30]
 26851              	.L1052:
4105:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26852              		.loc 1 4105 0 discriminator 2
 26853 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26854 0060 0133     		adds	r3, r3, #1
 26855 0062 FB77     		strb	r3, [r7, #31]
 26856              	.L1051:
4105:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26857              		.loc 1 4105 0 is_stmt 0 discriminator 1
 26858 0064 154B     		ldr	r3, .L1054+8
 26859 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26860 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26861 006a 9A42     		cmp	r2, r3
 26862 006c D2D3     		bcc	.L1053
4111:..\src/command_processing.c ****         }
4112:..\src/command_processing.c ****     }
4113:..\src/command_processing.c **** 
4114:..\src/command_processing.c ****     // Calculate checksum
4115:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26863              		.loc 1 4115 0 is_stmt 1
 26864 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26865 0070 5B00     		lsls	r3, r3, #1
 26866 0072 5C1C     		adds	r4, r3, #1
 26867 0074 BB7F     		ldrb	r3, [r7, #30]
 26868 0076 5B00     		lsls	r3, r3, #1
 26869 0078 DBB2     		uxtb	r3, r3
 26870 007a 0133     		adds	r3, r3, #1
 26871 007c DAB2     		uxtb	r2, r3
 26872 007e 3B1D     		adds	r3, r7, #4
 26873 0080 1146     		mov	r1, r2
 26874 0082 1846     		mov	r0, r3
 26875 0084 FFF7FEFF 		bl	LCRChecksum
 26876 0088 0346     		mov	r3, r0
 26877 008a 1A46     		mov	r2, r3
 26878 008c 07F12003 		add	r3, r7, #32
 26879 0090 2344     		add	r3, r3, r4
 26880 0092 03F81C2C 		strb	r2, [r3, #-28]
4116:..\src/command_processing.c ****     
4117:..\src/command_processing.c ****     // Send package to UART
4118:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26881              		.loc 1 4118 0
 26882 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26883 0098 0133     		adds	r3, r3, #1
 26884 009a 9BB2     		uxth	r3, r3
 26885 009c 5B00     		lsls	r3, r3, #1
 26886 009e 9AB2     		uxth	r2, r3
 26887 00a0 3B1D     		adds	r3, r7, #4
 26888 00a2 1146     		mov	r1, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 589


 26889 00a4 1846     		mov	r0, r3
 26890 00a6 FFF7FEFF 		bl	commWrite
4119:..\src/command_processing.c **** }
 26891              		.loc 1 4119 0
 26892 00aa 00BF     		nop
 26893 00ac 2437     		adds	r7, r7, #36
 26894              		.cfi_def_cfa_offset 12
 26895 00ae BD46     		mov	sp, r7
 26896              		.cfi_def_cfa_register 13
 26897              		@ sp needed
 26898 00b0 90BD     		pop	{r4, r7, pc}
 26899              	.L1055:
 26900 00b2 00BF     		.align	2
 26901              	.L1054:
 26902 00b4 00000000 		.word	c_mem
 26903 00b8 00000000 		.word	ADC_buf
 26904 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 26905              		.cfi_endproc
 26906              	.LFE114:
 26907              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 26908              		.section	.rodata
 26909 1fcb 00       		.align	2
 26910              	.LC300:
 26911 1fcc 00       		.ascii	"\000"
 26912              		.section	.text.cmd_get_SD_file,"ax",%progbits
 26913              		.align	2
 26914              		.global	cmd_get_SD_file
 26915              		.thumb
 26916              		.thumb_func
 26917              		.type	cmd_get_SD_file, %function
 26918              	cmd_get_SD_file:
 26919              	.LFB115:
4120:..\src/command_processing.c **** 
4121:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 26920              		.loc 1 4121 0
 26921              		.cfi_startproc
 26922              		@ args = 0, pretend = 0, frame = 20064
 26923              		@ frame_needed = 1, uses_anonymous_args = 0
 26924 0000 80B5     		push	{r7, lr}
 26925              		.cfi_def_cfa_offset 8
 26926              		.cfi_offset 7, -8
 26927              		.cfi_offset 14, -4
 26928 0002 ADF59C4D 		sub	sp, sp, #19968
 26929              		.cfi_def_cfa_offset 19976
 26930 0006 98B0     		sub	sp, sp, #96
 26931              		.cfi_def_cfa_offset 20072
 26932 0008 00AF     		add	r7, sp, #0
 26933              		.cfi_def_cfa_register 7
 26934 000a 0246     		mov	r2, r0
 26935 000c 07F16003 		add	r3, r7, #96
 26936 0010 5A3B     		subs	r3, r3, #90
 26937 0012 1A80     		strh	r2, [r3]	@ movhi
4122:..\src/command_processing.c ****     
4123:..\src/command_processing.c ****     uint8 i = 0;
 26938              		.loc 1 4123 0
 26939 0014 0023     		movs	r3, #0
 26940 0016 07F59C42 		add	r2, r7, #19968
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 590


 26941 001a 02F15F02 		add	r2, r2, #95
 26942 001e 1370     		strb	r3, [r2]
4124:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 26943              		.loc 1 4124 0
 26944 0020 0023     		movs	r3, #0
 26945 0022 07F59C42 		add	r2, r7, #19968
 26946 0026 02F12C02 		add	r2, r2, #44
 26947 002a 1360     		str	r3, [r2]
 26948 002c 07F59C43 		add	r3, r7, #19968
 26949 0030 03F13003 		add	r3, r3, #48
 26950 0034 2E22     		movs	r2, #46
 26951 0036 0021     		movs	r1, #0
 26952 0038 1846     		mov	r0, r3
 26953 003a FFF7FEFF 		bl	memset
4125:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 26954              		.loc 1 4125 0
 26955 003e 07F16003 		add	r3, r7, #96
 26956 0042 543B     		subs	r3, r3, #84
 26957 0044 0022     		movs	r2, #0
 26958 0046 1A60     		str	r2, [r3]
 26959 0048 0433     		adds	r3, r3, #4
 26960 004a 44F61C62 		movw	r2, #19996
 26961 004e 0021     		movs	r1, #0
 26962 0050 1846     		mov	r0, r3
 26963 0052 FFF7FEFF 		bl	memset
4126:..\src/command_processing.c ****     strcpy(filename, "");
 26964              		.loc 1 4126 0
 26965 0056 3C4B     		ldr	r3, .L1061
 26966 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26967 005a 07F59C42 		add	r2, r7, #19968
 26968 005e 02F12C02 		add	r2, r2, #44
 26969 0062 1370     		strb	r3, [r2]
4127:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 26970              		.loc 1 4127 0
 26971 0064 384B     		ldr	r3, .L1061
 26972 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26973 0068 07F16003 		add	r3, r7, #96
 26974 006c 543B     		subs	r3, r3, #84
 26975 006e 1A70     		strb	r2, [r3]
4128:..\src/command_processing.c ****     
4129:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 26976              		.loc 1 4129 0
 26977 0070 0023     		movs	r3, #0
 26978 0072 07F59C42 		add	r2, r7, #19968
 26979 0076 02F15F02 		add	r2, r2, #95
 26980 007a 1370     		strb	r3, [r2]
 26981 007c 1DE0     		b	.L1057
 26982              	.L1058:
4130:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26983              		.loc 1 4130 0 discriminator 3
 26984 007e 07F59C43 		add	r3, r7, #19968
 26985 0082 03F15F03 		add	r3, r3, #95
 26986 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26987 0088 07F59C42 		add	r2, r7, #19968
 26988 008c 02F12C02 		add	r2, r2, #44
 26989 0090 1344     		add	r3, r3, r2
 26990 0092 07F59C42 		add	r2, r7, #19968
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 591


 26991 0096 02F15F02 		add	r2, r2, #95
 26992 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26993 009c 0332     		adds	r2, r2, #3
 26994 009e 2B49     		ldr	r1, .L1061+4
 26995 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 26996 00a2 1A70     		strb	r2, [r3]
4129:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26997              		.loc 1 4129 0 discriminator 3
 26998 00a4 07F59C43 		add	r3, r7, #19968
 26999 00a8 03F15F03 		add	r3, r3, #95
 27000 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27001 00ae 0133     		adds	r3, r3, #1
 27002 00b0 07F59C42 		add	r2, r7, #19968
 27003 00b4 02F15F02 		add	r2, r2, #95
 27004 00b8 1370     		strb	r3, [r2]
 27005              	.L1057:
4129:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27006              		.loc 1 4129 0 is_stmt 0 discriminator 1
 27007 00ba 07F59C43 		add	r3, r7, #19968
 27008 00be 03F15F03 		add	r3, r3, #95
 27009 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27010 00c4 9AB2     		uxth	r2, r3
 27011 00c6 07F16003 		add	r3, r7, #96
 27012 00ca 5A3B     		subs	r3, r3, #90
 27013 00cc 1B88     		ldrh	r3, [r3]
 27014 00ce 9342     		cmp	r3, r2
 27015 00d0 D5D8     		bhi	.L1058
4131:..\src/command_processing.c ****     }
4132:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27016              		.loc 1 4132 0 is_stmt 1
 27017 00d2 07F59C43 		add	r3, r7, #19968
 27018 00d6 03F15F03 		add	r3, r3, #95
 27019 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27020 00dc 07F59C42 		add	r2, r7, #19968
 27021 00e0 02F12C02 		add	r2, r2, #44
 27022 00e4 1344     		add	r3, r3, r2
 27023 00e6 0022     		movs	r2, #0
 27024 00e8 1A70     		strb	r2, [r3]
4133:..\src/command_processing.c ****      
4134:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4135:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27025              		.loc 1 4135 0
 27026 00ea 07F59C43 		add	r3, r7, #19968
 27027 00ee 03F12C03 		add	r3, r3, #44
 27028 00f2 1749     		ldr	r1, .L1061+8
 27029 00f4 1846     		mov	r0, r3
 27030 00f6 FFF7FEFF 		bl	strcmp
 27031 00fa 0346     		mov	r3, r0
 27032 00fc 002B     		cmp	r3, #0
 27033 00fe 0CD0     		beq	.L1059
4136:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27034              		.loc 1 4136 0
 27035 0100 07F16003 		add	r3, r7, #96
 27036 0104 543B     		subs	r3, r3, #84
 27037 0106 07F59C40 		add	r0, r7, #19968
 27038 010a 00F12C00 		add	r0, r0, #44
 27039 010e 44F62062 		movw	r2, #20000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 592


 27040 0112 1946     		mov	r1, r3
 27041 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27042 0118 07E0     		b	.L1060
 27043              	.L1059:
4137:..\src/command_processing.c ****     }
4138:..\src/command_processing.c ****     else {
4139:..\src/command_processing.c ****         //It is the currently open working file
4140:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27044              		.loc 1 4140 0
 27045 011a 07F16003 		add	r3, r7, #96
 27046 011e 543B     		subs	r3, r3, #84
 27047 0120 44F62061 		movw	r1, #20000
 27048 0124 1846     		mov	r0, r3
 27049 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27050              	.L1060:
4141:..\src/command_processing.c ****     }
4142:..\src/command_processing.c **** 
4143:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4144:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4145:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27051              		.loc 1 4145 0
 27052 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4146:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27053              		.loc 1 4146 0
 27054 012e 07F16003 		add	r3, r7, #96
 27055 0132 543B     		subs	r3, r3, #84
 27056 0134 1846     		mov	r0, r3
 27057 0136 FFF7FEFF 		bl	UART_RS485_PutString
4147:..\src/command_processing.c **** }
 27058              		.loc 1 4147 0
 27059 013a 00BF     		nop
 27060 013c 07F59C47 		add	r7, r7, #19968
 27061 0140 6037     		adds	r7, r7, #96
 27062              		.cfi_def_cfa_offset 8
 27063 0142 BD46     		mov	sp, r7
 27064              		.cfi_def_cfa_register 13
 27065              		@ sp needed
 27066 0144 80BD     		pop	{r7, pc}
 27067              	.L1062:
 27068 0146 00BF     		.align	2
 27069              	.L1061:
 27070 0148 CC1F0000 		.word	.LC300
 27071 014c 00000000 		.word	g_rx
 27072 0150 00000000 		.word	sdFile
 27073              		.cfi_endproc
 27074              	.LFE115:
 27075              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27076              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 27077              		.align	2
 27078              		.global	cmd_remove_SD_file
 27079              		.thumb
 27080              		.thumb_func
 27081              		.type	cmd_remove_SD_file, %function
 27082              	cmd_remove_SD_file:
 27083              	.LFB116:
4148:..\src/command_processing.c **** 
4149:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 593


 27084              		.loc 1 4149 0
 27085              		.cfi_startproc
 27086              		@ args = 0, pretend = 0, frame = 64
 27087              		@ frame_needed = 1, uses_anonymous_args = 0
 27088 0000 80B5     		push	{r7, lr}
 27089              		.cfi_def_cfa_offset 8
 27090              		.cfi_offset 7, -8
 27091              		.cfi_offset 14, -4
 27092 0002 90B0     		sub	sp, sp, #64
 27093              		.cfi_def_cfa_offset 72
 27094 0004 00AF     		add	r7, sp, #0
 27095              		.cfi_def_cfa_register 7
 27096 0006 0346     		mov	r3, r0
 27097 0008 FB80     		strh	r3, [r7, #6]	@ movhi
4150:..\src/command_processing.c ****     
4151:..\src/command_processing.c ****     uint8 i = 0;
 27098              		.loc 1 4151 0
 27099 000a 0023     		movs	r3, #0
 27100 000c 87F83F30 		strb	r3, [r7, #63]
4152:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27101              		.loc 1 4152 0
 27102 0010 0023     		movs	r3, #0
 27103 0012 FB60     		str	r3, [r7, #12]
 27104 0014 07F11003 		add	r3, r7, #16
 27105 0018 2E22     		movs	r2, #46
 27106 001a 0021     		movs	r1, #0
 27107 001c 1846     		mov	r0, r3
 27108 001e FFF7FEFF 		bl	memset
4153:..\src/command_processing.c ****     strcpy(filename, "");
 27109              		.loc 1 4153 0
 27110 0022 214B     		ldr	r3, .L1066
 27111 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27112 0026 3B73     		strb	r3, [r7, #12]
4154:..\src/command_processing.c ****     
4155:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27113              		.loc 1 4155 0
 27114 0028 0023     		movs	r3, #0
 27115 002a 87F83F30 		strb	r3, [r7, #63]
 27116 002e 0FE0     		b	.L1064
 27117              	.L1065:
4156:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27118              		.loc 1 4156 0 discriminator 3
 27119 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27120 0034 07F10C02 		add	r2, r7, #12
 27121 0038 1344     		add	r3, r3, r2
 27122 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 27123 003e 0332     		adds	r2, r2, #3
 27124 0040 1A49     		ldr	r1, .L1066+4
 27125 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27126 0044 1A70     		strb	r2, [r3]
4155:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27127              		.loc 1 4155 0 discriminator 3
 27128 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27129 004a 0133     		adds	r3, r3, #1
 27130 004c 87F83F30 		strb	r3, [r7, #63]
 27131              	.L1064:
4155:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 594


 27132              		.loc 1 4155 0 is_stmt 0 discriminator 1
 27133 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27134 0054 9BB2     		uxth	r3, r3
 27135 0056 FA88     		ldrh	r2, [r7, #6]
 27136 0058 9A42     		cmp	r2, r3
 27137 005a E9D8     		bhi	.L1065
4157:..\src/command_processing.c ****     }
4158:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27138              		.loc 1 4158 0 is_stmt 1
 27139 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27140 0060 07F10C02 		add	r2, r7, #12
 27141 0064 1344     		add	r3, r3, r2
 27142 0066 0022     		movs	r2, #0
 27143 0068 1A70     		strb	r2, [r3]
4159:..\src/command_processing.c ****      
4160:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4161:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 27144              		.loc 1 4161 0
 27145 006a 07F10C03 		add	r3, r7, #12
 27146 006e 1846     		mov	r0, r3
 27147 0070 FFF7FEFF 		bl	Remove_SD_File
 27148 0074 0346     		mov	r3, r0
 27149 0076 87F83E30 		strb	r3, [r7, #62]
4162:..\src/command_processing.c ****   
4163:..\src/command_processing.c ****     
4164:..\src/command_processing.c ****     uint8 packet_data[3]; 
4165:..\src/command_processing.c ****     
4166:..\src/command_processing.c ****     //Header package
4167:..\src/command_processing.c **** 
4168:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 27150              		.loc 1 4168 0
 27151 007a A823     		movs	r3, #168
 27152 007c 3B72     		strb	r3, [r7, #8]
4169:..\src/command_processing.c ****     packet_data[1] = res;
 27153              		.loc 1 4169 0
 27154 007e 97F83E30 		ldrb	r3, [r7, #62]
 27155 0082 7B72     		strb	r3, [r7, #9]
4170:..\src/command_processing.c **** 
4171:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4172:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
 27156              		.loc 1 4172 0
 27157 0084 07F10803 		add	r3, r7, #8
 27158 0088 0221     		movs	r1, #2
 27159 008a 1846     		mov	r0, r3
 27160 008c FFF7FEFF 		bl	LCRChecksum
 27161 0090 0346     		mov	r3, r0
 27162 0092 BB72     		strb	r3, [r7, #10]
4173:..\src/command_processing.c ****     
4174:..\src/command_processing.c ****     commWrite(packet_data, 3);
 27163              		.loc 1 4174 0
 27164 0094 07F10803 		add	r3, r7, #8
 27165 0098 0321     		movs	r1, #3
 27166 009a 1846     		mov	r0, r3
 27167 009c FFF7FEFF 		bl	commWrite
4175:..\src/command_processing.c **** }
 27168              		.loc 1 4175 0
 27169 00a0 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 595


 27170 00a2 4037     		adds	r7, r7, #64
 27171              		.cfi_def_cfa_offset 8
 27172 00a4 BD46     		mov	sp, r7
 27173              		.cfi_def_cfa_register 13
 27174              		@ sp needed
 27175 00a6 80BD     		pop	{r7, pc}
 27176              	.L1067:
 27177              		.align	2
 27178              	.L1066:
 27179 00a8 CC1F0000 		.word	.LC300
 27180 00ac 00000000 		.word	g_rx
 27181              		.cfi_endproc
 27182              	.LFE116:
 27183              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 27184              		.global	__aeabi_dsub
 27185              		.global	__aeabi_fcmpgt
 27186              		.section	.text.air_chambers_control,"ax",%progbits
 27187              		.align	2
 27188              		.global	air_chambers_control
 27189              		.thumb
 27190              		.thumb_func
 27191              		.type	air_chambers_control, %function
 27192              	air_chambers_control:
 27193              	.LFB117:
4176:..\src/command_processing.c **** 
4177:..\src/command_processing.c **** //==============================================================================
4178:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4179:..\src/command_processing.c **** //==============================================================================
4180:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4181:..\src/command_processing.c **** 
4182:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27194              		.loc 1 4182 0
 27195              		.cfi_startproc
 27196              		@ args = 0, pretend = 0, frame = 32
 27197              		@ frame_needed = 1, uses_anonymous_args = 0
 27198 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 27199              		.cfi_def_cfa_offset 24
 27200              		.cfi_offset 4, -24
 27201              		.cfi_offset 5, -20
 27202              		.cfi_offset 7, -16
 27203              		.cfi_offset 8, -12
 27204              		.cfi_offset 9, -8
 27205              		.cfi_offset 14, -4
 27206 0004 88B0     		sub	sp, sp, #32
 27207              		.cfi_def_cfa_offset 56
 27208 0006 00AF     		add	r7, sp, #0
 27209              		.cfi_def_cfa_register 7
 27210 0008 7860     		str	r0, [r7, #4]
4183:..\src/command_processing.c ****     
4184:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4185:..\src/command_processing.c ****     
4186:..\src/command_processing.c ****     int16 curr_diff;
4187:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4188:..\src/command_processing.c ****     int32 valve_command;
4189:..\src/command_processing.c ****     int16 x_value;
4190:..\src/command_processing.c **** 
4191:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 596


4192:..\src/command_processing.c ****     
4193:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
 27211              		.loc 1 4193 0
 27212 000a FFF7FEFF 		bl	commReadResCurrFromSH
 27213 000e 0346     		mov	r3, r0
 27214 0010 BB82     		strh	r3, [r7, #20]	@ movhi
4194:..\src/command_processing.c ****     
4195:..\src/command_processing.c ****     // Current difference saturation old mapping
4196:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4197:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4198:..\src/command_processing.c **** //    }
4199:..\src/command_processing.c **** //    if(curr_diff < 0) {
4200:..\src/command_processing.c **** //        curr_diff = 0;
4201:..\src/command_processing.c **** //    }
4202:..\src/command_processing.c **** 
4203:..\src/command_processing.c ****     // Compute pressure reference
4204:..\src/command_processing.c **** 
4205:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
 27215              		.loc 1 4205 0
 27216 0012 B7F91430 		ldrsh	r3, [r7, #20]
 27217 0016 1846     		mov	r0, r3
 27218 0018 FFF7FEFF 		bl	__aeabi_i2d
 27219 001c 4FF00002 		mov	r2, #0
 27220 0020 5E4B     		ldr	r3, .L1078
 27221 0022 FFF7FEFF 		bl	__aeabi_dsub
 27222 0026 0346     		mov	r3, r0
 27223 0028 0C46     		mov	r4, r1
 27224 002a 1846     		mov	r0, r3
 27225 002c 2146     		mov	r1, r4
 27226 002e FFF7FEFF 		bl	__aeabi_d2iz
 27227 0032 0346     		mov	r3, r0
 27228 0034 FB82     		strh	r3, [r7, #22]	@ movhi
4206:..\src/command_processing.c ****     if (x_value < 0)
 27229              		.loc 1 4206 0
 27230 0036 B7F91630 		ldrsh	r3, [r7, #22]
 27231 003a 002B     		cmp	r3, #0
 27232 003c 01DA     		bge	.L1069
4207:..\src/command_processing.c ****         x_value = 0;
 27233              		.loc 1 4207 0
 27234 003e 0023     		movs	r3, #0
 27235 0040 FB82     		strh	r3, [r7, #22]	@ movhi
 27236              	.L1069:
4208:..\src/command_processing.c ****     
4209:..\src/command_processing.c ****     // old mapping --- linear mapping
4210:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4211:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
 27237              		.loc 1 4211 0
 27238 0042 B7F91630 		ldrsh	r3, [r7, #22]
 27239 0046 1846     		mov	r0, r3
 27240 0048 FFF7FEFF 		bl	__aeabi_i2d
 27241 004c 4FF00002 		mov	r2, #0
 27242 0050 534B     		ldr	r3, .L1078+4
 27243 0052 FFF7FEFF 		bl	__aeabi_dmul
 27244 0056 0346     		mov	r3, r0
 27245 0058 0C46     		mov	r4, r1
 27246 005a 2546     		mov	r5, r4
 27247 005c 1C46     		mov	r4, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 597


 27248 005e B7F91630 		ldrsh	r3, [r7, #22]
 27249 0062 1846     		mov	r0, r3
 27250 0064 FFF7FEFF 		bl	__aeabi_i2d
 27251 0068 0246     		mov	r2, r0
 27252 006a 0B46     		mov	r3, r1
 27253 006c 2046     		mov	r0, r4
 27254 006e 2946     		mov	r1, r5
 27255 0070 FFF7FEFF 		bl	__aeabi_dmul
 27256 0074 0346     		mov	r3, r0
 27257 0076 0C46     		mov	r4, r1
 27258 0078 2546     		mov	r5, r4
 27259 007a 1C46     		mov	r4, r3
 27260 007c 494B     		ldr	r3, .L1078+8
 27261 007e D3F8D032 		ldr	r3, [r3, #720]
 27262 0082 1846     		mov	r0, r3
 27263 0084 FFF7FEFF 		bl	__aeabi_i2d
 27264 0088 4FF00002 		mov	r2, #0
 27265 008c 464B     		ldr	r3, .L1078+12
 27266 008e FFF7FEFF 		bl	__aeabi_dmul
 27267 0092 0246     		mov	r2, r0
 27268 0094 0B46     		mov	r3, r1
 27269 0096 9046     		mov	r8, r2
 27270 0098 9946     		mov	r9, r3
 27271 009a B7F91630 		ldrsh	r3, [r7, #22]
 27272 009e 1846     		mov	r0, r3
 27273 00a0 FFF7FEFF 		bl	__aeabi_i2d
 27274 00a4 0246     		mov	r2, r0
 27275 00a6 0B46     		mov	r3, r1
 27276 00a8 4046     		mov	r0, r8
 27277 00aa 4946     		mov	r1, r9
 27278 00ac FFF7FEFF 		bl	__aeabi_dmul
 27279 00b0 0246     		mov	r2, r0
 27280 00b2 0B46     		mov	r3, r1
 27281 00b4 2046     		mov	r0, r4
 27282 00b6 2946     		mov	r1, r5
 27283 00b8 FFF7FEFF 		bl	__aeabi_dadd
 27284 00bc 0346     		mov	r3, r0
 27285 00be 0C46     		mov	r4, r1
 27286 00c0 1846     		mov	r0, r3
 27287 00c2 2146     		mov	r1, r4
 27288 00c4 FFF7FEFF 		bl	__aeabi_d2iz
 27289 00c8 0146     		mov	r1, r0
 27290 00ca 364B     		ldr	r3, .L1078+8
 27291 00cc D3F8D032 		ldr	r3, [r3, #720]
 27292 00d0 344A     		ldr	r2, .L1078+8
 27293 00d2 D2F8D022 		ldr	r2, [r2, #720]
 27294 00d6 02FB03F3 		mul	r3, r2, r3
 27295 00da 91FBF3F3 		sdiv	r3, r1, r3
 27296 00de FB61     		str	r3, [r7, #28]
4212:..\src/command_processing.c ****     if (pressure_reference < 0)
 27297              		.loc 1 4212 0
 27298 00e0 FB69     		ldr	r3, [r7, #28]
 27299 00e2 002B     		cmp	r3, #0
 27300 00e4 01DA     		bge	.L1070
4213:..\src/command_processing.c ****         pressure_reference = 0;
 27301              		.loc 1 4213 0
 27302 00e6 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 598


 27303 00e8 FB61     		str	r3, [r7, #28]
 27304              	.L1070:
4214:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
 27305              		.loc 1 4214 0
 27306 00ea F869     		ldr	r0, [r7, #28]
 27307 00ec FFF7FEFF 		bl	__aeabi_i2f
 27308 00f0 0246     		mov	r2, r0
 27309 00f2 2C4B     		ldr	r3, .L1078+8
 27310 00f4 D3F8D432 		ldr	r3, [r3, #724]	@ float
 27311 00f8 1946     		mov	r1, r3
 27312 00fa 1046     		mov	r0, r2
 27313 00fc FFF7FEFF 		bl	__aeabi_fcmpgt
 27314 0100 0346     		mov	r3, r0
 27315 0102 002B     		cmp	r3, #0
 27316 0104 07D0     		beq	.L1071
4215:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
 27317              		.loc 1 4215 0
 27318 0106 274B     		ldr	r3, .L1078+8
 27319 0108 D3F8D432 		ldr	r3, [r3, #724]	@ float
 27320 010c 1846     		mov	r0, r3
 27321 010e FFF7FEFF 		bl	__aeabi_f2iz
 27322 0112 0346     		mov	r3, r0
 27323 0114 FB61     		str	r3, [r7, #28]
 27324              	.L1071:
4216:..\src/command_processing.c ****     
4217:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
 27325              		.loc 1 4217 0
 27326 0116 254B     		ldr	r3, .L1078+16
 27327 0118 1B68     		ldr	r3, [r3]	@ float
 27328 011a 1846     		mov	r0, r3
 27329 011c FFF7FEFF 		bl	__aeabi_f2iz
 27330 0120 0346     		mov	r3, r0
 27331 0122 3B61     		str	r3, [r7, #16]
4218:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
 27332              		.loc 1 4218 0
 27333 0124 FA69     		ldr	r2, [r7, #28]
 27334 0126 3B69     		ldr	r3, [r7, #16]
 27335 0128 D31A     		subs	r3, r2, r3
 27336 012a FB60     		str	r3, [r7, #12]
4219:..\src/command_processing.c **** //    if (err_pressure < 0){
4220:..\src/command_processing.c **** //        err_pressure = 0;
4221:..\src/command_processing.c **** //    }
4222:..\src/command_processing.c ****     
4223:..\src/command_processing.c ****     if (x_value <= 0){
 27337              		.loc 1 4223 0
 27338 012c B7F91630 		ldrsh	r3, [r7, #22]
 27339 0130 002B     		cmp	r3, #0
 27340 0132 02DC     		bgt	.L1073
4224:..\src/command_processing.c ****         //i.e the hand is opening
4225:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
 27341              		.loc 1 4225 0
 27342 0134 0023     		movs	r3, #0
 27343 0136 BB61     		str	r3, [r7, #24]
 27344 0138 01E0     		b	.L1074
 27345              	.L1073:
4226:..\src/command_processing.c ****     }
4227:..\src/command_processing.c ****     else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 599


4228:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4229:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4230:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4231:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
 27346              		.loc 1 4231 0
 27347 013a 0123     		movs	r3, #1
 27348 013c BB61     		str	r3, [r7, #24]
 27349              	.L1074:
4232:..\src/command_processing.c ****     }
4233:..\src/command_processing.c ****     
4234:..\src/command_processing.c ****     // Pump control
4235:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
 27350              		.loc 1 4235 0
 27351 013e 194B     		ldr	r3, .L1078+8
 27352 0140 D3F8D842 		ldr	r4, [r3, #728]	@ float
 27353 0144 F868     		ldr	r0, [r7, #12]
 27354 0146 FFF7FEFF 		bl	__aeabi_i2f
 27355 014a 0346     		mov	r3, r0
 27356 014c 1946     		mov	r1, r3
 27357 014e 2046     		mov	r0, r4
 27358 0150 FFF7FEFF 		bl	__aeabi_fmul
 27359 0154 0346     		mov	r3, r0
 27360 0156 1846     		mov	r0, r3
 27361 0158 FFF7FEFF 		bl	__aeabi_f2iz
 27362 015c 0246     		mov	r2, r0
 27363 015e 144B     		ldr	r3, .L1078+20
 27364 0160 9A60     		str	r2, [r3, #8]
4236:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4237:..\src/command_processing.c ****     
4238:..\src/command_processing.c ****     // Limit output voltage
4239:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
 27365              		.loc 1 4239 0
 27366 0162 134B     		ldr	r3, .L1078+20
 27367 0164 9B68     		ldr	r3, [r3, #8]
 27368 0166 502B     		cmp	r3, #80
 27369 0168 02DD     		ble	.L1075
4240:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
 27370              		.loc 1 4240 0
 27371 016a 114B     		ldr	r3, .L1078+20
 27372 016c 5022     		movs	r2, #80
 27373 016e 9A60     		str	r2, [r3, #8]
 27374              	.L1075:
4241:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
 27375              		.loc 1 4241 0
 27376 0170 0F4B     		ldr	r3, .L1078+20
 27377 0172 9B68     		ldr	r3, [r3, #8]
 27378 0174 132B     		cmp	r3, #19
 27379 0176 02DC     		bgt	.L1076
4242:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
 27380              		.loc 1 4242 0
 27381 0178 0D4B     		ldr	r3, .L1078+20
 27382 017a 0022     		movs	r2, #0
 27383 017c 9A60     		str	r2, [r3, #8]
 27384              	.L1076:
4243:..\src/command_processing.c ****         
4244:..\src/command_processing.c ****     VALVE_Write(valve_command);
 27385              		.loc 1 4244 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 600


 27386 017e BB69     		ldr	r3, [r7, #24]
 27387 0180 DBB2     		uxtb	r3, r3
 27388 0182 1846     		mov	r0, r3
 27389 0184 FFF7FEFF 		bl	VALVE_Write
4245:..\src/command_processing.c ****     
4246:..\src/command_processing.c ****     
4247:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4248:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4249:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4250:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
 27390              		.loc 1 4250 0
 27391 0188 7B68     		ldr	r3, [r7, #4]
 27392 018a DBB2     		uxtb	r3, r3
 27393 018c 1846     		mov	r0, r3
 27394 018e FFF7FEFF 		bl	motor_control_generic
4251:..\src/command_processing.c **** #endif
4252:..\src/command_processing.c **** }
 27395              		.loc 1 4252 0
 27396 0192 00BF     		nop
 27397 0194 2037     		adds	r7, r7, #32
 27398              		.cfi_def_cfa_offset 24
 27399 0196 BD46     		mov	sp, r7
 27400              		.cfi_def_cfa_register 13
 27401              		@ sp needed
 27402 0198 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 27403              	.L1079:
 27404              		.align	2
 27405              	.L1078:
 27406 019c 00004940 		.word	1078525952
 27407 01a0 00003EC0 		.word	-1069678592
 27408 01a4 00000000 		.word	c_mem
 27409 01a8 00804B40 		.word	1078689792
 27410 01ac 00000000 		.word	g_fb_meas
 27411 01b0 00000000 		.word	g_refNew
 27412              		.cfi_endproc
 27413              	.LFE117:
 27414              		.size	air_chambers_control, .-air_chambers_control
 27415              		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27416              		.align	2
 27417              		.global	emg_activation_velocity_fsm
 27418              		.thumb
 27419              		.thumb_func
 27420              		.type	emg_activation_velocity_fsm, %function
 27421              	emg_activation_velocity_fsm:
 27422              	.LFB118:
4253:..\src/command_processing.c **** 
4254:..\src/command_processing.c **** 
4255:..\src/command_processing.c **** //==============================================================================
4256:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4257:..\src/command_processing.c **** //==============================================================================
4258:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4259:..\src/command_processing.c **** 
4260:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27423              		.loc 1 4260 0
 27424              		.cfi_startproc
 27425              		@ args = 0, pretend = 0, frame = 16
 27426              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 601


 27427              		@ link register save eliminated.
 27428 0000 80B4     		push	{r7}
 27429              		.cfi_def_cfa_offset 4
 27430              		.cfi_offset 7, -4
 27431 0002 85B0     		sub	sp, sp, #20
 27432              		.cfi_def_cfa_offset 24
 27433 0004 00AF     		add	r7, sp, #0
 27434              		.cfi_def_cfa_register 7
4261:..\src/command_processing.c ****       
4262:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4263:..\src/command_processing.c ****     static int32 cnt = 0;
4264:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4265:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4266:..\src/command_processing.c ****     
4267:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27435              		.loc 1 4267 0
 27436 0006 534B     		ldr	r3, .L1109
 27437 0008 1B68     		ldr	r3, [r3]
 27438 000a 534A     		ldr	r2, .L1109+4
 27439 000c B2F8F021 		ldrh	r2, [r2, #496]
 27440 0010 9B1A     		subs	r3, r3, r2
 27441 0012 FB60     		str	r3, [r7, #12]
4268:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27442              		.loc 1 4268 0
 27443 0014 4F4B     		ldr	r3, .L1109
 27444 0016 5B68     		ldr	r3, [r3, #4]
 27445 0018 4F4A     		ldr	r2, .L1109+4
 27446 001a B2F8F221 		ldrh	r2, [r2, #498]
 27447 001e 9B1A     		subs	r3, r3, r2
 27448 0020 BB60     		str	r3, [r7, #8]
4269:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27449              		.loc 1 4269 0
 27450 0022 4C4B     		ldr	r3, .L1109
 27451 0024 1B68     		ldr	r3, [r3]
 27452 0026 4C4A     		ldr	r2, .L1109+4
 27453 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27454 002c 9B1A     		subs	r3, r3, r2
 27455 002e 7B60     		str	r3, [r7, #4]
4270:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27456              		.loc 1 4270 0
 27457 0030 484B     		ldr	r3, .L1109
 27458 0032 5B68     		ldr	r3, [r3, #4]
 27459 0034 484A     		ldr	r2, .L1109+4
 27460 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27461 003a 9B1A     		subs	r3, r3, r2
 27462 003c 3B60     		str	r3, [r7]
4271:..\src/command_processing.c ****     
4272:..\src/command_processing.c **** 
4273:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4274:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4275:..\src/command_processing.c ****     switch (fsm_state){
 27463              		.loc 1 4275 0
 27464 003e 474B     		ldr	r3, .L1109+8
 27465 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27466 0042 032B     		cmp	r3, #3
 27467 0044 7FD8     		bhi	.L1081
 27468 0046 01A2     		adr	r2, .L1083
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 602


 27469 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27470              		.p2align 2
 27471              	.L1083:
 27472 004c 5D000000 		.word	.L1082+1
 27473 0050 71000000 		.word	.L1084+1
 27474 0054 11010000 		.word	.L1085+1
 27475 0058 25010000 		.word	.L1086+1
 27476              		.p2align 1
 27477              	.L1082:
4276:..\src/command_processing.c ****         case RELAX_STATE:
4277:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27478              		.loc 1 4277 0
 27479 005c FB68     		ldr	r3, [r7, #12]
 27480 005e 002B     		cmp	r3, #0
 27481 0060 02DC     		bgt	.L1087
 27482              		.loc 1 4277 0 is_stmt 0 discriminator 1
 27483 0062 BB68     		ldr	r3, [r7, #8]
 27484 0064 002B     		cmp	r3, #0
 27485 0066 67DD     		ble	.L1105
 27486              	.L1087:
4278:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27487              		.loc 1 4278 0 is_stmt 1
 27488 0068 3C4B     		ldr	r3, .L1109+8
 27489 006a 0122     		movs	r2, #1
 27490 006c 1A70     		strb	r2, [r3]
4279:..\src/command_processing.c ****             }
4280:..\src/command_processing.c ****             
4281:..\src/command_processing.c ****             break;
 27491              		.loc 1 4281 0
 27492 006e 63E0     		b	.L1105
 27493              	.L1084:
4282:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4283:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27494              		.loc 1 4283 0
 27495 0070 FB68     		ldr	r3, [r7, #12]
 27496 0072 002B     		cmp	r3, #0
 27497 0074 02DC     		bgt	.L1089
 27498              		.loc 1 4283 0 is_stmt 0 discriminator 1
 27499 0076 BB68     		ldr	r3, [r7, #8]
 27500 0078 002B     		cmp	r3, #0
 27501 007a 05DD     		ble	.L1090
 27502              	.L1089:
4284:..\src/command_processing.c ****                 cnt = cnt +1;
 27503              		.loc 1 4284 0 is_stmt 1
 27504 007c 384B     		ldr	r3, .L1109+12
 27505 007e 1B68     		ldr	r3, [r3]
 27506 0080 0133     		adds	r3, r3, #1
 27507 0082 374A     		ldr	r2, .L1109+12
 27508 0084 1360     		str	r3, [r2]
 27509 0086 02E0     		b	.L1091
 27510              	.L1090:
4285:..\src/command_processing.c ****             }
4286:..\src/command_processing.c ****             else {
4287:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27511              		.loc 1 4287 0
 27512 0088 344B     		ldr	r3, .L1109+8
 27513 008a 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 603


 27514 008c 1A70     		strb	r2, [r3]
 27515              	.L1091:
4288:..\src/command_processing.c ****             }
4289:..\src/command_processing.c ****             
4290:..\src/command_processing.c ****             if (cnt > 100){
 27516              		.loc 1 4290 0
 27517 008e 344B     		ldr	r3, .L1109+12
 27518 0090 1B68     		ldr	r3, [r3]
 27519 0092 642B     		cmp	r3, #100
 27520 0094 52DD     		ble	.L1106
4291:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27521              		.loc 1 4291 0
 27522 0096 FB68     		ldr	r3, [r7, #12]
 27523 0098 002B     		cmp	r3, #0
 27524 009a 02DD     		ble	.L1093
 27525              		.loc 1 4291 0 is_stmt 0 discriminator 1
 27526 009c 7B68     		ldr	r3, [r7, #4]
 27527 009e 002B     		cmp	r3, #0
 27528 00a0 05DC     		bgt	.L1094
 27529              	.L1093:
 27530              		.loc 1 4291 0 discriminator 3
 27531 00a2 BB68     		ldr	r3, [r7, #8]
 27532 00a4 002B     		cmp	r3, #0
 27533 00a6 0EDD     		ble	.L1095
 27534              		.loc 1 4291 0 discriminator 4
 27535 00a8 3B68     		ldr	r3, [r7]
 27536 00aa 002B     		cmp	r3, #0
 27537 00ac 0BDD     		ble	.L1095
 27538              	.L1094:
4292:..\src/command_processing.c ****                     // Fast activation
4293:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27539              		.loc 1 4293 0 is_stmt 1
 27540 00ae 2A4B     		ldr	r3, .L1109+4
 27541 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27542 00b4 002B     		cmp	r3, #0
 27543 00b6 03D1     		bne	.L1096
4294:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27544              		.loc 1 4294 0
 27545 00b8 284B     		ldr	r3, .L1109+8
 27546 00ba 0222     		movs	r2, #2
 27547 00bc 1A70     		strb	r2, [r3]
 27548 00be 02E0     		b	.L1095
 27549              	.L1096:
4295:..\src/command_processing.c ****                     }
4296:..\src/command_processing.c ****                     else{
4297:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27550              		.loc 1 4297 0
 27551 00c0 264B     		ldr	r3, .L1109+8
 27552 00c2 0322     		movs	r2, #3
 27553 00c4 1A70     		strb	r2, [r3]
 27554              	.L1095:
4298:..\src/command_processing.c ****                     }
4299:..\src/command_processing.c ****                 }
4300:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27555              		.loc 1 4300 0
 27556 00c6 FB68     		ldr	r3, [r7, #12]
 27557 00c8 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 604


 27558 00ca 02DD     		ble	.L1097
 27559              		.loc 1 4300 0 is_stmt 0 discriminator 1
 27560 00cc 7B68     		ldr	r3, [r7, #4]
 27561 00ce 002B     		cmp	r3, #0
 27562 00d0 05DB     		blt	.L1098
 27563              	.L1097:
 27564              		.loc 1 4300 0 discriminator 3
 27565 00d2 BB68     		ldr	r3, [r7, #8]
 27566 00d4 002B     		cmp	r3, #0
 27567 00d6 0EDD     		ble	.L1099
 27568              		.loc 1 4300 0 discriminator 4
 27569 00d8 3B68     		ldr	r3, [r7]
 27570 00da 002B     		cmp	r3, #0
 27571 00dc 0BDA     		bge	.L1099
 27572              	.L1098:
4301:..\src/command_processing.c ****                     // Slow activation
4302:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27573              		.loc 1 4302 0 is_stmt 1
 27574 00de 1E4B     		ldr	r3, .L1109+4
 27575 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27576 00e4 002B     		cmp	r3, #0
 27577 00e6 03D1     		bne	.L1100
4303:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27578              		.loc 1 4303 0
 27579 00e8 1C4B     		ldr	r3, .L1109+8
 27580 00ea 0322     		movs	r2, #3
 27581 00ec 1A70     		strb	r2, [r3]
 27582 00ee 02E0     		b	.L1099
 27583              	.L1100:
4304:..\src/command_processing.c ****                     }
4305:..\src/command_processing.c ****                     else{
4306:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27584              		.loc 1 4306 0
 27585 00f0 1A4B     		ldr	r3, .L1109+8
 27586 00f2 0222     		movs	r2, #2
 27587 00f4 1A70     		strb	r2, [r3]
 27588              	.L1099:
4307:..\src/command_processing.c ****                     }
4308:..\src/command_processing.c ****                 }
4309:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27589              		.loc 1 4309 0
 27590 00f6 FB68     		ldr	r3, [r7, #12]
 27591 00f8 002B     		cmp	r3, #0
 27592 00fa 05DA     		bge	.L1101
 27593              		.loc 1 4309 0 is_stmt 0 discriminator 1
 27594 00fc BB68     		ldr	r3, [r7, #8]
 27595 00fe 002B     		cmp	r3, #0
 27596 0100 02DA     		bge	.L1101
4310:..\src/command_processing.c ****                     // Involuntary activation
4311:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27597              		.loc 1 4311 0 is_stmt 1
 27598 0102 164B     		ldr	r3, .L1109+8
 27599 0104 0022     		movs	r2, #0
 27600 0106 1A70     		strb	r2, [r3]
 27601              	.L1101:
4312:..\src/command_processing.c ****                 }
4313:..\src/command_processing.c ****                 cnt = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 605


 27602              		.loc 1 4313 0
 27603 0108 154B     		ldr	r3, .L1109+12
 27604 010a 0022     		movs	r2, #0
 27605 010c 1A60     		str	r2, [r3]
4314:..\src/command_processing.c ****             }
4315:..\src/command_processing.c ****     
4316:..\src/command_processing.c ****             break;
 27606              		.loc 1 4316 0
 27607 010e 15E0     		b	.L1106
 27608              	.L1085:
4317:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4318:..\src/command_processing.c ****             
4319:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27609              		.loc 1 4319 0
 27610 0110 FB68     		ldr	r3, [r7, #12]
 27611 0112 002B     		cmp	r3, #0
 27612 0114 14DA     		bge	.L1107
 27613              		.loc 1 4319 0 is_stmt 0 discriminator 1
 27614 0116 BB68     		ldr	r3, [r7, #8]
 27615 0118 002B     		cmp	r3, #0
 27616 011a 11DA     		bge	.L1107
4320:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27617              		.loc 1 4320 0 is_stmt 1
 27618 011c 0F4B     		ldr	r3, .L1109+8
 27619 011e 0022     		movs	r2, #0
 27620 0120 1A70     		strb	r2, [r3]
4321:..\src/command_processing.c ****             }
4322:..\src/command_processing.c ****         
4323:..\src/command_processing.c ****             break;
 27621              		.loc 1 4323 0
 27622 0122 0DE0     		b	.L1107
 27623              	.L1086:
4324:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4325:..\src/command_processing.c ****           
4326:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27624              		.loc 1 4326 0
 27625 0124 FB68     		ldr	r3, [r7, #12]
 27626 0126 002B     		cmp	r3, #0
 27627 0128 0CDA     		bge	.L1108
 27628              		.loc 1 4326 0 is_stmt 0 discriminator 1
 27629 012a BB68     		ldr	r3, [r7, #8]
 27630 012c 002B     		cmp	r3, #0
 27631 012e 09DA     		bge	.L1108
4327:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27632              		.loc 1 4327 0 is_stmt 1
 27633 0130 0A4B     		ldr	r3, .L1109+8
 27634 0132 0022     		movs	r2, #0
 27635 0134 1A70     		strb	r2, [r3]
4328:..\src/command_processing.c ****             }
4329:..\src/command_processing.c ****             
4330:..\src/command_processing.c ****             break;
 27636              		.loc 1 4330 0
 27637 0136 05E0     		b	.L1108
 27638              	.L1105:
4281:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27639              		.loc 1 4281 0
 27640 0138 00BF     		nop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 606


 27641 013a 04E0     		b	.L1081
 27642              	.L1106:
4316:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27643              		.loc 1 4316 0
 27644 013c 00BF     		nop
 27645 013e 02E0     		b	.L1081
 27646              	.L1107:
4323:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 27647              		.loc 1 4323 0
 27648 0140 00BF     		nop
 27649 0142 00E0     		b	.L1081
 27650              	.L1108:
 27651              		.loc 1 4330 0
 27652 0144 00BF     		nop
 27653              	.L1081:
4331:..\src/command_processing.c ****     }
4332:..\src/command_processing.c ****     
4333:..\src/command_processing.c ****     return fsm_state;
 27654              		.loc 1 4333 0
 27655 0146 054B     		ldr	r3, .L1109+8
 27656 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4334:..\src/command_processing.c **** 
4335:..\src/command_processing.c **** }
 27657              		.loc 1 4335 0
 27658 014a 1846     		mov	r0, r3
 27659 014c 1437     		adds	r7, r7, #20
 27660              		.cfi_def_cfa_offset 4
 27661 014e BD46     		mov	sp, r7
 27662              		.cfi_def_cfa_register 13
 27663              		@ sp needed
 27664 0150 80BC     		pop	{r7}
 27665              		.cfi_restore 7
 27666              		.cfi_def_cfa_offset 0
 27667 0152 7047     		bx	lr
 27668              	.L1110:
 27669              		.align	2
 27670              	.L1109:
 27671 0154 00000000 		.word	g_adc_meas
 27672 0158 00000000 		.word	c_mem
 27673 015c 0C000000 		.word	fsm_state.11566
 27674 0160 10000000 		.word	cnt.11567
 27675              		.cfi_endproc
 27676              	.LFE118:
 27677              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27678              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27679              		.align	2
 27680              		.global	otbk_act_wrist_control
 27681              		.thumb
 27682              		.thumb_func
 27683              		.type	otbk_act_wrist_control, %function
 27684              	otbk_act_wrist_control:
 27685              	.LFB119:
4336:..\src/command_processing.c **** 
4337:..\src/command_processing.c **** //==============================================================================
4338:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4339:..\src/command_processing.c **** //==============================================================================
4340:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 607


4341:..\src/command_processing.c **** 
4342:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27686              		.loc 1 4342 0
 27687              		.cfi_startproc
 27688              		@ args = 0, pretend = 0, frame = 8
 27689              		@ frame_needed = 1, uses_anonymous_args = 0
 27690              		@ link register save eliminated.
 27691 0000 80B4     		push	{r7}
 27692              		.cfi_def_cfa_offset 4
 27693              		.cfi_offset 7, -4
 27694 0002 83B0     		sub	sp, sp, #12
 27695              		.cfi_def_cfa_offset 16
 27696 0004 00AF     		add	r7, sp, #0
 27697              		.cfi_def_cfa_register 7
 27698 0006 7860     		str	r0, [r7, #4]
4343:..\src/command_processing.c ****     
4344:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4345:..\src/command_processing.c ****     
4346:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4347:..\src/command_processing.c ****         
4348:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4349:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4350:..\src/command_processing.c ****     switch (fsm_state){
4351:..\src/command_processing.c ****         case RELAX_STATE:
4352:..\src/command_processing.c ****             
4353:..\src/command_processing.c ****             // Wrist stop
4354:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4355:..\src/command_processing.c ****             
4356:..\src/command_processing.c ****             // Softhand stop
4357:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4358:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4359:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4360:..\src/command_processing.c ****             
4361:..\src/command_processing.c ****             break;
4362:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4363:..\src/command_processing.c ****                 
4364:..\src/command_processing.c ****             break;
4365:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4366:..\src/command_processing.c ****             
4367:..\src/command_processing.c ****             // Wrist movement
4368:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4369:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4370:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4371:..\src/command_processing.c ****                 }
4372:..\src/command_processing.c ****                 else {
4373:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4374:..\src/command_processing.c ****                 }
4375:..\src/command_processing.c ****             }
4376:..\src/command_processing.c ****             else {
4377:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4378:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4379:..\src/command_processing.c ****                 }
4380:..\src/command_processing.c ****                 else {
4381:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4382:..\src/command_processing.c ****                 }
4383:..\src/command_processing.c ****             }
4384:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 608


4385:..\src/command_processing.c ****             // Softhand stop
4386:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4387:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4388:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4389:..\src/command_processing.c ****             
4390:..\src/command_processing.c ****             break;
4391:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4392:..\src/command_processing.c ****             
4393:..\src/command_processing.c ****             // Wrist stop
4394:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4395:..\src/command_processing.c ****             
4396:..\src/command_processing.c ****             // SoftHand movement
4397:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4398:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4399:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4400:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4401:..\src/command_processing.c ****             
4402:..\src/command_processing.c ****             break;
4403:..\src/command_processing.c ****     }
4404:..\src/command_processing.c ****         
4405:..\src/command_processing.c ****     // Limit output voltage
4406:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4407:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4408:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4409:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4410:..\src/command_processing.c ****     
4411:..\src/command_processing.c **** #endif
4412:..\src/command_processing.c **** }
 27699              		.loc 1 4412 0
 27700 0008 00BF     		nop
 27701 000a 0C37     		adds	r7, r7, #12
 27702              		.cfi_def_cfa_offset 4
 27703 000c BD46     		mov	sp, r7
 27704              		.cfi_def_cfa_register 13
 27705              		@ sp needed
 27706 000e 80BC     		pop	{r7}
 27707              		.cfi_restore 7
 27708              		.cfi_def_cfa_offset 0
 27709 0010 7047     		bx	lr
 27710              		.cfi_endproc
 27711              	.LFE119:
 27712              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27713 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 27714              		.align	2
 27715              		.global	drive_slave
 27716              		.thumb
 27717              		.thumb_func
 27718              		.type	drive_slave, %function
 27719              	drive_slave:
 27720              	.LFB120:
4413:..\src/command_processing.c **** 
4414:..\src/command_processing.c **** //==============================================================================
4415:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4416:..\src/command_processing.c **** //==============================================================================
4417:..\src/command_processing.c ****  
4418:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27721              		.loc 1 4418 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 609


 27722              		.cfi_startproc
 27723              		@ args = 0, pretend = 0, frame = 24
 27724              		@ frame_needed = 1, uses_anonymous_args = 0
 27725 0000 90B5     		push	{r4, r7, lr}
 27726              		.cfi_def_cfa_offset 12
 27727              		.cfi_offset 4, -12
 27728              		.cfi_offset 7, -8
 27729              		.cfi_offset 14, -4
 27730 0002 87B0     		sub	sp, sp, #28
 27731              		.cfi_def_cfa_offset 40
 27732 0004 00AF     		add	r7, sp, #0
 27733              		.cfi_def_cfa_register 7
 27734 0006 0346     		mov	r3, r0
 27735 0008 0A46     		mov	r2, r1
 27736 000a FB71     		strb	r3, [r7, #7]
 27737 000c 1346     		mov	r3, r2
 27738 000e BB71     		strb	r3, [r7, #6]
4419:..\src/command_processing.c **** 
4420:..\src/command_processing.c **** #ifdef MASTER_FW
4421:..\src/command_processing.c ****     uint8 packet_data[6];
4422:..\src/command_processing.c ****     uint8 packet_lenght;
4423:..\src/command_processing.c ****     int16 aux_int16;
4424:..\src/command_processing.c **** 
4425:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4426:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
 27739              		.loc 1 4426 0
 27740 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 27741 0012 5349     		ldr	r1, .L1117
 27742 0014 1346     		mov	r3, r2
 27743 0016 DB00     		lsls	r3, r3, #3
 27744 0018 9B1A     		subs	r3, r3, r2
 27745 001a 1B01     		lsls	r3, r3, #4
 27746 001c 0B44     		add	r3, r3, r1
 27747 001e 03F58773 		add	r3, r3, #270
 27748 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27749 0024 012B     		cmp	r3, #1
 27750 0026 3FD0     		beq	.L1113
4427:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 27751              		.loc 1 4427 0 discriminator 1
 27752 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 27753 002a 4D49     		ldr	r1, .L1117
 27754 002c 1346     		mov	r3, r2
 27755 002e DB00     		lsls	r3, r3, #3
 27756 0030 9B1A     		subs	r3, r3, r2
 27757 0032 1B01     		lsls	r3, r3, #4
 27758 0034 0B44     		add	r3, r3, r1
 27759 0036 03F58773 		add	r3, r3, #270
 27760 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4426:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 27761              		.loc 1 4426 0 discriminator 1
 27762 003c 022B     		cmp	r3, #2
 27763 003e 33D0     		beq	.L1113
4428:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 27764              		.loc 1 4428 0
 27765 0040 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 27766 0042 4749     		ldr	r1, .L1117
 27767 0044 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 610


 27768 0046 DB00     		lsls	r3, r3, #3
 27769 0048 9B1A     		subs	r3, r3, r2
 27770 004a 1B01     		lsls	r3, r3, #4
 27771 004c 0B44     		add	r3, r3, r1
 27772 004e 03F58773 		add	r3, r3, #270
 27773 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4427:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 27774              		.loc 1 4427 0
 27775 0054 032B     		cmp	r3, #3
 27776 0056 27D0     		beq	.L1113
4429:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
 27777              		.loc 1 4429 0
 27778 0058 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 27779 005a 4149     		ldr	r1, .L1117
 27780 005c 1346     		mov	r3, r2
 27781 005e DB00     		lsls	r3, r3, #3
 27782 0060 9B1A     		subs	r3, r3, r2
 27783 0062 1B01     		lsls	r3, r3, #4
 27784 0064 0B44     		add	r3, r3, r1
 27785 0066 03F58773 		add	r3, r3, #270
 27786 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4428:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
 27787              		.loc 1 4428 0
 27788 006c 042B     		cmp	r3, #4
 27789 006e 1BD0     		beq	.L1113
4430:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
 27790              		.loc 1 4430 0
 27791 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 27792 0072 3B49     		ldr	r1, .L1117
 27793 0074 1346     		mov	r3, r2
 27794 0076 DB00     		lsls	r3, r3, #3
 27795 0078 9B1A     		subs	r3, r3, r2
 27796 007a 1B01     		lsls	r3, r3, #4
 27797 007c 0B44     		add	r3, r3, r1
 27798 007e 03F58773 		add	r3, r3, #270
 27799 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4429:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
 27800              		.loc 1 4429 0
 27801 0084 052B     		cmp	r3, #5
 27802 0086 0FD0     		beq	.L1113
4431:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
 27803              		.loc 1 4431 0
 27804 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 27805 008a 3549     		ldr	r1, .L1117
 27806 008c 1346     		mov	r3, r2
 27807 008e DB00     		lsls	r3, r3, #3
 27808 0090 9B1A     		subs	r3, r3, r2
 27809 0092 1B01     		lsls	r3, r3, #4
 27810 0094 0B44     		add	r3, r3, r1
 27811 0096 03F58773 		add	r3, r3, #270
 27812 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4430:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
 27813              		.loc 1 4430 0
 27814 009c 072B     		cmp	r3, #7
 27815 009e 03D0     		beq	.L1113
4432:..\src/command_processing.c ****         master_mode = 0;
 27816              		.loc 1 4432 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 611


 27817 00a0 304B     		ldr	r3, .L1117+4
 27818 00a2 0022     		movs	r2, #0
 27819 00a4 1A70     		strb	r2, [r3]
4433:..\src/command_processing.c ****         return;
 27820              		.loc 1 4433 0
 27821 00a6 58E0     		b	.L1112
 27822              	.L1113:
4434:..\src/command_processing.c ****     }
4435:..\src/command_processing.c ****         
4436:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
 27823              		.loc 1 4436 0
 27824 00a8 2F4B     		ldr	r3, .L1117+8
 27825 00aa 1B68     		ldr	r3, [r3]
 27826 00ac 41F28732 		movw	r2, #4999
 27827 00b0 9342     		cmp	r3, r2
 27828 00b2 09DD     		ble	.L1115
 27829              		.loc 1 4436 0 is_stmt 0 discriminator 1
 27830 00b4 2C4B     		ldr	r3, .L1117+8
 27831 00b6 1B68     		ldr	r3, [r3]
 27832 00b8 41F65732 		movw	r2, #6999
 27833 00bc 9342     		cmp	r3, r2
 27834 00be 03DC     		bgt	.L1115
4437:..\src/command_processing.c ****         master_mode = 0;
 27835              		.loc 1 4437 0 is_stmt 1
 27836 00c0 284B     		ldr	r3, .L1117+4
 27837 00c2 0022     		movs	r2, #0
 27838 00c4 1A70     		strb	r2, [r3]
4438:..\src/command_processing.c ****         return;
 27839              		.loc 1 4438 0
 27840 00c6 48E0     		b	.L1112
 27841              	.L1115:
4439:..\src/command_processing.c ****     }
4440:..\src/command_processing.c ****     
4441:..\src/command_processing.c ****        
4442:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4443:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 27842              		.loc 1 4443 0
 27843 00c8 8223     		movs	r3, #130
 27844 00ca 3B74     		strb	r3, [r7, #16]
4444:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
 27845              		.loc 1 4444 0
 27846 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 27847 00ce 274A     		ldr	r2, .L1117+12
 27848 00d0 1B01     		lsls	r3, r3, #4
 27849 00d2 1344     		add	r3, r3, r2
 27850 00d4 1968     		ldr	r1, [r3]
 27851 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 27852 00d8 2548     		ldr	r0, .L1117+16
 27853 00da 1346     		mov	r3, r2
 27854 00dc DB00     		lsls	r3, r3, #3
 27855 00de 9B1A     		subs	r3, r3, r2
 27856 00e0 1B01     		lsls	r3, r3, #4
 27857 00e2 0344     		add	r3, r3, r0
 27858 00e4 03F58873 		add	r3, r3, #272
 27859 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27860 00ea 1846     		mov	r0, r3
 27861 00ec 204A     		ldr	r2, .L1117+16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 612


 27862 00ee 0346     		mov	r3, r0
 27863 00f0 5B00     		lsls	r3, r3, #1
 27864 00f2 0344     		add	r3, r3, r0
 27865 00f4 1B01     		lsls	r3, r3, #4
 27866 00f6 1344     		add	r3, r3, r2
 27867 00f8 03F29513 		addw	r3, r3, #405
 27868 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27869 00fe 41FA03F3 		asr	r3, r1, r3
 27870 0102 1BB2     		sxth	r3, r3
 27871 0104 FB81     		strh	r3, [r7, #14]	@ movhi
4445:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 27872              		.loc 1 4445 0
 27873 0106 07F10E03 		add	r3, r7, #14
 27874 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27875 010c BB74     		strb	r3, [r7, #18]
4446:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 27876              		.loc 1 4446 0
 27877 010e 07F10E03 		add	r3, r7, #14
 27878 0112 0133     		adds	r3, r3, #1
 27879 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27880 0116 7B74     		strb	r3, [r7, #17]
4447:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 27881              		.loc 1 4447 0
 27882 0118 07F11003 		add	r3, r7, #16
 27883 011c 0333     		adds	r3, r3, #3
 27884 011e 0022     		movs	r2, #0
 27885 0120 1A80     		strh	r2, [r3]	@ movhi
4448:..\src/command_processing.c ****     
4449:..\src/command_processing.c ****     packet_lenght = 6;
 27886              		.loc 1 4449 0
 27887 0122 0623     		movs	r3, #6
 27888 0124 FB75     		strb	r3, [r7, #23]
4450:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 27889              		.loc 1 4450 0
 27890 0126 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 27891 0128 5C1E     		subs	r4, r3, #1
 27892 012a FB7D     		ldrb	r3, [r7, #23]
 27893 012c 013B     		subs	r3, r3, #1
 27894 012e DAB2     		uxtb	r2, r3
 27895 0130 07F11003 		add	r3, r7, #16
 27896 0134 1146     		mov	r1, r2
 27897 0136 1846     		mov	r0, r3
 27898 0138 FFF7FEFF 		bl	LCRChecksum
 27899 013c 0346     		mov	r3, r0
 27900 013e 1A46     		mov	r2, r3
 27901 0140 07F11803 		add	r3, r7, #24
 27902 0144 2344     		add	r3, r3, r4
 27903 0146 03F8082C 		strb	r2, [r3, #-8]
4451:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
 27904              		.loc 1 4451 0
 27905 014a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 27906 014c 99B2     		uxth	r1, r3
 27907 014e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 27908 0150 07F11003 		add	r3, r7, #16
 27909 0154 1846     		mov	r0, r3
 27910 0156 FFF7FEFF 		bl	commWriteID
 27911              	.L1112:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 613


4452:..\src/command_processing.c **** 
4453:..\src/command_processing.c **** #endif
4454:..\src/command_processing.c **** }
 27912              		.loc 1 4454 0
 27913 015a 1C37     		adds	r7, r7, #28
 27914              		.cfi_def_cfa_offset 12
 27915 015c BD46     		mov	sp, r7
 27916              		.cfi_def_cfa_register 13
 27917              		@ sp needed
 27918 015e 90BD     		pop	{r4, r7, pc}
 27919              	.L1118:
 27920              		.align	2
 27921              	.L1117:
 27922 0160 00000000 		.word	c_mem
 27923 0164 00000000 		.word	master_mode
 27924 0168 00000000 		.word	dev_tension
 27925 016c 00000000 		.word	g_ref
 27926 0170 00000000 		.word	g_mem
 27927              		.cfi_endproc
 27928              	.LFE120:
 27929              		.size	drive_slave, .-drive_slave
 27930              		.section	.text.stop_master_device,"ax",%progbits
 27931              		.align	2
 27932              		.global	stop_master_device
 27933              		.thumb
 27934              		.thumb_func
 27935              		.type	stop_master_device, %function
 27936              	stop_master_device:
 27937              	.LFB121:
4455:..\src/command_processing.c **** 
4456:..\src/command_processing.c **** //==============================================================================
4457:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4458:..\src/command_processing.c **** //==============================================================================
4459:..\src/command_processing.c ****  
4460:..\src/command_processing.c **** void stop_master_device() {
 27938              		.loc 1 4460 0
 27939              		.cfi_startproc
 27940              		@ args = 0, pretend = 0, frame = 0
 27941              		@ frame_needed = 1, uses_anonymous_args = 0
 27942 0000 80B5     		push	{r7, lr}
 27943              		.cfi_def_cfa_offset 8
 27944              		.cfi_offset 7, -8
 27945              		.cfi_offset 14, -4
 27946 0002 00AF     		add	r7, sp, #0
 27947              		.cfi_def_cfa_register 7
4461:..\src/command_processing.c ****     
4462:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4463:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
 27948              		.loc 1 4463 0
 27949 0004 064B     		ldr	r3, .L1122
 27950 0006 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 27951 000a 022B     		cmp	r3, #2
 27952 000c 05D1     		bne	.L1121
4464:..\src/command_processing.c ****         // Stop pump and open valve
4465:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
 27953              		.loc 1 4465 0
 27954 000e 054B     		ldr	r3, .L1122+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 614


 27955 0010 0022     		movs	r2, #0
 27956 0012 9A60     		str	r2, [r3, #8]
4466:..\src/command_processing.c ****         VALVE_Write(0);
 27957              		.loc 1 4466 0
 27958 0014 0020     		movs	r0, #0
 27959 0016 FFF7FEFF 		bl	VALVE_Write
 27960              	.L1121:
4467:..\src/command_processing.c ****     }
4468:..\src/command_processing.c **** #endif
4469:..\src/command_processing.c **** 
4470:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4471:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4472:..\src/command_processing.c ****         //Stop wrist motor
4473:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4474:..\src/command_processing.c ****     }
4475:..\src/command_processing.c **** #endif    
4476:..\src/command_processing.c **** }
 27961              		.loc 1 4476 0
 27962 001a 00BF     		nop
 27963 001c 80BD     		pop	{r7, pc}
 27964              	.L1123:
 27965 001e 00BF     		.align	2
 27966              	.L1122:
 27967 0020 00000000 		.word	c_mem
 27968 0024 00000000 		.word	g_refNew
 27969              		.cfi_endproc
 27970              	.LFE121:
 27971              		.size	stop_master_device, .-stop_master_device
 27972              		.section	.text.deactivate_slaves,"ax",%progbits
 27973              		.align	2
 27974              		.global	deactivate_slaves
 27975              		.thumb
 27976              		.thumb_func
 27977              		.type	deactivate_slaves, %function
 27978              	deactivate_slaves:
 27979              	.LFB122:
4477:..\src/command_processing.c **** 
4478:..\src/command_processing.c **** //==============================================================================
4479:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4480:..\src/command_processing.c **** //==============================================================================
4481:..\src/command_processing.c ****  
4482:..\src/command_processing.c **** void deactivate_slaves() {
 27980              		.loc 1 4482 0
 27981              		.cfi_startproc
 27982              		@ args = 0, pretend = 0, frame = 16
 27983              		@ frame_needed = 1, uses_anonymous_args = 0
 27984 0000 90B5     		push	{r4, r7, lr}
 27985              		.cfi_def_cfa_offset 12
 27986              		.cfi_offset 4, -12
 27987              		.cfi_offset 7, -8
 27988              		.cfi_offset 14, -4
 27989 0002 85B0     		sub	sp, sp, #20
 27990              		.cfi_def_cfa_offset 32
 27991 0004 00AF     		add	r7, sp, #0
 27992              		.cfi_def_cfa_register 7
4483:..\src/command_processing.c ****     
4484:..\src/command_processing.c **** #ifdef MASTER_FW
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 615


4485:..\src/command_processing.c ****     
4486:..\src/command_processing.c ****     uint8 packet_data[10];
4487:..\src/command_processing.c ****     uint8 packet_lenght;
4488:..\src/command_processing.c ****     
4489:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4490:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 27993              		.loc 1 4490 0
 27994 0006 204B     		ldr	r3, .L1127
 27995 0008 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 27996 000c 022B     		cmp	r3, #2
 27997 000e 17D0     		beq	.L1125
4491:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 27998              		.loc 1 4491 0 discriminator 1
 27999 0010 1D4B     		ldr	r3, .L1127
 28000 0012 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4490:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28001              		.loc 1 4490 0 discriminator 1
 28002 0016 032B     		cmp	r3, #3
 28003 0018 12D0     		beq	.L1125
4492:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 28004              		.loc 1 4492 0
 28005 001a 1B4B     		ldr	r3, .L1127
 28006 001c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4491:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28007              		.loc 1 4491 0
 28008 0020 042B     		cmp	r3, #4
 28009 0022 0DD0     		beq	.L1125
4493:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 28010              		.loc 1 4493 0
 28011 0024 184B     		ldr	r3, .L1127
 28012 0026 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4492:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 28013              		.loc 1 4492 0
 28014 002a 052B     		cmp	r3, #5
 28015 002c 08D0     		beq	.L1125
4494:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
 28016              		.loc 1 4494 0
 28017 002e 164B     		ldr	r3, .L1127
 28018 0030 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4493:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 28019              		.loc 1 4493 0
 28020 0034 072B     		cmp	r3, #7
 28021 0036 03D0     		beq	.L1125
4495:..\src/command_processing.c ****         master_mode = 0;
 28022              		.loc 1 4495 0
 28023 0038 144B     		ldr	r3, .L1127+4
 28024 003a 0022     		movs	r2, #0
 28025 003c 1A70     		strb	r2, [r3]
 28026 003e 1FE0     		b	.L1124
 28027              	.L1125:
4496:..\src/command_processing.c ****         return;
4497:..\src/command_processing.c ****     }
4498:..\src/command_processing.c ****    
4499:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4500:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
 28028              		.loc 1 4500 0
 28029 0040 8023     		movs	r3, #128
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 616


 28030 0042 3B71     		strb	r3, [r7, #4]
4501:..\src/command_processing.c **** 
4502:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
 28031              		.loc 1 4502 0
 28032 0044 3B1D     		adds	r3, r7, #4
 28033 0046 0133     		adds	r3, r3, #1
 28034 0048 0022     		movs	r2, #0
 28035 004a 1A80     		strh	r2, [r3]	@ movhi
4503:..\src/command_processing.c ****     packet_lenght = 3;
 28036              		.loc 1 4503 0
 28037 004c 0323     		movs	r3, #3
 28038 004e FB73     		strb	r3, [r7, #15]
4504:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 28039              		.loc 1 4504 0
 28040 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 28041 0052 5C1E     		subs	r4, r3, #1
 28042 0054 FB7B     		ldrb	r3, [r7, #15]
 28043 0056 013B     		subs	r3, r3, #1
 28044 0058 DAB2     		uxtb	r2, r3
 28045 005a 3B1D     		adds	r3, r7, #4
 28046 005c 1146     		mov	r1, r2
 28047 005e 1846     		mov	r0, r3
 28048 0060 FFF7FEFF 		bl	LCRChecksum
 28049 0064 0346     		mov	r3, r0
 28050 0066 1A46     		mov	r2, r3
 28051 0068 07F11003 		add	r3, r7, #16
 28052 006c 2344     		add	r3, r3, r4
 28053 006e 03F80C2C 		strb	r2, [r3, #-12]
4505:..\src/command_processing.c ****     
4506:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 28054              		.loc 1 4506 0
 28055 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 28056 0074 9AB2     		uxth	r2, r3
 28057 0076 3B1D     		adds	r3, r7, #4
 28058 0078 1146     		mov	r1, r2
 28059 007a 1846     		mov	r0, r3
 28060 007c FFF7FEFF 		bl	commWrite
 28061              	.L1124:
4507:..\src/command_processing.c ****     
4508:..\src/command_processing.c **** #endif    
4509:..\src/command_processing.c **** }
 28062              		.loc 1 4509 0
 28063 0080 1437     		adds	r7, r7, #20
 28064              		.cfi_def_cfa_offset 12
 28065 0082 BD46     		mov	sp, r7
 28066              		.cfi_def_cfa_register 13
 28067              		@ sp needed
 28068 0084 90BD     		pop	{r4, r7, pc}
 28069              	.L1128:
 28070 0086 00BF     		.align	2
 28071              	.L1127:
 28072 0088 00000000 		.word	c_mem
 28073 008c 00000000 		.word	master_mode
 28074              		.cfi_endproc
 28075              	.LFE122:
 28076              		.size	deactivate_slaves, .-deactivate_slaves
 28077              		.bss
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 617


 28078              		.align	2
 28079              	h_time.11231:
 28080 0000 00000000 		.space	4
 28081              		.align	1
 28082              	i.11272:
 28083 0004 0000     		.space	2
 28084 0006 0000     		.align	2
 28085              	last_aux_int16.11403:
 28086 0008 00000000 		.space	4
 28087              	fsm_state.11566:
 28088 000c 00       		.space	1
 28089 000d 000000   		.align	2
 28090              	cnt.11567:
 28091 0010 00000000 		.space	4
 28092              		.text
 28093              	.Letext0:
 28094              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28095              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28096              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 28097              		.file 6 "..\\src\\commands.h"
 28098              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 28099              		.file 8 "..\\src\\globals.h"
 28100              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 28101              		.section	.debug_info,"",%progbits
 28102              	.Ldebug_info0:
 28103 0000 CB270000 		.4byte	0x27cb
 28104 0004 0400     		.2byte	0x4
 28105 0006 00000000 		.4byte	.Ldebug_abbrev0
 28106 000a 04       		.byte	0x4
 28107 000b 01       		.uleb128 0x1
 28108 000c E6090000 		.4byte	.LASF413
 28109 0010 0C       		.byte	0xc
 28110 0011 37160000 		.4byte	.LASF414
 28111 0015 A30F0000 		.4byte	.LASF415
 28112 0019 00000000 		.4byte	.Ldebug_ranges0+0
 28113 001d 00000000 		.4byte	0
 28114 0021 00000000 		.4byte	.Ldebug_line0
 28115 0025 02       		.uleb128 0x2
 28116 0026 01       		.byte	0x1
 28117 0027 06       		.byte	0x6
 28118 0028 9D040000 		.4byte	.LASF0
 28119 002c 02       		.uleb128 0x2
 28120 002d 01       		.byte	0x1
 28121 002e 08       		.byte	0x8
 28122 002f 17050000 		.4byte	.LASF1
 28123 0033 02       		.uleb128 0x2
 28124 0034 02       		.byte	0x2
 28125 0035 05       		.byte	0x5
 28126 0036 A0120000 		.4byte	.LASF2
 28127 003a 02       		.uleb128 0x2
 28128 003b 02       		.byte	0x2
 28129 003c 07       		.byte	0x7
 28130 003d 29150000 		.4byte	.LASF3
 28131 0041 03       		.uleb128 0x3
 28132 0042 F5150000 		.4byte	.LASF5
 28133 0046 03       		.byte	0x3
 28134 0047 3F       		.byte	0x3f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 618


 28135 0048 4C000000 		.4byte	0x4c
 28136 004c 02       		.uleb128 0x2
 28137 004d 04       		.byte	0x4
 28138 004e 05       		.byte	0x5
 28139 004f 4D030000 		.4byte	.LASF4
 28140 0053 03       		.uleb128 0x3
 28141 0054 B10A0000 		.4byte	.LASF6
 28142 0058 03       		.byte	0x3
 28143 0059 41       		.byte	0x41
 28144 005a 5E000000 		.4byte	0x5e
 28145 005e 02       		.uleb128 0x2
 28146 005f 04       		.byte	0x4
 28147 0060 07       		.byte	0x7
 28148 0061 A0080000 		.4byte	.LASF7
 28149 0065 02       		.uleb128 0x2
 28150 0066 08       		.byte	0x8
 28151 0067 05       		.byte	0x5
 28152 0068 BC0A0000 		.4byte	.LASF8
 28153 006c 02       		.uleb128 0x2
 28154 006d 08       		.byte	0x8
 28155 006e 07       		.byte	0x7
 28156 006f FC0E0000 		.4byte	.LASF9
 28157 0073 04       		.uleb128 0x4
 28158 0074 04       		.byte	0x4
 28159 0075 05       		.byte	0x5
 28160 0076 696E7400 		.ascii	"int\000"
 28161 007a 02       		.uleb128 0x2
 28162 007b 04       		.byte	0x4
 28163 007c 07       		.byte	0x7
 28164 007d 060C0000 		.4byte	.LASF10
 28165 0081 03       		.uleb128 0x3
 28166 0082 D2000000 		.4byte	.LASF11
 28167 0086 04       		.byte	0x4
 28168 0087 2C       		.byte	0x2c
 28169 0088 41000000 		.4byte	0x41
 28170 008c 03       		.uleb128 0x3
 28171 008d 97140000 		.4byte	.LASF12
 28172 0091 04       		.byte	0x4
 28173 0092 30       		.byte	0x30
 28174 0093 53000000 		.4byte	0x53
 28175 0097 05       		.uleb128 0x5
 28176 0098 82120000 		.4byte	.LASF13
 28177 009c 05       		.byte	0x5
 28178 009d E401     		.2byte	0x1e4
 28179 009f 2C000000 		.4byte	0x2c
 28180 00a3 05       		.uleb128 0x5
 28181 00a4 9A160000 		.4byte	.LASF14
 28182 00a8 05       		.byte	0x5
 28183 00a9 E501     		.2byte	0x1e5
 28184 00ab 3A000000 		.4byte	0x3a
 28185 00af 05       		.uleb128 0x5
 28186 00b0 08010000 		.4byte	.LASF15
 28187 00b4 05       		.byte	0x5
 28188 00b5 E601     		.2byte	0x1e6
 28189 00b7 5E000000 		.4byte	0x5e
 28190 00bb 05       		.uleb128 0x5
 28191 00bc 16020000 		.4byte	.LASF16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 619


 28192 00c0 05       		.byte	0x5
 28193 00c1 E701     		.2byte	0x1e7
 28194 00c3 25000000 		.4byte	0x25
 28195 00c7 05       		.uleb128 0x5
 28196 00c8 F7130000 		.4byte	.LASF17
 28197 00cc 05       		.byte	0x5
 28198 00cd E801     		.2byte	0x1e8
 28199 00cf 33000000 		.4byte	0x33
 28200 00d3 05       		.uleb128 0x5
 28201 00d4 83150000 		.4byte	.LASF18
 28202 00d8 05       		.byte	0x5
 28203 00d9 E901     		.2byte	0x1e9
 28204 00db 4C000000 		.4byte	0x4c
 28205 00df 05       		.uleb128 0x5
 28206 00e0 D4030000 		.4byte	.LASF19
 28207 00e4 05       		.byte	0x5
 28208 00e5 EA01     		.2byte	0x1ea
 28209 00e7 EB000000 		.4byte	0xeb
 28210 00eb 02       		.uleb128 0x2
 28211 00ec 04       		.byte	0x4
 28212 00ed 04       		.byte	0x4
 28213 00ee A20B0000 		.4byte	.LASF20
 28214 00f2 02       		.uleb128 0x2
 28215 00f3 08       		.byte	0x8
 28216 00f4 04       		.byte	0x4
 28217 00f5 140B0000 		.4byte	.LASF21
 28218 00f9 02       		.uleb128 0x2
 28219 00fa 01       		.byte	0x1
 28220 00fb 08       		.byte	0x8
 28221 00fc BB050000 		.4byte	.LASF22
 28222 0100 05       		.uleb128 0x5
 28223 0101 8F100000 		.4byte	.LASF23
 28224 0105 05       		.byte	0x5
 28225 0106 8E02     		.2byte	0x28e
 28226 0108 0C010000 		.4byte	0x10c
 28227 010c 06       		.uleb128 0x6
 28228 010d 97000000 		.4byte	0x97
 28229 0111 02       		.uleb128 0x2
 28230 0112 08       		.byte	0x8
 28231 0113 04       		.byte	0x4
 28232 0114 E80D0000 		.4byte	.LASF24
 28233 0118 02       		.uleb128 0x2
 28234 0119 04       		.byte	0x4
 28235 011a 07       		.byte	0x7
 28236 011b 39000000 		.4byte	.LASF25
 28237 011f 07       		.uleb128 0x7
 28238 0120 04       		.byte	0x4
 28239 0121 F9000000 		.4byte	0xf9
 28240 0125 07       		.uleb128 0x7
 28241 0126 04       		.byte	0x4
 28242 0127 2B010000 		.4byte	0x12b
 28243 012b 08       		.uleb128 0x8
 28244 012c F9000000 		.4byte	0xf9
 28245 0130 09       		.uleb128 0x9
 28246 0131 F9000000 		.4byte	0xf9
 28247 0135 40010000 		.4byte	0x140
 28248 0139 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 620


 28249 013a 18010000 		.4byte	0x118
 28250 013e 19       		.byte	0x19
 28251 013f 00       		.byte	0
 28252 0140 09       		.uleb128 0x9
 28253 0141 F9000000 		.4byte	0xf9
 28254 0145 50010000 		.4byte	0x150
 28255 0149 0A       		.uleb128 0xa
 28256 014a 18010000 		.4byte	0x118
 28257 014e 07       		.byte	0x7
 28258 014f 00       		.byte	0
 28259 0150 0B       		.uleb128 0xb
 28260 0151 660C0000 		.4byte	.LASF58
 28261 0155 01       		.byte	0x1
 28262 0156 2C000000 		.4byte	0x2c
 28263 015a 06       		.byte	0x6
 28264 015b 42       		.byte	0x42
 28265 015c 21020000 		.4byte	0x221
 28266 0160 0C       		.uleb128 0xc
 28267 0161 B4160000 		.4byte	.LASF26
 28268 0165 00       		.byte	0
 28269 0166 0C       		.uleb128 0xc
 28270 0167 31130000 		.4byte	.LASF27
 28271 016b 01       		.byte	0x1
 28272 016c 0C       		.uleb128 0xc
 28273 016d 7C080000 		.4byte	.LASF28
 28274 0171 03       		.byte	0x3
 28275 0172 0C       		.uleb128 0xc
 28276 0173 4F050000 		.4byte	.LASF29
 28277 0177 04       		.byte	0x4
 28278 0178 0C       		.uleb128 0xc
 28279 0179 C8100000 		.4byte	.LASF30
 28280 017d 05       		.byte	0x5
 28281 017e 0C       		.uleb128 0xc
 28282 017f 8E090000 		.4byte	.LASF31
 28283 0183 06       		.byte	0x6
 28284 0184 0C       		.uleb128 0xc
 28285 0185 B2080000 		.4byte	.LASF32
 28286 0189 09       		.byte	0x9
 28287 018a 0C       		.uleb128 0xc
 28288 018b 4F000000 		.4byte	.LASF33
 28289 018f 0A       		.byte	0xa
 28290 0190 0C       		.uleb128 0xc
 28291 0191 D9130000 		.4byte	.LASF34
 28292 0195 0C       		.byte	0xc
 28293 0196 0C       		.uleb128 0xc
 28294 0197 480E0000 		.4byte	.LASF35
 28295 019b 0D       		.byte	0xd
 28296 019c 0C       		.uleb128 0xc
 28297 019d 95000000 		.4byte	.LASF36
 28298 01a1 80       		.byte	0x80
 28299 01a2 0C       		.uleb128 0xc
 28300 01a3 AA050000 		.4byte	.LASF37
 28301 01a7 81       		.byte	0x81
 28302 01a8 0C       		.uleb128 0xc
 28303 01a9 F6060000 		.4byte	.LASF38
 28304 01ad 82       		.byte	0x82
 28305 01ae 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 621


 28306 01af FB120000 		.4byte	.LASF39
 28307 01b3 83       		.byte	0x83
 28308 01b4 0C       		.uleb128 0xc
 28309 01b5 4B120000 		.4byte	.LASF40
 28310 01b9 84       		.byte	0x84
 28311 01ba 0C       		.uleb128 0xc
 28312 01bb EC030000 		.4byte	.LASF41
 28313 01bf 85       		.byte	0x85
 28314 01c0 0C       		.uleb128 0xc
 28315 01c1 D0090000 		.4byte	.LASF42
 28316 01c5 86       		.byte	0x86
 28317 01c6 0C       		.uleb128 0xc
 28318 01c7 6E090000 		.4byte	.LASF43
 28319 01cb 88       		.byte	0x88
 28320 01cc 0C       		.uleb128 0xc
 28321 01cd BA130000 		.4byte	.LASF44
 28322 01d1 89       		.byte	0x89
 28323 01d2 0C       		.uleb128 0xc
 28324 01d3 5A0F0000 		.4byte	.LASF45
 28325 01d7 8B       		.byte	0x8b
 28326 01d8 0C       		.uleb128 0xc
 28327 01d9 A60D0000 		.4byte	.LASF46
 28328 01dd 8C       		.byte	0x8c
 28329 01de 0C       		.uleb128 0xc
 28330 01df 8C0A0000 		.4byte	.LASF47
 28331 01e3 8E       		.byte	0x8e
 28332 01e4 0C       		.uleb128 0xc
 28333 01e5 920F0000 		.4byte	.LASF48
 28334 01e9 90       		.byte	0x90
 28335 01ea 0C       		.uleb128 0xc
 28336 01eb B8020000 		.4byte	.LASF49
 28337 01ef 92       		.byte	0x92
 28338 01f0 0C       		.uleb128 0xc
 28339 01f1 F8140000 		.4byte	.LASF50
 28340 01f5 A1       		.byte	0xa1
 28341 01f6 0C       		.uleb128 0xc
 28342 01f7 04120000 		.4byte	.LASF51
 28343 01fb A2       		.byte	0xa2
 28344 01fc 0C       		.uleb128 0xc
 28345 01fd CC0C0000 		.4byte	.LASF52
 28346 0201 A3       		.byte	0xa3
 28347 0202 0C       		.uleb128 0xc
 28348 0203 20120000 		.4byte	.LASF53
 28349 0207 A4       		.byte	0xa4
 28350 0208 0C       		.uleb128 0xc
 28351 0209 20130000 		.4byte	.LASF54
 28352 020d A5       		.byte	0xa5
 28353 020e 0C       		.uleb128 0xc
 28354 020f B8110000 		.4byte	.LASF55
 28355 0213 A6       		.byte	0xa6
 28356 0214 0C       		.uleb128 0xc
 28357 0215 1B0B0000 		.4byte	.LASF56
 28358 0219 A7       		.byte	0xa7
 28359 021a 0C       		.uleb128 0xc
 28360 021b B10B0000 		.4byte	.LASF57
 28361 021f A8       		.byte	0xa8
 28362 0220 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 622


 28363 0221 0B       		.uleb128 0xb
 28364 0222 61160000 		.4byte	.LASF59
 28365 0226 01       		.byte	0x1
 28366 0227 2C000000 		.4byte	0x2c
 28367 022b 06       		.byte	0x6
 28368 022c 8F       		.byte	0x8f
 28369 022d 62020000 		.4byte	0x262
 28370 0231 0C       		.uleb128 0xc
 28371 0232 84070000 		.4byte	.LASF60
 28372 0236 00       		.byte	0
 28373 0237 0C       		.uleb128 0xc
 28374 0238 AC0C0000 		.4byte	.LASF61
 28375 023c 01       		.byte	0x1
 28376 023d 0C       		.uleb128 0xc
 28377 023e C9020000 		.4byte	.LASF62
 28378 0242 02       		.byte	0x2
 28379 0243 0C       		.uleb128 0xc
 28380 0244 F2010000 		.4byte	.LASF63
 28381 0248 03       		.byte	0x3
 28382 0249 0C       		.uleb128 0xc
 28383 024a 96010000 		.4byte	.LASF64
 28384 024e 04       		.byte	0x4
 28385 024f 0C       		.uleb128 0xc
 28386 0250 7D000000 		.4byte	.LASF65
 28387 0254 05       		.byte	0x5
 28388 0255 0C       		.uleb128 0xc
 28389 0256 DA080000 		.4byte	.LASF66
 28390 025a 06       		.byte	0x6
 28391 025b 0C       		.uleb128 0xc
 28392 025c E5110000 		.4byte	.LASF67
 28393 0260 07       		.byte	0x7
 28394 0261 00       		.byte	0
 28395 0262 0B       		.uleb128 0xb
 28396 0263 CA0A0000 		.4byte	.LASF68
 28397 0267 01       		.byte	0x1
 28398 0268 2C000000 		.4byte	0x2c
 28399 026c 06       		.byte	0x6
 28400 026d A3       		.byte	0xa3
 28401 026e 8B020000 		.4byte	0x28b
 28402 0272 0C       		.uleb128 0xc
 28403 0273 DA150000 		.4byte	.LASF69
 28404 0277 00       		.byte	0
 28405 0278 0C       		.uleb128 0xc
 28406 0279 62090000 		.4byte	.LASF70
 28407 027d 01       		.byte	0x1
 28408 027e 0C       		.uleb128 0xc
 28409 027f D80D0000 		.4byte	.LASF71
 28410 0283 02       		.byte	0x2
 28411 0284 0C       		.uleb128 0xc
 28412 0285 67080000 		.4byte	.LASF72
 28413 0289 03       		.byte	0x3
 28414 028a 00       		.byte	0
 28415 028b 0B       		.uleb128 0xb
 28416 028c DF040000 		.4byte	.LASF73
 28417 0290 01       		.byte	0x1
 28418 0291 2C000000 		.4byte	0x2c
 28419 0295 06       		.byte	0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 623


 28420 0296 AD       		.byte	0xad
 28421 0297 A8020000 		.4byte	0x2a8
 28422 029b 0C       		.uleb128 0xc
 28423 029c DB110000 		.4byte	.LASF74
 28424 02a0 00       		.byte	0
 28425 02a1 0C       		.uleb128 0xc
 28426 02a2 F60A0000 		.4byte	.LASF75
 28427 02a6 01       		.byte	0x1
 28428 02a7 00       		.byte	0
 28429 02a8 0B       		.uleb128 0xb
 28430 02a9 A10E0000 		.4byte	.LASF76
 28431 02ad 01       		.byte	0x1
 28432 02ae 2C000000 		.4byte	0x2c
 28433 02b2 06       		.byte	0x6
 28434 02b3 B2       		.byte	0xb2
 28435 02b4 C5020000 		.4byte	0x2c5
 28436 02b8 0C       		.uleb128 0xc
 28437 02b9 69070000 		.4byte	.LASF77
 28438 02bd 00       		.byte	0
 28439 02be 0C       		.uleb128 0xc
 28440 02bf 1F090000 		.4byte	.LASF78
 28441 02c3 01       		.byte	0x1
 28442 02c4 00       		.byte	0
 28443 02c5 0B       		.uleb128 0xb
 28444 02c6 EC130000 		.4byte	.LASF79
 28445 02ca 01       		.byte	0x1
 28446 02cb 2C000000 		.4byte	0x2c
 28447 02cf 06       		.byte	0x6
 28448 02d0 BA       		.byte	0xba
 28449 02d1 12030000 		.4byte	0x312
 28450 02d5 0C       		.uleb128 0xc
 28451 02d6 26090000 		.4byte	.LASF80
 28452 02da 00       		.byte	0
 28453 02db 0C       		.uleb128 0xc
 28454 02dc 6F160000 		.4byte	.LASF81
 28455 02e0 01       		.byte	0x1
 28456 02e1 0C       		.uleb128 0xc
 28457 02e2 DA0A0000 		.4byte	.LASF82
 28458 02e6 02       		.byte	0x2
 28459 02e7 0C       		.uleb128 0xc
 28460 02e8 820D0000 		.4byte	.LASF83
 28461 02ec 03       		.byte	0x3
 28462 02ed 0C       		.uleb128 0xc
 28463 02ee 710C0000 		.4byte	.LASF84
 28464 02f2 04       		.byte	0x4
 28465 02f3 0C       		.uleb128 0xc
 28466 02f4 130F0000 		.4byte	.LASF85
 28467 02f8 05       		.byte	0x5
 28468 02f9 0C       		.uleb128 0xc
 28469 02fa F40D0000 		.4byte	.LASF86
 28470 02fe 06       		.byte	0x6
 28471 02ff 0C       		.uleb128 0xc
 28472 0300 230D0000 		.4byte	.LASF87
 28473 0304 07       		.byte	0x7
 28474 0305 0C       		.uleb128 0xc
 28475 0306 37070000 		.4byte	.LASF88
 28476 030a 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 624


 28477 030b 0C       		.uleb128 0xc
 28478 030c 5B080000 		.4byte	.LASF89
 28479 0310 09       		.byte	0x9
 28480 0311 00       		.byte	0
 28481 0312 03       		.uleb128 0x3
 28482 0313 BB150000 		.4byte	.LASF90
 28483 0317 07       		.byte	0x7
 28484 0318 7E       		.byte	0x7e
 28485 0319 1D030000 		.4byte	0x31d
 28486 031d 0D       		.uleb128 0xd
 28487 031e BB150000 		.4byte	.LASF90
 28488 0322 07       		.uleb128 0x7
 28489 0323 04       		.byte	0x4
 28490 0324 12030000 		.4byte	0x312
 28491 0328 0E       		.uleb128 0xe
 28492 0329 740A0000 		.4byte	.LASF93
 28493 032d 10       		.byte	0x10
 28494 032e 08       		.byte	0x8
 28495 032f E5       		.byte	0xe5
 28496 0330 65030000 		.4byte	0x365
 28497 0334 0F       		.uleb128 0xf
 28498 0335 706F7300 		.ascii	"pos\000"
 28499 0339 08       		.byte	0x8
 28500 033a E6       		.byte	0xe6
 28501 033b D3000000 		.4byte	0xd3
 28502 033f 00       		.byte	0
 28503 0340 10       		.uleb128 0x10
 28504 0341 52090000 		.4byte	.LASF91
 28505 0345 08       		.byte	0x8
 28506 0346 E7       		.byte	0xe7
 28507 0347 D3000000 		.4byte	0xd3
 28508 034b 04       		.byte	0x4
 28509 034c 0F       		.uleb128 0xf
 28510 034d 70776D00 		.ascii	"pwm\000"
 28511 0351 08       		.byte	0x8
 28512 0352 E8       		.byte	0xe8
 28513 0353 D3000000 		.4byte	0xd3
 28514 0357 08       		.byte	0x8
 28515 0358 10       		.uleb128 0x10
 28516 0359 540F0000 		.4byte	.LASF92
 28517 035d 08       		.byte	0x8
 28518 035e E9       		.byte	0xe9
 28519 035f 97000000 		.4byte	0x97
 28520 0363 0C       		.byte	0xc
 28521 0364 00       		.byte	0
 28522 0365 0E       		.uleb128 0xe
 28523 0366 B0110000 		.4byte	.LASF94
 28524 036a 34       		.byte	0x34
 28525 036b 08       		.byte	0x8
 28526 036c F0       		.byte	0xf0
 28527 036d C6030000 		.4byte	0x3c6
 28528 0371 0F       		.uleb128 0xf
 28529 0372 706F7300 		.ascii	"pos\000"
 28530 0376 08       		.byte	0x8
 28531 0377 F1       		.byte	0xf1
 28532 0378 C6030000 		.4byte	0x3c6
 28533 037c 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 625


 28534 037d 10       		.uleb128 0x10
 28535 037e 52090000 		.4byte	.LASF91
 28536 0382 08       		.byte	0x8
 28537 0383 F2       		.byte	0xf2
 28538 0384 D3000000 		.4byte	0xd3
 28539 0388 0C       		.byte	0xc
 28540 0389 10       		.uleb128 0x10
 28541 038a 39140000 		.4byte	.LASF95
 28542 038e 08       		.byte	0x8
 28543 038f F3       		.byte	0xf3
 28544 0390 D3000000 		.4byte	0xd3
 28545 0394 10       		.byte	0x10
 28546 0395 10       		.uleb128 0x10
 28547 0396 D0080000 		.4byte	.LASF96
 28548 039a 08       		.byte	0x8
 28549 039b F4       		.byte	0xf4
 28550 039c D3000000 		.4byte	0xd3
 28551 03a0 14       		.byte	0x14
 28552 03a1 0F       		.uleb128 0xf
 28553 03a2 726F7400 		.ascii	"rot\000"
 28554 03a6 08       		.byte	0x8
 28555 03a7 F5       		.byte	0xf5
 28556 03a8 D6030000 		.4byte	0x3d6
 28557 03ac 18       		.byte	0x18
 28558 03ad 0F       		.uleb128 0xf
 28559 03ae 76656C00 		.ascii	"vel\000"
 28560 03b2 08       		.byte	0x8
 28561 03b3 F6       		.byte	0xf6
 28562 03b4 C6030000 		.4byte	0x3c6
 28563 03b8 1C       		.byte	0x1c
 28564 03b9 0F       		.uleb128 0xf
 28565 03ba 61636300 		.ascii	"acc\000"
 28566 03be 08       		.byte	0x8
 28567 03bf F7       		.byte	0xf7
 28568 03c0 C6030000 		.4byte	0x3c6
 28569 03c4 28       		.byte	0x28
 28570 03c5 00       		.byte	0
 28571 03c6 09       		.uleb128 0x9
 28572 03c7 D3000000 		.4byte	0xd3
 28573 03cb D6030000 		.4byte	0x3d6
 28574 03cf 0A       		.uleb128 0xa
 28575 03d0 18010000 		.4byte	0x118
 28576 03d4 02       		.byte	0x2
 28577 03d5 00       		.byte	0
 28578 03d6 09       		.uleb128 0x9
 28579 03d7 BB000000 		.4byte	0xbb
 28580 03db E6030000 		.4byte	0x3e6
 28581 03df 0A       		.uleb128 0xa
 28582 03e0 18010000 		.4byte	0x118
 28583 03e4 02       		.byte	0x2
 28584 03e5 00       		.byte	0
 28585 03e6 0E       		.uleb128 0xe
 28586 03e7 E20B0000 		.4byte	.LASF97
 28587 03eb 28       		.byte	0x28
 28588 03ec 08       		.byte	0x8
 28589 03ed FA       		.byte	0xfa
 28590 03ee 17040000 		.4byte	0x417
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 626


 28591 03f2 0F       		.uleb128 0xf
 28592 03f3 656D6700 		.ascii	"emg\000"
 28593 03f7 08       		.byte	0x8
 28594 03f8 FB       		.byte	0xfb
 28595 03f9 17040000 		.4byte	0x417
 28596 03fd 00       		.byte	0
 28597 03fe 10       		.uleb128 0x10
 28598 03ff 7A0D0000 		.4byte	.LASF98
 28599 0403 08       		.byte	0x8
 28600 0404 FC       		.byte	0xfc
 28601 0405 27040000 		.4byte	0x427
 28602 0409 08       		.byte	0x8
 28603 040a 10       		.uleb128 0x10
 28604 040b DC120000 		.4byte	.LASF99
 28605 040f 08       		.byte	0x8
 28606 0410 FD       		.byte	0xfd
 28607 0411 17040000 		.4byte	0x417
 28608 0415 20       		.byte	0x20
 28609 0416 00       		.byte	0
 28610 0417 09       		.uleb128 0x9
 28611 0418 D3000000 		.4byte	0xd3
 28612 041c 27040000 		.4byte	0x427
 28613 0420 0A       		.uleb128 0xa
 28614 0421 18010000 		.4byte	0x118
 28615 0425 01       		.byte	0x1
 28616 0426 00       		.byte	0
 28617 0427 09       		.uleb128 0x9
 28618 0428 D3000000 		.4byte	0xd3
 28619 042c 37040000 		.4byte	0x437
 28620 0430 0A       		.uleb128 0xa
 28621 0431 18010000 		.4byte	0x118
 28622 0435 05       		.byte	0x5
 28623 0436 00       		.byte	0
 28624 0437 11       		.uleb128 0x11
 28625 0438 3A060000 		.4byte	.LASF100
 28626 043c 04       		.byte	0x4
 28627 043d 08       		.byte	0x8
 28628 043e 0001     		.2byte	0x100
 28629 0440 52040000 		.4byte	0x452
 28630 0444 12       		.uleb128 0x12
 28631 0445 A1050000 		.4byte	.LASF101
 28632 0449 08       		.byte	0x8
 28633 044a 0101     		.2byte	0x101
 28634 044c EB000000 		.4byte	0xeb
 28635 0450 00       		.byte	0
 28636 0451 00       		.byte	0
 28637 0452 11       		.uleb128 0x11
 28638 0453 DF000000 		.4byte	.LASF102
 28639 0457 86       		.byte	0x86
 28640 0458 08       		.byte	0x8
 28641 0459 0801     		.2byte	0x108
 28642 045b 94040000 		.4byte	0x494
 28643 045f 12       		.uleb128 0x12
 28644 0460 05070000 		.4byte	.LASF103
 28645 0464 08       		.byte	0x8
 28646 0465 0901     		.2byte	0x109
 28647 0467 94040000 		.4byte	0x494
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 627


 28648 046b 00       		.byte	0
 28649 046c 12       		.uleb128 0x12
 28650 046d 290F0000 		.4byte	.LASF104
 28651 0471 08       		.byte	0x8
 28652 0472 0A01     		.2byte	0x10a
 28653 0474 C7000000 		.4byte	0xc7
 28654 0478 80       		.byte	0x80
 28655 0479 13       		.uleb128 0x13
 28656 047a 696E6400 		.ascii	"ind\000"
 28657 047e 08       		.byte	0x8
 28658 047f 0B01     		.2byte	0x10b
 28659 0481 C7000000 		.4byte	0xc7
 28660 0485 82       		.byte	0x82
 28661 0486 12       		.uleb128 0x12
 28662 0487 9A020000 		.4byte	.LASF105
 28663 048b 08       		.byte	0x8
 28664 048c 0C01     		.2byte	0x10c
 28665 048e 97000000 		.4byte	0x97
 28666 0492 84       		.byte	0x84
 28667 0493 00       		.byte	0
 28668 0494 09       		.uleb128 0x9
 28669 0495 97000000 		.4byte	0x97
 28670 0499 A4040000 		.4byte	0x4a4
 28671 049d 0A       		.uleb128 0xa
 28672 049e 18010000 		.4byte	0x118
 28673 04a2 7F       		.byte	0x7f
 28674 04a3 00       		.byte	0
 28675 04a4 11       		.uleb128 0x11
 28676 04a5 C2030000 		.4byte	.LASF106
 28677 04a9 70       		.byte	0x70
 28678 04aa 08       		.byte	0x8
 28679 04ab 1501     		.2byte	0x115
 28680 04ad 41050000 		.4byte	0x541
 28681 04b1 12       		.uleb128 0x12
 28682 04b2 09000000 		.4byte	.LASF107
 28683 04b6 08       		.byte	0x8
 28684 04b7 1601     		.2byte	0x116
 28685 04b9 41050000 		.4byte	0x541
 28686 04bd 00       		.byte	0
 28687 04be 12       		.uleb128 0x12
 28688 04bf 53020000 		.4byte	.LASF108
 28689 04c3 08       		.byte	0x8
 28690 04c4 1701     		.2byte	0x117
 28691 04c6 51050000 		.4byte	0x551
 28692 04ca 08       		.byte	0x8
 28693 04cb 12       		.uleb128 0x12
 28694 04cc CB0D0000 		.4byte	.LASF109
 28695 04d0 08       		.byte	0x8
 28696 04d1 1801     		.2byte	0x118
 28697 04d3 61050000 		.4byte	0x561
 28698 04d7 30       		.byte	0x30
 28699 04d8 12       		.uleb128 0x12
 28700 04d9 B6010000 		.4byte	.LASF110
 28701 04dd 08       		.byte	0x8
 28702 04de 1901     		.2byte	0x119
 28703 04e0 AF000000 		.4byte	0xaf
 28704 04e4 40       		.byte	0x40
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 628


 28705 04e5 12       		.uleb128 0x12
 28706 04e6 0E160000 		.4byte	.LASF111
 28707 04ea 08       		.byte	0x8
 28708 04eb 1A01     		.2byte	0x11a
 28709 04ed AF000000 		.4byte	0xaf
 28710 04f1 44       		.byte	0x44
 28711 04f2 12       		.uleb128 0x12
 28712 04f3 FA000000 		.4byte	.LASF112
 28713 04f7 08       		.byte	0x8
 28714 04f8 1B01     		.2byte	0x11b
 28715 04fa AF000000 		.4byte	0xaf
 28716 04fe 48       		.byte	0x48
 28717 04ff 12       		.uleb128 0x12
 28718 0500 EE080000 		.4byte	.LASF113
 28719 0504 08       		.byte	0x8
 28720 0505 1C01     		.2byte	0x11c
 28721 0507 AF000000 		.4byte	0xaf
 28722 050b 4C       		.byte	0x4c
 28723 050c 12       		.uleb128 0x12
 28724 050d 42000000 		.4byte	.LASF114
 28725 0511 08       		.byte	0x8
 28726 0512 1D01     		.2byte	0x11d
 28727 0514 AF000000 		.4byte	0xaf
 28728 0518 50       		.byte	0x50
 28729 0519 12       		.uleb128 0x12
 28730 051a 00030000 		.4byte	.LASF115
 28731 051e 08       		.byte	0x8
 28732 051f 1E01     		.2byte	0x11e
 28733 0521 41050000 		.4byte	0x541
 28734 0525 54       		.byte	0x54
 28735 0526 12       		.uleb128 0x12
 28736 0527 270E0000 		.4byte	.LASF116
 28737 052b 08       		.byte	0x8
 28738 052c 1F01     		.2byte	0x11f
 28739 052e 41050000 		.4byte	0x541
 28740 0532 5C       		.byte	0x5c
 28741 0533 12       		.uleb128 0x12
 28742 0534 9F030000 		.4byte	.LASF117
 28743 0538 08       		.byte	0x8
 28744 0539 2001     		.2byte	0x120
 28745 053b 71050000 		.4byte	0x571
 28746 053f 64       		.byte	0x64
 28747 0540 00       		.byte	0
 28748 0541 09       		.uleb128 0x9
 28749 0542 AF000000 		.4byte	0xaf
 28750 0546 51050000 		.4byte	0x551
 28751 054a 0A       		.uleb128 0xa
 28752 054b 18010000 		.4byte	0x118
 28753 054f 01       		.byte	0x1
 28754 0550 00       		.byte	0
 28755 0551 09       		.uleb128 0x9
 28756 0552 AF000000 		.4byte	0xaf
 28757 0556 61050000 		.4byte	0x561
 28758 055a 0A       		.uleb128 0xa
 28759 055b 18010000 		.4byte	0x118
 28760 055f 09       		.byte	0x9
 28761 0560 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 629


 28762 0561 09       		.uleb128 0x9
 28763 0562 AF000000 		.4byte	0xaf
 28764 0566 71050000 		.4byte	0x571
 28765 056a 0A       		.uleb128 0xa
 28766 056b 18010000 		.4byte	0x118
 28767 056f 03       		.byte	0x3
 28768 0570 00       		.byte	0
 28769 0571 09       		.uleb128 0x9
 28770 0572 97000000 		.4byte	0x97
 28771 0576 81050000 		.4byte	0x581
 28772 057a 0A       		.uleb128 0xa
 28773 057b 18010000 		.4byte	0x118
 28774 057f 0B       		.byte	0xb
 28775 0580 00       		.byte	0
 28776 0581 11       		.uleb128 0x11
 28777 0582 AC060000 		.4byte	.LASF118
 28778 0586 10       		.byte	0x10
 28779 0587 08       		.byte	0x8
 28780 0588 2701     		.2byte	0x127
 28781 058a 10060000 		.4byte	0x610
 28782 058e 13       		.uleb128 0x13
 28783 058f 696400   		.ascii	"id\000"
 28784 0592 08       		.byte	0x8
 28785 0593 2801     		.2byte	0x128
 28786 0595 97000000 		.4byte	0x97
 28787 0599 00       		.byte	0
 28788 059a 12       		.uleb128 0x12
 28789 059b 0A130000 		.4byte	.LASF119
 28790 059f 08       		.byte	0x8
 28791 05a0 2901     		.2byte	0x129
 28792 05a2 10060000 		.4byte	0x610
 28793 05a6 01       		.byte	0x1
 28794 05a7 12       		.uleb128 0x12
 28795 05a8 86130000 		.4byte	.LASF120
 28796 05ac 08       		.byte	0x8
 28797 05ad 2A01     		.2byte	0x12a
 28798 05af 10060000 		.4byte	0x610
 28799 05b3 04       		.byte	0x4
 28800 05b4 12       		.uleb128 0x12
 28801 05b5 44050000 		.4byte	.LASF121
 28802 05b9 08       		.byte	0x8
 28803 05ba 2B01     		.2byte	0x12b
 28804 05bc 97000000 		.4byte	0x97
 28805 05c0 07       		.byte	0x7
 28806 05c1 12       		.uleb128 0x12
 28807 05c2 6E030000 		.4byte	.LASF122
 28808 05c6 08       		.byte	0x8
 28809 05c7 2C01     		.2byte	0x12c
 28810 05c9 97000000 		.4byte	0x97
 28811 05cd 08       		.byte	0x8
 28812 05ce 12       		.uleb128 0x12
 28813 05cf E5020000 		.4byte	.LASF123
 28814 05d3 08       		.byte	0x8
 28815 05d4 2D01     		.2byte	0x12d
 28816 05d6 97000000 		.4byte	0x97
 28817 05da 09       		.byte	0x9
 28818 05db 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 630


 28819 05dc CB140000 		.4byte	.LASF124
 28820 05e0 08       		.byte	0x8
 28821 05e1 2E01     		.2byte	0x12e
 28822 05e3 97000000 		.4byte	0x97
 28823 05e7 0A       		.byte	0xa
 28824 05e8 12       		.uleb128 0x12
 28825 05e9 8F140000 		.4byte	.LASF125
 28826 05ed 08       		.byte	0x8
 28827 05ee 2F01     		.2byte	0x12f
 28828 05f0 97000000 		.4byte	0x97
 28829 05f4 0B       		.byte	0xb
 28830 05f5 12       		.uleb128 0x12
 28831 05f6 5A110000 		.4byte	.LASF126
 28832 05fa 08       		.byte	0x8
 28833 05fb 3001     		.2byte	0x130
 28834 05fd 97000000 		.4byte	0x97
 28835 0601 0C       		.byte	0xc
 28836 0602 12       		.uleb128 0x12
 28837 0603 9F030000 		.4byte	.LASF117
 28838 0607 08       		.byte	0x8
 28839 0608 3101     		.2byte	0x131
 28840 060a 10060000 		.4byte	0x610
 28841 060e 0D       		.byte	0xd
 28842 060f 00       		.byte	0
 28843 0610 09       		.uleb128 0x9
 28844 0611 97000000 		.4byte	0x97
 28845 0615 20060000 		.4byte	0x620
 28846 0619 0A       		.uleb128 0xa
 28847 061a 18010000 		.4byte	0x118
 28848 061e 02       		.byte	0x2
 28849 061f 00       		.byte	0
 28850 0620 11       		.uleb128 0x11
 28851 0621 A6150000 		.4byte	.LASF127
 28852 0625 70       		.byte	0x70
 28853 0626 08       		.byte	0x8
 28854 0627 3801     		.2byte	0x138
 28855 0629 9A070000 		.4byte	0x79a
 28856 062d 13       		.uleb128 0x13
 28857 062e 6B5F7000 		.ascii	"k_p\000"
 28858 0632 08       		.byte	0x8
 28859 0633 3901     		.2byte	0x139
 28860 0635 D3000000 		.4byte	0xd3
 28861 0639 00       		.byte	0
 28862 063a 13       		.uleb128 0x13
 28863 063b 6B5F6900 		.ascii	"k_i\000"
 28864 063f 08       		.byte	0x8
 28865 0640 3A01     		.2byte	0x13a
 28866 0642 D3000000 		.4byte	0xd3
 28867 0646 04       		.byte	0x4
 28868 0647 13       		.uleb128 0x13
 28869 0648 6B5F6400 		.ascii	"k_d\000"
 28870 064c 08       		.byte	0x8
 28871 064d 3B01     		.2byte	0x13b
 28872 064f D3000000 		.4byte	0xd3
 28873 0653 08       		.byte	0x8
 28874 0654 12       		.uleb128 0x12
 28875 0655 41100000 		.4byte	.LASF128
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 631


 28876 0659 08       		.byte	0x8
 28877 065a 3C01     		.2byte	0x13c
 28878 065c D3000000 		.4byte	0xd3
 28879 0660 0C       		.byte	0xc
 28880 0661 12       		.uleb128 0x12
 28881 0662 5A060000 		.4byte	.LASF129
 28882 0666 08       		.byte	0x8
 28883 0667 3D01     		.2byte	0x13d
 28884 0669 D3000000 		.4byte	0xd3
 28885 066d 10       		.byte	0x10
 28886 066e 12       		.uleb128 0x12
 28887 066f 34060000 		.4byte	.LASF130
 28888 0673 08       		.byte	0x8
 28889 0674 3E01     		.2byte	0x13e
 28890 0676 D3000000 		.4byte	0xd3
 28891 067a 14       		.byte	0x14
 28892 067b 12       		.uleb128 0x12
 28893 067c 32140000 		.4byte	.LASF131
 28894 0680 08       		.byte	0x8
 28895 0681 3F01     		.2byte	0x13f
 28896 0683 D3000000 		.4byte	0xd3
 28897 0687 18       		.byte	0x18
 28898 0688 12       		.uleb128 0x12
 28899 0689 EF060000 		.4byte	.LASF132
 28900 068d 08       		.byte	0x8
 28901 068e 4001     		.2byte	0x140
 28902 0690 D3000000 		.4byte	0xd3
 28903 0694 1C       		.byte	0x1c
 28904 0695 12       		.uleb128 0x12
 28905 0696 CC120000 		.4byte	.LASF133
 28906 069a 08       		.byte	0x8
 28907 069b 4101     		.2byte	0x141
 28908 069d D3000000 		.4byte	0xd3
 28909 06a1 20       		.byte	0x20
 28910 06a2 12       		.uleb128 0x12
 28911 06a3 0C070000 		.4byte	.LASF134
 28912 06a7 08       		.byte	0x8
 28913 06a8 4201     		.2byte	0x142
 28914 06aa D3000000 		.4byte	0xd3
 28915 06ae 24       		.byte	0x24
 28916 06af 12       		.uleb128 0x12
 28917 06b0 ED070000 		.4byte	.LASF135
 28918 06b4 08       		.byte	0x8
 28919 06b5 4301     		.2byte	0x143
 28920 06b7 D3000000 		.4byte	0xd3
 28921 06bb 28       		.byte	0x28
 28922 06bc 12       		.uleb128 0x12
 28923 06bd BD160000 		.4byte	.LASF136
 28924 06c1 08       		.byte	0x8
 28925 06c2 4401     		.2byte	0x144
 28926 06c4 D3000000 		.4byte	0xd3
 28927 06c8 2C       		.byte	0x2c
 28928 06c9 12       		.uleb128 0x12
 28929 06ca 0A090000 		.4byte	.LASF137
 28930 06ce 08       		.byte	0x8
 28931 06cf 4501     		.2byte	0x145
 28932 06d1 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 632


 28933 06d5 30       		.byte	0x30
 28934 06d6 12       		.uleb128 0x12
 28935 06d7 1B140000 		.4byte	.LASF138
 28936 06db 08       		.byte	0x8
 28937 06dc 4601     		.2byte	0x146
 28938 06de 97000000 		.4byte	0x97
 28939 06e2 31       		.byte	0x31
 28940 06e3 12       		.uleb128 0x12
 28941 06e4 61100000 		.4byte	.LASF139
 28942 06e8 08       		.byte	0x8
 28943 06e9 4701     		.2byte	0x147
 28944 06eb 97000000 		.4byte	0x97
 28945 06ef 32       		.byte	0x32
 28946 06f0 12       		.uleb128 0x12
 28947 06f1 C3150000 		.4byte	.LASF140
 28948 06f5 08       		.byte	0x8
 28949 06f6 4801     		.2byte	0x148
 28950 06f8 97000000 		.4byte	0x97
 28951 06fc 33       		.byte	0x33
 28952 06fd 12       		.uleb128 0x12
 28953 06fe 6A010000 		.4byte	.LASF141
 28954 0702 08       		.byte	0x8
 28955 0703 4901     		.2byte	0x149
 28956 0705 D3000000 		.4byte	0xd3
 28957 0709 34       		.byte	0x34
 28958 070a 12       		.uleb128 0x12
 28959 070b 79060000 		.4byte	.LASF142
 28960 070f 08       		.byte	0x8
 28961 0710 4A01     		.2byte	0x14a
 28962 0712 D3000000 		.4byte	0xd3
 28963 0716 38       		.byte	0x38
 28964 0717 12       		.uleb128 0x12
 28965 0718 500B0000 		.4byte	.LASF143
 28966 071c 08       		.byte	0x8
 28967 071d 4B01     		.2byte	0x14b
 28968 071f D3000000 		.4byte	0xd3
 28969 0723 3C       		.byte	0x3c
 28970 0724 12       		.uleb128 0x12
 28971 0725 C0050000 		.4byte	.LASF144
 28972 0729 08       		.byte	0x8
 28973 072a 4C01     		.2byte	0x14c
 28974 072c D3000000 		.4byte	0xd3
 28975 0730 40       		.byte	0x40
 28976 0731 12       		.uleb128 0x12
 28977 0732 AA010000 		.4byte	.LASF145
 28978 0736 08       		.byte	0x8
 28979 0737 4D01     		.2byte	0x14d
 28980 0739 9A070000 		.4byte	0x79a
 28981 073d 44       		.byte	0x44
 28982 073e 12       		.uleb128 0x12
 28983 073f 53160000 		.4byte	.LASF146
 28984 0743 08       		.byte	0x8
 28985 0744 4E01     		.2byte	0x14e
 28986 0746 C7000000 		.4byte	0xc7
 28987 074a 5C       		.byte	0x5c
 28988 074b 12       		.uleb128 0x12
 28989 074c 57090000 		.4byte	.LASF147
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 633


 28990 0750 08       		.byte	0x8
 28991 0751 4F01     		.2byte	0x14f
 28992 0753 97000000 		.4byte	0x97
 28993 0757 5E       		.byte	0x5e
 28994 0758 12       		.uleb128 0x12
 28995 0759 990C0000 		.4byte	.LASF148
 28996 075d 08       		.byte	0x8
 28997 075e 5001     		.2byte	0x150
 28998 0760 97000000 		.4byte	0x97
 28999 0764 5F       		.byte	0x5f
 29000 0765 12       		.uleb128 0x12
 29001 0766 68050000 		.4byte	.LASF149
 29002 076a 08       		.byte	0x8
 29003 076b 5101     		.2byte	0x151
 29004 076d 97000000 		.4byte	0x97
 29005 0771 60       		.byte	0x60
 29006 0772 12       		.uleb128 0x12
 29007 0773 23060000 		.4byte	.LASF150
 29008 0777 08       		.byte	0x8
 29009 0778 5201     		.2byte	0x152
 29010 077a 97000000 		.4byte	0x97
 29011 077e 61       		.byte	0x61
 29012 077f 12       		.uleb128 0x12
 29013 0780 25050000 		.4byte	.LASF151
 29014 0784 08       		.byte	0x8
 29015 0785 5301     		.2byte	0x153
 29016 0787 97000000 		.4byte	0x97
 29017 078b 62       		.byte	0x62
 29018 078c 12       		.uleb128 0x12
 29019 078d 9F030000 		.4byte	.LASF117
 29020 0791 08       		.byte	0x8
 29021 0792 5401     		.2byte	0x154
 29022 0794 AA070000 		.4byte	0x7aa
 29023 0798 63       		.byte	0x63
 29024 0799 00       		.byte	0
 29025 079a 09       		.uleb128 0x9
 29026 079b EB000000 		.4byte	0xeb
 29027 079f AA070000 		.4byte	0x7aa
 29028 07a3 0A       		.uleb128 0xa
 29029 07a4 18010000 		.4byte	0x118
 29030 07a8 05       		.byte	0x5
 29031 07a9 00       		.byte	0
 29032 07aa 09       		.uleb128 0x9
 29033 07ab 97000000 		.4byte	0x97
 29034 07af BA070000 		.4byte	0x7ba
 29035 07b3 0A       		.uleb128 0xa
 29036 07b4 18010000 		.4byte	0x118
 29037 07b8 0C       		.byte	0xc
 29038 07b9 00       		.byte	0
 29039 07ba 11       		.uleb128 0x11
 29040 07bb 3C150000 		.4byte	.LASF152
 29041 07bf 30       		.byte	0x30
 29042 07c0 08       		.byte	0x8
 29043 07c1 5B01     		.2byte	0x15b
 29044 07c3 3D080000 		.4byte	0x83d
 29045 07c7 12       		.uleb128 0x12
 29046 07c8 320B0000 		.4byte	.LASF153
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 634


 29047 07cc 08       		.byte	0x8
 29048 07cd 5C01     		.2byte	0x15c
 29049 07cf 3D080000 		.4byte	0x83d
 29050 07d3 00       		.byte	0
 29051 07d4 13       		.uleb128 0x13
 29052 07d5 72657300 		.ascii	"res\000"
 29053 07d9 08       		.byte	0x8
 29054 07da 5D01     		.2byte	0x15d
 29055 07dc 10060000 		.4byte	0x610
 29056 07e0 05       		.byte	0x5
 29057 07e1 12       		.uleb128 0x12
 29058 07e2 19090000 		.4byte	.LASF154
 29059 07e6 08       		.byte	0x8
 29060 07e7 5E01     		.2byte	0x15e
 29061 07e9 C6030000 		.4byte	0x3c6
 29062 07ed 08       		.byte	0x8
 29063 07ee 12       		.uleb128 0x12
 29064 07ef 53060000 		.4byte	.LASF155
 29065 07f3 08       		.byte	0x8
 29066 07f4 5F01     		.2byte	0x15f
 29067 07f6 4D080000 		.4byte	0x84d
 29068 07fa 14       		.byte	0x14
 29069 07fb 12       		.uleb128 0x12
 29070 07fc 700E0000 		.4byte	.LASF156
 29071 0800 08       		.byte	0x8
 29072 0801 6001     		.2byte	0x160
 29073 0803 97000000 		.4byte	0x97
 29074 0807 20       		.byte	0x20
 29075 0808 12       		.uleb128 0x12
 29076 0809 A0020000 		.4byte	.LASF157
 29077 080d 08       		.byte	0x8
 29078 080e 6101     		.2byte	0x161
 29079 0810 10060000 		.4byte	0x610
 29080 0814 21       		.byte	0x21
 29081 0815 12       		.uleb128 0x12
 29082 0816 B80D0000 		.4byte	.LASF158
 29083 081a 08       		.byte	0x8
 29084 081b 6201     		.2byte	0x162
 29085 081d BB000000 		.4byte	0xbb
 29086 0821 24       		.byte	0x24
 29087 0822 12       		.uleb128 0x12
 29088 0823 81110000 		.4byte	.LASF159
 29089 0827 08       		.byte	0x8
 29090 0828 6301     		.2byte	0x163
 29091 082a D6030000 		.4byte	0x3d6
 29092 082e 25       		.byte	0x25
 29093 082f 12       		.uleb128 0x12
 29094 0830 9F030000 		.4byte	.LASF117
 29095 0834 08       		.byte	0x8
 29096 0835 6401     		.2byte	0x164
 29097 0837 5D080000 		.4byte	0x85d
 29098 083b 28       		.byte	0x28
 29099 083c 00       		.byte	0
 29100 083d 09       		.uleb128 0x9
 29101 083e 97000000 		.4byte	0x97
 29102 0842 4D080000 		.4byte	0x84d
 29103 0846 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 635


 29104 0847 18010000 		.4byte	0x118
 29105 084b 04       		.byte	0x4
 29106 084c 00       		.byte	0
 29107 084d 09       		.uleb128 0x9
 29108 084e DF000000 		.4byte	0xdf
 29109 0852 5D080000 		.4byte	0x85d
 29110 0856 0A       		.uleb128 0xa
 29111 0857 18010000 		.4byte	0x118
 29112 085b 02       		.byte	0x2
 29113 085c 00       		.byte	0
 29114 085d 09       		.uleb128 0x9
 29115 085e 97000000 		.4byte	0x97
 29116 0862 6D080000 		.4byte	0x86d
 29117 0866 0A       		.uleb128 0xa
 29118 0867 18010000 		.4byte	0x118
 29119 086b 07       		.byte	0x7
 29120 086c 00       		.byte	0
 29121 086d 11       		.uleb128 0x11
 29122 086e 4C020000 		.4byte	.LASF160
 29123 0872 10       		.byte	0x10
 29124 0873 08       		.byte	0x8
 29125 0874 6B01     		.2byte	0x16b
 29126 0876 BC080000 		.4byte	0x8bc
 29127 087a 12       		.uleb128 0x12
 29128 087b 980D0000 		.4byte	.LASF161
 29129 087f 08       		.byte	0x8
 29130 0880 6C01     		.2byte	0x16c
 29131 0882 BC080000 		.4byte	0x8bc
 29132 0886 00       		.byte	0
 29133 0887 12       		.uleb128 0x12
 29134 0888 18160000 		.4byte	.LASF162
 29135 088c 08       		.byte	0x8
 29136 088d 6D01     		.2byte	0x16d
 29137 088f 41050000 		.4byte	0x541
 29138 0893 04       		.byte	0x4
 29139 0894 12       		.uleb128 0x12
 29140 0895 8D060000 		.4byte	.LASF163
 29141 0899 08       		.byte	0x8
 29142 089a 6E01     		.2byte	0x16e
 29143 089c CC080000 		.4byte	0x8cc
 29144 08a0 0C       		.byte	0xc
 29145 08a1 12       		.uleb128 0x12
 29146 08a2 9B110000 		.4byte	.LASF164
 29147 08a6 08       		.byte	0x8
 29148 08a7 6F01     		.2byte	0x16f
 29149 08a9 97000000 		.4byte	0x97
 29150 08ad 0E       		.byte	0xe
 29151 08ae 12       		.uleb128 0x12
 29152 08af 10140000 		.4byte	.LASF165
 29153 08b3 08       		.byte	0x8
 29154 08b4 7001     		.2byte	0x170
 29155 08b6 97000000 		.4byte	0x97
 29156 08ba 0F       		.byte	0xf
 29157 08bb 00       		.byte	0
 29158 08bc 09       		.uleb128 0x9
 29159 08bd A3000000 		.4byte	0xa3
 29160 08c1 CC080000 		.4byte	0x8cc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 636


 29161 08c5 0A       		.uleb128 0xa
 29162 08c6 18010000 		.4byte	0x118
 29163 08ca 01       		.byte	0x1
 29164 08cb 00       		.byte	0
 29165 08cc 09       		.uleb128 0x9
 29166 08cd 97000000 		.4byte	0x97
 29167 08d1 DC080000 		.4byte	0x8dc
 29168 08d5 0A       		.uleb128 0xa
 29169 08d6 18010000 		.4byte	0x118
 29170 08da 01       		.byte	0x1
 29171 08db 00       		.byte	0
 29172 08dc 11       		.uleb128 0x11
 29173 08dd E10C0000 		.4byte	.LASF166
 29174 08e1 20       		.byte	0x20
 29175 08e2 08       		.byte	0x8
 29176 08e3 7701     		.2byte	0x177
 29177 08e5 1E090000 		.4byte	0x91e
 29178 08e9 12       		.uleb128 0x12
 29179 08ea 1A030000 		.4byte	.LASF167
 29180 08ee 08       		.byte	0x8
 29181 08ef 7801     		.2byte	0x178
 29182 08f1 97000000 		.4byte	0x97
 29183 08f5 00       		.byte	0
 29184 08f6 12       		.uleb128 0x12
 29185 08f7 920E0000 		.4byte	.LASF168
 29186 08fb 08       		.byte	0x8
 29187 08fc 7901     		.2byte	0x179
 29188 08fe 97000000 		.4byte	0x97
 29189 0902 01       		.byte	0x1
 29190 0903 12       		.uleb128 0x12
 29191 0904 A80B0000 		.4byte	.LASF169
 29192 0908 08       		.byte	0x8
 29193 0909 7A01     		.2byte	0x17a
 29194 090b 1E090000 		.4byte	0x91e
 29195 090f 02       		.byte	0x2
 29196 0910 12       		.uleb128 0x12
 29197 0911 9F030000 		.4byte	.LASF117
 29198 0915 08       		.byte	0x8
 29199 0916 7B01     		.2byte	0x17b
 29200 0918 3D080000 		.4byte	0x83d
 29201 091c 1B       		.byte	0x1b
 29202 091d 00       		.byte	0
 29203 091e 09       		.uleb128 0x9
 29204 091f 97000000 		.4byte	0x97
 29205 0923 34090000 		.4byte	0x934
 29206 0927 0A       		.uleb128 0xa
 29207 0928 18010000 		.4byte	0x118
 29208 092c 04       		.byte	0x4
 29209 092d 0A       		.uleb128 0xa
 29210 092e 18010000 		.4byte	0x118
 29211 0932 04       		.byte	0x4
 29212 0933 00       		.byte	0
 29213 0934 11       		.uleb128 0x11
 29214 0935 8E110000 		.4byte	.LASF170
 29215 0939 20       		.byte	0x20
 29216 093a 08       		.byte	0x8
 29217 093b 8201     		.2byte	0x182
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 637


 29218 093d 90090000 		.4byte	0x990
 29219 0941 12       		.uleb128 0x12
 29220 0942 660E0000 		.4byte	.LASF171
 29221 0946 08       		.byte	0x8
 29222 0947 8301     		.2byte	0x183
 29223 0949 90090000 		.4byte	0x990
 29224 094d 00       		.byte	0
 29225 094e 12       		.uleb128 0x12
 29226 094f FD130000 		.4byte	.LASF172
 29227 0953 08       		.byte	0x8
 29228 0954 8401     		.2byte	0x184
 29229 0956 97000000 		.4byte	0x97
 29230 095a 06       		.byte	0x6
 29231 095b 12       		.uleb128 0x12
 29232 095c 52140000 		.4byte	.LASF173
 29233 0960 08       		.byte	0x8
 29234 0961 8501     		.2byte	0x185
 29235 0963 97000000 		.4byte	0x97
 29236 0967 07       		.byte	0x7
 29237 0968 12       		.uleb128 0x12
 29238 0969 BC060000 		.4byte	.LASF174
 29239 096d 08       		.byte	0x8
 29240 096e 8601     		.2byte	0x186
 29241 0970 71050000 		.4byte	0x571
 29242 0974 08       		.byte	0x8
 29243 0975 12       		.uleb128 0x12
 29244 0976 28030000 		.4byte	.LASF175
 29245 097a 08       		.byte	0x8
 29246 097b 8701     		.2byte	0x187
 29247 097d 97000000 		.4byte	0x97
 29248 0981 14       		.byte	0x14
 29249 0982 12       		.uleb128 0x12
 29250 0983 9F030000 		.4byte	.LASF117
 29251 0987 08       		.byte	0x8
 29252 0988 8801     		.2byte	0x188
 29253 098a A0090000 		.4byte	0x9a0
 29254 098e 15       		.byte	0x15
 29255 098f 00       		.byte	0
 29256 0990 09       		.uleb128 0x9
 29257 0991 97000000 		.4byte	0x97
 29258 0995 A0090000 		.4byte	0x9a0
 29259 0999 0A       		.uleb128 0xa
 29260 099a 18010000 		.4byte	0x118
 29261 099e 05       		.byte	0x5
 29262 099f 00       		.byte	0
 29263 09a0 09       		.uleb128 0x9
 29264 09a1 97000000 		.4byte	0x97
 29265 09a5 B0090000 		.4byte	0x9b0
 29266 09a9 0A       		.uleb128 0xa
 29267 09aa 18010000 		.4byte	0x118
 29268 09ae 0A       		.byte	0xa
 29269 09af 00       		.byte	0
 29270 09b0 11       		.uleb128 0x11
 29271 09b1 63110000 		.4byte	.LASF176
 29272 09b5 20       		.byte	0x20
 29273 09b6 08       		.byte	0x8
 29274 09b7 8F01     		.2byte	0x18f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 638


 29275 09b9 E5090000 		.4byte	0x9e5
 29276 09bd 12       		.uleb128 0x12
 29277 09be A9040000 		.4byte	.LASF177
 29278 09c2 08       		.byte	0x8
 29279 09c3 9001     		.2byte	0x190
 29280 09c5 40010000 		.4byte	0x140
 29281 09c9 00       		.byte	0
 29282 09ca 12       		.uleb128 0x12
 29283 09cb 7D030000 		.4byte	.LASF178
 29284 09cf 08       		.byte	0x8
 29285 09d0 9101     		.2byte	0x191
 29286 09d2 6D080000 		.4byte	0x86d
 29287 09d6 08       		.byte	0x8
 29288 09d7 12       		.uleb128 0x12
 29289 09d8 9F030000 		.4byte	.LASF117
 29290 09dc 08       		.byte	0x8
 29291 09dd 9201     		.2byte	0x192
 29292 09df 5D080000 		.4byte	0x85d
 29293 09e3 18       		.byte	0x18
 29294 09e4 00       		.byte	0
 29295 09e5 11       		.uleb128 0x11
 29296 09e6 A00A0000 		.4byte	.LASF179
 29297 09ea 10       		.byte	0x10
 29298 09eb 08       		.byte	0x8
 29299 09ec 9901     		.2byte	0x199
 29300 09ee 340A0000 		.4byte	0xa34
 29301 09f2 12       		.uleb128 0x12
 29302 09f3 49090000 		.4byte	.LASF180
 29303 09f7 08       		.byte	0x8
 29304 09f8 9A01     		.2byte	0x19a
 29305 09fa D3000000 		.4byte	0xd3
 29306 09fe 00       		.byte	0
 29307 09ff 12       		.uleb128 0x12
 29308 0a00 A1160000 		.4byte	.LASF181
 29309 0a04 08       		.byte	0x8
 29310 0a05 9B01     		.2byte	0x19b
 29311 0a07 D3000000 		.4byte	0xd3
 29312 0a0b 04       		.byte	0x4
 29313 0a0c 12       		.uleb128 0x12
 29314 0a0d 97060000 		.4byte	.LASF182
 29315 0a11 08       		.byte	0x8
 29316 0a12 9C01     		.2byte	0x19c
 29317 0a14 D3000000 		.4byte	0xd3
 29318 0a18 08       		.byte	0x8
 29319 0a19 12       		.uleb128 0x12
 29320 0a1a B3070000 		.4byte	.LASF183
 29321 0a1e 08       		.byte	0x8
 29322 0a1f 9D01     		.2byte	0x19d
 29323 0a21 97000000 		.4byte	0x97
 29324 0a25 0C       		.byte	0xc
 29325 0a26 12       		.uleb128 0x12
 29326 0a27 9F030000 		.4byte	.LASF117
 29327 0a2b 08       		.byte	0x8
 29328 0a2c 9E01     		.2byte	0x19e
 29329 0a2e 10060000 		.4byte	0x610
 29330 0a32 0D       		.byte	0xd
 29331 0a33 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 639


 29332 0a34 11       		.uleb128 0x11
 29333 0a35 94120000 		.4byte	.LASF184
 29334 0a39 10       		.byte	0x10
 29335 0a3a 08       		.byte	0x8
 29336 0a3b A501     		.2byte	0x1a5
 29337 0a3d 760A0000 		.4byte	0xa76
 29338 0a41 12       		.uleb128 0x12
 29339 0a42 C6070000 		.4byte	.LASF185
 29340 0a46 08       		.byte	0x8
 29341 0a47 A601     		.2byte	0x1a6
 29342 0a49 A3000000 		.4byte	0xa3
 29343 0a4d 00       		.byte	0
 29344 0a4e 12       		.uleb128 0x12
 29345 0a4f C8110000 		.4byte	.LASF186
 29346 0a53 08       		.byte	0x8
 29347 0a54 A701     		.2byte	0x1a7
 29348 0a56 C7000000 		.4byte	0xc7
 29349 0a5a 02       		.byte	0x2
 29350 0a5b 12       		.uleb128 0x12
 29351 0a5c C1080000 		.4byte	.LASF187
 29352 0a60 08       		.byte	0x8
 29353 0a61 A801     		.2byte	0x1a8
 29354 0a63 BC080000 		.4byte	0x8bc
 29355 0a67 04       		.byte	0x4
 29356 0a68 12       		.uleb128 0x12
 29357 0a69 9F030000 		.4byte	.LASF117
 29358 0a6d 08       		.byte	0x8
 29359 0a6e A901     		.2byte	0x1a9
 29360 0a70 5D080000 		.4byte	0x85d
 29361 0a74 08       		.byte	0x8
 29362 0a75 00       		.byte	0
 29363 0a76 11       		.uleb128 0x11
 29364 0a77 D8010000 		.4byte	.LASF188
 29365 0a7b 10       		.byte	0x10
 29366 0a7c 08       		.byte	0x8
 29367 0a7d B001     		.2byte	0x1b0
 29368 0a7f AB0A0000 		.4byte	0xaab
 29369 0a83 12       		.uleb128 0x12
 29370 0a84 02110000 		.4byte	.LASF189
 29371 0a88 08       		.byte	0x8
 29372 0a89 B101     		.2byte	0x1b1
 29373 0a8b 97000000 		.4byte	0x97
 29374 0a8f 00       		.byte	0
 29375 0a90 12       		.uleb128 0x12
 29376 0a91 720B0000 		.4byte	.LASF190
 29377 0a95 08       		.byte	0x8
 29378 0a96 B201     		.2byte	0x1b2
 29379 0a98 97000000 		.4byte	0x97
 29380 0a9c 01       		.byte	0x1
 29381 0a9d 12       		.uleb128 0x12
 29382 0a9e 9F030000 		.4byte	.LASF117
 29383 0aa2 08       		.byte	0x8
 29384 0aa3 B301     		.2byte	0x1b3
 29385 0aa5 AB0A0000 		.4byte	0xaab
 29386 0aa9 02       		.byte	0x2
 29387 0aaa 00       		.byte	0
 29388 0aab 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 640


 29389 0aac 97000000 		.4byte	0x97
 29390 0ab0 BB0A0000 		.4byte	0xabb
 29391 0ab4 0A       		.uleb128 0xa
 29392 0ab5 18010000 		.4byte	0x118
 29393 0ab9 0D       		.byte	0xd
 29394 0aba 00       		.byte	0
 29395 0abb 11       		.uleb128 0x11
 29396 0abc 000E0000 		.4byte	.LASF191
 29397 0ac0 10       		.byte	0x10
 29398 0ac1 08       		.byte	0x8
 29399 0ac2 BA01     		.2byte	0x1ba
 29400 0ac4 FD0A0000 		.4byte	0xafd
 29401 0ac8 12       		.uleb128 0x12
 29402 0ac9 52150000 		.4byte	.LASF192
 29403 0acd 08       		.byte	0x8
 29404 0ace BB01     		.2byte	0x1bb
 29405 0ad0 D3000000 		.4byte	0xd3
 29406 0ad4 00       		.byte	0
 29407 0ad5 12       		.uleb128 0x12
 29408 0ad6 9E070000 		.4byte	.LASF193
 29409 0ada 08       		.byte	0x8
 29410 0adb BC01     		.2byte	0x1bc
 29411 0add EB000000 		.4byte	0xeb
 29412 0ae1 04       		.byte	0x4
 29413 0ae2 12       		.uleb128 0x12
 29414 0ae3 94100000 		.4byte	.LASF194
 29415 0ae7 08       		.byte	0x8
 29416 0ae8 BD01     		.2byte	0x1bd
 29417 0aea EB000000 		.4byte	0xeb
 29418 0aee 08       		.byte	0x8
 29419 0aef 12       		.uleb128 0x12
 29420 0af0 9F030000 		.4byte	.LASF117
 29421 0af4 08       		.byte	0x8
 29422 0af5 BE01     		.2byte	0x1be
 29423 0af7 FD0A0000 		.4byte	0xafd
 29424 0afb 0C       		.byte	0xc
 29425 0afc 00       		.byte	0
 29426 0afd 09       		.uleb128 0x9
 29427 0afe 97000000 		.4byte	0x97
 29428 0b02 0D0B0000 		.4byte	0xb0d
 29429 0b06 0A       		.uleb128 0xa
 29430 0b07 18010000 		.4byte	0x118
 29431 0b0b 03       		.byte	0x3
 29432 0b0c 00       		.byte	0
 29433 0b0d 11       		.uleb128 0x11
 29434 0b0e 8F020000 		.4byte	.LASF195
 29435 0b12 12       		.byte	0x12
 29436 0b13 08       		.byte	0x8
 29437 0b14 C501     		.2byte	0x1c5
 29438 0b16 4F0B0000 		.4byte	0xb4f
 29439 0b1a 12       		.uleb128 0x12
 29440 0b1b 79160000 		.4byte	.LASF196
 29441 0b1f 08       		.byte	0x8
 29442 0b20 C601     		.2byte	0x1c6
 29443 0b22 97000000 		.4byte	0x97
 29444 0b26 00       		.byte	0
 29445 0b27 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 641


 29446 0b28 DB140000 		.4byte	.LASF197
 29447 0b2c 08       		.byte	0x8
 29448 0b2d C701     		.2byte	0x1c7
 29449 0b2f BC080000 		.4byte	0x8bc
 29450 0b33 02       		.byte	0x2
 29451 0b34 12       		.uleb128 0x12
 29452 0b35 61000000 		.4byte	.LASF198
 29453 0b39 08       		.byte	0x8
 29454 0b3a C801     		.2byte	0x1c8
 29455 0b3c 97000000 		.4byte	0x97
 29456 0b40 06       		.byte	0x6
 29457 0b41 12       		.uleb128 0x12
 29458 0b42 9F030000 		.4byte	.LASF117
 29459 0b46 08       		.byte	0x8
 29460 0b47 C901     		.2byte	0x1c9
 29461 0b49 4F0B0000 		.4byte	0xb4f
 29462 0b4d 07       		.byte	0x7
 29463 0b4e 00       		.byte	0
 29464 0b4f 09       		.uleb128 0x9
 29465 0b50 97000000 		.4byte	0x97
 29466 0b54 5F0B0000 		.4byte	0xb5f
 29467 0b58 0A       		.uleb128 0xa
 29468 0b59 18010000 		.4byte	0x118
 29469 0b5d 09       		.byte	0x9
 29470 0b5e 00       		.byte	0
 29471 0b5f 14       		.uleb128 0x14
 29472 0b60 6D150000 		.4byte	.LASF199
 29473 0b64 F402     		.2byte	0x2f4
 29474 0b66 08       		.byte	0x8
 29475 0b67 D201     		.2byte	0x1d2
 29476 0b69 440C0000 		.4byte	0xc44
 29477 0b6d 12       		.uleb128 0x12
 29478 0b6e 7D0C0000 		.4byte	.LASF200
 29479 0b72 08       		.byte	0x8
 29480 0b73 D401     		.2byte	0x1d4
 29481 0b75 97000000 		.4byte	0x97
 29482 0b79 00       		.byte	0
 29483 0b7a 12       		.uleb128 0x12
 29484 0b7b 9F030000 		.4byte	.LASF117
 29485 0b7f 08       		.byte	0x8
 29486 0b80 D501     		.2byte	0x1d5
 29487 0b82 440C0000 		.4byte	0xc44
 29488 0b86 01       		.byte	0x1
 29489 0b87 13       		.uleb128 0x13
 29490 0b88 636E7400 		.ascii	"cnt\000"
 29491 0b8c 08       		.byte	0x8
 29492 0b8d D601     		.2byte	0x1d6
 29493 0b8f A4040000 		.4byte	0x4a4
 29494 0b93 10       		.byte	0x10
 29495 0b94 12       		.uleb128 0x12
 29496 0b95 56030000 		.4byte	.LASF201
 29497 0b99 08       		.byte	0x8
 29498 0b9a D701     		.2byte	0x1d7
 29499 0b9c 540C0000 		.4byte	0xc54
 29500 0ba0 80       		.byte	0x80
 29501 0ba1 13       		.uleb128 0x13
 29502 0ba2 64657600 		.ascii	"dev\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 642


 29503 0ba6 08       		.byte	0x8
 29504 0ba7 D801     		.2byte	0x1d8
 29505 0ba9 81050000 		.4byte	0x581
 29506 0bad A0       		.byte	0xa0
 29507 0bae 12       		.uleb128 0x12
 29508 0baf E5120000 		.4byte	.LASF202
 29509 0bb3 08       		.byte	0x8
 29510 0bb4 D901     		.2byte	0x1d9
 29511 0bb6 640C0000 		.4byte	0xc64
 29512 0bba B0       		.byte	0xb0
 29513 0bbb 15       		.uleb128 0x15
 29514 0bbc 656E6300 		.ascii	"enc\000"
 29515 0bc0 08       		.byte	0x8
 29516 0bc1 DA01     		.2byte	0x1da
 29517 0bc3 740C0000 		.4byte	0xc74
 29518 0bc7 9001     		.2byte	0x190
 29519 0bc9 15       		.uleb128 0x15
 29520 0bca 656D6700 		.ascii	"emg\000"
 29521 0bce 08       		.byte	0x8
 29522 0bcf DB01     		.2byte	0x1db
 29523 0bd1 6D080000 		.4byte	0x86d
 29524 0bd5 F001     		.2byte	0x1f0
 29525 0bd7 15       		.uleb128 0x15
 29526 0bd8 696D7500 		.ascii	"imu\000"
 29527 0bdc 08       		.byte	0x8
 29528 0bdd DC01     		.2byte	0x1dc
 29529 0bdf DC080000 		.4byte	0x8dc
 29530 0be3 0002     		.2byte	0x200
 29531 0be5 15       		.uleb128 0x15
 29532 0be6 65787000 		.ascii	"exp\000"
 29533 0bea 08       		.byte	0x8
 29534 0beb DD01     		.2byte	0x1dd
 29535 0bed 34090000 		.4byte	0x934
 29536 0bf1 2002     		.2byte	0x220
 29537 0bf3 16       		.uleb128 0x16
 29538 0bf4 A2000000 		.4byte	.LASF203
 29539 0bf8 08       		.byte	0x8
 29540 0bf9 DE01     		.2byte	0x1de
 29541 0bfb 840C0000 		.4byte	0xc84
 29542 0bff 4002     		.2byte	0x240
 29543 0c01 15       		.uleb128 0x15
 29544 0c02 534800   		.ascii	"SH\000"
 29545 0c05 08       		.byte	0x8
 29546 0c06 E001     		.2byte	0x1e0
 29547 0c08 E5090000 		.4byte	0x9e5
 29548 0c0c A002     		.2byte	0x2a0
 29549 0c0e 16       		.uleb128 0x16
 29550 0c0f 4C010000 		.4byte	.LASF204
 29551 0c13 08       		.byte	0x8
 29552 0c14 E101     		.2byte	0x1e1
 29553 0c16 340A0000 		.4byte	0xa34
 29554 0c1a B002     		.2byte	0x2b0
 29555 0c1c 15       		.uleb128 0x15
 29556 0c1d 4D5300   		.ascii	"MS\000"
 29557 0c20 08       		.byte	0x8
 29558 0c21 E201     		.2byte	0x1e2
 29559 0c23 760A0000 		.4byte	0xa76
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 643


 29560 0c27 C002     		.2byte	0x2c0
 29561 0c29 15       		.uleb128 0x15
 29562 0c2a 464200   		.ascii	"FB\000"
 29563 0c2d 08       		.byte	0x8
 29564 0c2e E301     		.2byte	0x1e3
 29565 0c30 BB0A0000 		.4byte	0xabb
 29566 0c34 D002     		.2byte	0x2d0
 29567 0c36 15       		.uleb128 0x15
 29568 0c37 575200   		.ascii	"WR\000"
 29569 0c3a 08       		.byte	0x8
 29570 0c3b E401     		.2byte	0x1e4
 29571 0c3d 0D0B0000 		.4byte	0xb0d
 29572 0c41 E002     		.2byte	0x2e0
 29573 0c43 00       		.byte	0
 29574 0c44 09       		.uleb128 0x9
 29575 0c45 97000000 		.4byte	0x97
 29576 0c49 540C0000 		.4byte	0xc54
 29577 0c4d 0A       		.uleb128 0xa
 29578 0c4e 18010000 		.4byte	0x118
 29579 0c52 0E       		.byte	0xe
 29580 0c53 00       		.byte	0
 29581 0c54 09       		.uleb128 0x9
 29582 0c55 97000000 		.4byte	0x97
 29583 0c59 640C0000 		.4byte	0xc64
 29584 0c5d 0A       		.uleb128 0xa
 29585 0c5e 18010000 		.4byte	0x118
 29586 0c62 1F       		.byte	0x1f
 29587 0c63 00       		.byte	0
 29588 0c64 09       		.uleb128 0x9
 29589 0c65 20060000 		.4byte	0x620
 29590 0c69 740C0000 		.4byte	0xc74
 29591 0c6d 0A       		.uleb128 0xa
 29592 0c6e 18010000 		.4byte	0x118
 29593 0c72 01       		.byte	0x1
 29594 0c73 00       		.byte	0
 29595 0c74 09       		.uleb128 0x9
 29596 0c75 BA070000 		.4byte	0x7ba
 29597 0c79 840C0000 		.4byte	0xc84
 29598 0c7d 0A       		.uleb128 0xa
 29599 0c7e 18010000 		.4byte	0x118
 29600 0c82 01       		.byte	0x1
 29601 0c83 00       		.byte	0
 29602 0c84 09       		.uleb128 0x9
 29603 0c85 B0090000 		.4byte	0x9b0
 29604 0c89 940C0000 		.4byte	0xc94
 29605 0c8d 0A       		.uleb128 0xa
 29606 0c8e 18010000 		.4byte	0x118
 29607 0c92 02       		.byte	0x2
 29608 0c93 00       		.byte	0
 29609 0c94 11       		.uleb128 0x11
 29610 0c95 3E0F0000 		.4byte	.LASF205
 29611 0c99 28       		.byte	0x28
 29612 0c9a 08       		.byte	0x8
 29613 0c9b EF01     		.2byte	0x1ef
 29614 0c9d F00C0000 		.4byte	0xcf0
 29615 0ca1 12       		.uleb128 0x12
 29616 0ca2 9B050000 		.4byte	.LASF206
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 644


 29617 0ca6 08       		.byte	0x8
 29618 0ca7 F001     		.2byte	0x1f0
 29619 0ca9 97000000 		.4byte	0x97
 29620 0cad 00       		.byte	0
 29621 0cae 12       		.uleb128 0x12
 29622 0caf AC030000 		.4byte	.LASF207
 29623 0cb3 08       		.byte	0x8
 29624 0cb4 F101     		.2byte	0x1f1
 29625 0cb6 F00C0000 		.4byte	0xcf0
 29626 0cba 02       		.byte	0x2
 29627 0cbb 12       		.uleb128 0x12
 29628 0cbc 5B0E0000 		.4byte	.LASF208
 29629 0cc0 08       		.byte	0x8
 29630 0cc1 F201     		.2byte	0x1f2
 29631 0cc3 F00C0000 		.4byte	0xcf0
 29632 0cc7 08       		.byte	0x8
 29633 0cc8 12       		.uleb128 0x12
 29634 0cc9 4A0F0000 		.4byte	.LASF209
 29635 0ccd 08       		.byte	0x8
 29636 0cce F301     		.2byte	0x1f3
 29637 0cd0 F00C0000 		.4byte	0xcf0
 29638 0cd4 0E       		.byte	0xe
 29639 0cd5 12       		.uleb128 0x12
 29640 0cd6 30090000 		.4byte	.LASF210
 29641 0cda 08       		.byte	0x8
 29642 0cdb F401     		.2byte	0x1f4
 29643 0cdd 000D0000 		.4byte	0xd00
 29644 0ce1 14       		.byte	0x14
 29645 0ce2 12       		.uleb128 0x12
 29646 0ce3 61020000 		.4byte	.LASF211
 29647 0ce7 08       		.byte	0x8
 29648 0ce8 F501     		.2byte	0x1f5
 29649 0cea C7000000 		.4byte	0xc7
 29650 0cee 24       		.byte	0x24
 29651 0cef 00       		.byte	0
 29652 0cf0 09       		.uleb128 0x9
 29653 0cf1 C7000000 		.4byte	0xc7
 29654 0cf5 000D0000 		.4byte	0xd00
 29655 0cf9 0A       		.uleb128 0xa
 29656 0cfa 18010000 		.4byte	0x118
 29657 0cfe 02       		.byte	0x2
 29658 0cff 00       		.byte	0
 29659 0d00 09       		.uleb128 0x9
 29660 0d01 EB000000 		.4byte	0xeb
 29661 0d05 100D0000 		.4byte	0xd10
 29662 0d09 0A       		.uleb128 0xa
 29663 0d0a 18010000 		.4byte	0x118
 29664 0d0e 03       		.byte	0x3
 29665 0d0f 00       		.byte	0
 29666 0d10 11       		.uleb128 0x11
 29667 0d11 BA040000 		.4byte	.LASF212
 29668 0d15 06       		.byte	0x6
 29669 0d16 08       		.byte	0x8
 29670 0d17 0502     		.2byte	0x205
 29671 0d19 520D0000 		.4byte	0xd52
 29672 0d1d 12       		.uleb128 0x12
 29673 0d1e 98080000 		.4byte	.LASF213
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 645


 29674 0d22 08       		.byte	0x8
 29675 0d23 0602     		.2byte	0x206
 29676 0d25 97000000 		.4byte	0x97
 29677 0d29 00       		.byte	0
 29678 0d2a 12       		.uleb128 0x12
 29679 0d2b C6160000 		.4byte	.LASF214
 29680 0d2f 08       		.byte	0x8
 29681 0d30 0702     		.2byte	0x207
 29682 0d32 97000000 		.4byte	0x97
 29683 0d36 01       		.byte	0x1
 29684 0d37 12       		.uleb128 0x12
 29685 0d38 2A070000 		.4byte	.LASF215
 29686 0d3c 08       		.byte	0x8
 29687 0d3d 0802     		.2byte	0x208
 29688 0d3f C7000000 		.4byte	0xc7
 29689 0d43 02       		.byte	0x2
 29690 0d44 12       		.uleb128 0x12
 29691 0d45 440B0000 		.4byte	.LASF216
 29692 0d49 08       		.byte	0x8
 29693 0d4a 0902     		.2byte	0x209
 29694 0d4c C7000000 		.4byte	0xc7
 29695 0d50 04       		.byte	0x4
 29696 0d51 00       		.byte	0
 29697 0d52 17       		.uleb128 0x17
 29698 0d53 39110000 		.4byte	.LASF416
 29699 0d57 02       		.byte	0x2
 29700 0d58 1403     		.2byte	0x314
 29701 0d5a 8C000000 		.4byte	0x8c
 29702 0d5e 03       		.byte	0x3
 29703 0d5f 7C0D0000 		.4byte	0xd7c
 29704 0d63 18       		.uleb128 0x18
 29705 0d64 95050000 		.4byte	.LASF304
 29706 0d68 02       		.byte	0x2
 29707 0d69 1403     		.2byte	0x314
 29708 0d6b 8C000000 		.4byte	0x8c
 29709 0d6f 19       		.uleb128 0x19
 29710 0d70 75020000 		.4byte	.LASF417
 29711 0d74 02       		.byte	0x2
 29712 0d75 1603     		.2byte	0x316
 29713 0d77 8C000000 		.4byte	0x8c
 29714 0d7b 00       		.byte	0
 29715 0d7c 1A       		.uleb128 0x1a
 29716 0d7d 88120000 		.4byte	.LASF217
 29717 0d81 01       		.byte	0x1
 29718 0d82 3D       		.byte	0x3d
 29719 0d83 00000000 		.4byte	.LFB64
 29720 0d87 1C050000 		.4byte	.LFE64-.LFB64
 29721 0d8b 01       		.uleb128 0x1
 29722 0d8c 9C       		.byte	0x9c
 29723 0d8d 850E0000 		.4byte	0xe85
 29724 0d91 1B       		.uleb128 0x1b
 29725 0d92 30070000 		.4byte	.LASF219
 29726 0d96 01       		.byte	0x1
 29727 0d97 3F       		.byte	0x3f
 29728 0d98 97000000 		.4byte	0x97
 29729 0d9c 02       		.uleb128 0x2
 29730 0d9d 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 646


 29731 0d9e 77       		.sleb128 -9
 29732 0d9f 1C       		.uleb128 0x1c
 29733 0da0 520D0000 		.4byte	0xd52
 29734 0da4 48030000 		.4byte	.LBB12
 29735 0da8 08000000 		.4byte	.LBE12-.LBB12
 29736 0dac 01       		.byte	0x1
 29737 0dad 9C       		.byte	0x9c
 29738 0dae CD0D0000 		.4byte	0xdcd
 29739 0db2 1D       		.uleb128 0x1d
 29740 0db3 630D0000 		.4byte	0xd63
 29741 0db7 02       		.uleb128 0x2
 29742 0db8 91       		.byte	0x91
 29743 0db9 60       		.sleb128 -32
 29744 0dba 1E       		.uleb128 0x1e
 29745 0dbb 48030000 		.4byte	.LBB13
 29746 0dbf 08000000 		.4byte	.LBE13-.LBB13
 29747 0dc3 1F       		.uleb128 0x1f
 29748 0dc4 6F0D0000 		.4byte	0xd6f
 29749 0dc8 02       		.uleb128 0x2
 29750 0dc9 91       		.byte	0x91
 29751 0dca 5C       		.sleb128 -36
 29752 0dcb 00       		.byte	0
 29753 0dcc 00       		.byte	0
 29754 0dcd 1C       		.uleb128 0x1c
 29755 0dce 520D0000 		.4byte	0xd52
 29756 0dd2 66030000 		.4byte	.LBB14
 29757 0dd6 08000000 		.4byte	.LBE14-.LBB14
 29758 0dda 01       		.byte	0x1
 29759 0ddb A8       		.byte	0xa8
 29760 0ddc FB0D0000 		.4byte	0xdfb
 29761 0de0 1D       		.uleb128 0x1d
 29762 0de1 630D0000 		.4byte	0xd63
 29763 0de5 02       		.uleb128 0x2
 29764 0de6 91       		.byte	0x91
 29765 0de7 70       		.sleb128 -16
 29766 0de8 1E       		.uleb128 0x1e
 29767 0de9 66030000 		.4byte	.LBB15
 29768 0ded 08000000 		.4byte	.LBE15-.LBB15
 29769 0df1 1F       		.uleb128 0x1f
 29770 0df2 6F0D0000 		.4byte	0xd6f
 29771 0df6 02       		.uleb128 0x2
 29772 0df7 91       		.byte	0x91
 29773 0df8 58       		.sleb128 -40
 29774 0df9 00       		.byte	0
 29775 0dfa 00       		.byte	0
 29776 0dfb 20       		.uleb128 0x20
 29777 0dfc 520D0000 		.4byte	0xd52
 29778 0e00 A8040000 		.4byte	.LBB16
 29779 0e04 08000000 		.4byte	.LBE16-.LBB16
 29780 0e08 01       		.byte	0x1
 29781 0e09 0401     		.2byte	0x104
 29782 0e0b 2A0E0000 		.4byte	0xe2a
 29783 0e0f 1D       		.uleb128 0x1d
 29784 0e10 630D0000 		.4byte	0xd63
 29785 0e14 02       		.uleb128 0x2
 29786 0e15 91       		.byte	0x91
 29787 0e16 6C       		.sleb128 -20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 647


 29788 0e17 1E       		.uleb128 0x1e
 29789 0e18 A8040000 		.4byte	.LBB17
 29790 0e1c 08000000 		.4byte	.LBE17-.LBB17
 29791 0e20 1F       		.uleb128 0x1f
 29792 0e21 6F0D0000 		.4byte	0xd6f
 29793 0e25 02       		.uleb128 0x2
 29794 0e26 91       		.byte	0x91
 29795 0e27 54       		.sleb128 -44
 29796 0e28 00       		.byte	0
 29797 0e29 00       		.byte	0
 29798 0e2a 20       		.uleb128 0x20
 29799 0e2b 520D0000 		.4byte	0xd52
 29800 0e2f D8040000 		.4byte	.LBB18
 29801 0e33 08000000 		.4byte	.LBE18-.LBB18
 29802 0e37 01       		.byte	0x1
 29803 0e38 2201     		.2byte	0x122
 29804 0e3a 590E0000 		.4byte	0xe59
 29805 0e3e 1D       		.uleb128 0x1d
 29806 0e3f 630D0000 		.4byte	0xd63
 29807 0e43 02       		.uleb128 0x2
 29808 0e44 91       		.byte	0x91
 29809 0e45 68       		.sleb128 -24
 29810 0e46 1E       		.uleb128 0x1e
 29811 0e47 D8040000 		.4byte	.LBB19
 29812 0e4b 08000000 		.4byte	.LBE19-.LBB19
 29813 0e4f 1F       		.uleb128 0x1f
 29814 0e50 6F0D0000 		.4byte	0xd6f
 29815 0e54 02       		.uleb128 0x2
 29816 0e55 91       		.byte	0x91
 29817 0e56 50       		.sleb128 -48
 29818 0e57 00       		.byte	0
 29819 0e58 00       		.byte	0
 29820 0e59 21       		.uleb128 0x21
 29821 0e5a 520D0000 		.4byte	0xd52
 29822 0e5e F0040000 		.4byte	.LBB20
 29823 0e62 08000000 		.4byte	.LBE20-.LBB20
 29824 0e66 01       		.byte	0x1
 29825 0e67 2801     		.2byte	0x128
 29826 0e69 1D       		.uleb128 0x1d
 29827 0e6a 630D0000 		.4byte	0xd63
 29828 0e6e 02       		.uleb128 0x2
 29829 0e6f 91       		.byte	0x91
 29830 0e70 64       		.sleb128 -28
 29831 0e71 1E       		.uleb128 0x1e
 29832 0e72 F0040000 		.4byte	.LBB21
 29833 0e76 08000000 		.4byte	.LBE21-.LBB21
 29834 0e7a 1F       		.uleb128 0x1f
 29835 0e7b 6F0D0000 		.4byte	0xd6f
 29836 0e7f 02       		.uleb128 0x2
 29837 0e80 91       		.byte	0x91
 29838 0e81 4C       		.sleb128 -52
 29839 0e82 00       		.byte	0
 29840 0e83 00       		.byte	0
 29841 0e84 00       		.byte	0
 29842 0e85 22       		.uleb128 0x22
 29843 0e86 00000000 		.4byte	.LASF218
 29844 0e8a 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 648


 29845 0e8b 3601     		.2byte	0x136
 29846 0e8d 00000000 		.4byte	.LFB65
 29847 0e91 22000000 		.4byte	.LFE65-.LFB65
 29848 0e95 01       		.uleb128 0x1
 29849 0e96 9C       		.byte	0x9c
 29850 0e97 AC0E0000 		.4byte	0xeac
 29851 0e9b 23       		.uleb128 0x23
 29852 0e9c 45060000 		.4byte	.LASF220
 29853 0ea0 01       		.byte	0x1
 29854 0ea1 3701     		.2byte	0x137
 29855 0ea3 AC0E0000 		.4byte	0xeac
 29856 0ea7 03       		.uleb128 0x3
 29857 0ea8 91       		.byte	0x91
 29858 0ea9 9C74     		.sleb128 -1508
 29859 0eab 00       		.byte	0
 29860 0eac 09       		.uleb128 0x9
 29861 0ead F9000000 		.4byte	0xf9
 29862 0eb1 BD0E0000 		.4byte	0xebd
 29863 0eb5 24       		.uleb128 0x24
 29864 0eb6 18010000 		.4byte	0x118
 29865 0eba DB05     		.2byte	0x5db
 29866 0ebc 00       		.byte	0
 29867 0ebd 22       		.uleb128 0x22
 29868 0ebe 9E150000 		.4byte	.LASF221
 29869 0ec2 01       		.byte	0x1
 29870 0ec3 4201     		.2byte	0x142
 29871 0ec5 00000000 		.4byte	.LFB66
 29872 0ec9 64010000 		.4byte	.LFE66-.LFB66
 29873 0ecd 01       		.uleb128 0x1
 29874 0ece 9C       		.byte	0x9c
 29875 0ecf 060F0000 		.4byte	0xf06
 29876 0ed3 25       		.uleb128 0x25
 29877 0ed4 EE140000 		.4byte	.LASF224
 29878 0ed8 01       		.byte	0x1
 29879 0ed9 4201     		.2byte	0x142
 29880 0edb A3000000 		.4byte	0xa3
 29881 0edf 04       		.uleb128 0x4
 29882 0ee0 91       		.byte	0x91
 29883 0ee1 B6C47E   		.sleb128 -24010
 29884 0ee4 23       		.uleb128 0x23
 29885 0ee5 45060000 		.4byte	.LASF220
 29886 0ee9 01       		.byte	0x1
 29887 0eea 4301     		.2byte	0x143
 29888 0eec 060F0000 		.4byte	0xf06
 29889 0ef0 03       		.uleb128 0x3
 29890 0ef1 91       		.byte	0x91
 29891 0ef2 D860     		.sleb128 -4008
 29892 0ef4 23       		.uleb128 0x23
 29893 0ef5 FE080000 		.4byte	.LASF222
 29894 0ef9 01       		.byte	0x1
 29895 0efa 4401     		.2byte	0x144
 29896 0efc 170F0000 		.4byte	0xf17
 29897 0f00 04       		.uleb128 0x4
 29898 0f01 91       		.byte	0x91
 29899 0f02 B8C47E   		.sleb128 -24008
 29900 0f05 00       		.byte	0
 29901 0f06 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 649


 29902 0f07 F9000000 		.4byte	0xf9
 29903 0f0b 170F0000 		.4byte	0xf17
 29904 0f0f 24       		.uleb128 0x24
 29905 0f10 18010000 		.4byte	0x118
 29906 0f14 9F0F     		.2byte	0xf9f
 29907 0f16 00       		.byte	0
 29908 0f17 09       		.uleb128 0x9
 29909 0f18 F9000000 		.4byte	0xf9
 29910 0f1c 280F0000 		.4byte	0xf28
 29911 0f20 24       		.uleb128 0x24
 29912 0f21 18010000 		.4byte	0x118
 29913 0f25 1F4E     		.2byte	0x4e1f
 29914 0f27 00       		.byte	0
 29915 0f28 22       		.uleb128 0x22
 29916 0f29 1B020000 		.4byte	.LASF223
 29917 0f2d 01       		.byte	0x1
 29918 0f2e 7401     		.2byte	0x174
 29919 0f30 00000000 		.4byte	.LFB67
 29920 0f34 A4320000 		.4byte	.LFE67-.LFB67
 29921 0f38 01       		.uleb128 0x1
 29922 0f39 9C       		.byte	0x9c
 29923 0f3a CC100000 		.4byte	0x10cc
 29924 0f3e 25       		.uleb128 0x25
 29925 0f3f 0B0E0000 		.4byte	.LASF225
 29926 0f43 01       		.byte	0x1
 29927 0f44 7401     		.2byte	0x174
 29928 0f46 CC100000 		.4byte	0x10cc
 29929 0f4a 03       		.uleb128 0x3
 29930 0f4b 91       		.byte	0x91
 29931 0f4c 9C50     		.sleb128 -6116
 29932 0f4e 25       		.uleb128 0x25
 29933 0f4f 77150000 		.4byte	.LASF226
 29934 0f53 01       		.byte	0x1
 29935 0f54 7401     		.2byte	0x174
 29936 0f56 D2100000 		.4byte	0x10d2
 29937 0f5a 03       		.uleb128 0x3
 29938 0f5b 91       		.byte	0x91
 29939 0f5c 9850     		.sleb128 -6120
 29940 0f5e 25       		.uleb128 0x25
 29941 0f5f B8030000 		.4byte	.LASF227
 29942 0f63 01       		.byte	0x1
 29943 0f64 7501     		.2byte	0x175
 29944 0f66 D2100000 		.4byte	0x10d2
 29945 0f6a 03       		.uleb128 0x3
 29946 0f6b 91       		.byte	0x91
 29947 0f6c 9450     		.sleb128 -6124
 29948 0f6e 25       		.uleb128 0x25
 29949 0f6f 440D0000 		.4byte	.LASF228
 29950 0f73 01       		.byte	0x1
 29951 0f74 7501     		.2byte	0x175
 29952 0f76 D2100000 		.4byte	0x10d2
 29953 0f7a 03       		.uleb128 0x3
 29954 0f7b 91       		.byte	0x91
 29955 0f7c 9050     		.sleb128 -6128
 29956 0f7e 25       		.uleb128 0x25
 29957 0f7f B8140000 		.4byte	.LASF229
 29958 0f83 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 650


 29959 0f84 7601     		.2byte	0x176
 29960 0f86 D2100000 		.4byte	0x10d2
 29961 0f8a 02       		.uleb128 0x2
 29962 0f8b 91       		.byte	0x91
 29963 0f8c 00       		.sleb128 0
 29964 0f8d 25       		.uleb128 0x25
 29965 0f8e 8D080000 		.4byte	.LASF230
 29966 0f92 01       		.byte	0x1
 29967 0f93 7601     		.2byte	0x176
 29968 0f95 D8100000 		.4byte	0x10d8
 29969 0f99 02       		.uleb128 0x2
 29970 0f9a 91       		.byte	0x91
 29971 0f9b 04       		.sleb128 4
 29972 0f9c 25       		.uleb128 0x25
 29973 0f9d 910B0000 		.4byte	.LASF231
 29974 0fa1 01       		.byte	0x1
 29975 0fa2 7701     		.2byte	0x177
 29976 0fa4 D2100000 		.4byte	0x10d2
 29977 0fa8 02       		.uleb128 0x2
 29978 0fa9 91       		.byte	0x91
 29979 0faa 08       		.sleb128 8
 29980 0fab 25       		.uleb128 0x25
 29981 0fac 10090000 		.4byte	.LASF232
 29982 0fb0 01       		.byte	0x1
 29983 0fb1 7701     		.2byte	0x177
 29984 0fb3 D8100000 		.4byte	0x10d8
 29985 0fb7 02       		.uleb128 0x2
 29986 0fb8 91       		.byte	0x91
 29987 0fb9 0C       		.sleb128 12
 29988 0fba 23       		.uleb128 0x23
 29989 0fbb A0060000 		.4byte	.LASF233
 29990 0fbf 01       		.byte	0x1
 29991 0fc0 7A01     		.2byte	0x17a
 29992 0fc2 DE100000 		.4byte	0x10de
 29993 0fc6 03       		.uleb128 0x3
 29994 0fc7 91       		.byte	0x91
 29995 0fc8 E450     		.sleb128 -6044
 29996 0fca 23       		.uleb128 0x23
 29997 0fcb 2C0C0000 		.4byte	.LASF234
 29998 0fcf 01       		.byte	0x1
 29999 0fd0 7B01     		.2byte	0x17b
 30000 0fd2 A3000000 		.4byte	0xa3
 30001 0fd6 02       		.uleb128 0x2
 30002 0fd7 91       		.byte	0x91
 30003 0fd8 60       		.sleb128 -32
 30004 0fd9 26       		.uleb128 0x26
 30005 0fda 6900     		.ascii	"i\000"
 30006 0fdc 01       		.byte	0x1
 30007 0fdd 7E01     		.2byte	0x17e
 30008 0fdf 97000000 		.4byte	0x97
 30009 0fe3 02       		.uleb128 0x2
 30010 0fe4 91       		.byte	0x91
 30011 0fe5 67       		.sleb128 -25
 30012 0fe6 26       		.uleb128 0x26
 30013 0fe7 6A00     		.ascii	"j\000"
 30014 0fe9 01       		.byte	0x1
 30015 0fea 7E01     		.2byte	0x17e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 651


 30016 0fec 97000000 		.4byte	0x97
 30017 0ff0 02       		.uleb128 0x2
 30018 0ff1 91       		.byte	0x91
 30019 0ff2 66       		.sleb128 -26
 30020 0ff3 26       		.uleb128 0x26
 30021 0ff4 69647800 		.ascii	"idx\000"
 30022 0ff8 01       		.byte	0x1
 30023 0ff9 7F01     		.2byte	0x17f
 30024 0ffb 97000000 		.4byte	0x97
 30025 0fff 02       		.uleb128 0x2
 30026 1000 91       		.byte	0x91
 30027 1001 65       		.sleb128 -27
 30028 1002 23       		.uleb128 0x23
 30029 1003 D3120000 		.4byte	.LASF235
 30030 1007 01       		.byte	0x1
 30031 1008 8001     		.2byte	0x180
 30032 100a 97000000 		.4byte	0x97
 30033 100e 02       		.uleb128 0x2
 30034 100f 91       		.byte	0x91
 30035 1010 64       		.sleb128 -28
 30036 1011 26       		.uleb128 0x26
 30037 1012 736F6400 		.ascii	"sod\000"
 30038 1016 01       		.byte	0x1
 30039 1017 8101     		.2byte	0x181
 30040 1019 97000000 		.4byte	0x97
 30041 101d 02       		.uleb128 0x2
 30042 101e 91       		.byte	0x91
 30043 101f 63       		.sleb128 -29
 30044 1020 23       		.uleb128 0x23
 30045 1021 150D0000 		.4byte	.LASF236
 30046 1025 01       		.byte	0x1
 30047 1026 8201     		.2byte	0x182
 30048 1028 97000000 		.4byte	0x97
 30049 102c 02       		.uleb128 0x2
 30050 102d 91       		.byte	0x91
 30051 102e 62       		.sleb128 -30
 30052 102f 23       		.uleb128 0x23
 30053 1030 AC160000 		.4byte	.LASF237
 30054 1034 01       		.byte	0x1
 30055 1035 8301     		.2byte	0x183
 30056 1037 EF100000 		.4byte	0x10ef
 30057 103b 03       		.uleb128 0x3
 30058 103c 91       		.byte	0x91
 30059 103d B050     		.sleb128 -6096
 30060 103f 23       		.uleb128 0x23
 30061 1040 A0140000 		.4byte	.LASF238
 30062 1044 01       		.byte	0x1
 30063 1045 8401     		.2byte	0x184
 30064 1047 EB000000 		.4byte	0xeb
 30065 104b 03       		.uleb128 0x3
 30066 104c 91       		.byte	0x91
 30067 104d AC50     		.sleb128 -6100
 30068 104f 23       		.uleb128 0x23
 30069 1050 64130000 		.4byte	.LASF239
 30070 1054 01       		.byte	0x1
 30071 1055 8501     		.2byte	0x185
 30072 1057 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 652


 30073 105b 03       		.uleb128 0x3
 30074 105c 91       		.byte	0x91
 30075 105d AA50     		.sleb128 -6102
 30076 105f 23       		.uleb128 0x23
 30077 1060 8D0D0000 		.4byte	.LASF240
 30078 1064 01       		.byte	0x1
 30079 1065 8601     		.2byte	0x186
 30080 1067 A3000000 		.4byte	0xa3
 30081 106b 03       		.uleb128 0x3
 30082 106c 91       		.byte	0x91
 30083 106d A850     		.sleb128 -6104
 30084 106f 23       		.uleb128 0x23
 30085 1070 C1140000 		.4byte	.LASF241
 30086 1074 01       		.byte	0x1
 30087 1075 8701     		.2byte	0x187
 30088 1077 D3000000 		.4byte	0xd3
 30089 107b 03       		.uleb128 0x3
 30090 107c 91       		.byte	0x91
 30091 107d A450     		.sleb128 -6108
 30092 107f 23       		.uleb128 0x23
 30093 1080 1E0F0000 		.4byte	.LASF242
 30094 1084 01       		.byte	0x1
 30095 1085 8801     		.2byte	0x188
 30096 1087 AF000000 		.4byte	0xaf
 30097 108b 03       		.uleb128 0x3
 30098 108c 91       		.byte	0x91
 30099 108d A050     		.sleb128 -6112
 30100 108f 23       		.uleb128 0x23
 30101 1090 B70E0000 		.4byte	.LASF243
 30102 1094 01       		.byte	0x1
 30103 1095 8A01     		.2byte	0x18a
 30104 1097 97000000 		.4byte	0x97
 30105 109b 02       		.uleb128 0x2
 30106 109c 91       		.byte	0x91
 30107 109d 5F       		.sleb128 -33
 30108 109e 23       		.uleb128 0x23
 30109 109f 76010000 		.4byte	.LASF244
 30110 10a3 01       		.byte	0x1
 30111 10a4 8B01     		.2byte	0x18b
 30112 10a6 97000000 		.4byte	0x97
 30113 10aa 02       		.uleb128 0x2
 30114 10ab 91       		.byte	0x91
 30115 10ac 5E       		.sleb128 -34
 30116 10ad 23       		.uleb128 0x23
 30117 10ae EE0B0000 		.4byte	.LASF245
 30118 10b2 01       		.byte	0x1
 30119 10b3 8D01     		.2byte	0x18d
 30120 10b5 D2100000 		.4byte	0x10d2
 30121 10b9 02       		.uleb128 0x2
 30122 10ba 91       		.byte	0x91
 30123 10bb 58       		.sleb128 -40
 30124 10bc 23       		.uleb128 0x23
 30125 10bd 0A020000 		.4byte	.LASF246
 30126 10c1 01       		.byte	0x1
 30127 10c2 8E01     		.2byte	0x18e
 30128 10c4 D2100000 		.4byte	0x10d2
 30129 10c8 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 653


 30130 10c9 91       		.byte	0x91
 30131 10ca 54       		.sleb128 -44
 30132 10cb 00       		.byte	0
 30133 10cc 07       		.uleb128 0x7
 30134 10cd 04       		.byte	0x4
 30135 10ce D2100000 		.4byte	0x10d2
 30136 10d2 07       		.uleb128 0x7
 30137 10d3 04       		.byte	0x4
 30138 10d4 97000000 		.4byte	0x97
 30139 10d8 07       		.uleb128 0x7
 30140 10d9 04       		.byte	0x4
 30141 10da 25010000 		.4byte	0x125
 30142 10de 09       		.uleb128 0x9
 30143 10df 97000000 		.4byte	0x97
 30144 10e3 EF100000 		.4byte	0x10ef
 30145 10e7 24       		.uleb128 0x24
 30146 10e8 18010000 		.4byte	0x118
 30147 10ec 6F17     		.2byte	0x176f
 30148 10ee 00       		.byte	0
 30149 10ef 09       		.uleb128 0x9
 30150 10f0 F9000000 		.4byte	0xf9
 30151 10f4 FF100000 		.4byte	0x10ff
 30152 10f8 0A       		.uleb128 0xa
 30153 10f9 18010000 		.4byte	0x118
 30154 10fd 31       		.byte	0x31
 30155 10fe 00       		.byte	0
 30156 10ff 22       		.uleb128 0x22
 30157 1100 B6100000 		.4byte	.LASF247
 30158 1104 01       		.byte	0x1
 30159 1105 7C03     		.2byte	0x37c
 30160 1107 00000000 		.4byte	.LFB68
 30161 110b 3C190000 		.4byte	.LFE68-.LFB68
 30162 110f 01       		.uleb128 0x1
 30163 1110 9C       		.byte	0x9c
 30164 1111 DD120000 		.4byte	0x12dd
 30165 1115 25       		.uleb128 0x25
 30166 1116 98070000 		.4byte	.LASF248
 30167 111a 01       		.byte	0x1
 30168 111b 7C03     		.2byte	0x37c
 30169 111d A3000000 		.4byte	0xa3
 30170 1121 03       		.uleb128 0x3
 30171 1122 91       		.byte	0x91
 30172 1123 EE74     		.sleb128 -1426
 30173 1125 26       		.uleb128 0x26
 30174 1126 6900     		.ascii	"i\000"
 30175 1128 01       		.byte	0x1
 30176 1129 7D03     		.2byte	0x37d
 30177 112b 97000000 		.4byte	0x97
 30178 112f 02       		.uleb128 0x2
 30179 1130 91       		.byte	0x91
 30180 1131 6F       		.sleb128 -17
 30181 1132 26       		.uleb128 0x26
 30182 1133 6A00     		.ascii	"j\000"
 30183 1135 01       		.byte	0x1
 30184 1136 7D03     		.2byte	0x37d
 30185 1138 97000000 		.4byte	0x97
 30186 113c 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 654


 30187 113d 91       		.byte	0x91
 30188 113e 6E       		.sleb128 -18
 30189 113f 26       		.uleb128 0x26
 30190 1140 736F6400 		.ascii	"sod\000"
 30191 1144 01       		.byte	0x1
 30192 1145 7E03     		.2byte	0x37e
 30193 1147 97000000 		.4byte	0x97
 30194 114b 02       		.uleb128 0x2
 30195 114c 91       		.byte	0x91
 30196 114d 6D       		.sleb128 -19
 30197 114e 23       		.uleb128 0x23
 30198 114f D80B0000 		.4byte	.LASF249
 30199 1153 01       		.byte	0x1
 30200 1154 7F03     		.2byte	0x37f
 30201 1156 97000000 		.4byte	0x97
 30202 115a 02       		.uleb128 0x2
 30203 115b 91       		.byte	0x91
 30204 115c 62       		.sleb128 -30
 30205 115d 23       		.uleb128 0x23
 30206 115e 64130000 		.4byte	.LASF239
 30207 1162 01       		.byte	0x1
 30208 1163 8003     		.2byte	0x380
 30209 1165 C7000000 		.4byte	0xc7
 30210 1169 02       		.uleb128 0x2
 30211 116a 91       		.byte	0x91
 30212 116b 60       		.sleb128 -32
 30213 116c 23       		.uleb128 0x23
 30214 116d 8D0D0000 		.4byte	.LASF240
 30215 1171 01       		.byte	0x1
 30216 1172 8103     		.2byte	0x381
 30217 1174 A3000000 		.4byte	0xa3
 30218 1178 02       		.uleb128 0x2
 30219 1179 91       		.byte	0x91
 30220 117a 5E       		.sleb128 -34
 30221 117b 23       		.uleb128 0x23
 30222 117c C1140000 		.4byte	.LASF241
 30223 1180 01       		.byte	0x1
 30224 1181 8203     		.2byte	0x382
 30225 1183 D3000000 		.4byte	0xd3
 30226 1187 02       		.uleb128 0x2
 30227 1188 91       		.byte	0x91
 30228 1189 58       		.sleb128 -40
 30229 118a 23       		.uleb128 0x23
 30230 118b 1E0F0000 		.4byte	.LASF242
 30231 118f 01       		.byte	0x1
 30232 1190 8303     		.2byte	0x383
 30233 1192 AF000000 		.4byte	0xaf
 30234 1196 02       		.uleb128 0x2
 30235 1197 91       		.byte	0x91
 30236 1198 54       		.sleb128 -44
 30237 1199 23       		.uleb128 0x23
 30238 119a A0140000 		.4byte	.LASF238
 30239 119e 01       		.byte	0x1
 30240 119f 8403     		.2byte	0x384
 30241 11a1 EB000000 		.4byte	0xeb
 30242 11a5 02       		.uleb128 0x2
 30243 11a6 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 655


 30244 11a7 50       		.sleb128 -48
 30245 11a8 23       		.uleb128 0x23
 30246 11a9 B70E0000 		.4byte	.LASF243
 30247 11ad 01       		.byte	0x1
 30248 11ae 8603     		.2byte	0x386
 30249 11b0 97000000 		.4byte	0x97
 30250 11b4 02       		.uleb128 0x2
 30251 11b5 91       		.byte	0x91
 30252 11b6 65       		.sleb128 -27
 30253 11b7 23       		.uleb128 0x23
 30254 11b8 76010000 		.4byte	.LASF244
 30255 11bc 01       		.byte	0x1
 30256 11bd 8703     		.2byte	0x387
 30257 11bf 97000000 		.4byte	0x97
 30258 11c3 02       		.uleb128 0x2
 30259 11c4 91       		.byte	0x91
 30260 11c5 64       		.sleb128 -28
 30261 11c6 23       		.uleb128 0x23
 30262 11c7 CE030000 		.4byte	.LASF250
 30263 11cb 01       		.byte	0x1
 30264 11cc 8A03     		.2byte	0x38a
 30265 11ce DD120000 		.4byte	0x12dd
 30266 11d2 02       		.uleb128 0x2
 30267 11d3 91       		.byte	0x91
 30268 11d4 68       		.sleb128 -24
 30269 11d5 23       		.uleb128 0x23
 30270 11d6 0B0E0000 		.4byte	.LASF225
 30271 11da 01       		.byte	0x1
 30272 11db 9203     		.2byte	0x392
 30273 11dd E3120000 		.4byte	0x12e3
 30274 11e1 03       		.uleb128 0x3
 30275 11e2 91       		.byte	0x91
 30276 11e3 847D     		.sleb128 -380
 30277 11e5 23       		.uleb128 0x23
 30278 11e6 77150000 		.4byte	.LASF226
 30279 11ea 01       		.byte	0x1
 30280 11eb F003     		.2byte	0x3f0
 30281 11ed F3120000 		.4byte	0x12f3
 30282 11f1 03       		.uleb128 0x3
 30283 11f2 91       		.byte	0x91
 30284 11f3 B07C     		.sleb128 -464
 30285 11f5 23       		.uleb128 0x23
 30286 11f6 B8030000 		.4byte	.LASF227
 30287 11fa 01       		.byte	0x1
 30288 11fb 0C04     		.2byte	0x40c
 30289 11fd F3120000 		.4byte	0x12f3
 30290 1201 03       		.uleb128 0x3
 30291 1202 91       		.byte	0x91
 30292 1203 DC7B     		.sleb128 -548
 30293 1205 23       		.uleb128 0x23
 30294 1206 440D0000 		.4byte	.LASF228
 30295 120a 01       		.byte	0x1
 30296 120b 2804     		.2byte	0x428
 30297 120d F3120000 		.4byte	0x12f3
 30298 1211 03       		.uleb128 0x3
 30299 1212 91       		.byte	0x91
 30300 1213 887B     		.sleb128 -632
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 656


 30301 1215 23       		.uleb128 0x23
 30302 1216 8D080000 		.4byte	.LASF230
 30303 121a 01       		.byte	0x1
 30304 121b 4504     		.2byte	0x445
 30305 121d 03130000 		.4byte	0x1303
 30306 1221 03       		.uleb128 0x3
 30307 1222 91       		.byte	0x91
 30308 1223 BC78     		.sleb128 -964
 30309 1225 23       		.uleb128 0x23
 30310 1226 FF150000 		.4byte	.LASF251
 30311 122a 01       		.byte	0x1
 30312 122b 6204     		.2byte	0x462
 30313 122d 13130000 		.4byte	0x1313
 30314 1231 03       		.uleb128 0x3
 30315 1232 91       		.byte	0x91
 30316 1233 C477     		.sleb128 -1084
 30317 1235 23       		.uleb128 0x23
 30318 1236 20000000 		.4byte	.LASF252
 30319 123a 01       		.byte	0x1
 30320 123b 6504     		.2byte	0x465
 30321 123d 23130000 		.4byte	0x1323
 30322 1241 03       		.uleb128 0x3
 30323 1242 91       		.byte	0x91
 30324 1243 8C77     		.sleb128 -1140
 30325 1245 23       		.uleb128 0x23
 30326 1246 10090000 		.4byte	.LASF232
 30327 124a 01       		.byte	0x1
 30328 124b 6D04     		.2byte	0x46d
 30329 124d 33130000 		.4byte	0x1333
 30330 1251 03       		.uleb128 0x3
 30331 1252 91       		.byte	0x91
 30332 1253 DC76     		.sleb128 -1188
 30333 1255 23       		.uleb128 0x23
 30334 1256 B8140000 		.4byte	.LASF229
 30335 125a 01       		.byte	0x1
 30336 125b 7C04     		.2byte	0x47c
 30337 125d 540C0000 		.4byte	0xc54
 30338 1261 03       		.uleb128 0x3
 30339 1262 91       		.byte	0x91
 30340 1263 BC76     		.sleb128 -1220
 30341 1265 23       		.uleb128 0x23
 30342 1266 110E0000 		.4byte	.LASF253
 30343 126a 01       		.byte	0x1
 30344 126b 7D04     		.2byte	0x47d
 30345 126d 43130000 		.4byte	0x1343
 30346 1271 03       		.uleb128 0x3
 30347 1272 91       		.byte	0x91
 30348 1273 B076     		.sleb128 -1232
 30349 1275 23       		.uleb128 0x23
 30350 1276 2E0D0000 		.4byte	.LASF254
 30351 127a 01       		.byte	0x1
 30352 127b 7E04     		.2byte	0x47e
 30353 127d 53130000 		.4byte	0x1353
 30354 1281 03       		.uleb128 0x3
 30355 1282 91       		.byte	0x91
 30356 1283 9C76     		.sleb128 -1252
 30357 1285 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 657


 30358 1286 300F0000 		.4byte	.LASF255
 30359 128a 01       		.byte	0x1
 30360 128b 7F04     		.2byte	0x47f
 30361 128d 97000000 		.4byte	0x97
 30362 1291 02       		.uleb128 0x2
 30363 1292 91       		.byte	0x91
 30364 1293 63       		.sleb128 -29
 30365 1294 23       		.uleb128 0x23
 30366 1295 910B0000 		.4byte	.LASF231
 30367 1299 01       		.byte	0x1
 30368 129a 8804     		.2byte	0x488
 30369 129c F3120000 		.4byte	0x12f3
 30370 12a0 03       		.uleb128 0x3
 30371 12a1 91       		.byte	0x91
 30372 12a2 C875     		.sleb128 -1336
 30373 12a4 23       		.uleb128 0x23
 30374 12a5 26160000 		.4byte	.LASF256
 30375 12a9 01       		.byte	0x1
 30376 12aa 9304     		.2byte	0x493
 30377 12ac F3120000 		.4byte	0x12f3
 30378 12b0 03       		.uleb128 0x3
 30379 12b1 91       		.byte	0x91
 30380 12b2 F474     		.sleb128 -1420
 30381 12b4 1E       		.uleb128 0x1e
 30382 12b5 A6180000 		.4byte	.LBB22
 30383 12b9 86000000 		.4byte	.LBE22-.LBB22
 30384 12bd 26       		.uleb128 0x26
 30385 12be 69647800 		.ascii	"idx\000"
 30386 12c2 01       		.byte	0x1
 30387 12c3 FC04     		.2byte	0x4fc
 30388 12c5 97000000 		.4byte	0x97
 30389 12c9 02       		.uleb128 0x2
 30390 12ca 91       		.byte	0x91
 30391 12cb 67       		.sleb128 -25
 30392 12cc 23       		.uleb128 0x23
 30393 12cd FC050000 		.4byte	.LASF257
 30394 12d1 01       		.byte	0x1
 30395 12d2 FC04     		.2byte	0x4fc
 30396 12d4 97000000 		.4byte	0x97
 30397 12d8 02       		.uleb128 0x2
 30398 12d9 91       		.byte	0x91
 30399 12da 66       		.sleb128 -26
 30400 12db 00       		.byte	0
 30401 12dc 00       		.byte	0
 30402 12dd 07       		.uleb128 0x7
 30403 12de 04       		.byte	0x4
 30404 12df 5F0B0000 		.4byte	0xb5f
 30405 12e3 09       		.uleb128 0x9
 30406 12e4 D2100000 		.4byte	0x10d2
 30407 12e8 F3120000 		.4byte	0x12f3
 30408 12ec 0A       		.uleb128 0xa
 30409 12ed 18010000 		.4byte	0x118
 30410 12f1 52       		.byte	0x52
 30411 12f2 00       		.byte	0
 30412 12f3 09       		.uleb128 0x9
 30413 12f4 97000000 		.4byte	0x97
 30414 12f8 03130000 		.4byte	0x1303
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 658


 30415 12fc 0A       		.uleb128 0xa
 30416 12fd 18010000 		.4byte	0x118
 30417 1301 52       		.byte	0x52
 30418 1302 00       		.byte	0
 30419 1303 09       		.uleb128 0x9
 30420 1304 25010000 		.4byte	0x125
 30421 1308 13130000 		.4byte	0x1313
 30422 130c 0A       		.uleb128 0xa
 30423 130d 18010000 		.4byte	0x118
 30424 1311 52       		.byte	0x52
 30425 1312 00       		.byte	0
 30426 1313 09       		.uleb128 0x9
 30427 1314 F9000000 		.4byte	0xf9
 30428 1318 23130000 		.4byte	0x1323
 30429 131c 0A       		.uleb128 0xa
 30430 131d 18010000 		.4byte	0x118
 30431 1321 75       		.byte	0x75
 30432 1322 00       		.byte	0
 30433 1323 09       		.uleb128 0x9
 30434 1324 F9000000 		.4byte	0xf9
 30435 1328 33130000 		.4byte	0x1333
 30436 132c 0A       		.uleb128 0xa
 30437 132d 18010000 		.4byte	0x118
 30438 1331 37       		.byte	0x37
 30439 1332 00       		.byte	0
 30440 1333 09       		.uleb128 0x9
 30441 1334 25010000 		.4byte	0x125
 30442 1338 43130000 		.4byte	0x1343
 30443 133c 0A       		.uleb128 0xa
 30444 133d 18010000 		.4byte	0x118
 30445 1341 0B       		.byte	0xb
 30446 1342 00       		.byte	0
 30447 1343 09       		.uleb128 0x9
 30448 1344 97000000 		.4byte	0x97
 30449 1348 53130000 		.4byte	0x1353
 30450 134c 0A       		.uleb128 0xa
 30451 134d 18010000 		.4byte	0x118
 30452 1351 08       		.byte	0x8
 30453 1352 00       		.byte	0
 30454 1353 09       		.uleb128 0x9
 30455 1354 97000000 		.4byte	0x97
 30456 1358 63130000 		.4byte	0x1363
 30457 135c 0A       		.uleb128 0xa
 30458 135d 18010000 		.4byte	0x118
 30459 1361 11       		.byte	0x11
 30460 1362 00       		.byte	0
 30461 1363 22       		.uleb128 0x22
 30462 1364 62040000 		.4byte	.LASF258
 30463 1368 01       		.byte	0x1
 30464 1369 0D05     		.2byte	0x50d
 30465 136b 00000000 		.4byte	.LFB69
 30466 136f DC140000 		.4byte	.LFE69-.LFB69
 30467 1373 01       		.uleb128 0x1
 30468 1374 9C       		.byte	0x9c
 30469 1375 05140000 		.4byte	0x1405
 30470 1379 25       		.uleb128 0x25
 30471 137a 98070000 		.4byte	.LASF248
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 659


 30472 137e 01       		.byte	0x1
 30473 137f 0D05     		.2byte	0x50d
 30474 1381 A3000000 		.4byte	0xa3
 30475 1385 02       		.uleb128 0x2
 30476 1386 91       		.byte	0x91
 30477 1387 56       		.sleb128 -42
 30478 1388 26       		.uleb128 0x26
 30479 1389 6900     		.ascii	"i\000"
 30480 138b 01       		.byte	0x1
 30481 138c 0F05     		.2byte	0x50f
 30482 138e 97000000 		.4byte	0x97
 30483 1392 02       		.uleb128 0x2
 30484 1393 91       		.byte	0x91
 30485 1394 67       		.sleb128 -25
 30486 1395 26       		.uleb128 0x26
 30487 1396 6A00     		.ascii	"j\000"
 30488 1398 01       		.byte	0x1
 30489 1399 0F05     		.2byte	0x50f
 30490 139b 97000000 		.4byte	0x97
 30491 139f 02       		.uleb128 0x2
 30492 13a0 91       		.byte	0x91
 30493 13a1 66       		.sleb128 -26
 30494 13a2 23       		.uleb128 0x23
 30495 13a3 5F0D0000 		.4byte	.LASF259
 30496 13a7 01       		.byte	0x1
 30497 13a8 1005     		.2byte	0x510
 30498 13aa 97000000 		.4byte	0x97
 30499 13ae 02       		.uleb128 0x2
 30500 13af 91       		.byte	0x91
 30501 13b0 62       		.sleb128 -30
 30502 13b1 23       		.uleb128 0x23
 30503 13b2 A0140000 		.4byte	.LASF238
 30504 13b6 01       		.byte	0x1
 30505 13b7 1105     		.2byte	0x511
 30506 13b9 EB000000 		.4byte	0xeb
 30507 13bd 02       		.uleb128 0x2
 30508 13be 91       		.byte	0x91
 30509 13bf 5C       		.sleb128 -36
 30510 13c0 23       		.uleb128 0x23
 30511 13c1 3B040000 		.4byte	.LASF260
 30512 13c5 01       		.byte	0x1
 30513 13c6 1105     		.2byte	0x511
 30514 13c8 EB000000 		.4byte	0xeb
 30515 13cc 02       		.uleb128 0x2
 30516 13cd 91       		.byte	0x91
 30517 13ce 58       		.sleb128 -40
 30518 13cf 23       		.uleb128 0x23
 30519 13d0 B70E0000 		.4byte	.LASF243
 30520 13d4 01       		.byte	0x1
 30521 13d5 1305     		.2byte	0x513
 30522 13d7 97000000 		.4byte	0x97
 30523 13db 02       		.uleb128 0x2
 30524 13dc 91       		.byte	0x91
 30525 13dd 64       		.sleb128 -28
 30526 13de 23       		.uleb128 0x23
 30527 13df 76010000 		.4byte	.LASF244
 30528 13e3 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 660


 30529 13e4 1405     		.2byte	0x514
 30530 13e6 97000000 		.4byte	0x97
 30531 13ea 02       		.uleb128 0x2
 30532 13eb 91       		.byte	0x91
 30533 13ec 63       		.sleb128 -29
 30534 13ed 1E       		.uleb128 0x1e
 30535 13ee 080B0000 		.4byte	.LBB23
 30536 13f2 26000000 		.4byte	.LBE23-.LBB23
 30537 13f6 26       		.uleb128 0x26
 30538 13f7 6900     		.ascii	"i\000"
 30539 13f9 01       		.byte	0x1
 30540 13fa BB05     		.2byte	0x5bb
 30541 13fc 97000000 		.4byte	0x97
 30542 1400 02       		.uleb128 0x2
 30543 1401 91       		.byte	0x91
 30544 1402 65       		.sleb128 -27
 30545 1403 00       		.byte	0
 30546 1404 00       		.byte	0
 30547 1405 22       		.uleb128 0x22
 30548 1406 9B090000 		.4byte	.LASF261
 30549 140a 01       		.byte	0x1
 30550 140b 6706     		.2byte	0x667
 30551 140d 00000000 		.4byte	.LFB70
 30552 1411 F40D0000 		.4byte	.LFE70-.LFB70
 30553 1415 01       		.uleb128 0x1
 30554 1416 9C       		.byte	0x9c
 30555 1417 94150000 		.4byte	0x1594
 30556 141b 25       		.uleb128 0x25
 30557 141c 98070000 		.4byte	.LASF248
 30558 1420 01       		.byte	0x1
 30559 1421 6706     		.2byte	0x667
 30560 1423 A3000000 		.4byte	0xa3
 30561 1427 03       		.uleb128 0x3
 30562 1428 91       		.byte	0x91
 30563 1429 CE72     		.sleb128 -1714
 30564 142b 23       		.uleb128 0x23
 30565 142c A0060000 		.4byte	.LASF233
 30566 1430 01       		.byte	0x1
 30567 1431 6A06     		.2byte	0x66a
 30568 1433 94150000 		.4byte	0x1594
 30569 1437 03       		.uleb128 0x3
 30570 1438 91       		.byte	0x91
 30571 1439 DC74     		.sleb128 -1444
 30572 143b 23       		.uleb128 0x23
 30573 143c 51130000 		.4byte	.LASF262
 30574 1440 01       		.byte	0x1
 30575 1441 7106     		.2byte	0x671
 30576 1443 A3000000 		.4byte	0xa3
 30577 1447 02       		.uleb128 0x2
 30578 1448 91       		.byte	0x91
 30579 1449 62       		.sleb128 -30
 30580 144a 23       		.uleb128 0x23
 30581 144b 10060000 		.4byte	.LASF263
 30582 144f 01       		.byte	0x1
 30583 1450 7206     		.2byte	0x672
 30584 1452 A3000000 		.4byte	0xa3
 30585 1456 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 661


 30586 1457 91       		.byte	0x91
 30587 1458 6E       		.sleb128 -18
 30588 1459 23       		.uleb128 0x23
 30589 145a BC090000 		.4byte	.LASF264
 30590 145e 01       		.byte	0x1
 30591 145f 7306     		.2byte	0x673
 30592 1461 A3000000 		.4byte	0xa3
 30593 1465 02       		.uleb128 0x2
 30594 1466 91       		.byte	0x91
 30595 1467 60       		.sleb128 -32
 30596 1468 23       		.uleb128 0x23
 30597 1469 3B090000 		.4byte	.LASF265
 30598 146d 01       		.byte	0x1
 30599 146e 7406     		.2byte	0x674
 30600 1470 A3000000 		.4byte	0xa3
 30601 1474 02       		.uleb128 0x2
 30602 1475 91       		.byte	0x91
 30603 1476 5E       		.sleb128 -34
 30604 1477 26       		.uleb128 0x26
 30605 1478 6900     		.ascii	"i\000"
 30606 147a 01       		.byte	0x1
 30607 147b 7C06     		.2byte	0x67c
 30608 147d A3000000 		.4byte	0xa3
 30609 1481 02       		.uleb128 0x2
 30610 1482 91       		.byte	0x91
 30611 1483 6C       		.sleb128 -20
 30612 1484 26       		.uleb128 0x26
 30613 1485 6A00     		.ascii	"j\000"
 30614 1487 01       		.byte	0x1
 30615 1488 7C06     		.2byte	0x67c
 30616 148a A3000000 		.4byte	0xa3
 30617 148e 02       		.uleb128 0x2
 30618 148f 91       		.byte	0x91
 30619 1490 6A       		.sleb128 -22
 30620 1491 26       		.uleb128 0x26
 30621 1492 6B00     		.ascii	"k\000"
 30622 1494 01       		.byte	0x1
 30623 1495 7C06     		.2byte	0x67c
 30624 1497 A3000000 		.4byte	0xa3
 30625 149b 02       		.uleb128 0x2
 30626 149c 91       		.byte	0x91
 30627 149d 68       		.sleb128 -24
 30628 149e 26       		.uleb128 0x26
 30629 149f 6800     		.ascii	"h\000"
 30630 14a1 01       		.byte	0x1
 30631 14a2 7C06     		.2byte	0x67c
 30632 14a4 A3000000 		.4byte	0xa3
 30633 14a8 02       		.uleb128 0x2
 30634 14a9 91       		.byte	0x91
 30635 14aa 66       		.sleb128 -26
 30636 14ab 23       		.uleb128 0x23
 30637 14ac 05060000 		.4byte	.LASF266
 30638 14b0 01       		.byte	0x1
 30639 14b1 7D06     		.2byte	0x67d
 30640 14b3 A3000000 		.4byte	0xa3
 30641 14b7 02       		.uleb128 0x2
 30642 14b8 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 662


 30643 14b9 5C       		.sleb128 -36
 30644 14ba 23       		.uleb128 0x23
 30645 14bb CC0E0000 		.4byte	.LASF267
 30646 14bf 01       		.byte	0x1
 30647 14c0 8006     		.2byte	0x680
 30648 14c2 30010000 		.4byte	0x130
 30649 14c6 03       		.uleb128 0x3
 30650 14c7 91       		.byte	0x91
 30651 14c8 C074     		.sleb128 -1472
 30652 14ca 23       		.uleb128 0x23
 30653 14cb 18130000 		.4byte	.LASF268
 30654 14cf 01       		.byte	0x1
 30655 14d0 8106     		.2byte	0x681
 30656 14d2 A5150000 		.4byte	0x15a5
 30657 14d6 03       		.uleb128 0x3
 30658 14d7 91       		.byte	0x91
 30659 14d8 B474     		.sleb128 -1484
 30660 14da 23       		.uleb128 0x23
 30661 14db 26080000 		.4byte	.LASF269
 30662 14df 01       		.byte	0x1
 30663 14e0 8206     		.2byte	0x682
 30664 14e2 B5150000 		.4byte	0x15b5
 30665 14e6 03       		.uleb128 0x3
 30666 14e7 91       		.byte	0x91
 30667 14e8 A074     		.sleb128 -1504
 30668 14ea 23       		.uleb128 0x23
 30669 14eb 19000000 		.4byte	.LASF270
 30670 14ef 01       		.byte	0x1
 30671 14f0 8306     		.2byte	0x683
 30672 14f2 C5150000 		.4byte	0x15c5
 30673 14f6 03       		.uleb128 0x3
 30674 14f7 91       		.byte	0x91
 30675 14f8 9074     		.sleb128 -1520
 30676 14fa 23       		.uleb128 0x23
 30677 14fb 47100000 		.4byte	.LASF271
 30678 14ff 01       		.byte	0x1
 30679 1500 8406     		.2byte	0x684
 30680 1502 D5150000 		.4byte	0x15d5
 30681 1506 03       		.uleb128 0x3
 30682 1507 91       		.byte	0x91
 30683 1508 E473     		.sleb128 -1564
 30684 150a 23       		.uleb128 0x23
 30685 150b 7C020000 		.4byte	.LASF272
 30686 150f 01       		.byte	0x1
 30687 1510 8506     		.2byte	0x685
 30688 1512 30010000 		.4byte	0x130
 30689 1516 03       		.uleb128 0x3
 30690 1517 91       		.byte	0x91
 30691 1518 C873     		.sleb128 -1592
 30692 151a 23       		.uleb128 0x23
 30693 151b E7010000 		.4byte	.LASF273
 30694 151f 01       		.byte	0x1
 30695 1520 8806     		.2byte	0x688
 30696 1522 97000000 		.4byte	0x97
 30697 1526 02       		.uleb128 0x2
 30698 1527 91       		.byte	0x91
 30699 1528 5B       		.sleb128 -37
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 663


 30700 1529 23       		.uleb128 0x23
 30701 152a 75050000 		.4byte	.LASF274
 30702 152e 01       		.byte	0x1
 30703 152f 8906     		.2byte	0x689
 30704 1531 97000000 		.4byte	0x97
 30705 1535 02       		.uleb128 0x2
 30706 1536 91       		.byte	0x91
 30707 1537 5A       		.sleb128 -38
 30708 1538 23       		.uleb128 0x23
 30709 1539 C0120000 		.4byte	.LASF275
 30710 153d 01       		.byte	0x1
 30711 153e 8A06     		.2byte	0x68a
 30712 1540 97000000 		.4byte	0x97
 30713 1544 02       		.uleb128 0x2
 30714 1545 91       		.byte	0x91
 30715 1546 59       		.sleb128 -39
 30716 1547 23       		.uleb128 0x23
 30717 1548 3F130000 		.4byte	.LASF276
 30718 154c 01       		.byte	0x1
 30719 154d 8B06     		.2byte	0x68b
 30720 154f 97000000 		.4byte	0x97
 30721 1553 02       		.uleb128 0x2
 30722 1554 91       		.byte	0x91
 30723 1555 58       		.sleb128 -40
 30724 1556 23       		.uleb128 0x23
 30725 1557 83050000 		.4byte	.LASF277
 30726 155b 01       		.byte	0x1
 30727 155c 8C06     		.2byte	0x68c
 30728 155e 97000000 		.4byte	0x97
 30729 1562 02       		.uleb128 0x2
 30730 1563 91       		.byte	0x91
 30731 1564 57       		.sleb128 -41
 30732 1565 23       		.uleb128 0x23
 30733 1566 35010000 		.4byte	.LASF278
 30734 156a 01       		.byte	0x1
 30735 156b 8D06     		.2byte	0x68d
 30736 156d 97000000 		.4byte	0x97
 30737 1571 02       		.uleb128 0x2
 30738 1572 91       		.byte	0x91
 30739 1573 65       		.sleb128 -27
 30740 1574 23       		.uleb128 0x23
 30741 1575 FF150000 		.4byte	.LASF251
 30742 1579 01       		.byte	0x1
 30743 157a 8F06     		.2byte	0x68f
 30744 157c 13130000 		.4byte	0x1313
 30745 1580 03       		.uleb128 0x3
 30746 1581 91       		.byte	0x91
 30747 1582 D072     		.sleb128 -1712
 30748 1584 23       		.uleb128 0x23
 30749 1585 4F040000 		.4byte	.LASF279
 30750 1589 01       		.byte	0x1
 30751 158a 9006     		.2byte	0x690
 30752 158c 97000000 		.4byte	0x97
 30753 1590 02       		.uleb128 0x2
 30754 1591 91       		.byte	0x91
 30755 1592 56       		.sleb128 -42
 30756 1593 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 664


 30757 1594 09       		.uleb128 0x9
 30758 1595 97000000 		.4byte	0x97
 30759 1599 A5150000 		.4byte	0x15a5
 30760 159d 24       		.uleb128 0x24
 30761 159e 18010000 		.4byte	0x118
 30762 15a2 7805     		.2byte	0x578
 30763 15a4 00       		.byte	0
 30764 15a5 09       		.uleb128 0x9
 30765 15a6 F9000000 		.4byte	0xf9
 30766 15aa B5150000 		.4byte	0x15b5
 30767 15ae 0A       		.uleb128 0xa
 30768 15af 18010000 		.4byte	0x118
 30769 15b3 0A       		.byte	0xa
 30770 15b4 00       		.byte	0
 30771 15b5 09       		.uleb128 0x9
 30772 15b6 F9000000 		.4byte	0xf9
 30773 15ba C5150000 		.4byte	0x15c5
 30774 15be 0A       		.uleb128 0xa
 30775 15bf 18010000 		.4byte	0x118
 30776 15c3 13       		.byte	0x13
 30777 15c4 00       		.byte	0
 30778 15c5 09       		.uleb128 0x9
 30779 15c6 F9000000 		.4byte	0xf9
 30780 15ca D5150000 		.4byte	0x15d5
 30781 15ce 0A       		.uleb128 0xa
 30782 15cf 18010000 		.4byte	0x118
 30783 15d3 0F       		.byte	0xf
 30784 15d4 00       		.byte	0
 30785 15d5 09       		.uleb128 0x9
 30786 15d6 F9000000 		.4byte	0xf9
 30787 15da E5150000 		.4byte	0x15e5
 30788 15de 0A       		.uleb128 0xa
 30789 15df 18010000 		.4byte	0x118
 30790 15e3 29       		.byte	0x29
 30791 15e4 00       		.byte	0
 30792 15e5 27       		.uleb128 0x27
 30793 15e6 96030000 		.4byte	.LASF318
 30794 15ea 01       		.byte	0x1
 30795 15eb 5607     		.2byte	0x756
 30796 15ed 00000000 		.4byte	.LFB71
 30797 15f1 90000000 		.4byte	.LFE71-.LFB71
 30798 15f5 01       		.uleb128 0x1
 30799 15f6 9C       		.byte	0x9c
 30800 15f7 16160000 		.4byte	0x1616
 30801 15fb 26       		.uleb128 0x26
 30802 15fc 6900     		.ascii	"i\000"
 30803 15fe 01       		.byte	0x1
 30804 15ff 5807     		.2byte	0x758
 30805 1601 97000000 		.4byte	0x97
 30806 1605 02       		.uleb128 0x2
 30807 1606 91       		.byte	0x91
 30808 1607 6F       		.sleb128 -17
 30809 1608 26       		.uleb128 0x26
 30810 1609 6A00     		.ascii	"j\000"
 30811 160b 01       		.byte	0x1
 30812 160c 5807     		.2byte	0x758
 30813 160e 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 665


 30814 1612 02       		.uleb128 0x2
 30815 1613 91       		.byte	0x91
 30816 1614 6E       		.sleb128 -18
 30817 1615 00       		.byte	0
 30818 1616 22       		.uleb128 0x22
 30819 1617 55010000 		.4byte	.LASF280
 30820 161b 01       		.byte	0x1
 30821 161c 6907     		.2byte	0x769
 30822 161e 00000000 		.4byte	.LFB72
 30823 1622 741C0000 		.4byte	.LFE72-.LFB72
 30824 1626 01       		.uleb128 0x1
 30825 1627 9C       		.byte	0x9c
 30826 1628 C1160000 		.4byte	0x16c1
 30827 162c 25       		.uleb128 0x25
 30828 162d D60E0000 		.4byte	.LASF281
 30829 1631 01       		.byte	0x1
 30830 1632 6907     		.2byte	0x769
 30831 1634 1F010000 		.4byte	0x11f
 30832 1638 03       		.uleb128 0x3
 30833 1639 91       		.byte	0x91
 30834 163a D47E     		.sleb128 -172
 30835 163c 26       		.uleb128 0x26
 30836 163d 6900     		.ascii	"i\000"
 30837 163f 01       		.byte	0x1
 30838 1640 6B07     		.2byte	0x76b
 30839 1642 73000000 		.4byte	0x73
 30840 1646 02       		.uleb128 0x2
 30841 1647 91       		.byte	0x91
 30842 1648 54       		.sleb128 -44
 30843 1649 23       		.uleb128 0x23
 30844 164a CE030000 		.4byte	.LASF250
 30845 164e 01       		.byte	0x1
 30846 164f 6D07     		.2byte	0x76d
 30847 1651 DD120000 		.4byte	0x12dd
 30848 1655 02       		.uleb128 0x2
 30849 1656 91       		.byte	0x91
 30850 1657 4C       		.sleb128 -52
 30851 1658 1E       		.uleb128 0x1e
 30852 1659 1C000000 		.4byte	.LBB24
 30853 165d 361C0000 		.4byte	.LBE24-.LBB24
 30854 1661 26       		.uleb128 0x26
 30855 1662 73747200 		.ascii	"str\000"
 30856 1666 01       		.byte	0x1
 30857 1667 7007     		.2byte	0x770
 30858 1669 C1160000 		.4byte	0x16c1
 30859 166d 03       		.uleb128 0x3
 30860 166e 91       		.byte	0x91
 30861 166f DC7E     		.sleb128 -164
 30862 1671 1E       		.uleb128 0x1e
 30863 1672 FC020000 		.4byte	.LBB25
 30864 1676 FC100000 		.4byte	.LBE25-.LBB25
 30865 167a 26       		.uleb128 0x26
 30866 167b 6B00     		.ascii	"k\000"
 30867 167d 01       		.byte	0x1
 30868 167e A407     		.2byte	0x7a4
 30869 1680 97000000 		.4byte	0x97
 30870 1684 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 666


 30871 1685 91       		.byte	0x91
 30872 1686 53       		.sleb128 -45
 30873 1687 1E       		.uleb128 0x1e
 30874 1688 4C030000 		.4byte	.LBB26
 30875 168c 90100000 		.4byte	.LBE26-.LBB26
 30876 1690 23       		.uleb128 0x23
 30877 1691 B70E0000 		.4byte	.LASF243
 30878 1695 01       		.byte	0x1
 30879 1696 A607     		.2byte	0x7a6
 30880 1698 97000000 		.4byte	0x97
 30881 169c 02       		.uleb128 0x2
 30882 169d 91       		.byte	0x91
 30883 169e 4B       		.sleb128 -53
 30884 169f 26       		.uleb128 0x26
 30885 16a0 4D4F5400 		.ascii	"MOT\000"
 30886 16a4 01       		.byte	0x1
 30887 16a5 A707     		.2byte	0x7a7
 30888 16a7 D1160000 		.4byte	0x16d1
 30889 16ab 02       		.uleb128 0x2
 30890 16ac 91       		.byte	0x91
 30891 16ad 44       		.sleb128 -60
 30892 16ae 23       		.uleb128 0x23
 30893 16af 67150000 		.4byte	.LASF282
 30894 16b3 01       		.byte	0x1
 30895 16b4 A807     		.2byte	0x7a8
 30896 16b6 97000000 		.4byte	0x97
 30897 16ba 02       		.uleb128 0x2
 30898 16bb 91       		.byte	0x91
 30899 16bc 43       		.sleb128 -61
 30900 16bd 00       		.byte	0
 30901 16be 00       		.byte	0
 30902 16bf 00       		.byte	0
 30903 16c0 00       		.byte	0
 30904 16c1 09       		.uleb128 0x9
 30905 16c2 F9000000 		.4byte	0xf9
 30906 16c6 D1160000 		.4byte	0x16d1
 30907 16ca 0A       		.uleb128 0xa
 30908 16cb 18010000 		.4byte	0x118
 30909 16cf 63       		.byte	0x63
 30910 16d0 00       		.byte	0
 30911 16d1 07       		.uleb128 0x7
 30912 16d2 04       		.byte	0x4
 30913 16d3 20060000 		.4byte	0x620
 30914 16d7 22       		.uleb128 0x22
 30915 16d8 7A100000 		.4byte	.LASF283
 30916 16dc 01       		.byte	0x1
 30917 16dd 5609     		.2byte	0x956
 30918 16df 00000000 		.4byte	.LFB73
 30919 16e3 90040000 		.4byte	.LFE73-.LFB73
 30920 16e7 01       		.uleb128 0x1
 30921 16e8 9C       		.byte	0x9c
 30922 16e9 67170000 		.4byte	0x1767
 30923 16ed 25       		.uleb128 0x25
 30924 16ee D60E0000 		.4byte	.LASF281
 30925 16f2 01       		.byte	0x1
 30926 16f3 5609     		.2byte	0x956
 30927 16f5 1F010000 		.4byte	0x11f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 667


 30928 16f9 03       		.uleb128 0x3
 30929 16fa 91       		.byte	0x91
 30930 16fb BC7C     		.sleb128 -452
 30931 16fd 26       		.uleb128 0x26
 30932 16fe 73747200 		.ascii	"str\000"
 30933 1702 01       		.byte	0x1
 30934 1703 5809     		.2byte	0x958
 30935 1705 C1160000 		.4byte	0x16c1
 30936 1709 03       		.uleb128 0x3
 30937 170a 91       		.byte	0x91
 30938 170b F07E     		.sleb128 -144
 30939 170d 26       		.uleb128 0x26
 30940 170e 6900     		.ascii	"i\000"
 30941 1710 01       		.byte	0x1
 30942 1711 5909     		.2byte	0x959
 30943 1713 73000000 		.4byte	0x73
 30944 1717 02       		.uleb128 0x2
 30945 1718 91       		.byte	0x91
 30946 1719 64       		.sleb128 -28
 30947 171a 23       		.uleb128 0x23
 30948 171b 12050000 		.4byte	.LASF284
 30949 171f 01       		.byte	0x1
 30950 1720 5A09     		.2byte	0x95a
 30951 1722 73000000 		.4byte	0x73
 30952 1726 02       		.uleb128 0x2
 30953 1727 91       		.byte	0x91
 30954 1728 54       		.sleb128 -44
 30955 1729 23       		.uleb128 0x23
 30956 172a CE030000 		.4byte	.LASF250
 30957 172e 01       		.byte	0x1
 30958 172f 5C09     		.2byte	0x95c
 30959 1731 DD120000 		.4byte	0x12dd
 30960 1735 02       		.uleb128 0x2
 30961 1736 91       		.byte	0x91
 30962 1737 60       		.sleb128 -32
 30963 1738 26       		.uleb128 0x26
 30964 1739 4D4F5400 		.ascii	"MOT\000"
 30965 173d 01       		.byte	0x1
 30966 173e 5D09     		.2byte	0x95d
 30967 1740 D1160000 		.4byte	0x16d1
 30968 1744 02       		.uleb128 0x2
 30969 1745 91       		.byte	0x91
 30970 1746 5C       		.sleb128 -36
 30971 1747 23       		.uleb128 0x23
 30972 1748 67150000 		.4byte	.LASF282
 30973 174c 01       		.byte	0x1
 30974 174d 5E09     		.2byte	0x95e
 30975 174f 97000000 		.4byte	0x97
 30976 1753 02       		.uleb128 0x2
 30977 1754 91       		.byte	0x91
 30978 1755 5B       		.sleb128 -37
 30979 1756 23       		.uleb128 0x23
 30980 1757 85060000 		.4byte	.LASF285
 30981 175b 01       		.byte	0x1
 30982 175c 9609     		.2byte	0x996
 30983 175e 67170000 		.4byte	0x1767
 30984 1762 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 668


 30985 1763 91       		.byte	0x91
 30986 1764 C47C     		.sleb128 -444
 30987 1766 00       		.byte	0
 30988 1767 09       		.uleb128 0x9
 30989 1768 F9000000 		.4byte	0xf9
 30990 176c 78170000 		.4byte	0x1778
 30991 1770 24       		.uleb128 0x24
 30992 1771 18010000 		.4byte	0x118
 30993 1775 2B01     		.2byte	0x12b
 30994 1777 00       		.byte	0
 30995 1778 22       		.uleb128 0x22
 30996 1779 690D0000 		.4byte	.LASF286
 30997 177d 01       		.byte	0x1
 30998 177e A009     		.2byte	0x9a0
 30999 1780 00000000 		.4byte	.LFB74
 31000 1784 5C020000 		.4byte	.LFE74-.LFB74
 31001 1788 01       		.uleb128 0x1
 31002 1789 9C       		.byte	0x9c
 31003 178a BE170000 		.4byte	0x17be
 31004 178e 25       		.uleb128 0x25
 31005 178f D60E0000 		.4byte	.LASF281
 31006 1793 01       		.byte	0x1
 31007 1794 A009     		.2byte	0x9a0
 31008 1796 1F010000 		.4byte	0x11f
 31009 179a 03       		.uleb128 0x3
 31010 179b 91       		.byte	0x91
 31011 179c CC7E     		.sleb128 -180
 31012 179e 26       		.uleb128 0x26
 31013 179f 73747200 		.ascii	"str\000"
 31014 17a3 01       		.byte	0x1
 31015 17a4 A209     		.2byte	0x9a2
 31016 17a6 BE170000 		.4byte	0x17be
 31017 17aa 03       		.uleb128 0x3
 31018 17ab 91       		.byte	0x91
 31019 17ac D47E     		.sleb128 -172
 31020 17ae 23       		.uleb128 0x23
 31021 17af CE030000 		.4byte	.LASF250
 31022 17b3 01       		.byte	0x1
 31023 17b4 A409     		.2byte	0x9a4
 31024 17b6 DD120000 		.4byte	0x12dd
 31025 17ba 02       		.uleb128 0x2
 31026 17bb 91       		.byte	0x91
 31027 17bc 6C       		.sleb128 -20
 31028 17bd 00       		.byte	0
 31029 17be 09       		.uleb128 0x9
 31030 17bf F9000000 		.4byte	0xf9
 31031 17c3 CE170000 		.4byte	0x17ce
 31032 17c7 0A       		.uleb128 0xa
 31033 17c8 18010000 		.4byte	0x118
 31034 17cc 95       		.byte	0x95
 31035 17cd 00       		.byte	0
 31036 17ce 22       		.uleb128 0x22
 31037 17cf E2100000 		.4byte	.LASF287
 31038 17d3 01       		.byte	0x1
 31039 17d4 CD09     		.2byte	0x9cd
 31040 17d6 00000000 		.4byte	.LFB75
 31041 17da 80120000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 669


 31042 17de 01       		.uleb128 0x1
 31043 17df 9C       		.byte	0x9c
 31044 17e0 6F180000 		.4byte	0x186f
 31045 17e4 25       		.uleb128 0x25
 31046 17e5 D60E0000 		.4byte	.LASF281
 31047 17e9 01       		.byte	0x1
 31048 17ea CD09     		.2byte	0x9cd
 31049 17ec 1F010000 		.4byte	0x11f
 31050 17f0 03       		.uleb128 0x3
 31051 17f1 91       		.byte	0x91
 31052 17f2 D47E     		.sleb128 -172
 31053 17f4 26       		.uleb128 0x26
 31054 17f5 73747200 		.ascii	"str\000"
 31055 17f9 01       		.byte	0x1
 31056 17fa CF09     		.2byte	0x9cf
 31057 17fc C1160000 		.4byte	0x16c1
 31058 1800 03       		.uleb128 0x3
 31059 1801 91       		.byte	0x91
 31060 1802 DC7E     		.sleb128 -164
 31061 1804 26       		.uleb128 0x26
 31062 1805 6900     		.ascii	"i\000"
 31063 1807 01       		.byte	0x1
 31064 1808 D009     		.2byte	0x9d0
 31065 180a 73000000 		.4byte	0x73
 31066 180e 02       		.uleb128 0x2
 31067 180f 91       		.byte	0x91
 31068 1810 54       		.sleb128 -44
 31069 1811 23       		.uleb128 0x23
 31070 1812 CE030000 		.4byte	.LASF250
 31071 1816 01       		.byte	0x1
 31072 1817 D409     		.2byte	0x9d4
 31073 1819 DD120000 		.4byte	0x12dd
 31074 181d 02       		.uleb128 0x2
 31075 181e 91       		.byte	0x91
 31076 181f 4C       		.sleb128 -52
 31077 1820 1E       		.uleb128 0x1e
 31078 1821 08010000 		.4byte	.LBB27
 31079 1825 D80C0000 		.4byte	.LBE27-.LBB27
 31080 1829 26       		.uleb128 0x26
 31081 182a 6B00     		.ascii	"k\000"
 31082 182c 01       		.byte	0x1
 31083 182d E909     		.2byte	0x9e9
 31084 182f 97000000 		.4byte	0x97
 31085 1833 02       		.uleb128 0x2
 31086 1834 91       		.byte	0x91
 31087 1835 53       		.sleb128 -45
 31088 1836 1E       		.uleb128 0x1e
 31089 1837 12010000 		.4byte	.LBB28
 31090 183b B20C0000 		.4byte	.LBE28-.LBB28
 31091 183f 23       		.uleb128 0x23
 31092 1840 B70E0000 		.4byte	.LASF243
 31093 1844 01       		.byte	0x1
 31094 1845 EB09     		.2byte	0x9eb
 31095 1847 97000000 		.4byte	0x97
 31096 184b 02       		.uleb128 0x2
 31097 184c 91       		.byte	0x91
 31098 184d 4B       		.sleb128 -53
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 670


 31099 184e 26       		.uleb128 0x26
 31100 184f 4D4F5400 		.ascii	"MOT\000"
 31101 1853 01       		.byte	0x1
 31102 1854 EC09     		.2byte	0x9ec
 31103 1856 D1160000 		.4byte	0x16d1
 31104 185a 02       		.uleb128 0x2
 31105 185b 91       		.byte	0x91
 31106 185c 44       		.sleb128 -60
 31107 185d 23       		.uleb128 0x23
 31108 185e 67150000 		.4byte	.LASF282
 31109 1862 01       		.byte	0x1
 31110 1863 ED09     		.2byte	0x9ed
 31111 1865 97000000 		.4byte	0x97
 31112 1869 02       		.uleb128 0x2
 31113 186a 91       		.byte	0x91
 31114 186b 43       		.sleb128 -61
 31115 186c 00       		.byte	0
 31116 186d 00       		.byte	0
 31117 186e 00       		.byte	0
 31118 186f 22       		.uleb128 0x22
 31119 1870 4D0C0000 		.4byte	.LASF288
 31120 1874 01       		.byte	0x1
 31121 1875 D50A     		.2byte	0xad5
 31122 1877 00000000 		.4byte	.LFB76
 31123 187b DC000000 		.4byte	.LFE76-.LFB76
 31124 187f 01       		.uleb128 0x1
 31125 1880 9C       		.byte	0x9c
 31126 1881 B3180000 		.4byte	0x18b3
 31127 1885 25       		.uleb128 0x25
 31128 1886 D60E0000 		.4byte	.LASF281
 31129 188a 01       		.byte	0x1
 31130 188b D50A     		.2byte	0xad5
 31131 188d 1F010000 		.4byte	0x11f
 31132 1891 03       		.uleb128 0x3
 31133 1892 91       		.byte	0x91
 31134 1893 DC7E     		.sleb128 -164
 31135 1895 26       		.uleb128 0x26
 31136 1896 73747200 		.ascii	"str\000"
 31137 189a 01       		.byte	0x1
 31138 189b D70A     		.2byte	0xad7
 31139 189d B3180000 		.4byte	0x18b3
 31140 18a1 03       		.uleb128 0x3
 31141 18a2 91       		.byte	0x91
 31142 18a3 E07E     		.sleb128 -160
 31143 18a5 26       		.uleb128 0x26
 31144 18a6 6900     		.ascii	"i\000"
 31145 18a8 01       		.byte	0x1
 31146 18a9 D80A     		.2byte	0xad8
 31147 18ab 73000000 		.4byte	0x73
 31148 18af 02       		.uleb128 0x2
 31149 18b0 91       		.byte	0x91
 31150 18b1 6C       		.sleb128 -20
 31151 18b2 00       		.byte	0
 31152 18b3 09       		.uleb128 0x9
 31153 18b4 F9000000 		.4byte	0xf9
 31154 18b8 C3180000 		.4byte	0x18c3
 31155 18bc 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 671


 31156 18bd 18010000 		.4byte	0x118
 31157 18c1 8B       		.byte	0x8b
 31158 18c2 00       		.byte	0
 31159 18c3 22       		.uleb128 0x22
 31160 18c4 E20E0000 		.4byte	.LASF289
 31161 18c8 01       		.byte	0x1
 31162 18c9 ED0A     		.2byte	0xaed
 31163 18cb 00000000 		.4byte	.LFB77
 31164 18cf 80010000 		.4byte	.LFE77-.LFB77
 31165 18d3 01       		.uleb128 0x1
 31166 18d4 9C       		.byte	0x9c
 31167 18d5 07190000 		.4byte	0x1907
 31168 18d9 25       		.uleb128 0x25
 31169 18da D60E0000 		.4byte	.LASF281
 31170 18de 01       		.byte	0x1
 31171 18df ED0A     		.2byte	0xaed
 31172 18e1 1F010000 		.4byte	0x11f
 31173 18e5 03       		.uleb128 0x3
 31174 18e6 91       		.byte	0x91
 31175 18e7 E47E     		.sleb128 -156
 31176 18e9 26       		.uleb128 0x26
 31177 18ea 73747200 		.ascii	"str\000"
 31178 18ee 01       		.byte	0x1
 31179 18ef EF0A     		.2byte	0xaef
 31180 18f1 07190000 		.4byte	0x1907
 31181 18f5 03       		.uleb128 0x3
 31182 18f6 91       		.byte	0x91
 31183 18f7 EC7E     		.sleb128 -148
 31184 18f9 26       		.uleb128 0x26
 31185 18fa 6900     		.ascii	"i\000"
 31186 18fc 01       		.byte	0x1
 31187 18fd F00A     		.2byte	0xaf0
 31188 18ff 73000000 		.4byte	0x73
 31189 1903 02       		.uleb128 0x2
 31190 1904 91       		.byte	0x91
 31191 1905 64       		.sleb128 -28
 31192 1906 00       		.byte	0
 31193 1907 09       		.uleb128 0x9
 31194 1908 F9000000 		.4byte	0xf9
 31195 190c 17190000 		.4byte	0x1917
 31196 1910 0A       		.uleb128 0xa
 31197 1911 18010000 		.4byte	0x118
 31198 1915 77       		.byte	0x77
 31199 1916 00       		.byte	0
 31200 1917 28       		.uleb128 0x28
 31201 1918 14110000 		.4byte	.LASF290
 31202 191c 01       		.byte	0x1
 31203 191d 190B     		.2byte	0xb19
 31204 191f 00000000 		.4byte	.LFB78
 31205 1923 28000000 		.4byte	.LFE78-.LFB78
 31206 1927 01       		.uleb128 0x1
 31207 1928 9C       		.byte	0x9c
 31208 1929 3D190000 		.4byte	0x193d
 31209 192d 25       		.uleb128 0x25
 31210 192e D60E0000 		.4byte	.LASF281
 31211 1932 01       		.byte	0x1
 31212 1933 190B     		.2byte	0xb19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 672


 31213 1935 1F010000 		.4byte	0x11f
 31214 1939 02       		.uleb128 0x2
 31215 193a 91       		.byte	0x91
 31216 193b 6C       		.sleb128 -20
 31217 193c 00       		.byte	0
 31218 193d 22       		.uleb128 0x22
 31219 193e FD030000 		.4byte	.LASF291
 31220 1942 01       		.byte	0x1
 31221 1943 240B     		.2byte	0xb24
 31222 1945 00000000 		.4byte	.LFB79
 31223 1949 F0000000 		.4byte	.LFE79-.LFB79
 31224 194d 01       		.uleb128 0x1
 31225 194e 9C       		.byte	0x9c
 31226 194f AC190000 		.4byte	0x19ac
 31227 1953 25       		.uleb128 0x25
 31228 1954 D60E0000 		.4byte	.LASF281
 31229 1958 01       		.byte	0x1
 31230 1959 240B     		.2byte	0xb24
 31231 195b 1F010000 		.4byte	0x11f
 31232 195f 03       		.uleb128 0x3
 31233 1960 91       		.byte	0x91
 31234 1961 FC7E     		.sleb128 -132
 31235 1963 23       		.uleb128 0x23
 31236 1964 6C020000 		.4byte	.LASF292
 31237 1968 01       		.byte	0x1
 31238 1969 260B     		.2byte	0xb26
 31239 196b C1160000 		.4byte	0x16c1
 31240 196f 03       		.uleb128 0x3
 31241 1970 91       		.byte	0x91
 31242 1971 847F     		.sleb128 -124
 31243 1973 23       		.uleb128 0x23
 31244 1974 10020000 		.4byte	.LASF293
 31245 1978 01       		.byte	0x1
 31246 1979 270B     		.2byte	0xb27
 31247 197b A3000000 		.4byte	0xa3
 31248 197f 02       		.uleb128 0x2
 31249 1980 91       		.byte	0x91
 31250 1981 6E       		.sleb128 -18
 31251 1982 23       		.uleb128 0x23
 31252 1983 E7000000 		.4byte	.LASF294
 31253 1987 01       		.byte	0x1
 31254 1988 280B     		.2byte	0xb28
 31255 198a EB000000 		.4byte	0xeb
 31256 198e 05       		.uleb128 0x5
 31257 198f 03       		.byte	0x3
 31258 1990 00000000 		.4byte	h_time.11231
 31259 1994 1E       		.uleb128 0x1e
 31260 1995 26000000 		.4byte	.LBB29
 31261 1999 A4000000 		.4byte	.LBE29-.LBB29
 31262 199d 26       		.uleb128 0x26
 31263 199e 6900     		.ascii	"i\000"
 31264 19a0 01       		.byte	0x1
 31265 19a1 2D0B     		.2byte	0xb2d
 31266 19a3 73000000 		.4byte	0x73
 31267 19a7 02       		.uleb128 0x2
 31268 19a8 91       		.byte	0x91
 31269 19a9 68       		.sleb128 -24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 673


 31270 19aa 00       		.byte	0
 31271 19ab 00       		.byte	0
 31272 19ac 22       		.uleb128 0x22
 31273 19ad 89160000 		.4byte	.LASF295
 31274 19b1 01       		.byte	0x1
 31275 19b2 450B     		.2byte	0xb45
 31276 19b4 00000000 		.4byte	.LFB80
 31277 19b8 74030000 		.4byte	.LFE80-.LFB80
 31278 19bc 01       		.uleb128 0x1
 31279 19bd 9C       		.byte	0x9c
 31280 19be F0190000 		.4byte	0x19f0
 31281 19c2 25       		.uleb128 0x25
 31282 19c3 D60E0000 		.4byte	.LASF281
 31283 19c7 01       		.byte	0x1
 31284 19c8 450B     		.2byte	0xb45
 31285 19ca 1F010000 		.4byte	0x11f
 31286 19ce 03       		.uleb128 0x3
 31287 19cf 91       		.byte	0x91
 31288 19d0 AC7D     		.sleb128 -340
 31289 19d2 26       		.uleb128 0x26
 31290 19d3 73747200 		.ascii	"str\000"
 31291 19d7 01       		.byte	0x1
 31292 19d8 470B     		.2byte	0xb47
 31293 19da 67170000 		.4byte	0x1767
 31294 19de 03       		.uleb128 0x3
 31295 19df 91       		.byte	0x91
 31296 19e0 B07D     		.sleb128 -336
 31297 19e2 26       		.uleb128 0x26
 31298 19e3 6900     		.ascii	"i\000"
 31299 19e5 01       		.byte	0x1
 31300 19e6 480B     		.2byte	0xb48
 31301 19e8 73000000 		.4byte	0x73
 31302 19ec 02       		.uleb128 0x2
 31303 19ed 91       		.byte	0x91
 31304 19ee 5C       		.sleb128 -36
 31305 19ef 00       		.byte	0
 31306 19f0 22       		.uleb128 0x22
 31307 19f1 A5100000 		.4byte	.LASF296
 31308 19f5 01       		.byte	0x1
 31309 19f6 700B     		.2byte	0xb70
 31310 19f8 00000000 		.4byte	.LFB81
 31311 19fc 84000000 		.4byte	.LFE81-.LFB81
 31312 1a00 01       		.uleb128 0x1
 31313 1a01 9C       		.byte	0x9c
 31314 1a02 431A0000 		.4byte	0x1a43
 31315 1a06 25       		.uleb128 0x25
 31316 1a07 A0060000 		.4byte	.LASF233
 31317 1a0b 01       		.byte	0x1
 31318 1a0c 700B     		.2byte	0xb70
 31319 1a0e D2100000 		.4byte	0x10d2
 31320 1a12 02       		.uleb128 0x2
 31321 1a13 91       		.byte	0x91
 31322 1a14 6C       		.sleb128 -20
 31323 1a15 25       		.uleb128 0x25
 31324 1a16 2C0C0000 		.4byte	.LASF234
 31325 1a1a 01       		.byte	0x1
 31326 1a1b 700B     		.2byte	0xb70
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 674


 31327 1a1d A3000000 		.4byte	0xa3
 31328 1a21 02       		.uleb128 0x2
 31329 1a22 91       		.byte	0x91
 31330 1a23 6A       		.sleb128 -22
 31331 1a24 25       		.uleb128 0x25
 31332 1a25 32110000 		.4byte	.LASF297
 31333 1a29 01       		.byte	0x1
 31334 1a2a 700B     		.2byte	0xb70
 31335 1a2c 97000000 		.4byte	0x97
 31336 1a30 02       		.uleb128 0x2
 31337 1a31 91       		.byte	0x91
 31338 1a32 69       		.sleb128 -23
 31339 1a33 23       		.uleb128 0x23
 31340 1a34 98070000 		.4byte	.LASF248
 31341 1a38 01       		.byte	0x1
 31342 1a39 720B     		.2byte	0xb72
 31343 1a3b A3000000 		.4byte	0xa3
 31344 1a3f 02       		.uleb128 0x2
 31345 1a40 91       		.byte	0x91
 31346 1a41 76       		.sleb128 -10
 31347 1a42 00       		.byte	0
 31348 1a43 22       		.uleb128 0x22
 31349 1a44 C5060000 		.4byte	.LASF298
 31350 1a48 01       		.byte	0x1
 31351 1a49 8C0B     		.2byte	0xb8c
 31352 1a4b 00000000 		.4byte	.LFB82
 31353 1a4f 88000000 		.4byte	.LFE82-.LFB82
 31354 1a53 01       		.uleb128 0x1
 31355 1a54 9C       		.byte	0x9c
 31356 1a55 871A0000 		.4byte	0x1a87
 31357 1a59 25       		.uleb128 0x25
 31358 1a5a A0060000 		.4byte	.LASF233
 31359 1a5e 01       		.byte	0x1
 31360 1a5f 8C0B     		.2byte	0xb8c
 31361 1a61 D2100000 		.4byte	0x10d2
 31362 1a65 02       		.uleb128 0x2
 31363 1a66 91       		.byte	0x91
 31364 1a67 6C       		.sleb128 -20
 31365 1a68 25       		.uleb128 0x25
 31366 1a69 2C0C0000 		.4byte	.LASF234
 31367 1a6d 01       		.byte	0x1
 31368 1a6e 8C0B     		.2byte	0xb8c
 31369 1a70 A3000000 		.4byte	0xa3
 31370 1a74 02       		.uleb128 0x2
 31371 1a75 91       		.byte	0x91
 31372 1a76 6A       		.sleb128 -22
 31373 1a77 23       		.uleb128 0x23
 31374 1a78 98070000 		.4byte	.LASF248
 31375 1a7c 01       		.byte	0x1
 31376 1a7d 8E0B     		.2byte	0xb8e
 31377 1a7f A3000000 		.4byte	0xa3
 31378 1a83 02       		.uleb128 0x2
 31379 1a84 91       		.byte	0x91
 31380 1a85 76       		.sleb128 -10
 31381 1a86 00       		.byte	0
 31382 1a87 22       		.uleb128 0x22
 31383 1a88 C00C0000 		.4byte	.LASF299
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 675


 31384 1a8c 01       		.byte	0x1
 31385 1a8d A80B     		.2byte	0xba8
 31386 1a8f 00000000 		.4byte	.LFB83
 31387 1a93 A0000000 		.4byte	.LFE83-.LFB83
 31388 1a97 01       		.uleb128 0x1
 31389 1a98 9C       		.byte	0x9c
 31390 1a99 DA1A0000 		.4byte	0x1ada
 31391 1a9d 25       		.uleb128 0x25
 31392 1a9e A0060000 		.4byte	.LASF233
 31393 1aa2 01       		.byte	0x1
 31394 1aa3 A80B     		.2byte	0xba8
 31395 1aa5 D2100000 		.4byte	0x10d2
 31396 1aa9 02       		.uleb128 0x2
 31397 1aaa 91       		.byte	0x91
 31398 1aab 74       		.sleb128 -12
 31399 1aac 25       		.uleb128 0x25
 31400 1aad 2C0C0000 		.4byte	.LASF234
 31401 1ab1 01       		.byte	0x1
 31402 1ab2 A80B     		.2byte	0xba8
 31403 1ab4 A3000000 		.4byte	0xa3
 31404 1ab8 02       		.uleb128 0x2
 31405 1ab9 91       		.byte	0x91
 31406 1aba 72       		.sleb128 -14
 31407 1abb 29       		.uleb128 0x29
 31408 1abc 696400   		.ascii	"id\000"
 31409 1abf 01       		.byte	0x1
 31410 1ac0 A80B     		.2byte	0xba8
 31411 1ac2 97000000 		.4byte	0x97
 31412 1ac6 02       		.uleb128 0x2
 31413 1ac7 91       		.byte	0x91
 31414 1ac8 71       		.sleb128 -15
 31415 1ac9 26       		.uleb128 0x26
 31416 1aca 6900     		.ascii	"i\000"
 31417 1acc 01       		.byte	0x1
 31418 1acd AA0B     		.2byte	0xbaa
 31419 1acf A3000000 		.4byte	0xa3
 31420 1ad3 05       		.uleb128 0x5
 31421 1ad4 03       		.byte	0x3
 31422 1ad5 04000000 		.4byte	i.11272
 31423 1ad9 00       		.byte	0
 31424 1ada 2A       		.uleb128 0x2a
 31425 1adb 17150000 		.4byte	.LASF305
 31426 1adf 01       		.byte	0x1
 31427 1ae0 C60B     		.2byte	0xbc6
 31428 1ae2 97000000 		.4byte	0x97
 31429 1ae6 00000000 		.4byte	.LFB84
 31430 1aea 3E000000 		.4byte	.LFE84-.LFB84
 31431 1aee 01       		.uleb128 0x1
 31432 1aef 9C       		.byte	0x9c
 31433 1af0 2F1B0000 		.4byte	0x1b2f
 31434 1af4 25       		.uleb128 0x25
 31435 1af5 FB0B0000 		.4byte	.LASF300
 31436 1af9 01       		.byte	0x1
 31437 1afa C60B     		.2byte	0xbc6
 31438 1afc D2100000 		.4byte	0x10d2
 31439 1b00 02       		.uleb128 0x2
 31440 1b01 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 676


 31441 1b02 6C       		.sleb128 -20
 31442 1b03 25       		.uleb128 0x25
 31443 1b04 6D060000 		.4byte	.LASF301
 31444 1b08 01       		.byte	0x1
 31445 1b09 C60B     		.2byte	0xbc6
 31446 1b0b 97000000 		.4byte	0x97
 31447 1b0f 02       		.uleb128 0x2
 31448 1b10 91       		.byte	0x91
 31449 1b11 6B       		.sleb128 -21
 31450 1b12 26       		.uleb128 0x26
 31451 1b13 6900     		.ascii	"i\000"
 31452 1b15 01       		.byte	0x1
 31453 1b16 C80B     		.2byte	0xbc8
 31454 1b18 97000000 		.4byte	0x97
 31455 1b1c 02       		.uleb128 0x2
 31456 1b1d 91       		.byte	0x91
 31457 1b1e 77       		.sleb128 -9
 31458 1b1f 23       		.uleb128 0x23
 31459 1b20 360E0000 		.4byte	.LASF302
 31460 1b24 01       		.byte	0x1
 31461 1b25 C90B     		.2byte	0xbc9
 31462 1b27 97000000 		.4byte	0x97
 31463 1b2b 02       		.uleb128 0x2
 31464 1b2c 91       		.byte	0x91
 31465 1b2d 76       		.sleb128 -10
 31466 1b2e 00       		.byte	0
 31467 1b2f 22       		.uleb128 0x22
 31468 1b30 3A0C0000 		.4byte	.LASF303
 31469 1b34 01       		.byte	0x1
 31470 1b35 D60B     		.2byte	0xbd6
 31471 1b37 00000000 		.4byte	.LFB85
 31472 1b3b 2E000000 		.4byte	.LFE85-.LFB85
 31473 1b3f 01       		.uleb128 0x1
 31474 1b40 9C       		.byte	0x9c
 31475 1b41 731B0000 		.4byte	0x1b73
 31476 1b45 25       		.uleb128 0x25
 31477 1b46 95050000 		.4byte	.LASF304
 31478 1b4a 01       		.byte	0x1
 31479 1b4b D60B     		.2byte	0xbd6
 31480 1b4d 97000000 		.4byte	0x97
 31481 1b51 02       		.uleb128 0x2
 31482 1b52 91       		.byte	0x91
 31483 1b53 6F       		.sleb128 -17
 31484 1b54 23       		.uleb128 0x23
 31485 1b55 2C0C0000 		.4byte	.LASF234
 31486 1b59 01       		.byte	0x1
 31487 1b5a D70B     		.2byte	0xbd7
 31488 1b5c 73000000 		.4byte	0x73
 31489 1b60 02       		.uleb128 0x2
 31490 1b61 91       		.byte	0x91
 31491 1b62 74       		.sleb128 -12
 31492 1b63 23       		.uleb128 0x23
 31493 1b64 A0060000 		.4byte	.LASF233
 31494 1b68 01       		.byte	0x1
 31495 1b69 D80B     		.2byte	0xbd8
 31496 1b6b CC080000 		.4byte	0x8cc
 31497 1b6f 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 677


 31498 1b70 91       		.byte	0x91
 31499 1b71 70       		.sleb128 -16
 31500 1b72 00       		.byte	0
 31501 1b73 2B       		.uleb128 0x2b
 31502 1b74 CD040000 		.4byte	.LASF306
 31503 1b78 01       		.byte	0x1
 31504 1b79 E50B     		.2byte	0xbe5
 31505 1b7b 97000000 		.4byte	0x97
 31506 1b7f 00000000 		.4byte	.LFB86
 31507 1b83 98000000 		.4byte	.LFE86-.LFB86
 31508 1b87 01       		.uleb128 0x1
 31509 1b88 9C       		.byte	0x9c
 31510 1b89 D71B0000 		.4byte	0x1bd7
 31511 1b8d 25       		.uleb128 0x25
 31512 1b8e 60060000 		.4byte	.LASF307
 31513 1b92 01       		.byte	0x1
 31514 1b93 E50B     		.2byte	0xbe5
 31515 1b95 73000000 		.4byte	0x73
 31516 1b99 02       		.uleb128 0x2
 31517 1b9a 91       		.byte	0x91
 31518 1b9b 64       		.sleb128 -28
 31519 1b9c 26       		.uleb128 0x26
 31520 1b9d 6900     		.ascii	"i\000"
 31521 1b9f 01       		.byte	0x1
 31522 1ba0 E70B     		.2byte	0xbe7
 31523 1ba2 73000000 		.4byte	0x73
 31524 1ba6 02       		.uleb128 0x2
 31525 1ba7 91       		.byte	0x91
 31526 1ba8 74       		.sleb128 -12
 31527 1ba9 23       		.uleb128 0x23
 31528 1baa EE000000 		.4byte	.LASF308
 31529 1bae 01       		.byte	0x1
 31530 1baf E80B     		.2byte	0xbe8
 31531 1bb1 97000000 		.4byte	0x97
 31532 1bb5 02       		.uleb128 0x2
 31533 1bb6 91       		.byte	0x91
 31534 1bb7 6B       		.sleb128 -21
 31535 1bb8 23       		.uleb128 0x23
 31536 1bb9 E1060000 		.4byte	.LASF309
 31537 1bbd 01       		.byte	0x1
 31538 1bbe E90B     		.2byte	0xbe9
 31539 1bc0 73000000 		.4byte	0x73
 31540 1bc4 02       		.uleb128 0x2
 31541 1bc5 91       		.byte	0x91
 31542 1bc6 6C       		.sleb128 -20
 31543 1bc7 23       		.uleb128 0x23
 31544 1bc8 F4050000 		.4byte	.LASF310
 31545 1bcc 01       		.byte	0x1
 31546 1bcd EA0B     		.2byte	0xbea
 31547 1bcf 97000000 		.4byte	0x97
 31548 1bd3 02       		.uleb128 0x2
 31549 1bd4 91       		.byte	0x91
 31550 1bd5 73       		.sleb128 -13
 31551 1bd6 00       		.byte	0
 31552 1bd7 22       		.uleb128 0x22
 31553 1bd8 7B0F0000 		.4byte	.LASF311
 31554 1bdc 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 678


 31555 1bdd 0F0C     		.2byte	0xc0f
 31556 1bdf 00000000 		.4byte	.LFB87
 31557 1be3 80000000 		.4byte	.LFE87-.LFB87
 31558 1be7 01       		.uleb128 0x1
 31559 1be8 9C       		.byte	0x9c
 31560 1be9 FB1B0000 		.4byte	0x1bfb
 31561 1bed 26       		.uleb128 0x26
 31562 1bee 6900     		.ascii	"i\000"
 31563 1bf0 01       		.byte	0x1
 31564 1bf1 110C     		.2byte	0xc11
 31565 1bf3 A3000000 		.4byte	0xa3
 31566 1bf7 02       		.uleb128 0x2
 31567 1bf8 91       		.byte	0x91
 31568 1bf9 76       		.sleb128 -10
 31569 1bfa 00       		.byte	0
 31570 1bfb 2B       		.uleb128 0x2b
 31571 1bfc C10E0000 		.4byte	.LASF312
 31572 1c00 01       		.byte	0x1
 31573 1c01 280C     		.2byte	0xc28
 31574 1c03 97000000 		.4byte	0x97
 31575 1c07 00000000 		.4byte	.LFB88
 31576 1c0b 5C000000 		.4byte	.LFE88-.LFB88
 31577 1c0f 01       		.uleb128 0x1
 31578 1c10 9C       		.byte	0x9c
 31579 1c11 231C0000 		.4byte	0x1c23
 31580 1c15 26       		.uleb128 0x26
 31581 1c16 6900     		.ascii	"i\000"
 31582 1c18 01       		.byte	0x1
 31583 1c19 290C     		.2byte	0xc29
 31584 1c1b A3000000 		.4byte	0xa3
 31585 1c1f 02       		.uleb128 0x2
 31586 1c20 91       		.byte	0x91
 31587 1c21 76       		.sleb128 -10
 31588 1c22 00       		.byte	0
 31589 1c23 2B       		.uleb128 0x2b
 31590 1c24 E7060000 		.4byte	.LASF313
 31591 1c28 01       		.byte	0x1
 31592 1c29 3B0C     		.2byte	0xc3b
 31593 1c2b 97000000 		.4byte	0x97
 31594 1c2f 00000000 		.4byte	.LFB89
 31595 1c33 30060000 		.4byte	.LFE89-.LFB89
 31596 1c37 01       		.uleb128 0x1
 31597 1c38 9C       		.byte	0x9c
 31598 1c39 581C0000 		.4byte	0x1c58
 31599 1c3d 26       		.uleb128 0x26
 31600 1c3e 6900     		.ascii	"i\000"
 31601 1c40 01       		.byte	0x1
 31602 1c41 3D0C     		.2byte	0xc3d
 31603 1c43 97000000 		.4byte	0x97
 31604 1c47 02       		.uleb128 0x2
 31605 1c48 91       		.byte	0x91
 31606 1c49 77       		.sleb128 -9
 31607 1c4a 26       		.uleb128 0x26
 31608 1c4b 6A00     		.ascii	"j\000"
 31609 1c4d 01       		.byte	0x1
 31610 1c4e 3D0C     		.2byte	0xc3d
 31611 1c50 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 679


 31612 1c54 02       		.uleb128 0x2
 31613 1c55 91       		.byte	0x91
 31614 1c56 76       		.sleb128 -10
 31615 1c57 00       		.byte	0
 31616 1c58 28       		.uleb128 0x28
 31617 1c59 7A090000 		.4byte	.LASF314
 31618 1c5d 01       		.byte	0x1
 31619 1c5e DE0C     		.2byte	0xcde
 31620 1c60 00000000 		.4byte	.LFB90
 31621 1c64 40020000 		.4byte	.LFE90-.LFB90
 31622 1c68 01       		.uleb128 0x1
 31623 1c69 9C       		.byte	0x9c
 31624 1c6a 951C0000 		.4byte	0x1c95
 31625 1c6e 23       		.uleb128 0x23
 31626 1c6f B70E0000 		.4byte	.LASF243
 31627 1c73 01       		.byte	0x1
 31628 1c74 E00C     		.2byte	0xce0
 31629 1c76 97000000 		.4byte	0x97
 31630 1c7a 02       		.uleb128 0x2
 31631 1c7b 91       		.byte	0x91
 31632 1c7c 73       		.sleb128 -13
 31633 1c7d 1E       		.uleb128 0x1e
 31634 1c7e FA000000 		.4byte	.LBB30
 31635 1c82 6A000000 		.4byte	.LBE30-.LBB30
 31636 1c86 26       		.uleb128 0x26
 31637 1c87 6900     		.ascii	"i\000"
 31638 1c89 01       		.byte	0x1
 31639 1c8a F10C     		.2byte	0xcf1
 31640 1c8c 73000000 		.4byte	0x73
 31641 1c90 02       		.uleb128 0x2
 31642 1c91 91       		.byte	0x91
 31643 1c92 74       		.sleb128 -12
 31644 1c93 00       		.byte	0
 31645 1c94 00       		.byte	0
 31646 1c95 2C       		.uleb128 0x2c
 31647 1c96 1D0C0000 		.4byte	.LASF315
 31648 1c9a 01       		.byte	0x1
 31649 1c9b 110D     		.2byte	0xd11
 31650 1c9d 00000000 		.4byte	.LFB91
 31651 1ca1 28000000 		.4byte	.LFE91-.LFB91
 31652 1ca5 01       		.uleb128 0x1
 31653 1ca6 9C       		.byte	0x9c
 31654 1ca7 2C       		.uleb128 0x2c
 31655 1ca8 AA120000 		.4byte	.LASF316
 31656 1cac 01       		.byte	0x1
 31657 1cad 1D0D     		.2byte	0xd1d
 31658 1caf 00000000 		.4byte	.LFB92
 31659 1cb3 78000000 		.4byte	.LFE92-.LFB92
 31660 1cb7 01       		.uleb128 0x1
 31661 1cb8 9C       		.byte	0x9c
 31662 1cb9 2C       		.uleb128 0x2c
 31663 1cba 86040000 		.4byte	.LASF317
 31664 1cbe 01       		.byte	0x1
 31665 1cbf 330D     		.2byte	0xd33
 31666 1cc1 00000000 		.4byte	.LFB93
 31667 1cc5 B0000000 		.4byte	.LFE93-.LFB93
 31668 1cc9 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 680


 31669 1cca 9C       		.byte	0x9c
 31670 1ccb 27       		.uleb128 0x27
 31671 1ccc 15070000 		.4byte	.LASF319
 31672 1cd0 01       		.byte	0x1
 31673 1cd1 540D     		.2byte	0xd54
 31674 1cd3 00000000 		.4byte	.LFB94
 31675 1cd7 28010000 		.4byte	.LFE94-.LFB94
 31676 1cdb 01       		.uleb128 0x1
 31677 1cdc 9C       		.byte	0x9c
 31678 1cdd 0F1D0000 		.4byte	0x1d0f
 31679 1ce1 23       		.uleb128 0x23
 31680 1ce2 98070000 		.4byte	.LASF248
 31681 1ce6 01       		.byte	0x1
 31682 1ce7 560D     		.2byte	0xd56
 31683 1ce9 97000000 		.4byte	0x97
 31684 1ced 02       		.uleb128 0x2
 31685 1cee 91       		.byte	0x91
 31686 1cef 6F       		.sleb128 -17
 31687 1cf0 23       		.uleb128 0x23
 31688 1cf1 64130000 		.4byte	.LASF239
 31689 1cf5 01       		.byte	0x1
 31690 1cf6 570D     		.2byte	0xd57
 31691 1cf8 C7000000 		.4byte	0xc7
 31692 1cfc 02       		.uleb128 0x2
 31693 1cfd 91       		.byte	0x91
 31694 1cfe 6C       		.sleb128 -20
 31695 1cff 23       		.uleb128 0x23
 31696 1d00 A0060000 		.4byte	.LASF233
 31697 1d04 01       		.byte	0x1
 31698 1d05 5A0D     		.2byte	0xd5a
 31699 1d07 5D080000 		.4byte	0x85d
 31700 1d0b 02       		.uleb128 0x2
 31701 1d0c 91       		.byte	0x91
 31702 1d0d 64       		.sleb128 -28
 31703 1d0e 00       		.byte	0
 31704 1d0f 27       		.uleb128 0x27
 31705 1d10 680F0000 		.4byte	.LASF320
 31706 1d14 01       		.byte	0x1
 31707 1d15 750D     		.2byte	0xd75
 31708 1d17 00000000 		.4byte	.LFB95
 31709 1d1b B8000000 		.4byte	.LFE95-.LFB95
 31710 1d1f 01       		.uleb128 0x1
 31711 1d20 9C       		.byte	0x9c
 31712 1d21 531D0000 		.4byte	0x1d53
 31713 1d25 23       		.uleb128 0x23
 31714 1d26 98070000 		.4byte	.LASF248
 31715 1d2a 01       		.byte	0x1
 31716 1d2b 770D     		.2byte	0xd77
 31717 1d2d 97000000 		.4byte	0x97
 31718 1d31 02       		.uleb128 0x2
 31719 1d32 91       		.byte	0x91
 31720 1d33 6F       		.sleb128 -17
 31721 1d34 23       		.uleb128 0x23
 31722 1d35 64130000 		.4byte	.LASF239
 31723 1d39 01       		.byte	0x1
 31724 1d3a 780D     		.2byte	0xd78
 31725 1d3c C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 681


 31726 1d40 02       		.uleb128 0x2
 31727 1d41 91       		.byte	0x91
 31728 1d42 6C       		.sleb128 -20
 31729 1d43 23       		.uleb128 0x23
 31730 1d44 A0060000 		.4byte	.LASF233
 31731 1d48 01       		.byte	0x1
 31732 1d49 7C0D     		.2byte	0xd7c
 31733 1d4b 5D080000 		.4byte	0x85d
 31734 1d4f 02       		.uleb128 0x2
 31735 1d50 91       		.byte	0x91
 31736 1d51 64       		.sleb128 -28
 31737 1d52 00       		.byte	0
 31738 1d53 27       		.uleb128 0x27
 31739 1d54 2A020000 		.4byte	.LASF321
 31740 1d58 01       		.byte	0x1
 31741 1d59 8E0D     		.2byte	0xd8e
 31742 1d5b 00000000 		.4byte	.LFB96
 31743 1d5f B8000000 		.4byte	.LFE96-.LFB96
 31744 1d63 01       		.uleb128 0x1
 31745 1d64 9C       		.byte	0x9c
 31746 1d65 971D0000 		.4byte	0x1d97
 31747 1d69 23       		.uleb128 0x23
 31748 1d6a 98070000 		.4byte	.LASF248
 31749 1d6e 01       		.byte	0x1
 31750 1d6f 900D     		.2byte	0xd90
 31751 1d71 97000000 		.4byte	0x97
 31752 1d75 02       		.uleb128 0x2
 31753 1d76 91       		.byte	0x91
 31754 1d77 6F       		.sleb128 -17
 31755 1d78 23       		.uleb128 0x23
 31756 1d79 64130000 		.4byte	.LASF239
 31757 1d7d 01       		.byte	0x1
 31758 1d7e 910D     		.2byte	0xd91
 31759 1d80 C7000000 		.4byte	0xc7
 31760 1d84 02       		.uleb128 0x2
 31761 1d85 91       		.byte	0x91
 31762 1d86 6C       		.sleb128 -20
 31763 1d87 23       		.uleb128 0x23
 31764 1d88 A0060000 		.4byte	.LASF233
 31765 1d8c 01       		.byte	0x1
 31766 1d8d 950D     		.2byte	0xd95
 31767 1d8f 5D080000 		.4byte	0x85d
 31768 1d93 02       		.uleb128 0x2
 31769 1d94 91       		.byte	0x91
 31770 1d95 64       		.sleb128 -28
 31771 1d96 00       		.byte	0
 31772 1d97 27       		.uleb128 0x27
 31773 1d98 7B0A0000 		.4byte	.LASF322
 31774 1d9c 01       		.byte	0x1
 31775 1d9d A70D     		.2byte	0xda7
 31776 1d9f 00000000 		.4byte	.LFB97
 31777 1da3 5C000000 		.4byte	.LFE97-.LFB97
 31778 1da7 01       		.uleb128 0x1
 31779 1da8 9C       		.byte	0x9c
 31780 1da9 CC1D0000 		.4byte	0x1dcc
 31781 1dad 23       		.uleb128 0x23
 31782 1dae 64130000 		.4byte	.LASF239
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 682


 31783 1db2 01       		.byte	0x1
 31784 1db3 A90D     		.2byte	0xda9
 31785 1db5 C7000000 		.4byte	0xc7
 31786 1db9 02       		.uleb128 0x2
 31787 1dba 91       		.byte	0x91
 31788 1dbb 76       		.sleb128 -10
 31789 1dbc 23       		.uleb128 0x23
 31790 1dbd A0060000 		.4byte	.LASF233
 31791 1dc1 01       		.byte	0x1
 31792 1dc2 AD0D     		.2byte	0xdad
 31793 1dc4 90090000 		.4byte	0x990
 31794 1dc8 02       		.uleb128 0x2
 31795 1dc9 91       		.byte	0x91
 31796 1dca 70       		.sleb128 -16
 31797 1dcb 00       		.byte	0
 31798 1dcc 2D       		.uleb128 0x2d
 31799 1dcd 8A0C0000 		.4byte	.LASF323
 31800 1dd1 01       		.byte	0x1
 31801 1dd2 BF0D     		.2byte	0xdbf
 31802 1dd4 00000000 		.4byte	.LFB98
 31803 1dd8 44020000 		.4byte	.LFE98-.LFB98
 31804 1ddc 01       		.uleb128 0x1
 31805 1ddd 9C       		.byte	0x9c
 31806 1dde 361E0000 		.4byte	0x1e36
 31807 1de2 23       		.uleb128 0x23
 31808 1de3 64130000 		.4byte	.LASF239
 31809 1de7 01       		.byte	0x1
 31810 1de8 C20D     		.2byte	0xdc2
 31811 1dea 361E0000 		.4byte	0x1e36
 31812 1dee 02       		.uleb128 0x2
 31813 1def 91       		.byte	0x91
 31814 1df0 70       		.sleb128 -16
 31815 1df1 23       		.uleb128 0x23
 31816 1df2 5A070000 		.4byte	.LASF324
 31817 1df6 01       		.byte	0x1
 31818 1df7 C30D     		.2byte	0xdc3
 31819 1df9 361E0000 		.4byte	0x1e36
 31820 1dfd 05       		.uleb128 0x5
 31821 1dfe 03       		.byte	0x3
 31822 1dff 08000000 		.4byte	last_aux_int16.11403
 31823 1e03 2E       		.uleb128 0x2e
 31824 1e04 2E000000 		.4byte	.LBB31
 31825 1e08 50000000 		.4byte	.LBE31-.LBB31
 31826 1e0c 1E1E0000 		.4byte	0x1e1e
 31827 1e10 26       		.uleb128 0x26
 31828 1e11 6900     		.ascii	"i\000"
 31829 1e13 01       		.byte	0x1
 31830 1e14 CA0D     		.2byte	0xdca
 31831 1e16 97000000 		.4byte	0x97
 31832 1e1a 02       		.uleb128 0x2
 31833 1e1b 91       		.byte	0x91
 31834 1e1c 77       		.sleb128 -9
 31835 1e1d 00       		.byte	0
 31836 1e1e 1E       		.uleb128 0x1e
 31837 1e1f 88000000 		.4byte	.LBB32
 31838 1e23 98010000 		.4byte	.LBE32-.LBB32
 31839 1e27 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 683


 31840 1e28 6900     		.ascii	"i\000"
 31841 1e2a 01       		.byte	0x1
 31842 1e2b D40D     		.2byte	0xdd4
 31843 1e2d 97000000 		.4byte	0x97
 31844 1e31 02       		.uleb128 0x2
 31845 1e32 91       		.byte	0x91
 31846 1e33 76       		.sleb128 -10
 31847 1e34 00       		.byte	0
 31848 1e35 00       		.byte	0
 31849 1e36 09       		.uleb128 0x9
 31850 1e37 C7000000 		.4byte	0xc7
 31851 1e3b 461E0000 		.4byte	0x1e46
 31852 1e3f 0A       		.uleb128 0xa
 31853 1e40 18010000 		.4byte	0x118
 31854 1e44 01       		.byte	0x1
 31855 1e45 00       		.byte	0
 31856 1e46 27       		.uleb128 0x27
 31857 1e47 E8150000 		.4byte	.LASF325
 31858 1e4b 01       		.byte	0x1
 31859 1e4c EF0D     		.2byte	0xdef
 31860 1e4e 00000000 		.4byte	.LFB99
 31861 1e52 E4000000 		.4byte	.LFE99-.LFB99
 31862 1e56 01       		.uleb128 0x1
 31863 1e57 9C       		.byte	0x9c
 31864 1e58 6C1E0000 		.4byte	0x1e6c
 31865 1e5c 26       		.uleb128 0x26
 31866 1e5d 61757800 		.ascii	"aux\000"
 31867 1e61 01       		.byte	0x1
 31868 1e62 F20D     		.2byte	0xdf2
 31869 1e64 97000000 		.4byte	0x97
 31870 1e68 02       		.uleb128 0x2
 31871 1e69 91       		.byte	0x91
 31872 1e6a 77       		.sleb128 -9
 31873 1e6b 00       		.byte	0
 31874 1e6c 27       		.uleb128 0x27
 31875 1e6d E80C0000 		.4byte	.LASF326
 31876 1e71 01       		.byte	0x1
 31877 1e72 140E     		.2byte	0xe14
 31878 1e74 00000000 		.4byte	.LFB100
 31879 1e78 5C000000 		.4byte	.LFE100-.LFB100
 31880 1e7c 01       		.uleb128 0x1
 31881 1e7d 9C       		.byte	0x9c
 31882 1e7e 921E0000 		.4byte	0x1e92
 31883 1e82 23       		.uleb128 0x23
 31884 1e83 A0060000 		.4byte	.LASF233
 31885 1e87 01       		.byte	0x1
 31886 1e88 160E     		.2byte	0xe16
 31887 1e8a 10060000 		.4byte	0x610
 31888 1e8e 02       		.uleb128 0x2
 31889 1e8f 91       		.byte	0x91
 31890 1e90 74       		.sleb128 -12
 31891 1e91 00       		.byte	0
 31892 1e92 27       		.uleb128 0x27
 31893 1e93 6B110000 		.4byte	.LASF327
 31894 1e97 01       		.byte	0x1
 31895 1e98 2B0E     		.2byte	0xe2b
 31896 1e9a 00000000 		.4byte	.LFB101
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 684


 31897 1e9e 38010000 		.4byte	.LFE101-.LFB101
 31898 1ea2 01       		.uleb128 0x1
 31899 1ea3 9C       		.byte	0x9c
 31900 1ea4 D61E0000 		.4byte	0x1ed6
 31901 1ea8 23       		.uleb128 0x23
 31902 1ea9 98070000 		.4byte	.LASF248
 31903 1ead 01       		.byte	0x1
 31904 1eae 2D0E     		.2byte	0xe2d
 31905 1eb0 97000000 		.4byte	0x97
 31906 1eb4 02       		.uleb128 0x2
 31907 1eb5 91       		.byte	0x91
 31908 1eb6 6F       		.sleb128 -17
 31909 1eb7 23       		.uleb128 0x23
 31910 1eb8 64130000 		.4byte	.LASF239
 31911 1ebc 01       		.byte	0x1
 31912 1ebd 2E0E     		.2byte	0xe2e
 31913 1ebf C7000000 		.4byte	0xc7
 31914 1ec3 02       		.uleb128 0x2
 31915 1ec4 91       		.byte	0x91
 31916 1ec5 6C       		.sleb128 -20
 31917 1ec6 23       		.uleb128 0x23
 31918 1ec7 A0060000 		.4byte	.LASF233
 31919 1ecb 01       		.byte	0x1
 31920 1ecc 320E     		.2byte	0xe32
 31921 1ece 71050000 		.4byte	0x571
 31922 1ed2 02       		.uleb128 0x2
 31923 1ed3 91       		.byte	0x91
 31924 1ed4 60       		.sleb128 -32
 31925 1ed5 00       		.byte	0
 31926 1ed6 27       		.uleb128 0x27
 31927 1ed7 E50A0000 		.4byte	.LASF328
 31928 1edb 01       		.byte	0x1
 31929 1edc 520E     		.2byte	0xe52
 31930 1ede 00000000 		.4byte	.LFB102
 31931 1ee2 EC000000 		.4byte	.LFE102-.LFB102
 31932 1ee6 01       		.uleb128 0x1
 31933 1ee7 9C       		.byte	0x9c
 31934 1ee8 0B1F0000 		.4byte	0x1f0b
 31935 1eec 23       		.uleb128 0x23
 31936 1eed A0060000 		.4byte	.LASF233
 31937 1ef1 01       		.byte	0x1
 31938 1ef2 560E     		.2byte	0xe56
 31939 1ef4 90090000 		.4byte	0x990
 31940 1ef8 02       		.uleb128 0x2
 31941 1ef9 91       		.byte	0x91
 31942 1efa 68       		.sleb128 -24
 31943 1efb 23       		.uleb128 0x23
 31944 1efc 64130000 		.4byte	.LASF239
 31945 1f00 01       		.byte	0x1
 31946 1f01 570E     		.2byte	0xe57
 31947 1f03 C7000000 		.4byte	0xc7
 31948 1f07 02       		.uleb128 0x2
 31949 1f08 91       		.byte	0x91
 31950 1f09 66       		.sleb128 -26
 31951 1f0a 00       		.byte	0
 31952 1f0b 27       		.uleb128 0x27
 31953 1f0c 0C080000 		.4byte	.LASF329
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 685


 31954 1f10 01       		.byte	0x1
 31955 1f11 780E     		.2byte	0xe78
 31956 1f13 00000000 		.4byte	.LFB103
 31957 1f17 64000000 		.4byte	.LFE103-.LFB103
 31958 1f1b 01       		.uleb128 0x1
 31959 1f1c 9C       		.byte	0x9c
 31960 1f1d 401F0000 		.4byte	0x1f40
 31961 1f21 23       		.uleb128 0x23
 31962 1f22 A0060000 		.4byte	.LASF233
 31963 1f26 01       		.byte	0x1
 31964 1f27 7C0E     		.2byte	0xe7c
 31965 1f29 FD0A0000 		.4byte	0xafd
 31966 1f2d 02       		.uleb128 0x2
 31967 1f2e 91       		.byte	0x91
 31968 1f2f 74       		.sleb128 -12
 31969 1f30 23       		.uleb128 0x23
 31970 1f31 64130000 		.4byte	.LASF239
 31971 1f35 01       		.byte	0x1
 31972 1f36 7D0E     		.2byte	0xe7d
 31973 1f38 C7000000 		.4byte	0xc7
 31974 1f3c 02       		.uleb128 0x2
 31975 1f3d 91       		.byte	0x91
 31976 1f3e 72       		.sleb128 -14
 31977 1f3f 00       		.byte	0
 31978 1f40 2F       		.uleb128 0x2f
 31979 1f41 F6070000 		.4byte	.LASF330
 31980 1f45 01       		.byte	0x1
 31981 1f46 920E     		.2byte	0xe92
 31982 1f48 C7000000 		.4byte	0xc7
 31983 1f4c 00000000 		.4byte	.LFB104
 31984 1f50 A8000000 		.4byte	.LFE104-.LFB104
 31985 1f54 01       		.uleb128 0x1
 31986 1f55 9C       		.byte	0x9c
 31987 1f56 B51F0000 		.4byte	0x1fb5
 31988 1f5a 23       		.uleb128 0x23
 31989 1f5b A0060000 		.4byte	.LASF233
 31990 1f5f 01       		.byte	0x1
 31991 1f60 940E     		.2byte	0xe94
 31992 1f62 B51F0000 		.4byte	0x1fb5
 31993 1f66 02       		.uleb128 0x2
 31994 1f67 91       		.byte	0x91
 31995 1f68 5C       		.sleb128 -36
 31996 1f69 23       		.uleb128 0x23
 31997 1f6a 2C0C0000 		.4byte	.LASF234
 31998 1f6e 01       		.byte	0x1
 31999 1f6f 950E     		.2byte	0xe95
 32000 1f71 97000000 		.4byte	0x97
 32001 1f75 02       		.uleb128 0x2
 32002 1f76 91       		.byte	0x91
 32003 1f77 74       		.sleb128 -12
 32004 1f78 23       		.uleb128 0x23
 32005 1f79 F8100000 		.4byte	.LASF331
 32006 1f7d 01       		.byte	0x1
 32007 1f7e 960E     		.2byte	0xe96
 32008 1f80 C7000000 		.4byte	0xc7
 32009 1f84 02       		.uleb128 0x2
 32010 1f85 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 686


 32011 1f86 76       		.sleb128 -10
 32012 1f87 23       		.uleb128 0x23
 32013 1f88 F8020000 		.4byte	.LASF332
 32014 1f8c 01       		.byte	0x1
 32015 1f8d 970E     		.2byte	0xe97
 32016 1f8f AF000000 		.4byte	0xaf
 32017 1f93 02       		.uleb128 0x2
 32018 1f94 91       		.byte	0x91
 32019 1f95 70       		.sleb128 -16
 32020 1f96 23       		.uleb128 0x23
 32021 1f97 D5140000 		.4byte	.LASF333
 32022 1f9b 01       		.byte	0x1
 32023 1f9c 970E     		.2byte	0xe97
 32024 1f9e AF000000 		.4byte	0xaf
 32025 1fa2 02       		.uleb128 0x2
 32026 1fa3 91       		.byte	0x91
 32027 1fa4 6C       		.sleb128 -20
 32028 1fa5 23       		.uleb128 0x23
 32029 1fa6 F1040000 		.4byte	.LASF334
 32030 1faa 01       		.byte	0x1
 32031 1fab 980E     		.2byte	0xe98
 32032 1fad 97000000 		.4byte	0x97
 32033 1fb1 02       		.uleb128 0x2
 32034 1fb2 91       		.byte	0x91
 32035 1fb3 75       		.sleb128 -11
 32036 1fb4 00       		.byte	0
 32037 1fb5 09       		.uleb128 0x9
 32038 1fb6 97000000 		.4byte	0x97
 32039 1fba C51F0000 		.4byte	0x1fc5
 32040 1fbe 0A       		.uleb128 0xa
 32041 1fbf 18010000 		.4byte	0x118
 32042 1fc3 0F       		.byte	0xf
 32043 1fc4 00       		.byte	0
 32044 1fc5 30       		.uleb128 0x30
 32045 1fc6 0F010000 		.4byte	.LASF369
 32046 1fca 01       		.byte	0x1
 32047 1fcb B50E     		.2byte	0xeb5
 32048 1fcd 00000000 		.4byte	.LFB105
 32049 1fd1 34000000 		.4byte	.LFE105-.LFB105
 32050 1fd5 01       		.uleb128 0x1
 32051 1fd6 9C       		.byte	0x9c
 32052 1fd7 27       		.uleb128 0x27
 32053 1fd8 46040000 		.4byte	.LASF335
 32054 1fdc 01       		.byte	0x1
 32055 1fdd C30E     		.2byte	0xec3
 32056 1fdf 00000000 		.4byte	.LFB106
 32057 1fe3 20000000 		.4byte	.LFE106-.LFB106
 32058 1fe7 01       		.uleb128 0x1
 32059 1fe8 9C       		.byte	0x9c
 32060 1fe9 FD1F0000 		.4byte	0x1ffd
 32061 1fed 23       		.uleb128 0x23
 32062 1fee A0060000 		.4byte	.LASF233
 32063 1ff2 01       		.byte	0x1
 32064 1ff3 C50E     		.2byte	0xec5
 32065 1ff5 CC080000 		.4byte	0x8cc
 32066 1ff9 02       		.uleb128 0x2
 32067 1ffa 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 687


 32068 1ffb 74       		.sleb128 -12
 32069 1ffc 00       		.byte	0
 32070 1ffd 27       		.uleb128 0x27
 32071 1ffe 87010000 		.4byte	.LASF336
 32072 2002 01       		.byte	0x1
 32073 2003 D10E     		.2byte	0xed1
 32074 2005 00000000 		.4byte	.LFB107
 32075 2009 A0000000 		.4byte	.LFE107-.LFB107
 32076 200d 01       		.uleb128 0x1
 32077 200e 9C       		.byte	0x9c
 32078 200f 32200000 		.4byte	0x2032
 32079 2013 23       		.uleb128 0x23
 32080 2014 A0060000 		.4byte	.LASF233
 32081 2018 01       		.byte	0x1
 32082 2019 D50E     		.2byte	0xed5
 32083 201b 90090000 		.4byte	0x990
 32084 201f 02       		.uleb128 0x2
 32085 2020 91       		.byte	0x91
 32086 2021 70       		.sleb128 -16
 32087 2022 23       		.uleb128 0x23
 32088 2023 64130000 		.4byte	.LASF239
 32089 2027 01       		.byte	0x1
 32090 2028 D60E     		.2byte	0xed6
 32091 202a C7000000 		.4byte	0xc7
 32092 202e 02       		.uleb128 0x2
 32093 202f 91       		.byte	0x91
 32094 2030 6E       		.sleb128 -18
 32095 2031 00       		.byte	0
 32096 2032 27       		.uleb128 0x27
 32097 2033 34120000 		.4byte	.LASF337
 32098 2037 01       		.byte	0x1
 32099 2038 EA0E     		.2byte	0xeea
 32100 203a 00000000 		.4byte	.LFB108
 32101 203e BC010000 		.4byte	.LFE108-.LFB108
 32102 2042 01       		.uleb128 0x1
 32103 2043 9C       		.byte	0x9c
 32104 2044 94200000 		.4byte	0x2094
 32105 2048 23       		.uleb128 0x23
 32106 2049 A60C0000 		.4byte	.LASF338
 32107 204d 01       		.byte	0x1
 32108 204e ED0E     		.2byte	0xeed
 32109 2050 AF000000 		.4byte	0xaf
 32110 2054 02       		.uleb128 0x2
 32111 2055 91       		.byte	0x91
 32112 2056 70       		.sleb128 -16
 32113 2057 23       		.uleb128 0x23
 32114 2058 73100000 		.4byte	.LASF339
 32115 205c 01       		.byte	0x1
 32116 205d EE0E     		.2byte	0xeee
 32117 205f EB000000 		.4byte	0xeb
 32118 2063 02       		.uleb128 0x2
 32119 2064 91       		.byte	0x91
 32120 2065 6C       		.sleb128 -20
 32121 2066 23       		.uleb128 0x23
 32122 2067 2C0C0000 		.4byte	.LASF234
 32123 206b 01       		.byte	0x1
 32124 206c EF0E     		.2byte	0xeef
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 688


 32125 206e 97000000 		.4byte	0x97
 32126 2072 02       		.uleb128 0x2
 32127 2073 91       		.byte	0x91
 32128 2074 77       		.sleb128 -9
 32129 2075 23       		.uleb128 0x23
 32130 2076 A0060000 		.4byte	.LASF233
 32131 207a 01       		.byte	0x1
 32132 207b F00E     		.2byte	0xef0
 32133 207d CC080000 		.4byte	0x8cc
 32134 2081 02       		.uleb128 0x2
 32135 2082 91       		.byte	0x91
 32136 2083 68       		.sleb128 -24
 32137 2084 23       		.uleb128 0x23
 32138 2085 32110000 		.4byte	.LASF297
 32139 2089 01       		.byte	0x1
 32140 208a F10E     		.2byte	0xef1
 32141 208c 97000000 		.4byte	0x97
 32142 2090 02       		.uleb128 0x2
 32143 2091 91       		.byte	0x91
 32144 2092 6B       		.sleb128 -21
 32145 2093 00       		.byte	0
 32146 2094 27       		.uleb128 0x27
 32147 2095 40020000 		.4byte	.LASF340
 32148 2099 01       		.byte	0x1
 32149 209a 2B0F     		.2byte	0xf2b
 32150 209c 00000000 		.4byte	.LFB109
 32151 20a0 60000000 		.4byte	.LFE109-.LFB109
 32152 20a4 01       		.uleb128 0x1
 32153 20a5 9C       		.byte	0x9c
 32154 20a6 C9200000 		.4byte	0x20c9
 32155 20aa 23       		.uleb128 0x23
 32156 20ab A0060000 		.4byte	.LASF233
 32157 20af 01       		.byte	0x1
 32158 20b0 2D0F     		.2byte	0xf2d
 32159 20b2 90090000 		.4byte	0x990
 32160 20b6 02       		.uleb128 0x2
 32161 20b7 91       		.byte	0x91
 32162 20b8 70       		.sleb128 -16
 32163 20b9 23       		.uleb128 0x23
 32164 20ba 64130000 		.4byte	.LASF239
 32165 20be 01       		.byte	0x1
 32166 20bf 2E0F     		.2byte	0xf2e
 32167 20c1 C7000000 		.4byte	0xc7
 32168 20c5 02       		.uleb128 0x2
 32169 20c6 91       		.byte	0x91
 32170 20c7 6E       		.sleb128 -18
 32171 20c8 00       		.byte	0
 32172 20c9 27       		.uleb128 0x27
 32173 20ca C3010000 		.4byte	.LASF341
 32174 20ce 01       		.byte	0x1
 32175 20cf 410F     		.2byte	0xf41
 32176 20d1 00000000 		.4byte	.LFB110
 32177 20d5 98050000 		.4byte	.LFE110-.LFB110
 32178 20d9 01       		.uleb128 0x1
 32179 20da 9C       		.byte	0x9c
 32180 20db 56210000 		.4byte	0x2156
 32181 20df 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 689


 32182 20e0 23150000 		.4byte	.LASF342
 32183 20e4 01       		.byte	0x1
 32184 20e5 440F     		.2byte	0xf44
 32185 20e7 97000000 		.4byte	0x97
 32186 20eb 02       		.uleb128 0x2
 32187 20ec 91       		.byte	0x91
 32188 20ed 6F       		.sleb128 -17
 32189 20ee 26       		.uleb128 0x26
 32190 20ef 6300     		.ascii	"c\000"
 32191 20f1 01       		.byte	0x1
 32192 20f2 450F     		.2byte	0xf45
 32193 20f4 A3000000 		.4byte	0xa3
 32194 20f8 02       		.uleb128 0x2
 32195 20f9 91       		.byte	0x91
 32196 20fa 6C       		.sleb128 -20
 32197 20fb 26       		.uleb128 0x26
 32198 20fc 6B00     		.ascii	"k\000"
 32199 20fe 01       		.byte	0x1
 32200 20ff 460F     		.2byte	0xf46
 32201 2101 97000000 		.4byte	0x97
 32202 2105 02       		.uleb128 0x2
 32203 2106 91       		.byte	0x91
 32204 2107 6B       		.sleb128 -21
 32205 2108 23       		.uleb128 0x23
 32206 2109 5C000000 		.4byte	.LASF343
 32207 210d 01       		.byte	0x1
 32208 210e 470F     		.2byte	0xf47
 32209 2110 A3000000 		.4byte	0xa3
 32210 2114 02       		.uleb128 0x2
 32211 2115 91       		.byte	0x91
 32212 2116 68       		.sleb128 -24
 32213 2117 23       		.uleb128 0x23
 32214 2118 64130000 		.4byte	.LASF239
 32215 211c 01       		.byte	0x1
 32216 211d 480F     		.2byte	0xf48
 32217 211f C7000000 		.4byte	0xc7
 32218 2123 02       		.uleb128 0x2
 32219 2124 91       		.byte	0x91
 32220 2125 66       		.sleb128 -26
 32221 2126 23       		.uleb128 0x23
 32222 2127 A0140000 		.4byte	.LASF238
 32223 212b 01       		.byte	0x1
 32224 212c 490F     		.2byte	0xf49
 32225 212e EB000000 		.4byte	0xeb
 32226 2132 02       		.uleb128 0x2
 32227 2133 91       		.byte	0x91
 32228 2134 60       		.sleb128 -32
 32229 2135 23       		.uleb128 0x23
 32230 2136 A0060000 		.4byte	.LASF233
 32231 213a 01       		.byte	0x1
 32232 213b 4C0F     		.2byte	0xf4c
 32233 213d 56210000 		.4byte	0x2156
 32234 2141 03       		.uleb128 0x3
 32235 2142 91       		.byte	0x91
 32236 2143 807D     		.sleb128 -384
 32237 2145 23       		.uleb128 0x23
 32238 2146 AE090000 		.4byte	.LASF344
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 690


 32239 214a 01       		.byte	0x1
 32240 214b 4D0F     		.2byte	0xf4d
 32241 214d 540C0000 		.4byte	0xc54
 32242 2151 03       		.uleb128 0x3
 32243 2152 91       		.byte	0x91
 32244 2153 E07C     		.sleb128 -416
 32245 2155 00       		.byte	0
 32246 2156 09       		.uleb128 0x9
 32247 2157 97000000 		.4byte	0x97
 32248 215b 67210000 		.4byte	0x2167
 32249 215f 24       		.uleb128 0x24
 32250 2160 18010000 		.4byte	0x118
 32251 2164 5D01     		.2byte	0x15d
 32252 2166 00       		.byte	0
 32253 2167 27       		.uleb128 0x27
 32254 2168 7B140000 		.4byte	.LASF345
 32255 216c 01       		.byte	0x1
 32256 216d B00F     		.2byte	0xfb0
 32257 216f 00000000 		.4byte	.LFB111
 32258 2173 8C000000 		.4byte	.LFE111-.LFB111
 32259 2177 01       		.uleb128 0x1
 32260 2178 9C       		.byte	0x9c
 32261 2179 A7210000 		.4byte	0x21a7
 32262 217d 23       		.uleb128 0x23
 32263 217e A0060000 		.4byte	.LASF233
 32264 2182 01       		.byte	0x1
 32265 2183 B30F     		.2byte	0xfb3
 32266 2185 AB0A0000 		.4byte	0xaab
 32267 2189 02       		.uleb128 0x2
 32268 218a 91       		.byte	0x91
 32269 218b 60       		.sleb128 -32
 32270 218c 26       		.uleb128 0x26
 32271 218d 6900     		.ascii	"i\000"
 32272 218f 01       		.byte	0x1
 32273 2190 B40F     		.2byte	0xfb4
 32274 2192 97000000 		.4byte	0x97
 32275 2196 02       		.uleb128 0x2
 32276 2197 91       		.byte	0x91
 32277 2198 6F       		.sleb128 -17
 32278 2199 26       		.uleb128 0x26
 32279 219a 6A00     		.ascii	"j\000"
 32280 219c 01       		.byte	0x1
 32281 219d B40F     		.2byte	0xfb4
 32282 219f 97000000 		.4byte	0x97
 32283 21a3 02       		.uleb128 0x2
 32284 21a4 91       		.byte	0x91
 32285 21a5 6E       		.sleb128 -18
 32286 21a6 00       		.byte	0
 32287 21a7 27       		.uleb128 0x27
 32288 21a8 6E120000 		.4byte	.LASF346
 32289 21ac 01       		.byte	0x1
 32290 21ad C90F     		.2byte	0xfc9
 32291 21af 00000000 		.4byte	.LFB112
 32292 21b3 EC000000 		.4byte	.LFE112-.LFB112
 32293 21b7 01       		.uleb128 0x1
 32294 21b8 9C       		.byte	0x9c
 32295 21b9 05220000 		.4byte	0x2205
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 691


 32296 21bd 23       		.uleb128 0x23
 32297 21be A0060000 		.4byte	.LASF233
 32298 21c2 01       		.byte	0x1
 32299 21c3 CC0F     		.2byte	0xfcc
 32300 21c5 05220000 		.4byte	0x2205
 32301 21c9 02       		.uleb128 0x2
 32302 21ca 91       		.byte	0x91
 32303 21cb 54       		.sleb128 -44
 32304 21cc 26       		.uleb128 0x26
 32305 21cd 6900     		.ascii	"i\000"
 32306 21cf 01       		.byte	0x1
 32307 21d0 CD0F     		.2byte	0xfcd
 32308 21d2 97000000 		.4byte	0x97
 32309 21d6 02       		.uleb128 0x2
 32310 21d7 91       		.byte	0x91
 32311 21d8 6F       		.sleb128 -17
 32312 21d9 26       		.uleb128 0x26
 32313 21da 6A00     		.ascii	"j\000"
 32314 21dc 01       		.byte	0x1
 32315 21dd CD0F     		.2byte	0xfcd
 32316 21df 97000000 		.4byte	0x97
 32317 21e3 02       		.uleb128 0x2
 32318 21e4 91       		.byte	0x91
 32319 21e5 6E       		.sleb128 -18
 32320 21e6 26       		.uleb128 0x26
 32321 21e7 69647800 		.ascii	"idx\000"
 32322 21eb 01       		.byte	0x1
 32323 21ec CD0F     		.2byte	0xfcd
 32324 21ee 97000000 		.4byte	0x97
 32325 21f2 02       		.uleb128 0x2
 32326 21f3 91       		.byte	0x91
 32327 21f4 6D       		.sleb128 -19
 32328 21f5 23       		.uleb128 0x23
 32329 21f6 8D0D0000 		.4byte	.LASF240
 32330 21fa 01       		.byte	0x1
 32331 21fb CE0F     		.2byte	0xfce
 32332 21fd A3000000 		.4byte	0xa3
 32333 2201 02       		.uleb128 0x2
 32334 2202 91       		.byte	0x91
 32335 2203 52       		.sleb128 -46
 32336 2204 00       		.byte	0
 32337 2205 09       		.uleb128 0x9
 32338 2206 97000000 		.4byte	0x97
 32339 220a 15220000 		.4byte	0x2215
 32340 220e 0A       		.uleb128 0xa
 32341 220f 18010000 		.4byte	0x118
 32342 2213 15       		.byte	0x15
 32343 2214 00       		.byte	0
 32344 2215 27       		.uleb128 0x27
 32345 2216 DC030000 		.4byte	.LASF347
 32346 221a 01       		.byte	0x1
 32347 221b E70F     		.2byte	0xfe7
 32348 221d 00000000 		.4byte	.LFB113
 32349 2221 5C000000 		.4byte	.LFE113-.LFB113
 32350 2225 01       		.uleb128 0x1
 32351 2226 9C       		.byte	0x9c
 32352 2227 48220000 		.4byte	0x2248
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 692


 32353 222b 23       		.uleb128 0x23
 32354 222c A0060000 		.4byte	.LASF233
 32355 2230 01       		.byte	0x1
 32356 2231 EA0F     		.2byte	0xfea
 32357 2233 440C0000 		.4byte	0xc44
 32358 2237 02       		.uleb128 0x2
 32359 2238 91       		.byte	0x91
 32360 2239 68       		.sleb128 -24
 32361 223a 26       		.uleb128 0x26
 32362 223b 6900     		.ascii	"i\000"
 32363 223d 01       		.byte	0x1
 32364 223e EB0F     		.2byte	0xfeb
 32365 2240 97000000 		.4byte	0x97
 32366 2244 02       		.uleb128 0x2
 32367 2245 91       		.byte	0x91
 32368 2246 77       		.sleb128 -9
 32369 2247 00       		.byte	0
 32370 2248 27       		.uleb128 0x27
 32371 2249 14040000 		.4byte	.LASF348
 32372 224d 01       		.byte	0x1
 32373 224e FE0F     		.2byte	0xffe
 32374 2250 00000000 		.4byte	.LFB114
 32375 2254 C0000000 		.4byte	.LFE114-.LFB114
 32376 2258 01       		.uleb128 0x1
 32377 2259 9C       		.byte	0x9c
 32378 225a 99220000 		.4byte	0x2299
 32379 225e 23       		.uleb128 0x23
 32380 225f A0060000 		.4byte	.LASF233
 32381 2263 01       		.byte	0x1
 32382 2264 0110     		.2byte	0x1001
 32383 2266 99220000 		.4byte	0x2299
 32384 226a 02       		.uleb128 0x2
 32385 226b 91       		.byte	0x91
 32386 226c 54       		.sleb128 -44
 32387 226d 26       		.uleb128 0x26
 32388 226e 6900     		.ascii	"i\000"
 32389 2270 01       		.byte	0x1
 32390 2271 0210     		.2byte	0x1002
 32391 2273 97000000 		.4byte	0x97
 32392 2277 02       		.uleb128 0x2
 32393 2278 91       		.byte	0x91
 32394 2279 6F       		.sleb128 -17
 32395 227a 26       		.uleb128 0x26
 32396 227b 69647800 		.ascii	"idx\000"
 32397 227f 01       		.byte	0x1
 32398 2280 0210     		.2byte	0x1002
 32399 2282 97000000 		.4byte	0x97
 32400 2286 02       		.uleb128 0x2
 32401 2287 91       		.byte	0x91
 32402 2288 6E       		.sleb128 -18
 32403 2289 23       		.uleb128 0x23
 32404 228a 64130000 		.4byte	.LASF239
 32405 228e 01       		.byte	0x1
 32406 228f 0310     		.2byte	0x1003
 32407 2291 C7000000 		.4byte	0xc7
 32408 2295 02       		.uleb128 0x2
 32409 2296 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 693


 32410 2297 52       		.sleb128 -46
 32411 2298 00       		.byte	0
 32412 2299 09       		.uleb128 0x9
 32413 229a 97000000 		.4byte	0x97
 32414 229e A9220000 		.4byte	0x22a9
 32415 22a2 0A       		.uleb128 0xa
 32416 22a3 18010000 		.4byte	0x118
 32417 22a7 19       		.byte	0x19
 32418 22a8 00       		.byte	0
 32419 22a9 22       		.uleb128 0x22
 32420 22aa 86030000 		.4byte	.LASF349
 32421 22ae 01       		.byte	0x1
 32422 22af 1910     		.2byte	0x1019
 32423 22b1 00000000 		.4byte	.LFB115
 32424 22b5 54010000 		.4byte	.LFE115-.LFB115
 32425 22b9 01       		.uleb128 0x1
 32426 22ba 9C       		.byte	0x9c
 32427 22bb FE220000 		.4byte	0x22fe
 32428 22bf 25       		.uleb128 0x25
 32429 22c0 DD070000 		.4byte	.LASF350
 32430 22c4 01       		.byte	0x1
 32431 22c5 1910     		.2byte	0x1019
 32432 22c7 A3000000 		.4byte	0xa3
 32433 22cb 04       		.uleb128 0x4
 32434 22cc 91       		.byte	0x91
 32435 22cd 9EE37E   		.sleb128 -20066
 32436 22d0 26       		.uleb128 0x26
 32437 22d1 6900     		.ascii	"i\000"
 32438 22d3 01       		.byte	0x1
 32439 22d4 1B10     		.2byte	0x101b
 32440 22d6 97000000 		.4byte	0x97
 32441 22da 02       		.uleb128 0x2
 32442 22db 91       		.byte	0x91
 32443 22dc 77       		.sleb128 -9
 32444 22dd 23       		.uleb128 0x23
 32445 22de D6040000 		.4byte	.LASF351
 32446 22e2 01       		.byte	0x1
 32447 22e3 1C10     		.2byte	0x101c
 32448 22e5 EF100000 		.4byte	0x10ef
 32449 22e9 02       		.uleb128 0x2
 32450 22ea 91       		.byte	0x91
 32451 22eb 44       		.sleb128 -60
 32452 22ec 23       		.uleb128 0x23
 32453 22ed FE080000 		.4byte	.LASF222
 32454 22f1 01       		.byte	0x1
 32455 22f2 1D10     		.2byte	0x101d
 32456 22f4 170F0000 		.4byte	0xf17
 32457 22f8 04       		.uleb128 0x4
 32458 22f9 91       		.byte	0x91
 32459 22fa A4E37E   		.sleb128 -20060
 32460 22fd 00       		.byte	0
 32461 22fe 22       		.uleb128 0x22
 32462 22ff 73040000 		.4byte	.LASF352
 32463 2303 01       		.byte	0x1
 32464 2304 3510     		.2byte	0x1035
 32465 2306 00000000 		.4byte	.LFB116
 32466 230a B0000000 		.4byte	.LFE116-.LFB116
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 694


 32467 230e 01       		.uleb128 0x1
 32468 230f 9C       		.byte	0x9c
 32469 2310 5F230000 		.4byte	0x235f
 32470 2314 25       		.uleb128 0x25
 32471 2315 DD070000 		.4byte	.LASF350
 32472 2319 01       		.byte	0x1
 32473 231a 3510     		.2byte	0x1035
 32474 231c A3000000 		.4byte	0xa3
 32475 2320 03       		.uleb128 0x3
 32476 2321 91       		.byte	0x91
 32477 2322 BE7F     		.sleb128 -66
 32478 2324 26       		.uleb128 0x26
 32479 2325 6900     		.ascii	"i\000"
 32480 2327 01       		.byte	0x1
 32481 2328 3710     		.2byte	0x1037
 32482 232a 97000000 		.4byte	0x97
 32483 232e 02       		.uleb128 0x2
 32484 232f 91       		.byte	0x91
 32485 2330 77       		.sleb128 -9
 32486 2331 23       		.uleb128 0x23
 32487 2332 D6040000 		.4byte	.LASF351
 32488 2336 01       		.byte	0x1
 32489 2337 3810     		.2byte	0x1038
 32490 2339 EF100000 		.4byte	0x10ef
 32491 233d 02       		.uleb128 0x2
 32492 233e 91       		.byte	0x91
 32493 233f 44       		.sleb128 -60
 32494 2340 26       		.uleb128 0x26
 32495 2341 72657300 		.ascii	"res\000"
 32496 2345 01       		.byte	0x1
 32497 2346 4110     		.2byte	0x1041
 32498 2348 97000000 		.4byte	0x97
 32499 234c 02       		.uleb128 0x2
 32500 234d 91       		.byte	0x91
 32501 234e 76       		.sleb128 -10
 32502 234f 23       		.uleb128 0x23
 32503 2350 A0060000 		.4byte	.LASF233
 32504 2354 01       		.byte	0x1
 32505 2355 4410     		.2byte	0x1044
 32506 2357 10060000 		.4byte	0x610
 32507 235b 02       		.uleb128 0x2
 32508 235c 91       		.byte	0x91
 32509 235d 40       		.sleb128 -64
 32510 235e 00       		.byte	0
 32511 235f 22       		.uleb128 0x22
 32512 2360 20010000 		.4byte	.LASF353
 32513 2364 01       		.byte	0x1
 32514 2365 5610     		.2byte	0x1056
 32515 2367 00000000 		.4byte	.LFB117
 32516 236b B4010000 		.4byte	.LFE117-.LFB117
 32517 236f 01       		.uleb128 0x1
 32518 2370 9C       		.byte	0x9c
 32519 2371 DF230000 		.4byte	0x23df
 32520 2375 25       		.uleb128 0x25
 32521 2376 43070000 		.4byte	.LASF354
 32522 237a 01       		.byte	0x1
 32523 237b 5610     		.2byte	0x1056
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 695


 32524 237d 73000000 		.4byte	0x73
 32525 2381 02       		.uleb128 0x2
 32526 2382 91       		.byte	0x91
 32527 2383 4C       		.sleb128 -52
 32528 2384 23       		.uleb128 0x23
 32529 2385 F8100000 		.4byte	.LASF331
 32530 2389 01       		.byte	0x1
 32531 238a 5A10     		.2byte	0x105a
 32532 238c C7000000 		.4byte	0xc7
 32533 2390 02       		.uleb128 0x2
 32534 2391 91       		.byte	0x91
 32535 2392 5C       		.sleb128 -36
 32536 2393 23       		.uleb128 0x23
 32537 2394 E1050000 		.4byte	.LASF355
 32538 2398 01       		.byte	0x1
 32539 2399 5B10     		.2byte	0x105b
 32540 239b D3000000 		.4byte	0xd3
 32541 239f 02       		.uleb128 0x2
 32542 23a0 91       		.byte	0x91
 32543 23a1 64       		.sleb128 -28
 32544 23a2 23       		.uleb128 0x23
 32545 23a3 CB0B0000 		.4byte	.LASF356
 32546 23a7 01       		.byte	0x1
 32547 23a8 5B10     		.2byte	0x105b
 32548 23aa D3000000 		.4byte	0xd3
 32549 23ae 02       		.uleb128 0x2
 32550 23af 91       		.byte	0x91
 32551 23b0 54       		.sleb128 -44
 32552 23b1 23       		.uleb128 0x23
 32553 23b2 2C040000 		.4byte	.LASF357
 32554 23b6 01       		.byte	0x1
 32555 23b7 5B10     		.2byte	0x105b
 32556 23b9 D3000000 		.4byte	0xd3
 32557 23bd 02       		.uleb128 0x2
 32558 23be 91       		.byte	0x91
 32559 23bf 58       		.sleb128 -40
 32560 23c0 23       		.uleb128 0x23
 32561 23c1 D3050000 		.4byte	.LASF358
 32562 23c5 01       		.byte	0x1
 32563 23c6 5C10     		.2byte	0x105c
 32564 23c8 D3000000 		.4byte	0xd3
 32565 23cc 02       		.uleb128 0x2
 32566 23cd 91       		.byte	0x91
 32567 23ce 60       		.sleb128 -32
 32568 23cf 23       		.uleb128 0x23
 32569 23d0 820C0000 		.4byte	.LASF359
 32570 23d4 01       		.byte	0x1
 32571 23d5 5D10     		.2byte	0x105d
 32572 23d7 C7000000 		.4byte	0xc7
 32573 23db 02       		.uleb128 0x2
 32574 23dc 91       		.byte	0x91
 32575 23dd 5E       		.sleb128 -34
 32576 23de 00       		.byte	0
 32577 23df 31       		.uleb128 0x31
 32578 23e0 F90C0000 		.4byte	.LASF360
 32579 23e4 01       		.byte	0x1
 32580 23e5 A410     		.2byte	0x10a4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 696


 32581 23e7 97000000 		.4byte	0x97
 32582 23eb 00000000 		.4byte	.LFB118
 32583 23ef 64010000 		.4byte	.LFE118-.LFB118
 32584 23f3 01       		.uleb128 0x1
 32585 23f4 9C       		.byte	0x9c
 32586 23f5 5A240000 		.4byte	0x245a
 32587 23f9 23       		.uleb128 0x23
 32588 23fa F20E0000 		.4byte	.LASF361
 32589 23fe 01       		.byte	0x1
 32590 23ff A610     		.2byte	0x10a6
 32591 2401 97000000 		.4byte	0x97
 32592 2405 05       		.uleb128 0x5
 32593 2406 03       		.byte	0x3
 32594 2407 0C000000 		.4byte	fsm_state.11566
 32595 240b 26       		.uleb128 0x26
 32596 240c 636E7400 		.ascii	"cnt\000"
 32597 2410 01       		.byte	0x1
 32598 2411 A710     		.2byte	0x10a7
 32599 2413 D3000000 		.4byte	0xd3
 32600 2417 05       		.uleb128 0x5
 32601 2418 03       		.byte	0x3
 32602 2419 10000000 		.4byte	cnt.11567
 32603 241d 23       		.uleb128 0x23
 32604 241e C3040000 		.4byte	.LASF362
 32605 2422 01       		.byte	0x1
 32606 2423 A810     		.2byte	0x10a8
 32607 2425 D3000000 		.4byte	0xd3
 32608 2429 02       		.uleb128 0x2
 32609 242a 91       		.byte	0x91
 32610 242b 74       		.sleb128 -12
 32611 242c 23       		.uleb128 0x23
 32612 242d 130C0000 		.4byte	.LASF363
 32613 2431 01       		.byte	0x1
 32614 2432 A810     		.2byte	0x10a8
 32615 2434 D3000000 		.4byte	0xd3
 32616 2438 02       		.uleb128 0x2
 32617 2439 91       		.byte	0x91
 32618 243a 70       		.sleb128 -16
 32619 243b 23       		.uleb128 0x23
 32620 243c A7000000 		.4byte	.LASF364
 32621 2440 01       		.byte	0x1
 32622 2441 A910     		.2byte	0x10a9
 32623 2443 D3000000 		.4byte	0xd3
 32624 2447 02       		.uleb128 0x2
 32625 2448 91       		.byte	0x91
 32626 2449 6C       		.sleb128 -20
 32627 244a 23       		.uleb128 0x23
 32628 244b B3000000 		.4byte	.LASF365
 32629 244f 01       		.byte	0x1
 32630 2450 A910     		.2byte	0x10a9
 32631 2452 D3000000 		.4byte	0xd3
 32632 2456 02       		.uleb128 0x2
 32633 2457 91       		.byte	0x91
 32634 2458 68       		.sleb128 -24
 32635 2459 00       		.byte	0
 32636 245a 28       		.uleb128 0x28
 32637 245b 44080000 		.4byte	.LASF366
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 697


 32638 245f 01       		.byte	0x1
 32639 2460 F610     		.2byte	0x10f6
 32640 2462 00000000 		.4byte	.LFB119
 32641 2466 12000000 		.4byte	.LFE119-.LFB119
 32642 246a 01       		.uleb128 0x1
 32643 246b 9C       		.byte	0x9c
 32644 246c 80240000 		.4byte	0x2480
 32645 2470 25       		.uleb128 0x25
 32646 2471 43070000 		.4byte	.LASF354
 32647 2475 01       		.byte	0x1
 32648 2476 F610     		.2byte	0x10f6
 32649 2478 73000000 		.4byte	0x73
 32650 247c 02       		.uleb128 0x2
 32651 247d 91       		.byte	0x91
 32652 247e 74       		.sleb128 -12
 32653 247f 00       		.byte	0
 32654 2480 22       		.uleb128 0x22
 32655 2481 860E0000 		.4byte	.LASF367
 32656 2485 01       		.byte	0x1
 32657 2486 4211     		.2byte	0x1142
 32658 2488 00000000 		.4byte	.LFB120
 32659 248c 74010000 		.4byte	.LFE120-.LFB120
 32660 2490 01       		.uleb128 0x1
 32661 2491 9C       		.byte	0x9c
 32662 2492 E2240000 		.4byte	0x24e2
 32663 2496 25       		.uleb128 0x25
 32664 2497 64030000 		.4byte	.LASF368
 32665 249b 01       		.byte	0x1
 32666 249c 4211     		.2byte	0x1142
 32667 249e 97000000 		.4byte	0x97
 32668 24a2 02       		.uleb128 0x2
 32669 24a3 91       		.byte	0x91
 32670 24a4 5F       		.sleb128 -33
 32671 24a5 25       		.uleb128 0x25
 32672 24a6 720B0000 		.4byte	.LASF190
 32673 24aa 01       		.byte	0x1
 32674 24ab 4211     		.2byte	0x1142
 32675 24ad 97000000 		.4byte	0x97
 32676 24b1 02       		.uleb128 0x2
 32677 24b2 91       		.byte	0x91
 32678 24b3 5E       		.sleb128 -34
 32679 24b4 23       		.uleb128 0x23
 32680 24b5 A0060000 		.4byte	.LASF233
 32681 24b9 01       		.byte	0x1
 32682 24ba 4511     		.2byte	0x1145
 32683 24bc 90090000 		.4byte	0x990
 32684 24c0 02       		.uleb128 0x2
 32685 24c1 91       		.byte	0x91
 32686 24c2 68       		.sleb128 -24
 32687 24c3 23       		.uleb128 0x23
 32688 24c4 2C0C0000 		.4byte	.LASF234
 32689 24c8 01       		.byte	0x1
 32690 24c9 4611     		.2byte	0x1146
 32691 24cb 97000000 		.4byte	0x97
 32692 24cf 02       		.uleb128 0x2
 32693 24d0 91       		.byte	0x91
 32694 24d1 6F       		.sleb128 -17
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 698


 32695 24d2 23       		.uleb128 0x23
 32696 24d3 64130000 		.4byte	.LASF239
 32697 24d7 01       		.byte	0x1
 32698 24d8 4711     		.2byte	0x1147
 32699 24da C7000000 		.4byte	0xc7
 32700 24de 02       		.uleb128 0x2
 32701 24df 91       		.byte	0x91
 32702 24e0 66       		.sleb128 -26
 32703 24e1 00       		.byte	0
 32704 24e2 30       		.uleb128 0x30
 32705 24e3 BF000000 		.4byte	.LASF370
 32706 24e7 01       		.byte	0x1
 32707 24e8 6C11     		.2byte	0x116c
 32708 24ea 00000000 		.4byte	.LFB121
 32709 24ee 28000000 		.4byte	.LFE121-.LFB121
 32710 24f2 01       		.uleb128 0x1
 32711 24f3 9C       		.byte	0x9c
 32712 24f4 27       		.uleb128 0x27
 32713 24f5 CF060000 		.4byte	.LASF371
 32714 24f9 01       		.byte	0x1
 32715 24fa 8211     		.2byte	0x1182
 32716 24fc 00000000 		.4byte	.LFB122
 32717 2500 90000000 		.4byte	.LFE122-.LFB122
 32718 2504 01       		.uleb128 0x1
 32719 2505 9C       		.byte	0x9c
 32720 2506 29250000 		.4byte	0x2529
 32721 250a 23       		.uleb128 0x23
 32722 250b A0060000 		.4byte	.LASF233
 32723 250f 01       		.byte	0x1
 32724 2510 8611     		.2byte	0x1186
 32725 2512 4F0B0000 		.4byte	0xb4f
 32726 2516 02       		.uleb128 0x2
 32727 2517 91       		.byte	0x91
 32728 2518 64       		.sleb128 -28
 32729 2519 23       		.uleb128 0x23
 32730 251a 2C0C0000 		.4byte	.LASF234
 32731 251e 01       		.byte	0x1
 32732 251f 8711     		.2byte	0x1187
 32733 2521 97000000 		.4byte	0x97
 32734 2525 02       		.uleb128 0x2
 32735 2526 91       		.byte	0x91
 32736 2527 6F       		.sleb128 -17
 32737 2528 00       		.byte	0
 32738 2529 32       		.uleb128 0x32
 32739 252a AD130000 		.4byte	.LASF372
 32740 252e 09       		.byte	0x9
 32741 252f 1207     		.2byte	0x712
 32742 2531 35250000 		.4byte	0x2535
 32743 2535 06       		.uleb128 0x6
 32744 2536 81000000 		.4byte	0x81
 32745 253a 09       		.uleb128 0x9
 32746 253b 28030000 		.4byte	0x328
 32747 253f 4A250000 		.4byte	0x254a
 32748 2543 0A       		.uleb128 0xa
 32749 2544 18010000 		.4byte	0x118
 32750 2548 01       		.byte	0x1
 32751 2549 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 699


 32752 254a 32       		.uleb128 0x32
 32753 254b 7D150000 		.4byte	.LASF373
 32754 254f 08       		.byte	0x8
 32755 2550 2202     		.2byte	0x222
 32756 2552 3A250000 		.4byte	0x253a
 32757 2556 32       		.uleb128 0x32
 32758 2557 3B050000 		.4byte	.LASF374
 32759 255b 08       		.byte	0x8
 32760 255c 2202     		.2byte	0x222
 32761 255e 3A250000 		.4byte	0x253a
 32762 2562 32       		.uleb128 0x32
 32763 2563 3F0E0000 		.4byte	.LASF375
 32764 2567 08       		.byte	0x8
 32765 2568 2202     		.2byte	0x222
 32766 256a 3A250000 		.4byte	0x253a
 32767 256e 09       		.uleb128 0x9
 32768 256f 65030000 		.4byte	0x365
 32769 2573 7E250000 		.4byte	0x257e
 32770 2577 0A       		.uleb128 0xa
 32771 2578 18010000 		.4byte	0x118
 32772 257c 01       		.byte	0x1
 32773 257d 00       		.byte	0
 32774 257e 32       		.uleb128 0x32
 32775 257f 53070000 		.4byte	.LASF376
 32776 2583 08       		.byte	0x8
 32777 2584 2302     		.2byte	0x223
 32778 2586 6E250000 		.4byte	0x256e
 32779 258a 32       		.uleb128 0x32
 32780 258b D0150000 		.4byte	.LASF377
 32781 258f 08       		.byte	0x8
 32782 2590 2302     		.2byte	0x223
 32783 2592 6E250000 		.4byte	0x256e
 32784 2596 32       		.uleb128 0x32
 32785 2597 47150000 		.4byte	.LASF378
 32786 259b 08       		.byte	0x8
 32787 259c 2402     		.2byte	0x224
 32788 259e E6030000 		.4byte	0x3e6
 32789 25a2 32       		.uleb128 0x32
 32790 25a3 60120000 		.4byte	.LASF379
 32791 25a7 08       		.byte	0x8
 32792 25a8 2402     		.2byte	0x224
 32793 25aa E6030000 		.4byte	0x3e6
 32794 25ae 32       		.uleb128 0x32
 32795 25af 16120000 		.4byte	.LASF380
 32796 25b3 08       		.byte	0x8
 32797 25b4 2502     		.2byte	0x225
 32798 25b6 37040000 		.4byte	0x437
 32799 25ba 32       		.uleb128 0x32
 32800 25bb DA000000 		.4byte	.LASF381
 32801 25bf 08       		.byte	0x8
 32802 25c0 2602     		.2byte	0x226
 32803 25c2 52040000 		.4byte	0x452
 32804 25c6 32       		.uleb128 0x32
 32805 25c7 45120000 		.4byte	.LASF382
 32806 25cb 08       		.byte	0x8
 32807 25cc 2702     		.2byte	0x227
 32808 25ce 5F0B0000 		.4byte	0xb5f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 700


 32809 25d2 32       		.uleb128 0x32
 32810 25d3 F50B0000 		.4byte	.LASF383
 32811 25d7 08       		.byte	0x8
 32812 25d8 2702     		.2byte	0x227
 32813 25da 5F0B0000 		.4byte	0xb5f
 32814 25de 32       		.uleb128 0x32
 32815 25df AB0A0000 		.4byte	.LASF384
 32816 25e3 08       		.byte	0x8
 32817 25e4 2802     		.2byte	0x228
 32818 25e6 100D0000 		.4byte	0xd10
 32819 25ea 32       		.uleb128 0x32
 32820 25eb 41030000 		.4byte	.LASF385
 32821 25ef 08       		.byte	0x8
 32822 25f0 2E02     		.2byte	0x22e
 32823 25f2 A3000000 		.4byte	0xa3
 32824 25f6 32       		.uleb128 0x32
 32825 25f7 850F0000 		.4byte	.LASF386
 32826 25fb 08       		.byte	0x8
 32827 25fc 2F02     		.2byte	0x22f
 32828 25fe A3000000 		.4byte	0xa3
 32829 2602 32       		.uleb128 0x32
 32830 2603 55100000 		.4byte	.LASF387
 32831 2607 08       		.byte	0x8
 32832 2608 3202     		.2byte	0x232
 32833 260a 17040000 		.4byte	0x417
 32834 260e 32       		.uleb128 0x32
 32835 260f 44140000 		.4byte	.LASF388
 32836 2613 08       		.byte	0x8
 32837 2614 3302     		.2byte	0x233
 32838 2616 BC080000 		.4byte	0x8bc
 32839 261a 32       		.uleb128 0x32
 32840 261b CD130000 		.4byte	.LASF389
 32841 261f 08       		.byte	0x8
 32842 2620 3602     		.2byte	0x236
 32843 2622 17040000 		.4byte	0x417
 32844 2626 32       		.uleb128 0x32
 32845 2627 7B0B0000 		.4byte	.LASF390
 32846 262b 08       		.byte	0x8
 32847 262c 4002     		.2byte	0x240
 32848 262e CC080000 		.4byte	0x8cc
 32849 2632 32       		.uleb128 0x32
 32850 2633 03050000 		.4byte	.LASF391
 32851 2637 08       		.byte	0x8
 32852 2638 4202     		.2byte	0x242
 32853 263a 97000000 		.4byte	0x97
 32854 263e 32       		.uleb128 0x32
 32855 263f 000B0000 		.4byte	.LASF392
 32856 2643 08       		.byte	0x8
 32857 2644 4902     		.2byte	0x249
 32858 2646 97000000 		.4byte	0x97
 32859 264a 32       		.uleb128 0x32
 32860 264b 34080000 		.4byte	.LASF393
 32861 264f 08       		.byte	0x8
 32862 2650 4A02     		.2byte	0x24a
 32863 2652 97000000 		.4byte	0x97
 32864 2656 09       		.uleb128 0x9
 32865 2657 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 701


 32866 265b 66260000 		.4byte	0x2666
 32867 265f 0A       		.uleb128 0xa
 32868 2660 18010000 		.4byte	0x118
 32869 2664 0B       		.byte	0xb
 32870 2665 00       		.byte	0
 32871 2666 32       		.uleb128 0x32
 32872 2667 FB040000 		.4byte	.LASF394
 32873 266b 08       		.byte	0x8
 32874 266c 4D02     		.2byte	0x24d
 32875 266e 56260000 		.4byte	0x2656
 32876 2672 32       		.uleb128 0x32
 32877 2673 89150000 		.4byte	.LASF395
 32878 2677 08       		.byte	0x8
 32879 2678 4E02     		.2byte	0x24e
 32880 267a 97000000 		.4byte	0x97
 32881 267e 09       		.uleb128 0x9
 32882 267f AF000000 		.4byte	0xaf
 32883 2683 94260000 		.4byte	0x2694
 32884 2687 0A       		.uleb128 0xa
 32885 2688 18010000 		.4byte	0x118
 32886 268c 01       		.byte	0x1
 32887 268d 0A       		.uleb128 0xa
 32888 268e 18010000 		.4byte	0x118
 32889 2692 04       		.byte	0x4
 32890 2693 00       		.byte	0
 32891 2694 32       		.uleb128 0x32
 32892 2695 73070000 		.4byte	.LASF396
 32893 2699 08       		.byte	0x8
 32894 269a 5402     		.2byte	0x254
 32895 269c 7E260000 		.4byte	0x267e
 32896 26a0 32       		.uleb128 0x32
 32897 26a1 41110000 		.4byte	.LASF397
 32898 26a5 08       		.byte	0x8
 32899 26a6 5502     		.2byte	0x255
 32900 26a8 CC080000 		.4byte	0x8cc
 32901 26ac 09       		.uleb128 0x9
 32902 26ad A3000000 		.4byte	0xa3
 32903 26b1 C2260000 		.4byte	0x26c2
 32904 26b5 0A       		.uleb128 0xa
 32905 26b6 18010000 		.4byte	0x118
 32906 26ba 01       		.byte	0x1
 32907 26bb 0A       		.uleb128 0xa
 32908 26bc 18010000 		.4byte	0x118
 32909 26c0 04       		.byte	0x4
 32910 26c1 00       		.byte	0
 32911 26c2 32       		.uleb128 0x32
 32912 26c3 6D140000 		.4byte	.LASF398
 32913 26c7 08       		.byte	0x8
 32914 26c8 5602     		.2byte	0x256
 32915 26ca AC260000 		.4byte	0x26ac
 32916 26ce 32       		.uleb128 0x32
 32917 26cf B6060000 		.4byte	.LASF399
 32918 26d3 08       		.byte	0x8
 32919 26d4 5E02     		.2byte	0x25e
 32920 26d6 22030000 		.4byte	0x322
 32921 26da 32       		.uleb128 0x32
 32922 26db DB100000 		.4byte	.LASF400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 702


 32923 26df 08       		.byte	0x8
 32924 26e0 5F02     		.2byte	0x25f
 32925 26e2 C1160000 		.4byte	0x16c1
 32926 26e6 32       		.uleb128 0x32
 32927 26e7 24040000 		.4byte	.LASF401
 32928 26eb 08       		.byte	0x8
 32929 26ec 6002     		.2byte	0x260
 32930 26ee C1160000 		.4byte	0x16c1
 32931 26f2 32       		.uleb128 0x32
 32932 26f3 0D150000 		.4byte	.LASF402
 32933 26f7 08       		.byte	0x8
 32934 26f8 6302     		.2byte	0x263
 32935 26fa C1160000 		.4byte	0x16c1
 32936 26fe 32       		.uleb128 0x32
 32937 26ff EB120000 		.4byte	.LASF403
 32938 2703 08       		.byte	0x8
 32939 2704 6602     		.2byte	0x266
 32940 2706 97000000 		.4byte	0x97
 32941 270a 32       		.uleb128 0x32
 32942 270b AA140000 		.4byte	.LASF404
 32943 270f 08       		.byte	0x8
 32944 2710 6702     		.2byte	0x267
 32945 2712 3D080000 		.4byte	0x83d
 32946 2716 32       		.uleb128 0x32
 32947 2717 9E130000 		.4byte	.LASF405
 32948 271b 08       		.byte	0x8
 32949 271c 6802     		.2byte	0x268
 32950 271e 73000000 		.4byte	0x73
 32951 2722 09       		.uleb128 0x9
 32952 2723 73000000 		.4byte	0x73
 32953 2727 32270000 		.4byte	0x2732
 32954 272b 0A       		.uleb128 0xa
 32955 272c 18010000 		.4byte	0x118
 32956 2730 04       		.byte	0x4
 32957 2731 00       		.byte	0
 32958 2732 32       		.uleb128 0x32
 32959 2733 4F0D0000 		.4byte	.LASF406
 32960 2737 08       		.byte	0x8
 32961 2738 6902     		.2byte	0x269
 32962 273a 22270000 		.4byte	0x2722
 32963 273e 09       		.uleb128 0x9
 32964 273f 940C0000 		.4byte	0xc94
 32965 2743 4E270000 		.4byte	0x274e
 32966 2747 0A       		.uleb128 0xa
 32967 2748 18010000 		.4byte	0x118
 32968 274c 04       		.byte	0x4
 32969 274d 00       		.byte	0
 32970 274e 32       		.uleb128 0x32
 32971 274f CD050000 		.4byte	.LASF407
 32972 2753 08       		.byte	0x8
 32973 2754 6A02     		.2byte	0x26a
 32974 2756 3E270000 		.4byte	0x273e
 32975 275a 09       		.uleb128 0x9
 32976 275b 97000000 		.4byte	0x97
 32977 275f 70270000 		.4byte	0x2770
 32978 2763 0A       		.uleb128 0xa
 32979 2764 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 703


 32980 2768 04       		.byte	0x4
 32981 2769 0A       		.uleb128 0xa
 32982 276a 18010000 		.4byte	0x118
 32983 276e 02       		.byte	0x2
 32984 276f 00       		.byte	0
 32985 2770 32       		.uleb128 0x32
 32986 2771 5F0C0000 		.4byte	.LASF408
 32987 2775 08       		.byte	0x8
 32988 2776 6E02     		.2byte	0x26e
 32989 2778 5A270000 		.4byte	0x275a
 32990 277c 32       		.uleb128 0x32
 32991 277d AF150000 		.4byte	.LASF409
 32992 2781 08       		.byte	0x8
 32993 2782 7302     		.2byte	0x273
 32994 2784 97000000 		.4byte	0x97
 32995 2788 09       		.uleb128 0x9
 32996 2789 A3000000 		.4byte	0xa3
 32997 278d 9F270000 		.4byte	0x279f
 32998 2791 24       		.uleb128 0x24
 32999 2792 18010000 		.4byte	0x118
 33000 2796 5702     		.2byte	0x257
 33001 2798 0A       		.uleb128 0xa
 33002 2799 18010000 		.4byte	0x118
 33003 279d 01       		.byte	0x1
 33004 279e 00       		.byte	0
 33005 279f 32       		.uleb128 0x32
 33006 27a0 6E130000 		.4byte	.LASF410
 33007 27a4 08       		.byte	0x8
 33008 27a5 7602     		.2byte	0x276
 33009 27a7 88270000 		.4byte	0x2788
 33010 27ab 32       		.uleb128 0x32
 33011 27ac 5D0B0000 		.4byte	.LASF411
 33012 27b0 08       		.byte	0x8
 33013 27b1 7702     		.2byte	0x277
 33014 27b3 AF000000 		.4byte	0xaf
 33015 27b7 33       		.uleb128 0x33
 33016 27b8 7A130000 		.4byte	.LASF412
 33017 27bc 01       		.byte	0x1
 33018 27bd 33       		.byte	0x33
 33019 27be C8270000 		.4byte	0x27c8
 33020 27c2 05       		.uleb128 0x5
 33021 27c3 03       		.byte	0x3
 33022 27c4 00000000 		.4byte	EEPROM_ADDR
 33023 27c8 07       		.uleb128 0x7
 33024 27c9 04       		.byte	0x4
 33025 27ca 00010000 		.4byte	0x100
 33026 27ce 00       		.byte	0
 33027              		.section	.debug_abbrev,"",%progbits
 33028              	.Ldebug_abbrev0:
 33029 0000 01       		.uleb128 0x1
 33030 0001 11       		.uleb128 0x11
 33031 0002 01       		.byte	0x1
 33032 0003 25       		.uleb128 0x25
 33033 0004 0E       		.uleb128 0xe
 33034 0005 13       		.uleb128 0x13
 33035 0006 0B       		.uleb128 0xb
 33036 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 704


 33037 0008 0E       		.uleb128 0xe
 33038 0009 1B       		.uleb128 0x1b
 33039 000a 0E       		.uleb128 0xe
 33040 000b 55       		.uleb128 0x55
 33041 000c 17       		.uleb128 0x17
 33042 000d 11       		.uleb128 0x11
 33043 000e 01       		.uleb128 0x1
 33044 000f 10       		.uleb128 0x10
 33045 0010 17       		.uleb128 0x17
 33046 0011 00       		.byte	0
 33047 0012 00       		.byte	0
 33048 0013 02       		.uleb128 0x2
 33049 0014 24       		.uleb128 0x24
 33050 0015 00       		.byte	0
 33051 0016 0B       		.uleb128 0xb
 33052 0017 0B       		.uleb128 0xb
 33053 0018 3E       		.uleb128 0x3e
 33054 0019 0B       		.uleb128 0xb
 33055 001a 03       		.uleb128 0x3
 33056 001b 0E       		.uleb128 0xe
 33057 001c 00       		.byte	0
 33058 001d 00       		.byte	0
 33059 001e 03       		.uleb128 0x3
 33060 001f 16       		.uleb128 0x16
 33061 0020 00       		.byte	0
 33062 0021 03       		.uleb128 0x3
 33063 0022 0E       		.uleb128 0xe
 33064 0023 3A       		.uleb128 0x3a
 33065 0024 0B       		.uleb128 0xb
 33066 0025 3B       		.uleb128 0x3b
 33067 0026 0B       		.uleb128 0xb
 33068 0027 49       		.uleb128 0x49
 33069 0028 13       		.uleb128 0x13
 33070 0029 00       		.byte	0
 33071 002a 00       		.byte	0
 33072 002b 04       		.uleb128 0x4
 33073 002c 24       		.uleb128 0x24
 33074 002d 00       		.byte	0
 33075 002e 0B       		.uleb128 0xb
 33076 002f 0B       		.uleb128 0xb
 33077 0030 3E       		.uleb128 0x3e
 33078 0031 0B       		.uleb128 0xb
 33079 0032 03       		.uleb128 0x3
 33080 0033 08       		.uleb128 0x8
 33081 0034 00       		.byte	0
 33082 0035 00       		.byte	0
 33083 0036 05       		.uleb128 0x5
 33084 0037 16       		.uleb128 0x16
 33085 0038 00       		.byte	0
 33086 0039 03       		.uleb128 0x3
 33087 003a 0E       		.uleb128 0xe
 33088 003b 3A       		.uleb128 0x3a
 33089 003c 0B       		.uleb128 0xb
 33090 003d 3B       		.uleb128 0x3b
 33091 003e 05       		.uleb128 0x5
 33092 003f 49       		.uleb128 0x49
 33093 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 705


 33094 0041 00       		.byte	0
 33095 0042 00       		.byte	0
 33096 0043 06       		.uleb128 0x6
 33097 0044 35       		.uleb128 0x35
 33098 0045 00       		.byte	0
 33099 0046 49       		.uleb128 0x49
 33100 0047 13       		.uleb128 0x13
 33101 0048 00       		.byte	0
 33102 0049 00       		.byte	0
 33103 004a 07       		.uleb128 0x7
 33104 004b 0F       		.uleb128 0xf
 33105 004c 00       		.byte	0
 33106 004d 0B       		.uleb128 0xb
 33107 004e 0B       		.uleb128 0xb
 33108 004f 49       		.uleb128 0x49
 33109 0050 13       		.uleb128 0x13
 33110 0051 00       		.byte	0
 33111 0052 00       		.byte	0
 33112 0053 08       		.uleb128 0x8
 33113 0054 26       		.uleb128 0x26
 33114 0055 00       		.byte	0
 33115 0056 49       		.uleb128 0x49
 33116 0057 13       		.uleb128 0x13
 33117 0058 00       		.byte	0
 33118 0059 00       		.byte	0
 33119 005a 09       		.uleb128 0x9
 33120 005b 01       		.uleb128 0x1
 33121 005c 01       		.byte	0x1
 33122 005d 49       		.uleb128 0x49
 33123 005e 13       		.uleb128 0x13
 33124 005f 01       		.uleb128 0x1
 33125 0060 13       		.uleb128 0x13
 33126 0061 00       		.byte	0
 33127 0062 00       		.byte	0
 33128 0063 0A       		.uleb128 0xa
 33129 0064 21       		.uleb128 0x21
 33130 0065 00       		.byte	0
 33131 0066 49       		.uleb128 0x49
 33132 0067 13       		.uleb128 0x13
 33133 0068 2F       		.uleb128 0x2f
 33134 0069 0B       		.uleb128 0xb
 33135 006a 00       		.byte	0
 33136 006b 00       		.byte	0
 33137 006c 0B       		.uleb128 0xb
 33138 006d 04       		.uleb128 0x4
 33139 006e 01       		.byte	0x1
 33140 006f 03       		.uleb128 0x3
 33141 0070 0E       		.uleb128 0xe
 33142 0071 0B       		.uleb128 0xb
 33143 0072 0B       		.uleb128 0xb
 33144 0073 49       		.uleb128 0x49
 33145 0074 13       		.uleb128 0x13
 33146 0075 3A       		.uleb128 0x3a
 33147 0076 0B       		.uleb128 0xb
 33148 0077 3B       		.uleb128 0x3b
 33149 0078 0B       		.uleb128 0xb
 33150 0079 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 706


 33151 007a 13       		.uleb128 0x13
 33152 007b 00       		.byte	0
 33153 007c 00       		.byte	0
 33154 007d 0C       		.uleb128 0xc
 33155 007e 28       		.uleb128 0x28
 33156 007f 00       		.byte	0
 33157 0080 03       		.uleb128 0x3
 33158 0081 0E       		.uleb128 0xe
 33159 0082 1C       		.uleb128 0x1c
 33160 0083 0B       		.uleb128 0xb
 33161 0084 00       		.byte	0
 33162 0085 00       		.byte	0
 33163 0086 0D       		.uleb128 0xd
 33164 0087 13       		.uleb128 0x13
 33165 0088 00       		.byte	0
 33166 0089 03       		.uleb128 0x3
 33167 008a 0E       		.uleb128 0xe
 33168 008b 3C       		.uleb128 0x3c
 33169 008c 19       		.uleb128 0x19
 33170 008d 00       		.byte	0
 33171 008e 00       		.byte	0
 33172 008f 0E       		.uleb128 0xe
 33173 0090 13       		.uleb128 0x13
 33174 0091 01       		.byte	0x1
 33175 0092 03       		.uleb128 0x3
 33176 0093 0E       		.uleb128 0xe
 33177 0094 0B       		.uleb128 0xb
 33178 0095 0B       		.uleb128 0xb
 33179 0096 3A       		.uleb128 0x3a
 33180 0097 0B       		.uleb128 0xb
 33181 0098 3B       		.uleb128 0x3b
 33182 0099 0B       		.uleb128 0xb
 33183 009a 01       		.uleb128 0x1
 33184 009b 13       		.uleb128 0x13
 33185 009c 00       		.byte	0
 33186 009d 00       		.byte	0
 33187 009e 0F       		.uleb128 0xf
 33188 009f 0D       		.uleb128 0xd
 33189 00a0 00       		.byte	0
 33190 00a1 03       		.uleb128 0x3
 33191 00a2 08       		.uleb128 0x8
 33192 00a3 3A       		.uleb128 0x3a
 33193 00a4 0B       		.uleb128 0xb
 33194 00a5 3B       		.uleb128 0x3b
 33195 00a6 0B       		.uleb128 0xb
 33196 00a7 49       		.uleb128 0x49
 33197 00a8 13       		.uleb128 0x13
 33198 00a9 38       		.uleb128 0x38
 33199 00aa 0B       		.uleb128 0xb
 33200 00ab 00       		.byte	0
 33201 00ac 00       		.byte	0
 33202 00ad 10       		.uleb128 0x10
 33203 00ae 0D       		.uleb128 0xd
 33204 00af 00       		.byte	0
 33205 00b0 03       		.uleb128 0x3
 33206 00b1 0E       		.uleb128 0xe
 33207 00b2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 707


 33208 00b3 0B       		.uleb128 0xb
 33209 00b4 3B       		.uleb128 0x3b
 33210 00b5 0B       		.uleb128 0xb
 33211 00b6 49       		.uleb128 0x49
 33212 00b7 13       		.uleb128 0x13
 33213 00b8 38       		.uleb128 0x38
 33214 00b9 0B       		.uleb128 0xb
 33215 00ba 00       		.byte	0
 33216 00bb 00       		.byte	0
 33217 00bc 11       		.uleb128 0x11
 33218 00bd 13       		.uleb128 0x13
 33219 00be 01       		.byte	0x1
 33220 00bf 03       		.uleb128 0x3
 33221 00c0 0E       		.uleb128 0xe
 33222 00c1 0B       		.uleb128 0xb
 33223 00c2 0B       		.uleb128 0xb
 33224 00c3 3A       		.uleb128 0x3a
 33225 00c4 0B       		.uleb128 0xb
 33226 00c5 3B       		.uleb128 0x3b
 33227 00c6 05       		.uleb128 0x5
 33228 00c7 01       		.uleb128 0x1
 33229 00c8 13       		.uleb128 0x13
 33230 00c9 00       		.byte	0
 33231 00ca 00       		.byte	0
 33232 00cb 12       		.uleb128 0x12
 33233 00cc 0D       		.uleb128 0xd
 33234 00cd 00       		.byte	0
 33235 00ce 03       		.uleb128 0x3
 33236 00cf 0E       		.uleb128 0xe
 33237 00d0 3A       		.uleb128 0x3a
 33238 00d1 0B       		.uleb128 0xb
 33239 00d2 3B       		.uleb128 0x3b
 33240 00d3 05       		.uleb128 0x5
 33241 00d4 49       		.uleb128 0x49
 33242 00d5 13       		.uleb128 0x13
 33243 00d6 38       		.uleb128 0x38
 33244 00d7 0B       		.uleb128 0xb
 33245 00d8 00       		.byte	0
 33246 00d9 00       		.byte	0
 33247 00da 13       		.uleb128 0x13
 33248 00db 0D       		.uleb128 0xd
 33249 00dc 00       		.byte	0
 33250 00dd 03       		.uleb128 0x3
 33251 00de 08       		.uleb128 0x8
 33252 00df 3A       		.uleb128 0x3a
 33253 00e0 0B       		.uleb128 0xb
 33254 00e1 3B       		.uleb128 0x3b
 33255 00e2 05       		.uleb128 0x5
 33256 00e3 49       		.uleb128 0x49
 33257 00e4 13       		.uleb128 0x13
 33258 00e5 38       		.uleb128 0x38
 33259 00e6 0B       		.uleb128 0xb
 33260 00e7 00       		.byte	0
 33261 00e8 00       		.byte	0
 33262 00e9 14       		.uleb128 0x14
 33263 00ea 13       		.uleb128 0x13
 33264 00eb 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 708


 33265 00ec 03       		.uleb128 0x3
 33266 00ed 0E       		.uleb128 0xe
 33267 00ee 0B       		.uleb128 0xb
 33268 00ef 05       		.uleb128 0x5
 33269 00f0 3A       		.uleb128 0x3a
 33270 00f1 0B       		.uleb128 0xb
 33271 00f2 3B       		.uleb128 0x3b
 33272 00f3 05       		.uleb128 0x5
 33273 00f4 01       		.uleb128 0x1
 33274 00f5 13       		.uleb128 0x13
 33275 00f6 00       		.byte	0
 33276 00f7 00       		.byte	0
 33277 00f8 15       		.uleb128 0x15
 33278 00f9 0D       		.uleb128 0xd
 33279 00fa 00       		.byte	0
 33280 00fb 03       		.uleb128 0x3
 33281 00fc 08       		.uleb128 0x8
 33282 00fd 3A       		.uleb128 0x3a
 33283 00fe 0B       		.uleb128 0xb
 33284 00ff 3B       		.uleb128 0x3b
 33285 0100 05       		.uleb128 0x5
 33286 0101 49       		.uleb128 0x49
 33287 0102 13       		.uleb128 0x13
 33288 0103 38       		.uleb128 0x38
 33289 0104 05       		.uleb128 0x5
 33290 0105 00       		.byte	0
 33291 0106 00       		.byte	0
 33292 0107 16       		.uleb128 0x16
 33293 0108 0D       		.uleb128 0xd
 33294 0109 00       		.byte	0
 33295 010a 03       		.uleb128 0x3
 33296 010b 0E       		.uleb128 0xe
 33297 010c 3A       		.uleb128 0x3a
 33298 010d 0B       		.uleb128 0xb
 33299 010e 3B       		.uleb128 0x3b
 33300 010f 05       		.uleb128 0x5
 33301 0110 49       		.uleb128 0x49
 33302 0111 13       		.uleb128 0x13
 33303 0112 38       		.uleb128 0x38
 33304 0113 05       		.uleb128 0x5
 33305 0114 00       		.byte	0
 33306 0115 00       		.byte	0
 33307 0116 17       		.uleb128 0x17
 33308 0117 2E       		.uleb128 0x2e
 33309 0118 01       		.byte	0x1
 33310 0119 03       		.uleb128 0x3
 33311 011a 0E       		.uleb128 0xe
 33312 011b 3A       		.uleb128 0x3a
 33313 011c 0B       		.uleb128 0xb
 33314 011d 3B       		.uleb128 0x3b
 33315 011e 05       		.uleb128 0x5
 33316 011f 27       		.uleb128 0x27
 33317 0120 19       		.uleb128 0x19
 33318 0121 49       		.uleb128 0x49
 33319 0122 13       		.uleb128 0x13
 33320 0123 20       		.uleb128 0x20
 33321 0124 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 709


 33322 0125 01       		.uleb128 0x1
 33323 0126 13       		.uleb128 0x13
 33324 0127 00       		.byte	0
 33325 0128 00       		.byte	0
 33326 0129 18       		.uleb128 0x18
 33327 012a 05       		.uleb128 0x5
 33328 012b 00       		.byte	0
 33329 012c 03       		.uleb128 0x3
 33330 012d 0E       		.uleb128 0xe
 33331 012e 3A       		.uleb128 0x3a
 33332 012f 0B       		.uleb128 0xb
 33333 0130 3B       		.uleb128 0x3b
 33334 0131 05       		.uleb128 0x5
 33335 0132 49       		.uleb128 0x49
 33336 0133 13       		.uleb128 0x13
 33337 0134 00       		.byte	0
 33338 0135 00       		.byte	0
 33339 0136 19       		.uleb128 0x19
 33340 0137 34       		.uleb128 0x34
 33341 0138 00       		.byte	0
 33342 0139 03       		.uleb128 0x3
 33343 013a 0E       		.uleb128 0xe
 33344 013b 3A       		.uleb128 0x3a
 33345 013c 0B       		.uleb128 0xb
 33346 013d 3B       		.uleb128 0x3b
 33347 013e 05       		.uleb128 0x5
 33348 013f 49       		.uleb128 0x49
 33349 0140 13       		.uleb128 0x13
 33350 0141 00       		.byte	0
 33351 0142 00       		.byte	0
 33352 0143 1A       		.uleb128 0x1a
 33353 0144 2E       		.uleb128 0x2e
 33354 0145 01       		.byte	0x1
 33355 0146 3F       		.uleb128 0x3f
 33356 0147 19       		.uleb128 0x19
 33357 0148 03       		.uleb128 0x3
 33358 0149 0E       		.uleb128 0xe
 33359 014a 3A       		.uleb128 0x3a
 33360 014b 0B       		.uleb128 0xb
 33361 014c 3B       		.uleb128 0x3b
 33362 014d 0B       		.uleb128 0xb
 33363 014e 27       		.uleb128 0x27
 33364 014f 19       		.uleb128 0x19
 33365 0150 11       		.uleb128 0x11
 33366 0151 01       		.uleb128 0x1
 33367 0152 12       		.uleb128 0x12
 33368 0153 06       		.uleb128 0x6
 33369 0154 40       		.uleb128 0x40
 33370 0155 18       		.uleb128 0x18
 33371 0156 9642     		.uleb128 0x2116
 33372 0158 19       		.uleb128 0x19
 33373 0159 01       		.uleb128 0x1
 33374 015a 13       		.uleb128 0x13
 33375 015b 00       		.byte	0
 33376 015c 00       		.byte	0
 33377 015d 1B       		.uleb128 0x1b
 33378 015e 34       		.uleb128 0x34
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 710


 33379 015f 00       		.byte	0
 33380 0160 03       		.uleb128 0x3
 33381 0161 0E       		.uleb128 0xe
 33382 0162 3A       		.uleb128 0x3a
 33383 0163 0B       		.uleb128 0xb
 33384 0164 3B       		.uleb128 0x3b
 33385 0165 0B       		.uleb128 0xb
 33386 0166 49       		.uleb128 0x49
 33387 0167 13       		.uleb128 0x13
 33388 0168 02       		.uleb128 0x2
 33389 0169 18       		.uleb128 0x18
 33390 016a 00       		.byte	0
 33391 016b 00       		.byte	0
 33392 016c 1C       		.uleb128 0x1c
 33393 016d 1D       		.uleb128 0x1d
 33394 016e 01       		.byte	0x1
 33395 016f 31       		.uleb128 0x31
 33396 0170 13       		.uleb128 0x13
 33397 0171 11       		.uleb128 0x11
 33398 0172 01       		.uleb128 0x1
 33399 0173 12       		.uleb128 0x12
 33400 0174 06       		.uleb128 0x6
 33401 0175 58       		.uleb128 0x58
 33402 0176 0B       		.uleb128 0xb
 33403 0177 59       		.uleb128 0x59
 33404 0178 0B       		.uleb128 0xb
 33405 0179 01       		.uleb128 0x1
 33406 017a 13       		.uleb128 0x13
 33407 017b 00       		.byte	0
 33408 017c 00       		.byte	0
 33409 017d 1D       		.uleb128 0x1d
 33410 017e 05       		.uleb128 0x5
 33411 017f 00       		.byte	0
 33412 0180 31       		.uleb128 0x31
 33413 0181 13       		.uleb128 0x13
 33414 0182 02       		.uleb128 0x2
 33415 0183 18       		.uleb128 0x18
 33416 0184 00       		.byte	0
 33417 0185 00       		.byte	0
 33418 0186 1E       		.uleb128 0x1e
 33419 0187 0B       		.uleb128 0xb
 33420 0188 01       		.byte	0x1
 33421 0189 11       		.uleb128 0x11
 33422 018a 01       		.uleb128 0x1
 33423 018b 12       		.uleb128 0x12
 33424 018c 06       		.uleb128 0x6
 33425 018d 00       		.byte	0
 33426 018e 00       		.byte	0
 33427 018f 1F       		.uleb128 0x1f
 33428 0190 34       		.uleb128 0x34
 33429 0191 00       		.byte	0
 33430 0192 31       		.uleb128 0x31
 33431 0193 13       		.uleb128 0x13
 33432 0194 02       		.uleb128 0x2
 33433 0195 18       		.uleb128 0x18
 33434 0196 00       		.byte	0
 33435 0197 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 711


 33436 0198 20       		.uleb128 0x20
 33437 0199 1D       		.uleb128 0x1d
 33438 019a 01       		.byte	0x1
 33439 019b 31       		.uleb128 0x31
 33440 019c 13       		.uleb128 0x13
 33441 019d 11       		.uleb128 0x11
 33442 019e 01       		.uleb128 0x1
 33443 019f 12       		.uleb128 0x12
 33444 01a0 06       		.uleb128 0x6
 33445 01a1 58       		.uleb128 0x58
 33446 01a2 0B       		.uleb128 0xb
 33447 01a3 59       		.uleb128 0x59
 33448 01a4 05       		.uleb128 0x5
 33449 01a5 01       		.uleb128 0x1
 33450 01a6 13       		.uleb128 0x13
 33451 01a7 00       		.byte	0
 33452 01a8 00       		.byte	0
 33453 01a9 21       		.uleb128 0x21
 33454 01aa 1D       		.uleb128 0x1d
 33455 01ab 01       		.byte	0x1
 33456 01ac 31       		.uleb128 0x31
 33457 01ad 13       		.uleb128 0x13
 33458 01ae 11       		.uleb128 0x11
 33459 01af 01       		.uleb128 0x1
 33460 01b0 12       		.uleb128 0x12
 33461 01b1 06       		.uleb128 0x6
 33462 01b2 58       		.uleb128 0x58
 33463 01b3 0B       		.uleb128 0xb
 33464 01b4 59       		.uleb128 0x59
 33465 01b5 05       		.uleb128 0x5
 33466 01b6 00       		.byte	0
 33467 01b7 00       		.byte	0
 33468 01b8 22       		.uleb128 0x22
 33469 01b9 2E       		.uleb128 0x2e
 33470 01ba 01       		.byte	0x1
 33471 01bb 3F       		.uleb128 0x3f
 33472 01bc 19       		.uleb128 0x19
 33473 01bd 03       		.uleb128 0x3
 33474 01be 0E       		.uleb128 0xe
 33475 01bf 3A       		.uleb128 0x3a
 33476 01c0 0B       		.uleb128 0xb
 33477 01c1 3B       		.uleb128 0x3b
 33478 01c2 05       		.uleb128 0x5
 33479 01c3 27       		.uleb128 0x27
 33480 01c4 19       		.uleb128 0x19
 33481 01c5 11       		.uleb128 0x11
 33482 01c6 01       		.uleb128 0x1
 33483 01c7 12       		.uleb128 0x12
 33484 01c8 06       		.uleb128 0x6
 33485 01c9 40       		.uleb128 0x40
 33486 01ca 18       		.uleb128 0x18
 33487 01cb 9642     		.uleb128 0x2116
 33488 01cd 19       		.uleb128 0x19
 33489 01ce 01       		.uleb128 0x1
 33490 01cf 13       		.uleb128 0x13
 33491 01d0 00       		.byte	0
 33492 01d1 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 712


 33493 01d2 23       		.uleb128 0x23
 33494 01d3 34       		.uleb128 0x34
 33495 01d4 00       		.byte	0
 33496 01d5 03       		.uleb128 0x3
 33497 01d6 0E       		.uleb128 0xe
 33498 01d7 3A       		.uleb128 0x3a
 33499 01d8 0B       		.uleb128 0xb
 33500 01d9 3B       		.uleb128 0x3b
 33501 01da 05       		.uleb128 0x5
 33502 01db 49       		.uleb128 0x49
 33503 01dc 13       		.uleb128 0x13
 33504 01dd 02       		.uleb128 0x2
 33505 01de 18       		.uleb128 0x18
 33506 01df 00       		.byte	0
 33507 01e0 00       		.byte	0
 33508 01e1 24       		.uleb128 0x24
 33509 01e2 21       		.uleb128 0x21
 33510 01e3 00       		.byte	0
 33511 01e4 49       		.uleb128 0x49
 33512 01e5 13       		.uleb128 0x13
 33513 01e6 2F       		.uleb128 0x2f
 33514 01e7 05       		.uleb128 0x5
 33515 01e8 00       		.byte	0
 33516 01e9 00       		.byte	0
 33517 01ea 25       		.uleb128 0x25
 33518 01eb 05       		.uleb128 0x5
 33519 01ec 00       		.byte	0
 33520 01ed 03       		.uleb128 0x3
 33521 01ee 0E       		.uleb128 0xe
 33522 01ef 3A       		.uleb128 0x3a
 33523 01f0 0B       		.uleb128 0xb
 33524 01f1 3B       		.uleb128 0x3b
 33525 01f2 05       		.uleb128 0x5
 33526 01f3 49       		.uleb128 0x49
 33527 01f4 13       		.uleb128 0x13
 33528 01f5 02       		.uleb128 0x2
 33529 01f6 18       		.uleb128 0x18
 33530 01f7 00       		.byte	0
 33531 01f8 00       		.byte	0
 33532 01f9 26       		.uleb128 0x26
 33533 01fa 34       		.uleb128 0x34
 33534 01fb 00       		.byte	0
 33535 01fc 03       		.uleb128 0x3
 33536 01fd 08       		.uleb128 0x8
 33537 01fe 3A       		.uleb128 0x3a
 33538 01ff 0B       		.uleb128 0xb
 33539 0200 3B       		.uleb128 0x3b
 33540 0201 05       		.uleb128 0x5
 33541 0202 49       		.uleb128 0x49
 33542 0203 13       		.uleb128 0x13
 33543 0204 02       		.uleb128 0x2
 33544 0205 18       		.uleb128 0x18
 33545 0206 00       		.byte	0
 33546 0207 00       		.byte	0
 33547 0208 27       		.uleb128 0x27
 33548 0209 2E       		.uleb128 0x2e
 33549 020a 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 713


 33550 020b 3F       		.uleb128 0x3f
 33551 020c 19       		.uleb128 0x19
 33552 020d 03       		.uleb128 0x3
 33553 020e 0E       		.uleb128 0xe
 33554 020f 3A       		.uleb128 0x3a
 33555 0210 0B       		.uleb128 0xb
 33556 0211 3B       		.uleb128 0x3b
 33557 0212 05       		.uleb128 0x5
 33558 0213 11       		.uleb128 0x11
 33559 0214 01       		.uleb128 0x1
 33560 0215 12       		.uleb128 0x12
 33561 0216 06       		.uleb128 0x6
 33562 0217 40       		.uleb128 0x40
 33563 0218 18       		.uleb128 0x18
 33564 0219 9642     		.uleb128 0x2116
 33565 021b 19       		.uleb128 0x19
 33566 021c 01       		.uleb128 0x1
 33567 021d 13       		.uleb128 0x13
 33568 021e 00       		.byte	0
 33569 021f 00       		.byte	0
 33570 0220 28       		.uleb128 0x28
 33571 0221 2E       		.uleb128 0x2e
 33572 0222 01       		.byte	0x1
 33573 0223 3F       		.uleb128 0x3f
 33574 0224 19       		.uleb128 0x19
 33575 0225 03       		.uleb128 0x3
 33576 0226 0E       		.uleb128 0xe
 33577 0227 3A       		.uleb128 0x3a
 33578 0228 0B       		.uleb128 0xb
 33579 0229 3B       		.uleb128 0x3b
 33580 022a 05       		.uleb128 0x5
 33581 022b 27       		.uleb128 0x27
 33582 022c 19       		.uleb128 0x19
 33583 022d 11       		.uleb128 0x11
 33584 022e 01       		.uleb128 0x1
 33585 022f 12       		.uleb128 0x12
 33586 0230 06       		.uleb128 0x6
 33587 0231 40       		.uleb128 0x40
 33588 0232 18       		.uleb128 0x18
 33589 0233 9742     		.uleb128 0x2117
 33590 0235 19       		.uleb128 0x19
 33591 0236 01       		.uleb128 0x1
 33592 0237 13       		.uleb128 0x13
 33593 0238 00       		.byte	0
 33594 0239 00       		.byte	0
 33595 023a 29       		.uleb128 0x29
 33596 023b 05       		.uleb128 0x5
 33597 023c 00       		.byte	0
 33598 023d 03       		.uleb128 0x3
 33599 023e 08       		.uleb128 0x8
 33600 023f 3A       		.uleb128 0x3a
 33601 0240 0B       		.uleb128 0xb
 33602 0241 3B       		.uleb128 0x3b
 33603 0242 05       		.uleb128 0x5
 33604 0243 49       		.uleb128 0x49
 33605 0244 13       		.uleb128 0x13
 33606 0245 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 714


 33607 0246 18       		.uleb128 0x18
 33608 0247 00       		.byte	0
 33609 0248 00       		.byte	0
 33610 0249 2A       		.uleb128 0x2a
 33611 024a 2E       		.uleb128 0x2e
 33612 024b 01       		.byte	0x1
 33613 024c 3F       		.uleb128 0x3f
 33614 024d 19       		.uleb128 0x19
 33615 024e 03       		.uleb128 0x3
 33616 024f 0E       		.uleb128 0xe
 33617 0250 3A       		.uleb128 0x3a
 33618 0251 0B       		.uleb128 0xb
 33619 0252 3B       		.uleb128 0x3b
 33620 0253 05       		.uleb128 0x5
 33621 0254 27       		.uleb128 0x27
 33622 0255 19       		.uleb128 0x19
 33623 0256 49       		.uleb128 0x49
 33624 0257 13       		.uleb128 0x13
 33625 0258 11       		.uleb128 0x11
 33626 0259 01       		.uleb128 0x1
 33627 025a 12       		.uleb128 0x12
 33628 025b 06       		.uleb128 0x6
 33629 025c 40       		.uleb128 0x40
 33630 025d 18       		.uleb128 0x18
 33631 025e 9742     		.uleb128 0x2117
 33632 0260 19       		.uleb128 0x19
 33633 0261 01       		.uleb128 0x1
 33634 0262 13       		.uleb128 0x13
 33635 0263 00       		.byte	0
 33636 0264 00       		.byte	0
 33637 0265 2B       		.uleb128 0x2b
 33638 0266 2E       		.uleb128 0x2e
 33639 0267 01       		.byte	0x1
 33640 0268 3F       		.uleb128 0x3f
 33641 0269 19       		.uleb128 0x19
 33642 026a 03       		.uleb128 0x3
 33643 026b 0E       		.uleb128 0xe
 33644 026c 3A       		.uleb128 0x3a
 33645 026d 0B       		.uleb128 0xb
 33646 026e 3B       		.uleb128 0x3b
 33647 026f 05       		.uleb128 0x5
 33648 0270 27       		.uleb128 0x27
 33649 0271 19       		.uleb128 0x19
 33650 0272 49       		.uleb128 0x49
 33651 0273 13       		.uleb128 0x13
 33652 0274 11       		.uleb128 0x11
 33653 0275 01       		.uleb128 0x1
 33654 0276 12       		.uleb128 0x12
 33655 0277 06       		.uleb128 0x6
 33656 0278 40       		.uleb128 0x40
 33657 0279 18       		.uleb128 0x18
 33658 027a 9642     		.uleb128 0x2116
 33659 027c 19       		.uleb128 0x19
 33660 027d 01       		.uleb128 0x1
 33661 027e 13       		.uleb128 0x13
 33662 027f 00       		.byte	0
 33663 0280 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 715


 33664 0281 2C       		.uleb128 0x2c
 33665 0282 2E       		.uleb128 0x2e
 33666 0283 00       		.byte	0
 33667 0284 3F       		.uleb128 0x3f
 33668 0285 19       		.uleb128 0x19
 33669 0286 03       		.uleb128 0x3
 33670 0287 0E       		.uleb128 0xe
 33671 0288 3A       		.uleb128 0x3a
 33672 0289 0B       		.uleb128 0xb
 33673 028a 3B       		.uleb128 0x3b
 33674 028b 05       		.uleb128 0x5
 33675 028c 27       		.uleb128 0x27
 33676 028d 19       		.uleb128 0x19
 33677 028e 11       		.uleb128 0x11
 33678 028f 01       		.uleb128 0x1
 33679 0290 12       		.uleb128 0x12
 33680 0291 06       		.uleb128 0x6
 33681 0292 40       		.uleb128 0x40
 33682 0293 18       		.uleb128 0x18
 33683 0294 9742     		.uleb128 0x2117
 33684 0296 19       		.uleb128 0x19
 33685 0297 00       		.byte	0
 33686 0298 00       		.byte	0
 33687 0299 2D       		.uleb128 0x2d
 33688 029a 2E       		.uleb128 0x2e
 33689 029b 01       		.byte	0x1
 33690 029c 3F       		.uleb128 0x3f
 33691 029d 19       		.uleb128 0x19
 33692 029e 03       		.uleb128 0x3
 33693 029f 0E       		.uleb128 0xe
 33694 02a0 3A       		.uleb128 0x3a
 33695 02a1 0B       		.uleb128 0xb
 33696 02a2 3B       		.uleb128 0x3b
 33697 02a3 05       		.uleb128 0x5
 33698 02a4 11       		.uleb128 0x11
 33699 02a5 01       		.uleb128 0x1
 33700 02a6 12       		.uleb128 0x12
 33701 02a7 06       		.uleb128 0x6
 33702 02a8 40       		.uleb128 0x40
 33703 02a9 18       		.uleb128 0x18
 33704 02aa 9742     		.uleb128 0x2117
 33705 02ac 19       		.uleb128 0x19
 33706 02ad 01       		.uleb128 0x1
 33707 02ae 13       		.uleb128 0x13
 33708 02af 00       		.byte	0
 33709 02b0 00       		.byte	0
 33710 02b1 2E       		.uleb128 0x2e
 33711 02b2 0B       		.uleb128 0xb
 33712 02b3 01       		.byte	0x1
 33713 02b4 11       		.uleb128 0x11
 33714 02b5 01       		.uleb128 0x1
 33715 02b6 12       		.uleb128 0x12
 33716 02b7 06       		.uleb128 0x6
 33717 02b8 01       		.uleb128 0x1
 33718 02b9 13       		.uleb128 0x13
 33719 02ba 00       		.byte	0
 33720 02bb 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 716


 33721 02bc 2F       		.uleb128 0x2f
 33722 02bd 2E       		.uleb128 0x2e
 33723 02be 01       		.byte	0x1
 33724 02bf 3F       		.uleb128 0x3f
 33725 02c0 19       		.uleb128 0x19
 33726 02c1 03       		.uleb128 0x3
 33727 02c2 0E       		.uleb128 0xe
 33728 02c3 3A       		.uleb128 0x3a
 33729 02c4 0B       		.uleb128 0xb
 33730 02c5 3B       		.uleb128 0x3b
 33731 02c6 05       		.uleb128 0x5
 33732 02c7 49       		.uleb128 0x49
 33733 02c8 13       		.uleb128 0x13
 33734 02c9 11       		.uleb128 0x11
 33735 02ca 01       		.uleb128 0x1
 33736 02cb 12       		.uleb128 0x12
 33737 02cc 06       		.uleb128 0x6
 33738 02cd 40       		.uleb128 0x40
 33739 02ce 18       		.uleb128 0x18
 33740 02cf 9642     		.uleb128 0x2116
 33741 02d1 19       		.uleb128 0x19
 33742 02d2 01       		.uleb128 0x1
 33743 02d3 13       		.uleb128 0x13
 33744 02d4 00       		.byte	0
 33745 02d5 00       		.byte	0
 33746 02d6 30       		.uleb128 0x30
 33747 02d7 2E       		.uleb128 0x2e
 33748 02d8 00       		.byte	0
 33749 02d9 3F       		.uleb128 0x3f
 33750 02da 19       		.uleb128 0x19
 33751 02db 03       		.uleb128 0x3
 33752 02dc 0E       		.uleb128 0xe
 33753 02dd 3A       		.uleb128 0x3a
 33754 02de 0B       		.uleb128 0xb
 33755 02df 3B       		.uleb128 0x3b
 33756 02e0 05       		.uleb128 0x5
 33757 02e1 11       		.uleb128 0x11
 33758 02e2 01       		.uleb128 0x1
 33759 02e3 12       		.uleb128 0x12
 33760 02e4 06       		.uleb128 0x6
 33761 02e5 40       		.uleb128 0x40
 33762 02e6 18       		.uleb128 0x18
 33763 02e7 9642     		.uleb128 0x2116
 33764 02e9 19       		.uleb128 0x19
 33765 02ea 00       		.byte	0
 33766 02eb 00       		.byte	0
 33767 02ec 31       		.uleb128 0x31
 33768 02ed 2E       		.uleb128 0x2e
 33769 02ee 01       		.byte	0x1
 33770 02ef 3F       		.uleb128 0x3f
 33771 02f0 19       		.uleb128 0x19
 33772 02f1 03       		.uleb128 0x3
 33773 02f2 0E       		.uleb128 0xe
 33774 02f3 3A       		.uleb128 0x3a
 33775 02f4 0B       		.uleb128 0xb
 33776 02f5 3B       		.uleb128 0x3b
 33777 02f6 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 717


 33778 02f7 49       		.uleb128 0x49
 33779 02f8 13       		.uleb128 0x13
 33780 02f9 11       		.uleb128 0x11
 33781 02fa 01       		.uleb128 0x1
 33782 02fb 12       		.uleb128 0x12
 33783 02fc 06       		.uleb128 0x6
 33784 02fd 40       		.uleb128 0x40
 33785 02fe 18       		.uleb128 0x18
 33786 02ff 9742     		.uleb128 0x2117
 33787 0301 19       		.uleb128 0x19
 33788 0302 01       		.uleb128 0x1
 33789 0303 13       		.uleb128 0x13
 33790 0304 00       		.byte	0
 33791 0305 00       		.byte	0
 33792 0306 32       		.uleb128 0x32
 33793 0307 34       		.uleb128 0x34
 33794 0308 00       		.byte	0
 33795 0309 03       		.uleb128 0x3
 33796 030a 0E       		.uleb128 0xe
 33797 030b 3A       		.uleb128 0x3a
 33798 030c 0B       		.uleb128 0xb
 33799 030d 3B       		.uleb128 0x3b
 33800 030e 05       		.uleb128 0x5
 33801 030f 49       		.uleb128 0x49
 33802 0310 13       		.uleb128 0x13
 33803 0311 3F       		.uleb128 0x3f
 33804 0312 19       		.uleb128 0x19
 33805 0313 3C       		.uleb128 0x3c
 33806 0314 19       		.uleb128 0x19
 33807 0315 00       		.byte	0
 33808 0316 00       		.byte	0
 33809 0317 33       		.uleb128 0x33
 33810 0318 34       		.uleb128 0x34
 33811 0319 00       		.byte	0
 33812 031a 03       		.uleb128 0x3
 33813 031b 0E       		.uleb128 0xe
 33814 031c 3A       		.uleb128 0x3a
 33815 031d 0B       		.uleb128 0xb
 33816 031e 3B       		.uleb128 0x3b
 33817 031f 0B       		.uleb128 0xb
 33818 0320 49       		.uleb128 0x49
 33819 0321 13       		.uleb128 0x13
 33820 0322 3F       		.uleb128 0x3f
 33821 0323 19       		.uleb128 0x19
 33822 0324 02       		.uleb128 0x2
 33823 0325 18       		.uleb128 0x18
 33824 0326 00       		.byte	0
 33825 0327 00       		.byte	0
 33826 0328 00       		.byte	0
 33827              		.section	.debug_aranges,"",%progbits
 33828 0000 EC010000 		.4byte	0x1ec
 33829 0004 0200     		.2byte	0x2
 33830 0006 00000000 		.4byte	.Ldebug_info0
 33831 000a 04       		.byte	0x4
 33832 000b 00       		.byte	0
 33833 000c 0000     		.2byte	0
 33834 000e 0000     		.2byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 718


 33835 0010 00000000 		.4byte	.LFB64
 33836 0014 1C050000 		.4byte	.LFE64-.LFB64
 33837 0018 00000000 		.4byte	.LFB65
 33838 001c 22000000 		.4byte	.LFE65-.LFB65
 33839 0020 00000000 		.4byte	.LFB66
 33840 0024 64010000 		.4byte	.LFE66-.LFB66
 33841 0028 00000000 		.4byte	.LFB67
 33842 002c A4320000 		.4byte	.LFE67-.LFB67
 33843 0030 00000000 		.4byte	.LFB68
 33844 0034 3C190000 		.4byte	.LFE68-.LFB68
 33845 0038 00000000 		.4byte	.LFB69
 33846 003c DC140000 		.4byte	.LFE69-.LFB69
 33847 0040 00000000 		.4byte	.LFB70
 33848 0044 F40D0000 		.4byte	.LFE70-.LFB70
 33849 0048 00000000 		.4byte	.LFB71
 33850 004c 90000000 		.4byte	.LFE71-.LFB71
 33851 0050 00000000 		.4byte	.LFB72
 33852 0054 741C0000 		.4byte	.LFE72-.LFB72
 33853 0058 00000000 		.4byte	.LFB73
 33854 005c 90040000 		.4byte	.LFE73-.LFB73
 33855 0060 00000000 		.4byte	.LFB74
 33856 0064 5C020000 		.4byte	.LFE74-.LFB74
 33857 0068 00000000 		.4byte	.LFB75
 33858 006c 80120000 		.4byte	.LFE75-.LFB75
 33859 0070 00000000 		.4byte	.LFB76
 33860 0074 DC000000 		.4byte	.LFE76-.LFB76
 33861 0078 00000000 		.4byte	.LFB77
 33862 007c 80010000 		.4byte	.LFE77-.LFB77
 33863 0080 00000000 		.4byte	.LFB78
 33864 0084 28000000 		.4byte	.LFE78-.LFB78
 33865 0088 00000000 		.4byte	.LFB79
 33866 008c F0000000 		.4byte	.LFE79-.LFB79
 33867 0090 00000000 		.4byte	.LFB80
 33868 0094 74030000 		.4byte	.LFE80-.LFB80
 33869 0098 00000000 		.4byte	.LFB81
 33870 009c 84000000 		.4byte	.LFE81-.LFB81
 33871 00a0 00000000 		.4byte	.LFB82
 33872 00a4 88000000 		.4byte	.LFE82-.LFB82
 33873 00a8 00000000 		.4byte	.LFB83
 33874 00ac A0000000 		.4byte	.LFE83-.LFB83
 33875 00b0 00000000 		.4byte	.LFB84
 33876 00b4 3E000000 		.4byte	.LFE84-.LFB84
 33877 00b8 00000000 		.4byte	.LFB85
 33878 00bc 2E000000 		.4byte	.LFE85-.LFB85
 33879 00c0 00000000 		.4byte	.LFB86
 33880 00c4 98000000 		.4byte	.LFE86-.LFB86
 33881 00c8 00000000 		.4byte	.LFB87
 33882 00cc 80000000 		.4byte	.LFE87-.LFB87
 33883 00d0 00000000 		.4byte	.LFB88
 33884 00d4 5C000000 		.4byte	.LFE88-.LFB88
 33885 00d8 00000000 		.4byte	.LFB89
 33886 00dc 30060000 		.4byte	.LFE89-.LFB89
 33887 00e0 00000000 		.4byte	.LFB90
 33888 00e4 40020000 		.4byte	.LFE90-.LFB90
 33889 00e8 00000000 		.4byte	.LFB91
 33890 00ec 28000000 		.4byte	.LFE91-.LFB91
 33891 00f0 00000000 		.4byte	.LFB92
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 719


 33892 00f4 78000000 		.4byte	.LFE92-.LFB92
 33893 00f8 00000000 		.4byte	.LFB93
 33894 00fc B0000000 		.4byte	.LFE93-.LFB93
 33895 0100 00000000 		.4byte	.LFB94
 33896 0104 28010000 		.4byte	.LFE94-.LFB94
 33897 0108 00000000 		.4byte	.LFB95
 33898 010c B8000000 		.4byte	.LFE95-.LFB95
 33899 0110 00000000 		.4byte	.LFB96
 33900 0114 B8000000 		.4byte	.LFE96-.LFB96
 33901 0118 00000000 		.4byte	.LFB97
 33902 011c 5C000000 		.4byte	.LFE97-.LFB97
 33903 0120 00000000 		.4byte	.LFB98
 33904 0124 44020000 		.4byte	.LFE98-.LFB98
 33905 0128 00000000 		.4byte	.LFB99
 33906 012c E4000000 		.4byte	.LFE99-.LFB99
 33907 0130 00000000 		.4byte	.LFB100
 33908 0134 5C000000 		.4byte	.LFE100-.LFB100
 33909 0138 00000000 		.4byte	.LFB101
 33910 013c 38010000 		.4byte	.LFE101-.LFB101
 33911 0140 00000000 		.4byte	.LFB102
 33912 0144 EC000000 		.4byte	.LFE102-.LFB102
 33913 0148 00000000 		.4byte	.LFB103
 33914 014c 64000000 		.4byte	.LFE103-.LFB103
 33915 0150 00000000 		.4byte	.LFB104
 33916 0154 A8000000 		.4byte	.LFE104-.LFB104
 33917 0158 00000000 		.4byte	.LFB105
 33918 015c 34000000 		.4byte	.LFE105-.LFB105
 33919 0160 00000000 		.4byte	.LFB106
 33920 0164 20000000 		.4byte	.LFE106-.LFB106
 33921 0168 00000000 		.4byte	.LFB107
 33922 016c A0000000 		.4byte	.LFE107-.LFB107
 33923 0170 00000000 		.4byte	.LFB108
 33924 0174 BC010000 		.4byte	.LFE108-.LFB108
 33925 0178 00000000 		.4byte	.LFB109
 33926 017c 60000000 		.4byte	.LFE109-.LFB109
 33927 0180 00000000 		.4byte	.LFB110
 33928 0184 98050000 		.4byte	.LFE110-.LFB110
 33929 0188 00000000 		.4byte	.LFB111
 33930 018c 8C000000 		.4byte	.LFE111-.LFB111
 33931 0190 00000000 		.4byte	.LFB112
 33932 0194 EC000000 		.4byte	.LFE112-.LFB112
 33933 0198 00000000 		.4byte	.LFB113
 33934 019c 5C000000 		.4byte	.LFE113-.LFB113
 33935 01a0 00000000 		.4byte	.LFB114
 33936 01a4 C0000000 		.4byte	.LFE114-.LFB114
 33937 01a8 00000000 		.4byte	.LFB115
 33938 01ac 54010000 		.4byte	.LFE115-.LFB115
 33939 01b0 00000000 		.4byte	.LFB116
 33940 01b4 B0000000 		.4byte	.LFE116-.LFB116
 33941 01b8 00000000 		.4byte	.LFB117
 33942 01bc B4010000 		.4byte	.LFE117-.LFB117
 33943 01c0 00000000 		.4byte	.LFB118
 33944 01c4 64010000 		.4byte	.LFE118-.LFB118
 33945 01c8 00000000 		.4byte	.LFB119
 33946 01cc 12000000 		.4byte	.LFE119-.LFB119
 33947 01d0 00000000 		.4byte	.LFB120
 33948 01d4 74010000 		.4byte	.LFE120-.LFB120
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 720


 33949 01d8 00000000 		.4byte	.LFB121
 33950 01dc 28000000 		.4byte	.LFE121-.LFB121
 33951 01e0 00000000 		.4byte	.LFB122
 33952 01e4 90000000 		.4byte	.LFE122-.LFB122
 33953 01e8 00000000 		.4byte	0
 33954 01ec 00000000 		.4byte	0
 33955              		.section	.debug_ranges,"",%progbits
 33956              	.Ldebug_ranges0:
 33957 0000 00000000 		.4byte	.LFB64
 33958 0004 1C050000 		.4byte	.LFE64
 33959 0008 00000000 		.4byte	.LFB65
 33960 000c 22000000 		.4byte	.LFE65
 33961 0010 00000000 		.4byte	.LFB66
 33962 0014 64010000 		.4byte	.LFE66
 33963 0018 00000000 		.4byte	.LFB67
 33964 001c A4320000 		.4byte	.LFE67
 33965 0020 00000000 		.4byte	.LFB68
 33966 0024 3C190000 		.4byte	.LFE68
 33967 0028 00000000 		.4byte	.LFB69
 33968 002c DC140000 		.4byte	.LFE69
 33969 0030 00000000 		.4byte	.LFB70
 33970 0034 F40D0000 		.4byte	.LFE70
 33971 0038 00000000 		.4byte	.LFB71
 33972 003c 90000000 		.4byte	.LFE71
 33973 0040 00000000 		.4byte	.LFB72
 33974 0044 741C0000 		.4byte	.LFE72
 33975 0048 00000000 		.4byte	.LFB73
 33976 004c 90040000 		.4byte	.LFE73
 33977 0050 00000000 		.4byte	.LFB74
 33978 0054 5C020000 		.4byte	.LFE74
 33979 0058 00000000 		.4byte	.LFB75
 33980 005c 80120000 		.4byte	.LFE75
 33981 0060 00000000 		.4byte	.LFB76
 33982 0064 DC000000 		.4byte	.LFE76
 33983 0068 00000000 		.4byte	.LFB77
 33984 006c 80010000 		.4byte	.LFE77
 33985 0070 00000000 		.4byte	.LFB78
 33986 0074 28000000 		.4byte	.LFE78
 33987 0078 00000000 		.4byte	.LFB79
 33988 007c F0000000 		.4byte	.LFE79
 33989 0080 00000000 		.4byte	.LFB80
 33990 0084 74030000 		.4byte	.LFE80
 33991 0088 00000000 		.4byte	.LFB81
 33992 008c 84000000 		.4byte	.LFE81
 33993 0090 00000000 		.4byte	.LFB82
 33994 0094 88000000 		.4byte	.LFE82
 33995 0098 00000000 		.4byte	.LFB83
 33996 009c A0000000 		.4byte	.LFE83
 33997 00a0 00000000 		.4byte	.LFB84
 33998 00a4 3E000000 		.4byte	.LFE84
 33999 00a8 00000000 		.4byte	.LFB85
 34000 00ac 2E000000 		.4byte	.LFE85
 34001 00b0 00000000 		.4byte	.LFB86
 34002 00b4 98000000 		.4byte	.LFE86
 34003 00b8 00000000 		.4byte	.LFB87
 34004 00bc 80000000 		.4byte	.LFE87
 34005 00c0 00000000 		.4byte	.LFB88
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 721


 34006 00c4 5C000000 		.4byte	.LFE88
 34007 00c8 00000000 		.4byte	.LFB89
 34008 00cc 30060000 		.4byte	.LFE89
 34009 00d0 00000000 		.4byte	.LFB90
 34010 00d4 40020000 		.4byte	.LFE90
 34011 00d8 00000000 		.4byte	.LFB91
 34012 00dc 28000000 		.4byte	.LFE91
 34013 00e0 00000000 		.4byte	.LFB92
 34014 00e4 78000000 		.4byte	.LFE92
 34015 00e8 00000000 		.4byte	.LFB93
 34016 00ec B0000000 		.4byte	.LFE93
 34017 00f0 00000000 		.4byte	.LFB94
 34018 00f4 28010000 		.4byte	.LFE94
 34019 00f8 00000000 		.4byte	.LFB95
 34020 00fc B8000000 		.4byte	.LFE95
 34021 0100 00000000 		.4byte	.LFB96
 34022 0104 B8000000 		.4byte	.LFE96
 34023 0108 00000000 		.4byte	.LFB97
 34024 010c 5C000000 		.4byte	.LFE97
 34025 0110 00000000 		.4byte	.LFB98
 34026 0114 44020000 		.4byte	.LFE98
 34027 0118 00000000 		.4byte	.LFB99
 34028 011c E4000000 		.4byte	.LFE99
 34029 0120 00000000 		.4byte	.LFB100
 34030 0124 5C000000 		.4byte	.LFE100
 34031 0128 00000000 		.4byte	.LFB101
 34032 012c 38010000 		.4byte	.LFE101
 34033 0130 00000000 		.4byte	.LFB102
 34034 0134 EC000000 		.4byte	.LFE102
 34035 0138 00000000 		.4byte	.LFB103
 34036 013c 64000000 		.4byte	.LFE103
 34037 0140 00000000 		.4byte	.LFB104
 34038 0144 A8000000 		.4byte	.LFE104
 34039 0148 00000000 		.4byte	.LFB105
 34040 014c 34000000 		.4byte	.LFE105
 34041 0150 00000000 		.4byte	.LFB106
 34042 0154 20000000 		.4byte	.LFE106
 34043 0158 00000000 		.4byte	.LFB107
 34044 015c A0000000 		.4byte	.LFE107
 34045 0160 00000000 		.4byte	.LFB108
 34046 0164 BC010000 		.4byte	.LFE108
 34047 0168 00000000 		.4byte	.LFB109
 34048 016c 60000000 		.4byte	.LFE109
 34049 0170 00000000 		.4byte	.LFB110
 34050 0174 98050000 		.4byte	.LFE110
 34051 0178 00000000 		.4byte	.LFB111
 34052 017c 8C000000 		.4byte	.LFE111
 34053 0180 00000000 		.4byte	.LFB112
 34054 0184 EC000000 		.4byte	.LFE112
 34055 0188 00000000 		.4byte	.LFB113
 34056 018c 5C000000 		.4byte	.LFE113
 34057 0190 00000000 		.4byte	.LFB114
 34058 0194 C0000000 		.4byte	.LFE114
 34059 0198 00000000 		.4byte	.LFB115
 34060 019c 54010000 		.4byte	.LFE115
 34061 01a0 00000000 		.4byte	.LFB116
 34062 01a4 B0000000 		.4byte	.LFE116
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 722


 34063 01a8 00000000 		.4byte	.LFB117
 34064 01ac B4010000 		.4byte	.LFE117
 34065 01b0 00000000 		.4byte	.LFB118
 34066 01b4 64010000 		.4byte	.LFE118
 34067 01b8 00000000 		.4byte	.LFB119
 34068 01bc 12000000 		.4byte	.LFE119
 34069 01c0 00000000 		.4byte	.LFB120
 34070 01c4 74010000 		.4byte	.LFE120
 34071 01c8 00000000 		.4byte	.LFB121
 34072 01cc 28000000 		.4byte	.LFE121
 34073 01d0 00000000 		.4byte	.LFB122
 34074 01d4 90000000 		.4byte	.LFE122
 34075 01d8 00000000 		.4byte	0
 34076 01dc 00000000 		.4byte	0
 34077              		.section	.debug_line,"",%progbits
 34078              	.Ldebug_line0:
 34079 0000 791F0000 		.section	.debug_str,"MS",%progbits,1
 34079      0200C001 
 34079      00000201 
 34079      FB0E0D00 
 34079      01010101 
 34080              	.LASF218:
 34081 0000 696E666F 		.ascii	"infoSend\000"
 34081      53656E64 
 34081      00
 34082              	.LASF107:
 34083 0009 656D675F 		.ascii	"emg_act_counter\000"
 34083      6163745F 
 34083      636F756E 
 34083      74657200 
 34084              	.LASF270:
 34085 0019 69645F73 		.ascii	"id_str\000"
 34085      747200
 34086              	.LASF252:
 34087 0020 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 34087      61637469 
 34087      76617469 
 34087      6F6E5F6D 
 34087      6F64655F 
 34088              	.LASF25:
 34089 0039 73697A65 		.ascii	"sizetype\000"
 34089      74797065 
 34089      00
 34090              	.LASF114:
 34091 0042 706F7765 		.ascii	"power_cycles\000"
 34091      725F6379 
 34091      636C6573 
 34091      00
 34092              	.LASF33:
 34093 004f 434D445F 		.ascii	"CMD_INIT_MEM\000"
 34093      494E4954 
 34093      5F4D454D 
 34093      00
 34094              	.LASF343:
 34095 005c 676C5F63 		.ascii	"gl_c\000"
 34095      00
 34096              	.LASF198:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 723


 34097 0061 77726973 		.ascii	"wrist_direction_association\000"
 34097      745F6469 
 34097      72656374 
 34097      696F6E5F 
 34097      6173736F 
 34098              	.LASF65:
 34099 007d 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 34099      545F4D4F 
 34099      44455F45 
 34099      4D475F46 
 34099      4346535F 
 34100              	.LASF36:
 34101 0095 434D445F 		.ascii	"CMD_ACTIVATE\000"
 34101      41435449 
 34101      56415445 
 34101      00
 34102              	.LASF203:
 34103 00a2 75736572 		.ascii	"user\000"
 34103      00
 34104              	.LASF364:
 34105 00a7 665F6572 		.ascii	"f_err_emg_1\000"
 34105      725F656D 
 34105      675F3100 
 34106              	.LASF365:
 34107 00b3 665F6572 		.ascii	"f_err_emg_2\000"
 34107      725F656D 
 34107      675F3200 
 34108              	.LASF370:
 34109 00bf 73746F70 		.ascii	"stop_master_device\000"
 34109      5F6D6173 
 34109      7465725F 
 34109      64657669 
 34109      636500
 34110              	.LASF11:
 34111 00d2 696E7433 		.ascii	"int32_t\000"
 34111      325F7400 
 34112              	.LASF381:
 34113 00da 675F7278 		.ascii	"g_rx\000"
 34113      00
 34114              	.LASF102:
 34115 00df 73745F64 		.ascii	"st_data\000"
 34115      61746100 
 34116              	.LASF294:
 34117 00e7 685F7469 		.ascii	"h_time\000"
 34117      6D6500
 34118              	.LASF308:
 34119 00ee 77726974 		.ascii	"writeStatus\000"
 34119      65537461 
 34119      74757300 
 34120              	.LASF112:
 34121 00fa 746F7461 		.ascii	"total_runtime\000"
 34121      6C5F7275 
 34121      6E74696D 
 34121      6500
 34122              	.LASF15:
 34123 0108 75696E74 		.ascii	"uint32\000"
 34123      333200
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 724


 34124              	.LASF369:
 34125 010f 636D645F 		.ascii	"cmd_set_baudrate\000"
 34125      7365745F 
 34125      62617564 
 34125      72617465 
 34125      00
 34126              	.LASF353:
 34127 0120 6169725F 		.ascii	"air_chambers_control\000"
 34127      6368616D 
 34127      62657273 
 34127      5F636F6E 
 34127      74726F6C 
 34128              	.LASF278:
 34129 0135 7370695F 		.ascii	"spi_read_delay_str_len\000"
 34129      72656164 
 34129      5F64656C 
 34129      61795F73 
 34129      74725F6C 
 34130              	.LASF204:
 34131 014c 4A4F595F 		.ascii	"JOY_spec\000"
 34131      73706563 
 34131      00
 34132              	.LASF280:
 34133 0155 70726570 		.ascii	"prepare_generic_info\000"
 34133      6172655F 
 34133      67656E65 
 34133      7269635F 
 34133      696E666F 
 34134              	.LASF141:
 34135 016a 706F735F 		.ascii	"pos_lim_inf\000"
 34135      6C696D5F 
 34135      696E6600 
 34136              	.LASF244:
 34137 0176 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 34137      4E445F4D 
 34137      4F544F52 
 34137      5F494458 
 34137      00
 34138              	.LASF336:
 34139 0187 636D645F 		.ascii	"cmd_get_inputs\000"
 34139      6765745F 
 34139      696E7075 
 34139      747300
 34140              	.LASF64:
 34141 0196 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 34141      545F4D4F 
 34141      44455F45 
 34141      4D475F46 
 34141      43465300 
 34142              	.LASF145:
 34143 01aa 63757272 		.ascii	"curr_lookup\000"
 34143      5F6C6F6F 
 34143      6B757000 
 34144              	.LASF110:
 34145 01b6 72657374 		.ascii	"rest_counter\000"
 34145      5F636F75 
 34145      6E746572 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 725


 34145      00
 34146              	.LASF341:
 34147 01c3 636D645F 		.ascii	"cmd_get_imu_readings\000"
 34147      6765745F 
 34147      696D755F 
 34147      72656164 
 34147      696E6773 
 34148              	.LASF188:
 34149 01d8 73745F4D 		.ascii	"st_MASTER_spec\000"
 34149      41535445 
 34149      525F7370 
 34149      656300
 34150              	.LASF273:
 34151 01e7 69645F73 		.ascii	"id_str_len\000"
 34151      74725F6C 
 34151      656E00
 34152              	.LASF63:
 34153 01f2 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 34153      545F4D4F 
 34153      44455F45 
 34153      4D475F49 
 34153      4E544547 
 34154              	.LASF246:
 34155 020a 6D5F746D 		.ascii	"m_tmp\000"
 34155      7000
 34156              	.LASF293:
 34157 0210 765F6964 		.ascii	"v_idx\000"
 34157      7800
 34158              	.LASF16:
 34159 0216 696E7438 		.ascii	"int8\000"
 34159      00
 34160              	.LASF223:
 34161 021b 6765745F 		.ascii	"get_param_list\000"
 34161      70617261 
 34161      6D5F6C69 
 34161      737400
 34162              	.LASF321:
 34163 022a 636D645F 		.ascii	"cmd_get_accelerations\000"
 34163      6765745F 
 34163      61636365 
 34163      6C657261 
 34163      74696F6E 
 34164              	.LASF340:
 34165 0240 636D645F 		.ascii	"cmd_get_emg\000"
 34165      6765745F 
 34165      656D6700 
 34166              	.LASF160:
 34167 024c 73745F65 		.ascii	"st_emg\000"
 34167      6D6700
 34168              	.LASF108:
 34169 0253 706F7369 		.ascii	"position_hist\000"
 34169      74696F6E 
 34169      5F686973 
 34169      7400
 34170              	.LASF211:
 34171 0261 74656D70 		.ascii	"temp_value\000"
 34171      5F76616C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 726


 34171      756500
 34172              	.LASF292:
 34173 026c 7374725F 		.ascii	"str_data\000"
 34173      64617461 
 34173      00
 34174              	.LASF417:
 34175 0275 72657375 		.ascii	"result\000"
 34175      6C7400
 34176              	.LASF272:
 34177 027c 7370695F 		.ascii	"spi_read_delay_str\000"
 34177      72656164 
 34177      5F64656C 
 34177      61795F73 
 34177      747200
 34178              	.LASF195:
 34179 028f 73745F57 		.ascii	"st_WR_spec\000"
 34179      525F7370 
 34179      656300
 34180              	.LASF105:
 34181 029a 72656164 		.ascii	"ready\000"
 34181      7900
 34182              	.LASF157:
 34183 02a0 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 34183      6964785F 
 34183      7573655F 
 34183      666F725F 
 34183      636F6E74 
 34184              	.LASF49:
 34185 02b8 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 34185      4745545F 
 34185      4A4F5953 
 34185      5449434B 
 34185      00
 34186              	.LASF62:
 34187 02c9 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 34187      545F4D4F 
 34187      44455F45 
 34187      4D475F50 
 34187      524F504F 
 34188              	.LASF123:
 34189 02e5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 34189      326E645F 
 34189      6D6F746F 
 34189      725F666C 
 34189      616700
 34190              	.LASF332:
 34191 02f8 745F7374 		.ascii	"t_start\000"
 34191      61727400 
 34192              	.LASF115:
 34193 0300 65786365 		.ascii	"excessive_signal_activity\000"
 34193      73736976 
 34193      655F7369 
 34193      676E616C 
 34193      5F616374 
 34194              	.LASF167:
 34195 031a 72656164 		.ascii	"read_imu_flag\000"
 34195      5F696D75 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 727


 34195      5F666C61 
 34195      6700
 34196              	.LASF175:
 34197 0328 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 34197      72645F45 
 34197      4D475F68 
 34197      6973746F 
 34197      72795F6F 
 34198              	.LASF385:
 34199 0341 74696D65 		.ascii	"timer_value\000"
 34199      725F7661 
 34199      6C756500 
 34200              	.LASF4:
 34201 034d 6C6F6E67 		.ascii	"long int\000"
 34201      20696E74 
 34201      00
 34202              	.LASF201:
 34203 0356 756E7573 		.ascii	"unused_bytes1\000"
 34203      65645F62 
 34203      79746573 
 34203      3100
 34204              	.LASF368:
 34205 0364 6D6F746F 		.ascii	"motor_idx\000"
 34205      725F6964 
 34205      7800
 34206              	.LASF122:
 34207 036e 72657365 		.ascii	"reset_counters\000"
 34207      745F636F 
 34207      756E7465 
 34207      727300
 34208              	.LASF178:
 34209 037d 75736572 		.ascii	"user_emg\000"
 34209      5F656D67 
 34209      00
 34210              	.LASF349:
 34211 0386 636D645F 		.ascii	"cmd_get_SD_file\000"
 34211      6765745F 
 34211      53445F66 
 34211      696C6500 
 34212              	.LASF318:
 34213 0396 7365745A 		.ascii	"setZeros\000"
 34213      65726F73 
 34213      00
 34214              	.LASF117:
 34215 039f 756E7573 		.ascii	"unused_bytes\000"
 34215      65645F62 
 34215      79746573 
 34215      00
 34216              	.LASF207:
 34217 03ac 61636365 		.ascii	"accel_value\000"
 34217      6C5F7661 
 34217      6C756500 
 34218              	.LASF227:
 34219 03b8 4E554D5F 		.ascii	"NUM_ITEMS\000"
 34219      4954454D 
 34219      5300
 34220              	.LASF106:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 728


 34221 03c2 73745F63 		.ascii	"st_counters\000"
 34221      6F756E74 
 34221      65727300 
 34222              	.LASF250:
 34223 03ce 4D454D5F 		.ascii	"MEM_P\000"
 34223      5000
 34224              	.LASF19:
 34225 03d4 666C6F61 		.ascii	"float32\000"
 34225      74333200 
 34226              	.LASF347:
 34227 03dc 636D645F 		.ascii	"cmd_get_ADC_map\000"
 34227      6765745F 
 34227      4144435F 
 34227      6D617000 
 34228              	.LASF41:
 34229 03ec 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 34229      4745545F 
 34229      43555252 
 34229      454E5453 
 34229      00
 34230              	.LASF291:
 34231 03fd 70726570 		.ascii	"prepare_SD_EMG_history\000"
 34231      6172655F 
 34231      53445F45 
 34231      4D475F68 
 34231      6973746F 
 34232              	.LASF348:
 34233 0414 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 34233      6765745F 
 34233      4144435F 
 34233      72617700 
 34234              	.LASF401:
 34235 0424 73645061 		.ascii	"sdParam\000"
 34235      72616D00 
 34236              	.LASF357:
 34237 042c 70726573 		.ascii	"pressure_value\000"
 34237      73757265 
 34237      5F76616C 
 34237      756500
 34238              	.LASF260:
 34239 043b 6175785F 		.ascii	"aux_float2\000"
 34239      666C6F61 
 34239      743200
 34240              	.LASF335:
 34241 0446 636D645F 		.ascii	"cmd_ping\000"
 34241      70696E67 
 34241      00
 34242              	.LASF279:
 34243 044f 7370695F 		.ascii	"spi_delay_menu_len\000"
 34243      64656C61 
 34243      795F6D65 
 34243      6E755F6C 
 34243      656E00
 34244              	.LASF258:
 34245 0462 7365745F 		.ascii	"set_custom_param\000"
 34245      63757374 
 34245      6F6D5F70 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 729


 34245      6172616D 
 34245      00
 34246              	.LASF352:
 34247 0473 636D645F 		.ascii	"cmd_remove_SD_file\000"
 34247      72656D6F 
 34247      76655F53 
 34247      445F6669 
 34247      6C6500
 34248              	.LASF317:
 34249 0486 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 34249      6E69745F 
 34249      4F74626B 
 34249      41637457 
 34249      72697374 
 34250              	.LASF0:
 34251 049d 7369676E 		.ascii	"signed char\000"
 34251      65642063 
 34251      68617200 
 34252              	.LASF177:
 34253 04a9 75736572 		.ascii	"user_code_string\000"
 34253      5F636F64 
 34253      655F7374 
 34253      72696E67 
 34253      00
 34254              	.LASF212:
 34255 04ba 73745F63 		.ascii	"st_calib\000"
 34255      616C6962 
 34255      00
 34256              	.LASF362:
 34257 04c3 6572725F 		.ascii	"err_emg_1\000"
 34257      656D675F 
 34257      3100
 34258              	.LASF306:
 34259 04cd 6D656D53 		.ascii	"memStore\000"
 34259      746F7265 
 34259      00
 34260              	.LASF351:
 34261 04d6 66696C65 		.ascii	"filename\000"
 34261      6E616D65 
 34261      00
 34262              	.LASF73:
 34263 04df 6D6F746F 		.ascii	"motor_supply_type\000"
 34263      725F7375 
 34263      70706C79 
 34263      5F747970 
 34263      6500
 34264              	.LASF334:
 34265 04f1 72656164 		.ascii	"read_flag\000"
 34265      5F666C61 
 34265      6700
 34266              	.LASF394:
 34267 04fb 4144435F 		.ascii	"ADC_buf\000"
 34267      62756600 
 34268              	.LASF391:
 34269 0503 696E7465 		.ascii	"interrupt_flag\000"
 34269      72727570 
 34269      745F666C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 730


 34269      616700
 34270              	.LASF284:
 34271 0512 73746570 		.ascii	"step\000"
 34271      00
 34272              	.LASF1:
 34273 0517 756E7369 		.ascii	"unsigned char\000"
 34273      676E6564 
 34273      20636861 
 34273      7200
 34274              	.LASF151:
 34275 0525 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 34275      72657665 
 34275      72735F6D 
 34275      6F746F72 
 34275      5F666C61 
 34276              	.LASF374:
 34277 053b 675F7265 		.ascii	"g_refNew\000"
 34277      664E6577 
 34277      00
 34278              	.LASF121:
 34279 0544 72696768 		.ascii	"right_left\000"
 34279      745F6C65 
 34279      667400
 34280              	.LASF29:
 34281 054f 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 34281      53544F52 
 34281      455F4445 
 34281      4641554C 
 34281      545F5041 
 34282              	.LASF149:
 34283 0568 656E636F 		.ascii	"encoder_line\000"
 34283      6465725F 
 34283      6C696E65 
 34283      00
 34284              	.LASF274:
 34285 0575 6E5F696D 		.ascii	"n_imu_str_len\000"
 34285      755F7374 
 34285      725F6C65 
 34285      6E00
 34286              	.LASF277:
 34287 0583 696D755F 		.ascii	"imu_table_str_len\000"
 34287      7461626C 
 34287      655F7374 
 34287      725F6C65 
 34287      6E00
 34288              	.LASF304:
 34289 0595 76616C75 		.ascii	"value\000"
 34289      6500
 34290              	.LASF206:
 34291 059b 666C6167 		.ascii	"flags\000"
 34291      7300
 34292              	.LASF101:
 34293 05a1 70726573 		.ascii	"pressure\000"
 34293      73757265 
 34293      00
 34294              	.LASF37:
 34295 05aa 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 731


 34295      4745545F 
 34295      41435449 
 34295      56415445 
 34295      00
 34296              	.LASF22:
 34297 05bb 63686172 		.ascii	"char\000"
 34297      00
 34298              	.LASF144:
 34299 05c0 6D61785F 		.ascii	"max_step_pos\000"
 34299      73746570 
 34299      5F706F73 
 34299      00
 34300              	.LASF407:
 34301 05cd 675F696D 		.ascii	"g_imu\000"
 34301      7500
 34302              	.LASF358:
 34303 05d3 76616C76 		.ascii	"valve_command\000"
 34303      655F636F 
 34303      6D6D616E 
 34303      6400
 34304              	.LASF355:
 34305 05e1 70726573 		.ascii	"pressure_reference\000"
 34305      73757265 
 34305      5F726566 
 34305      6572656E 
 34305      636500
 34306              	.LASF310:
 34307 05f4 7265745F 		.ascii	"ret_val\000"
 34307      76616C00 
 34308              	.LASF257:
 34309 05fc 6D656E75 		.ascii	"menu_idx\000"
 34309      5F696478 
 34309      00
 34310              	.LASF266:
 34311 0605 73746172 		.ascii	"start_byte\000"
 34311      745F6279 
 34311      746500
 34312              	.LASF263:
 34313 0610 6E756D5F 		.ascii	"num_mag_cal_params\000"
 34313      6D61675F 
 34313      63616C5F 
 34313      70617261 
 34313      6D7300
 34314              	.LASF150:
 34315 0623 70776D5F 		.ascii	"pwm_rate_limiter\000"
 34315      72617465 
 34315      5F6C696D 
 34315      69746572 
 34315      00
 34316              	.LASF130:
 34317 0634 6B5F645F 		.ascii	"k_d_c\000"
 34317      6300
 34318              	.LASF100:
 34319 063a 73745F66 		.ascii	"st_fb_meas\000"
 34319      625F6D65 
 34319      617300
 34320              	.LASF220:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 732


 34321 0645 7061636B 		.ascii	"packet_string\000"
 34321      65745F73 
 34321      7472696E 
 34321      6700
 34322              	.LASF155:
 34323 0653 6D5F6D75 		.ascii	"m_mult\000"
 34323      6C7400
 34324              	.LASF129:
 34325 065a 6B5F695F 		.ascii	"k_i_c\000"
 34325      6300
 34326              	.LASF307:
 34327 0660 64697370 		.ascii	"displacement\000"
 34327      6C616365 
 34327      6D656E74 
 34327      00
 34328              	.LASF301:
 34329 066d 64617461 		.ascii	"data_length\000"
 34329      5F6C656E 
 34329      67746800 
 34330              	.LASF142:
 34331 0679 706F735F 		.ascii	"pos_lim_sup\000"
 34331      6C696D5F 
 34331      73757000 
 34332              	.LASF285:
 34333 0685 5230315F 		.ascii	"R01_str\000"
 34333      73747200 
 34334              	.LASF163:
 34335 068d 656D675F 		.ascii	"emg_speed\000"
 34335      73706565 
 34335      6400
 34336              	.LASF182:
 34337 0697 72657374 		.ascii	"rest_vel\000"
 34337      5F76656C 
 34337      00
 34338              	.LASF233:
 34339 06a0 7061636B 		.ascii	"packet_data\000"
 34339      65745F64 
 34339      61746100 
 34340              	.LASF118:
 34341 06ac 73745F64 		.ascii	"st_device\000"
 34341      65766963 
 34341      6500
 34342              	.LASF399:
 34343 06b6 7046696C 		.ascii	"pFile\000"
 34343      6500
 34344              	.LASF174:
 34345 06bc 4144435F 		.ascii	"ADC_conf\000"
 34345      636F6E66 
 34345      00
 34346              	.LASF298:
 34347 06c5 636F6D6D 		.ascii	"commWrite\000"
 34347      57726974 
 34347      6500
 34348              	.LASF371:
 34349 06cf 64656163 		.ascii	"deactivate_slaves\000"
 34349      74697661 
 34349      74655F73 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 733


 34349      6C617665 
 34349      7300
 34350              	.LASF309:
 34351 06e1 70616765 		.ascii	"pages\000"
 34351      7300
 34352              	.LASF313:
 34353 06e7 6D656D49 		.ascii	"memInit\000"
 34353      6E697400 
 34354              	.LASF132:
 34355 06ef 6B5F695F 		.ascii	"k_i_dl\000"
 34355      646C00
 34356              	.LASF38:
 34357 06f6 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 34357      5345545F 
 34357      494E5055 
 34357      545300
 34358              	.LASF103:
 34359 0705 62756666 		.ascii	"buffer\000"
 34359      657200
 34360              	.LASF134:
 34361 070c 6B5F705F 		.ascii	"k_p_c_dl\000"
 34361      635F646C 
 34361      00
 34362              	.LASF319:
 34363 0715 636D645F 		.ascii	"cmd_get_measurements\000"
 34363      6765745F 
 34363      6D656173 
 34363      7572656D 
 34363      656E7473 
 34364              	.LASF215:
 34365 072a 73706565 		.ascii	"speed\000"
 34365      6400
 34366              	.LASF219:
 34367 0730 72785F63 		.ascii	"rx_cmd\000"
 34367      6D6400
 34368              	.LASF88:
 34369 0737 54595045 		.ascii	"TYPE_DOUBLE\000"
 34369      5F444F55 
 34369      424C4500 
 34370              	.LASF354:
 34371 0743 736C6176 		.ascii	"slave_motor_idx\000"
 34371      655F6D6F 
 34371      746F725F 
 34371      69647800 
 34372              	.LASF376:
 34373 0753 675F6D65 		.ascii	"g_meas\000"
 34373      617300
 34374              	.LASF324:
 34375 075a 6C617374 		.ascii	"last_aux_int16\000"
 34375      5F617578 
 34375      5F696E74 
 34375      313600
 34376              	.LASF77:
 34377 0769 41434B5F 		.ascii	"ACK_ERROR\000"
 34377      4552524F 
 34377      5200
 34378              	.LASF396:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 734


 34379 0773 64617461 		.ascii	"data_encoder_raw\000"
 34379      5F656E63 
 34379      6F646572 
 34379      5F726177 
 34379      00
 34380              	.LASF60:
 34381 0784 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 34381      545F4D4F 
 34381      44455F45 
 34381      58544552 
 34381      4E414C00 
 34382              	.LASF248:
 34383 0798 696E6465 		.ascii	"index\000"
 34383      7800
 34384              	.LASF193:
 34385 079e 6D617869 		.ascii	"maximum_pressure_kPa\000"
 34385      6D756D5F 
 34385      70726573 
 34385      73757265 
 34385      5F6B5061 
 34386              	.LASF183:
 34387 07b3 72657374 		.ascii	"rest_position_flag\000"
 34387      5F706F73 
 34387      6974696F 
 34387      6E5F666C 
 34387      616700
 34388              	.LASF185:
 34389 07c6 6A6F7973 		.ascii	"joystick_closure_speed\000"
 34389      7469636B 
 34389      5F636C6F 
 34389      73757265 
 34389      5F737065 
 34390              	.LASF350:
 34391 07dd 66696C65 		.ascii	"filename_length\000"
 34391      6E616D65 
 34391      5F6C656E 
 34391      67746800 
 34392              	.LASF135:
 34393 07ed 6B5F695F 		.ascii	"k_i_c_dl\000"
 34393      635F646C 
 34393      00
 34394              	.LASF330:
 34395 07f6 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 34395      52656164 
 34395      52657343 
 34395      75727246 
 34395      726F6D53 
 34396              	.LASF329:
 34397 080c 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 34397      6765745F 
 34397      63757272 
 34397      656E7473 
 34397      5F666F72 
 34398              	.LASF269:
 34399 0826 6D61675F 		.ascii	"mag_param_str\000"
 34399      70617261 
 34399      6D5F7374 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 735


 34399      7200
 34400              	.LASF393:
 34401 0834 72657365 		.ascii	"reset_PSoC_flag\000"
 34401      745F5053 
 34401      6F435F66 
 34401      6C616700 
 34402              	.LASF366:
 34403 0844 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 34403      5F616374 
 34403      5F777269 
 34403      73745F63 
 34403      6F6E7472 
 34404              	.LASF89:
 34405 085b 54595045 		.ascii	"TYPE_STRING\000"
 34405      5F535452 
 34405      494E4700 
 34406              	.LASF72:
 34407 0867 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 34407      5F414E44 
 34407      5F504F53 
 34407      5F434F4E 
 34407      54524F4C 
 34408              	.LASF28:
 34409 087c 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 34409      53544F52 
 34409      455F5041 
 34409      52414D53 
 34409      00
 34410              	.LASF230:
 34411 088d 50415241 		.ascii	"PARAMS_STR\000"
 34411      4D535F53 
 34411      545200
 34412              	.LASF213:
 34413 0898 656E6162 		.ascii	"enabled\000"
 34413      6C656400 
 34414              	.LASF7:
 34415 08a0 6C6F6E67 		.ascii	"long unsigned int\000"
 34415      20756E73 
 34415      69676E65 
 34415      6420696E 
 34415      7400
 34416              	.LASF32:
 34417 08b2 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 34417      424F4F54 
 34417      4C4F4144 
 34417      455200
 34418              	.LASF187:
 34419 08c1 6A6F7973 		.ascii	"joystick_gains\000"
 34419      7469636B 
 34419      5F676169 
 34419      6E7300
 34420              	.LASF96:
 34421 08d0 686F6C64 		.ascii	"hold_curr\000"
 34421      5F637572 
 34421      7200
 34422              	.LASF66:
 34423 08da 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 736


 34423      545F4D4F 
 34423      44455F4A 
 34423      4F595354 
 34423      49434B00 
 34424              	.LASF113:
 34425 08ee 746F7461 		.ascii	"total_time_rest\000"
 34425      6C5F7469 
 34425      6D655F72 
 34425      65737400 
 34426              	.LASF222:
 34427 08fe 7374725F 		.ascii	"str_sd_data\000"
 34427      73645F64 
 34427      61746100 
 34428              	.LASF137:
 34429 090a 61637469 		.ascii	"activ\000"
 34429      7600
 34430              	.LASF232:
 34431 0910 4D454E55 		.ascii	"MENU_STR\000"
 34431      5F535452 
 34431      00
 34432              	.LASF154:
 34433 0919 6D5F6F66 		.ascii	"m_off\000"
 34433      6600
 34434              	.LASF78:
 34435 091f 41434B5F 		.ascii	"ACK_OK\000"
 34435      4F4B00
 34436              	.LASF80:
 34437 0926 54595045 		.ascii	"TYPE_FLAG\000"
 34437      5F464C41 
 34437      4700
 34438              	.LASF210:
 34439 0930 71756174 		.ascii	"quat_value\000"
 34439      5F76616C 
 34439      756500
 34440              	.LASF265:
 34441 093b 7061636B 		.ascii	"packet_length\000"
 34441      65745F6C 
 34441      656E6774 
 34441      6800
 34442              	.LASF180:
 34443 0949 72657374 		.ascii	"rest_pos\000"
 34443      5F706F73 
 34443      00
 34444              	.LASF91:
 34445 0952 63757272 		.ascii	"curr\000"
 34445      00
 34446              	.LASF147:
 34447 0957 696E7075 		.ascii	"input_mode\000"
 34447      745F6D6F 
 34447      646500
 34448              	.LASF70:
 34449 0962 434F4E54 		.ascii	"CONTROL_PWM\000"
 34449      524F4C5F 
 34449      50574D00 
 34450              	.LASF43:
 34451 096e 434D445F 		.ascii	"CMD_GET_EMG\000"
 34451      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 737


 34451      454D4700 
 34452              	.LASF314:
 34453 097a 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 34453      6E69745F 
 34453      536F6674 
 34453      48616E64 
 34453      50726F00 
 34454              	.LASF31:
 34455 098e 434D445F 		.ascii	"CMD_GET_INFO\000"
 34455      4745545F 
 34455      494E464F 
 34455      00
 34456              	.LASF261:
 34457 099b 6765745F 		.ascii	"get_IMU_param_list\000"
 34457      494D555F 
 34457      70617261 
 34457      6D5F6C69 
 34457      737400
 34458              	.LASF344:
 34459 09ae 73696E67 		.ascii	"single_packet\000"
 34459      6C655F70 
 34459      61636B65 
 34459      7400
 34460              	.LASF264:
 34461 09bc 66697273 		.ascii	"first_imu_parameter\000"
 34461      745F696D 
 34461      755F7061 
 34461      72616D65 
 34461      74657200 
 34462              	.LASF42:
 34463 09d0 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 34463      4745545F 
 34463      43555252 
 34463      5F414E44 
 34463      5F4D4541 
 34464              	.LASF413:
 34465 09e6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 34465      43313120 
 34465      352E342E 
 34465      31203230 
 34465      31363036 
 34466 0a19 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 34466      20726576 
 34466      6973696F 
 34466      6E203233 
 34466      37373135 
 34467 0a4c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 34467      66756E63 
 34467      74696F6E 
 34467      2D736563 
 34467      74696F6E 
 34468              	.LASF93:
 34469 0a74 73745F72 		.ascii	"st_ref\000"
 34469      656600
 34470              	.LASF322:
 34471 0a7b 636D645F 		.ascii	"cmd_get_joystick\000"
 34471      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 738


 34471      6A6F7973 
 34471      7469636B 
 34471      00
 34472              	.LASF47:
 34473 0a8c 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 34473      5345545F 
 34473      43554646 
 34473      5F494E50 
 34473      55545300 
 34474              	.LASF179:
 34475 0aa0 73745F53 		.ascii	"st_SH_spec\000"
 34475      485F7370 
 34475      656300
 34476              	.LASF384:
 34477 0aab 63616C69 		.ascii	"calib\000"
 34477      6200
 34478              	.LASF6:
 34479 0ab1 5F5F7569 		.ascii	"__uint32_t\000"
 34479      6E743332 
 34479      5F7400
 34480              	.LASF8:
 34481 0abc 6C6F6E67 		.ascii	"long long int\000"
 34481      206C6F6E 
 34481      6720696E 
 34481      7400
 34482              	.LASF68:
 34483 0aca 53485F63 		.ascii	"SH_control_mode\000"
 34483      6F6E7472 
 34483      6F6C5F6D 
 34483      6F646500 
 34484              	.LASF82:
 34485 0ada 54595045 		.ascii	"TYPE_UINT8\000"
 34485      5F55494E 
 34485      543800
 34486              	.LASF328:
 34487 0ae5 636D645F 		.ascii	"cmd_get_currents\000"
 34487      6765745F 
 34487      63757272 
 34487      656E7473 
 34487      00
 34488              	.LASF75:
 34489 0af6 4D41584F 		.ascii	"MAXON_12V\000"
 34489      4E5F3132 
 34489      5600
 34490              	.LASF392:
 34491 0b00 6368616E 		.ascii	"change_ext_ref_flag\000"
 34491      67655F65 
 34491      78745F72 
 34491      65665F66 
 34491      6C616700 
 34492              	.LASF21:
 34493 0b14 646F7562 		.ascii	"double\000"
 34493      6C6500
 34494              	.LASF56:
 34495 0b1b 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 34495      4745545F 
 34495      53445F53 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 739


 34495      494E474C 
 34495      455F4649 
 34496              	.LASF153:
 34497 0b32 456E635F 		.ascii	"Enc_raw_read_conf\000"
 34497      7261775F 
 34497      72656164 
 34497      5F636F6E 
 34497      6600
 34498              	.LASF216:
 34499 0b44 72657065 		.ascii	"repetitions\000"
 34499      74697469 
 34499      6F6E7300 
 34500              	.LASF143:
 34501 0b50 6D61785F 		.ascii	"max_step_neg\000"
 34501      73746570 
 34501      5F6E6567 
 34501      00
 34502              	.LASF411:
 34503 0b5d 656D675F 		.ascii	"emg_history_next_idx\000"
 34503      68697374 
 34503      6F72795F 
 34503      6E657874 
 34503      5F696478 
 34504              	.LASF190:
 34505 0b72 736C6176 		.ascii	"slave_ID\000"
 34505      655F4944 
 34505      00
 34506              	.LASF390:
 34507 0b7b 72657365 		.ascii	"reset_last_value_flag\000"
 34507      745F6C61 
 34507      73745F76 
 34507      616C7565 
 34507      5F666C61 
 34508              	.LASF231:
 34509 0b91 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 34509      4F4D5F50 
 34509      4152414D 
 34509      5F474554 
 34509      00
 34510              	.LASF20:
 34511 0ba2 666C6F61 		.ascii	"float\000"
 34511      7400
 34512              	.LASF169:
 34513 0ba8 494D555F 		.ascii	"IMU_conf\000"
 34513      636F6E66 
 34513      00
 34514              	.LASF57:
 34515 0bb1 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 34515      52454D4F 
 34515      56455F53 
 34515      445F5349 
 34515      4E474C45 
 34516              	.LASF356:
 34517 0bcb 6572725F 		.ascii	"err_pressure\000"
 34517      70726573 
 34517      73757265 
 34517      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 740


 34518              	.LASF249:
 34519 0bd8 50415241 		.ascii	"PARAM_IDX\000"
 34519      4D5F4944 
 34519      5800
 34520              	.LASF97:
 34521 0be2 73745F61 		.ascii	"st_adc_meas\000"
 34521      64635F6D 
 34521      65617300 
 34522              	.LASF245:
 34523 0bee 6D5F6164 		.ascii	"m_addr\000"
 34523      647200
 34524              	.LASF383:
 34525 0bf5 635F6D65 		.ascii	"c_mem\000"
 34525      6D00
 34526              	.LASF300:
 34527 0bfb 64617461 		.ascii	"data_array\000"
 34527      5F617272 
 34527      617900
 34528              	.LASF10:
 34529 0c06 756E7369 		.ascii	"unsigned int\000"
 34529      676E6564 
 34529      20696E74 
 34529      00
 34530              	.LASF363:
 34531 0c13 6572725F 		.ascii	"err_emg_2\000"
 34531      656D675F 
 34531      3200
 34532              	.LASF315:
 34533 0c1d 6D656D49 		.ascii	"memInit_Master\000"
 34533      6E69745F 
 34533      4D617374 
 34533      657200
 34534              	.LASF234:
 34535 0c2c 7061636B 		.ascii	"packet_lenght\000"
 34535      65745F6C 
 34535      656E6768 
 34535      7400
 34536              	.LASF303:
 34537 0c3a 73656E64 		.ascii	"sendAcknowledgment\000"
 34537      41636B6E 
 34537      6F776C65 
 34537      64676D65 
 34537      6E7400
 34538              	.LASF288:
 34539 0c4d 70726570 		.ascii	"prepare_SD_legend\000"
 34539      6172655F 
 34539      53445F6C 
 34539      6567656E 
 34539      6400
 34540              	.LASF408:
 34541 0c5f 4D616743 		.ascii	"MagCal\000"
 34541      616C00
 34542              	.LASF58:
 34543 0c66 53485F63 		.ascii	"SH_command\000"
 34543      6F6D6D61 
 34543      6E6400
 34544              	.LASF84:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 741


 34545 0c71 54595045 		.ascii	"TYPE_UINT16\000"
 34545      5F55494E 
 34545      54313600 
 34546              	.LASF200:
 34547 0c7d 666C6167 		.ascii	"flag\000"
 34547      00
 34548              	.LASF359:
 34549 0c82 785F7661 		.ascii	"x_value\000"
 34549      6C756500 
 34550              	.LASF323:
 34551 0c8a 636D645F 		.ascii	"cmd_set_inputs\000"
 34551      7365745F 
 34551      696E7075 
 34551      747300
 34552              	.LASF148:
 34553 0c99 636F6E74 		.ascii	"control_mode\000"
 34553      726F6C5F 
 34553      6D6F6465 
 34553      00
 34554              	.LASF338:
 34555 0ca6 6F66665F 		.ascii	"off_1\000"
 34555      3100
 34556              	.LASF61:
 34557 0cac 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 34557      545F4D4F 
 34557      44455F45 
 34557      4E434F44 
 34557      45523300 
 34558              	.LASF299:
 34559 0cc0 636F6D6D 		.ascii	"commWriteID\000"
 34559      57726974 
 34559      65494400 
 34560              	.LASF52:
 34561 0ccc 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 34561      4745545F 
 34561      454E434F 
 34561      4445525F 
 34561      434F4E46 
 34562              	.LASF166:
 34563 0ce1 73745F69 		.ascii	"st_imu\000"
 34563      6D7500
 34564              	.LASF326:
 34565 0ce8 636D645F 		.ascii	"cmd_get_activate\000"
 34565      6765745F 
 34565      61637469 
 34565      76617465 
 34565      00
 34566              	.LASF360:
 34567 0cf9 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 34567      61637469 
 34567      76617469 
 34567      6F6E5F76 
 34567      656C6F63 
 34568              	.LASF236:
 34569 0d15 73747269 		.ascii	"string_lenght\000"
 34569      6E675F6C 
 34569      656E6768 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 742


 34569      7400
 34570              	.LASF87:
 34571 0d23 54595045 		.ascii	"TYPE_FLOAT\000"
 34571      5F464C4F 
 34571      415400
 34572              	.LASF254:
 34573 0d2e 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 34573      4F4D5F50 
 34573      4152414D 
 34573      5F534554 
 34573      5F4C4953 
 34574              	.LASF228:
 34575 0d44 4E554D5F 		.ascii	"NUM_STRUCT\000"
 34575      53545255 
 34575      435400
 34576              	.LASF406:
 34577 0d4f 73696E67 		.ascii	"single_imu_size\000"
 34577      6C655F69 
 34577      6D755F73 
 34577      697A6500 
 34578              	.LASF259:
 34579 0d5f 6175785F 		.ascii	"aux_uchar\000"
 34579      75636861 
 34579      7200
 34580              	.LASF286:
 34581 0d69 70726570 		.ascii	"prepare_R01_info\000"
 34581      6172655F 
 34581      5230315F 
 34581      696E666F 
 34581      00
 34582              	.LASF98:
 34583 0d7a 6164645F 		.ascii	"add_emg\000"
 34583      656D6700 
 34584              	.LASF83:
 34585 0d82 54595045 		.ascii	"TYPE_INT16\000"
 34585      5F494E54 
 34585      313600
 34586              	.LASF240:
 34587 0d8d 6175785F 		.ascii	"aux_uint16\000"
 34587      75696E74 
 34587      313600
 34588              	.LASF161:
 34589 0d98 656D675F 		.ascii	"emg_threshold\000"
 34589      74687265 
 34589      73686F6C 
 34589      6400
 34590              	.LASF46:
 34591 0da6 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 34591      4745545F 
 34591      43555252 
 34591      5F444946 
 34591      4600
 34592              	.LASF158:
 34593 0db8 6D6F746F 		.ascii	"motor_handle_ratio\000"
 34593      725F6861 
 34593      6E646C65 
 34593      5F726174 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 743


 34593      696F00
 34594              	.LASF109:
 34595 0dcb 63757272 		.ascii	"current_hist\000"
 34595      656E745F 
 34595      68697374 
 34595      00
 34596              	.LASF71:
 34597 0dd8 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 34597      524F4C5F 
 34597      43555252 
 34597      454E5400 
 34598              	.LASF24:
 34599 0de8 6C6F6E67 		.ascii	"long double\000"
 34599      20646F75 
 34599      626C6500 
 34600              	.LASF86:
 34601 0df4 54595045 		.ascii	"TYPE_UINT32\000"
 34601      5F55494E 
 34601      54333200 
 34602              	.LASF191:
 34603 0e00 73745F46 		.ascii	"st_FB_spec\000"
 34603      425F7370 
 34603      656300
 34604              	.LASF225:
 34605 0e0b 5641525F 		.ascii	"VAR_P\000"
 34605      5000
 34606              	.LASF253:
 34607 0e11 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 34607      4F4D5F50 
 34607      4152414D 
 34607      5F474554 
 34607      5F4C4953 
 34608              	.LASF116:
 34609 0e27 6D6F7469 		.ascii	"motion_counter\000"
 34609      6F6E5F63 
 34609      6F756E74 
 34609      657200
 34610              	.LASF302:
 34611 0e36 63686563 		.ascii	"checksum\000"
 34611      6B73756D 
 34611      00
 34612              	.LASF375:
 34613 0e3f 675F7265 		.ascii	"g_refOld\000"
 34613      664F6C64 
 34613      00
 34614              	.LASF35:
 34615 0e48 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 34615      48414E44 
 34615      5F43414C 
 34615      49425241 
 34615      544500
 34616              	.LASF208:
 34617 0e5b 6779726F 		.ascii	"gyro_value\000"
 34617      5F76616C 
 34617      756500
 34618              	.LASF171:
 34619 0e66 63757272 		.ascii	"curr_time\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 744


 34619      5F74696D 
 34619      6500
 34620              	.LASF156:
 34621 0e70 646F7562 		.ascii	"double_encoder_on_off\000"
 34621      6C655F65 
 34621      6E636F64 
 34621      65725F6F 
 34621      6E5F6F66 
 34622              	.LASF367:
 34623 0e86 64726976 		.ascii	"drive_slave\000"
 34623      655F736C 
 34623      61766500 
 34624              	.LASF168:
 34625 0e92 5350495F 		.ascii	"SPI_read_delay\000"
 34625      72656164 
 34625      5F64656C 
 34625      617900
 34626              	.LASF76:
 34627 0ea1 61636B6E 		.ascii	"acknowledgment_values\000"
 34627      6F776C65 
 34627      64676D65 
 34627      6E745F76 
 34627      616C7565 
 34628              	.LASF243:
 34629 0eb7 4D4F544F 		.ascii	"MOTOR_IDX\000"
 34629      525F4944 
 34629      5800
 34630              	.LASF312:
 34631 0ec1 6D656D52 		.ascii	"memRestore\000"
 34631      6573746F 
 34631      726500
 34632              	.LASF267:
 34633 0ecc 6E5F696D 		.ascii	"n_imu_str\000"
 34633      755F7374 
 34633      7200
 34634              	.LASF281:
 34635 0ed6 696E666F 		.ascii	"info_string\000"
 34635      5F737472 
 34635      696E6700 
 34636              	.LASF289:
 34637 0ee2 70726570 		.ascii	"prepare_SD_info\000"
 34637      6172655F 
 34637      53445F69 
 34637      6E666F00 
 34638              	.LASF361:
 34639 0ef2 66736D5F 		.ascii	"fsm_state\000"
 34639      73746174 
 34639      6500
 34640              	.LASF9:
 34641 0efc 6C6F6E67 		.ascii	"long long unsigned int\000"
 34641      206C6F6E 
 34641      6720756E 
 34641      7369676E 
 34641      65642069 
 34642              	.LASF85:
 34643 0f13 54595045 		.ascii	"TYPE_INT32\000"
 34643      5F494E54 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 745


 34643      333200
 34644              	.LASF242:
 34645 0f1e 6175785F 		.ascii	"aux_uint32\000"
 34645      75696E74 
 34645      333200
 34646              	.LASF104:
 34647 0f29 6C656E67 		.ascii	"length\000"
 34647      746800
 34648              	.LASF255:
 34649 0f30 55534552 		.ascii	"USER_ID_PARAM\000"
 34649      5F49445F 
 34649      50415241 
 34649      4D00
 34650              	.LASF205:
 34651 0f3e 73745F69 		.ascii	"st_imu_data\000"
 34651      6D755F64 
 34651      61746100 
 34652              	.LASF209:
 34653 0f4a 6D61675F 		.ascii	"mag_value\000"
 34653      76616C75 
 34653      6500
 34654              	.LASF92:
 34655 0f54 6F6E6F66 		.ascii	"onoff\000"
 34655      6600
 34656              	.LASF45:
 34657 0f5a 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 34657      4745545F 
 34657      41434345 
 34657      4C00
 34658              	.LASF320:
 34659 0f68 636D645F 		.ascii	"cmd_get_velocities\000"
 34659      6765745F 
 34659      76656C6F 
 34659      63697469 
 34659      657300
 34660              	.LASF311:
 34661 0f7b 6D656D52 		.ascii	"memRecall\000"
 34661      6563616C 
 34661      6C00
 34662              	.LASF386:
 34663 0f85 74696D65 		.ascii	"timer_value0\000"
 34663      725F7661 
 34663      6C756530 
 34663      00
 34664              	.LASF48:
 34665 0f92 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 34665      5345545F 
 34665      42415544 
 34665      52415445 
 34665      00
 34666              	.LASF415:
 34667 0fa3 433A5C55 		.ascii	"C:\\Users\\mgnocco\\OneDrive - Fondazione Istituto "
 34667      73657273 
 34667      5C6D676E 
 34667      6F63636F 
 34667      5C4F6E65 
 34668 0fd3 4974616C 		.ascii	"Italiano Tecnologia\\Firmware\\Psoc5\\SoftHandPRO-a"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 746


 34668      69616E6F 
 34668      20546563 
 34668      6E6F6C6F 
 34668      6769615C 
 34669 1003 6E642D47 		.ascii	"nd-Generic-FW-PSoC5-Master\\Air_Chambers_Haptic_Fee"
 34669      656E6572 
 34669      69632D46 
 34669      572D5053 
 34669      6F43352D 
 34670 1035 64626163 		.ascii	"dback.cydsn\000"
 34670      6B2E6379 
 34670      64736E00 
 34671              	.LASF128:
 34672 1041 6B5F705F 		.ascii	"k_p_c\000"
 34672      6300
 34673              	.LASF271:
 34674 1047 696D755F 		.ascii	"imu_table_str\000"
 34674      7461626C 
 34674      655F7374 
 34674      7200
 34675              	.LASF387:
 34676 1055 6465765F 		.ascii	"dev_tension\000"
 34676      74656E73 
 34676      696F6E00 
 34677              	.LASF139:
 34678 1061 6D6F746F 		.ascii	"motor_driver_type\000"
 34678      725F6472 
 34678      69766572 
 34678      5F747970 
 34678      6500
 34679              	.LASF339:
 34680 1073 6D756C74 		.ascii	"mult_1\000"
 34680      5F3100
 34681              	.LASF283:
 34682 107a 70726570 		.ascii	"prepare_counter_info\000"
 34682      6172655F 
 34682      636F756E 
 34682      7465725F 
 34682      696E666F 
 34683              	.LASF23:
 34684 108f 72656738 		.ascii	"reg8\000"
 34684      00
 34685              	.LASF194:
 34686 1094 70726F70 		.ascii	"prop_err_fb_gain\000"
 34686      5F657272 
 34686      5F66625F 
 34686      6761696E 
 34686      00
 34687              	.LASF296:
 34688 10a5 636F6D6D 		.ascii	"commWrite_old_id\000"
 34688      57726974 
 34688      655F6F6C 
 34688      645F6964 
 34688      00
 34689              	.LASF247:
 34690 10b6 6D616E61 		.ascii	"manage_param_list\000"
 34690      67655F70 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 747


 34690      6172616D 
 34690      5F6C6973 
 34690      7400
 34691              	.LASF30:
 34692 10c8 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 34692      52455354 
 34692      4F52455F 
 34692      50415241 
 34692      4D5300
 34693              	.LASF400:
 34694 10db 73644669 		.ascii	"sdFile\000"
 34694      6C6500
 34695              	.LASF287:
 34696 10e2 70726570 		.ascii	"prepare_SD_param_info\000"
 34696      6172655F 
 34696      53445F70 
 34696      6172616D 
 34696      5F696E66 
 34697              	.LASF331:
 34698 10f8 63757272 		.ascii	"curr_diff\000"
 34698      5F646966 
 34698      6600
 34699              	.LASF189:
 34700 1102 736C6176 		.ascii	"slave_comm_active\000"
 34700      655F636F 
 34700      6D6D5F61 
 34700      63746976 
 34700      6500
 34701              	.LASF290:
 34702 1114 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 34702      6172655F 
 34702      53445F45 
 34702      4D475F48 
 34702      6973746F 
 34703              	.LASF297:
 34704 1132 6F6C645F 		.ascii	"old_id\000"
 34704      696400
 34705              	.LASF416:
 34706 1139 5F5F5245 		.ascii	"__REV16\000"
 34706      56313600 
 34707              	.LASF397:
 34708 1141 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 34708      636F6465 
 34708      725F4C69 
 34708      6E655F43 
 34708      6F6E6E65 
 34709              	.LASF126:
 34710 115a 6465765F 		.ascii	"dev_type\000"
 34710      74797065 
 34710      00
 34711              	.LASF176:
 34712 1163 73745F75 		.ascii	"st_user\000"
 34712      73657200 
 34713              	.LASF327:
 34714 116b 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 34714      6765745F 
 34714      63757272 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 748


 34714      5F616E64 
 34714      5F6D6561 
 34715              	.LASF159:
 34716 1181 67656172 		.ascii	"gears_params\000"
 34716      735F7061 
 34716      72616D73 
 34716      00
 34717              	.LASF170:
 34718 118e 73745F65 		.ascii	"st_expansion\000"
 34718      7870616E 
 34718      73696F6E 
 34718      00
 34719              	.LASF164:
 34720 119b 656D675F 		.ascii	"emg_calibration_flag\000"
 34720      63616C69 
 34720      62726174 
 34720      696F6E5F 
 34720      666C6167 
 34721              	.LASF94:
 34722 11b0 73745F6D 		.ascii	"st_meas\000"
 34722      65617300 
 34723              	.LASF55:
 34724 11b8 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 34724      4745545F 
 34724      4144435F 
 34724      52415700 
 34725              	.LASF186:
 34726 11c8 6A6F7973 		.ascii	"joystick_threshold\000"
 34726      7469636B 
 34726      5F746872 
 34726      6573686F 
 34726      6C6400
 34727              	.LASF74:
 34728 11db 4D41584F 		.ascii	"MAXON_24V\000"
 34728      4E5F3234 
 34728      5600
 34729              	.LASF67:
 34730 11e5 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 34730      545F4D4F 
 34730      44455F45 
 34730      4D475F50 
 34730      524F504F 
 34731              	.LASF51:
 34732 1204 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 34732      4745545F 
 34732      494D555F 
 34732      50415241 
 34732      4D00
 34733              	.LASF380:
 34734 1216 675F6662 		.ascii	"g_fb_meas\000"
 34734      5F6D6561 
 34734      7300
 34735              	.LASF53:
 34736 1220 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 34736      4745545F 
 34736      454E434F 
 34736      4445525F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 749


 34736      52415700 
 34737              	.LASF337:
 34738 1234 636D645F 		.ascii	"cmd_store_params\000"
 34738      73746F72 
 34738      655F7061 
 34738      72616D73 
 34738      00
 34739              	.LASF382:
 34740 1245 675F6D65 		.ascii	"g_mem\000"
 34740      6D00
 34741              	.LASF40:
 34742 124b 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 34742      4745545F 
 34742      4D454153 
 34742      5552454D 
 34742      454E5453 
 34743              	.LASF379:
 34744 1260 675F6164 		.ascii	"g_adc_measOld\000"
 34744      635F6D65 
 34744      61734F6C 
 34744      6400
 34745              	.LASF346:
 34746 126e 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 34746      6765745F 
 34746      656E636F 
 34746      6465725F 
 34746      72617700 
 34747              	.LASF13:
 34748 1282 75696E74 		.ascii	"uint8\000"
 34748      3800
 34749              	.LASF217:
 34750 1288 636F6D6D 		.ascii	"commProcess\000"
 34750      50726F63 
 34750      65737300 
 34751              	.LASF184:
 34752 1294 73745F4A 		.ascii	"st_JOY_spec\000"
 34752      4F595F73 
 34752      70656300 
 34753              	.LASF2:
 34754 12a0 73686F72 		.ascii	"short int\000"
 34754      7420696E 
 34754      7400
 34755              	.LASF316:
 34756 12aa 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 34756      6E69745F 
 34756      41697243 
 34756      68616D62 
 34756      65727346 
 34757              	.LASF275:
 34758 12c0 6964735F 		.ascii	"ids_str_len\000"
 34758      7374725F 
 34758      6C656E00 
 34759              	.LASF133:
 34760 12cc 6B5F645F 		.ascii	"k_d_dl\000"
 34760      646C00
 34761              	.LASF235:
 34762 12d3 6964785F 		.ascii	"idx_menu\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 750


 34762      6D656E75 
 34762      00
 34763              	.LASF99:
 34764 12dc 6A6F7973 		.ascii	"joystick\000"
 34764      7469636B 
 34764      00
 34765              	.LASF202:
 34766 12e5 6D6F746F 		.ascii	"motor\000"
 34766      7200
 34767              	.LASF403:
 34768 12eb 4E5F494D 		.ascii	"N_IMU_Connected\000"
 34768      555F436F 
 34768      6E6E6563 
 34768      74656400 
 34769              	.LASF39:
 34770 12fb 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 34770      4745545F 
 34770      494E5055 
 34770      545300
 34771              	.LASF119:
 34772 130a 68775F6D 		.ascii	"hw_maint_date\000"
 34772      61696E74 
 34772      5F646174 
 34772      6500
 34773              	.LASF268:
 34774 1318 6964735F 		.ascii	"ids_str\000"
 34774      73747200 
 34775              	.LASF54:
 34776 1320 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 34776      4745545F 
 34776      4144435F 
 34776      434F4E46 
 34776      00
 34777              	.LASF27:
 34778 1331 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 34778      5345545F 
 34778      5A45524F 
 34778      5300
 34779              	.LASF276:
 34780 133f 6D61675F 		.ascii	"mag_param_str_len\000"
 34780      70617261 
 34780      6D5F7374 
 34780      725F6C65 
 34780      6E00
 34781              	.LASF262:
 34782 1351 6E756D5F 		.ascii	"num_imus_id_params\000"
 34782      696D7573 
 34782      5F69645F 
 34782      70617261 
 34782      6D7300
 34783              	.LASF239:
 34784 1364 6175785F 		.ascii	"aux_int16\000"
 34784      696E7431 
 34784      3600
 34785              	.LASF410:
 34786 136e 656D675F 		.ascii	"emg_history\000"
 34786      68697374 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 751


 34786      6F727900 
 34787              	.LASF412:
 34788 137a 45455052 		.ascii	"EEPROM_ADDR\000"
 34788      4F4D5F41 
 34788      44445200 
 34789              	.LASF120:
 34790 1386 73746174 		.ascii	"stats_period_begin_date\000"
 34790      735F7065 
 34790      72696F64 
 34790      5F626567 
 34790      696E5F64 
 34791              	.LASF405:
 34792 139e 696D7573 		.ascii	"imus_data_size\000"
 34792      5F646174 
 34792      615F7369 
 34792      7A6500
 34793              	.LASF372:
 34794 13ad 49544D5F 		.ascii	"ITM_RxBuffer\000"
 34794      52784275 
 34794      66666572 
 34794      00
 34795              	.LASF44:
 34796 13ba 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 34796      4745545F 
 34796      56454C4F 
 34796      43495449 
 34796      455300
 34797              	.LASF389:
 34798 13cd 706F775F 		.ascii	"pow_tension\000"
 34798      74656E73 
 34798      696F6E00 
 34799              	.LASF34:
 34800 13d9 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 34800      4745545F 
 34800      50415241 
 34800      4D5F4C49 
 34800      535400
 34801              	.LASF79:
 34802 13ec 64617461 		.ascii	"data_types\000"
 34802      5F747970 
 34802      657300
 34803              	.LASF17:
 34804 13f7 696E7431 		.ascii	"int16\000"
 34804      3600
 34805              	.LASF172:
 34806 13fd 72656164 		.ascii	"read_exp_port_flag\000"
 34806      5F657870 
 34806      5F706F72 
 34806      745F666C 
 34806      616700
 34807              	.LASF165:
 34808 1410 73776974 		.ascii	"switch_emg\000"
 34808      63685F65 
 34808      6D6700
 34809              	.LASF138:
 34810 141b 61637469 		.ascii	"activate_pwm_rescaling\000"
 34810      76617465 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 752


 34810      5F70776D 
 34810      5F726573 
 34810      63616C69 
 34811              	.LASF131:
 34812 1432 6B5F705F 		.ascii	"k_p_dl\000"
 34812      646C00
 34813              	.LASF95:
 34814 1439 65737469 		.ascii	"estim_curr\000"
 34814      6D5F6375 
 34814      727200
 34815              	.LASF388:
 34816 1444 6465765F 		.ascii	"dev_pwm_limit\000"
 34816      70776D5F 
 34816      6C696D69 
 34816      7400
 34817              	.LASF173:
 34818 1452 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 34818      5F414443 
 34818      5F73656E 
 34818      736F7273 
 34818      5F706F72 
 34819              	.LASF398:
 34820 146d 456E636F 		.ascii	"Encoder_Value\000"
 34820      6465725F 
 34820      56616C75 
 34820      6500
 34821              	.LASF345:
 34822 147b 636D645F 		.ascii	"cmd_get_encoder_map\000"
 34822      6765745F 
 34822      656E636F 
 34822      6465725F 
 34822      6D617000 
 34823              	.LASF125:
 34824 148f 75736572 		.ascii	"user_id\000"
 34824      5F696400 
 34825              	.LASF12:
 34826 1497 75696E74 		.ascii	"uint32_t\000"
 34826      33325F74 
 34826      00
 34827              	.LASF238:
 34828 14a0 6175785F 		.ascii	"aux_float\000"
 34828      666C6F61 
 34828      7400
 34829              	.LASF404:
 34830 14aa 494D555F 		.ascii	"IMU_connected\000"
 34830      636F6E6E 
 34830      65637465 
 34830      6400
 34831              	.LASF229:
 34832 14b8 4E554D5F 		.ascii	"NUM_MENU\000"
 34832      4D454E55 
 34832      00
 34833              	.LASF241:
 34834 14c1 6175785F 		.ascii	"aux_int32\000"
 34834      696E7433 
 34834      3200
 34835              	.LASF124:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 753


 34836 14cb 62617564 		.ascii	"baud_rate\000"
 34836      5F726174 
 34836      6500
 34837              	.LASF333:
 34838 14d5 745F656E 		.ascii	"t_end\000"
 34838      6400
 34839              	.LASF197:
 34840 14db 66617374 		.ascii	"fast_act_threshold\000"
 34840      5F616374 
 34840      5F746872 
 34840      6573686F 
 34840      6C6400
 34841              	.LASF224:
 34842 14ee 696E666F 		.ascii	"info_type\000"
 34842      5F747970 
 34842      6500
 34843              	.LASF50:
 34844 14f8 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 34844      4745545F 
 34844      494D555F 
 34844      52454144 
 34844      494E4753 
 34845              	.LASF402:
 34846 150d 73645230 		.ascii	"sdR01File\000"
 34846      3146696C 
 34846      6500
 34847              	.LASF305:
 34848 1517 4C435243 		.ascii	"LCRChecksum\000"
 34848      6865636B 
 34848      73756D00 
 34849              	.LASF342:
 34850 1523 6B5F696D 		.ascii	"k_imu\000"
 34850      7500
 34851              	.LASF3:
 34852 1529 73686F72 		.ascii	"short unsigned int\000"
 34852      7420756E 
 34852      7369676E 
 34852      65642069 
 34852      6E7400
 34853              	.LASF152:
 34854 153c 73745F65 		.ascii	"st_encoder\000"
 34854      6E636F64 
 34854      657200
 34855              	.LASF378:
 34856 1547 675F6164 		.ascii	"g_adc_meas\000"
 34856      635F6D65 
 34856      617300
 34857              	.LASF192:
 34858 1552 6D61785F 		.ascii	"max_residual_current\000"
 34858      72657369 
 34858      6475616C 
 34858      5F637572 
 34858      72656E74 
 34859              	.LASF282:
 34860 1567 454E435F 		.ascii	"ENC_L\000"
 34860      4C00
 34861              	.LASF199:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 754


 34862 156d 73745F65 		.ascii	"st_eeprom\000"
 34862      6570726F 
 34862      6D00
 34863              	.LASF226:
 34864 1577 54595045 		.ascii	"TYPES\000"
 34864      5300
 34865              	.LASF373:
 34866 157d 675F7265 		.ascii	"g_ref\000"
 34866      6600
 34867              	.LASF18:
 34868 1583 696E7433 		.ascii	"int32\000"
 34868      3200
 34869              	.LASF395:
 34870 1589 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 34870      4F465F41 
 34870      4E414C4F 
 34870      475F494E 
 34870      50555453 
 34871              	.LASF221:
 34872 159e 696E666F 		.ascii	"infoGet\000"
 34872      47657400 
 34873              	.LASF127:
 34874 15a6 73745F6D 		.ascii	"st_motor\000"
 34874      6F746F72 
 34874      00
 34875              	.LASF409:
 34876 15af 6D617374 		.ascii	"master_mode\000"
 34876      65725F6D 
 34876      6F646500 
 34877              	.LASF90:
 34878 15bb 46535F46 		.ascii	"FS_FILE\000"
 34878      494C4500 
 34879              	.LASF140:
 34880 15c3 706F735F 		.ascii	"pos_lim_flag\000"
 34880      6C696D5F 
 34880      666C6167 
 34880      00
 34881              	.LASF377:
 34882 15d0 675F6D65 		.ascii	"g_measOld\000"
 34882      61734F6C 
 34882      6400
 34883              	.LASF69:
 34884 15da 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 34884      524F4C5F 
 34884      414E474C 
 34884      4500
 34885              	.LASF325:
 34886 15e8 636D645F 		.ascii	"cmd_activate\000"
 34886      61637469 
 34886      76617465 
 34886      00
 34887              	.LASF5:
 34888 15f5 5F5F696E 		.ascii	"__int32_t\000"
 34888      7433325F 
 34888      7400
 34889              	.LASF251:
 34890 15ff 7370695F 		.ascii	"spi_delay_menu\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 755


 34890      64656C61 
 34890      795F6D65 
 34890      6E7500
 34891              	.LASF111:
 34892 160e 77697265 		.ascii	"wire_disp\000"
 34892      5F646973 
 34892      7000
 34893              	.LASF162:
 34894 1618 656D675F 		.ascii	"emg_max_value\000"
 34894      6D61785F 
 34894      76616C75 
 34894      6500
 34895              	.LASF256:
 34896 1626 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 34896      4F4D5F50 
 34896      4152414D 
 34896      5F534554 
 34896      00
 34897              	.LASF414:
 34898 1637 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 34898      72635C63 
 34898      6F6D6D61 
 34898      6E645F70 
 34898      726F6365 
 34899              	.LASF146:
 34900 1653 63757272 		.ascii	"current_limit\000"
 34900      656E745F 
 34900      6C696D69 
 34900      7400
 34901              	.LASF59:
 34902 1661 53485F69 		.ascii	"SH_input_mode\000"
 34902      6E707574 
 34902      5F6D6F64 
 34902      6500
 34903              	.LASF81:
 34904 166f 54595045 		.ascii	"TYPE_INT8\000"
 34904      5F494E54 
 34904      3800
 34905              	.LASF196:
 34906 1679 61637469 		.ascii	"activation_mode\000"
 34906      76617469 
 34906      6F6E5F6D 
 34906      6F646500 
 34907              	.LASF295:
 34908 1689 494D555F 		.ascii	"IMU_reading_info\000"
 34908      72656164 
 34908      696E675F 
 34908      696E666F 
 34908      00
 34909              	.LASF14:
 34910 169a 75696E74 		.ascii	"uint16\000"
 34910      313600
 34911              	.LASF181:
 34912 16a1 72657374 		.ascii	"rest_delay\000"
 34912      5F64656C 
 34912      617900
 34913              	.LASF237:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccga5MX6.s 			page 756


 34914 16ac 6175785F 		.ascii	"aux_str\000"
 34914      73747200 
 34915              	.LASF26:
 34916 16b4 434D445F 		.ascii	"CMD_PING\000"
 34916      50494E47 
 34916      00
 34917              	.LASF136:
 34918 16bd 6B5F645F 		.ascii	"k_d_c_dl\000"
 34918      635F646C 
 34918      00
 34919              	.LASF214:
 34920 16c6 64697265 		.ascii	"direction\000"
 34920      6374696F 
 34920      6E00
 34921              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
