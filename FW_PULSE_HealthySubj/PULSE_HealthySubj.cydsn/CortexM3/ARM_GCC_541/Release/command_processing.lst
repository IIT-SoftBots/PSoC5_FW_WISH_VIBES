ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 0E4B     		ldr	r3, .L50
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e 0C4B     		ldr	r3, .L50
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c 0848     		ldr	r0, .L50
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 064B     		ldr	r3, .L50
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e 044A     		ldr	r2, .L50
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 06D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 024B     		ldr	r3, .L50
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e B8E2     		b	.L1
  75              	.L51:
  76              		.align	2
  77              	.L50:
  78 0040 00000000 		.word	g_rx
  79              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  80              		.loc 1 74 0
  81 0044 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  82 0048 FA2B     		cmp	r3, #250
  83 004a 00F2B182 		bhi	.L49
  84 004e 01A2     		adr	r2, .L6
  85 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  86              		.p2align 2
  87              	.L6:
  88 0054 CD040000 		.word	.L5+1
  89 0058 AD040000 		.word	.L7+1
  90 005c B1050000 		.word	.L49+1
  91 0060 D3040000 		.word	.L8+1
  92 0064 D9040000 		.word	.L9+1
  93 0068 F5040000 		.word	.L10+1
  94 006c 95040000 		.word	.L11+1
  95 0070 B1050000 		.word	.L49+1
  96 0074 B1050000 		.word	.L49+1
  97 0078 29050000 		.word	.L12+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 4


  98 007c 0F050000 		.word	.L13+1
  99 0080 B1050000 		.word	.L49+1
 100 0084 B3040000 		.word	.L14+1
 101 0088 B1050000 		.word	.L49+1
 102 008c B1050000 		.word	.L49+1
 103 0090 B1050000 		.word	.L49+1
 104 0094 B1050000 		.word	.L49+1
 105 0098 B1050000 		.word	.L49+1
 106 009c B1050000 		.word	.L49+1
 107 00a0 B1050000 		.word	.L49+1
 108 00a4 B1050000 		.word	.L49+1
 109 00a8 B1050000 		.word	.L49+1
 110 00ac B1050000 		.word	.L49+1
 111 00b0 B1050000 		.word	.L49+1
 112 00b4 B1050000 		.word	.L49+1
 113 00b8 B1050000 		.word	.L49+1
 114 00bc B1050000 		.word	.L49+1
 115 00c0 B1050000 		.word	.L49+1
 116 00c4 B1050000 		.word	.L49+1
 117 00c8 B1050000 		.word	.L49+1
 118 00cc B1050000 		.word	.L49+1
 119 00d0 B1050000 		.word	.L49+1
 120 00d4 B1050000 		.word	.L49+1
 121 00d8 B1050000 		.word	.L49+1
 122 00dc B1050000 		.word	.L49+1
 123 00e0 B1050000 		.word	.L49+1
 124 00e4 B1050000 		.word	.L49+1
 125 00e8 B1050000 		.word	.L49+1
 126 00ec B1050000 		.word	.L49+1
 127 00f0 B1050000 		.word	.L49+1
 128 00f4 B1050000 		.word	.L49+1
 129 00f8 B1050000 		.word	.L49+1
 130 00fc B1050000 		.word	.L49+1
 131 0100 B1050000 		.word	.L49+1
 132 0104 B1050000 		.word	.L49+1
 133 0108 B1050000 		.word	.L49+1
 134 010c B1050000 		.word	.L49+1
 135 0110 B1050000 		.word	.L49+1
 136 0114 B1050000 		.word	.L49+1
 137 0118 B1050000 		.word	.L49+1
 138 011c B1050000 		.word	.L49+1
 139 0120 B1050000 		.word	.L49+1
 140 0124 B1050000 		.word	.L49+1
 141 0128 B1050000 		.word	.L49+1
 142 012c B1050000 		.word	.L49+1
 143 0130 B1050000 		.word	.L49+1
 144 0134 B1050000 		.word	.L49+1
 145 0138 B1050000 		.word	.L49+1
 146 013c B1050000 		.word	.L49+1
 147 0140 B1050000 		.word	.L49+1
 148 0144 B1050000 		.word	.L49+1
 149 0148 B1050000 		.word	.L49+1
 150 014c B1050000 		.word	.L49+1
 151 0150 B1050000 		.word	.L49+1
 152 0154 B1050000 		.word	.L49+1
 153 0158 B1050000 		.word	.L49+1
 154 015c B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 5


 155 0160 B1050000 		.word	.L49+1
 156 0164 B1050000 		.word	.L49+1
 157 0168 B1050000 		.word	.L49+1
 158 016c B1050000 		.word	.L49+1
 159 0170 B1050000 		.word	.L49+1
 160 0174 B1050000 		.word	.L49+1
 161 0178 B1050000 		.word	.L49+1
 162 017c B1050000 		.word	.L49+1
 163 0180 B1050000 		.word	.L49+1
 164 0184 B1050000 		.word	.L49+1
 165 0188 B1050000 		.word	.L49+1
 166 018c B1050000 		.word	.L49+1
 167 0190 B1050000 		.word	.L49+1
 168 0194 B1050000 		.word	.L49+1
 169 0198 B1050000 		.word	.L49+1
 170 019c B1050000 		.word	.L49+1
 171 01a0 B1050000 		.word	.L49+1
 172 01a4 B1050000 		.word	.L49+1
 173 01a8 B1050000 		.word	.L49+1
 174 01ac B1050000 		.word	.L49+1
 175 01b0 B1050000 		.word	.L49+1
 176 01b4 B1050000 		.word	.L49+1
 177 01b8 B1050000 		.word	.L49+1
 178 01bc B1050000 		.word	.L49+1
 179 01c0 B1050000 		.word	.L49+1
 180 01c4 B1050000 		.word	.L49+1
 181 01c8 B1050000 		.word	.L49+1
 182 01cc B1050000 		.word	.L49+1
 183 01d0 B1050000 		.word	.L49+1
 184 01d4 B1050000 		.word	.L49+1
 185 01d8 B1050000 		.word	.L49+1
 186 01dc B1050000 		.word	.L49+1
 187 01e0 B1050000 		.word	.L49+1
 188 01e4 B1050000 		.word	.L49+1
 189 01e8 B1050000 		.word	.L49+1
 190 01ec B1050000 		.word	.L49+1
 191 01f0 B1050000 		.word	.L49+1
 192 01f4 B1050000 		.word	.L49+1
 193 01f8 B1050000 		.word	.L49+1
 194 01fc B1050000 		.word	.L49+1
 195 0200 B1050000 		.word	.L49+1
 196 0204 B1050000 		.word	.L49+1
 197 0208 B1050000 		.word	.L49+1
 198 020c B1050000 		.word	.L49+1
 199 0210 B1050000 		.word	.L49+1
 200 0214 B1050000 		.word	.L49+1
 201 0218 B1050000 		.word	.L49+1
 202 021c B1050000 		.word	.L49+1
 203 0220 B1050000 		.word	.L49+1
 204 0224 B1050000 		.word	.L49+1
 205 0228 B1050000 		.word	.L49+1
 206 022c B1050000 		.word	.L49+1
 207 0230 B1050000 		.word	.L49+1
 208 0234 B1050000 		.word	.L49+1
 209 0238 B1050000 		.word	.L49+1
 210 023c B1050000 		.word	.L49+1
 211 0240 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 6


 212 0244 B1050000 		.word	.L49+1
 213 0248 B1050000 		.word	.L49+1
 214 024c B1050000 		.word	.L49+1
 215 0250 B1050000 		.word	.L49+1
 216 0254 41040000 		.word	.L16+1
 217 0258 83040000 		.word	.L17+1
 218 025c 47040000 		.word	.L18+1
 219 0260 8F040000 		.word	.L19+1
 220 0264 4D040000 		.word	.L20+1
 221 0268 59040000 		.word	.L21+1
 222 026c 53040000 		.word	.L22+1
 223 0270 B1050000 		.word	.L49+1
 224 0274 7D040000 		.word	.L23+1
 225 0278 6B040000 		.word	.L24+1
 226 027c B1050000 		.word	.L49+1
 227 0280 71040000 		.word	.L25+1
 228 0284 5F040000 		.word	.L26+1
 229 0288 B1050000 		.word	.L49+1
 230 028c B1050000 		.word	.L49+1
 231 0290 B1050000 		.word	.L49+1
 232 0294 89040000 		.word	.L27+1
 233 0298 B1050000 		.word	.L49+1
 234 029c 77040000 		.word	.L28+1
 235 02a0 B1050000 		.word	.L49+1
 236 02a4 B1050000 		.word	.L49+1
 237 02a8 B1050000 		.word	.L49+1
 238 02ac B1050000 		.word	.L49+1
 239 02b0 B1050000 		.word	.L49+1
 240 02b4 B1050000 		.word	.L49+1
 241 02b8 B1050000 		.word	.L49+1
 242 02bc B1050000 		.word	.L49+1
 243 02c0 B1050000 		.word	.L49+1
 244 02c4 B1050000 		.word	.L49+1
 245 02c8 B1050000 		.word	.L49+1
 246 02cc B1050000 		.word	.L49+1
 247 02d0 B1050000 		.word	.L49+1
 248 02d4 B1050000 		.word	.L49+1
 249 02d8 4B050000 		.word	.L29+1
 250 02dc 51050000 		.word	.L30+1
 251 02e0 69050000 		.word	.L31+1
 252 02e4 6F050000 		.word	.L32+1
 253 02e8 75050000 		.word	.L33+1
 254 02ec 7B050000 		.word	.L34+1
 255 02f0 81050000 		.word	.L35+1
 256 02f4 99050000 		.word	.L36+1
 257 02f8 B1050000 		.word	.L49+1
 258 02fc B1050000 		.word	.L49+1
 259 0300 B1050000 		.word	.L49+1
 260 0304 B1050000 		.word	.L49+1
 261 0308 B1050000 		.word	.L49+1
 262 030c B1050000 		.word	.L49+1
 263 0310 B1050000 		.word	.L49+1
 264 0314 B1050000 		.word	.L49+1
 265 0318 B1050000 		.word	.L49+1
 266 031c B1050000 		.word	.L49+1
 267 0320 B1050000 		.word	.L49+1
 268 0324 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 7


 269 0328 B1050000 		.word	.L49+1
 270 032c B1050000 		.word	.L49+1
 271 0330 B1050000 		.word	.L49+1
 272 0334 B1050000 		.word	.L49+1
 273 0338 B1050000 		.word	.L49+1
 274 033c B1050000 		.word	.L49+1
 275 0340 B1050000 		.word	.L49+1
 276 0344 B1050000 		.word	.L49+1
 277 0348 B1050000 		.word	.L49+1
 278 034c B1050000 		.word	.L49+1
 279 0350 B1050000 		.word	.L49+1
 280 0354 B1050000 		.word	.L49+1
 281 0358 B1050000 		.word	.L49+1
 282 035c B1050000 		.word	.L49+1
 283 0360 B1050000 		.word	.L49+1
 284 0364 B1050000 		.word	.L49+1
 285 0368 B1050000 		.word	.L49+1
 286 036c B1050000 		.word	.L49+1
 287 0370 B1050000 		.word	.L49+1
 288 0374 B1050000 		.word	.L49+1
 289 0378 B1050000 		.word	.L49+1
 290 037c B1050000 		.word	.L49+1
 291 0380 B1050000 		.word	.L49+1
 292 0384 B1050000 		.word	.L49+1
 293 0388 B1050000 		.word	.L49+1
 294 038c B1050000 		.word	.L49+1
 295 0390 B1050000 		.word	.L49+1
 296 0394 B1050000 		.word	.L49+1
 297 0398 B1050000 		.word	.L49+1
 298 039c B1050000 		.word	.L49+1
 299 03a0 B1050000 		.word	.L49+1
 300 03a4 B1050000 		.word	.L49+1
 301 03a8 B1050000 		.word	.L49+1
 302 03ac B1050000 		.word	.L49+1
 303 03b0 B1050000 		.word	.L49+1
 304 03b4 B1050000 		.word	.L49+1
 305 03b8 B1050000 		.word	.L49+1
 306 03bc B1050000 		.word	.L49+1
 307 03c0 B1050000 		.word	.L49+1
 308 03c4 B1050000 		.word	.L49+1
 309 03c8 B1050000 		.word	.L49+1
 310 03cc B1050000 		.word	.L49+1
 311 03d0 B1050000 		.word	.L49+1
 312 03d4 B1050000 		.word	.L49+1
 313 03d8 B1050000 		.word	.L49+1
 314 03dc B1050000 		.word	.L49+1
 315 03e0 B1050000 		.word	.L49+1
 316 03e4 B1050000 		.word	.L49+1
 317 03e8 B1050000 		.word	.L49+1
 318 03ec B1050000 		.word	.L49+1
 319 03f0 B1050000 		.word	.L49+1
 320 03f4 B1050000 		.word	.L49+1
 321 03f8 B1050000 		.word	.L49+1
 322 03fc B1050000 		.word	.L49+1
 323 0400 B1050000 		.word	.L49+1
 324 0404 B1050000 		.word	.L49+1
 325 0408 B1050000 		.word	.L49+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 8


 326 040c B1050000 		.word	.L49+1
 327 0410 B1050000 		.word	.L49+1
 328 0414 B1050000 		.word	.L49+1
 329 0418 B1050000 		.word	.L49+1
 330 041c B1050000 		.word	.L49+1
 331 0420 B1050000 		.word	.L49+1
 332 0424 B1050000 		.word	.L49+1
 333 0428 B1050000 		.word	.L49+1
 334 042c B1050000 		.word	.L49+1
 335 0430 B1050000 		.word	.L49+1
 336 0434 B1050000 		.word	.L49+1
 337 0438 B1050000 		.word	.L49+1
 338 043c 65040000 		.word	.L37+1
 339              		.p2align 1
 340              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 341              		.loc 1 78 0
 342 0440 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 343              		.loc 1 79 0
 344 0444 B5E0     		b	.L1
 345              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 346              		.loc 1 84 0
 347 0446 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 348              		.loc 1 85 0
 349 044a B2E0     		b	.L1
 350              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 351              		.loc 1 90 0
 352 044c FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 353              		.loc 1 91 0
 354 0450 AFE0     		b	.L1
 355              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 356              		.loc 1 96 0
 357 0452 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 358              		.loc 1 97 0
 359 0456 ACE0     		b	.L1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 9


 360              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 361              		.loc 1 102 0
 362 0458 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 363              		.loc 1 103 0
 364 045c A9E0     		b	.L1
 365              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 366              		.loc 1 108 0
 367 045e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 368              		.loc 1 109 0
 369 0462 A6E0     		b	.L1
 370              	.L37:
 110:..\src/command_processing.c **** 
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_VIBROTACTILE_INPUTS
 112:..\src/command_processing.c ****          
 113:..\src/command_processing.c ****         case CMD_GET_VIBROTACTILE_INPUTS:
 114:..\src/command_processing.c ****             cmd_get_vibrotactile_inputs();
 371              		.loc 1 114 0
 372 0464 FFF7FEFF 		bl	cmd_get_vibrotactile_inputs
 115:..\src/command_processing.c ****             break;            
 373              		.loc 1 115 0
 374 0468 A3E0     		b	.L1
 375              	.L24:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c ****         
 119:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 120:..\src/command_processing.c ****             cmd_get_velocities();
 376              		.loc 1 120 0
 377 046a FFF7FEFF 		bl	cmd_get_velocities
 121:..\src/command_processing.c ****             break;
 378              		.loc 1 121 0
 379 046e A0E0     		b	.L1
 380              	.L25:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 126:..\src/command_processing.c ****             cmd_get_accelerations();
 381              		.loc 1 126 0
 382 0470 FFF7FEFF 		bl	cmd_get_accelerations
 127:..\src/command_processing.c ****             break;
 383              		.loc 1 127 0
 384 0474 9DE0     		b	.L1
 385              	.L28:
 128:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 10


 129:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 132:..\src/command_processing.c ****             cmd_get_joystick();
 386              		.loc 1 132 0
 387 0476 FFF7FEFF 		bl	cmd_get_joystick
 133:..\src/command_processing.c ****         break;
 388              		.loc 1 133 0
 389 047a 9AE0     		b	.L1
 390              	.L23:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 136:..\src/command_processing.c **** 
 137:..\src/command_processing.c ****         case CMD_GET_EMG:
 138:..\src/command_processing.c ****             cmd_get_emg();
 391              		.loc 1 138 0
 392 047c FFF7FEFF 		bl	cmd_get_emg
 139:..\src/command_processing.c ****             break;
 393              		.loc 1 139 0
 394 0480 97E0     		b	.L1
 395              	.L17:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 144:..\src/command_processing.c ****             cmd_get_activate();
 396              		.loc 1 144 0
 397 0482 FFF7FEFF 		bl	cmd_get_activate
 145:..\src/command_processing.c ****             break;
 398              		.loc 1 145 0
 399 0486 94E0     		b	.L1
 400              	.L27:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 148:..\src/command_processing.c ****             
 149:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 150:..\src/command_processing.c ****             cmd_set_baudrate();
 401              		.loc 1 150 0
 402 0488 FFF7FEFF 		bl	cmd_set_baudrate
 151:..\src/command_processing.c ****             break;  
 403              		.loc 1 151 0
 404 048c 91E0     		b	.L1
 405              	.L19:
 152:..\src/command_processing.c ****             
 153:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 156:..\src/command_processing.c ****             cmd_get_inputs();
 406              		.loc 1 156 0
 407 048e FFF7FEFF 		bl	cmd_get_inputs
 157:..\src/command_processing.c ****             break;
 408              		.loc 1 157 0
 409 0492 8EE0     		b	.L1
 410              	.L11:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 160:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 11


 161:..\src/command_processing.c ****         case CMD_GET_INFO:
 162:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 411              		.loc 1 162 0
 412 0494 484B     		ldr	r3, .L52
 413 0496 1B88     		ldrh	r3, [r3]
 414 0498 BB61     		str	r3, [r7, #24]
 415              	.LBB12:
 416              	.LBB13:
 417              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 12


  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 13


 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 14


 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 15


 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 16


 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 17


 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 18


 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 19


 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 20


 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 21


 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 22


 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 23


 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 24


 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 25


 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 418              		.loc 2 792 0
 419 049a BB69     		ldr	r3, [r7, #24]
 420              		.syntax unified
 421              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 422 049c 5BBA     		rev16 r3, r3
 423              	@ 0 "" 2
 424              		.thumb
 425              		.syntax unified
 426 049e 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 427              		.loc 2 793 0
 428 04a0 7B69     		ldr	r3, [r7, #20]
 429              	.LBE13:
 430              	.LBE12:
 431              		.loc 1 162 0
 432 04a2 9BB2     		uxth	r3, r3
 433 04a4 1846     		mov	r0, r3
 434 04a6 FFF7FEFF 		bl	infoGet
 163:..\src/command_processing.c ****             break;
 435              		.loc 1 163 0
 436 04aa 82E0     		b	.L1
 437              	.L7:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 168:..\src/command_processing.c ****             setZeros();
 438              		.loc 1 168 0
 439 04ac FFF7FEFF 		bl	setZeros
 169:..\src/command_processing.c ****             break;
 440              		.loc 1 169 0
 441 04b0 7FE0     		b	.L1
 442              	.L14:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 172:..\src/command_processing.c **** 
 173:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 174:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])),TRUE );
 443              		.loc 1 174 0
 444 04b2 414B     		ldr	r3, .L52
 445 04b4 1B88     		ldrh	r3, [r3]
 446 04b6 BB62     		str	r3, [r7, #40]
 447              	.LBB14:
 448              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 449              		.loc 2 792 0
 450 04b8 BB6A     		ldr	r3, [r7, #40]
 451              		.syntax unified
 452              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 453 04ba 5BBA     		rev16 r3, r3
 454              	@ 0 "" 2
 455              		.thumb
 456              		.syntax unified
 457 04bc 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 26


 458              		.loc 2 793 0
 459 04be 3B69     		ldr	r3, [r7, #16]
 460              	.LBE15:
 461              	.LBE14:
 462              		.loc 1 174 0
 463 04c0 9BB2     		uxth	r3, r3
 464 04c2 0121     		movs	r1, #1
 465 04c4 1846     		mov	r0, r3
 466 04c6 FFF7FEFF 		bl	manage_param_list
 175:..\src/command_processing.c ****             break;
 467              		.loc 1 175 0
 468 04ca 72E0     		b	.L1
 469              	.L5:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================================     CMD_PING
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_PING:
 180:..\src/command_processing.c ****             cmd_ping();
 470              		.loc 1 180 0
 471 04cc FFF7FEFF 		bl	cmd_ping
 181:..\src/command_processing.c ****             break;
 472              		.loc 1 181 0
 473 04d0 6FE0     		b	.L1
 474              	.L8:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 184:..\src/command_processing.c ****             
 185:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 186:..\src/command_processing.c ****             cmd_store_params();
 475              		.loc 1 186 0
 476 04d2 FFF7FEFF 		bl	cmd_store_params
 187:..\src/command_processing.c ****             break;
 477              		.loc 1 187 0
 478 04d6 6CE0     		b	.L1
 479              	.L9:
 188:..\src/command_processing.c **** 
 189:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 190:..\src/command_processing.c **** 
 191:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 192:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 480              		.loc 1 192 0
 481 04d8 3220     		movs	r0, #50
 482 04da FFF7FEFF 		bl	memStore
 483 04de 0346     		mov	r3, r0
 484 04e0 002B     		cmp	r3, #0
 485 04e2 03D0     		beq	.L40
 193:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 486              		.loc 1 193 0
 487 04e4 0120     		movs	r0, #1
 488 04e6 FFF7FEFF 		bl	sendAcknowledgment
 194:..\src/command_processing.c ****             else
 195:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 196:..\src/command_processing.c ****             break;
 489              		.loc 1 196 0
 490 04ea 62E0     		b	.L1
 491              	.L40:
 195:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 27


 492              		.loc 1 195 0
 493 04ec 0020     		movs	r0, #0
 494 04ee FFF7FEFF 		bl	sendAcknowledgment
 495              		.loc 1 196 0
 496 04f2 5EE0     		b	.L1
 497              	.L10:
 197:..\src/command_processing.c **** 
 198:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 199:..\src/command_processing.c **** 
 200:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 201:..\src/command_processing.c ****             if(memRestore())
 498              		.loc 1 201 0
 499 04f4 FFF7FEFF 		bl	memRestore
 500 04f8 0346     		mov	r3, r0
 501 04fa 002B     		cmp	r3, #0
 502 04fc 03D0     		beq	.L42
 202:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 503              		.loc 1 202 0
 504 04fe 0120     		movs	r0, #1
 505 0500 FFF7FEFF 		bl	sendAcknowledgment
 203:..\src/command_processing.c ****             else
 204:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 205:..\src/command_processing.c ****             break;
 506              		.loc 1 205 0
 507 0504 55E0     		b	.L1
 508              	.L42:
 204:..\src/command_processing.c ****             break;
 509              		.loc 1 204 0
 510 0506 0020     		movs	r0, #0
 511 0508 FFF7FEFF 		bl	sendAcknowledgment
 512              		.loc 1 205 0
 513 050c 51E0     		b	.L1
 514              	.L13:
 206:..\src/command_processing.c **** 
 207:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 208:..\src/command_processing.c **** 
 209:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 210:..\src/command_processing.c ****             if(memInit())
 515              		.loc 1 210 0
 516 050e FFF7FEFF 		bl	memInit
 517 0512 0346     		mov	r3, r0
 518 0514 002B     		cmp	r3, #0
 519 0516 03D0     		beq	.L44
 211:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 520              		.loc 1 211 0
 521 0518 0120     		movs	r0, #1
 522 051a FFF7FEFF 		bl	sendAcknowledgment
 212:..\src/command_processing.c ****             else
 213:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 214:..\src/command_processing.c ****             break;
 523              		.loc 1 214 0
 524 051e 48E0     		b	.L1
 525              	.L44:
 213:..\src/command_processing.c ****             break;
 526              		.loc 1 213 0
 527 0520 0020     		movs	r0, #0
 528 0522 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 28


 529              		.loc 1 214 0
 530 0526 44E0     		b	.L1
 531              	.L12:
 215:..\src/command_processing.c **** 
 216:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 217:..\src/command_processing.c **** 
 218:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 219:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 220:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 532              		.loc 1 220 0
 533 0528 0120     		movs	r0, #1
 534 052a FFF7FEFF 		bl	sendAcknowledgment
 221:..\src/command_processing.c ****             CyDelay(1000);
 535              		.loc 1 221 0
 536 052e 4FF47A70 		mov	r0, #1000
 537 0532 FFF7FEFF 		bl	CyDelay
 222:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 538              		.loc 1 222 0
 539 0536 0020     		movs	r0, #0
 540 0538 FFF7FEFF 		bl	FTDI_ENABLE_Write
 223:..\src/command_processing.c ****             CyDelay(1000);
 541              		.loc 1 223 0
 542 053c 4FF47A70 		mov	r0, #1000
 543 0540 FFF7FEFF 		bl	CyDelay
 224:..\src/command_processing.c ****             Bootloadable_Load();
 544              		.loc 1 224 0
 545 0544 FFF7FEFF 		bl	Bootloadable_Load
 225:..\src/command_processing.c ****             break;
 546              		.loc 1 225 0
 547 0548 33E0     		b	.L1
 548              	.L29:
 226:..\src/command_processing.c **** 
 227:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 228:..\src/command_processing.c **** 
 229:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:           
 230:..\src/command_processing.c ****             break;
 231:..\src/command_processing.c ****             
 232:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 233:..\src/command_processing.c **** 
 234:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 235:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 235 0
 550 054a FFF7FEFF 		bl	cmd_get_imu_readings
 236:..\src/command_processing.c ****             break; 
 551              		.loc 1 236 0
 552 054e 30E0     		b	.L1
 553              	.L30:
 237:..\src/command_processing.c ****             
 238:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 239:..\src/command_processing.c **** 
 240:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 241:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 241 0
 555 0550 194B     		ldr	r3, .L52
 556 0552 1B88     		ldrh	r3, [r3]
 557 0554 7B62     		str	r3, [r7, #36]
 558              	.LBB16:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 29


 559              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0556 7B6A     		ldr	r3, [r7, #36]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 0558 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 055a FB60     		str	r3, [r7, #12]
 569              		.loc 2 793 0
 570 055c FB68     		ldr	r3, [r7, #12]
 571              	.LBE17:
 572              	.LBE16:
 573              		.loc 1 241 0
 574 055e 9BB2     		uxth	r3, r3
 575 0560 1846     		mov	r0, r3
 576 0562 FFF7FEFF 		bl	get_IMU_param_list
 242:..\src/command_processing.c ****             break;             
 577              		.loc 1 242 0
 578 0566 24E0     		b	.L1
 579              	.L31:
 243:..\src/command_processing.c ****             
 244:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 245:..\src/command_processing.c **** 
 246:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 247:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 247 0
 581 0568 FFF7FEFF 		bl	cmd_get_encoder_map
 248:..\src/command_processing.c ****             break; 
 582              		.loc 1 248 0
 583 056c 21E0     		b	.L1
 584              	.L32:
 249:..\src/command_processing.c **** 
 250:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 251:..\src/command_processing.c **** 
 252:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 253:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 253 0
 586 056e FFF7FEFF 		bl	cmd_get_encoder_raw
 254:..\src/command_processing.c ****             break; 
 587              		.loc 1 254 0
 588 0572 1EE0     		b	.L1
 589              	.L33:
 255:..\src/command_processing.c **** 
 256:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 257:..\src/command_processing.c **** 
 258:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 259:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 259 0
 591 0574 FFF7FEFF 		bl	cmd_get_ADC_map
 260:..\src/command_processing.c ****             break; 
 592              		.loc 1 260 0
 593 0578 1BE0     		b	.L1
 594              	.L34:
 261:..\src/command_processing.c ****             
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 30


 262:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 263:..\src/command_processing.c **** 
 264:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 265:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 265 0
 596 057a FFF7FEFF 		bl	cmd_get_ADC_raw
 266:..\src/command_processing.c ****             break; 
 597              		.loc 1 266 0
 598 057e 18E0     		b	.L1
 599              	.L35:
 267:..\src/command_processing.c ****             
 268:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 269:..\src/command_processing.c **** 
 270:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 271:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 600              		.loc 1 271 0
 601 0580 0D4B     		ldr	r3, .L52
 602 0582 1B88     		ldrh	r3, [r3]
 603 0584 3B62     		str	r3, [r7, #32]
 604              	.LBB18:
 605              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 606              		.loc 2 792 0
 607 0586 3B6A     		ldr	r3, [r7, #32]
 608              		.syntax unified
 609              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 610 0588 5BBA     		rev16 r3, r3
 611              	@ 0 "" 2
 612              		.thumb
 613              		.syntax unified
 614 058a BB60     		str	r3, [r7, #8]
 615              		.loc 2 793 0
 616 058c BB68     		ldr	r3, [r7, #8]
 617              	.LBE19:
 618              	.LBE18:
 619              		.loc 1 271 0
 620 058e 9BB2     		uxth	r3, r3
 621 0590 1846     		mov	r0, r3
 622 0592 FFF7FEFF 		bl	cmd_get_SD_file
 272:..\src/command_processing.c ****             break;   
 623              		.loc 1 272 0
 624 0596 0CE0     		b	.L1
 625              	.L36:
 273:..\src/command_processing.c ****             
 274:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 275:..\src/command_processing.c **** 
 276:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 277:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 626              		.loc 1 277 0
 627 0598 074B     		ldr	r3, .L52
 628 059a 1B88     		ldrh	r3, [r3]
 629 059c FB61     		str	r3, [r7, #28]
 630              	.LBB20:
 631              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 632              		.loc 2 792 0
 633 059e FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 31


 634              		.syntax unified
 635              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 636 05a0 5BBA     		rev16 r3, r3
 637              	@ 0 "" 2
 638              		.thumb
 639              		.syntax unified
 640 05a2 7B60     		str	r3, [r7, #4]
 641              		.loc 2 793 0
 642 05a4 7B68     		ldr	r3, [r7, #4]
 643              	.LBE21:
 644              	.LBE20:
 645              		.loc 1 277 0
 646 05a6 9BB2     		uxth	r3, r3
 647 05a8 1846     		mov	r0, r3
 648 05aa FFF7FEFF 		bl	cmd_remove_SD_file
 278:..\src/command_processing.c ****             break;               
 649              		.loc 1 278 0
 650 05ae 00E0     		b	.L1
 651              	.L49:
 279:..\src/command_processing.c ****             
 280:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 281:..\src/command_processing.c ****         default:
 282:..\src/command_processing.c ****             break;
 652              		.loc 1 282 0
 653 05b0 00BF     		nop
 654              	.L1:
 283:..\src/command_processing.c **** 
 284:..\src/command_processing.c ****     }
 285:..\src/command_processing.c **** }  
 655              		.loc 1 285 0
 656 05b2 3037     		adds	r7, r7, #48
 657              		.cfi_def_cfa_offset 8
 658 05b4 BD46     		mov	sp, r7
 659              		.cfi_def_cfa_register 13
 660              		@ sp needed
 661 05b6 80BD     		pop	{r7, pc}
 662              	.L53:
 663              		.align	2
 664              	.L52:
 665 05b8 01000000 		.word	g_rx+1
 666              		.cfi_endproc
 667              	.LFE64:
 668              		.size	commProcess, .-commProcess
 669              		.section	.text.infoSend,"ax",%progbits
 670              		.align	2
 671              		.global	infoSend
 672              		.thumb
 673              		.thumb_func
 674              		.type	infoSend, %function
 675              	infoSend:
 676              	.LFB65:
 286:..\src/command_processing.c **** 
 287:..\src/command_processing.c **** //==============================================================================
 288:..\src/command_processing.c **** //                                                                     INFO SEND
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** 
 291:..\src/command_processing.c **** void infoSend(void){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 32


 677              		.loc 1 291 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 1504
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 ADF5BC6D 		sub	sp, sp, #1504
 686              		.cfi_def_cfa_offset 1512
 687 0006 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 292:..\src/command_processing.c ****     char packet_string[1500];
 293:..\src/command_processing.c ****     
 294:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 689              		.loc 1 294 0
 690 0008 3B1D     		adds	r3, r7, #4
 691 000a 1846     		mov	r0, r3
 692 000c FFF7FEFF 		bl	prepare_generic_info
 295:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 693              		.loc 1 295 0
 694 0010 3B1D     		adds	r3, r7, #4
 695 0012 1846     		mov	r0, r3
 696 0014 FFF7FEFF 		bl	UART_RS485_PutString
 296:..\src/command_processing.c **** }
 697              		.loc 1 296 0
 698 0018 00BF     		nop
 699 001a 07F5BC67 		add	r7, r7, #1504
 700              		.cfi_def_cfa_offset 8
 701 001e BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 0020 80BD     		pop	{r7, pc}
 705              		.cfi_endproc
 706              	.LFE65:
 707              		.size	infoSend, .-infoSend
 708 0022 00BF     		.section	.text.num_of_bytes,"ax",%progbits
 709              		.align	2
 710              		.global	num_of_bytes
 711              		.thumb
 712              		.thumb_func
 713              		.type	num_of_bytes, %function
 714              	num_of_bytes:
 715              	.LFB66:
 297:..\src/command_processing.c **** //==============================================================================
 298:..\src/command_processing.c **** //                                                                  NUM_OF_BYTES
 299:..\src/command_processing.c **** //==============================================================================
 300:..\src/command_processing.c ****                     
 301:..\src/command_processing.c **** uint8 num_of_bytes (uint8 TYPE){
 716              		.loc 1 301 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 16
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 33


 724 0002 85B0     		sub	sp, sp, #20
 725              		.cfi_def_cfa_offset 24
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 0346     		mov	r3, r0
 729 0008 FB71     		strb	r3, [r7, #7]
 302:..\src/command_processing.c ****     uint8 sod;
 303:..\src/command_processing.c ****     switch (TYPE) {
 730              		.loc 1 303 0
 731 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 732 000c 092B     		cmp	r3, #9
 733 000e 20D8     		bhi	.L56
 734 0010 01A2     		adr	r2, .L58
 735 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 736 0016 00BF     		.p2align 2
 737              	.L58:
 738 0018 41000000 		.word	.L57+1
 739 001c 41000000 		.word	.L57+1
 740 0020 41000000 		.word	.L57+1
 741 0024 47000000 		.word	.L59+1
 742 0028 47000000 		.word	.L59+1
 743 002c 4D000000 		.word	.L60+1
 744 0030 4D000000 		.word	.L60+1
 745 0034 4D000000 		.word	.L60+1
 746 0038 53000000 		.word	.L56+1
 747 003c 41000000 		.word	.L57+1
 748              		.p2align 1
 749              	.L57:
 304:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 305:..\src/command_processing.c ****                 sod = 1; break;
 750              		.loc 1 305 0
 751 0040 0123     		movs	r3, #1
 752 0042 FB73     		strb	r3, [r7, #15]
 753 0044 05E0     		b	.L56
 754              	.L59:
 306:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 307:..\src/command_processing.c ****                 sod = 2; break;
 755              		.loc 1 307 0
 756 0046 0223     		movs	r3, #2
 757 0048 FB73     		strb	r3, [r7, #15]
 758 004a 02E0     		b	.L56
 759              	.L60:
 308:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 309:..\src/command_processing.c ****                 sod = 4; break;
 760              		.loc 1 309 0
 761 004c 0423     		movs	r3, #4
 762 004e FB73     		strb	r3, [r7, #15]
 763 0050 00BF     		nop
 764              	.L56:
 310:..\src/command_processing.c ****     }  
 311:..\src/command_processing.c ****     return sod;
 765              		.loc 1 311 0
 766 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 312:..\src/command_processing.c **** }
 767              		.loc 1 312 0
 768 0054 1846     		mov	r0, r3
 769 0056 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 34


 770              		.cfi_def_cfa_offset 4
 771 0058 BD46     		mov	sp, r7
 772              		.cfi_def_cfa_register 13
 773              		@ sp needed
 774 005a 80BC     		pop	{r7}
 775              		.cfi_restore 7
 776              		.cfi_def_cfa_offset 0
 777 005c 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE66:
 780              		.size	num_of_bytes, .-num_of_bytes
 781 005e 00BF     		.section	.text.infoGet,"ax",%progbits
 782              		.align	2
 783              		.global	infoGet
 784              		.thumb
 785              		.thumb_func
 786              		.type	infoGet, %function
 787              	infoGet:
 788              	.LFB67:
 313:..\src/command_processing.c **** 
 314:..\src/command_processing.c **** //==============================================================================
 315:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 316:..\src/command_processing.c **** //==============================================================================
 317:..\src/command_processing.c **** 
 318:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 789              		.loc 1 318 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 24008
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 ADF5BB4D 		sub	sp, sp, #23936
 798              		.cfi_def_cfa_offset 23944
 799 0006 92B0     		sub	sp, sp, #72
 800              		.cfi_def_cfa_offset 24016
 801 0008 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 000a 0246     		mov	r2, r0
 804 000c 07F14803 		add	r3, r7, #72
 805 0010 423B     		subs	r3, r3, #66
 806 0012 1A80     		strh	r2, [r3]	@ movhi
 319:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 807              		.loc 1 319 0
 808 0014 07F59C43 		add	r3, r7, #19968
 809 0018 03F12803 		add	r3, r3, #40
 810 001c 0022     		movs	r2, #0
 811 001e 1A60     		str	r2, [r3]
 812 0020 0433     		adds	r3, r3, #4
 813 0022 40F69C72 		movw	r2, #3996
 814 0026 0021     		movs	r1, #0
 815 0028 1846     		mov	r0, r3
 816 002a FFF7FEFF 		bl	memset
 320:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 817              		.loc 1 320 0
 818 002e 07F14803 		add	r3, r7, #72
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 35


 819 0032 403B     		subs	r3, r3, #64
 820 0034 0022     		movs	r2, #0
 821 0036 1A60     		str	r2, [r3]
 822 0038 0433     		adds	r3, r3, #4
 823 003a 44F61C62 		movw	r2, #19996
 824 003e 0021     		movs	r1, #0
 825 0040 1846     		mov	r0, r3
 826 0042 FFF7FEFF 		bl	memset
 321:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 322:..\src/command_processing.c **** 
 323:..\src/command_processing.c ****     switch (info_type) {
 827              		.loc 1 323 0
 828 0046 07F14803 		add	r3, r7, #72
 829 004a 423B     		subs	r3, r3, #66
 830 004c 1B88     		ldrh	r3, [r3]
 831 004e 062B     		cmp	r3, #6
 832 0050 7DD8     		bhi	.L73
 833 0052 01A2     		adr	r2, .L65
 834 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 835              		.p2align 2
 836              	.L65:
 837 0058 75000000 		.word	.L64+1
 838 005c 97000000 		.word	.L66+1
 839 0060 B9000000 		.word	.L67+1
 840 0064 E1000000 		.word	.L68+1
 841 0068 03010000 		.word	.L69+1
 842 006c 21010000 		.word	.L70+1
 843 0070 27010000 		.word	.L71+1
 844              		.p2align 1
 845              	.L64:
 324:..\src/command_processing.c ****         case INFO_ALL:
 325:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 846              		.loc 1 325 0
 847 0074 07F59C43 		add	r3, r7, #19968
 848 0078 03F12803 		add	r3, r3, #40
 849 007c 1846     		mov	r0, r3
 850 007e FFF7FEFF 		bl	prepare_generic_info
 326:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 851              		.loc 1 326 0
 852 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 327:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 853              		.loc 1 327 0
 854 0086 07F59C43 		add	r3, r7, #19968
 855 008a 03F12803 		add	r3, r3, #40
 856 008e 1846     		mov	r0, r3
 857 0090 FFF7FEFF 		bl	UART_RS485_PutString
 328:..\src/command_processing.c ****             break;
 858              		.loc 1 328 0
 859 0094 5CE0     		b	.L72
 860              	.L66:
 329:..\src/command_processing.c ****         case CYCLES_INFO:
 330:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 861              		.loc 1 330 0
 862 0096 07F59C43 		add	r3, r7, #19968
 863 009a 03F12803 		add	r3, r3, #40
 864 009e 1846     		mov	r0, r3
 865 00a0 FFF7FEFF 		bl	prepare_counter_info
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 36


 331:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 866              		.loc 1 331 0
 867 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 332:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 868              		.loc 1 332 0
 869 00a8 07F59C43 		add	r3, r7, #19968
 870 00ac 03F12803 		add	r3, r3, #40
 871 00b0 1846     		mov	r0, r3
 872 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 333:..\src/command_processing.c ****             break;
 873              		.loc 1 333 0
 874 00b6 4BE0     		b	.L72
 875              	.L67:
 334:..\src/command_processing.c ****         case GET_SD_PARAM:
 335:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 876              		.loc 1 335 0
 877 00b8 07F59C43 		add	r3, r7, #19968
 878 00bc 03F12803 		add	r3, r3, #40
 879 00c0 4FF47A62 		mov	r2, #4000
 880 00c4 1946     		mov	r1, r3
 881 00c6 2548     		ldr	r0, .L74
 882 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 336:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 883              		.loc 1 336 0
 884 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 337:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 885              		.loc 1 337 0
 886 00d0 07F59C43 		add	r3, r7, #19968
 887 00d4 03F12803 		add	r3, r3, #40
 888 00d8 1846     		mov	r0, r3
 889 00da FFF7FEFF 		bl	UART_RS485_PutString
 338:..\src/command_processing.c ****             break;
 890              		.loc 1 338 0
 891 00de 37E0     		b	.L72
 892              	.L68:
 339:..\src/command_processing.c ****         case GET_SD_DATA:
 340:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 893              		.loc 1 340 0
 894 00e0 07F14803 		add	r3, r7, #72
 895 00e4 403B     		subs	r3, r3, #64
 896 00e6 44F62061 		movw	r1, #20000
 897 00ea 1846     		mov	r0, r3
 898 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 341:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 899              		.loc 1 341 0
 900 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 342:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 901              		.loc 1 342 0
 902 00f4 07F14803 		add	r3, r7, #72
 903 00f8 403B     		subs	r3, r3, #64
 904 00fa 1846     		mov	r0, r3
 905 00fc FFF7FEFF 		bl	UART_RS485_PutString
 343:..\src/command_processing.c ****             break;
 906              		.loc 1 343 0
 907 0100 26E0     		b	.L72
 908              	.L69:
 344:..\src/command_processing.c ****         case GET_SD_FS_TREE:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 37


 345:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 909              		.loc 1 345 0
 910 0102 07F14803 		add	r3, r7, #72
 911 0106 403B     		subs	r3, r3, #64
 912 0108 1846     		mov	r0, r3
 913 010a FFF7FEFF 		bl	Get_SD_FS
 346:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 914              		.loc 1 346 0
 915 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 347:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 916              		.loc 1 347 0
 917 0112 07F14803 		add	r3, r7, #72
 918 0116 403B     		subs	r3, r3, #64
 919 0118 1846     		mov	r0, r3
 920 011a FFF7FEFF 		bl	UART_RS485_PutString
 348:..\src/command_processing.c ****             break;
 921              		.loc 1 348 0
 922 011e 17E0     		b	.L72
 923              	.L70:
 349:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 350:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 351:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 924              		.loc 1 351 0
 925 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
 352:..\src/command_processing.c ****             break;
 926              		.loc 1 352 0
 927 0124 14E0     		b	.L72
 928              	.L71:
 353:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 354:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 929              		.loc 1 354 0
 930 0126 07F59C43 		add	r3, r7, #19968
 931 012a 03F12803 		add	r3, r3, #40
 932 012e 4FF47A62 		mov	r2, #4000
 933 0132 1946     		mov	r1, r3
 934 0134 0A48     		ldr	r0, .L74+4
 935 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 355:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 936              		.loc 1 355 0
 937 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 356:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 938              		.loc 1 356 0
 939 013e 07F59C43 		add	r3, r7, #19968
 940 0142 03F12803 		add	r3, r3, #40
 941 0146 1846     		mov	r0, r3
 942 0148 FFF7FEFF 		bl	UART_RS485_PutString
 357:..\src/command_processing.c ****             break;            
 943              		.loc 1 357 0
 944 014c 00E0     		b	.L72
 945              	.L73:
 358:..\src/command_processing.c ****         default:
 359:..\src/command_processing.c ****             break;
 946              		.loc 1 359 0
 947 014e 00BF     		nop
 948              	.L72:
 360:..\src/command_processing.c ****     }
 361:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 38


 949              		.loc 1 361 0 discriminator 1
 950 0150 00BF     		nop
 951 0152 07F5BB47 		add	r7, r7, #23936
 952 0156 4837     		adds	r7, r7, #72
 953              		.cfi_def_cfa_offset 8
 954 0158 BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 015a 80BD     		pop	{r7, pc}
 958              	.L75:
 959              		.align	2
 960              	.L74:
 961 015c 00000000 		.word	sdParam
 962 0160 00000000 		.word	sdR01File
 963              		.cfi_endproc
 964              	.LFE67:
 965              		.size	infoGet, .-infoGet
 966              		.section	.rodata
 967              		.align	2
 968              	.LC8:
 969 0000 00       		.ascii	"\000"
 970 0001 000000   		.align	2
 971              	.LC14:
 972 0004 202D2000 		.ascii	" - \000"
 973              		.align	2
 974              	.LC15:
 975 0008 54686520 		.ascii	"The board will reset\012\000"
 975      626F6172 
 975      64207769 
 975      6C6C2072 
 975      65736574 
 976 001e 0000     		.align	2
 977              	.LC16:
 978 0020 202D3E20 		.ascii	" -> \000"
 978      00
 979 0025 000000   		.align	2
 980              	.LC17:
 981 0028 0A00     		.ascii	"\012\000"
 982              		.section	.text.get_param_list,"ax",%progbits
 983              		.align	2
 984              		.global	get_param_list
 985              		.thumb
 986              		.thumb_func
 987              		.type	get_param_list, %function
 988              	get_param_list:
 989              	.LFB68:
 362:..\src/command_processing.c **** 
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c **** //==============================================================================
 365:..\src/command_processing.c **** //                                                                GET PARAM LIST
 366:..\src/command_processing.c **** //==============================================================================
 367:..\src/command_processing.c **** 
 368:..\src/command_processing.c **** void get_param_list ( uint8 num_params, uint8 num_menus, const struct parameter PARAM_LIST[], const
 990              		.loc 1 368 0
 991              		.cfi_startproc
 992              		@ args = 4, pretend = 0, frame = 608
 993              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 39


 994 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 995              		.cfi_def_cfa_offset 28
 996              		.cfi_offset 4, -28
 997              		.cfi_offset 5, -24
 998              		.cfi_offset 6, -20
 999              		.cfi_offset 7, -16
 1000              		.cfi_offset 8, -12
 1001              		.cfi_offset 9, -8
 1002              		.cfi_offset 14, -4
 1003 0004 ADF5197D 		sub	sp, sp, #612
 1004              		.cfi_def_cfa_offset 640
 1005 0008 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 1007 000a 0646     		mov	r6, r0
 1008 000c 0846     		mov	r0, r1
 1009 000e 07F10801 		add	r1, r7, #8
 1010 0012 0A60     		str	r2, [r1]
 1011 0014 3A1D     		adds	r2, r7, #4
 1012 0016 1360     		str	r3, [r2]
 1013 0018 07F10F03 		add	r3, r7, #15
 1014 001c 3246     		mov	r2, r6
 1015 001e 1A70     		strb	r2, [r3]
 1016 0020 07F10E03 		add	r3, r7, #14
 1017 0024 0246     		mov	r2, r0
 1018 0026 1A70     		strb	r2, [r3]
 1019              		.loc 1 368 0
 1020 0028 6B46     		mov	r3, sp
 1021 002a 1E46     		mov	r6, r3
 369:..\src/command_processing.c ****     
 370:..\src/command_processing.c ****     uint8 CYDATA idx = 0;      
 1022              		.loc 1 370 0
 1023 002c 0023     		movs	r3, #0
 1024 002e 87F85F32 		strb	r3, [r7, #607]
 371:..\src/command_processing.c ****     uint8* m_addr = (uint8*)PARAM_LIST[0].VAR_P;
 1025              		.loc 1 371 0
 1026 0032 07F10803 		add	r3, r7, #8
 1027 0036 1B68     		ldr	r3, [r3]
 1028 0038 1B68     		ldr	r3, [r3]
 1029 003a C7F85032 		str	r3, [r7, #592]
 372:..\src/command_processing.c ****     uint8 CYDATA string_length;
 373:..\src/command_processing.c ****     char CYDATA aux_str[250] = "";
 1030              		.loc 1 373 0
 1031 003e 07F5A473 		add	r3, r7, #328
 1032 0042 0022     		movs	r2, #0
 1033 0044 1A60     		str	r2, [r3]
 1034 0046 0433     		adds	r3, r3, #4
 1035 0048 F622     		movs	r2, #246
 1036 004a 0021     		movs	r1, #0
 1037 004c 1846     		mov	r0, r3
 1038 004e FFF7FEFF 		bl	memset
 374:..\src/command_processing.c ****     char CYDATA aux_str1[250] = ""; 
 1039              		.loc 1 374 0
 1040 0052 07F14C03 		add	r3, r7, #76
 1041 0056 0022     		movs	r2, #0
 1042 0058 1A60     		str	r2, [r3]
 1043 005a 0433     		adds	r3, r3, #4
 1044 005c F622     		movs	r2, #246
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 40


 1045 005e 0021     		movs	r1, #0
 1046 0060 1846     		mov	r0, r3
 1047 0062 FFF7FEFF 		bl	memset
 375:..\src/command_processing.c ****     
 376:..\src/command_processing.c ****     int32 aux_int32;
 377:..\src/command_processing.c ****     uint8 i, j;
 378:..\src/command_processing.c ****     uint8 count;
 379:..\src/command_processing.c ****     char aux_char[50];
 380:..\src/command_processing.c ****     
 381:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT*num_params + PARAM_MENU_SLOT*num_menus + PARAM_BYTE_SLOT
 1048              		.loc 1 381 0
 1049 0066 07F10F03 		add	r3, r7, #15
 1050 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1051 006c 9BB2     		uxth	r3, r3
 1052 006e 1A46     		mov	r2, r3	@ movhi
 1053 0070 9200     		lsls	r2, r2, #2
 1054 0072 1344     		add	r3, r3, r2
 1055 0074 1A46     		mov	r2, r3	@ movhi
 1056 0076 9100     		lsls	r1, r2, #2
 1057 0078 1A46     		mov	r2, r3	@ movhi
 1058 007a 0B46     		mov	r3, r1	@ movhi
 1059 007c 1344     		add	r3, r3, r2
 1060 007e 5B00     		lsls	r3, r3, #1
 1061 0080 9AB2     		uxth	r2, r3
 1062 0082 07F10E03 		add	r3, r7, #14
 1063 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1064 0088 9BB2     		uxth	r3, r3
 1065 008a 1946     		mov	r1, r3	@ movhi
 1066 008c 8900     		lsls	r1, r1, #2
 1067 008e 0B44     		add	r3, r3, r1
 1068 0090 1946     		mov	r1, r3	@ movhi
 1069 0092 0901     		lsls	r1, r1, #4
 1070 0094 CB1A     		subs	r3, r1, r3
 1071 0096 5B00     		lsls	r3, r3, #1
 1072 0098 9BB2     		uxth	r3, r3
 1073 009a 1344     		add	r3, r3, r2
 1074 009c 9BB2     		uxth	r3, r3
 1075 009e 3233     		adds	r3, r3, #50
 1076 00a0 A7F84E32 		strh	r3, [r7, #590]	@ movhi
 382:..\src/command_processing.c ****     uint8 packet_data[packet_length];
 1077              		.loc 1 382 0
 1078 00a4 B7F84E12 		ldrh	r1, [r7, #590]
 1079 00a8 0B46     		mov	r3, r1
 1080 00aa 013B     		subs	r3, r3, #1
 1081 00ac C7F84832 		str	r3, [r7, #584]
 1082 00b0 8AB2     		uxth	r2, r1
 1083 00b2 4FF00003 		mov	r3, #0
 1084 00b6 4FEAC309 		lsl	r9, r3, #3
 1085 00ba 49EA5279 		orr	r9, r9, r2, lsr #29
 1086 00be 4FEAC208 		lsl	r8, r2, #3
 1087 00c2 8AB2     		uxth	r2, r1
 1088 00c4 4FF00003 		mov	r3, #0
 1089 00c8 DD00     		lsls	r5, r3, #3
 1090 00ca 45EA5275 		orr	r5, r5, r2, lsr #29
 1091 00ce D400     		lsls	r4, r2, #3
 1092 00d0 0B46     		mov	r3, r1
 1093 00d2 0733     		adds	r3, r3, #7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 41


 1094 00d4 DB08     		lsrs	r3, r3, #3
 1095 00d6 DB00     		lsls	r3, r3, #3
 1096 00d8 ADEB030D 		sub	sp, sp, r3
 1097 00dc 6B46     		mov	r3, sp
 1098 00de 0033     		adds	r3, r3, #0
 1099 00e0 C7F84432 		str	r3, [r7, #580]
 1100              	.LBB22:
 383:..\src/command_processing.c ****     for (int ii = 0; ii < packet_length; ii++) packet_data[ii] = 0;
 1101              		.loc 1 383 0
 1102 00e4 0023     		movs	r3, #0
 1103 00e6 C7F85432 		str	r3, [r7, #596]
 1104 00ea 0BE0     		b	.L77
 1105              	.L78:
 1106              		.loc 1 383 0 is_stmt 0 discriminator 3
 1107 00ec D7F84422 		ldr	r2, [r7, #580]
 1108 00f0 D7F85432 		ldr	r3, [r7, #596]
 1109 00f4 1344     		add	r3, r3, r2
 1110 00f6 0022     		movs	r2, #0
 1111 00f8 1A70     		strb	r2, [r3]
 1112 00fa D7F85432 		ldr	r3, [r7, #596]
 1113 00fe 0133     		adds	r3, r3, #1
 1114 0100 C7F85432 		str	r3, [r7, #596]
 1115              	.L77:
 1116              		.loc 1 383 0 discriminator 1
 1117 0104 B7F84E22 		ldrh	r2, [r7, #590]
 1118 0108 D7F85432 		ldr	r3, [r7, #596]
 1119 010c 9A42     		cmp	r2, r3
 1120 010e EDDC     		bgt	.L78
 1121              	.LBE22:
 384:..\src/command_processing.c **** 
 385:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1122              		.loc 1 385 0 is_stmt 1
 1123 0110 D7F84432 		ldr	r3, [r7, #580]
 1124 0114 0C22     		movs	r2, #12
 1125 0116 1A70     		strb	r2, [r3]
 386:..\src/command_processing.c ****     packet_data[1] = num_params;
 1126              		.loc 1 386 0
 1127 0118 D7F84432 		ldr	r3, [r7, #580]
 1128 011c 07F10F02 		add	r2, r7, #15
 1129 0120 1278     		ldrb	r2, [r2]
 1130 0122 5A70     		strb	r2, [r3, #1]
 387:..\src/command_processing.c ****     
 388:..\src/command_processing.c ****     for (idx = 0; idx < num_params; idx ++) {
 1131              		.loc 1 388 0
 1132 0124 0023     		movs	r3, #0
 1133 0126 87F85F32 		strb	r3, [r7, #607]
 1134 012a 44E2     		b	.L79
 1135              	.L102:
 1136              	.LBB23:
 389:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1137              		.loc 1 389 0
 1138 012c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1139 0130 1B01     		lsls	r3, r3, #4
 1140 0132 07F10802 		add	r2, r7, #8
 1141 0136 1268     		ldr	r2, [r2]
 1142 0138 1344     		add	r3, r3, r2
 1143 013a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 42


 1144 013c C7F85032 		str	r3, [r7, #592]
 390:..\src/command_processing.c ****         uint8 sod = num_of_bytes(PARAM_LIST[idx].TYPES);
 1145              		.loc 1 390 0
 1146 0140 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1147 0144 1B01     		lsls	r3, r3, #4
 1148 0146 07F10802 		add	r2, r7, #8
 1149 014a 1268     		ldr	r2, [r2]
 1150 014c 1344     		add	r3, r3, r2
 1151 014e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1152 0150 1846     		mov	r0, r3
 1153 0152 FFF7FEFF 		bl	num_of_bytes
 1154 0156 0346     		mov	r3, r0
 1155 0158 87F84332 		strb	r3, [r7, #579]
 391:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = PARAM_LIST[idx].TYPES;
 1156              		.loc 1 391 0
 1157 015c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1158 0160 3222     		movs	r2, #50
 1159 0162 02FB03F3 		mul	r3, r2, r3
 1160 0166 0233     		adds	r3, r3, #2
 1161 0168 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1162 016c 1201     		lsls	r2, r2, #4
 1163 016e 07F10801 		add	r1, r7, #8
 1164 0172 0968     		ldr	r1, [r1]
 1165 0174 0A44     		add	r2, r2, r1
 1166 0176 1179     		ldrb	r1, [r2, #4]	@ zero_extendqisi2
 1167 0178 D7F84422 		ldr	r2, [r7, #580]
 1168 017c D154     		strb	r1, [r2, r3]
 392:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = PARAM_LIST[idx].NUM_ITEMS;        
 1169              		.loc 1 392 0
 1170 017e 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1171 0182 3222     		movs	r2, #50
 1172 0184 02FB03F3 		mul	r3, r2, r3
 1173 0188 0333     		adds	r3, r3, #3
 1174 018a 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1175 018e 1201     		lsls	r2, r2, #4
 1176 0190 07F10801 		add	r1, r7, #8
 1177 0194 0968     		ldr	r1, [r1]
 1178 0196 0A44     		add	r2, r2, r1
 1179 0198 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 1180 019a D7F84422 		ldr	r2, [r7, #580]
 1181 019e D154     		strb	r1, [r2, r3]
 393:..\src/command_processing.c **** 
 394:..\src/command_processing.c **** 
 395:..\src/command_processing.c ****     switch(PARAM_LIST[idx].custom){
 1182              		.loc 1 395 0
 1183 01a0 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1184 01a4 1B01     		lsls	r3, r3, #4
 1185 01a6 07F10802 		add	r2, r7, #8
 1186 01aa 1268     		ldr	r2, [r2]
 1187 01ac 1344     		add	r3, r3, r2
 1188 01ae 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1189 01b0 052B     		cmp	r3, #5
 1190 01b2 61D1     		bne	.L113
 396:..\src/command_processing.c **** 
 397:..\src/command_processing.c ****         case CUSTOM_POS_LIM:        //Position limits
 398:..\src/command_processing.c ****             aux_int32 = (c_mem.SH_config.pos_lim_inf >> c_mem.SH_config.res);
 1191              		.loc 1 398 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 43


 1192 01b4 B74B     		ldr	r3, .L114
 1193 01b6 1B6A     		ldr	r3, [r3, #32]
 1194 01b8 B64A     		ldr	r2, .L114
 1195 01ba 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 1196 01be 43FA02F2 		asr	r2, r3, r2
 1197 01c2 07F14803 		add	r3, r7, #72
 1198 01c6 1A60     		str	r2, [r3]
 399:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1199              		.loc 1 399 0
 1200 01c8 0023     		movs	r3, #0
 1201 01ca 87F85C32 		strb	r3, [r7, #604]
 1202 01ce 1AE0     		b	.L82
 1203              	.L83:
 400:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int32))[j];
 1204              		.loc 1 400 0 discriminator 3
 1205 01d0 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1206 01d4 3222     		movs	r2, #50
 1207 01d6 02FB03F3 		mul	r3, r2, r3
 1208 01da 1A1D     		adds	r2, r3, #4
 1209 01dc 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1210 01e0 1A44     		add	r2, r2, r3
 1211 01e2 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1212 01e6 D31A     		subs	r3, r2, r3
 1213 01e8 013B     		subs	r3, r3, #1
 1214 01ea 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1215 01ee 07F14801 		add	r1, r7, #72
 1216 01f2 0A44     		add	r2, r2, r1
 1217 01f4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1218 01f6 D7F84422 		ldr	r2, [r7, #580]
 1219 01fa D154     		strb	r1, [r2, r3]
 399:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1220              		.loc 1 399 0 discriminator 3
 1221 01fc 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1222 0200 0133     		adds	r3, r3, #1
 1223 0202 87F85C32 		strb	r3, [r7, #604]
 1224              	.L82:
 399:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1225              		.loc 1 399 0 is_stmt 0 discriminator 1
 1226 0206 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1227 020a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1228 020e 9A42     		cmp	r2, r3
 1229 0210 DED3     		bcc	.L83
 401:..\src/command_processing.c ****             }
 402:..\src/command_processing.c ****             aux_int32 = (c_mem.SH_config.pos_lim_sup >> c_mem.SH_config.res);
 1230              		.loc 1 402 0 is_stmt 1
 1231 0212 A04B     		ldr	r3, .L114
 1232 0214 5B6A     		ldr	r3, [r3, #36]
 1233 0216 9F4A     		ldr	r2, .L114
 1234 0218 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 1235 021c 43FA02F2 		asr	r2, r3, r2
 1236 0220 07F14803 		add	r3, r7, #72
 1237 0224 1A60     		str	r2, [r3]
 403:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1238              		.loc 1 403 0
 1239 0226 0023     		movs	r3, #0
 1240 0228 87F85C32 		strb	r3, [r7, #604]
 1241 022c 1DE0     		b	.L84
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 44


 1242              	.L85:
 404:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&aux_int32))[j
 1243              		.loc 1 404 0 discriminator 3
 1244 022e 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1245 0232 3222     		movs	r2, #50
 1246 0234 02FB03F3 		mul	r3, r2, r3
 1247 0238 1A1D     		adds	r2, r3, #4
 1248 023a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1249 023e 1A44     		add	r2, r2, r3
 1250 0240 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1251 0244 1A44     		add	r2, r2, r3
 1252 0246 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1253 024a D31A     		subs	r3, r2, r3
 1254 024c 013B     		subs	r3, r3, #1
 1255 024e 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1256 0252 07F14801 		add	r1, r7, #72
 1257 0256 0A44     		add	r2, r2, r1
 1258 0258 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1259 025a D7F84422 		ldr	r2, [r7, #580]
 1260 025e D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1261              		.loc 1 403 0 discriminator 3
 1262 0260 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1263 0264 0133     		adds	r3, r3, #1
 1264 0266 87F85C32 		strb	r3, [r7, #604]
 1265              	.L84:
 403:..\src/command_processing.c ****             for(j = 0; j < sod; j++) {
 1266              		.loc 1 403 0 is_stmt 0 discriminator 1
 1267 026a 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1268 026e 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1269 0272 9A42     		cmp	r2, r3
 1270 0274 DBD3     		bcc	.L85
 405:..\src/command_processing.c ****             }
 406:..\src/command_processing.c ****             break;            
 1271              		.loc 1 406 0 is_stmt 1
 1272 0276 48E0     		b	.L86
 1273              	.L113:
 407:..\src/command_processing.c ****             
 408:..\src/command_processing.c **** 
 409:..\src/command_processing.c ****         case 0:  // Not custom parameter
 410:..\src/command_processing.c ****         default: // Parameters that are only custom for SET
 411:..\src/command_processing.c ****             for (i = 0; i < PARAM_LIST[idx].NUM_ITEMS * sod; i+=sod){
 1274              		.loc 1 411 0
 1275 0278 0023     		movs	r3, #0
 1276 027a 87F85D32 		strb	r3, [r7, #605]
 1277 027e 32E0     		b	.L87
 1278              	.L90:
 412:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1279              		.loc 1 412 0
 1280 0280 0023     		movs	r3, #0
 1281 0282 87F85C32 		strb	r3, [r7, #604]
 1282 0286 21E0     		b	.L88
 1283              	.L89:
 413:..\src/command_processing.c ****                     packet_data[(4 + PARAM_BYTE_SLOT*idx + i) + sod - j -1] = m_addr[i+j];
 1284              		.loc 1 413 0 discriminator 3
 1285 0288 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1286 028c 3222     		movs	r2, #50
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 45


 1287 028e 02FB03F3 		mul	r3, r2, r3
 1288 0292 1A1D     		adds	r2, r3, #4
 1289 0294 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1290 0298 1A44     		add	r2, r2, r3
 1291 029a 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1292 029e 1A44     		add	r2, r2, r3
 1293 02a0 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1294 02a4 D31A     		subs	r3, r2, r3
 1295 02a6 013B     		subs	r3, r3, #1
 1296 02a8 97F85D12 		ldrb	r1, [r7, #605]	@ zero_extendqisi2
 1297 02ac 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1298 02b0 0A44     		add	r2, r2, r1
 1299 02b2 1146     		mov	r1, r2
 1300 02b4 D7F85022 		ldr	r2, [r7, #592]
 1301 02b8 0A44     		add	r2, r2, r1
 1302 02ba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1303 02bc D7F84422 		ldr	r2, [r7, #580]
 1304 02c0 D154     		strb	r1, [r2, r3]
 412:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1305              		.loc 1 412 0 discriminator 3
 1306 02c2 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1307 02c6 0133     		adds	r3, r3, #1
 1308 02c8 87F85C32 		strb	r3, [r7, #604]
 1309              	.L88:
 412:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1310              		.loc 1 412 0 is_stmt 0 discriminator 1
 1311 02cc 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1312 02d0 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1313 02d4 9A42     		cmp	r2, r3
 1314 02d6 D7D3     		bcc	.L89
 411:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1315              		.loc 1 411 0 is_stmt 1 discriminator 2
 1316 02d8 97F85D22 		ldrb	r2, [r7, #605]
 1317 02dc 97F84332 		ldrb	r3, [r7, #579]
 1318 02e0 1344     		add	r3, r3, r2
 1319 02e2 87F85D32 		strb	r3, [r7, #605]
 1320              	.L87:
 411:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 1321              		.loc 1 411 0 is_stmt 0 discriminator 1
 1322 02e6 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1323 02ea 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1324 02ee 1B01     		lsls	r3, r3, #4
 1325 02f0 07F10801 		add	r1, r7, #8
 1326 02f4 0968     		ldr	r1, [r1]
 1327 02f6 0B44     		add	r3, r3, r1
 1328 02f8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1329 02fa 1946     		mov	r1, r3
 1330 02fc 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1331 0300 03FB01F3 		mul	r3, r3, r1
 1332 0304 9A42     		cmp	r2, r3
 1333 0306 BBDB     		blt	.L90
 414:..\src/command_processing.c ****                 }
 415:..\src/command_processing.c ****             }
 416:..\src/command_processing.c ****             break;
 1334              		.loc 1 416 0 is_stmt 1
 1335 0308 00BF     		nop
 1336              	.L86:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 46


 417:..\src/command_processing.c ****     }
 418:..\src/command_processing.c ****        
 419:..\src/command_processing.c ****         sprintf(aux_str,"");
 1337              		.loc 1 419 0
 1338 030a 634B     		ldr	r3, .L114+4
 1339 030c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1340 030e 07F5A473 		add	r3, r7, #328
 1341 0312 1A70     		strb	r2, [r3]
 420:..\src/command_processing.c ****         itoa(idx + 1, aux_char, 10);
 1342              		.loc 1 420 0
 1343 0314 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1344 0318 0133     		adds	r3, r3, #1
 1345 031a 07F11401 		add	r1, r7, #20
 1346 031e 0A22     		movs	r2, #10
 1347 0320 1846     		mov	r0, r3
 1348 0322 FFF7FEFF 		bl	itoa
 421:..\src/command_processing.c ****         strcat(aux_str ,aux_char);
 1349              		.loc 1 421 0
 1350 0326 07F11402 		add	r2, r7, #20
 1351 032a 07F5A473 		add	r3, r7, #328
 1352 032e 1146     		mov	r1, r2
 1353 0330 1846     		mov	r0, r3
 1354 0332 FFF7FEFF 		bl	strcat
 422:..\src/command_processing.c ****         strcat(aux_str," - ");
 1355              		.loc 1 422 0
 1356 0336 07F5A473 		add	r3, r7, #328
 1357 033a 1846     		mov	r0, r3
 1358 033c FFF7FEFF 		bl	strlen
 1359 0340 0346     		mov	r3, r0
 1360 0342 1A46     		mov	r2, r3
 1361 0344 07F5A473 		add	r3, r7, #328
 1362 0348 1344     		add	r3, r3, r2
 1363 034a 544A     		ldr	r2, .L114+8
 1364 034c 1068     		ldr	r0, [r2]	@ unaligned
 1365 034e 1860     		str	r0, [r3]	@ unaligned
 423:..\src/command_processing.c ****         strcat(aux_str,(char*)PARAM_LIST[idx].PARAM_STR);                
 1366              		.loc 1 423 0
 1367 0350 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1368 0354 1B01     		lsls	r3, r3, #4
 1369 0356 07F10802 		add	r2, r7, #8
 1370 035a 1268     		ldr	r2, [r2]
 1371 035c 1344     		add	r3, r3, r2
 1372 035e 9A68     		ldr	r2, [r3, #8]
 1373 0360 07F5A473 		add	r3, r7, #328
 1374 0364 1146     		mov	r1, r2
 1375 0366 1846     		mov	r0, r3
 1376 0368 FFF7FEFF 		bl	strcat
 424:..\src/command_processing.c ****         string_length = strlen(aux_str);
 1377              		.loc 1 424 0
 1378 036c 07F5A473 		add	r3, r7, #328
 1379 0370 1846     		mov	r0, r3
 1380 0372 FFF7FEFF 		bl	strlen
 1381 0376 0346     		mov	r3, r0
 1382 0378 87F85E32 		strb	r3, [r7, #606]
 425:..\src/command_processing.c ****         
 426:..\src/command_processing.c ****         // Parameters with a menu
 427:..\src/command_processing.c ****         if (PARAM_LIST[idx].MENU != 0){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 47


 1383              		.loc 1 427 0
 1384 037c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1385 0380 1B01     		lsls	r3, r3, #4
 1386 0382 07F10802 		add	r2, r7, #8
 1387 0386 1268     		ldr	r2, [r2]
 1388 0388 1344     		add	r3, r3, r2
 1389 038a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1390 038c 002B     		cmp	r3, #0
 1391 038e 40D0     		beq	.L91
 428:..\src/command_processing.c ****             for (i = 0; i < num_menus ; i++){
 1392              		.loc 1 428 0
 1393 0390 0023     		movs	r3, #0
 1394 0392 87F85D32 		strb	r3, [r7, #605]
 1395 0396 35E0     		b	.L92
 1396              	.L94:
 429:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1397              		.loc 1 429 0
 1398 0398 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1399 039c 2C22     		movs	r2, #44
 1400 039e 02FB03F3 		mul	r3, r2, r3
 1401 03a2 3A1D     		adds	r2, r7, #4
 1402 03a4 1268     		ldr	r2, [r2]
 1403 03a6 1344     		add	r3, r3, r2
 1404 03a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1405 03aa 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1406 03ae 1B01     		lsls	r3, r3, #4
 1407 03b0 07F10801 		add	r1, r7, #8
 1408 03b4 0968     		ldr	r1, [r1]
 1409 03b6 0B44     		add	r3, r3, r1
 1410 03b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1411 03ba 9A42     		cmp	r2, r3
 1412 03bc 13D1     		bne	.L93
 430:..\src/command_processing.c ****                 strcat(aux_str, MENU_LIST[i].choice[*m_addr]);
 1413              		.loc 1 430 0
 1414 03be 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1415 03c2 2C22     		movs	r2, #44
 1416 03c4 02FB03F3 		mul	r3, r2, r3
 1417 03c8 3A1D     		adds	r2, r7, #4
 1418 03ca 1268     		ldr	r2, [r2]
 1419 03cc 1A44     		add	r2, r2, r3
 1420 03ce D7F85032 		ldr	r3, [r7, #592]
 1421 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 03d4 9B00     		lsls	r3, r3, #2
 1423 03d6 1344     		add	r3, r3, r2
 1424 03d8 5A68     		ldr	r2, [r3, #4]
 1425 03da 07F5A473 		add	r3, r7, #328
 1426 03de 1146     		mov	r1, r2
 1427 03e0 1846     		mov	r0, r3
 1428 03e2 FFF7FEFF 		bl	strcat
 1429              	.L93:
 431:..\src/command_processing.c ****                 }              
 432:..\src/command_processing.c ****             //Recomputes string length
 433:..\src/command_processing.c ****             string_length = strlen(aux_str)+1;
 1430              		.loc 1 433 0 discriminator 2
 1431 03e6 07F5A473 		add	r3, r7, #328
 1432 03ea 1846     		mov	r0, r3
 1433 03ec FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 48


 1434 03f0 0346     		mov	r3, r0
 1435 03f2 DBB2     		uxtb	r3, r3
 1436 03f4 0133     		adds	r3, r3, #1
 1437 03f6 87F85E32 		strb	r3, [r7, #606]
 428:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1438              		.loc 1 428 0 discriminator 2
 1439 03fa 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1440 03fe 0133     		adds	r3, r3, #1
 1441 0400 87F85D32 		strb	r3, [r7, #605]
 1442              	.L92:
 428:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1443              		.loc 1 428 0 is_stmt 0 discriminator 1
 1444 0404 07F10E03 		add	r3, r7, #14
 1445 0408 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1446 040c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 040e 9A42     		cmp	r2, r3
 1448 0410 C2D3     		bcc	.L94
 1449              	.L91:
 434:..\src/command_processing.c ****             }
 435:..\src/command_processing.c ****         }
 436:..\src/command_processing.c **** 
 437:..\src/command_processing.c ****         // Add parameter string to packet
 438:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 1450              		.loc 1 438 0 is_stmt 1
 1451 0412 97F85E32 		ldrb	r3, [r7, #606]
 1452 0416 87F85D32 		strb	r3, [r7, #605]
 1453 041a 28E0     		b	.L95
 1454              	.L96:
 439:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1455              		.loc 1 439 0 discriminator 3
 1456 041c 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1457 0420 3222     		movs	r2, #50
 1458 0422 02FB03F3 		mul	r3, r2, r3
 1459 0426 1A1D     		adds	r2, r3, #4
 1460 0428 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1461 042c 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1462 0430 0901     		lsls	r1, r1, #4
 1463 0432 07F10800 		add	r0, r7, #8
 1464 0436 0068     		ldr	r0, [r0]
 1465 0438 0144     		add	r1, r1, r0
 1466 043a 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1467 043c 01FB03F3 		mul	r3, r1, r3
 1468 0440 1A44     		add	r2, r2, r3
 1469 0442 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1470 0446 1A44     		add	r2, r2, r3
 1471 0448 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1472 044c D31A     		subs	r3, r2, r3
 1473 044e 97F85E12 		ldrb	r1, [r7, #606]	@ zero_extendqisi2
 1474 0452 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1475 0456 8A1A     		subs	r2, r1, r2
 1476 0458 07F5A471 		add	r1, r7, #328
 1477 045c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1478 045e D7F84422 		ldr	r2, [r7, #580]
 1479 0462 D154     		strb	r1, [r2, r3]
 438:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1480              		.loc 1 438 0 discriminator 3
 1481 0464 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 49


 1482 0468 013B     		subs	r3, r3, #1
 1483 046a 87F85D32 		strb	r3, [r7, #605]
 1484              	.L95:
 438:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1485              		.loc 1 438 0 is_stmt 0 discriminator 1
 1486 046e 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1487 0472 002B     		cmp	r3, #0
 1488 0474 D2D1     		bne	.L96
 440:..\src/command_processing.c ****         
 441:..\src/command_processing.c ****         
 442:..\src/command_processing.c ****         if (PARAM_LIST[idx].TYPES == TYPE_FLAG){
 1489              		.loc 1 442 0 is_stmt 1
 1490 0476 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1491 047a 1B01     		lsls	r3, r3, #4
 1492 047c 07F10802 		add	r2, r7, #8
 1493 0480 1268     		ldr	r2, [r2]
 1494 0482 1344     		add	r3, r3, r2
 1495 0484 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1496 0486 002B     		cmp	r3, #0
 1497 0488 6ED1     		bne	.L97
 443:..\src/command_processing.c ****             //Send the number of menus          
 444:..\src/command_processing.c ****             for (i = 0; i < num_menus ; i++){
 1498              		.loc 1 444 0
 1499 048a 0023     		movs	r3, #0
 1500 048c 87F85D32 		strb	r3, [r7, #605]
 1501 0490 40E0     		b	.L98
 1502              	.L115:
 1503 0492 00BF     		.align	2
 1504              	.L114:
 1505 0494 00000000 		.word	c_mem
 1506 0498 00000000 		.word	.LC8
 1507 049c 04000000 		.word	.LC14
 1508              	.L100:
 445:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1509              		.loc 1 445 0
 1510 04a0 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1511 04a4 2C22     		movs	r2, #44
 1512 04a6 02FB03F3 		mul	r3, r2, r3
 1513 04aa 3A1D     		adds	r2, r7, #4
 1514 04ac 1268     		ldr	r2, [r2]
 1515 04ae 1344     		add	r3, r3, r2
 1516 04b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1517 04b2 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1518 04b6 1B01     		lsls	r3, r3, #4
 1519 04b8 07F10801 		add	r1, r7, #8
 1520 04bc 0968     		ldr	r1, [r1]
 1521 04be 0B44     		add	r3, r3, r1
 1522 04c0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1523 04c2 9A42     		cmp	r2, r3
 1524 04c4 21D1     		bne	.L99
 446:..\src/command_processing.c ****                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_le
 1525              		.loc 1 446 0
 1526 04c6 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1527 04ca 3222     		movs	r2, #50
 1528 04cc 02FB03F3 		mul	r3, r2, r3
 1529 04d0 1A1D     		adds	r2, r3, #4
 1530 04d2 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 50


 1531 04d6 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1532 04da 0901     		lsls	r1, r1, #4
 1533 04dc 07F10800 		add	r0, r7, #8
 1534 04e0 0068     		ldr	r0, [r0]
 1535 04e2 0144     		add	r1, r1, r0
 1536 04e4 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1537 04e6 01FB03F3 		mul	r3, r1, r3
 1538 04ea 1A44     		add	r2, r2, r3
 1539 04ec 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1540 04f0 1344     		add	r3, r3, r2
 1541 04f2 97F85D22 		ldrb	r2, [r7, #605]
 1542 04f6 0132     		adds	r2, r2, #1
 1543 04f8 D1B2     		uxtb	r1, r2
 1544 04fa D7F84422 		ldr	r2, [r7, #580]
 1545 04fe D154     		strb	r1, [r2, r3]
 447:..\src/command_processing.c ****                 i = num_menus;}              
 1546              		.loc 1 447 0
 1547 0500 07F10E03 		add	r3, r7, #14
 1548 0504 1B78     		ldrb	r3, [r3]
 1549 0506 87F85D32 		strb	r3, [r7, #605]
 1550              	.L99:
 444:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1551              		.loc 1 444 0 discriminator 2
 1552 050a 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1553 050e 0133     		adds	r3, r3, #1
 1554 0510 87F85D32 		strb	r3, [r7, #605]
 1555              	.L98:
 444:..\src/command_processing.c ****                 if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 1556              		.loc 1 444 0 is_stmt 0 discriminator 1
 1557 0514 07F10E03 		add	r3, r7, #14
 1558 0518 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1559 051c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 051e 9A42     		cmp	r2, r3
 1561 0520 BED3     		bcc	.L100
 448:..\src/command_processing.c ****             }
 449:..\src/command_processing.c ****             // Add empty bit + struct number
 450:..\src/command_processing.c ****             // Note: added here at the end of packets is transparent to old parameters retrieving v
 451:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1562              		.loc 1 451 0 is_stmt 1
 1563 0522 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1564 0526 3222     		movs	r2, #50
 1565 0528 02FB03F3 		mul	r3, r2, r3
 1566 052c 1A1D     		adds	r2, r3, #4
 1567 052e 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1568 0532 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1569 0536 0901     		lsls	r1, r1, #4
 1570 0538 07F10800 		add	r0, r7, #8
 1571 053c 0068     		ldr	r0, [r0]
 1572 053e 0144     		add	r1, r1, r0
 1573 0540 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1574 0542 01FB03F3 		mul	r3, r1, r3
 1575 0546 1A44     		add	r2, r2, r3
 1576 0548 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1577 054c 1344     		add	r3, r3, r2
 1578 054e 0233     		adds	r3, r3, #2
 1579 0550 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1580 0554 1201     		lsls	r2, r2, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 51


 1581 0556 07F10801 		add	r1, r7, #8
 1582 055a 0968     		ldr	r1, [r1]
 1583 055c 0A44     		add	r2, r2, r1
 1584 055e 517B     		ldrb	r1, [r2, #13]	@ zero_extendqisi2
 1585 0560 D7F84422 		ldr	r2, [r7, #580]
 1586 0564 D154     		strb	r1, [r2, r3]
 1587 0566 21E0     		b	.L101
 1588              	.L97:
 452:..\src/command_processing.c ****         }
 453:..\src/command_processing.c ****         else {
 454:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*PARAM_LIST[idx].NUM_ITEMS) + string_length
 1589              		.loc 1 454 0
 1590 0568 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1591 056c 3222     		movs	r2, #50
 1592 056e 02FB03F3 		mul	r3, r2, r3
 1593 0572 1A1D     		adds	r2, r3, #4
 1594 0574 97F84332 		ldrb	r3, [r7, #579]	@ zero_extendqisi2
 1595 0578 97F85F12 		ldrb	r1, [r7, #607]	@ zero_extendqisi2
 1596 057c 0901     		lsls	r1, r1, #4
 1597 057e 07F10800 		add	r0, r7, #8
 1598 0582 0068     		ldr	r0, [r0]
 1599 0584 0144     		add	r1, r1, r0
 1600 0586 4979     		ldrb	r1, [r1, #5]	@ zero_extendqisi2
 1601 0588 01FB03F3 		mul	r3, r1, r3
 1602 058c 1A44     		add	r2, r2, r3
 1603 058e 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
 1604 0592 1344     		add	r3, r3, r2
 1605 0594 0133     		adds	r3, r3, #1
 1606 0596 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1607 059a 1201     		lsls	r2, r2, #4
 1608 059c 07F10801 		add	r1, r7, #8
 1609 05a0 0968     		ldr	r1, [r1]
 1610 05a2 0A44     		add	r2, r2, r1
 1611 05a4 517B     		ldrb	r1, [r2, #13]	@ zero_extendqisi2
 1612 05a6 D7F84422 		ldr	r2, [r7, #580]
 1613 05aa D154     		strb	r1, [r2, r3]
 1614              	.L101:
 1615              	.LBE23:
 388:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1616              		.loc 1 388 0 discriminator 2
 1617 05ac 97F85F32 		ldrb	r3, [r7, #607]	@ zero_extendqisi2
 1618 05b0 0133     		adds	r3, r3, #1
 1619 05b2 87F85F32 		strb	r3, [r7, #607]
 1620              	.L79:
 388:..\src/command_processing.c ****         m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 1621              		.loc 1 388 0 is_stmt 0 discriminator 1
 1622 05b6 07F10F03 		add	r3, r7, #15
 1623 05ba 97F85F22 		ldrb	r2, [r7, #607]	@ zero_extendqisi2
 1624 05be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1625 05c0 9A42     		cmp	r2, r3
 1626 05c2 FFF4B3AD 		bcc	.L102
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****     }
 457:..\src/command_processing.c ****     
 458:..\src/command_processing.c ****     // Add menu
 459:..\src/command_processing.c ****     for (j = 0; j < num_menus; j++) {
 1627              		.loc 1 459 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 52


 1628 05c6 0023     		movs	r3, #0
 1629 05c8 87F85C32 		strb	r3, [r7, #604]
 1630 05cc C0E0     		b	.L103
 1631              	.L111:
 460:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1632              		.loc 1 460 0
 1633 05ce 774B     		ldr	r3, .L116
 1634 05d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1635 05d2 07F14C03 		add	r3, r7, #76
 1636 05d6 1A70     		strb	r2, [r3]
 461:..\src/command_processing.c ****         for (count = 0; count <10 ; count++){            
 1637              		.loc 1 461 0
 1638 05d8 0023     		movs	r3, #0
 1639 05da 87F85B32 		strb	r3, [r7, #603]
 1640 05de 7AE0     		b	.L104
 1641              	.L108:
 462:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1642              		.loc 1 462 0
 1643 05e0 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1644 05e4 2C22     		movs	r2, #44
 1645 05e6 02FB03F3 		mul	r3, r2, r3
 1646 05ea 3A1D     		adds	r2, r7, #4
 1647 05ec 1268     		ldr	r2, [r2]
 1648 05ee 1A44     		add	r2, r2, r3
 1649 05f0 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1650 05f4 9B00     		lsls	r3, r3, #2
 1651 05f6 1344     		add	r3, r3, r2
 1652 05f8 5B68     		ldr	r3, [r3, #4]
 1653 05fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1654 05fc 002B     		cmp	r3, #0
 1655 05fe 24D1     		bne	.L105
 463:..\src/command_processing.c ****                 if (MENU_LIST[j].reset == TRUE){
 1656              		.loc 1 463 0
 1657 0600 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1658 0604 2C22     		movs	r2, #44
 1659 0606 02FB03F3 		mul	r3, r2, r3
 1660 060a 3A1D     		adds	r2, r7, #4
 1661 060c 1268     		ldr	r2, [r2]
 1662 060e 1344     		add	r3, r3, r2
 1663 0610 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1664 0612 012B     		cmp	r3, #1
 1665 0614 15D1     		bne	.L106
 464:..\src/command_processing.c ****                     strcat(aux_str1,"The board will reset\n");
 1666              		.loc 1 464 0
 1667 0616 07F14C03 		add	r3, r7, #76
 1668 061a 1846     		mov	r0, r3
 1669 061c FFF7FEFF 		bl	strlen
 1670 0620 0346     		mov	r3, r0
 1671 0622 1A46     		mov	r2, r3
 1672 0624 07F14C03 		add	r3, r7, #76
 1673 0628 1344     		add	r3, r3, r2
 1674 062a 614A     		ldr	r2, .L116+4
 1675 062c 1D46     		mov	r5, r3
 1676 062e 1446     		mov	r4, r2
 1677 0630 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1678 0632 2860     		str	r0, [r5]	@ unaligned
 1679 0634 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 53


 1680 0636 AA60     		str	r2, [r5, #8]	@ unaligned
 1681 0638 EB60     		str	r3, [r5, #12]	@ unaligned
 1682 063a 2068     		ldr	r0, [r4]	@ unaligned
 1683 063c 2861     		str	r0, [r5, #16]	@ unaligned
 1684 063e A388     		ldrh	r3, [r4, #4]	@ unaligned
 1685 0640 AB82     		strh	r3, [r5, #20]	@ unaligned
 1686              	.L106:
 465:..\src/command_processing.c ****                 }
 466:..\src/command_processing.c ****                 count = 10;
 1687              		.loc 1 466 0
 1688 0642 0A23     		movs	r3, #10
 1689 0644 87F85B32 		strb	r3, [r7, #603]
 1690 0648 40E0     		b	.L107
 1691              	.L105:
 467:..\src/command_processing.c ****             }            
 468:..\src/command_processing.c ****             else {
 469:..\src/command_processing.c ****                 itoa(count, aux_char, 10);
 1692              		.loc 1 469 0
 1693 064a 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1694 064e 07F11401 		add	r1, r7, #20
 1695 0652 0A22     		movs	r2, #10
 1696 0654 1846     		mov	r0, r3
 1697 0656 FFF7FEFF 		bl	itoa
 470:..\src/command_processing.c ****                 strcat(aux_str1,aux_char);
 1698              		.loc 1 470 0
 1699 065a 07F11402 		add	r2, r7, #20
 1700 065e 07F14C03 		add	r3, r7, #76
 1701 0662 1146     		mov	r1, r2
 1702 0664 1846     		mov	r0, r3
 1703 0666 FFF7FEFF 		bl	strcat
 471:..\src/command_processing.c ****                 strcat(aux_str1," -> ");
 1704              		.loc 1 471 0
 1705 066a 07F14C03 		add	r3, r7, #76
 1706 066e 1846     		mov	r0, r3
 1707 0670 FFF7FEFF 		bl	strlen
 1708 0674 0346     		mov	r3, r0
 1709 0676 1A46     		mov	r2, r3
 1710 0678 07F14C03 		add	r3, r7, #76
 1711 067c 1344     		add	r3, r3, r2
 1712 067e 4D4A     		ldr	r2, .L116+8
 1713 0680 1068     		ldr	r0, [r2]	@ unaligned
 1714 0682 1860     		str	r0, [r3]	@ unaligned
 1715 0684 1279     		ldrb	r2, [r2, #4]
 1716 0686 1A71     		strb	r2, [r3, #4]
 472:..\src/command_processing.c ****                 strcat(aux_str1,(char*)MENU_LIST[j].choice[count]);
 1717              		.loc 1 472 0
 1718 0688 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1719 068c 2C22     		movs	r2, #44
 1720 068e 02FB03F3 		mul	r3, r2, r3
 1721 0692 3A1D     		adds	r2, r7, #4
 1722 0694 1268     		ldr	r2, [r2]
 1723 0696 1A44     		add	r2, r2, r3
 1724 0698 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1725 069c 9B00     		lsls	r3, r3, #2
 1726 069e 1344     		add	r3, r3, r2
 1727 06a0 5A68     		ldr	r2, [r3, #4]
 1728 06a2 07F14C03 		add	r3, r7, #76
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 54


 1729 06a6 1146     		mov	r1, r2
 1730 06a8 1846     		mov	r0, r3
 1731 06aa FFF7FEFF 		bl	strcat
 473:..\src/command_processing.c ****                 strcat(aux_str1,"\n");
 1732              		.loc 1 473 0
 1733 06ae 07F14C03 		add	r3, r7, #76
 1734 06b2 1846     		mov	r0, r3
 1735 06b4 FFF7FEFF 		bl	strlen
 1736 06b8 0346     		mov	r3, r0
 1737 06ba 1A46     		mov	r2, r3
 1738 06bc 07F14C03 		add	r3, r7, #76
 1739 06c0 1344     		add	r3, r3, r2
 1740 06c2 3D49     		ldr	r1, .L116+12
 1741 06c4 1A46     		mov	r2, r3
 1742 06c6 0B46     		mov	r3, r1
 1743 06c8 1B88     		ldrh	r3, [r3]	@ unaligned
 1744 06ca 1380     		strh	r3, [r2]	@ unaligned
 1745              	.L107:
 461:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1746              		.loc 1 461 0 discriminator 2
 1747 06cc 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1748 06d0 0133     		adds	r3, r3, #1
 1749 06d2 87F85B32 		strb	r3, [r7, #603]
 1750              	.L104:
 461:..\src/command_processing.c ****             if (!strcmp(MENU_LIST[j].choice[count],"")){
 1751              		.loc 1 461 0 is_stmt 0 discriminator 1
 1752 06d6 97F85B32 		ldrb	r3, [r7, #603]	@ zero_extendqisi2
 1753 06da 092B     		cmp	r3, #9
 1754 06dc 80D9     		bls	.L108
 474:..\src/command_processing.c ****             }    
 475:..\src/command_processing.c ****         }
 476:..\src/command_processing.c ****         string_length = strlen(aux_str1);
 1755              		.loc 1 476 0 is_stmt 1
 1756 06de 07F14C03 		add	r3, r7, #76
 1757 06e2 1846     		mov	r0, r3
 1758 06e4 FFF7FEFF 		bl	strlen
 1759 06e8 0346     		mov	r3, r0
 1760 06ea 87F85E32 		strb	r3, [r7, #606]
 477:..\src/command_processing.c ****         
 478:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 1761              		.loc 1 478 0
 1762 06ee 97F85E32 		ldrb	r3, [r7, #606]
 1763 06f2 87F85D32 		strb	r3, [r7, #605]
 1764 06f6 22E0     		b	.L109
 1765              	.L110:
 479:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1766              		.loc 1 479 0 discriminator 3
 1767 06f8 07F10F03 		add	r3, r7, #15
 1768 06fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 06fe 3222     		movs	r2, #50
 1770 0700 02FB03F3 		mul	r3, r2, r3
 1771 0704 9A1C     		adds	r2, r3, #2
 1772 0706 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1773 070a 9621     		movs	r1, #150
 1774 070c 01FB03F3 		mul	r3, r1, r3
 1775 0710 1A44     		add	r2, r2, r3
 1776 0712 97F85E32 		ldrb	r3, [r7, #606]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 55


 1777 0716 1A44     		add	r2, r2, r3
 1778 0718 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1779 071c D31A     		subs	r3, r2, r3
 1780 071e 97F85E12 		ldrb	r1, [r7, #606]	@ zero_extendqisi2
 1781 0722 97F85D22 		ldrb	r2, [r7, #605]	@ zero_extendqisi2
 1782 0726 8A1A     		subs	r2, r1, r2
 1783 0728 07F14C01 		add	r1, r7, #76
 1784 072c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1785 072e D7F84422 		ldr	r2, [r7, #580]
 1786 0732 D154     		strb	r1, [r2, r3]
 478:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1787              		.loc 1 478 0 discriminator 3
 1788 0734 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1789 0738 013B     		subs	r3, r3, #1
 1790 073a 87F85D32 		strb	r3, [r7, #605]
 1791              	.L109:
 478:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*num_params + 2 + j*PARAM_MENU_SLOT + string_length - i] = aux_s
 1792              		.loc 1 478 0 is_stmt 0 discriminator 1
 1793 073e 97F85D32 		ldrb	r3, [r7, #605]	@ zero_extendqisi2
 1794 0742 002B     		cmp	r3, #0
 1795 0744 D8D1     		bne	.L110
 459:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1796              		.loc 1 459 0 is_stmt 1 discriminator 2
 1797 0746 97F85C32 		ldrb	r3, [r7, #604]	@ zero_extendqisi2
 1798 074a 0133     		adds	r3, r3, #1
 1799 074c 87F85C32 		strb	r3, [r7, #604]
 1800              	.L103:
 459:..\src/command_processing.c ****         sprintf(aux_str1,"");
 1801              		.loc 1 459 0 is_stmt 0 discriminator 1
 1802 0750 07F10E03 		add	r3, r7, #14
 1803 0754 97F85C22 		ldrb	r2, [r7, #604]	@ zero_extendqisi2
 1804 0758 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1805 075a 9A42     		cmp	r2, r3
 1806 075c FFF437AF 		bcc	.L111
 480:..\src/command_processing.c ****     }
 481:..\src/command_processing.c ****         
 482:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 1807              		.loc 1 482 0 is_stmt 1
 1808 0760 B7F84E32 		ldrh	r3, [r7, #590]
 1809 0764 5C1E     		subs	r4, r3, #1
 1810 0766 D7F84422 		ldr	r2, [r7, #580]
 1811 076a B7F84E32 		ldrh	r3, [r7, #590]	@ movhi
 1812 076e DBB2     		uxtb	r3, r3
 1813 0770 013B     		subs	r3, r3, #1
 1814 0772 DBB2     		uxtb	r3, r3
 1815 0774 1946     		mov	r1, r3
 1816 0776 1046     		mov	r0, r2
 1817 0778 FFF7FEFF 		bl	LCRChecksum
 1818 077c 0346     		mov	r3, r0
 1819 077e 1A46     		mov	r2, r3
 1820 0780 D7F84432 		ldr	r3, [r7, #580]
 1821 0784 1A55     		strb	r2, [r3, r4]
 483:..\src/command_processing.c ****     
 484:..\src/command_processing.c ****     if (sendToDevice)
 1822              		.loc 1 484 0
 1823 0786 97F88032 		ldrb	r3, [r7, #640]	@ zero_extendqisi2
 1824 078a 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 56


 1825 078c 07D0     		beq	.L112
 485:..\src/command_processing.c ****     {commWrite(packet_data, packet_length);  
 1826              		.loc 1 485 0
 1827 078e D7F84432 		ldr	r3, [r7, #580]
 1828 0792 B7F84E22 		ldrh	r2, [r7, #590]
 1829 0796 1146     		mov	r1, r2
 1830 0798 1846     		mov	r0, r3
 1831 079a FFF7FEFF 		bl	commWrite
 1832              	.L112:
 1833 079e B546     		mov	sp, r6
 486:..\src/command_processing.c ****     }
 487:..\src/command_processing.c ****     else {
 488:..\src/command_processing.c ****        //Update pointer (Bad choice since pointing to dead variable in another function, to fix)
 489:..\src/command_processing.c ****       // longPkgP = (char*)&packet_data[0];
 490:..\src/command_processing.c ****       // longPkgSize = packet_length;
 491:..\src/command_processing.c ****     }
 492:..\src/command_processing.c **** }
 1834              		.loc 1 492 0
 1835 07a0 00BF     		nop
 1836 07a2 07F51977 		add	r7, r7, #612
 1837              		.cfi_def_cfa_offset 28
 1838 07a6 BD46     		mov	sp, r7
 1839              		.cfi_def_cfa_register 13
 1840              		@ sp needed
 1841 07a8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1842              	.L117:
 1843              		.align	2
 1844              	.L116:
 1845 07ac 00000000 		.word	.LC8
 1846 07b0 08000000 		.word	.LC15
 1847 07b4 20000000 		.word	.LC16
 1848 07b8 28000000 		.word	.LC17
 1849              		.cfi_endproc
 1850              	.LFE68:
 1851              		.size	get_param_list, .-get_param_list
 1852              		.section	.rodata
 1853 002a 0000     		.align	2
 1854              	.LC19:
 1855 002c 44657669 		.ascii	"Device ID:\000"
 1855      63652049 
 1855      443A00
 1856 0037 00       		.align	2
 1857              	.LC20:
 1858 0038 454D4720 		.ascii	"EMG thresholds:\000"
 1858      74687265 
 1858      73686F6C 
 1858      64733A00 
 1859              		.align	2
 1860              	.LC21:
 1861 0048 454D4720 		.ascii	"EMG max values:\000"
 1861      6D617820 
 1861      76616C75 
 1861      65733A00 
 1862              		.align	2
 1863              	.LC22:
 1864 0058 454D4720 		.ascii	"EMG max speeds:\000"
 1864      6D617820 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 57


 1864      73706565 
 1864      64733A00 
 1865              		.align	2
 1866              	.LC23:
 1867 0068 454D4720 		.ascii	"EMG inversion:\000"
 1867      696E7665 
 1867      7273696F 
 1867      6E3A00
 1868 0077 00       		.align	2
 1869              	.LC24:
 1870 0078 4D617374 		.ascii	"Master Mode:\000"
 1870      6572204D 
 1870      6F64653A 
 1870      00
 1871 0085 000000   		.align	2
 1872              	.LC25:
 1873 0088 536C6176 		.ascii	"Slave ID:\000"
 1873      65204944 
 1873      3A00
 1874 0092 0000     		.align	2
 1875              	.LC26:
 1876 0094 536C6176 		.ascii	"Slave resolution:\000"
 1876      65207265 
 1876      736F6C75 
 1876      74696F6E 
 1876      3A00
 1877 00a6 0000     		.align	2
 1878              	.LC27:
 1879 00a8 496E7075 		.ascii	"Input mode:\000"
 1879      74206D6F 
 1879      64653A00 
 1880              		.align	2
 1881              	.LC28:
 1882 00b4 506F732E 		.ascii	"Pos. limits [inf, sup]:\000"
 1882      206C696D 
 1882      69747320 
 1882      5B696E66 
 1882      2C207375 
 1883              		.align	2
 1884              	.LC29:
 1885 00cc 56696272 		.ascii	"Vibrotactile Feedback:\000"
 1885      6F746163 
 1885      74696C65 
 1885      20466565 
 1885      64626163 
 1886 00e3 00       		.align	2
 1887              	.LC30:
 1888 00e4 41697220 		.ascii	"Air Chamber Feedback:\000"
 1888      4368616D 
 1888      62657220 
 1888      46656564 
 1888      6261636B 
 1889 00fa 0000     		.align	2
 1890              	.LC31:
 1891 00fc 4D617869 		.ascii	"Maximum slave residual current:\000"
 1891      6D756D20 
 1891      736C6176 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 58


 1891      65207265 
 1891      73696475 
 1892              		.align	2
 1893              	.LC32:
 1894 011c 4D617869 		.ascii	"Maximum pressure feedback (kPa):\000"
 1894      6D756D20 
 1894      70726573 
 1894      73757265 
 1894      20666565 
 1895 013d 000000   		.align	2
 1896              	.LC33:
 1897 0140 50726F70 		.ascii	"Proportional pressure error gain:\000"
 1897      6F727469 
 1897      6F6E616C 
 1897      20707265 
 1897      73737572 
 1898 0162 0000     		.align	2
 1899              	.LC0:
 1900 0164 20557362 		.ascii	" Usb\000"
 1900      00
 1901 0169 000000   		.align	2
 1902              	.LC1:
 1903 016c 2048616E 		.ascii	" Handle\000"
 1903      646C6500 
 1904              		.align	2
 1905              	.LC2:
 1906 0174 20454D47 		.ascii	" EMG proportional\000"
 1906      2070726F 
 1906      706F7274 
 1906      696F6E61 
 1906      6C00
 1907 0186 0000     		.align	2
 1908              	.LC3:
 1909 0188 20454D47 		.ascii	" EMG Integral\000"
 1909      20496E74 
 1909      65677261 
 1909      6C00
 1910 0196 0000     		.align	2
 1911              	.LC4:
 1912 0198 20454D47 		.ascii	" EMG FCFS\000"
 1912      20464346 
 1912      5300
 1913 01a2 0000     		.align	2
 1914              	.LC5:
 1915 01a4 20454D47 		.ascii	" EMG FCFS Advanced\000"
 1915      20464346 
 1915      53204164 
 1915      76616E63 
 1915      656400
 1916 01b7 00       		.align	2
 1917              	.LC6:
 1918 01b8 204A6F79 		.ascii	" Joystick\000"
 1918      73746963 
 1918      6B00
 1919 01c2 0000     		.align	2
 1920              	.LC7:
 1921 01c4 20454D47 		.ascii	" EMG proportional NC\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 59


 1921      2070726F 
 1921      706F7274 
 1921      696F6E61 
 1921      6C204E43 
 1922 01d9 000000   		.align	2
 1923              	.LC9:
 1924 01dc 204E4F00 		.ascii	" NO\000"
 1925              		.align	2
 1926              	.LC10:
 1927 01e0 20594553 		.ascii	" YES\000"
 1927      00
 1928 01e5 000000   		.align	2
 1929              	.LC11:
 1930 01e8 204F4646 		.ascii	" OFF\000"
 1930      00
 1931 01ed 000000   		.align	2
 1932              	.LC12:
 1933 01f0 204F4E00 		.ascii	" ON\000"
 1934              		.align	2
 1935              	.LC18:
 1936 01f4 01       		.byte	1
 1937 01f5 00       		.byte	0
 1938 01f6 0000     		.space	2
 1939 01f8 64010000 		.word	.LC0
 1940 01fc 6C010000 		.word	.LC1
 1941 0200 74010000 		.word	.LC2
 1942 0204 88010000 		.word	.LC3
 1943 0208 98010000 		.word	.LC4
 1944 020c A4010000 		.word	.LC5
 1945 0210 B8010000 		.word	.LC6
 1946 0214 C4010000 		.word	.LC7
 1947 0218 00000000 		.word	.LC8
 1948 021c 00000000 		.word	.LC8
 1949 0220 03       		.byte	3
 1950 0221 00       		.byte	0
 1951 0222 0000     		.space	2
 1952 0224 DC010000 		.word	.LC9
 1953 0228 E0010000 		.word	.LC10
 1954 022c 00000000 		.word	.LC8
 1955 0230 00000000 		.word	.LC8
 1956 0234 00000000 		.word	.LC8
 1957 0238 00000000 		.word	.LC8
 1958 023c 00000000 		.word	.LC8
 1959 0240 00000000 		.word	.LC8
 1960 0244 00000000 		.word	.LC8
 1961 0248 00000000 		.word	.LC8
 1962 024c 05       		.byte	5
 1963 024d 01       		.byte	1
 1964 024e 0000     		.space	2
 1965 0250 E8010000 		.word	.LC11
 1966 0254 F0010000 		.word	.LC12
 1967 0258 00000000 		.word	.LC8
 1968 025c 00000000 		.word	.LC8
 1969 0260 00000000 		.word	.LC8
 1970 0264 00000000 		.word	.LC8
 1971 0268 00000000 		.word	.LC8
 1972 026c 00000000 		.word	.LC8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 60


 1973 0270 00000000 		.word	.LC8
 1974 0274 00000000 		.word	.LC8
 1975              		.section	.text.manage_param_list,"ax",%progbits
 1976              		.align	2
 1977              		.global	manage_param_list
 1978              		.thumb
 1979              		.thumb_func
 1980              		.type	manage_param_list, %function
 1981              	manage_param_list:
 1982              	.LFB69:
 493:..\src/command_processing.c **** 
 494:..\src/command_processing.c **** //==============================================================================
 495:..\src/command_processing.c **** // MANAGE PARAM LIST
 496:..\src/command_processing.c **** //==============================================================================
 497:..\src/command_processing.c **** void manage_param_list(uint16 index, uint8 sendToDevice) {
 1983              		.loc 1 497 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 456
 1986              		@ frame_needed = 1, uses_anonymous_args = 0
 1987 0000 90B5     		push	{r4, r7, lr}
 1988              		.cfi_def_cfa_offset 12
 1989              		.cfi_offset 4, -12
 1990              		.cfi_offset 7, -8
 1991              		.cfi_offset 14, -4
 1992 0002 F5B0     		sub	sp, sp, #468
 1993              		.cfi_def_cfa_offset 480
 1994 0004 02AF     		add	r7, sp, #8
 1995              		.cfi_def_cfa 7, 472
 1996 0006 0246     		mov	r2, r0
 1997 0008 BB1D     		adds	r3, r7, #6
 1998 000a 1A80     		strh	r2, [r3]	@ movhi
 1999 000c 7B1D     		adds	r3, r7, #5
 2000 000e 0A46     		mov	r2, r1
 2001 0010 1A70     		strb	r2, [r3]
 498:..\src/command_processing.c ****     uint8 CYDATA i, j;
 499:..\src/command_processing.c ****     
 500:..\src/command_processing.c ****     uint8 PARAM_IDX;
 501:..\src/command_processing.c ****          
 502:..\src/command_processing.c ****     // Arrays
 503:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 2002              		.loc 1 503 0
 2003 0012 EE4B     		ldr	r3, .L134
 2004 0014 C7F8C031 		str	r3, [r7, #448]
 504:..\src/command_processing.c ****     
 505:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 2005              		.loc 1 505 0
 2006 0018 BB1D     		adds	r3, r7, #6
 2007 001a 1B88     		ldrh	r3, [r3]
 2008 001c 002B     		cmp	r3, #0
 2009 001e 02D0     		beq	.L119
 506:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 2010              		.loc 1 506 0
 2011 0020 EB4B     		ldr	r3, .L134+4
 2012 0022 C7F8C031 		str	r3, [r7, #448]
 2013              	.L119:
 507:..\src/command_processing.c ****     }
 508:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 61


 509:..\src/command_processing.c ****     struct menu menu_type;
 510:..\src/command_processing.c ****     
 511:..\src/command_processing.c ****     //------------------ BEGIN OF MENU LIST --------------------//  
 512:..\src/command_processing.c ****         const struct menu MENU_LIST[] = {
 2014              		.loc 1 512 0
 2015 0026 EB4A     		ldr	r2, .L134+8
 2016 0028 07F58673 		add	r3, r7, #268
 2017 002c 1146     		mov	r1, r2
 2018 002e 8422     		movs	r2, #132
 2019 0030 1846     		mov	r0, r3
 2020 0032 FFF7FEFF 		bl	memcpy
 513:..\src/command_processing.c ****     //  {num            , RESET     , { choice_0                  , choice_1                , choic
 514:..\src/command_processing.c ****         {MENU_INPUT     , FALSE     , { " Usb"                    , " Handle"               , " EMG
 515:..\src/command_processing.c ****         {MENU_Y_N       , FALSE     , { " NO"                     , " YES"                  , ""   
 516:..\src/command_processing.c ****         {MENU_ON_OFF    , TRUE      , { " OFF"                    , " ON"                   , ""   
 517:..\src/command_processing.c ****        };
 518:..\src/command_processing.c ****     //------------------ END  OF MENU LIST --------------------//  
 519:..\src/command_processing.c ****         
 520:..\src/command_processing.c ****     uint8 NUM_MENUs = sizeof(MENU_LIST)/sizeof(menu_type);  
 2021              		.loc 1 520 0
 2022 0036 0323     		movs	r3, #3
 2023 0038 87F8BF31 		strb	r3, [r7, #447]
 521:..\src/command_processing.c ****     
 522:..\src/command_processing.c ****     struct parameter param_type;   
 523:..\src/command_processing.c ****     
 524:..\src/command_processing.c ****     const struct parameter PARAM_LIST[] = {
 525:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 526:..\src/command_processing.c ****         //DEVICE_PARAMETERS    
 527:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->dev.id)                           , TYPE_UINT8      , 1         , 
 2024              		.loc 1 527 0
 2025 003c D7F8C031 		ldr	r3, [r7, #448]
 2026 0040 03F11002 		add	r2, r3, #16
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2027              		.loc 1 524 0
 2028 0044 07F10C03 		add	r3, r7, #12
 2029 0048 1A60     		str	r2, [r3]
 2030 004a 07F10C03 		add	r3, r7, #12
 2031 004e 0222     		movs	r2, #2
 2032 0050 1A71     		strb	r2, [r3, #4]
 2033 0052 07F10C03 		add	r3, r7, #12
 2034 0056 0122     		movs	r2, #1
 2035 0058 5A71     		strb	r2, [r3, #5]
 2036 005a 07F10C03 		add	r3, r7, #12
 2037 005e DE4A     		ldr	r2, .L134+12
 2038 0060 9A60     		str	r2, [r3, #8]
 2039 0062 07F10C03 		add	r3, r7, #12
 2040 0066 0022     		movs	r2, #0
 2041 0068 1A73     		strb	r2, [r3, #12]
 2042 006a 07F10C03 		add	r3, r7, #12
 2043 006e 0022     		movs	r2, #0
 2044 0070 5A73     		strb	r2, [r3, #13]
 2045 0072 07F10C03 		add	r3, r7, #12
 2046 0076 0022     		movs	r2, #0
 2047 0078 9A73     		strb	r2, [r3, #14]
 2048 007a 07F10C03 		add	r3, r7, #12
 2049 007e 0122     		movs	r2, #1
 2050 0080 DA73     		strb	r2, [r3, #15]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 62


 528:..\src/command_processing.c ****         
 529:..\src/command_processing.c ****         //EMG_PARAMETERS    
 530:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.emg_threshold[0])             , TYPE_UINT16     , 2         , 
 2051              		.loc 1 530 0
 2052 0082 D7F8C031 		ldr	r3, [r7, #448]
 2053 0086 03F13002 		add	r2, r3, #48
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2054              		.loc 1 524 0
 2055 008a 07F10C03 		add	r3, r7, #12
 2056 008e 1A61     		str	r2, [r3, #16]
 2057 0090 07F10C03 		add	r3, r7, #12
 2058 0094 0422     		movs	r2, #4
 2059 0096 1A75     		strb	r2, [r3, #20]
 2060 0098 07F10C03 		add	r3, r7, #12
 2061 009c 0222     		movs	r2, #2
 2062 009e 5A75     		strb	r2, [r3, #21]
 2063 00a0 07F10C03 		add	r3, r7, #12
 2064 00a4 CD4A     		ldr	r2, .L134+16
 2065 00a6 9A61     		str	r2, [r3, #24]
 2066 00a8 07F10C03 		add	r3, r7, #12
 2067 00ac 0022     		movs	r2, #0
 2068 00ae 1A77     		strb	r2, [r3, #28]
 2069 00b0 07F10C03 		add	r3, r7, #12
 2070 00b4 1E22     		movs	r2, #30
 2071 00b6 5A77     		strb	r2, [r3, #29]
 2072 00b8 07F10C03 		add	r3, r7, #12
 2073 00bc 0022     		movs	r2, #0
 2074 00be 9A77     		strb	r2, [r3, #30]
 2075 00c0 07F10C03 		add	r3, r7, #12
 2076 00c4 0122     		movs	r2, #1
 2077 00c6 DA77     		strb	r2, [r3, #31]
 531:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.emg_max_value[0])             , TYPE_UINT32     , 2         , 
 2078              		.loc 1 531 0
 2079 00c8 D7F8C031 		ldr	r3, [r7, #448]
 2080 00cc 03F13402 		add	r2, r3, #52
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2081              		.loc 1 524 0
 2082 00d0 07F10C03 		add	r3, r7, #12
 2083 00d4 1A62     		str	r2, [r3, #32]
 2084 00d6 07F10C03 		add	r3, r7, #12
 2085 00da 0622     		movs	r2, #6
 2086 00dc 83F82420 		strb	r2, [r3, #36]
 2087 00e0 07F10C03 		add	r3, r7, #12
 2088 00e4 0222     		movs	r2, #2
 2089 00e6 83F82520 		strb	r2, [r3, #37]
 2090 00ea 07F10C03 		add	r3, r7, #12
 2091 00ee BC4A     		ldr	r2, .L134+20
 2092 00f0 9A62     		str	r2, [r3, #40]
 2093 00f2 07F10C03 		add	r3, r7, #12
 2094 00f6 0022     		movs	r2, #0
 2095 00f8 83F82C20 		strb	r2, [r3, #44]
 2096 00fc 07F10C03 		add	r3, r7, #12
 2097 0100 1E22     		movs	r2, #30
 2098 0102 83F82D20 		strb	r2, [r3, #45]
 2099 0106 07F10C03 		add	r3, r7, #12
 2100 010a 0022     		movs	r2, #0
 2101 010c 83F82E20 		strb	r2, [r3, #46]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 63


 2102 0110 07F10C03 		add	r3, r7, #12
 2103 0114 0122     		movs	r2, #1
 2104 0116 83F82F20 		strb	r2, [r3, #47]
 532:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.emg_speed[0])                 , TYPE_UINT8      , 2         , 
 2105              		.loc 1 532 0
 2106 011a D7F8C031 		ldr	r3, [r7, #448]
 2107 011e 03F13C02 		add	r2, r3, #60
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2108              		.loc 1 524 0
 2109 0122 07F10C03 		add	r3, r7, #12
 2110 0126 1A63     		str	r2, [r3, #48]
 2111 0128 07F10C03 		add	r3, r7, #12
 2112 012c 0222     		movs	r2, #2
 2113 012e 83F83420 		strb	r2, [r3, #52]
 2114 0132 07F10C03 		add	r3, r7, #12
 2115 0136 0222     		movs	r2, #2
 2116 0138 83F83520 		strb	r2, [r3, #53]
 2117 013c 07F10C03 		add	r3, r7, #12
 2118 0140 A84A     		ldr	r2, .L134+24
 2119 0142 9A63     		str	r2, [r3, #56]
 2120 0144 07F10C03 		add	r3, r7, #12
 2121 0148 0022     		movs	r2, #0
 2122 014a 83F83C20 		strb	r2, [r3, #60]
 2123 014e 07F10C03 		add	r3, r7, #12
 2124 0152 1E22     		movs	r2, #30
 2125 0154 83F83D20 		strb	r2, [r3, #61]
 2126 0158 07F10C03 		add	r3, r7, #12
 2127 015c 0022     		movs	r2, #0
 2128 015e 83F83E20 		strb	r2, [r3, #62]
 2129 0162 07F10C03 		add	r3, r7, #12
 2130 0166 0122     		movs	r2, #1
 2131 0168 83F83F20 		strb	r2, [r3, #63]
 533:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->emg.switch_emg)                   , TYPE_FLAG       , 1         , 
 2132              		.loc 1 533 0
 2133 016c D7F8C031 		ldr	r3, [r7, #448]
 2134 0170 03F13E02 		add	r2, r3, #62
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2135              		.loc 1 524 0
 2136 0174 07F10C03 		add	r3, r7, #12
 2137 0178 1A64     		str	r2, [r3, #64]
 2138 017a 07F10C03 		add	r3, r7, #12
 2139 017e 0022     		movs	r2, #0
 2140 0180 83F84420 		strb	r2, [r3, #68]
 2141 0184 07F10C03 		add	r3, r7, #12
 2142 0188 0122     		movs	r2, #1
 2143 018a 83F84520 		strb	r2, [r3, #69]
 2144 018e 07F10C03 		add	r3, r7, #12
 2145 0192 954A     		ldr	r2, .L134+28
 2146 0194 9A64     		str	r2, [r3, #72]
 2147 0196 07F10C03 		add	r3, r7, #12
 2148 019a 0322     		movs	r2, #3
 2149 019c 83F84C20 		strb	r2, [r3, #76]
 2150 01a0 07F10C03 		add	r3, r7, #12
 2151 01a4 1E22     		movs	r2, #30
 2152 01a6 83F84D20 		strb	r2, [r3, #77]
 2153 01aa 07F10C03 		add	r3, r7, #12
 2154 01ae 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 64


 2155 01b0 83F84E20 		strb	r2, [r3, #78]
 2156 01b4 07F10C03 		add	r3, r7, #12
 2157 01b8 0122     		movs	r2, #1
 2158 01ba 83F84F20 		strb	r2, [r3, #79]
 534:..\src/command_processing.c ****         
 535:..\src/command_processing.c ****         //MASTER MODE PARAMETERS
 536:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->MS.master_mode_active)            , TYPE_FLAG       , 1         , 
 2159              		.loc 1 536 0
 2160 01be D7F8C031 		ldr	r3, [r7, #448]
 2161 01c2 03F14002 		add	r2, r3, #64
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2162              		.loc 1 524 0
 2163 01c6 07F10C03 		add	r3, r7, #12
 2164 01ca 1A65     		str	r2, [r3, #80]
 2165 01cc 07F10C03 		add	r3, r7, #12
 2166 01d0 0022     		movs	r2, #0
 2167 01d2 83F85420 		strb	r2, [r3, #84]
 2168 01d6 07F10C03 		add	r3, r7, #12
 2169 01da 0122     		movs	r2, #1
 2170 01dc 83F85520 		strb	r2, [r3, #85]
 2171 01e0 07F10C03 		add	r3, r7, #12
 2172 01e4 814A     		ldr	r2, .L134+32
 2173 01e6 9A65     		str	r2, [r3, #88]
 2174 01e8 07F10C03 		add	r3, r7, #12
 2175 01ec 0522     		movs	r2, #5
 2176 01ee 83F85C20 		strb	r2, [r3, #92]
 2177 01f2 07F10C03 		add	r3, r7, #12
 2178 01f6 5022     		movs	r2, #80
 2179 01f8 83F85D20 		strb	r2, [r3, #93]
 2180 01fc 07F10C03 		add	r3, r7, #12
 2181 0200 0022     		movs	r2, #0
 2182 0202 83F85E20 		strb	r2, [r3, #94]
 2183 0206 07F10C03 		add	r3, r7, #12
 2184 020a 0122     		movs	r2, #1
 2185 020c 83F85F20 		strb	r2, [r3, #95]
 537:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->MS.slave_ID)                      , TYPE_UINT8      , 1         , 
 2186              		.loc 1 537 0
 2187 0210 D7F8C031 		ldr	r3, [r7, #448]
 2188 0214 03F14102 		add	r2, r3, #65
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2189              		.loc 1 524 0
 2190 0218 07F10C03 		add	r3, r7, #12
 2191 021c 1A66     		str	r2, [r3, #96]
 2192 021e 07F10C03 		add	r3, r7, #12
 2193 0222 0222     		movs	r2, #2
 2194 0224 83F86420 		strb	r2, [r3, #100]
 2195 0228 07F10C03 		add	r3, r7, #12
 2196 022c 0122     		movs	r2, #1
 2197 022e 83F86520 		strb	r2, [r3, #101]
 2198 0232 07F10C03 		add	r3, r7, #12
 2199 0236 6E4A     		ldr	r2, .L134+36
 2200 0238 9A66     		str	r2, [r3, #104]
 2201 023a 07F10C03 		add	r3, r7, #12
 2202 023e 0022     		movs	r2, #0
 2203 0240 83F86C20 		strb	r2, [r3, #108]
 2204 0244 07F10C03 		add	r3, r7, #12
 2205 0248 5022     		movs	r2, #80
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 65


 2206 024a 83F86D20 		strb	r2, [r3, #109]
 2207 024e 07F10C03 		add	r3, r7, #12
 2208 0252 0022     		movs	r2, #0
 2209 0254 83F86E20 		strb	r2, [r3, #110]
 2210 0258 07F10C03 		add	r3, r7, #12
 2211 025c 0122     		movs	r2, #1
 2212 025e 83F86F20 		strb	r2, [r3, #111]
 538:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->SH_config.res)                    , TYPE_UINT8      , 1         , 
 2213              		.loc 1 538 0
 2214 0262 D7F8C031 		ldr	r3, [r7, #448]
 2215 0266 03F12902 		add	r2, r3, #41
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2216              		.loc 1 524 0
 2217 026a 07F10C03 		add	r3, r7, #12
 2218 026e 1A67     		str	r2, [r3, #112]
 2219 0270 07F10C03 		add	r3, r7, #12
 2220 0274 0222     		movs	r2, #2
 2221 0276 83F87420 		strb	r2, [r3, #116]
 2222 027a 07F10C03 		add	r3, r7, #12
 2223 027e 0122     		movs	r2, #1
 2224 0280 83F87520 		strb	r2, [r3, #117]
 2225 0284 07F10C03 		add	r3, r7, #12
 2226 0288 5A4A     		ldr	r2, .L134+40
 2227 028a 9A67     		str	r2, [r3, #120]
 2228 028c 07F10C03 		add	r3, r7, #12
 2229 0290 0022     		movs	r2, #0
 2230 0292 83F87C20 		strb	r2, [r3, #124]
 2231 0296 07F10C03 		add	r3, r7, #12
 2232 029a 5022     		movs	r2, #80
 2233 029c 83F87D20 		strb	r2, [r3, #125]
 2234 02a0 07F10C03 		add	r3, r7, #12
 2235 02a4 0022     		movs	r2, #0
 2236 02a6 83F87E20 		strb	r2, [r3, #126]
 2237 02aa 07F10C03 		add	r3, r7, #12
 2238 02ae 0122     		movs	r2, #1
 2239 02b0 83F87F20 		strb	r2, [r3, #127]
 539:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->SH_config.input_mode)             , TYPE_FLAG       , 1         , 
 2240              		.loc 1 539 0
 2241 02b4 D7F8C031 		ldr	r3, [r7, #448]
 2242 02b8 03F12802 		add	r2, r3, #40
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2243              		.loc 1 524 0
 2244 02bc 07F10C03 		add	r3, r7, #12
 2245 02c0 C3F88020 		str	r2, [r3, #128]
 2246 02c4 07F10C03 		add	r3, r7, #12
 2247 02c8 0022     		movs	r2, #0
 2248 02ca 83F88420 		strb	r2, [r3, #132]
 2249 02ce 07F10C03 		add	r3, r7, #12
 2250 02d2 0122     		movs	r2, #1
 2251 02d4 83F88520 		strb	r2, [r3, #133]
 2252 02d8 07F10C03 		add	r3, r7, #12
 2253 02dc 464A     		ldr	r2, .L134+44
 2254 02de C3F88820 		str	r2, [r3, #136]
 2255 02e2 07F10C03 		add	r3, r7, #12
 2256 02e6 0122     		movs	r2, #1
 2257 02e8 83F88C20 		strb	r2, [r3, #140]
 2258 02ec 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 66


 2259 02f0 5022     		movs	r2, #80
 2260 02f2 83F88D20 		strb	r2, [r3, #141]
 2261 02f6 07F10C03 		add	r3, r7, #12
 2262 02fa 0322     		movs	r2, #3
 2263 02fc 83F88E20 		strb	r2, [r3, #142]
 2264 0300 07F10C03 		add	r3, r7, #12
 2265 0304 0122     		movs	r2, #1
 2266 0306 83F88F20 		strb	r2, [r3, #143]
 540:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->SH_config.pos_lim_inf)            , TYPE_INT32      , 2         , 
 2267              		.loc 1 540 0
 2268 030a D7F8C031 		ldr	r3, [r7, #448]
 2269 030e 03F12002 		add	r2, r3, #32
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2270              		.loc 1 524 0
 2271 0312 07F10C03 		add	r3, r7, #12
 2272 0316 C3F89020 		str	r2, [r3, #144]
 2273 031a 07F10C03 		add	r3, r7, #12
 2274 031e 0522     		movs	r2, #5
 2275 0320 83F89420 		strb	r2, [r3, #148]
 2276 0324 07F10C03 		add	r3, r7, #12
 2277 0328 0222     		movs	r2, #2
 2278 032a 83F89520 		strb	r2, [r3, #149]
 2279 032e 07F10C03 		add	r3, r7, #12
 2280 0332 324A     		ldr	r2, .L134+48
 2281 0334 C3F89820 		str	r2, [r3, #152]
 2282 0338 07F10C03 		add	r3, r7, #12
 2283 033c 0022     		movs	r2, #0
 2284 033e 83F89C20 		strb	r2, [r3, #156]
 2285 0342 07F10C03 		add	r3, r7, #12
 2286 0346 5022     		movs	r2, #80
 2287 0348 83F89D20 		strb	r2, [r3, #157]
 2288 034c 07F10C03 		add	r3, r7, #12
 2289 0350 0522     		movs	r2, #5
 2290 0352 83F89E20 		strb	r2, [r3, #158]
 2291 0356 07F10C03 		add	r3, r7, #12
 2292 035a 0122     		movs	r2, #1
 2293 035c 83F89F20 		strb	r2, [r3, #159]
 541:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.vibrotactile_feedback_active)  , TYPE_FLAG       , 1         , 
 2294              		.loc 1 541 0
 2295 0360 D7F8C031 		ldr	r3, [r7, #448]
 2296 0364 03F15C02 		add	r2, r3, #92
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2297              		.loc 1 524 0
 2298 0368 07F10C03 		add	r3, r7, #12
 2299 036c C3F8A020 		str	r2, [r3, #160]
 2300 0370 07F10C03 		add	r3, r7, #12
 2301 0374 0022     		movs	r2, #0
 2302 0376 83F8A420 		strb	r2, [r3, #164]
 2303 037a 07F10C03 		add	r3, r7, #12
 2304 037e 0122     		movs	r2, #1
 2305 0380 83F8A520 		strb	r2, [r3, #165]
 2306 0384 07F10C03 		add	r3, r7, #12
 2307 0388 1D4A     		ldr	r2, .L134+52
 2308 038a C3F8A820 		str	r2, [r3, #168]
 2309 038e 07F10C03 		add	r3, r7, #12
 2310 0392 0522     		movs	r2, #5
 2311 0394 83F8AC20 		strb	r2, [r3, #172]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 67


 2312 0398 07F10C03 		add	r3, r7, #12
 2313 039c 5022     		movs	r2, #80
 2314 039e 83F8AD20 		strb	r2, [r3, #173]
 2315 03a2 07F10C03 		add	r3, r7, #12
 2316 03a6 0022     		movs	r2, #0
 2317 03a8 83F8AE20 		strb	r2, [r3, #174]
 2318 03ac 07F10C03 		add	r3, r7, #12
 2319 03b0 0122     		movs	r2, #1
 2320 03b2 83F8AF20 		strb	r2, [r3, #175]
 542:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.airchamber_feedback_active)    , TYPE_FLAG       , 1         , 
 2321              		.loc 1 542 0
 2322 03b6 D7F8C031 		ldr	r3, [r7, #448]
 2323 03ba 03F15D02 		add	r2, r3, #93
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2324              		.loc 1 524 0
 2325 03be 07F10C03 		add	r3, r7, #12
 2326 03c2 C3F8B020 		str	r2, [r3, #176]
 2327 03c6 07F10C03 		add	r3, r7, #12
 2328 03ca 1BE0     		b	.L135
 2329              	.L136:
 2330              		.align	2
 2331              	.L134:
 2332 03cc 00000000 		.word	c_mem
 2333 03d0 00000000 		.word	g_mem
 2334 03d4 F4010000 		.word	.LC18
 2335 03d8 2C000000 		.word	.LC19
 2336 03dc 38000000 		.word	.LC20
 2337 03e0 48000000 		.word	.LC21
 2338 03e4 58000000 		.word	.LC22
 2339 03e8 68000000 		.word	.LC23
 2340 03ec 78000000 		.word	.LC24
 2341 03f0 88000000 		.word	.LC25
 2342 03f4 94000000 		.word	.LC26
 2343 03f8 A8000000 		.word	.LC27
 2344 03fc B4000000 		.word	.LC28
 2345 0400 CC000000 		.word	.LC29
 2346              	.L135:
 2347 0404 0022     		movs	r2, #0
 2348 0406 83F8B420 		strb	r2, [r3, #180]
 2349 040a 07F10C03 		add	r3, r7, #12
 2350 040e 0122     		movs	r2, #1
 2351 0410 83F8B520 		strb	r2, [r3, #181]
 2352 0414 07F10C03 		add	r3, r7, #12
 2353 0418 C04A     		ldr	r2, .L137
 2354 041a C3F8B820 		str	r2, [r3, #184]
 2355 041e 07F10C03 		add	r3, r7, #12
 2356 0422 0522     		movs	r2, #5
 2357 0424 83F8BC20 		strb	r2, [r3, #188]
 2358 0428 07F10C03 		add	r3, r7, #12
 2359 042c 5022     		movs	r2, #80
 2360 042e 83F8BD20 		strb	r2, [r3, #189]
 2361 0432 07F10C03 		add	r3, r7, #12
 2362 0436 0022     		movs	r2, #0
 2363 0438 83F8BE20 		strb	r2, [r3, #190]
 2364 043c 07F10C03 		add	r3, r7, #12
 2365 0440 0122     		movs	r2, #1
 2366 0442 83F8BF20 		strb	r2, [r3, #191]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 68


 543:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.max_residual_current)          , TYPE_INT32      , 1         , 
 2367              		.loc 1 543 0
 2368 0446 D7F8C031 		ldr	r3, [r7, #448]
 2369 044a 03F15002 		add	r2, r3, #80
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2370              		.loc 1 524 0
 2371 044e 07F10C03 		add	r3, r7, #12
 2372 0452 C3F8C020 		str	r2, [r3, #192]
 2373 0456 07F10C03 		add	r3, r7, #12
 2374 045a 0522     		movs	r2, #5
 2375 045c 83F8C420 		strb	r2, [r3, #196]
 2376 0460 07F10C03 		add	r3, r7, #12
 2377 0464 0122     		movs	r2, #1
 2378 0466 83F8C520 		strb	r2, [r3, #197]
 2379 046a 07F10C03 		add	r3, r7, #12
 2380 046e AC4A     		ldr	r2, .L137+4
 2381 0470 C3F8C820 		str	r2, [r3, #200]
 2382 0474 07F10C03 		add	r3, r7, #12
 2383 0478 0022     		movs	r2, #0
 2384 047a 83F8CC20 		strb	r2, [r3, #204]
 2385 047e 07F10C03 		add	r3, r7, #12
 2386 0482 5022     		movs	r2, #80
 2387 0484 83F8CD20 		strb	r2, [r3, #205]
 2388 0488 07F10C03 		add	r3, r7, #12
 2389 048c 0022     		movs	r2, #0
 2390 048e 83F8CE20 		strb	r2, [r3, #206]
 2391 0492 07F10C03 		add	r3, r7, #12
 2392 0496 0122     		movs	r2, #1
 2393 0498 83F8CF20 		strb	r2, [r3, #207]
 544:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.maximum_pressure_kPa)          , TYPE_FLOAT      , 1         , 
 2394              		.loc 1 544 0
 2395 049c D7F8C031 		ldr	r3, [r7, #448]
 2396 04a0 03F15402 		add	r2, r3, #84
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2397              		.loc 1 524 0
 2398 04a4 07F10C03 		add	r3, r7, #12
 2399 04a8 C3F8D020 		str	r2, [r3, #208]
 2400 04ac 07F10C03 		add	r3, r7, #12
 2401 04b0 0722     		movs	r2, #7
 2402 04b2 83F8D420 		strb	r2, [r3, #212]
 2403 04b6 07F10C03 		add	r3, r7, #12
 2404 04ba 0122     		movs	r2, #1
 2405 04bc 83F8D520 		strb	r2, [r3, #213]
 2406 04c0 07F10C03 		add	r3, r7, #12
 2407 04c4 974A     		ldr	r2, .L137+8
 2408 04c6 C3F8D820 		str	r2, [r3, #216]
 2409 04ca 07F10C03 		add	r3, r7, #12
 2410 04ce 0022     		movs	r2, #0
 2411 04d0 83F8DC20 		strb	r2, [r3, #220]
 2412 04d4 07F10C03 		add	r3, r7, #12
 2413 04d8 5022     		movs	r2, #80
 2414 04da 83F8DD20 		strb	r2, [r3, #221]
 2415 04de 07F10C03 		add	r3, r7, #12
 2416 04e2 0022     		movs	r2, #0
 2417 04e4 83F8DE20 		strb	r2, [r3, #222]
 2418 04e8 07F10C03 		add	r3, r7, #12
 2419 04ec 0122     		movs	r2, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 69


 2420 04ee 83F8DF20 		strb	r2, [r3, #223]
 545:..\src/command_processing.c ****         {(uint8* const) &(MEM_P->FB.prop_err_fb_gain)              , TYPE_FLOAT      , 1         , 
 2421              		.loc 1 545 0
 2422 04f2 D7F8C031 		ldr	r3, [r7, #448]
 2423 04f6 03F15802 		add	r2, r3, #88
 524:..\src/command_processing.c ****     //  {VAR_P                                                     , TYPES           , NUM_ITEMS , 
 2424              		.loc 1 524 0
 2425 04fa 07F10C03 		add	r3, r7, #12
 2426 04fe C3F8E020 		str	r2, [r3, #224]
 2427 0502 07F10C03 		add	r3, r7, #12
 2428 0506 0722     		movs	r2, #7
 2429 0508 83F8E420 		strb	r2, [r3, #228]
 2430 050c 07F10C03 		add	r3, r7, #12
 2431 0510 0122     		movs	r2, #1
 2432 0512 83F8E520 		strb	r2, [r3, #229]
 2433 0516 07F10C03 		add	r3, r7, #12
 2434 051a 834A     		ldr	r2, .L137+12
 2435 051c C3F8E820 		str	r2, [r3, #232]
 2436 0520 07F10C03 		add	r3, r7, #12
 2437 0524 0022     		movs	r2, #0
 2438 0526 83F8EC20 		strb	r2, [r3, #236]
 2439 052a 07F10C03 		add	r3, r7, #12
 2440 052e 5022     		movs	r2, #80
 2441 0530 83F8ED20 		strb	r2, [r3, #237]
 2442 0534 07F10C03 		add	r3, r7, #12
 2443 0538 0022     		movs	r2, #0
 2444 053a 83F8EE20 		strb	r2, [r3, #238]
 2445 053e 07F10C03 		add	r3, r7, #12
 2446 0542 0122     		movs	r2, #1
 2447 0544 83F8EF20 		strb	r2, [r3, #239]
 546:..\src/command_processing.c ****     };
 547:..\src/command_processing.c ****     uint8 NUM_PARAMs = sizeof(PARAM_LIST)/sizeof(param_type);  
 2448              		.loc 1 547 0
 2449 0548 0F23     		movs	r3, #15
 2450 054a 87F8BE31 		strb	r3, [r7, #446]
 548:..\src/command_processing.c ****     
 549:..\src/command_processing.c **** 
 550:..\src/command_processing.c ****     if (!index) {
 2451              		.loc 1 550 0
 2452 054e BB1D     		adds	r3, r7, #6
 2453 0550 1B88     		ldrh	r3, [r3]
 2454 0552 002B     		cmp	r3, #0
 2455 0554 0ED1     		bne	.L120
 551:..\src/command_processing.c ****         // Get parameters list with relative types
 552:..\src/command_processing.c ****         get_param_list(NUM_PARAMs, NUM_MENUs, PARAM_LIST, MENU_LIST, sendToDevice);
 2456              		.loc 1 552 0
 2457 0556 07F58674 		add	r4, r7, #268
 2458 055a 07F10C02 		add	r2, r7, #12
 2459 055e 97F8BF11 		ldrb	r1, [r7, #447]	@ zero_extendqisi2
 2460 0562 97F8BE01 		ldrb	r0, [r7, #446]	@ zero_extendqisi2
 2461 0566 7B1D     		adds	r3, r7, #5
 2462 0568 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2463 056a 0093     		str	r3, [sp]
 2464 056c 2346     		mov	r3, r4
 2465 056e FFF7FEFF 		bl	get_param_list
 553:..\src/command_processing.c ****     }   
 554:..\src/command_processing.c ****     else if  (index == 300) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 70


 555:..\src/command_processing.c ****         // Called only by prepre_generic_info to get data  from the parameters to print
 556:..\src/command_processing.c ****         qbadminp_string(NUM_PARAMs, NUM_MENUs, PARAM_LIST, MENU_LIST);
 557:..\src/command_processing.c ****     }
 558:..\src/command_processing.c **** 
 559:..\src/command_processing.c ****     else {
 560:..\src/command_processing.c ****          // Set specific parameter        
 561:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
 562:..\src/command_processing.c ****         
 563:..\src/command_processing.c ****         // Find size of data
 564:..\src/command_processing.c ****         uint8 sod = num_of_bytes(PARAM_LIST[PARAM_IDX].TYPES);
 565:..\src/command_processing.c ****    
 566:..\src/command_processing.c ****         if (PARAM_LIST[PARAM_IDX].custom == 0) {
 567:..\src/command_processing.c ****             // Use default specifications for param setting
 568:..\src/command_processing.c ****             for (i = 0; i < PARAM_LIST[PARAM_IDX].NUM_ITEMS * sod; i += sod){
 569:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 570:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 571:..\src/command_processing.c ****                 }
 572:..\src/command_processing.c ****             } 
 573:..\src/command_processing.c ****             if( PARAM_LIST[PARAM_IDX].TYPES == TYPE_STRING)                   
 574:..\src/command_processing.c ****                *(PARAM_LIST[PARAM_IDX].VAR_P + i) = '\0';        
 575:..\src/command_processing.c ****         }
 576:..\src/command_processing.c ****         
 577:..\src/command_processing.c ****         else {  
 578:..\src/command_processing.c ****             // Use custom specifications for param setting
 579:..\src/command_processing.c ****             set_custom_param(PARAM_IDX, PARAM_LIST);
 580:..\src/command_processing.c ****         }
 581:..\src/command_processing.c ****         
 582:..\src/command_processing.c ****        
 583:..\src/command_processing.c ****         // Perform chip reset if needed
 584:..\src/command_processing.c ****         for (i=0; i< NUM_MENUs;i++){
 585:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 586:..\src/command_processing.c ****              reset_PSoC_flag = TRUE;
 587:..\src/command_processing.c ****             }   
 588:..\src/command_processing.c ****         }
 589:..\src/command_processing.c ****     }
 590:..\src/command_processing.c **** } 
 2466              		.loc 1 590 0
 2467 0572 CEE0     		b	.L133
 2468              	.L120:
 554:..\src/command_processing.c ****         // Called only by prepre_generic_info to get data  from the parameters to print
 2469              		.loc 1 554 0
 2470 0574 BB1D     		adds	r3, r7, #6
 2471 0576 1B88     		ldrh	r3, [r3]
 2472 0578 B3F5967F 		cmp	r3, #300
 2473 057c 0AD1     		bne	.L122
 556:..\src/command_processing.c ****     }
 2474              		.loc 1 556 0
 2475 057e 07F58673 		add	r3, r7, #268
 2476 0582 07F10C02 		add	r2, r7, #12
 2477 0586 97F8BF11 		ldrb	r1, [r7, #447]	@ zero_extendqisi2
 2478 058a 97F8BE01 		ldrb	r0, [r7, #446]	@ zero_extendqisi2
 2479 058e FFF7FEFF 		bl	qbadminp_string
 2480              		.loc 1 590 0
 2481 0592 BEE0     		b	.L133
 2482              	.L122:
 2483              	.LBB24:
 561:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 71


 2484              		.loc 1 561 0
 2485 0594 BB1D     		adds	r3, r7, #6
 2486 0596 1B88     		ldrh	r3, [r3]	@ movhi
 2487 0598 DBB2     		uxtb	r3, r3
 2488 059a 013B     		subs	r3, r3, #1
 2489 059c 87F8BD31 		strb	r3, [r7, #445]
 564:..\src/command_processing.c ****    
 2490              		.loc 1 564 0
 2491 05a0 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2492 05a4 07F10C02 		add	r2, r7, #12
 2493 05a8 1B01     		lsls	r3, r3, #4
 2494 05aa 1344     		add	r3, r3, r2
 2495 05ac 0433     		adds	r3, r3, #4
 2496 05ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2497 05b0 1846     		mov	r0, r3
 2498 05b2 FFF7FEFF 		bl	num_of_bytes
 2499 05b6 0346     		mov	r3, r0
 2500 05b8 87F8BC31 		strb	r3, [r7, #444]
 566:..\src/command_processing.c ****             // Use default specifications for param setting
 2501              		.loc 1 566 0
 2502 05bc 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2503 05c0 07F10C02 		add	r2, r7, #12
 2504 05c4 1B01     		lsls	r3, r3, #4
 2505 05c6 1344     		add	r3, r3, r2
 2506 05c8 0E33     		adds	r3, r3, #14
 2507 05ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2508 05cc 002B     		cmp	r3, #0
 2509 05ce 5BD1     		bne	.L123
 568:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2510              		.loc 1 568 0
 2511 05d0 0023     		movs	r3, #0
 2512 05d2 87F8C731 		strb	r3, [r7, #455]
 2513 05d6 2FE0     		b	.L124
 2514              	.L127:
 569:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2515              		.loc 1 569 0
 2516 05d8 0023     		movs	r3, #0
 2517 05da 87F8C631 		strb	r3, [r7, #454]
 2518 05de 1EE0     		b	.L125
 2519              	.L126:
 570:..\src/command_processing.c ****                 }
 2520              		.loc 1 570 0 discriminator 3
 2521 05e0 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2522 05e4 07F10C02 		add	r2, r7, #12
 2523 05e8 1B01     		lsls	r3, r3, #4
 2524 05ea 1344     		add	r3, r3, r2
 2525 05ec 1A68     		ldr	r2, [r3]
 2526 05ee 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2527 05f2 97F8BC01 		ldrb	r0, [r7, #444]	@ zero_extendqisi2
 2528 05f6 97F8C611 		ldrb	r1, [r7, #454]	@ zero_extendqisi2
 2529 05fa 411A     		subs	r1, r0, r1
 2530 05fc 0B44     		add	r3, r3, r1
 2531 05fe 013B     		subs	r3, r3, #1
 2532 0600 1344     		add	r3, r3, r2
 2533 0602 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2534 0606 D11C     		adds	r1, r2, #3
 2535 0608 97F8C621 		ldrb	r2, [r7, #454]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 72


 2536 060c 0A44     		add	r2, r2, r1
 2537 060e 4749     		ldr	r1, .L137+16
 2538 0610 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2539 0612 1A70     		strb	r2, [r3]
 569:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2540              		.loc 1 569 0 discriminator 3
 2541 0614 97F8C631 		ldrb	r3, [r7, #454]	@ zero_extendqisi2
 2542 0618 0133     		adds	r3, r3, #1
 2543 061a 87F8C631 		strb	r3, [r7, #454]
 2544              	.L125:
 569:..\src/command_processing.c ****                     ((char*)(PARAM_LIST[PARAM_IDX].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2545              		.loc 1 569 0 is_stmt 0 discriminator 1
 2546 061e 97F8C621 		ldrb	r2, [r7, #454]	@ zero_extendqisi2
 2547 0622 97F8BC31 		ldrb	r3, [r7, #444]	@ zero_extendqisi2
 2548 0626 9A42     		cmp	r2, r3
 2549 0628 DAD3     		bcc	.L126
 568:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2550              		.loc 1 568 0 is_stmt 1 discriminator 2
 2551 062a 97F8C721 		ldrb	r2, [r7, #455]
 2552 062e 97F8BC31 		ldrb	r3, [r7, #444]
 2553 0632 1344     		add	r3, r3, r2
 2554 0634 87F8C731 		strb	r3, [r7, #455]
 2555              	.L124:
 568:..\src/command_processing.c ****                 for(j = 0; j < sod; j++) {
 2556              		.loc 1 568 0 is_stmt 0 discriminator 1
 2557 0638 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2558 063c 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2559 0640 07F10C01 		add	r1, r7, #12
 2560 0644 1B01     		lsls	r3, r3, #4
 2561 0646 0B44     		add	r3, r3, r1
 2562 0648 0533     		adds	r3, r3, #5
 2563 064a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2564 064c 1946     		mov	r1, r3
 2565 064e 97F8BC31 		ldrb	r3, [r7, #444]	@ zero_extendqisi2
 2566 0652 03FB01F3 		mul	r3, r3, r1
 2567 0656 9A42     		cmp	r2, r3
 2568 0658 BEDB     		blt	.L127
 573:..\src/command_processing.c ****                *(PARAM_LIST[PARAM_IDX].VAR_P + i) = '\0';        
 2569              		.loc 1 573 0 is_stmt 1
 2570 065a 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2571 065e 07F10C02 		add	r2, r7, #12
 2572 0662 1B01     		lsls	r3, r3, #4
 2573 0664 1344     		add	r3, r3, r2
 2574 0666 0433     		adds	r3, r3, #4
 2575 0668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2576 066a 092B     		cmp	r3, #9
 2577 066c 15D1     		bne	.L129
 574:..\src/command_processing.c ****         }
 2578              		.loc 1 574 0
 2579 066e 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2580 0672 07F10C02 		add	r2, r7, #12
 2581 0676 1B01     		lsls	r3, r3, #4
 2582 0678 1344     		add	r3, r3, r2
 2583 067a 1A68     		ldr	r2, [r3]
 2584 067c 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2585 0680 1344     		add	r3, r3, r2
 2586 0682 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 73


 2587 0684 1A70     		strb	r2, [r3]
 2588 0686 08E0     		b	.L129
 2589              	.L123:
 579:..\src/command_processing.c ****         }
 2590              		.loc 1 579 0
 2591 0688 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2592 068c 9BB2     		uxth	r3, r3
 2593 068e 07F10C02 		add	r2, r7, #12
 2594 0692 1146     		mov	r1, r2
 2595 0694 1846     		mov	r0, r3
 2596 0696 FFF7FEFF 		bl	set_custom_param
 2597              	.L129:
 584:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2598              		.loc 1 584 0
 2599 069a 0023     		movs	r3, #0
 2600 069c 87F8C731 		strb	r3, [r7, #455]
 2601 06a0 31E0     		b	.L130
 2602              	.L132:
 585:..\src/command_processing.c ****              reset_PSoC_flag = TRUE;
 2603              		.loc 1 585 0
 2604 06a2 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2605 06a6 2C22     		movs	r2, #44
 2606 06a8 02FB03F3 		mul	r3, r2, r3
 2607 06ac 07F5E472 		add	r2, r7, #456
 2608 06b0 1344     		add	r3, r3, r2
 2609 06b2 BC3B     		subs	r3, r3, #188
 2610 06b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2611 06b6 97F8BD31 		ldrb	r3, [r7, #445]	@ zero_extendqisi2
 2612 06ba 07F10C01 		add	r1, r7, #12
 2613 06be 1B01     		lsls	r3, r3, #4
 2614 06c0 0B44     		add	r3, r3, r1
 2615 06c2 0C33     		adds	r3, r3, #12
 2616 06c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2617 06c6 9A42     		cmp	r2, r3
 2618 06c8 0CBF     		ite	eq
 2619 06ca 0123     		moveq	r3, #1
 2620 06cc 0023     		movne	r3, #0
 2621 06ce DAB2     		uxtb	r2, r3
 2622 06d0 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2623 06d4 2C21     		movs	r1, #44
 2624 06d6 01FB03F3 		mul	r3, r1, r3
 2625 06da 07F5E471 		add	r1, r7, #456
 2626 06de 0B44     		add	r3, r3, r1
 2627 06e0 BB3B     		subs	r3, r3, #187
 2628 06e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2629 06e4 012B     		cmp	r3, #1
 2630 06e6 0CBF     		ite	eq
 2631 06e8 0123     		moveq	r3, #1
 2632 06ea 0023     		movne	r3, #0
 2633 06ec DBB2     		uxtb	r3, r3
 2634 06ee 1340     		ands	r3, r3, r2
 2635 06f0 DBB2     		uxtb	r3, r3
 2636 06f2 002B     		cmp	r3, #0
 2637 06f4 02D0     		beq	.L131
 586:..\src/command_processing.c ****             }   
 2638              		.loc 1 586 0
 2639 06f6 0E4B     		ldr	r3, .L137+20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 74


 2640 06f8 0122     		movs	r2, #1
 2641 06fa 1A70     		strb	r2, [r3]
 2642              	.L131:
 584:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2643              		.loc 1 584 0 discriminator 2
 2644 06fc 97F8C731 		ldrb	r3, [r7, #455]	@ zero_extendqisi2
 2645 0700 0133     		adds	r3, r3, #1
 2646 0702 87F8C731 		strb	r3, [r7, #455]
 2647              	.L130:
 584:..\src/command_processing.c ****             if ((MENU_LIST[i].name == PARAM_LIST[PARAM_IDX].MENU) & (MENU_LIST[i].reset == TRUE)){
 2648              		.loc 1 584 0 is_stmt 0 discriminator 1
 2649 0706 97F8C721 		ldrb	r2, [r7, #455]	@ zero_extendqisi2
 2650 070a 97F8BF31 		ldrb	r3, [r7, #447]	@ zero_extendqisi2
 2651 070e 9A42     		cmp	r2, r3
 2652 0710 C7D3     		bcc	.L132
 2653              	.L133:
 2654              	.LBE24:
 2655              		.loc 1 590 0 is_stmt 1
 2656 0712 00BF     		nop
 2657 0714 07F5E677 		add	r7, r7, #460
 2658              		.cfi_def_cfa_offset 12
 2659 0718 BD46     		mov	sp, r7
 2660              		.cfi_def_cfa_register 13
 2661              		@ sp needed
 2662 071a 90BD     		pop	{r4, r7, pc}
 2663              	.L138:
 2664              		.align	2
 2665              	.L137:
 2666 071c E4000000 		.word	.LC30
 2667 0720 FC000000 		.word	.LC31
 2668 0724 1C010000 		.word	.LC32
 2669 0728 40010000 		.word	.LC33
 2670 072c 00000000 		.word	g_rx
 2671 0730 00000000 		.word	reset_PSoC_flag
 2672              		.cfi_endproc
 2673              	.LFE69:
 2674              		.size	manage_param_list, .-manage_param_list
 2675              		.section	.text.set_custom_param,"ax",%progbits
 2676              		.align	2
 2677              		.global	set_custom_param
 2678              		.thumb
 2679              		.thumb_func
 2680              		.type	set_custom_param, %function
 2681              	set_custom_param:
 2682              	.LFB70:
 591:..\src/command_processing.c **** 
 592:..\src/command_processing.c **** 
 593:..\src/command_processing.c **** //==============================================================================
 594:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
 595:..\src/command_processing.c **** //==============================================================================
 596:..\src/command_processing.c **** 
 597:..\src/command_processing.c **** void set_custom_param(uint16 index, const struct parameter PARAM_LIST[]) {
 2683              		.loc 1 597 0
 2684              		.cfi_startproc
 2685              		@ args = 0, pretend = 0, frame = 16
 2686              		@ frame_needed = 1, uses_anonymous_args = 0
 2687 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 75


 2688              		.cfi_def_cfa_offset 8
 2689              		.cfi_offset 7, -8
 2690              		.cfi_offset 14, -4
 2691 0002 84B0     		sub	sp, sp, #16
 2692              		.cfi_def_cfa_offset 24
 2693 0004 00AF     		add	r7, sp, #0
 2694              		.cfi_def_cfa_register 7
 2695 0006 0346     		mov	r3, r0
 2696 0008 3960     		str	r1, [r7]
 2697 000a FB80     		strh	r3, [r7, #6]	@ movhi
 598:..\src/command_processing.c ****     uint8 sod =   num_of_bytes(PARAM_LIST[index].TYPES);
 2698              		.loc 1 598 0
 2699 000c FB88     		ldrh	r3, [r7, #6]
 2700 000e 1B01     		lsls	r3, r3, #4
 2701 0010 3A68     		ldr	r2, [r7]
 2702 0012 1344     		add	r3, r3, r2
 2703 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2704 0016 1846     		mov	r0, r3
 2705 0018 FFF7FEFF 		bl	num_of_bytes
 2706 001c 0346     		mov	r3, r0
 2707 001e 7B73     		strb	r3, [r7, #13]
 599:..\src/command_processing.c **** 
 600:..\src/command_processing.c ****     uint8 CYDATA i, j;
 601:..\src/command_processing.c ****         
 602:..\src/command_processing.c ****     switch(PARAM_LIST[index].custom){
 2708              		.loc 1 602 0
 2709 0020 FB88     		ldrh	r3, [r7, #6]
 2710 0022 1B01     		lsls	r3, r3, #4
 2711 0024 3A68     		ldr	r2, [r7]
 2712 0026 1344     		add	r3, r3, r2
 2713 0028 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 2714 002a 032B     		cmp	r3, #3
 2715 002c 02D0     		beq	.L141
 2716 002e 052B     		cmp	r3, #5
 2717 0030 06D0     		beq	.L142
 2718 0032 36E0     		b	.L149
 2719              	.L141:
 603:..\src/command_processing.c ****         
 604:..\src/command_processing.c ****             
 605:..\src/command_processing.c ****         case CUSTOM_INPUT:         //Input mode
 606:..\src/command_processing.c ****             g_mem.SH_config.input_mode = g_rx.buffer[3];            //In this specific FW, input mo
 2720              		.loc 1 606 0
 2721 0034 3D4B     		ldr	r3, .L151
 2722 0036 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 2723 0038 3D4B     		ldr	r3, .L151+4
 2724 003a 83F82820 		strb	r2, [r3, #40]
 607:..\src/command_processing.c ****             break;   
 2725              		.loc 1 607 0
 2726 003e 71E0     		b	.L143
 2727              	.L142:
 608:..\src/command_processing.c **** 
 609:..\src/command_processing.c ****         
 610:..\src/command_processing.c ****         case CUSTOM_POS_LIM:        //Position limits
 611:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.bu
 2728              		.loc 1 611 0
 2729 0040 3A4B     		ldr	r3, .L151
 2730 0042 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 76


 2731 0044 1A06     		lsls	r2, r3, #24
 2732 0046 394B     		ldr	r3, .L151
 2733 0048 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2734 004a 1B04     		lsls	r3, r3, #16
 2735 004c 1A43     		orrs	r2, r2, r3
 2736 004e 374B     		ldr	r3, .L151
 2737 0050 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2738 0052 1B02     		lsls	r3, r3, #8
 2739 0054 1343     		orrs	r3, r3, r2
 2740 0056 354A     		ldr	r2, .L151
 2741 0058 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 2742 005a 1343     		orrs	r3, r3, r2
 2743 005c 344A     		ldr	r2, .L151+4
 2744 005e 1362     		str	r3, [r2, #32]
 612:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.bu
 2745              		.loc 1 612 0
 2746 0060 324B     		ldr	r3, .L151
 2747 0062 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 2748 0064 1A06     		lsls	r2, r3, #24
 2749 0066 314B     		ldr	r3, .L151
 2750 0068 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2751 006a 1B04     		lsls	r3, r3, #16
 2752 006c 1A43     		orrs	r2, r2, r3
 2753 006e 2F4B     		ldr	r3, .L151
 2754 0070 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2755 0072 1B02     		lsls	r3, r3, #8
 2756 0074 1343     		orrs	r3, r3, r2
 2757 0076 2D4A     		ldr	r2, .L151
 2758 0078 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 2759 007a 1343     		orrs	r3, r3, r2
 2760 007c 2C4A     		ldr	r2, .L151+4
 2761 007e 5362     		str	r3, [r2, #36]
 613:..\src/command_processing.c **** 
 614:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_inf = g_mem.SH_config.pos_lim_inf << g_mem.SH_config.res;
 2762              		.loc 1 614 0
 2763 0080 2B4B     		ldr	r3, .L151+4
 2764 0082 1B6A     		ldr	r3, [r3, #32]
 2765 0084 2A4A     		ldr	r2, .L151+4
 2766 0086 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 2767 008a 9340     		lsls	r3, r3, r2
 2768 008c 284A     		ldr	r2, .L151+4
 2769 008e 1362     		str	r3, [r2, #32]
 615:..\src/command_processing.c ****             g_mem.SH_config.pos_lim_sup = g_mem.SH_config.pos_lim_sup << g_mem.SH_config.res;
 2770              		.loc 1 615 0
 2771 0090 274B     		ldr	r3, .L151+4
 2772 0092 5B6A     		ldr	r3, [r3, #36]
 2773 0094 264A     		ldr	r2, .L151+4
 2774 0096 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 2775 009a 9340     		lsls	r3, r3, r2
 2776 009c 244A     		ldr	r2, .L151+4
 2777 009e 5362     		str	r3, [r2, #36]
 616:..\src/command_processing.c ****             break;            
 2778              		.loc 1 616 0
 2779 00a0 40E0     		b	.L143
 2780              	.L149:
 617:..\src/command_processing.c ****             default:
 618:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 77


 619:..\src/command_processing.c ****                 for (i = 0; i < PARAM_LIST[index].NUM_ITEMS * sod; i += sod){
 2781              		.loc 1 619 0
 2782 00a2 0023     		movs	r3, #0
 2783 00a4 FB73     		strb	r3, [r7, #15]
 2784 00a6 20E0     		b	.L144
 2785              	.L147:
 620:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2786              		.loc 1 620 0
 2787 00a8 0023     		movs	r3, #0
 2788 00aa BB73     		strb	r3, [r7, #14]
 2789 00ac 15E0     		b	.L145
 2790              	.L146:
 621:..\src/command_processing.c ****                         ((char*)(PARAM_LIST[index].VAR_P + i))[sod - j -1] = g_rx.buffer[3+i+j];   
 2791              		.loc 1 621 0 discriminator 3
 2792 00ae FB88     		ldrh	r3, [r7, #6]
 2793 00b0 1B01     		lsls	r3, r3, #4
 2794 00b2 3A68     		ldr	r2, [r7]
 2795 00b4 1344     		add	r3, r3, r2
 2796 00b6 1A68     		ldr	r2, [r3]
 2797 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2798 00ba 787B     		ldrb	r0, [r7, #13]	@ zero_extendqisi2
 2799 00bc B97B     		ldrb	r1, [r7, #14]	@ zero_extendqisi2
 2800 00be 411A     		subs	r1, r0, r1
 2801 00c0 0B44     		add	r3, r3, r1
 2802 00c2 013B     		subs	r3, r3, #1
 2803 00c4 1344     		add	r3, r3, r2
 2804 00c6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2805 00c8 D11C     		adds	r1, r2, #3
 2806 00ca BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2807 00cc 0A44     		add	r2, r2, r1
 2808 00ce 1749     		ldr	r1, .L151
 2809 00d0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2810 00d2 1A70     		strb	r2, [r3]
 620:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2811              		.loc 1 620 0 discriminator 3
 2812 00d4 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2813 00d6 0133     		adds	r3, r3, #1
 2814 00d8 BB73     		strb	r3, [r7, #14]
 2815              	.L145:
 620:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2816              		.loc 1 620 0 is_stmt 0 discriminator 1
 2817 00da BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2818 00dc 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2819 00de 9A42     		cmp	r2, r3
 2820 00e0 E5D3     		bcc	.L146
 619:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2821              		.loc 1 619 0 is_stmt 1 discriminator 2
 2822 00e2 FA7B     		ldrb	r2, [r7, #15]
 2823 00e4 7B7B     		ldrb	r3, [r7, #13]
 2824 00e6 1344     		add	r3, r3, r2
 2825 00e8 FB73     		strb	r3, [r7, #15]
 2826              	.L144:
 619:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2827              		.loc 1 619 0 is_stmt 0 discriminator 1
 2828 00ea FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2829 00ec FB88     		ldrh	r3, [r7, #6]
 2830 00ee 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 78


 2831 00f0 3968     		ldr	r1, [r7]
 2832 00f2 0B44     		add	r3, r3, r1
 2833 00f4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 2834 00f6 1946     		mov	r1, r3
 2835 00f8 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2836 00fa 03FB01F3 		mul	r3, r3, r1
 2837 00fe 9A42     		cmp	r2, r3
 2838 0100 D2DB     		blt	.L147
 622:..\src/command_processing.c ****                     }
 623:..\src/command_processing.c ****                 } 
 624:..\src/command_processing.c ****                 if( PARAM_LIST[index].TYPES == TYPE_STRING)                   
 2839              		.loc 1 624 0 is_stmt 1
 2840 0102 FB88     		ldrh	r3, [r7, #6]
 2841 0104 1B01     		lsls	r3, r3, #4
 2842 0106 3A68     		ldr	r2, [r7]
 2843 0108 1344     		add	r3, r3, r2
 2844 010a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2845 010c 092B     		cmp	r3, #9
 2846 010e 08D1     		bne	.L150
 625:..\src/command_processing.c ****                    *(PARAM_LIST[index].VAR_P + i) = '\0';   
 2847              		.loc 1 625 0
 2848 0110 FB88     		ldrh	r3, [r7, #6]
 2849 0112 1B01     		lsls	r3, r3, #4
 2850 0114 3A68     		ldr	r2, [r7]
 2851 0116 1344     		add	r3, r3, r2
 2852 0118 1A68     		ldr	r2, [r3]
 2853 011a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2854 011c 1344     		add	r3, r3, r2
 2855 011e 0022     		movs	r2, #0
 2856 0120 1A70     		strb	r2, [r3]
 2857              	.L150:
 626:..\src/command_processing.c ****             break;
 2858              		.loc 1 626 0
 2859 0122 00BF     		nop
 2860              	.L143:
 627:..\src/command_processing.c ****     }
 628:..\src/command_processing.c **** 
 629:..\src/command_processing.c ****       
 630:..\src/command_processing.c **** }
 2861              		.loc 1 630 0
 2862 0124 00BF     		nop
 2863 0126 1037     		adds	r7, r7, #16
 2864              		.cfi_def_cfa_offset 8
 2865 0128 BD46     		mov	sp, r7
 2866              		.cfi_def_cfa_register 13
 2867              		@ sp needed
 2868 012a 80BD     		pop	{r7, pc}
 2869              	.L152:
 2870              		.align	2
 2871              	.L151:
 2872 012c 00000000 		.word	g_rx
 2873 0130 00000000 		.word	g_mem
 2874              		.cfi_endproc
 2875              	.LFE70:
 2876              		.size	set_custom_param, .-set_custom_param
 2877              		.section	.text.get_IMU_param_list,"ax",%progbits
 2878              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 79


 2879              		.global	get_IMU_param_list
 2880              		.thumb
 2881              		.thumb_func
 2882              		.type	get_IMU_param_list, %function
 2883              	get_IMU_param_list:
 2884              	.LFB71:
 631:..\src/command_processing.c **** 
 632:..\src/command_processing.c **** //==============================================================================
 633:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
 634:..\src/command_processing.c **** //==============================================================================
 635:..\src/command_processing.c **** 
 636:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
 637:..\src/command_processing.c **** {
 2885              		.loc 1 637 0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 8
 2888              		@ frame_needed = 1, uses_anonymous_args = 0
 2889              		@ link register save eliminated.
 2890 0000 80B4     		push	{r7}
 2891              		.cfi_def_cfa_offset 4
 2892              		.cfi_offset 7, -4
 2893 0002 83B0     		sub	sp, sp, #12
 2894              		.cfi_def_cfa_offset 16
 2895 0004 00AF     		add	r7, sp, #0
 2896              		.cfi_def_cfa_register 7
 2897 0006 0346     		mov	r3, r0
 2898 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 638:..\src/command_processing.c **** }
 2899              		.loc 1 638 0
 2900 000a 00BF     		nop
 2901 000c 0C37     		adds	r7, r7, #12
 2902              		.cfi_def_cfa_offset 4
 2903 000e BD46     		mov	sp, r7
 2904              		.cfi_def_cfa_register 13
 2905              		@ sp needed
 2906 0010 80BC     		pop	{r7}
 2907              		.cfi_restore 7
 2908              		.cfi_def_cfa_offset 0
 2909 0012 7047     		bx	lr
 2910              		.cfi_endproc
 2911              	.LFE71:
 2912              		.size	get_IMU_param_list, .-get_IMU_param_list
 2913              		.section	.text.setZeros,"ax",%progbits
 2914              		.align	2
 2915              		.global	setZeros
 2916              		.thumb
 2917              		.thumb_func
 2918              		.type	setZeros, %function
 2919              	setZeros:
 2920              	.LFB72:
 639:..\src/command_processing.c **** 
 640:..\src/command_processing.c **** //==============================================================================
 641:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
 642:..\src/command_processing.c **** //==============================================================================
 643:..\src/command_processing.c **** 
 644:..\src/command_processing.c **** void setZeros()
 645:..\src/command_processing.c **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 80


 2921              		.loc 1 645 0
 2922              		.cfi_startproc
 2923              		@ args = 0, pretend = 0, frame = 0
 2924              		@ frame_needed = 1, uses_anonymous_args = 0
 2925              		@ link register save eliminated.
 2926 0000 80B4     		push	{r7}
 2927              		.cfi_def_cfa_offset 4
 2928              		.cfi_offset 7, -4
 2929 0002 00AF     		add	r7, sp, #0
 2930              		.cfi_def_cfa_register 7
 646:..\src/command_processing.c **** }
 2931              		.loc 1 646 0
 2932 0004 00BF     		nop
 2933 0006 BD46     		mov	sp, r7
 2934              		.cfi_def_cfa_register 13
 2935              		@ sp needed
 2936 0008 80BC     		pop	{r7}
 2937              		.cfi_restore 7
 2938              		.cfi_def_cfa_offset 0
 2939 000a 7047     		bx	lr
 2940              		.cfi_endproc
 2941              	.LFE72:
 2942              		.size	setZeros, .-setZeros
 2943              		.section	.rodata
 2944              		.align	2
 2945              	.LC34:
 2946 0278 20256400 		.ascii	" %d\000"
 2947              		.align	2
 2948              	.LC35:
 2949 027c 20256C64 		.ascii	" %ld\000"
 2949      00
 2950              		.global	__aeabi_f2d
 2951 0281 000000   		.align	2
 2952              	.LC36:
 2953 0284 20256600 		.ascii	" %f\000"
 2954              		.section	.text.qbadminp_string,"ax",%progbits
 2955              		.align	2
 2956              		.global	qbadminp_string
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	qbadminp_string, %function
 2960              	qbadminp_string:
 2961              	.LFB73:
 647:..\src/command_processing.c **** 
 648:..\src/command_processing.c **** void  qbadminp_string ( uint8 num_params, uint8 num_menus, const struct parameter PARAM_LIST[], con
 2962              		.loc 1 648 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 2664
 2965              		@ frame_needed = 1, uses_anonymous_args = 0
 2966 0000 90B5     		push	{r4, r7, lr}
 2967              		.cfi_def_cfa_offset 12
 2968              		.cfi_offset 4, -12
 2969              		.cfi_offset 7, -8
 2970              		.cfi_offset 14, -4
 2971 0002 ADF66C2D 		subw	sp, sp, #2668
 2972              		.cfi_def_cfa_offset 2680
 2973 0006 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 81


 2974              		.cfi_def_cfa_register 7
 2975 0008 0446     		mov	r4, r0
 2976 000a 0846     		mov	r0, r1
 2977 000c 07F10801 		add	r1, r7, #8
 2978 0010 0A60     		str	r2, [r1]
 2979 0012 3A1D     		adds	r2, r7, #4
 2980 0014 1360     		str	r3, [r2]
 2981 0016 07F10F03 		add	r3, r7, #15
 2982 001a 2246     		mov	r2, r4
 2983 001c 1A70     		strb	r2, [r3]
 2984 001e 07F10E03 		add	r3, r7, #14
 2985 0022 0246     		mov	r2, r0
 2986 0024 1A70     		strb	r2, [r3]
 649:..\src/command_processing.c ****     strcpy(superstring, "");
 2987              		.loc 1 649 0
 2988 0026 AD4B     		ldr	r3, .L181
 2989 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2990 002a AD4B     		ldr	r3, .L181+4
 2991 002c 1A70     		strb	r2, [r3]
 650:..\src/command_processing.c ****     char info_string[2500] = "";
 2992              		.loc 1 650 0
 2993 002e 07F17803 		add	r3, r7, #120
 2994 0032 0022     		movs	r2, #0
 2995 0034 1A60     		str	r2, [r3]
 2996 0036 0433     		adds	r3, r3, #4
 2997 0038 4FF41C62 		mov	r2, #2496
 2998 003c 0021     		movs	r1, #0
 2999 003e 1846     		mov	r0, r3
 3000 0040 FFF7FEFF 		bl	memset
 651:..\src/command_processing.c ****     int i;
 652:..\src/command_processing.c ****     int idx;
 653:..\src/command_processing.c ****     int32 aux_int32;
 654:..\src/command_processing.c ****     uint32 aux_uint32;
 655:..\src/command_processing.c ****     float aux_float;
 656:..\src/command_processing.c ****     uint8 aux_uint8;
 657:..\src/command_processing.c ****     int8 aux_int8;
 658:..\src/command_processing.c ****     int16 aux_int16;
 659:..\src/command_processing.c ****     uint16 aux_uint16;
 660:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 3001              		.loc 1 660 0
 3002 0044 A74B     		ldr	r3, .L181+8
 3003 0046 C7F85C3A 		str	r3, [r7, #2652]
 661:..\src/command_processing.c ****     
 662:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 3004              		.loc 1 662 0
 3005 004a A64B     		ldr	r3, .L181+8
 3006 004c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3007 004e FA2B     		cmp	r3, #250
 3008 0050 00F0A581 		beq	.L179
 3009              	.LBB25:
 663:..\src/command_processing.c ****         uint8* m_addr;
 664:..\src/command_processing.c ****         uint8* m_tmp;
 665:..\src/command_processing.c ****         char str[100];
 666:..\src/command_processing.c ****         strcpy(info_string, "");
 3010              		.loc 1 666 0
 3011 0054 A14B     		ldr	r3, .L181
 3012 0056 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 82


 3013 0058 07F17803 		add	r3, r7, #120
 3014 005c 1A70     		strb	r2, [r3]
 667:..\src/command_processing.c ****         strcat(info_string, "\n");
 3015              		.loc 1 667 0
 3016 005e 07F17803 		add	r3, r7, #120
 3017 0062 1846     		mov	r0, r3
 3018 0064 FFF7FEFF 		bl	strlen
 3019 0068 0346     		mov	r3, r0
 3020 006a 1A46     		mov	r2, r3
 3021 006c 07F17803 		add	r3, r7, #120
 3022 0070 1344     		add	r3, r3, r2
 3023 0072 9D49     		ldr	r1, .L181+12
 3024 0074 1A46     		mov	r2, r3
 3025 0076 0B46     		mov	r3, r1
 3026 0078 1B88     		ldrh	r3, [r3]	@ unaligned
 3027 007a 1380     		strh	r3, [r2]	@ unaligned
 668:..\src/command_processing.c ****         
 669:..\src/command_processing.c ****         
 670:..\src/command_processing.c ****         for (idx = 0; idx < num_params; idx ++) {
 3028              		.loc 1 670 0
 3029 007c 0023     		movs	r3, #0
 3030 007e C7F8603A 		str	r3, [r7, #2656]
 3031 0082 7EE1     		b	.L157
 3032              	.L178:
 671:..\src/command_processing.c ****             if (PARAM_LIST[idx].ping){
 3033              		.loc 1 671 0
 3034 0084 D7F8603A 		ldr	r3, [r7, #2656]
 3035 0088 1B01     		lsls	r3, r3, #4
 3036 008a 07F10802 		add	r2, r7, #8
 3037 008e 1268     		ldr	r2, [r2]
 3038 0090 1344     		add	r3, r3, r2
 3039 0092 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 3040 0094 002B     		cmp	r3, #0
 3041 0096 00F06F81 		beq	.L158
 3042              	.LBB26:
 672:..\src/command_processing.c ****                 strcat(info_string, PARAM_LIST[idx].PARAM_STR );
 3043              		.loc 1 672 0
 3044 009a D7F8603A 		ldr	r3, [r7, #2656]
 3045 009e 1B01     		lsls	r3, r3, #4
 3046 00a0 07F10802 		add	r2, r7, #8
 3047 00a4 1268     		ldr	r2, [r2]
 3048 00a6 1344     		add	r3, r3, r2
 3049 00a8 9A68     		ldr	r2, [r3, #8]
 3050 00aa 07F17803 		add	r3, r7, #120
 3051 00ae 1146     		mov	r1, r2
 3052 00b0 1846     		mov	r0, r3
 3053 00b2 FFF7FEFF 		bl	strcat
 673:..\src/command_processing.c ****                 m_addr = (uint8*)PARAM_LIST[idx].VAR_P;
 3054              		.loc 1 673 0
 3055 00b6 D7F8603A 		ldr	r3, [r7, #2656]
 3056 00ba 1B01     		lsls	r3, r3, #4
 3057 00bc 07F10802 		add	r2, r7, #8
 3058 00c0 1268     		ldr	r2, [r2]
 3059 00c2 1344     		add	r3, r3, r2
 3060 00c4 1B68     		ldr	r3, [r3]
 3061 00c6 C7F8583A 		str	r3, [r7, #2648]
 674:..\src/command_processing.c ****                 uint8 sod = num_of_bytes(PARAM_LIST[idx].TYPES);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 83


 3062              		.loc 1 674 0
 3063 00ca D7F8603A 		ldr	r3, [r7, #2656]
 3064 00ce 1B01     		lsls	r3, r3, #4
 3065 00d0 07F10802 		add	r2, r7, #8
 3066 00d4 1268     		ldr	r2, [r2]
 3067 00d6 1344     		add	r3, r3, r2
 3068 00d8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3069 00da 1846     		mov	r0, r3
 3070 00dc FFF7FEFF 		bl	num_of_bytes
 3071 00e0 0346     		mov	r3, r0
 3072 00e2 87F8573A 		strb	r3, [r7, #2647]
 675:..\src/command_processing.c ****                 switch(PARAM_LIST[idx].custom){
 3073              		.loc 1 675 0
 3074 00e6 D7F8603A 		ldr	r3, [r7, #2656]
 3075 00ea 1B01     		lsls	r3, r3, #4
 3076 00ec 07F10802 		add	r2, r7, #8
 3077 00f0 1268     		ldr	r2, [r2]
 3078 00f2 1344     		add	r3, r3, r2
 3079 00f4 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 3080 00f6 052B     		cmp	r3, #5
 3081 00f8 00F0FE80 		beq	.L160
 676:..\src/command_processing.c ****                 case 0:   default:    
 677:..\src/command_processing.c ****                     for (i = 0; i < PARAM_LIST[idx].NUM_ITEMS; i++){
 3082              		.loc 1 677 0
 3083 00fc 0023     		movs	r3, #0
 3084 00fe C7F8643A 		str	r3, [r7, #2660]
 3085 0102 DCE0     		b	.L161
 3086              	.L176:
 678:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 3087              		.loc 1 678 0
 3088 0104 97F8573A 		ldrb	r3, [r7, #2647]	@ zero_extendqisi2
 3089 0108 D7F8642A 		ldr	r2, [r7, #2660]
 3090 010c 02FB03F3 		mul	r3, r2, r3
 3091 0110 1A46     		mov	r2, r3
 3092 0112 D7F8583A 		ldr	r3, [r7, #2648]
 3093 0116 1344     		add	r3, r3, r2
 3094 0118 C7F8503A 		str	r3, [r7, #2640]
 679:..\src/command_processing.c ****                         switch (PARAM_LIST[idx].TYPES){
 3095              		.loc 1 679 0
 3096 011c D7F8603A 		ldr	r3, [r7, #2656]
 3097 0120 1B01     		lsls	r3, r3, #4
 3098 0122 07F10802 		add	r2, r7, #8
 3099 0126 1268     		ldr	r2, [r2]
 3100 0128 1344     		add	r3, r3, r2
 3101 012a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3102 012c 072B     		cmp	r3, #7
 3103 012e 00F2B980 		bhi	.L162
 3104 0132 01A2     		adr	r2, .L164
 3105 0134 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3106              		.p2align 2
 3107              	.L164:
 3108 0138 27020000 		.word	.L163+1
 3109 013c 75010000 		.word	.L165+1
 3110 0140 59010000 		.word	.L166+1
 3111 0144 91010000 		.word	.L167+1
 3112 0148 AD010000 		.word	.L168+1
 3113 014c E5010000 		.word	.L169+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 84


 3114 0150 C9010000 		.word	.L170+1
 3115 0154 01020000 		.word	.L171+1
 3116              		.p2align 1
 3117              	.L166:
 680:..\src/command_processing.c ****                             case TYPE_UINT8:
 681:..\src/command_processing.c ****                                 aux_uint8 = *((uint8*)m_tmp);
 3118              		.loc 1 681 0
 3119 0158 D7F8503A 		ldr	r3, [r7, #2640]
 3120 015c 1B78     		ldrb	r3, [r3]
 3121 015e 87F84F3A 		strb	r3, [r7, #2639]
 682:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_uint8);
 3122              		.loc 1 682 0
 3123 0162 97F84F2A 		ldrb	r2, [r7, #2639]	@ zero_extendqisi2
 3124 0166 07F11403 		add	r3, r7, #20
 3125 016a 6049     		ldr	r1, .L181+16
 3126 016c 1846     		mov	r0, r3
 3127 016e FFF7FEFF 		bl	sprintf
 683:..\src/command_processing.c ****                                 break;
 3128              		.loc 1 683 0
 3129 0172 97E0     		b	.L162
 3130              	.L165:
 684:..\src/command_processing.c ****                             case TYPE_INT8:
 685:..\src/command_processing.c ****                                 aux_int8 = *((int8*)m_tmp);
 3131              		.loc 1 685 0
 3132 0174 D7F8503A 		ldr	r3, [r7, #2640]
 3133 0178 1B78     		ldrb	r3, [r3]
 3134 017a 87F84E3A 		strb	r3, [r7, #2638]
 686:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_int8);
 3135              		.loc 1 686 0
 3136 017e 97F94E2A 		ldrsb	r2, [r7, #2638]
 3137 0182 07F11403 		add	r3, r7, #20
 3138 0186 5949     		ldr	r1, .L181+16
 3139 0188 1846     		mov	r0, r3
 3140 018a FFF7FEFF 		bl	sprintf
 687:..\src/command_processing.c ****                                 break;
 3141              		.loc 1 687 0
 3142 018e 89E0     		b	.L162
 3143              	.L167:
 688:..\src/command_processing.c ****                             case TYPE_INT16:   
 689:..\src/command_processing.c ****                                 aux_int16 = *((int16*)m_tmp);
 3144              		.loc 1 689 0
 3145 0190 D7F8503A 		ldr	r3, [r7, #2640]
 3146 0194 1B88     		ldrh	r3, [r3]	@ movhi
 3147 0196 A7F84C3A 		strh	r3, [r7, #2636]	@ movhi
 690:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_int16);
 3148              		.loc 1 690 0
 3149 019a B7F94C2A 		ldrsh	r2, [r7, #2636]
 3150 019e 07F11403 		add	r3, r7, #20
 3151 01a2 5249     		ldr	r1, .L181+16
 3152 01a4 1846     		mov	r0, r3
 3153 01a6 FFF7FEFF 		bl	sprintf
 691:..\src/command_processing.c ****                                 break;
 3154              		.loc 1 691 0
 3155 01aa 7BE0     		b	.L162
 3156              	.L168:
 692:..\src/command_processing.c ****                             
 693:..\src/command_processing.c ****                             case TYPE_UINT16: 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 85


 694:..\src/command_processing.c ****                                 aux_uint16 = *((uint16*)m_tmp);
 3157              		.loc 1 694 0
 3158 01ac D7F8503A 		ldr	r3, [r7, #2640]
 3159 01b0 1B88     		ldrh	r3, [r3]	@ movhi
 3160 01b2 A7F84A3A 		strh	r3, [r7, #2634]	@ movhi
 695:..\src/command_processing.c ****                                 sprintf(str, " %d", aux_uint16);
 3161              		.loc 1 695 0
 3162 01b6 B7F84A2A 		ldrh	r2, [r7, #2634]
 3163 01ba 07F11403 		add	r3, r7, #20
 3164 01be 4B49     		ldr	r1, .L181+16
 3165 01c0 1846     		mov	r0, r3
 3166 01c2 FFF7FEFF 		bl	sprintf
 696:..\src/command_processing.c ****                                 break;
 3167              		.loc 1 696 0
 3168 01c6 6DE0     		b	.L162
 3169              	.L170:
 697:..\src/command_processing.c ****                             
 698:..\src/command_processing.c ****                             case TYPE_UINT32:
 699:..\src/command_processing.c ****                                 aux_uint32 = *((uint32*)m_tmp);
 3170              		.loc 1 699 0
 3171 01c8 D7F8503A 		ldr	r3, [r7, #2640]
 3172 01cc 1B68     		ldr	r3, [r3]
 3173 01ce C7F8443A 		str	r3, [r7, #2628]
 700:..\src/command_processing.c ****                                 sprintf(str, " %ld", aux_uint32);
 3174              		.loc 1 700 0
 3175 01d2 07F11403 		add	r3, r7, #20
 3176 01d6 D7F8442A 		ldr	r2, [r7, #2628]
 3177 01da 4549     		ldr	r1, .L181+20
 3178 01dc 1846     		mov	r0, r3
 3179 01de FFF7FEFF 		bl	sprintf
 701:..\src/command_processing.c ****                                 break;
 3180              		.loc 1 701 0
 3181 01e2 5FE0     		b	.L162
 3182              	.L169:
 702:..\src/command_processing.c ****                                 
 703:..\src/command_processing.c ****                             case TYPE_INT32:
 704:..\src/command_processing.c ****                                 aux_int32 = *((int32*)m_tmp);
 3183              		.loc 1 704 0
 3184 01e4 D7F8503A 		ldr	r3, [r7, #2640]
 3185 01e8 1B68     		ldr	r3, [r3]
 3186 01ea C7F8403A 		str	r3, [r7, #2624]
 705:..\src/command_processing.c ****                                 sprintf(str, " %ld", aux_int32);
 3187              		.loc 1 705 0
 3188 01ee 07F11403 		add	r3, r7, #20
 3189 01f2 D7F8402A 		ldr	r2, [r7, #2624]
 3190 01f6 3E49     		ldr	r1, .L181+20
 3191 01f8 1846     		mov	r0, r3
 3192 01fa FFF7FEFF 		bl	sprintf
 706:..\src/command_processing.c ****                                 break;
 3193              		.loc 1 706 0
 3194 01fe 51E0     		b	.L162
 3195              	.L171:
 707:..\src/command_processing.c ****                                 
 708:..\src/command_processing.c ****                             case TYPE_FLOAT:
 709:..\src/command_processing.c ****                                 aux_float = *((float*)m_tmp);
 3196              		.loc 1 709 0
 3197 0200 D7F8503A 		ldr	r3, [r7, #2640]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 86


 3198 0204 1B68     		ldr	r3, [r3]	@ float
 3199 0206 C7F83C3A 		str	r3, [r7, #2620]	@ float
 710:..\src/command_processing.c ****                                 sprintf(str, " %f", aux_float);
 3200              		.loc 1 710 0
 3201 020a D7F83C0A 		ldr	r0, [r7, #2620]	@ float
 3202 020e FFF7FEFF 		bl	__aeabi_f2d
 3203 0212 0346     		mov	r3, r0
 3204 0214 0C46     		mov	r4, r1
 3205 0216 07F11400 		add	r0, r7, #20
 3206 021a 1A46     		mov	r2, r3
 3207 021c 2346     		mov	r3, r4
 3208 021e 3549     		ldr	r1, .L181+24
 3209 0220 FFF7FEFF 		bl	sprintf
 711:..\src/command_processing.c ****                                 break;
 3210              		.loc 1 711 0
 3211 0224 3EE0     		b	.L162
 3212              	.L163:
 712:..\src/command_processing.c ****                                 
 713:..\src/command_processing.c ****                             case TYPE_FLAG:
 714:..\src/command_processing.c ****                                 for (i = 0; i < num_menus; i++){
 3213              		.loc 1 714 0
 3214 0226 0023     		movs	r3, #0
 3215 0228 C7F8643A 		str	r3, [r7, #2660]
 3216 022c 32E0     		b	.L172
 3217              	.L175:
 715:..\src/command_processing.c ****                                     if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 3218              		.loc 1 715 0
 3219 022e D7F8643A 		ldr	r3, [r7, #2660]
 3220 0232 2C22     		movs	r2, #44
 3221 0234 02FB03F3 		mul	r3, r2, r3
 3222 0238 3A1D     		adds	r2, r7, #4
 3223 023a 1268     		ldr	r2, [r2]
 3224 023c 1344     		add	r3, r3, r2
 3225 023e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3226 0240 D7F8603A 		ldr	r3, [r7, #2656]
 3227 0244 1B01     		lsls	r3, r3, #4
 3228 0246 07F10801 		add	r1, r7, #8
 3229 024a 0968     		ldr	r1, [r1]
 3230 024c 0B44     		add	r3, r3, r1
 3231 024e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 3232 0250 9A42     		cmp	r2, r3
 3233 0252 1AD1     		bne	.L173
 716:..\src/command_processing.c ****                                         strcpy(str, "");
 3234              		.loc 1 716 0
 3235 0254 214B     		ldr	r3, .L181
 3236 0256 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3237 0258 07F11403 		add	r3, r7, #20
 3238 025c 1A70     		strb	r2, [r3]
 717:..\src/command_processing.c ****                                         strcat(str, MENU_LIST[i].choice[*m_addr]);
 3239              		.loc 1 717 0
 3240 025e D7F8643A 		ldr	r3, [r7, #2660]
 3241 0262 2C22     		movs	r2, #44
 3242 0264 02FB03F3 		mul	r3, r2, r3
 3243 0268 3A1D     		adds	r2, r7, #4
 3244 026a 1268     		ldr	r2, [r2]
 3245 026c 1A44     		add	r2, r2, r3
 3246 026e D7F8583A 		ldr	r3, [r7, #2648]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 87


 3247 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3248 0274 9B00     		lsls	r3, r3, #2
 3249 0276 1344     		add	r3, r3, r2
 3250 0278 5A68     		ldr	r2, [r3, #4]
 3251 027a 07F11403 		add	r3, r7, #20
 3252 027e 1146     		mov	r1, r2
 3253 0280 1846     		mov	r0, r3
 3254 0282 FFF7FEFF 		bl	strcat
 718:..\src/command_processing.c ****                                         break;
 3255              		.loc 1 718 0
 3256 0286 00BF     		nop
 719:..\src/command_processing.c ****                                     }
 720:..\src/command_processing.c ****                                 }
 721:..\src/command_processing.c ****                                 break;
 3257              		.loc 1 721 0
 3258 0288 0BE0     		b	.L180
 3259              	.L173:
 714:..\src/command_processing.c ****                                     if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 3260              		.loc 1 714 0 discriminator 2
 3261 028a D7F8643A 		ldr	r3, [r7, #2660]
 3262 028e 0133     		adds	r3, r3, #1
 3263 0290 C7F8643A 		str	r3, [r7, #2660]
 3264              	.L172:
 714:..\src/command_processing.c ****                                     if (MENU_LIST[i].name == PARAM_LIST[idx].MENU){
 3265              		.loc 1 714 0 is_stmt 0 discriminator 1
 3266 0294 07F10E03 		add	r3, r7, #14
 3267 0298 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3268 029a D7F8643A 		ldr	r3, [r7, #2660]
 3269 029e 9A42     		cmp	r2, r3
 3270 02a0 C5DC     		bgt	.L175
 3271              	.L180:
 3272              		.loc 1 721 0 is_stmt 1
 3273 02a2 00BF     		nop
 3274              	.L162:
 722:..\src/command_processing.c ****                         } 
 723:..\src/command_processing.c ****                         strcat(info_string, str);
 3275              		.loc 1 723 0 discriminator 2
 3276 02a4 07F11402 		add	r2, r7, #20
 3277 02a8 07F17803 		add	r3, r7, #120
 3278 02ac 1146     		mov	r1, r2
 3279 02ae 1846     		mov	r0, r3
 3280 02b0 FFF7FEFF 		bl	strcat
 677:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 3281              		.loc 1 677 0 discriminator 2
 3282 02b4 D7F8643A 		ldr	r3, [r7, #2660]
 3283 02b8 0133     		adds	r3, r3, #1
 3284 02ba C7F8643A 		str	r3, [r7, #2660]
 3285              	.L161:
 677:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 3286              		.loc 1 677 0 is_stmt 0 discriminator 1
 3287 02be D7F8603A 		ldr	r3, [r7, #2656]
 3288 02c2 1B01     		lsls	r3, r3, #4
 3289 02c4 07F10802 		add	r2, r7, #8
 3290 02c8 1268     		ldr	r2, [r2]
 3291 02ca 1344     		add	r3, r3, r2
 3292 02cc 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3293 02ce 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 88


 3294 02d0 D7F8643A 		ldr	r3, [r7, #2660]
 3295 02d4 9A42     		cmp	r2, r3
 3296 02d6 3FF715AF 		bgt	.L176
 724:..\src/command_processing.c ****                     }
 725:..\src/command_processing.c ****                     break;
 3297              		.loc 1 725 0 is_stmt 1
 3298 02da 3EE0     		b	.L177
 3299              	.L182:
 3300              		.align	2
 3301              	.L181:
 3302 02dc 00000000 		.word	.LC8
 3303 02e0 00000000 		.word	superstring
 3304 02e4 00000000 		.word	c_mem
 3305 02e8 28000000 		.word	.LC17
 3306 02ec 78020000 		.word	.LC34
 3307 02f0 7C020000 		.word	.LC35
 3308 02f4 84020000 		.word	.LC36
 3309              	.L160:
 726:..\src/command_processing.c ****                     
 727:..\src/command_processing.c ****                     
 728:..\src/command_processing.c ****                 case CUSTOM_POS_LIM:        
 729:..\src/command_processing.c ****                     aux_int32 = (c_mem.SH_config.pos_lim_inf >> c_mem.SH_config.res);
 3310              		.loc 1 729 0
 3311 02f8 2B4B     		ldr	r3, .L183
 3312 02fa 1B6A     		ldr	r3, [r3, #32]
 3313 02fc 2A4A     		ldr	r2, .L183
 3314 02fe 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 3315 0302 1341     		asrs	r3, r3, r2
 3316 0304 C7F8403A 		str	r3, [r7, #2624]
 730:..\src/command_processing.c ****                     sprintf(str, " %ld", aux_int32);
 3317              		.loc 1 730 0
 3318 0308 07F11403 		add	r3, r7, #20
 3319 030c D7F8402A 		ldr	r2, [r7, #2624]
 3320 0310 2649     		ldr	r1, .L183+4
 3321 0312 1846     		mov	r0, r3
 3322 0314 FFF7FEFF 		bl	sprintf
 731:..\src/command_processing.c ****                     strcat(info_string, str);
 3323              		.loc 1 731 0
 3324 0318 07F11402 		add	r2, r7, #20
 3325 031c 07F17803 		add	r3, r7, #120
 3326 0320 1146     		mov	r1, r2
 3327 0322 1846     		mov	r0, r3
 3328 0324 FFF7FEFF 		bl	strcat
 732:..\src/command_processing.c ****                     aux_int32 = (c_mem.SH_config.pos_lim_sup >> c_mem.SH_config.res);
 3329              		.loc 1 732 0
 3330 0328 1F4B     		ldr	r3, .L183
 3331 032a 5B6A     		ldr	r3, [r3, #36]
 3332 032c 1E4A     		ldr	r2, .L183
 3333 032e 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 3334 0332 1341     		asrs	r3, r3, r2
 3335 0334 C7F8403A 		str	r3, [r7, #2624]
 733:..\src/command_processing.c ****                     sprintf(str, " %ld", aux_int32);
 3336              		.loc 1 733 0
 3337 0338 07F11403 		add	r3, r7, #20
 3338 033c D7F8402A 		ldr	r2, [r7, #2624]
 3339 0340 1A49     		ldr	r1, .L183+4
 3340 0342 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 89


 3341 0344 FFF7FEFF 		bl	sprintf
 734:..\src/command_processing.c ****                     strcat(info_string, str);
 3342              		.loc 1 734 0
 3343 0348 07F11402 		add	r2, r7, #20
 3344 034c 07F17803 		add	r3, r7, #120
 3345 0350 1146     		mov	r1, r2
 3346 0352 1846     		mov	r0, r3
 3347 0354 FFF7FEFF 		bl	strcat
 735:..\src/command_processing.c ****                     break;
 3348              		.loc 1 735 0
 3349 0358 00BF     		nop
 3350              	.L177:
 736:..\src/command_processing.c ****                 }
 737:..\src/command_processing.c ****                 
 738:..\src/command_processing.c ****                 strcat(info_string, "\n");
 3351              		.loc 1 738 0
 3352 035a 07F17803 		add	r3, r7, #120
 3353 035e 1846     		mov	r0, r3
 3354 0360 FFF7FEFF 		bl	strlen
 3355 0364 0346     		mov	r3, r0
 3356 0366 1A46     		mov	r2, r3
 3357 0368 07F17803 		add	r3, r7, #120
 3358 036c 1344     		add	r3, r3, r2
 3359 036e 1049     		ldr	r1, .L183+8
 3360 0370 1A46     		mov	r2, r3
 3361 0372 0B46     		mov	r3, r1
 3362 0374 1B88     		ldrh	r3, [r3]	@ unaligned
 3363 0376 1380     		strh	r3, [r2]	@ unaligned
 3364              	.L158:
 3365              	.LBE26:
 670:..\src/command_processing.c ****             if (PARAM_LIST[idx].ping){
 3366              		.loc 1 670 0 discriminator 2
 3367 0378 D7F8603A 		ldr	r3, [r7, #2656]
 3368 037c 0133     		adds	r3, r3, #1
 3369 037e C7F8603A 		str	r3, [r7, #2656]
 3370              	.L157:
 670:..\src/command_processing.c ****             if (PARAM_LIST[idx].ping){
 3371              		.loc 1 670 0 is_stmt 0 discriminator 1
 3372 0382 07F10F03 		add	r3, r7, #15
 3373 0386 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3374 0388 D7F8603A 		ldr	r3, [r7, #2656]
 3375 038c 9A42     		cmp	r2, r3
 3376 038e 3FF779AE 		bgt	.L178
 739:..\src/command_processing.c ****                 
 740:..\src/command_processing.c ****             }
 741:..\src/command_processing.c ****             
 742:..\src/command_processing.c ****         }
 743:..\src/command_processing.c ****               
 744:..\src/command_processing.c ****       
 745:..\src/command_processing.c ****     strcat(superstring,info_string);
 3377              		.loc 1 745 0 is_stmt 1
 3378 0392 07F17803 		add	r3, r7, #120
 3379 0396 1946     		mov	r1, r3
 3380 0398 0648     		ldr	r0, .L183+12
 3381 039a FFF7FEFF 		bl	strcat
 3382              	.L179:
 3383              	.LBE25:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 90


 746:..\src/command_processing.c ****     
 747:..\src/command_processing.c **** }}
 3384              		.loc 1 747 0
 3385 039e 00BF     		nop
 3386 03a0 07F66C27 		addw	r7, r7, #2668
 3387              		.cfi_def_cfa_offset 12
 3388 03a4 BD46     		mov	sp, r7
 3389              		.cfi_def_cfa_register 13
 3390              		@ sp needed
 3391 03a6 90BD     		pop	{r4, r7, pc}
 3392              	.L184:
 3393              		.align	2
 3394              	.L183:
 3395 03a8 00000000 		.word	c_mem
 3396 03ac 7C020000 		.word	.LC35
 3397 03b0 28000000 		.word	.LC17
 3398 03b4 00000000 		.word	superstring
 3399              		.cfi_endproc
 3400              	.LFE73:
 3401              		.size	qbadminp_string, .-qbadminp_string
 3402              		.section	.rodata
 3403              		.align	2
 3404              	.LC37:
 3405 0288 0D0A00   		.ascii	"\015\012\000"
 3406 028b 00       		.align	2
 3407              	.LC38:
 3408 028c 4669726D 		.ascii	"Firmware version: \000"
 3408      77617265 
 3408      20766572 
 3408      73696F6E 
 3408      3A2000
 3409 029f 00       		.align	2
 3410              	.LC39:
 3411 02a0 50554C53 		.ascii	"PULSE_HealthySubj: updated 27/11/24\000"
 3411      455F4865 
 3411      616C7468 
 3411      79537562 
 3411      6A3A2075 
 3412              		.align	2
 3413              	.LC40:
 3414 02c4 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 3414      0A00
 3415 02ca 0000     		.align	2
 3416              	.LC41:
 3417 02cc 44455649 		.ascii	"DEVICE INFO\015\012\000"
 3417      43452049 
 3417      4E464F0D 
 3417      0A00
 3418 02da 0000     		.align	2
 3419              	.LC42:
 3420 02dc 44657669 		.ascii	"Device: PULSE\015\012\000"
 3420      63653A20 
 3420      50554C53 
 3420      450D0A00 
 3421              		.align	2
 3422              	.LC43:
 3423 02ec 454D4720 		.ascii	"EMG input %d -> %d\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 91


 3423      696E7075 
 3423      74202564 
 3423      202D3E20 
 3423      256400
 3424 02ff 00       		.align	2
 3425              	.LC44:
 3426 0300 41637475 		.ascii	"Actuators input: Pump = %d, VT0 = %d, VT1 = %d \015"
 3426      61746F72 
 3426      7320696E 
 3426      7075743A 
 3426      2050756D 
 3427 0330 0A00     		.ascii	"\012\000"
 3428              		.global	__aeabi_f2uiz
 3429 0332 0000     		.align	2
 3430              	.LC45:
 3431 0334 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 3431      20465720 
 3431      6379636C 
 3431      65207469 
 3431      6D653A20 
 3432              		.align	2
 3433              	.LC46:
 3434 0350 0D0A0000 		.ascii	"\015\012\000\000"
 3435              		.section	.text.prepare_generic_info,"ax",%progbits
 3436              		.align	2
 3437              		.global	prepare_generic_info
 3438              		.thumb
 3439              		.thumb_func
 3440              		.type	prepare_generic_info, %function
 3441              	prepare_generic_info:
 3442              	.LFB74:
 748:..\src/command_processing.c **** //==============================================================================
 749:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
 750:..\src/command_processing.c **** //==============================================================================
 751:..\src/command_processing.c **** 
 752:..\src/command_processing.c **** void prepare_generic_info(char *info_string){   
 3443              		.loc 1 752 0
 3444              		.cfi_startproc
 3445              		@ args = 0, pretend = 0, frame = 120
 3446              		@ frame_needed = 1, uses_anonymous_args = 0
 3447 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3448              		.cfi_def_cfa_offset 20
 3449              		.cfi_offset 4, -20
 3450              		.cfi_offset 5, -16
 3451              		.cfi_offset 6, -12
 3452              		.cfi_offset 7, -8
 3453              		.cfi_offset 14, -4
 3454 0002 A1B0     		sub	sp, sp, #132
 3455              		.cfi_def_cfa_offset 152
 3456 0004 02AF     		add	r7, sp, #8
 3457              		.cfi_def_cfa 7, 144
 3458 0006 7860     		str	r0, [r7, #4]
 753:..\src/command_processing.c ****     
 754:..\src/command_processing.c ****      manage_param_list(300,0);
 3459              		.loc 1 754 0
 3460 0008 0021     		movs	r1, #0
 3461 000a 4FF49670 		mov	r0, #300
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 92


 3462 000e FFF7FEFF 		bl	manage_param_list
 755:..\src/command_processing.c ****     int i;
 756:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 3463              		.loc 1 756 0
 3464 0012 704B     		ldr	r3, .L191
 3465 0014 3B67     		str	r3, [r7, #112]
 757:..\src/command_processing.c ****     
 758:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 3466              		.loc 1 758 0
 3467 0016 6F4B     		ldr	r3, .L191
 3468 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3469 001a FA2B     		cmp	r3, #250
 3470 001c 00F0D680 		beq	.L190
 3471              	.LBB27:
 759:..\src/command_processing.c ****         
 760:..\src/command_processing.c ****         char str[100];
 761:..\src/command_processing.c ****         strcpy(info_string, "");
 3472              		.loc 1 761 0
 3473 0020 7B68     		ldr	r3, [r7, #4]
 3474 0022 0022     		movs	r2, #0
 3475 0024 1A70     		strb	r2, [r3]
 762:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3476              		.loc 1 762 0
 3477 0026 7868     		ldr	r0, [r7, #4]
 3478 0028 FFF7FEFF 		bl	strlen
 3479 002c 0346     		mov	r3, r0
 3480 002e 1A46     		mov	r2, r3
 3481 0030 7B68     		ldr	r3, [r7, #4]
 3482 0032 1344     		add	r3, r3, r2
 3483 0034 684A     		ldr	r2, .L191+4
 3484 0036 1188     		ldrh	r1, [r2]	@ unaligned
 3485 0038 9278     		ldrb	r2, [r2, #2]
 3486 003a 1980     		strh	r1, [r3]	@ unaligned
 3487 003c 9A70     		strb	r2, [r3, #2]
 763:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 3488              		.loc 1 763 0
 3489 003e 7868     		ldr	r0, [r7, #4]
 3490 0040 FFF7FEFF 		bl	strlen
 3491 0044 0346     		mov	r3, r0
 3492 0046 1A46     		mov	r2, r3
 3493 0048 7B68     		ldr	r3, [r7, #4]
 3494 004a 1344     		add	r3, r3, r2
 3495 004c 634A     		ldr	r2, .L191+8
 3496 004e 1D46     		mov	r5, r3
 3497 0050 1446     		mov	r4, r2
 3498 0052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3499 0054 2860     		str	r0, [r5]	@ unaligned
 3500 0056 6960     		str	r1, [r5, #4]	@ unaligned
 3501 0058 AA60     		str	r2, [r5, #8]	@ unaligned
 3502 005a EB60     		str	r3, [r5, #12]	@ unaligned
 3503 005c 2388     		ldrh	r3, [r4]	@ unaligned
 3504 005e A278     		ldrb	r2, [r4, #2]
 3505 0060 2B82     		strh	r3, [r5, #16]	@ unaligned
 3506 0062 1346     		mov	r3, r2
 3507 0064 AB74     		strb	r3, [r5, #18]
 764:..\src/command_processing.c ****         strcat(info_string, VERSION);
 3508              		.loc 1 764 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 93


 3509 0066 7868     		ldr	r0, [r7, #4]
 3510 0068 FFF7FEFF 		bl	strlen
 3511 006c 0346     		mov	r3, r0
 3512 006e 1A46     		mov	r2, r3
 3513 0070 7B68     		ldr	r3, [r7, #4]
 3514 0072 1344     		add	r3, r3, r2
 3515 0074 5A4A     		ldr	r2, .L191+12
 3516 0076 1446     		mov	r4, r2
 3517 0078 9E46     		mov	lr, r3
 3518 007a 04F1200C 		add	ip, r4, #32
 3519              	.L187:
 3520 007e 7546     		mov	r5, lr
 3521 0080 2646     		mov	r6, r4
 3522 0082 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3523 0084 2860     		str	r0, [r5]	@ unaligned
 3524 0086 6960     		str	r1, [r5, #4]	@ unaligned
 3525 0088 AA60     		str	r2, [r5, #8]	@ unaligned
 3526 008a EB60     		str	r3, [r5, #12]	@ unaligned
 3527 008c 1034     		adds	r4, r4, #16
 3528 008e 0EF1100E 		add	lr, lr, #16
 3529 0092 6445     		cmp	r4, ip
 3530 0094 F3D1     		bne	.L187
 3531 0096 7346     		mov	r3, lr
 3532 0098 2246     		mov	r2, r4
 3533 009a 1068     		ldr	r0, [r2]	@ unaligned
 3534 009c 1860     		str	r0, [r3]	@ unaligned
 765:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 3535              		.loc 1 765 0
 3536 009e 7868     		ldr	r0, [r7, #4]
 3537 00a0 FFF7FEFF 		bl	strlen
 3538 00a4 0346     		mov	r3, r0
 3539 00a6 1A46     		mov	r2, r3
 3540 00a8 7B68     		ldr	r3, [r7, #4]
 3541 00aa 1344     		add	r3, r3, r2
 3542 00ac 4D4A     		ldr	r2, .L191+16
 3543 00ae 1068     		ldr	r0, [r2]	@ unaligned
 3544 00b0 1860     		str	r0, [r3]	@ unaligned
 3545 00b2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3546 00b4 9A80     		strh	r2, [r3, #4]	@ unaligned
 766:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 3547              		.loc 1 766 0
 3548 00b6 7868     		ldr	r0, [r7, #4]
 3549 00b8 FFF7FEFF 		bl	strlen
 3550 00bc 0346     		mov	r3, r0
 3551 00be 1A46     		mov	r2, r3
 3552 00c0 7B68     		ldr	r3, [r7, #4]
 3553 00c2 1344     		add	r3, r3, r2
 3554 00c4 484A     		ldr	r2, .L191+20
 3555 00c6 1C46     		mov	r4, r3
 3556 00c8 1346     		mov	r3, r2
 3557 00ca 07CB     		ldmia	r3!, {r0, r1, r2}
 3558 00cc 2060     		str	r0, [r4]	@ unaligned
 3559 00ce 6160     		str	r1, [r4, #4]	@ unaligned
 3560 00d0 A260     		str	r2, [r4, #8]	@ unaligned
 3561 00d2 1B88     		ldrh	r3, [r3]	@ unaligned
 3562 00d4 A381     		strh	r3, [r4, #12]	@ unaligned
 767:..\src/command_processing.c ****         strcat(info_string, "Device: PULSE\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 94


 3563              		.loc 1 767 0
 3564 00d6 7868     		ldr	r0, [r7, #4]
 3565 00d8 FFF7FEFF 		bl	strlen
 3566 00dc 0346     		mov	r3, r0
 3567 00de 1A46     		mov	r2, r3
 3568 00e0 7B68     		ldr	r3, [r7, #4]
 3569 00e2 1344     		add	r3, r3, r2
 3570 00e4 414A     		ldr	r2, .L191+24
 3571 00e6 1C46     		mov	r4, r3
 3572 00e8 1546     		mov	r5, r2
 3573 00ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3574 00ec 2060     		str	r0, [r4]	@ unaligned
 3575 00ee 6160     		str	r1, [r4, #4]	@ unaligned
 3576 00f0 A260     		str	r2, [r4, #8]	@ unaligned
 3577 00f2 E360     		str	r3, [r4, #12]	@ unaligned
 768:..\src/command_processing.c ****         strcat(info_string, superstring);
 3578              		.loc 1 768 0
 3579 00f4 3E49     		ldr	r1, .L191+28
 3580 00f6 7868     		ldr	r0, [r7, #4]
 3581 00f8 FFF7FEFF 		bl	strcat
 769:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 3582              		.loc 1 769 0
 3583 00fc 7868     		ldr	r0, [r7, #4]
 3584 00fe FFF7FEFF 		bl	strlen
 3585 0102 0346     		mov	r3, r0
 3586 0104 1A46     		mov	r2, r3
 3587 0106 7B68     		ldr	r3, [r7, #4]
 3588 0108 1344     		add	r3, r3, r2
 3589 010a 334A     		ldr	r2, .L191+4
 3590 010c 1188     		ldrh	r1, [r2]	@ unaligned
 3591 010e 9278     		ldrb	r2, [r2, #2]
 3592 0110 1980     		strh	r1, [r3]	@ unaligned
 3593 0112 9A70     		strb	r2, [r3, #2]
 770:..\src/command_processing.c **** 
 771:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 3594              		.loc 1 771 0
 3595 0114 0023     		movs	r3, #0
 3596 0116 7B67     		str	r3, [r7, #116]
 3597 0118 20E0     		b	.L188
 3598              	.L189:
 772:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3599              		.loc 1 772 0 discriminator 3
 3600 011a 7B6F     		ldr	r3, [r7, #116]
 3601 011c 591C     		adds	r1, r3, #1
 3602 011e 354A     		ldr	r2, .L191+32
 3603 0120 7B6F     		ldr	r3, [r7, #116]
 3604 0122 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3605 0126 07F10C00 		add	r0, r7, #12
 3606 012a 0A46     		mov	r2, r1
 3607 012c 3249     		ldr	r1, .L191+36
 3608 012e FFF7FEFF 		bl	sprintf
 773:..\src/command_processing.c ****                 strcat(info_string, str);
 3609              		.loc 1 773 0 discriminator 3
 3610 0132 07F10C03 		add	r3, r7, #12
 3611 0136 1946     		mov	r1, r3
 3612 0138 7868     		ldr	r0, [r7, #4]
 3613 013a FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 95


 774:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 3614              		.loc 1 774 0 discriminator 3
 3615 013e 7868     		ldr	r0, [r7, #4]
 3616 0140 FFF7FEFF 		bl	strlen
 3617 0144 0346     		mov	r3, r0
 3618 0146 1A46     		mov	r2, r3
 3619 0148 7B68     		ldr	r3, [r7, #4]
 3620 014a 1344     		add	r3, r3, r2
 3621 014c 224A     		ldr	r2, .L191+4
 3622 014e 1188     		ldrh	r1, [r2]	@ unaligned
 3623 0150 9278     		ldrb	r2, [r2, #2]
 3624 0152 1980     		strh	r1, [r3]	@ unaligned
 3625 0154 9A70     		strb	r2, [r3, #2]
 771:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3626              		.loc 1 771 0 discriminator 3
 3627 0156 7B6F     		ldr	r3, [r7, #116]
 3628 0158 0133     		adds	r3, r3, #1
 3629 015a 7B67     		str	r3, [r7, #116]
 3630              	.L188:
 771:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 3631              		.loc 1 771 0 is_stmt 0 discriminator 1
 3632 015c 7B6F     		ldr	r3, [r7, #116]
 3633 015e 012B     		cmp	r3, #1
 3634 0160 DBDD     		ble	.L189
 775:..\src/command_processing.c ****             }
 776:..\src/command_processing.c ****             
 777:..\src/command_processing.c ****             
 778:..\src/command_processing.c ****         sprintf(str,"Actuators input: Pump = %d, VT0 = %d, VT1 = %d \r\n",(int) Pump_refOld, (int)V
 3635              		.loc 1 778 0 is_stmt 1
 3636 0162 264B     		ldr	r3, .L191+40
 3637 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3638 0166 1A46     		mov	r2, r3
 3639 0168 254B     		ldr	r3, .L191+44
 3640 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3641 016c 1946     		mov	r1, r3
 3642 016e 244B     		ldr	r3, .L191+44
 3643 0170 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3644 0172 07F10C00 		add	r0, r7, #12
 3645 0176 0093     		str	r3, [sp]
 3646 0178 0B46     		mov	r3, r1
 3647 017a 2249     		ldr	r1, .L191+48
 3648 017c FFF7FEFF 		bl	sprintf
 779:..\src/command_processing.c ****         strcat(info_string, str);
 3649              		.loc 1 779 0
 3650 0180 07F10C03 		add	r3, r7, #12
 3651 0184 1946     		mov	r1, r3
 3652 0186 7868     		ldr	r0, [r7, #4]
 3653 0188 FFF7FEFF 		bl	strcat
 780:..\src/command_processing.c ****         //sprintf(str, "Last FW cycle time: %d us\r\n", (uint16_t)cycle_time);
 781:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)cycle_time);
 3654              		.loc 1 781 0
 3655 018c 1E4B     		ldr	r3, .L191+52
 3656 018e 1B68     		ldr	r3, [r3]	@ float
 3657 0190 1846     		mov	r0, r3
 3658 0192 FFF7FEFF 		bl	__aeabi_f2uiz
 3659 0196 0346     		mov	r3, r0
 3660 0198 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 96


 3661 019a 1A46     		mov	r2, r3
 3662 019c 07F10C03 		add	r3, r7, #12
 3663 01a0 1A49     		ldr	r1, .L191+56
 3664 01a2 1846     		mov	r0, r3
 3665 01a4 FFF7FEFF 		bl	sprintf
 782:..\src/command_processing.c ****         strcat(info_string, str);
 3666              		.loc 1 782 0
 3667 01a8 07F10C03 		add	r3, r7, #12
 3668 01ac 1946     		mov	r1, r3
 3669 01ae 7868     		ldr	r0, [r7, #4]
 3670 01b0 FFF7FEFF 		bl	strcat
 783:..\src/command_processing.c **** 
 784:..\src/command_processing.c ****                
 785:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 3671              		.loc 1 785 0
 3672 01b4 7868     		ldr	r0, [r7, #4]
 3673 01b6 FFF7FEFF 		bl	strlen
 3674 01ba 0346     		mov	r3, r0
 3675 01bc 1A46     		mov	r2, r3
 3676 01be 7B68     		ldr	r3, [r7, #4]
 3677 01c0 1344     		add	r3, r3, r2
 3678 01c2 134A     		ldr	r2, .L191+60
 3679 01c4 1188     		ldrh	r1, [r2]	@ unaligned
 3680 01c6 9278     		ldrb	r2, [r2, #2]
 3681 01c8 1980     		strh	r1, [r3]	@ unaligned
 3682 01ca 9A70     		strb	r2, [r3, #2]
 3683              	.L190:
 3684              	.LBE27:
 786:..\src/command_processing.c ****     }
 787:..\src/command_processing.c **** }
 3685              		.loc 1 787 0
 3686 01cc 00BF     		nop
 3687 01ce 7C37     		adds	r7, r7, #124
 3688              		.cfi_def_cfa_offset 20
 3689 01d0 BD46     		mov	sp, r7
 3690              		.cfi_def_cfa_register 13
 3691              		@ sp needed
 3692 01d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 3693              	.L192:
 3694              		.align	2
 3695              	.L191:
 3696 01d4 00000000 		.word	c_mem
 3697 01d8 88020000 		.word	.LC37
 3698 01dc 8C020000 		.word	.LC38
 3699 01e0 A0020000 		.word	.LC39
 3700 01e4 C4020000 		.word	.LC40
 3701 01e8 CC020000 		.word	.LC41
 3702 01ec DC020000 		.word	.LC42
 3703 01f0 00000000 		.word	superstring
 3704 01f4 00000000 		.word	g_adc_meas
 3705 01f8 EC020000 		.word	.LC43
 3706 01fc 00000000 		.word	Pump_refOld
 3707 0200 00000000 		.word	VT_refOld
 3708 0204 00030000 		.word	.LC44
 3709 0208 00000000 		.word	cycle_time
 3710 020c 34030000 		.word	.LC45
 3711 0210 50030000 		.word	.LC46
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 97


 3712              		.cfi_endproc
 3713              	.LFE74:
 3714              		.size	prepare_generic_info, .-prepare_generic_info
 3715              		.section	.text.prepare_counter_info,"ax",%progbits
 3716              		.align	2
 3717              		.global	prepare_counter_info
 3718              		.thumb
 3719              		.thumb_func
 3720              		.type	prepare_counter_info, %function
 3721              	prepare_counter_info:
 3722              	.LFB75:
 788:..\src/command_processing.c **** 
 789:..\src/command_processing.c **** //==============================================================================
 790:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
 791:..\src/command_processing.c **** //==============================================================================
 792:..\src/command_processing.c **** 
 793:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
 794:..\src/command_processing.c **** {
 3723              		.loc 1 794 0
 3724              		.cfi_startproc
 3725              		@ args = 0, pretend = 0, frame = 8
 3726              		@ frame_needed = 1, uses_anonymous_args = 0
 3727              		@ link register save eliminated.
 3728 0000 80B4     		push	{r7}
 3729              		.cfi_def_cfa_offset 4
 3730              		.cfi_offset 7, -4
 3731 0002 83B0     		sub	sp, sp, #12
 3732              		.cfi_def_cfa_offset 16
 3733 0004 00AF     		add	r7, sp, #0
 3734              		.cfi_def_cfa_register 7
 3735 0006 7860     		str	r0, [r7, #4]
 795:..\src/command_processing.c **** }
 3736              		.loc 1 795 0
 3737 0008 00BF     		nop
 3738 000a 0C37     		adds	r7, r7, #12
 3739              		.cfi_def_cfa_offset 4
 3740 000c BD46     		mov	sp, r7
 3741              		.cfi_def_cfa_register 13
 3742              		@ sp needed
 3743 000e 80BC     		pop	{r7}
 3744              		.cfi_restore 7
 3745              		.cfi_def_cfa_offset 0
 3746 0010 7047     		bx	lr
 3747              		.cfi_endproc
 3748              	.LFE75:
 3749              		.size	prepare_counter_info, .-prepare_counter_info
 3750 0012 00BF     		.section	.text.prepare_R01_info,"ax",%progbits
 3751              		.align	2
 3752              		.global	prepare_R01_info
 3753              		.thumb
 3754              		.thumb_func
 3755              		.type	prepare_R01_info, %function
 3756              	prepare_R01_info:
 3757              	.LFB76:
 796:..\src/command_processing.c **** 
 797:..\src/command_processing.c **** //==============================================================================
 798:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 98


 799:..\src/command_processing.c **** //==============================================================================
 800:..\src/command_processing.c **** 
 801:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
 802:..\src/command_processing.c **** {
 3758              		.loc 1 802 0
 3759              		.cfi_startproc
 3760              		@ args = 0, pretend = 0, frame = 8
 3761              		@ frame_needed = 1, uses_anonymous_args = 0
 3762              		@ link register save eliminated.
 3763 0000 80B4     		push	{r7}
 3764              		.cfi_def_cfa_offset 4
 3765              		.cfi_offset 7, -4
 3766 0002 83B0     		sub	sp, sp, #12
 3767              		.cfi_def_cfa_offset 16
 3768 0004 00AF     		add	r7, sp, #0
 3769              		.cfi_def_cfa_register 7
 3770 0006 7860     		str	r0, [r7, #4]
 803:..\src/command_processing.c **** }
 3771              		.loc 1 803 0
 3772 0008 00BF     		nop
 3773 000a 0C37     		adds	r7, r7, #12
 3774              		.cfi_def_cfa_offset 4
 3775 000c BD46     		mov	sp, r7
 3776              		.cfi_def_cfa_register 13
 3777              		@ sp needed
 3778 000e 80BC     		pop	{r7}
 3779              		.cfi_restore 7
 3780              		.cfi_def_cfa_offset 0
 3781 0010 7047     		bx	lr
 3782              		.cfi_endproc
 3783              	.LFE76:
 3784              		.size	prepare_R01_info, .-prepare_R01_info
 3785 0012 00BF     		.section	.text.prepare_SD_param_info,"ax",%progbits
 3786              		.align	2
 3787              		.global	prepare_SD_param_info
 3788              		.thumb
 3789              		.thumb_func
 3790              		.type	prepare_SD_param_info, %function
 3791              	prepare_SD_param_info:
 3792              	.LFB77:
 804:..\src/command_processing.c **** 
 805:..\src/command_processing.c **** //==============================================================================
 806:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
 807:..\src/command_processing.c **** //==============================================================================
 808:..\src/command_processing.c **** 
 809:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
 810:..\src/command_processing.c **** {
 3793              		.loc 1 810 0
 3794              		.cfi_startproc
 3795              		@ args = 0, pretend = 0, frame = 8
 3796              		@ frame_needed = 1, uses_anonymous_args = 0
 3797              		@ link register save eliminated.
 3798 0000 80B4     		push	{r7}
 3799              		.cfi_def_cfa_offset 4
 3800              		.cfi_offset 7, -4
 3801 0002 83B0     		sub	sp, sp, #12
 3802              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 99


 3803 0004 00AF     		add	r7, sp, #0
 3804              		.cfi_def_cfa_register 7
 3805 0006 7860     		str	r0, [r7, #4]
 811:..\src/command_processing.c **** }
 3806              		.loc 1 811 0
 3807 0008 00BF     		nop
 3808 000a 0C37     		adds	r7, r7, #12
 3809              		.cfi_def_cfa_offset 4
 3810 000c BD46     		mov	sp, r7
 3811              		.cfi_def_cfa_register 13
 3812              		@ sp needed
 3813 000e 80BC     		pop	{r7}
 3814              		.cfi_restore 7
 3815              		.cfi_def_cfa_offset 0
 3816 0010 7047     		bx	lr
 3817              		.cfi_endproc
 3818              	.LFE77:
 3819              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 3820 0012 00BF     		.section	.text.prepare_SD_legend,"ax",%progbits
 3821              		.align	2
 3822              		.global	prepare_SD_legend
 3823              		.thumb
 3824              		.thumb_func
 3825              		.type	prepare_SD_legend, %function
 3826              	prepare_SD_legend:
 3827              	.LFB78:
 812:..\src/command_processing.c **** 
 813:..\src/command_processing.c **** 
 814:..\src/command_processing.c **** //==============================================================================
 815:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
 816:..\src/command_processing.c **** //==============================================================================
 817:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
 818:..\src/command_processing.c **** {
 3828              		.loc 1 818 0
 3829              		.cfi_startproc
 3830              		@ args = 0, pretend = 0, frame = 8
 3831              		@ frame_needed = 1, uses_anonymous_args = 0
 3832              		@ link register save eliminated.
 3833 0000 80B4     		push	{r7}
 3834              		.cfi_def_cfa_offset 4
 3835              		.cfi_offset 7, -4
 3836 0002 83B0     		sub	sp, sp, #12
 3837              		.cfi_def_cfa_offset 16
 3838 0004 00AF     		add	r7, sp, #0
 3839              		.cfi_def_cfa_register 7
 3840 0006 7860     		str	r0, [r7, #4]
 819:..\src/command_processing.c **** }
 3841              		.loc 1 819 0
 3842 0008 00BF     		nop
 3843 000a 0C37     		adds	r7, r7, #12
 3844              		.cfi_def_cfa_offset 4
 3845 000c BD46     		mov	sp, r7
 3846              		.cfi_def_cfa_register 13
 3847              		@ sp needed
 3848 000e 80BC     		pop	{r7}
 3849              		.cfi_restore 7
 3850              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 100


 3851 0010 7047     		bx	lr
 3852              		.cfi_endproc
 3853              	.LFE78:
 3854              		.size	prepare_SD_legend, .-prepare_SD_legend
 3855 0012 00BF     		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 3856              		.align	2
 3857              		.global	prepare_SD_EMG_History_legend
 3858              		.thumb
 3859              		.thumb_func
 3860              		.type	prepare_SD_EMG_History_legend, %function
 3861              	prepare_SD_EMG_History_legend:
 3862              	.LFB79:
 820:..\src/command_processing.c **** 
 821:..\src/command_processing.c **** //==============================================================================
 822:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
 823:..\src/command_processing.c **** //==============================================================================
 824:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
 825:..\src/command_processing.c **** {
 3863              		.loc 1 825 0
 3864              		.cfi_startproc
 3865              		@ args = 0, pretend = 0, frame = 8
 3866              		@ frame_needed = 1, uses_anonymous_args = 0
 3867              		@ link register save eliminated.
 3868 0000 80B4     		push	{r7}
 3869              		.cfi_def_cfa_offset 4
 3870              		.cfi_offset 7, -4
 3871 0002 83B0     		sub	sp, sp, #12
 3872              		.cfi_def_cfa_offset 16
 3873 0004 00AF     		add	r7, sp, #0
 3874              		.cfi_def_cfa_register 7
 3875 0006 7860     		str	r0, [r7, #4]
 826:..\src/command_processing.c ****     
 827:..\src/command_processing.c **** }
 3876              		.loc 1 827 0
 3877 0008 00BF     		nop
 3878 000a 0C37     		adds	r7, r7, #12
 3879              		.cfi_def_cfa_offset 4
 3880 000c BD46     		mov	sp, r7
 3881              		.cfi_def_cfa_register 13
 3882              		@ sp needed
 3883 000e 80BC     		pop	{r7}
 3884              		.cfi_restore 7
 3885              		.cfi_def_cfa_offset 0
 3886 0010 7047     		bx	lr
 3887              		.cfi_endproc
 3888              	.LFE79:
 3889              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 3890 0012 00BF     		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 3891              		.align	2
 3892              		.global	prepare_SD_EMG_history
 3893              		.thumb
 3894              		.thumb_func
 3895              		.type	prepare_SD_EMG_history, %function
 3896              	prepare_SD_EMG_history:
 3897              	.LFB80:
 828:..\src/command_processing.c **** 
 829:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 101


 830:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
 831:..\src/command_processing.c **** //==============================================================================
 832:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
 833:..\src/command_processing.c **** {
 3898              		.loc 1 833 0
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 8
 3901              		@ frame_needed = 1, uses_anonymous_args = 0
 3902              		@ link register save eliminated.
 3903 0000 80B4     		push	{r7}
 3904              		.cfi_def_cfa_offset 4
 3905              		.cfi_offset 7, -4
 3906 0002 83B0     		sub	sp, sp, #12
 3907              		.cfi_def_cfa_offset 16
 3908 0004 00AF     		add	r7, sp, #0
 3909              		.cfi_def_cfa_register 7
 3910 0006 7860     		str	r0, [r7, #4]
 834:..\src/command_processing.c ****         
 835:..\src/command_processing.c **** }
 3911              		.loc 1 835 0
 3912 0008 00BF     		nop
 3913 000a 0C37     		adds	r7, r7, #12
 3914              		.cfi_def_cfa_offset 4
 3915 000c BD46     		mov	sp, r7
 3916              		.cfi_def_cfa_register 13
 3917              		@ sp needed
 3918 000e 80BC     		pop	{r7}
 3919              		.cfi_restore 7
 3920              		.cfi_def_cfa_offset 0
 3921 0010 7047     		bx	lr
 3922              		.cfi_endproc
 3923              	.LFE80:
 3924              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 3925 0012 00BF     		.section	.text.IMU_reading_info,"ax",%progbits
 3926              		.align	2
 3927              		.global	IMU_reading_info
 3928              		.thumb
 3929              		.thumb_func
 3930              		.type	IMU_reading_info, %function
 3931              	IMU_reading_info:
 3932              	.LFB81:
 836:..\src/command_processing.c **** 
 837:..\src/command_processing.c **** //==============================================================================
 838:..\src/command_processing.c **** //                                                              IMU READING INFO
 839:..\src/command_processing.c **** //==============================================================================
 840:..\src/command_processing.c **** 
 841:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
 842:..\src/command_processing.c **** {
 3933              		.loc 1 842 0
 3934              		.cfi_startproc
 3935              		@ args = 0, pretend = 0, frame = 8
 3936              		@ frame_needed = 1, uses_anonymous_args = 0
 3937              		@ link register save eliminated.
 3938 0000 80B4     		push	{r7}
 3939              		.cfi_def_cfa_offset 4
 3940              		.cfi_offset 7, -4
 3941 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 102


 3942              		.cfi_def_cfa_offset 16
 3943 0004 00AF     		add	r7, sp, #0
 3944              		.cfi_def_cfa_register 7
 3945 0006 7860     		str	r0, [r7, #4]
 843:..\src/command_processing.c **** }
 3946              		.loc 1 843 0
 3947 0008 00BF     		nop
 3948 000a 0C37     		adds	r7, r7, #12
 3949              		.cfi_def_cfa_offset 4
 3950 000c BD46     		mov	sp, r7
 3951              		.cfi_def_cfa_register 13
 3952              		@ sp needed
 3953 000e 80BC     		pop	{r7}
 3954              		.cfi_restore 7
 3955              		.cfi_def_cfa_offset 0
 3956 0010 7047     		bx	lr
 3957              		.cfi_endproc
 3958              	.LFE81:
 3959              		.size	IMU_reading_info, .-IMU_reading_info
 3960 0012 00BF     		.section	.text.commWrite_old_id,"ax",%progbits
 3961              		.align	2
 3962              		.global	commWrite_old_id
 3963              		.thumb
 3964              		.thumb_func
 3965              		.type	commWrite_old_id, %function
 3966              	commWrite_old_id:
 3967              	.LFB82:
 844:..\src/command_processing.c **** 
 845:..\src/command_processing.c **** //==============================================================================
 846:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
 847:..\src/command_processing.c **** //==============================================================================
 848:..\src/command_processing.c **** 
 849:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_length, uint8 old_id)
 850:..\src/command_processing.c **** {
 3968              		.loc 1 850 0
 3969              		.cfi_startproc
 3970              		@ args = 0, pretend = 0, frame = 16
 3971              		@ frame_needed = 1, uses_anonymous_args = 0
 3972 0000 80B5     		push	{r7, lr}
 3973              		.cfi_def_cfa_offset 8
 3974              		.cfi_offset 7, -8
 3975              		.cfi_offset 14, -4
 3976 0002 84B0     		sub	sp, sp, #16
 3977              		.cfi_def_cfa_offset 24
 3978 0004 00AF     		add	r7, sp, #0
 3979              		.cfi_def_cfa_register 7
 3980 0006 7860     		str	r0, [r7, #4]
 3981 0008 0B46     		mov	r3, r1
 3982 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 3983 000c 1346     		mov	r3, r2
 3984 000e 7B70     		strb	r3, [r7, #1]
 851:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
 852:..\src/command_processing.c **** 
 853:..\src/command_processing.c ****     // frame - start
 854:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 3985              		.loc 1 854 0
 3986 0010 3A20     		movs	r0, #58
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 103


 3987 0012 FFF7FEFF 		bl	UART_RS485_PutChar
 855:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 3988              		.loc 1 855 0
 3989 0016 3A20     		movs	r0, #58
 3990 0018 FFF7FEFF 		bl	UART_RS485_PutChar
 856:..\src/command_processing.c ****     // frame - ID
 857:..\src/command_processing.c ****     //if(old_id)
 858:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 3991              		.loc 1 858 0
 3992 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3993 001e 1846     		mov	r0, r3
 3994 0020 FFF7FEFF 		bl	UART_RS485_PutChar
 859:..\src/command_processing.c ****     //else
 860:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
 861:..\src/command_processing.c ****         
 862:..\src/command_processing.c ****     // frame - length
 863:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 3995              		.loc 1 863 0
 3996 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3997 0026 DBB2     		uxtb	r3, r3
 3998 0028 1846     		mov	r0, r3
 3999 002a FFF7FEFF 		bl	UART_RS485_PutChar
 864:..\src/command_processing.c ****     // frame - packet data
 865:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 4000              		.loc 1 865 0
 4001 002e 0023     		movs	r3, #0
 4002 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 4003 0032 09E0     		b	.L201
 4004              	.L202:
 866:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4005              		.loc 1 866 0 discriminator 3
 4006 0034 FB89     		ldrh	r3, [r7, #14]
 4007 0036 7A68     		ldr	r2, [r7, #4]
 4008 0038 1344     		add	r3, r3, r2
 4009 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4010 003c 1846     		mov	r0, r3
 4011 003e FFF7FEFF 		bl	UART_RS485_PutChar
 865:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4012              		.loc 1 865 0 discriminator 3
 4013 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4014 0044 0133     		adds	r3, r3, #1
 4015 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 4016              	.L201:
 865:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4017              		.loc 1 865 0 is_stmt 0 discriminator 1
 4018 0048 FA89     		ldrh	r2, [r7, #14]
 4019 004a 7B88     		ldrh	r3, [r7, #2]
 4020 004c 9A42     		cmp	r2, r3
 4021 004e F1D3     		bcc	.L202
 867:..\src/command_processing.c ****     }
 868:..\src/command_processing.c **** 
 869:..\src/command_processing.c ****     index = 0;
 4022              		.loc 1 869 0 is_stmt 1
 4023 0050 0023     		movs	r3, #0
 4024 0052 FB81     		strh	r3, [r7, #14]	@ movhi
 870:..\src/command_processing.c **** 
 871:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 104


 4025              		.loc 1 871 0
 4026 0054 00BF     		nop
 4027              	.L204:
 4028              		.loc 1 871 0 is_stmt 0 discriminator 2
 4029 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4030 005a 0346     		mov	r3, r0
 4031 005c 03F00103 		and	r3, r3, #1
 4032 0060 002B     		cmp	r3, #0
 4033 0062 05D1     		bne	.L203
 4034              		.loc 1 871 0 discriminator 1
 4035 0064 FB89     		ldrh	r3, [r7, #14]
 4036 0066 5A1C     		adds	r2, r3, #1
 4037 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 4038 006a B3F57A7F 		cmp	r3, #1000
 4039 006e F2D9     		bls	.L204
 4040              	.L203:
 872:..\src/command_processing.c **** 
 873:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4041              		.loc 1 873 0 is_stmt 1
 4042 0070 0120     		movs	r0, #1
 4043 0072 FFF7FEFF 		bl	RS485_CTS_Write
 874:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4044              		.loc 1 874 0
 4045 0076 0020     		movs	r0, #0
 4046 0078 FFF7FEFF 		bl	RS485_CTS_Write
 875:..\src/command_processing.c **** }
 4047              		.loc 1 875 0
 4048 007c 00BF     		nop
 4049 007e 1037     		adds	r7, r7, #16
 4050              		.cfi_def_cfa_offset 8
 4051 0080 BD46     		mov	sp, r7
 4052              		.cfi_def_cfa_register 13
 4053              		@ sp needed
 4054 0082 80BD     		pop	{r7, pc}
 4055              		.cfi_endproc
 4056              	.LFE82:
 4057              		.size	commWrite_old_id, .-commWrite_old_id
 4058              		.section	.text.commWrite,"ax",%progbits
 4059              		.align	2
 4060              		.global	commWrite
 4061              		.thumb
 4062              		.thumb_func
 4063              		.type	commWrite, %function
 4064              	commWrite:
 4065              	.LFB83:
 876:..\src/command_processing.c **** 
 877:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_length)
 878:..\src/command_processing.c **** {
 4066              		.loc 1 878 0
 4067              		.cfi_startproc
 4068              		@ args = 0, pretend = 0, frame = 16
 4069              		@ frame_needed = 1, uses_anonymous_args = 0
 4070 0000 80B5     		push	{r7, lr}
 4071              		.cfi_def_cfa_offset 8
 4072              		.cfi_offset 7, -8
 4073              		.cfi_offset 14, -4
 4074 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 105


 4075              		.cfi_def_cfa_offset 24
 4076 0004 00AF     		add	r7, sp, #0
 4077              		.cfi_def_cfa_register 7
 4078 0006 7860     		str	r0, [r7, #4]
 4079 0008 0B46     		mov	r3, r1
 4080 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 879:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
 880:..\src/command_processing.c **** 
 881:..\src/command_processing.c ****     // frame - start
 882:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4081              		.loc 1 882 0
 4082 000c 3A20     		movs	r0, #58
 4083 000e FFF7FEFF 		bl	UART_RS485_PutChar
 883:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4084              		.loc 1 883 0
 4085 0012 3A20     		movs	r0, #58
 4086 0014 FFF7FEFF 		bl	UART_RS485_PutChar
 884:..\src/command_processing.c ****     // frame - ID
 885:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 4087              		.loc 1 885 0
 4088 0018 1A4B     		ldr	r3, .L210
 4089 001a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4090 001c 1846     		mov	r0, r3
 4091 001e FFF7FEFF 		bl	UART_RS485_PutChar
 886:..\src/command_processing.c ****     // frame - length
 887:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 4092              		.loc 1 887 0
 4093 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4094 0024 DBB2     		uxtb	r3, r3
 4095 0026 1846     		mov	r0, r3
 4096 0028 FFF7FEFF 		bl	UART_RS485_PutChar
 888:..\src/command_processing.c ****     // frame - packet data
 889:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 4097              		.loc 1 889 0
 4098 002c 0023     		movs	r3, #0
 4099 002e FB81     		strh	r3, [r7, #14]	@ movhi
 4100 0030 09E0     		b	.L206
 4101              	.L207:
 890:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4102              		.loc 1 890 0 discriminator 3
 4103 0032 FB89     		ldrh	r3, [r7, #14]
 4104 0034 7A68     		ldr	r2, [r7, #4]
 4105 0036 1344     		add	r3, r3, r2
 4106 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4107 003a 1846     		mov	r0, r3
 4108 003c FFF7FEFF 		bl	UART_RS485_PutChar
 889:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4109              		.loc 1 889 0 discriminator 3
 4110 0040 FB89     		ldrh	r3, [r7, #14]	@ movhi
 4111 0042 0133     		adds	r3, r3, #1
 4112 0044 FB81     		strh	r3, [r7, #14]	@ movhi
 4113              	.L206:
 889:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 4114              		.loc 1 889 0 is_stmt 0 discriminator 1
 4115 0046 FA89     		ldrh	r2, [r7, #14]
 4116 0048 7B88     		ldrh	r3, [r7, #2]
 4117 004a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 106


 4118 004c F1D3     		bcc	.L207
 891:..\src/command_processing.c ****     }
 892:..\src/command_processing.c **** 
 893:..\src/command_processing.c ****     index = 0;
 4119              		.loc 1 893 0 is_stmt 1
 4120 004e 0023     		movs	r3, #0
 4121 0050 FB81     		strh	r3, [r7, #14]	@ movhi
 894:..\src/command_processing.c **** 
 895:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 4122              		.loc 1 895 0
 4123 0052 00BF     		nop
 4124              	.L209:
 4125              		.loc 1 895 0 is_stmt 0 discriminator 2
 4126 0054 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4127 0058 0346     		mov	r3, r0
 4128 005a 03F00103 		and	r3, r3, #1
 4129 005e 002B     		cmp	r3, #0
 4130 0060 05D1     		bne	.L208
 4131              		.loc 1 895 0 discriminator 1
 4132 0062 FB89     		ldrh	r3, [r7, #14]
 4133 0064 5A1C     		adds	r2, r3, #1
 4134 0066 FA81     		strh	r2, [r7, #14]	@ movhi
 4135 0068 B3F57A7F 		cmp	r3, #1000
 4136 006c F2D9     		bls	.L209
 4137              	.L208:
 896:..\src/command_processing.c **** 
 897:..\src/command_processing.c ****     RS485_CTS_Write(1);
 4138              		.loc 1 897 0 is_stmt 1
 4139 006e 0120     		movs	r0, #1
 4140 0070 FFF7FEFF 		bl	RS485_CTS_Write
 898:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4141              		.loc 1 898 0
 4142 0074 0020     		movs	r0, #0
 4143 0076 FFF7FEFF 		bl	RS485_CTS_Write
 899:..\src/command_processing.c **** }
 4144              		.loc 1 899 0
 4145 007a 00BF     		nop
 4146 007c 1037     		adds	r7, r7, #16
 4147              		.cfi_def_cfa_offset 8
 4148 007e BD46     		mov	sp, r7
 4149              		.cfi_def_cfa_register 13
 4150              		@ sp needed
 4151 0080 80BD     		pop	{r7, pc}
 4152              	.L211:
 4153 0082 00BF     		.align	2
 4154              	.L210:
 4155 0084 00000000 		.word	g_mem
 4156              		.cfi_endproc
 4157              	.LFE83:
 4158              		.size	commWrite, .-commWrite
 4159              		.section	.text.commWriteID,"ax",%progbits
 4160              		.align	2
 4161              		.global	commWriteID
 4162              		.thumb
 4163              		.thumb_func
 4164              		.type	commWriteID, %function
 4165              	commWriteID:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 107


 4166              	.LFB84:
 900:..\src/command_processing.c **** 
 901:..\src/command_processing.c **** 
 902:..\src/command_processing.c **** //==============================================================================
 903:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
 904:..\src/command_processing.c **** //==============================================================================
 905:..\src/command_processing.c **** 
 906:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_length, uint8 id)
 907:..\src/command_processing.c **** {
 4167              		.loc 1 907 0
 4168              		.cfi_startproc
 4169              		@ args = 0, pretend = 0, frame = 8
 4170              		@ frame_needed = 1, uses_anonymous_args = 0
 4171 0000 80B5     		push	{r7, lr}
 4172              		.cfi_def_cfa_offset 8
 4173              		.cfi_offset 7, -8
 4174              		.cfi_offset 14, -4
 4175 0002 82B0     		sub	sp, sp, #8
 4176              		.cfi_def_cfa_offset 16
 4177 0004 00AF     		add	r7, sp, #0
 4178              		.cfi_def_cfa_register 7
 4179 0006 7860     		str	r0, [r7, #4]
 4180 0008 0B46     		mov	r3, r1
 4181 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 4182 000c 1346     		mov	r3, r2
 4183 000e 7B70     		strb	r3, [r7, #1]
 908:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
 909:..\src/command_processing.c **** 
 910:..\src/command_processing.c ****     // frame - start
 911:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4184              		.loc 1 911 0
 4185 0010 3A20     		movs	r0, #58
 4186 0012 FFF7FEFF 		bl	UART_RS485_PutChar
 912:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 4187              		.loc 1 912 0
 4188 0016 3A20     		movs	r0, #58
 4189 0018 FFF7FEFF 		bl	UART_RS485_PutChar
 913:..\src/command_processing.c ****     // frame - ID
 914:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 4190              		.loc 1 914 0
 4191 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4192 001e 1846     		mov	r0, r3
 4193 0020 FFF7FEFF 		bl	UART_RS485_PutChar
 915:..\src/command_processing.c ****     // frame - length
 916:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 4194              		.loc 1 916 0
 4195 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4196 0026 DBB2     		uxtb	r3, r3
 4197 0028 1846     		mov	r0, r3
 4198 002a FFF7FEFF 		bl	UART_RS485_PutChar
 917:..\src/command_processing.c ****     // frame - packet data
 918:..\src/command_processing.c ****     for(i = 0; i < packet_length; ++i) {
 4199              		.loc 1 918 0
 4200 002e 1B4B     		ldr	r3, .L217
 4201 0030 0022     		movs	r2, #0
 4202 0032 1A80     		strh	r2, [r3]	@ movhi
 4203 0034 0EE0     		b	.L213
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 108


 4204              	.L214:
 919:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4205              		.loc 1 919 0 discriminator 3
 4206 0036 194B     		ldr	r3, .L217
 4207 0038 1B88     		ldrh	r3, [r3]
 4208 003a 1A46     		mov	r2, r3
 4209 003c 7B68     		ldr	r3, [r7, #4]
 4210 003e 1344     		add	r3, r3, r2
 4211 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4212 0042 1846     		mov	r0, r3
 4213 0044 FFF7FEFF 		bl	UART_RS485_PutChar
 918:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4214              		.loc 1 918 0 discriminator 3
 4215 0048 144B     		ldr	r3, .L217
 4216 004a 1B88     		ldrh	r3, [r3]
 4217 004c 0133     		adds	r3, r3, #1
 4218 004e 9AB2     		uxth	r2, r3
 4219 0050 124B     		ldr	r3, .L217
 4220 0052 1A80     		strh	r2, [r3]	@ movhi
 4221              	.L213:
 918:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 4222              		.loc 1 918 0 is_stmt 0 discriminator 1
 4223 0054 114B     		ldr	r3, .L217
 4224 0056 1B88     		ldrh	r3, [r3]
 4225 0058 7A88     		ldrh	r2, [r7, #2]
 4226 005a 9A42     		cmp	r2, r3
 4227 005c EBD8     		bhi	.L214
 920:..\src/command_processing.c ****     }
 921:..\src/command_processing.c **** 
 922:..\src/command_processing.c ****     i = 0;
 4228              		.loc 1 922 0 is_stmt 1
 4229 005e 0F4B     		ldr	r3, .L217
 4230 0060 0022     		movs	r2, #0
 4231 0062 1A80     		strh	r2, [r3]	@ movhi
 923:..\src/command_processing.c **** 
 924:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 4232              		.loc 1 924 0
 4233 0064 00BF     		nop
 4234              	.L216:
 4235              		.loc 1 924 0 is_stmt 0 discriminator 2
 4236 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 4237 006a 0346     		mov	r3, r0
 4238 006c 03F00103 		and	r3, r3, #1
 4239 0070 002B     		cmp	r3, #0
 4240 0072 08D1     		bne	.L215
 4241              		.loc 1 924 0 discriminator 1
 4242 0074 094B     		ldr	r3, .L217
 4243 0076 1B88     		ldrh	r3, [r3]
 4244 0078 5A1C     		adds	r2, r3, #1
 4245 007a 91B2     		uxth	r1, r2
 4246 007c 074A     		ldr	r2, .L217
 4247 007e 1180     		strh	r1, [r2]	@ movhi
 4248 0080 B3F57A7F 		cmp	r3, #1000
 4249 0084 EFD9     		bls	.L216
 4250              	.L215:
 925:..\src/command_processing.c ****     
 926:..\src/command_processing.c ****     RS485_CTS_Write(1);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 109


 4251              		.loc 1 926 0 is_stmt 1
 4252 0086 0120     		movs	r0, #1
 4253 0088 FFF7FEFF 		bl	RS485_CTS_Write
 927:..\src/command_processing.c ****     RS485_CTS_Write(0);
 4254              		.loc 1 927 0
 4255 008c 0020     		movs	r0, #0
 4256 008e FFF7FEFF 		bl	RS485_CTS_Write
 928:..\src/command_processing.c **** }
 4257              		.loc 1 928 0
 4258 0092 00BF     		nop
 4259 0094 0837     		adds	r7, r7, #8
 4260              		.cfi_def_cfa_offset 8
 4261 0096 BD46     		mov	sp, r7
 4262              		.cfi_def_cfa_register 13
 4263              		@ sp needed
 4264 0098 80BD     		pop	{r7, pc}
 4265              	.L218:
 4266 009a 00BF     		.align	2
 4267              	.L217:
 4268 009c 00000000 		.word	i.10044
 4269              		.cfi_endproc
 4270              	.LFE84:
 4271              		.size	commWriteID, .-commWriteID
 4272              		.section	.text.LCRChecksum,"ax",%progbits
 4273              		.align	2
 4274              		.global	LCRChecksum
 4275              		.thumb
 4276              		.thumb_func
 4277              		.type	LCRChecksum, %function
 4278              	LCRChecksum:
 4279              	.LFB85:
 929:..\src/command_processing.c **** 
 930:..\src/command_processing.c **** //==============================================================================
 931:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
 932:..\src/command_processing.c **** //==============================================================================
 933:..\src/command_processing.c **** 
 934:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
 935:..\src/command_processing.c **** 
 936:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 4280              		.loc 1 936 0
 4281              		.cfi_startproc
 4282              		@ args = 0, pretend = 0, frame = 16
 4283              		@ frame_needed = 1, uses_anonymous_args = 0
 4284              		@ link register save eliminated.
 4285 0000 80B4     		push	{r7}
 4286              		.cfi_def_cfa_offset 4
 4287              		.cfi_offset 7, -4
 4288 0002 85B0     		sub	sp, sp, #20
 4289              		.cfi_def_cfa_offset 24
 4290 0004 00AF     		add	r7, sp, #0
 4291              		.cfi_def_cfa_register 7
 4292 0006 7860     		str	r0, [r7, #4]
 4293 0008 0B46     		mov	r3, r1
 4294 000a FB70     		strb	r3, [r7, #3]
 937:..\src/command_processing.c ****     
 938:..\src/command_processing.c ****     uint8 CYDATA i;
 939:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 110


 4295              		.loc 1 939 0
 4296 000c 0023     		movs	r3, #0
 4297 000e BB73     		strb	r3, [r7, #14]
 940:..\src/command_processing.c ****     
 941:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 4298              		.loc 1 941 0
 4299 0010 0023     		movs	r3, #0
 4300 0012 FB73     		strb	r3, [r7, #15]
 4301 0014 09E0     		b	.L220
 4302              	.L221:
 942:..\src/command_processing.c ****        checksum ^= data_array[i];
 4303              		.loc 1 942 0 discriminator 3
 4304 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4305 0018 7A68     		ldr	r2, [r7, #4]
 4306 001a 1344     		add	r3, r3, r2
 4307 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4308 001e BB7B     		ldrb	r3, [r7, #14]
 4309 0020 5340     		eors	r3, r3, r2
 4310 0022 BB73     		strb	r3, [r7, #14]
 941:..\src/command_processing.c ****        checksum ^= data_array[i];
 4311              		.loc 1 941 0 discriminator 3
 4312 0024 FB7B     		ldrb	r3, [r7, #15]
 4313 0026 0133     		adds	r3, r3, #1
 4314 0028 FB73     		strb	r3, [r7, #15]
 4315              	.L220:
 941:..\src/command_processing.c ****        checksum ^= data_array[i];
 4316              		.loc 1 941 0 is_stmt 0 discriminator 1
 4317 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4318 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4319 002e 9A42     		cmp	r2, r3
 4320 0030 F1D3     		bcc	.L221
 943:..\src/command_processing.c ****   
 944:..\src/command_processing.c ****     return checksum;
 4321              		.loc 1 944 0 is_stmt 1
 4322 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 945:..\src/command_processing.c **** }
 4323              		.loc 1 945 0
 4324 0034 1846     		mov	r0, r3
 4325 0036 1437     		adds	r7, r7, #20
 4326              		.cfi_def_cfa_offset 4
 4327 0038 BD46     		mov	sp, r7
 4328              		.cfi_def_cfa_register 13
 4329              		@ sp needed
 4330 003a 80BC     		pop	{r7}
 4331              		.cfi_restore 7
 4332              		.cfi_def_cfa_offset 0
 4333 003c 7047     		bx	lr
 4334              		.cfi_endproc
 4335              	.LFE85:
 4336              		.size	LCRChecksum, .-LCRChecksum
 4337 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 4338              		.align	2
 4339              		.global	sendAcknowledgment
 4340              		.thumb
 4341              		.thumb_func
 4342              		.type	sendAcknowledgment, %function
 4343              	sendAcknowledgment:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 111


 4344              	.LFB86:
 946:..\src/command_processing.c **** 
 947:..\src/command_processing.c **** 
 948:..\src/command_processing.c **** //==============================================================================
 949:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
 950:..\src/command_processing.c **** //==============================================================================
 951:..\src/command_processing.c **** 
 952:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 4345              		.loc 1 952 0
 4346              		.cfi_startproc
 4347              		@ args = 0, pretend = 0, frame = 16
 4348              		@ frame_needed = 1, uses_anonymous_args = 0
 4349 0000 80B5     		push	{r7, lr}
 4350              		.cfi_def_cfa_offset 8
 4351              		.cfi_offset 7, -8
 4352              		.cfi_offset 14, -4
 4353 0002 84B0     		sub	sp, sp, #16
 4354              		.cfi_def_cfa_offset 24
 4355 0004 00AF     		add	r7, sp, #0
 4356              		.cfi_def_cfa_register 7
 4357 0006 0346     		mov	r3, r0
 4358 0008 FB71     		strb	r3, [r7, #7]
 953:..\src/command_processing.c ****     int packet_length = 2;
 4359              		.loc 1 953 0
 4360 000a 0223     		movs	r3, #2
 4361 000c FB60     		str	r3, [r7, #12]
 954:..\src/command_processing.c ****     uint8 packet_data[2];
 955:..\src/command_processing.c **** 
 956:..\src/command_processing.c ****     packet_data[0] = value;
 4362              		.loc 1 956 0
 4363 000e FB79     		ldrb	r3, [r7, #7]
 4364 0010 3B72     		strb	r3, [r7, #8]
 957:..\src/command_processing.c ****     packet_data[1] = value;
 4365              		.loc 1 957 0
 4366 0012 FB79     		ldrb	r3, [r7, #7]
 4367 0014 7B72     		strb	r3, [r7, #9]
 958:..\src/command_processing.c **** 
 959:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 4368              		.loc 1 959 0
 4369 0016 FB68     		ldr	r3, [r7, #12]
 4370 0018 9AB2     		uxth	r2, r3
 4371 001a 07F10803 		add	r3, r7, #8
 4372 001e 1146     		mov	r1, r2
 4373 0020 1846     		mov	r0, r3
 4374 0022 FFF7FEFF 		bl	commWrite
 960:..\src/command_processing.c **** }
 4375              		.loc 1 960 0
 4376 0026 00BF     		nop
 4377 0028 1037     		adds	r7, r7, #16
 4378              		.cfi_def_cfa_offset 8
 4379 002a BD46     		mov	sp, r7
 4380              		.cfi_def_cfa_register 13
 4381              		@ sp needed
 4382 002c 80BD     		pop	{r7, pc}
 4383              		.cfi_endproc
 4384              	.LFE86:
 4385              		.size	sendAcknowledgment, .-sendAcknowledgment
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 112


 4386 002e 00BF     		.section	.text.memStore,"ax",%progbits
 4387              		.align	2
 4388              		.global	memStore
 4389              		.thumb
 4390              		.thumb_func
 4391              		.type	memStore, %function
 4392              	memStore:
 4393              	.LFB87:
 961:..\src/command_processing.c **** 
 962:..\src/command_processing.c **** //==============================================================================
 963:..\src/command_processing.c **** //                                                                  STORE MEMORY
 964:..\src/command_processing.c **** //==============================================================================
 965:..\src/command_processing.c **** 
 966:..\src/command_processing.c **** 
 967:..\src/command_processing.c **** uint8 memStore(int displacement)
 968:..\src/command_processing.c **** {
 4394              		.loc 1 968 0
 4395              		.cfi_startproc
 4396              		@ args = 0, pretend = 0, frame = 24
 4397              		@ frame_needed = 1, uses_anonymous_args = 0
 4398 0000 80B5     		push	{r7, lr}
 4399              		.cfi_def_cfa_offset 8
 4400              		.cfi_offset 7, -8
 4401              		.cfi_offset 14, -4
 4402 0002 86B0     		sub	sp, sp, #24
 4403              		.cfi_def_cfa_offset 32
 4404 0004 00AF     		add	r7, sp, #0
 4405              		.cfi_def_cfa_register 7
 4406 0006 7860     		str	r0, [r7, #4]
 969:..\src/command_processing.c ****     int i;  // iterator
 970:..\src/command_processing.c ****     uint8 writeStatus;
 971:..\src/command_processing.c ****     int pages;
 972:..\src/command_processing.c ****     uint8 ret_val = 1;
 4407              		.loc 1 972 0
 4408 0008 0123     		movs	r3, #1
 4409 000a FB74     		strb	r3, [r7, #19]
 973:..\src/command_processing.c **** 
 974:..\src/command_processing.c ****     // Disable Interrupt
 975:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 4410              		.loc 1 975 0
 4411 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
 976:..\src/command_processing.c **** 
 977:..\src/command_processing.c ****     // Stop motor
 978:..\src/command_processing.c ****     //PWM_MOTORS_WriteCompare1(0);
 979:..\src/command_processing.c **** 
 980:..\src/command_processing.c ****     // Update temperature information for better writing performance
 981:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 4412              		.loc 1 981 0
 4413 0010 FFF7FEFF 		bl	EEPROM_UpdateTemperature
 982:..\src/command_processing.c **** 
 983:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 4414              		.loc 1 983 0
 4415 0014 1C4A     		ldr	r2, .L230
 4416 0016 1D4B     		ldr	r3, .L230+4
 4417 0018 1046     		mov	r0, r2
 4418 001a 1946     		mov	r1, r3
 4419 001c 6023     		movs	r3, #96
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 113


 4420 001e 1A46     		mov	r2, r3
 4421 0020 FFF7FEFF 		bl	memcpy
 984:..\src/command_processing.c **** 
 985:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 4422              		.loc 1 985 0
 4423 0024 0623     		movs	r3, #6
 4424 0026 FB60     		str	r3, [r7, #12]
 986:..\src/command_processing.c **** 
 987:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 4425              		.loc 1 987 0
 4426 0028 0023     		movs	r3, #0
 4427 002a 7B61     		str	r3, [r7, #20]
 4428 002c 18E0     		b	.L225
 4429              	.L228:
 988:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4430              		.loc 1 988 0
 4431 002e 7B69     		ldr	r3, [r7, #20]
 4432 0030 1B01     		lsls	r3, r3, #4
 4433 0032 1A46     		mov	r2, r3
 4434 0034 154B     		ldr	r3, .L230+4
 4435 0036 D018     		adds	r0, r2, r3
 4436 0038 7B69     		ldr	r3, [r7, #20]
 4437 003a DAB2     		uxtb	r2, r3
 4438 003c 7B68     		ldr	r3, [r7, #4]
 4439 003e DBB2     		uxtb	r3, r3
 4440 0040 1344     		add	r3, r3, r2
 4441 0042 DBB2     		uxtb	r3, r3
 4442 0044 1946     		mov	r1, r3
 4443 0046 FFF7FEFF 		bl	EEPROM_Write
 4444 004a 0346     		mov	r3, r0
 4445 004c FB72     		strb	r3, [r7, #11]
 989:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 4446              		.loc 1 989 0
 4447 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4448 0050 002B     		cmp	r3, #0
 4449 0052 02D0     		beq	.L226
 990:..\src/command_processing.c ****             ret_val = 0;
 4450              		.loc 1 990 0
 4451 0054 0023     		movs	r3, #0
 4452 0056 FB74     		strb	r3, [r7, #19]
 991:..\src/command_processing.c ****             break;
 4453              		.loc 1 991 0
 4454 0058 06E0     		b	.L227
 4455              	.L226:
 987:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4456              		.loc 1 987 0 discriminator 2
 4457 005a 7B69     		ldr	r3, [r7, #20]
 4458 005c 0133     		adds	r3, r3, #1
 4459 005e 7B61     		str	r3, [r7, #20]
 4460              	.L225:
 987:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 4461              		.loc 1 987 0 is_stmt 0 discriminator 1
 4462 0060 7A69     		ldr	r2, [r7, #20]
 4463 0062 FB68     		ldr	r3, [r7, #12]
 4464 0064 9A42     		cmp	r2, r3
 4465 0066 E2DB     		blt	.L228
 4466              	.L227:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 114


 992:..\src/command_processing.c ****         }
 993:..\src/command_processing.c ****     }
 994:..\src/command_processing.c **** 
 995:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 4467              		.loc 1 995 0 is_stmt 1
 4468 0068 084A     		ldr	r2, .L230+4
 4469 006a 074B     		ldr	r3, .L230
 4470 006c 1046     		mov	r0, r2
 4471 006e 1946     		mov	r1, r3
 4472 0070 6023     		movs	r3, #96
 4473 0072 1A46     		mov	r2, r3
 4474 0074 FFF7FEFF 		bl	memcpy
 996:..\src/command_processing.c **** 
 997:..\src/command_processing.c ****     // Re-Enable Interrupt
 998:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 4475              		.loc 1 998 0
 4476 0078 FFF7FEFF 		bl	ISR_RS485_RX_Enable
 999:..\src/command_processing.c **** 
1000:..\src/command_processing.c ****     return ret_val;
 4477              		.loc 1 1000 0
 4478 007c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1001:..\src/command_processing.c **** }
 4479              		.loc 1 1001 0
 4480 007e 1846     		mov	r0, r3
 4481 0080 1837     		adds	r7, r7, #24
 4482              		.cfi_def_cfa_offset 8
 4483 0082 BD46     		mov	sp, r7
 4484              		.cfi_def_cfa_register 13
 4485              		@ sp needed
 4486 0084 80BD     		pop	{r7, pc}
 4487              	.L231:
 4488 0086 00BF     		.align	2
 4489              	.L230:
 4490 0088 00000000 		.word	c_mem
 4491 008c 00000000 		.word	g_mem
 4492              		.cfi_endproc
 4493              	.LFE87:
 4494              		.size	memStore, .-memStore
 4495              		.section	.text.memRecall,"ax",%progbits
 4496              		.align	2
 4497              		.global	memRecall
 4498              		.thumb
 4499              		.thumb_func
 4500              		.type	memRecall, %function
 4501              	memRecall:
 4502              	.LFB88:
1002:..\src/command_processing.c **** 
1003:..\src/command_processing.c **** 
1004:..\src/command_processing.c **** //==============================================================================
1005:..\src/command_processing.c **** //                                                                 RECALL MEMORY
1006:..\src/command_processing.c **** //==============================================================================
1007:..\src/command_processing.c **** 
1008:..\src/command_processing.c **** 
1009:..\src/command_processing.c **** void memRecall(void)
1010:..\src/command_processing.c **** {  
 4503              		.loc 1 1010 0
 4504              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 115


 4505              		@ args = 0, pretend = 0, frame = 8
 4506              		@ frame_needed = 1, uses_anonymous_args = 0
 4507 0000 80B5     		push	{r7, lr}
 4508              		.cfi_def_cfa_offset 8
 4509              		.cfi_offset 7, -8
 4510              		.cfi_offset 14, -4
 4511 0002 82B0     		sub	sp, sp, #8
 4512              		.cfi_def_cfa_offset 16
 4513 0004 00AF     		add	r7, sp, #0
 4514              		.cfi_def_cfa_register 7
1011:..\src/command_processing.c ****     uint16 i;
1012:..\src/command_processing.c **** 
1013:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 4515              		.loc 1 1013 0
 4516 0006 0023     		movs	r3, #0
 4517 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 4518 000a 0CE0     		b	.L233
 4519              	.L234:
1014:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4520              		.loc 1 1014 0 discriminator 3
 4521 000c FB88     		ldrh	r3, [r7, #6]
 4522 000e 114A     		ldr	r2, .L238
 4523 0010 1344     		add	r3, r3, r2
 4524 0012 114A     		ldr	r2, .L238+4
 4525 0014 1168     		ldr	r1, [r2]
 4526 0016 FA88     		ldrh	r2, [r7, #6]
 4527 0018 0A44     		add	r2, r2, r1
 4528 001a 1278     		ldrb	r2, [r2]
 4529 001c D2B2     		uxtb	r2, r2
 4530 001e 1A70     		strb	r2, [r3]
1013:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4531              		.loc 1 1013 0 discriminator 3
 4532 0020 FB88     		ldrh	r3, [r7, #6]
 4533 0022 0133     		adds	r3, r3, #1
 4534 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 4535              	.L233:
1013:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 4536              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4537 0026 FB88     		ldrh	r3, [r7, #6]
 4538 0028 5F2B     		cmp	r3, #95
 4539 002a EFD9     		bls	.L234
1015:..\src/command_processing.c ****     }
1016:..\src/command_processing.c ****        //check for initialization
1017:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 4540              		.loc 1 1017 0 is_stmt 1
 4541 002c 094B     		ldr	r3, .L238
 4542 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4543 0030 002B     		cmp	r3, #0
 4544 0032 02D1     		bne	.L235
1018:..\src/command_processing.c ****         memRestore();
 4545              		.loc 1 1018 0
 4546 0034 FFF7FEFF 		bl	memRestore
1019:..\src/command_processing.c ****     } else {
1020:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
1021:..\src/command_processing.c ****     }   
1022:..\src/command_processing.c **** }
 4547              		.loc 1 1022 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 116


 4548 0038 07E0     		b	.L237
 4549              	.L235:
1020:..\src/command_processing.c ****     }   
 4550              		.loc 1 1020 0
 4551 003a 084A     		ldr	r2, .L238+8
 4552 003c 054B     		ldr	r3, .L238
 4553 003e 1046     		mov	r0, r2
 4554 0040 1946     		mov	r1, r3
 4555 0042 6023     		movs	r3, #96
 4556 0044 1A46     		mov	r2, r3
 4557 0046 FFF7FEFF 		bl	memcpy
 4558              	.L237:
 4559              		.loc 1 1022 0
 4560 004a 00BF     		nop
 4561 004c 0837     		adds	r7, r7, #8
 4562              		.cfi_def_cfa_offset 8
 4563 004e BD46     		mov	sp, r7
 4564              		.cfi_def_cfa_register 13
 4565              		@ sp needed
 4566 0050 80BD     		pop	{r7, pc}
 4567              	.L239:
 4568 0052 00BF     		.align	2
 4569              	.L238:
 4570 0054 00000000 		.word	g_mem
 4571 0058 00000000 		.word	EEPROM_ADDR
 4572 005c 00000000 		.word	c_mem
 4573              		.cfi_endproc
 4574              	.LFE88:
 4575              		.size	memRecall, .-memRecall
 4576              		.section	.text.memRestore,"ax",%progbits
 4577              		.align	2
 4578              		.global	memRestore
 4579              		.thumb
 4580              		.thumb_func
 4581              		.type	memRestore, %function
 4582              	memRestore:
 4583              	.LFB89:
1023:..\src/command_processing.c **** 
1024:..\src/command_processing.c **** 
1025:..\src/command_processing.c **** //==============================================================================
1026:..\src/command_processing.c **** //                                                                RESTORE MEMORY
1027:..\src/command_processing.c **** //==============================================================================
1028:..\src/command_processing.c **** 
1029:..\src/command_processing.c **** 
1030:..\src/command_processing.c **** uint8 memRestore(void) {
 4584              		.loc 1 1030 0
 4585              		.cfi_startproc
 4586              		@ args = 0, pretend = 0, frame = 8
 4587              		@ frame_needed = 1, uses_anonymous_args = 0
 4588 0000 80B5     		push	{r7, lr}
 4589              		.cfi_def_cfa_offset 8
 4590              		.cfi_offset 7, -8
 4591              		.cfi_offset 14, -4
 4592 0002 82B0     		sub	sp, sp, #8
 4593              		.cfi_def_cfa_offset 16
 4594 0004 00AF     		add	r7, sp, #0
 4595              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 117


1031:..\src/command_processing.c ****     uint16 i;
1032:..\src/command_processing.c **** 
1033:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 4596              		.loc 1 1033 0
 4597 0006 0023     		movs	r3, #0
 4598 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 4599 000a 0EE0     		b	.L241
 4600              	.L242:
1034:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4601              		.loc 1 1034 0 discriminator 3
 4602 000c FB88     		ldrh	r3, [r7, #6]
 4603 000e 104A     		ldr	r2, .L245
 4604 0010 1344     		add	r3, r3, r2
 4605 0012 104A     		ldr	r2, .L245+4
 4606 0014 1168     		ldr	r1, [r2]
 4607 0016 FA88     		ldrh	r2, [r7, #6]
 4608 0018 02F54872 		add	r2, r2, #800
 4609 001c 0A44     		add	r2, r2, r1
 4610 001e 1278     		ldrb	r2, [r2]
 4611 0020 D2B2     		uxtb	r2, r2
 4612 0022 1A70     		strb	r2, [r3]
1033:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4613              		.loc 1 1033 0 discriminator 3
 4614 0024 FB88     		ldrh	r3, [r7, #6]
 4615 0026 0133     		adds	r3, r3, #1
 4616 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 4617              	.L241:
1033:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 4618              		.loc 1 1033 0 is_stmt 0 discriminator 1
 4619 002a FB88     		ldrh	r3, [r7, #6]
 4620 002c 5F2B     		cmp	r3, #95
 4621 002e EDD9     		bls	.L242
1035:..\src/command_processing.c ****     }
1036:..\src/command_processing.c **** 
1037:..\src/command_processing.c ****     //check for initialization
1038:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 4622              		.loc 1 1038 0 is_stmt 1
 4623 0030 074B     		ldr	r3, .L245
 4624 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4625 0034 002B     		cmp	r3, #0
 4626 0036 03D1     		bne	.L243
1039:..\src/command_processing.c ****         return memInit();
 4627              		.loc 1 1039 0
 4628 0038 FFF7FEFF 		bl	memInit
 4629 003c 0346     		mov	r3, r0
 4630 003e 03E0     		b	.L244
 4631              	.L243:
1040:..\src/command_processing.c ****     } else {
1041:..\src/command_processing.c ****         return memStore(0);
 4632              		.loc 1 1041 0
 4633 0040 0020     		movs	r0, #0
 4634 0042 FFF7FEFF 		bl	memStore
 4635 0046 0346     		mov	r3, r0
 4636              	.L244:
1042:..\src/command_processing.c ****     }  
1043:..\src/command_processing.c **** }
 4637              		.loc 1 1043 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 118


 4638 0048 1846     		mov	r0, r3
 4639 004a 0837     		adds	r7, r7, #8
 4640              		.cfi_def_cfa_offset 8
 4641 004c BD46     		mov	sp, r7
 4642              		.cfi_def_cfa_register 13
 4643              		@ sp needed
 4644 004e 80BD     		pop	{r7, pc}
 4645              	.L246:
 4646              		.align	2
 4647              	.L245:
 4648 0050 00000000 		.word	g_mem
 4649 0054 00000000 		.word	EEPROM_ADDR
 4650              		.cfi_endproc
 4651              	.LFE89:
 4652              		.size	memRestore, .-memRestore
 4653              		.section	.text.memInit,"ax",%progbits
 4654              		.align	2
 4655              		.global	memInit
 4656              		.thumb
 4657              		.thumb_func
 4658              		.type	memInit, %function
 4659              	memInit:
 4660              	.LFB90:
1044:..\src/command_processing.c **** 
1045:..\src/command_processing.c **** //==============================================================================
1046:..\src/command_processing.c **** //                                                                   MEMORY INIT
1047:..\src/command_processing.c **** //==============================================================================
1048:..\src/command_processing.c **** 
1049:..\src/command_processing.c **** uint8 memInit(void)
1050:..\src/command_processing.c **** {
 4661              		.loc 1 1050 0
 4662              		.cfi_startproc
 4663              		@ args = 0, pretend = 0, frame = 0
 4664              		@ frame_needed = 1, uses_anonymous_args = 0
 4665 0000 80B5     		push	{r7, lr}
 4666              		.cfi_def_cfa_offset 8
 4667              		.cfi_offset 7, -8
 4668              		.cfi_offset 14, -4
 4669 0002 00AF     		add	r7, sp, #0
 4670              		.cfi_def_cfa_register 7
1051:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
1052:..\src/command_processing.c ****     g_mem.flag = TRUE;
 4671              		.loc 1 1052 0
 4672 0004 2F4B     		ldr	r3, .L251
 4673 0006 0122     		movs	r2, #1
 4674 0008 1A70     		strb	r2, [r3]
1053:..\src/command_processing.c ****     
1054:..\src/command_processing.c ****     // DEV STRUCT
1055:..\src/command_processing.c ****     g_mem.dev.id = 2;
 4675              		.loc 1 1055 0
 4676 000a 2E4B     		ldr	r3, .L251
 4677 000c 0222     		movs	r2, #2
 4678 000e 1A74     		strb	r2, [r3, #16]
1056:..\src/command_processing.c ****     
1057:..\src/command_processing.c ****     // SH STRUCT
1058:..\src/command_processing.c ****     g_mem.SH_config.pos_lim_inf = 0;
 4679              		.loc 1 1058 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 119


 4680 0010 2C4B     		ldr	r3, .L251
 4681 0012 0022     		movs	r2, #0
 4682 0014 1A62     		str	r2, [r3, #32]
1059:..\src/command_processing.c ****     g_mem.SH_config.pos_lim_sup = (int32)19000 << g_mem.SH_config.res;
 4683              		.loc 1 1059 0
 4684 0016 2B4B     		ldr	r3, .L251
 4685 0018 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 4686 001c 1A46     		mov	r2, r3
 4687 001e 44F63823 		movw	r3, #19000
 4688 0022 9340     		lsls	r3, r3, r2
 4689 0024 274A     		ldr	r2, .L251
 4690 0026 5362     		str	r3, [r2, #36]
1060:..\src/command_processing.c ****     g_mem.SH_config.input_mode = INPUT_MODE_EMG_FCFS;
 4691              		.loc 1 1060 0
 4692 0028 264B     		ldr	r3, .L251
 4693 002a 0422     		movs	r2, #4
 4694 002c 83F82820 		strb	r2, [r3, #40]
1061:..\src/command_processing.c ****     g_mem.SH_config.res = 3;
 4695              		.loc 1 1061 0
 4696 0030 244B     		ldr	r3, .L251
 4697 0032 0322     		movs	r2, #3
 4698 0034 83F82920 		strb	r2, [r3, #41]
1062:..\src/command_processing.c **** 
1063:..\src/command_processing.c ****     // EMG STRUCT     
1064:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 4699              		.loc 1 1064 0
 4700 0038 224B     		ldr	r3, .L251
 4701 003a C822     		movs	r2, #200
 4702 003c 1A86     		strh	r2, [r3, #48]	@ movhi
1065:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 4703              		.loc 1 1065 0
 4704 003e 214B     		ldr	r3, .L251
 4705 0040 C822     		movs	r2, #200
 4706 0042 5A86     		strh	r2, [r3, #50]	@ movhi
1066:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 4707              		.loc 1 1066 0
 4708 0044 1F4B     		ldr	r3, .L251
 4709 0046 4FF48062 		mov	r2, #1024
 4710 004a 5A63     		str	r2, [r3, #52]
1067:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 4711              		.loc 1 1067 0
 4712 004c 1D4B     		ldr	r3, .L251
 4713 004e 4FF48062 		mov	r2, #1024
 4714 0052 9A63     		str	r2, [r3, #56]
1068:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 4715              		.loc 1 1068 0
 4716 0054 1B4B     		ldr	r3, .L251
 4717 0056 6422     		movs	r2, #100
 4718 0058 83F83C20 		strb	r2, [r3, #60]
1069:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 4719              		.loc 1 1069 0
 4720 005c 194B     		ldr	r3, .L251
 4721 005e 6422     		movs	r2, #100
 4722 0060 83F83D20 		strb	r2, [r3, #61]
1070:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 4723              		.loc 1 1070 0
 4724 0064 174B     		ldr	r3, .L251
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 120


 4725 0066 0022     		movs	r2, #0
 4726 0068 83F83E20 		strb	r2, [r3, #62]
1071:..\src/command_processing.c ****     
1072:..\src/command_processing.c ****     // MASTER_SLAVE STRUCT
1073:..\src/command_processing.c ****     g_mem.MS.master_mode_active = FALSE;
 4727              		.loc 1 1073 0
 4728 006c 154B     		ldr	r3, .L251
 4729 006e 0022     		movs	r2, #0
 4730 0070 83F84020 		strb	r2, [r3, #64]
1074:..\src/command_processing.c ****     
1075:..\src/command_processing.c ****     
1076:..\src/command_processing.c ****     //FEEDBACK STRUCT
1077:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 4731              		.loc 1 1077 0
 4732 0074 134B     		ldr	r3, .L251
 4733 0076 4FF4E172 		mov	r2, #450
 4734 007a 1A65     		str	r2, [r3, #80]
1078:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 4735              		.loc 1 1078 0
 4736 007c 114B     		ldr	r3, .L251
 4737 007e 124A     		ldr	r2, .L251+4
 4738 0080 5A65     		str	r2, [r3, #84]	@ float
1079:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 4739              		.loc 1 1079 0
 4740 0082 104B     		ldr	r3, .L251
 4741 0084 4FF07E52 		mov	r2, #1065353216
 4742 0088 9A65     		str	r2, [r3, #88]	@ float
1080:..\src/command_processing.c ****     g_mem.FB.vibrotactile_feedback_active = FALSE;
 4743              		.loc 1 1080 0
 4744 008a 0E4B     		ldr	r3, .L251
 4745 008c 0022     		movs	r2, #0
 4746 008e 83F85C20 		strb	r2, [r3, #92]
1081:..\src/command_processing.c ****     g_mem.FB.airchamber_feedback_active = FALSE;
 4747              		.loc 1 1081 0
 4748 0092 0C4B     		ldr	r3, .L251
 4749 0094 0022     		movs	r2, #0
 4750 0096 83F85D20 		strb	r2, [r3, #93]
1082:..\src/command_processing.c ****     
1083:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
1084:..\src/command_processing.c ****     g_mem.flag = TRUE;
 4751              		.loc 1 1084 0
 4752 009a 0A4B     		ldr	r3, .L251
 4753 009c 0122     		movs	r2, #1
 4754 009e 1A70     		strb	r2, [r3]
1085:..\src/command_processing.c ****     
1086:..\src/command_processing.c ****     //write that configuration to EEPROM
1087:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );}
 4755              		.loc 1 1087 0
 4756 00a0 0020     		movs	r0, #0
 4757 00a2 FFF7FEFF 		bl	memStore
 4758 00a6 0346     		mov	r3, r0
 4759 00a8 002B     		cmp	r3, #0
 4760 00aa 07D0     		beq	.L248
 4761              		.loc 1 1087 0 is_stmt 0 discriminator 1
 4762 00ac 3220     		movs	r0, #50
 4763 00ae FFF7FEFF 		bl	memStore
 4764 00b2 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 121


 4765 00b4 002B     		cmp	r3, #0
 4766 00b6 01D0     		beq	.L248
 4767              		.loc 1 1087 0 discriminator 3
 4768 00b8 0123     		movs	r3, #1
 4769 00ba 00E0     		b	.L249
 4770              	.L248:
 4771              		.loc 1 1087 0 discriminator 4
 4772 00bc 0023     		movs	r3, #0
 4773              	.L249:
 4774              		.loc 1 1087 0 discriminator 6
 4775 00be DBB2     		uxtb	r3, r3
 4776 00c0 1846     		mov	r0, r3
 4777 00c2 80BD     		pop	{r7, pc}
 4778              	.L252:
 4779              		.align	2
 4780              	.L251:
 4781 00c4 00000000 		.word	g_mem
 4782 00c8 0000C841 		.word	1103626240
 4783              		.cfi_endproc
 4784              	.LFE90:
 4785              		.size	memInit, .-memInit
 4786              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 4787              		.align	2
 4788              		.global	memInit_SoftHandPro
 4789              		.thumb
 4790              		.thumb_func
 4791              		.type	memInit_SoftHandPro, %function
 4792              	memInit_SoftHandPro:
 4793              	.LFB91:
1088:..\src/command_processing.c **** 
1089:..\src/command_processing.c **** //==============================================================================
1090:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
1091:..\src/command_processing.c **** //==============================================================================
1092:..\src/command_processing.c **** void memInit_SoftHandPro(void)
1093:..\src/command_processing.c **** {
 4794              		.loc 1 1093 0 is_stmt 1
 4795              		.cfi_startproc
 4796              		@ args = 0, pretend = 0, frame = 0
 4797              		@ frame_needed = 1, uses_anonymous_args = 0
 4798              		@ link register save eliminated.
 4799 0000 80B4     		push	{r7}
 4800              		.cfi_def_cfa_offset 4
 4801              		.cfi_offset 7, -4
 4802 0002 00AF     		add	r7, sp, #0
 4803              		.cfi_def_cfa_register 7
1094:..\src/command_processing.c **** }
 4804              		.loc 1 1094 0
 4805 0004 00BF     		nop
 4806 0006 BD46     		mov	sp, r7
 4807              		.cfi_def_cfa_register 13
 4808              		@ sp needed
 4809 0008 80BC     		pop	{r7}
 4810              		.cfi_restore 7
 4811              		.cfi_def_cfa_offset 0
 4812 000a 7047     		bx	lr
 4813              		.cfi_endproc
 4814              	.LFE91:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 122


 4815              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 4816              		.section	.text.memInit_Master,"ax",%progbits
 4817              		.align	2
 4818              		.global	memInit_Master
 4819              		.thumb
 4820              		.thumb_func
 4821              		.type	memInit_Master, %function
 4822              	memInit_Master:
 4823              	.LFB92:
1095:..\src/command_processing.c **** 
1096:..\src/command_processing.c **** //==============================================================================
1097:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
1098:..\src/command_processing.c **** //==============================================================================
1099:..\src/command_processing.c **** void memInit_Master(void)
1100:..\src/command_processing.c **** {
 4824              		.loc 1 1100 0
 4825              		.cfi_startproc
 4826              		@ args = 0, pretend = 0, frame = 0
 4827              		@ frame_needed = 1, uses_anonymous_args = 0
 4828              		@ link register save eliminated.
 4829 0000 80B4     		push	{r7}
 4830              		.cfi_def_cfa_offset 4
 4831              		.cfi_offset 7, -4
 4832 0002 00AF     		add	r7, sp, #0
 4833              		.cfi_def_cfa_register 7
1101:..\src/command_processing.c **** }
 4834              		.loc 1 1101 0
 4835 0004 00BF     		nop
 4836 0006 BD46     		mov	sp, r7
 4837              		.cfi_def_cfa_register 13
 4838              		@ sp needed
 4839 0008 80BC     		pop	{r7}
 4840              		.cfi_restore 7
 4841              		.cfi_def_cfa_offset 0
 4842 000a 7047     		bx	lr
 4843              		.cfi_endproc
 4844              	.LFE92:
 4845              		.size	memInit_Master, .-memInit_Master
 4846              		.section	.text.memInit_AirChambers_Vibrotactile_Fb,"ax",%progbits
 4847              		.align	2
 4848              		.global	memInit_AirChambers_Vibrotactile_Fb
 4849              		.thumb
 4850              		.thumb_func
 4851              		.type	memInit_AirChambers_Vibrotactile_Fb, %function
 4852              	memInit_AirChambers_Vibrotactile_Fb:
 4853              	.LFB93:
1102:..\src/command_processing.c **** 
1103:..\src/command_processing.c **** //==============================================================================
1104:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
1105:..\src/command_processing.c **** //==============================================================================
1106:..\src/command_processing.c **** void memInit_AirChambers_Vibrotactile_Fb()
1107:..\src/command_processing.c **** {
 4854              		.loc 1 1107 0
 4855              		.cfi_startproc
 4856              		@ args = 0, pretend = 0, frame = 0
 4857              		@ frame_needed = 1, uses_anonymous_args = 0
 4858              		@ link register save eliminated.
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 123


 4859 0000 80B4     		push	{r7}
 4860              		.cfi_def_cfa_offset 4
 4861              		.cfi_offset 7, -4
 4862 0002 00AF     		add	r7, sp, #0
 4863              		.cfi_def_cfa_register 7
1108:..\src/command_processing.c **** }
 4864              		.loc 1 1108 0
 4865 0004 00BF     		nop
 4866 0006 BD46     		mov	sp, r7
 4867              		.cfi_def_cfa_register 13
 4868              		@ sp needed
 4869 0008 80BC     		pop	{r7}
 4870              		.cfi_restore 7
 4871              		.cfi_def_cfa_offset 0
 4872 000a 7047     		bx	lr
 4873              		.cfi_endproc
 4874              	.LFE93:
 4875              		.size	memInit_AirChambers_Vibrotactile_Fb, .-memInit_AirChambers_Vibrotactile_Fb
 4876              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 4877              		.align	2
 4878              		.global	memInit_OtbkActWristMs
 4879              		.thumb
 4880              		.thumb_func
 4881              		.type	memInit_OtbkActWristMs, %function
 4882              	memInit_OtbkActWristMs:
 4883              	.LFB94:
1109:..\src/command_processing.c **** 
1110:..\src/command_processing.c **** //==============================================================================
1111:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
1112:..\src/command_processing.c **** //==============================================================================
1113:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
1114:..\src/command_processing.c **** {
 4884              		.loc 1 1114 0
 4885              		.cfi_startproc
 4886              		@ args = 0, pretend = 0, frame = 0
 4887              		@ frame_needed = 1, uses_anonymous_args = 0
 4888              		@ link register save eliminated.
 4889 0000 80B4     		push	{r7}
 4890              		.cfi_def_cfa_offset 4
 4891              		.cfi_offset 7, -4
 4892 0002 00AF     		add	r7, sp, #0
 4893              		.cfi_def_cfa_register 7
1115:..\src/command_processing.c **** }
 4894              		.loc 1 1115 0
 4895 0004 00BF     		nop
 4896 0006 BD46     		mov	sp, r7
 4897              		.cfi_def_cfa_register 13
 4898              		@ sp needed
 4899 0008 80BC     		pop	{r7}
 4900              		.cfi_restore 7
 4901              		.cfi_def_cfa_offset 0
 4902 000a 7047     		bx	lr
 4903              		.cfi_endproc
 4904              	.LFE94:
 4905              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 4906              		.section	.text.cmd_get_measurements,"ax",%progbits
 4907              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 124


 4908              		.global	cmd_get_measurements
 4909              		.thumb
 4910              		.thumb_func
 4911              		.type	cmd_get_measurements, %function
 4912              	cmd_get_measurements:
 4913              	.LFB95:
1116:..\src/command_processing.c **** 
1117:..\src/command_processing.c **** //==============================================================================
1118:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
1119:..\src/command_processing.c **** //==============================================================================
1120:..\src/command_processing.c **** /**
1121:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
1122:..\src/command_processing.c **** **/
1123:..\src/command_processing.c **** 
1124:..\src/command_processing.c **** void cmd_get_measurements(){
 4914              		.loc 1 1124 0
 4915              		.cfi_startproc
 4916              		@ args = 0, pretend = 0, frame = 0
 4917              		@ frame_needed = 1, uses_anonymous_args = 0
 4918              		@ link register save eliminated.
 4919 0000 80B4     		push	{r7}
 4920              		.cfi_def_cfa_offset 4
 4921              		.cfi_offset 7, -4
 4922 0002 00AF     		add	r7, sp, #0
 4923              		.cfi_def_cfa_register 7
1125:..\src/command_processing.c ****  
1126:..\src/command_processing.c ****    
1127:..\src/command_processing.c **** }
 4924              		.loc 1 1127 0
 4925 0004 00BF     		nop
 4926 0006 BD46     		mov	sp, r7
 4927              		.cfi_def_cfa_register 13
 4928              		@ sp needed
 4929 0008 80BC     		pop	{r7}
 4930              		.cfi_restore 7
 4931              		.cfi_def_cfa_offset 0
 4932 000a 7047     		bx	lr
 4933              		.cfi_endproc
 4934              	.LFE95:
 4935              		.size	cmd_get_measurements, .-cmd_get_measurements
 4936              		.section	.text.cmd_get_velocities,"ax",%progbits
 4937              		.align	2
 4938              		.global	cmd_get_velocities
 4939              		.thumb
 4940              		.thumb_func
 4941              		.type	cmd_get_velocities, %function
 4942              	cmd_get_velocities:
 4943              	.LFB96:
1128:..\src/command_processing.c **** 
1129:..\src/command_processing.c **** void cmd_get_velocities(){
 4944              		.loc 1 1129 0
 4945              		.cfi_startproc
 4946              		@ args = 0, pretend = 0, frame = 0
 4947              		@ frame_needed = 1, uses_anonymous_args = 0
 4948              		@ link register save eliminated.
 4949 0000 80B4     		push	{r7}
 4950              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 125


 4951              		.cfi_offset 7, -4
 4952 0002 00AF     		add	r7, sp, #0
 4953              		.cfi_def_cfa_register 7
1130:..\src/command_processing.c ****  
1131:..\src/command_processing.c **** }
 4954              		.loc 1 1131 0
 4955 0004 00BF     		nop
 4956 0006 BD46     		mov	sp, r7
 4957              		.cfi_def_cfa_register 13
 4958              		@ sp needed
 4959 0008 80BC     		pop	{r7}
 4960              		.cfi_restore 7
 4961              		.cfi_def_cfa_offset 0
 4962 000a 7047     		bx	lr
 4963              		.cfi_endproc
 4964              	.LFE96:
 4965              		.size	cmd_get_velocities, .-cmd_get_velocities
 4966              		.section	.text.cmd_get_accelerations,"ax",%progbits
 4967              		.align	2
 4968              		.global	cmd_get_accelerations
 4969              		.thumb
 4970              		.thumb_func
 4971              		.type	cmd_get_accelerations, %function
 4972              	cmd_get_accelerations:
 4973              	.LFB97:
1132:..\src/command_processing.c **** 
1133:..\src/command_processing.c **** void cmd_get_accelerations(){
 4974              		.loc 1 1133 0
 4975              		.cfi_startproc
 4976              		@ args = 0, pretend = 0, frame = 0
 4977              		@ frame_needed = 1, uses_anonymous_args = 0
 4978              		@ link register save eliminated.
 4979 0000 80B4     		push	{r7}
 4980              		.cfi_def_cfa_offset 4
 4981              		.cfi_offset 7, -4
 4982 0002 00AF     		add	r7, sp, #0
 4983              		.cfi_def_cfa_register 7
1134:..\src/command_processing.c ****  
1135:..\src/command_processing.c **** }
 4984              		.loc 1 1135 0
 4985 0004 00BF     		nop
 4986 0006 BD46     		mov	sp, r7
 4987              		.cfi_def_cfa_register 13
 4988              		@ sp needed
 4989 0008 80BC     		pop	{r7}
 4990              		.cfi_restore 7
 4991              		.cfi_def_cfa_offset 0
 4992 000a 7047     		bx	lr
 4993              		.cfi_endproc
 4994              	.LFE97:
 4995              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 4996              		.section	.text.cmd_get_joystick,"ax",%progbits
 4997              		.align	2
 4998              		.global	cmd_get_joystick
 4999              		.thumb
 5000              		.thumb_func
 5001              		.type	cmd_get_joystick, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 126


 5002              	cmd_get_joystick:
 5003              	.LFB98:
1136:..\src/command_processing.c **** 
1137:..\src/command_processing.c **** void cmd_get_joystick() {
 5004              		.loc 1 1137 0
 5005              		.cfi_startproc
 5006              		@ args = 0, pretend = 0, frame = 0
 5007              		@ frame_needed = 1, uses_anonymous_args = 0
 5008              		@ link register save eliminated.
 5009 0000 80B4     		push	{r7}
 5010              		.cfi_def_cfa_offset 4
 5011              		.cfi_offset 7, -4
 5012 0002 00AF     		add	r7, sp, #0
 5013              		.cfi_def_cfa_register 7
1138:..\src/command_processing.c ****  
1139:..\src/command_processing.c **** }
 5014              		.loc 1 1139 0
 5015 0004 00BF     		nop
 5016 0006 BD46     		mov	sp, r7
 5017              		.cfi_def_cfa_register 13
 5018              		@ sp needed
 5019 0008 80BC     		pop	{r7}
 5020              		.cfi_restore 7
 5021              		.cfi_def_cfa_offset 0
 5022 000a 7047     		bx	lr
 5023              		.cfi_endproc
 5024              	.LFE98:
 5025              		.size	cmd_get_joystick, .-cmd_get_joystick
 5026              		.section	.text.cmd_set_inputs,"ax",%progbits
 5027              		.align	2
 5028              		.global	cmd_set_inputs
 5029              		.thumb
 5030              		.thumb_func
 5031              		.type	cmd_set_inputs, %function
 5032              	cmd_set_inputs:
 5033              	.LFB99:
1140:..\src/command_processing.c **** 
1141:..\src/command_processing.c **** void cmd_set_inputs(){
 5034              		.loc 1 1141 0
 5035              		.cfi_startproc
 5036              		@ args = 0, pretend = 0, frame = 8
 5037              		@ frame_needed = 1, uses_anonymous_args = 0
 5038              		@ link register save eliminated.
 5039 0000 80B4     		push	{r7}
 5040              		.cfi_def_cfa_offset 4
 5041              		.cfi_offset 7, -4
 5042 0002 83B0     		sub	sp, sp, #12
 5043              		.cfi_def_cfa_offset 16
 5044 0004 00AF     		add	r7, sp, #0
 5045              		.cfi_def_cfa_register 7
1142:..\src/command_processing.c ****      // Store position setted in right variables
1143:..\src/command_processing.c ****     int16 aux_int16[3];
1144:..\src/command_processing.c ****     static int16 last_aux_int16[3];
1145:..\src/command_processing.c ****     
1146:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 5046              		.loc 1 1146 0
 5047 0006 294B     		ldr	r3, .L268
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 127


 5048 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5049 000a 1B02     		lsls	r3, r3, #8
 5050 000c 1AB2     		sxth	r2, r3
 5051 000e 274B     		ldr	r3, .L268
 5052 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5053 0012 1BB2     		sxth	r3, r3
 5054 0014 1343     		orrs	r3, r3, r2
 5055 0016 1BB2     		sxth	r3, r3
 5056 0018 3B80     		strh	r3, [r7]	@ movhi
1147:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 5057              		.loc 1 1147 0
 5058 001a 244B     		ldr	r3, .L268
 5059 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5060 001e 1B02     		lsls	r3, r3, #8
 5061 0020 1AB2     		sxth	r2, r3
 5062 0022 224B     		ldr	r3, .L268
 5063 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5064 0026 1BB2     		sxth	r3, r3
 5065 0028 1343     		orrs	r3, r3, r2
 5066 002a 1BB2     		sxth	r3, r3
 5067 002c 7B80     		strh	r3, [r7, #2]	@ movhi
1148:..\src/command_processing.c ****     aux_int16[2] = (int16)(g_rx.buffer[5]<<8 | g_rx.buffer[6]);
 5068              		.loc 1 1148 0
 5069 002e 1F4B     		ldr	r3, .L268
 5070 0030 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5071 0032 1B02     		lsls	r3, r3, #8
 5072 0034 1AB2     		sxth	r2, r3
 5073 0036 1D4B     		ldr	r3, .L268
 5074 0038 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 5075 003a 1BB2     		sxth	r3, r3
 5076 003c 1343     		orrs	r3, r3, r2
 5077 003e 1BB2     		sxth	r3, r3
 5078 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 5079              	.LBB28:
1149:..\src/command_processing.c ****     // Check if last command received was the same as this 
1150:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
1151:..\src/command_processing.c ****     for (uint8 i = 0; i < 3; i++) {
 5080              		.loc 1 1151 0
 5081 0042 0023     		movs	r3, #0
 5082 0044 FB71     		strb	r3, [r7, #7]
 5083 0046 06E0     		b	.L262
 5084              	.L263:
1152:..\src/command_processing.c ****        //if(last_aux_int16[i] != aux_int16[i]){
1153:..\src/command_processing.c ****             change_ext_ref_flag[i] = TRUE;
 5085              		.loc 1 1153 0 discriminator 3
 5086 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5087 004a 194A     		ldr	r2, .L268+4
 5088 004c 0121     		movs	r1, #1
 5089 004e D154     		strb	r1, [r2, r3]
1151:..\src/command_processing.c ****        //if(last_aux_int16[i] != aux_int16[i]){
 5090              		.loc 1 1151 0 discriminator 3
 5091 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5092 0052 0133     		adds	r3, r3, #1
 5093 0054 FB71     		strb	r3, [r7, #7]
 5094              	.L262:
1151:..\src/command_processing.c ****        //if(last_aux_int16[i] != aux_int16[i]){
 5095              		.loc 1 1151 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 128


 5096 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5097 0058 022B     		cmp	r3, #2
 5098 005a F5D9     		bls	.L263
 5099              	.LBE28:
1154:..\src/command_processing.c ****        }
1155:..\src/command_processing.c ****         // Update last command
1156:..\src/command_processing.c ****       // last_aux_int16[i] = aux_int16[i];
1157:..\src/command_processing.c ****     
1158:..\src/command_processing.c ****     
1159:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
1160:..\src/command_processing.c ****     if (change_ext_ref_flag[0]) {
 5100              		.loc 1 1160 0 is_stmt 1
 5101 005c 144B     		ldr	r3, .L268+4
 5102 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5103 0060 002B     		cmp	r3, #0
 5104 0062 0BD0     		beq	.L264
1161:..\src/command_processing.c ****         Pump_refNew = aux_int16[0];
 5105              		.loc 1 1161 0
 5106 0064 B7F90030 		ldrsh	r3, [r7]
 5107 0068 DAB2     		uxtb	r2, r3
 5108 006a 124B     		ldr	r3, .L268+8
 5109 006c 1A70     		strb	r2, [r3]
1162:..\src/command_processing.c ****                 
1163:..\src/command_processing.c ****         // Check if the reference is nor higher or lower than the position limits
1164:..\src/command_processing.c ****         if (Pump_refNew < 0)
1165:..\src/command_processing.c ****             Pump_refNew = 0;
1166:..\src/command_processing.c ****                 
1167:..\src/command_processing.c ****         if (Pump_refNew > 100)
 5110              		.loc 1 1167 0
 5111 006e 114B     		ldr	r3, .L268+8
 5112 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5113 0072 642B     		cmp	r3, #100
 5114 0074 02D9     		bls	.L264
1168:..\src/command_processing.c ****             Pump_refNew = 100;       
 5115              		.loc 1 1168 0
 5116 0076 0F4B     		ldr	r3, .L268+8
 5117 0078 6422     		movs	r2, #100
 5118 007a 1A70     		strb	r2, [r3]
 5119              	.L264:
1169:..\src/command_processing.c ****     }
1170:..\src/command_processing.c ****     
1171:..\src/command_processing.c ****     if (change_ext_ref_flag[1]) 
 5120              		.loc 1 1171 0
 5121 007c 0C4B     		ldr	r3, .L268+4
 5122 007e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5123 0080 002B     		cmp	r3, #0
 5124 0082 04D0     		beq	.L265
1172:..\src/command_processing.c ****         VT_refNew[0] = aux_int16[1];
 5125              		.loc 1 1172 0
 5126 0084 B7F90230 		ldrsh	r3, [r7, #2]
 5127 0088 DAB2     		uxtb	r2, r3
 5128 008a 0B4B     		ldr	r3, .L268+12
 5129 008c 1A70     		strb	r2, [r3]
 5130              	.L265:
1173:..\src/command_processing.c ****     
1174:..\src/command_processing.c ****     if (change_ext_ref_flag[2]) 
 5131              		.loc 1 1174 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 129


 5132 008e 084B     		ldr	r3, .L268+4
 5133 0090 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5134 0092 002B     		cmp	r3, #0
 5135 0094 04D0     		beq	.L267
1175:..\src/command_processing.c ****         VT_refNew[1] = aux_int16[2];
 5136              		.loc 1 1175 0
 5137 0096 B7F90430 		ldrsh	r3, [r7, #4]
 5138 009a DAB2     		uxtb	r2, r3
 5139 009c 064B     		ldr	r3, .L268+12
 5140 009e 5A70     		strb	r2, [r3, #1]
 5141              	.L267:
1176:..\src/command_processing.c ****                 
1177:..\src/command_processing.c ****    }
 5142              		.loc 1 1177 0
 5143 00a0 00BF     		nop
 5144 00a2 0C37     		adds	r7, r7, #12
 5145              		.cfi_def_cfa_offset 4
 5146 00a4 BD46     		mov	sp, r7
 5147              		.cfi_def_cfa_register 13
 5148              		@ sp needed
 5149 00a6 80BC     		pop	{r7}
 5150              		.cfi_restore 7
 5151              		.cfi_def_cfa_offset 0
 5152 00a8 7047     		bx	lr
 5153              	.L269:
 5154 00aa 00BF     		.align	2
 5155              	.L268:
 5156 00ac 00000000 		.word	g_rx
 5157 00b0 00000000 		.word	change_ext_ref_flag
 5158 00b4 00000000 		.word	Pump_refNew
 5159 00b8 00000000 		.word	VT_refNew
 5160              		.cfi_endproc
 5161              	.LFE99:
 5162              		.size	cmd_set_inputs, .-cmd_set_inputs
 5163              		.section	.text.cmd_activate,"ax",%progbits
 5164              		.align	2
 5165              		.global	cmd_activate
 5166              		.thumb
 5167              		.thumb_func
 5168              		.type	cmd_activate, %function
 5169              	cmd_activate:
 5170              	.LFB100:
1178:..\src/command_processing.c **** 
1179:..\src/command_processing.c **** void cmd_activate(){
 5171              		.loc 1 1179 0
 5172              		.cfi_startproc
 5173              		@ args = 0, pretend = 0, frame = 8
 5174              		@ frame_needed = 1, uses_anonymous_args = 0
 5175 0000 80B5     		push	{r7, lr}
 5176              		.cfi_def_cfa_offset 8
 5177              		.cfi_offset 7, -8
 5178              		.cfi_offset 14, -4
 5179 0002 82B0     		sub	sp, sp, #8
 5180              		.cfi_def_cfa_offset 16
 5181 0004 00AF     		add	r7, sp, #0
 5182              		.cfi_def_cfa_register 7
1180:..\src/command_processing.c ****  uint8 aux = g_rx.buffer[1];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 130


 5183              		.loc 1 1180 0
 5184 0006 084B     		ldr	r3, .L271
 5185 0008 5B78     		ldrb	r3, [r3, #1]
 5186 000a FB71     		strb	r3, [r7, #7]
1181:..\src/command_processing.c ****  VALVE_Write((aux >> 1) & 0x01);
 5187              		.loc 1 1181 0
 5188 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5189 000e 5B08     		lsrs	r3, r3, #1
 5190 0010 DBB2     		uxtb	r3, r3
 5191 0012 03F00103 		and	r3, r3, #1
 5192 0016 DBB2     		uxtb	r3, r3
 5193 0018 1846     		mov	r0, r3
 5194 001a FFF7FEFF 		bl	VALVE_Write
1182:..\src/command_processing.c ****  
1183:..\src/command_processing.c **** }
 5195              		.loc 1 1183 0
 5196 001e 00BF     		nop
 5197 0020 0837     		adds	r7, r7, #8
 5198              		.cfi_def_cfa_offset 8
 5199 0022 BD46     		mov	sp, r7
 5200              		.cfi_def_cfa_register 13
 5201              		@ sp needed
 5202 0024 80BD     		pop	{r7, pc}
 5203              	.L272:
 5204 0026 00BF     		.align	2
 5205              	.L271:
 5206 0028 00000000 		.word	g_rx
 5207              		.cfi_endproc
 5208              	.LFE100:
 5209              		.size	cmd_activate, .-cmd_activate
 5210              		.section	.text.cmd_get_activate,"ax",%progbits
 5211              		.align	2
 5212              		.global	cmd_get_activate
 5213              		.thumb
 5214              		.thumb_func
 5215              		.type	cmd_get_activate, %function
 5216              	cmd_get_activate:
 5217              	.LFB101:
1184:..\src/command_processing.c **** 
1185:..\src/command_processing.c **** void cmd_get_activate(){
 5218              		.loc 1 1185 0
 5219              		.cfi_startproc
 5220              		@ args = 0, pretend = 0, frame = 0
 5221              		@ frame_needed = 1, uses_anonymous_args = 0
 5222              		@ link register save eliminated.
 5223 0000 80B4     		push	{r7}
 5224              		.cfi_def_cfa_offset 4
 5225              		.cfi_offset 7, -4
 5226 0002 00AF     		add	r7, sp, #0
 5227              		.cfi_def_cfa_register 7
1186:..\src/command_processing.c ****     
1187:..\src/command_processing.c **** }
 5228              		.loc 1 1187 0
 5229 0004 00BF     		nop
 5230 0006 BD46     		mov	sp, r7
 5231              		.cfi_def_cfa_register 13
 5232              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 131


 5233 0008 80BC     		pop	{r7}
 5234              		.cfi_restore 7
 5235              		.cfi_def_cfa_offset 0
 5236 000a 7047     		bx	lr
 5237              		.cfi_endproc
 5238              	.LFE101:
 5239              		.size	cmd_get_activate, .-cmd_get_activate
 5240              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 5241              		.align	2
 5242              		.global	cmd_get_curr_and_meas
 5243              		.thumb
 5244              		.thumb_func
 5245              		.type	cmd_get_curr_and_meas, %function
 5246              	cmd_get_curr_and_meas:
 5247              	.LFB102:
1188:..\src/command_processing.c **** 
1189:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 5248              		.loc 1 1189 0
 5249              		.cfi_startproc
 5250              		@ args = 0, pretend = 0, frame = 0
 5251              		@ frame_needed = 1, uses_anonymous_args = 0
 5252              		@ link register save eliminated.
 5253 0000 80B4     		push	{r7}
 5254              		.cfi_def_cfa_offset 4
 5255              		.cfi_offset 7, -4
 5256 0002 00AF     		add	r7, sp, #0
 5257              		.cfi_def_cfa_register 7
1190:..\src/command_processing.c ****    
1191:..\src/command_processing.c ****    
1192:..\src/command_processing.c **** }
 5258              		.loc 1 1192 0
 5259 0004 00BF     		nop
 5260 0006 BD46     		mov	sp, r7
 5261              		.cfi_def_cfa_register 13
 5262              		@ sp needed
 5263 0008 80BC     		pop	{r7}
 5264              		.cfi_restore 7
 5265              		.cfi_def_cfa_offset 0
 5266 000a 7047     		bx	lr
 5267              		.cfi_endproc
 5268              	.LFE102:
 5269              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 5270              		.section	.text.cmd_get_currents,"ax",%progbits
 5271              		.align	2
 5272              		.global	cmd_get_currents
 5273              		.thumb
 5274              		.thumb_func
 5275              		.type	cmd_get_currents, %function
 5276              	cmd_get_currents:
 5277              	.LFB103:
1193:..\src/command_processing.c **** 
1194:..\src/command_processing.c **** void cmd_get_currents(){
 5278              		.loc 1 1194 0
 5279              		.cfi_startproc
 5280              		@ args = 0, pretend = 0, frame = 16
 5281              		@ frame_needed = 1, uses_anonymous_args = 0
 5282 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 132


 5283              		.cfi_def_cfa_offset 8
 5284              		.cfi_offset 7, -8
 5285              		.cfi_offset 14, -4
 5286 0002 84B0     		sub	sp, sp, #16
 5287              		.cfi_def_cfa_offset 24
 5288 0004 00AF     		add	r7, sp, #0
 5289              		.cfi_def_cfa_register 7
1195:..\src/command_processing.c ****    
1196:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
1197:..\src/command_processing.c ****     
1198:..\src/command_processing.c ****     uint8 packet_data[6]; 
1199:..\src/command_processing.c ****     int16 aux_int16;
1200:..\src/command_processing.c ****     
1201:..\src/command_processing.c ****     //Header package
1202:..\src/command_processing.c **** 
1203:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 5290              		.loc 1 1203 0
 5291 0006 8523     		movs	r3, #133
 5292 0008 3B72     		strb	r3, [r7, #8]
1204:..\src/command_processing.c **** 
1205:..\src/command_processing.c ****      // Send pressure times 100 here instead of current (Simulink use)
1206:..\src/command_processing.c ****     aux_int16 = (int16)(pressure_value * 100); //Pressure in KPa * 100
 5293              		.loc 1 1206 0
 5294 000a 1C4B     		ldr	r3, .L277
 5295 000c 1B68     		ldr	r3, [r3]
 5296 000e 9BB2     		uxth	r3, r3
 5297 0010 1A46     		mov	r2, r3	@ movhi
 5298 0012 9200     		lsls	r2, r2, #2
 5299 0014 1344     		add	r3, r3, r2
 5300 0016 1A46     		mov	r2, r3	@ movhi
 5301 0018 9100     		lsls	r1, r2, #2
 5302 001a 1A46     		mov	r2, r3	@ movhi
 5303 001c 0B46     		mov	r3, r1	@ movhi
 5304 001e 1344     		add	r3, r3, r2
 5305 0020 9B00     		lsls	r3, r3, #2
 5306 0022 9BB2     		uxth	r3, r3
 5307 0024 1BB2     		sxth	r3, r3
 5308 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1207:..\src/command_processing.c ****     if (aux_int16 < 0) aux_int16 = 0;
 5309              		.loc 1 1207 0
 5310 0028 B7F90630 		ldrsh	r3, [r7, #6]
 5311 002c 002B     		cmp	r3, #0
 5312 002e 01DA     		bge	.L276
 5313              		.loc 1 1207 0 is_stmt 0 discriminator 1
 5314 0030 0023     		movs	r3, #0
 5315 0032 FB80     		strh	r3, [r7, #6]	@ movhi
 5316              	.L276:
1208:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 5317              		.loc 1 1208 0 is_stmt 1
 5318 0034 BB1D     		adds	r3, r7, #6
 5319 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5320 0038 BB72     		strb	r3, [r7, #10]
1209:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 5321              		.loc 1 1209 0
 5322 003a BB1D     		adds	r3, r7, #6
 5323 003c 0133     		adds	r3, r3, #1
 5324 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 133


 5325 0040 7B72     		strb	r3, [r7, #9]
1210:..\src/command_processing.c ****     
1211:..\src/command_processing.c ****     
1212:..\src/command_processing.c ****     // aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
1213:..\src/command_processing.c ****     aux_int16 = (int16)(Battery_level_out);
 5326              		.loc 1 1213 0
 5327 0042 0F4B     		ldr	r3, .L277+4
 5328 0044 1B68     		ldr	r3, [r3]
 5329 0046 1BB2     		sxth	r3, r3
 5330 0048 FB80     		strh	r3, [r7, #6]	@ movhi
1214:..\src/command_processing.c ****     
1215:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 5331              		.loc 1 1215 0
 5332 004a BB1D     		adds	r3, r7, #6
 5333 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5334 004e 3B73     		strb	r3, [r7, #12]
1216:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 5335              		.loc 1 1216 0
 5336 0050 BB1D     		adds	r3, r7, #6
 5337 0052 0133     		adds	r3, r3, #1
 5338 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5339 0056 FB72     		strb	r3, [r7, #11]
1217:..\src/command_processing.c **** 
1218:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
1219:..\src/command_processing.c **** 
1220:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 5340              		.loc 1 1220 0
 5341 0058 07F10803 		add	r3, r7, #8
 5342 005c 0521     		movs	r1, #5
 5343 005e 1846     		mov	r0, r3
 5344 0060 FFF7FEFF 		bl	LCRChecksum
 5345 0064 0346     		mov	r3, r0
 5346 0066 7B73     		strb	r3, [r7, #13]
1221:..\src/command_processing.c ****     
1222:..\src/command_processing.c ****     commWrite(packet_data, 6);
 5347              		.loc 1 1222 0
 5348 0068 07F10803 		add	r3, r7, #8
 5349 006c 0621     		movs	r1, #6
 5350 006e 1846     		mov	r0, r3
 5351 0070 FFF7FEFF 		bl	commWrite
1223:..\src/command_processing.c **** 
1224:..\src/command_processing.c **** }
 5352              		.loc 1 1224 0
 5353 0074 00BF     		nop
 5354 0076 1037     		adds	r7, r7, #16
 5355              		.cfi_def_cfa_offset 8
 5356 0078 BD46     		mov	sp, r7
 5357              		.cfi_def_cfa_register 13
 5358              		@ sp needed
 5359 007a 80BD     		pop	{r7, pc}
 5360              	.L278:
 5361              		.align	2
 5362              	.L277:
 5363 007c 00000000 		.word	pressure_value
 5364 0080 00000000 		.word	Battery_level_out
 5365              		.cfi_endproc
 5366              	.LFE103:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 134


 5367              		.size	cmd_get_currents, .-cmd_get_currents
 5368              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 5369              		.align	2
 5370              		.global	cmd_get_currents_for_cuff
 5371              		.thumb
 5372              		.thumb_func
 5373              		.type	cmd_get_currents_for_cuff, %function
 5374              	cmd_get_currents_for_cuff:
 5375              	.LFB104:
1225:..\src/command_processing.c **** 
1226:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 5376              		.loc 1 1226 0
 5377              		.cfi_startproc
 5378              		@ args = 0, pretend = 0, frame = 0
 5379              		@ frame_needed = 1, uses_anonymous_args = 0
 5380              		@ link register save eliminated.
 5381 0000 80B4     		push	{r7}
 5382              		.cfi_def_cfa_offset 4
 5383              		.cfi_offset 7, -4
 5384 0002 00AF     		add	r7, sp, #0
 5385              		.cfi_def_cfa_register 7
1227:..\src/command_processing.c ****    
1228:..\src/command_processing.c **** }
 5386              		.loc 1 1228 0
 5387 0004 00BF     		nop
 5388 0006 BD46     		mov	sp, r7
 5389              		.cfi_def_cfa_register 13
 5390              		@ sp needed
 5391 0008 80BC     		pop	{r7}
 5392              		.cfi_restore 7
 5393              		.cfi_def_cfa_offset 0
 5394 000a 7047     		bx	lr
 5395              		.cfi_endproc
 5396              	.LFE104:
 5397              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 5398              		.section	.text.cmd_get_vibrotactile_inputs,"ax",%progbits
 5399              		.align	2
 5400              		.global	cmd_get_vibrotactile_inputs
 5401              		.thumb
 5402              		.thumb_func
 5403              		.type	cmd_get_vibrotactile_inputs, %function
 5404              	cmd_get_vibrotactile_inputs:
 5405              	.LFB105:
1229:..\src/command_processing.c **** 
1230:..\src/command_processing.c **** void cmd_get_vibrotactile_inputs(){
 5406              		.loc 1 1230 0
 5407              		.cfi_startproc
 5408              		@ args = 0, pretend = 0, frame = 0
 5409              		@ frame_needed = 1, uses_anonymous_args = 0
 5410              		@ link register save eliminated.
 5411 0000 80B4     		push	{r7}
 5412              		.cfi_def_cfa_offset 4
 5413              		.cfi_offset 7, -4
 5414 0002 00AF     		add	r7, sp, #0
 5415              		.cfi_def_cfa_register 7
1231:..\src/command_processing.c ****     
1232:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 135


 5416              		.loc 1 1232 0
 5417 0004 00BF     		nop
 5418 0006 BD46     		mov	sp, r7
 5419              		.cfi_def_cfa_register 13
 5420              		@ sp needed
 5421 0008 80BC     		pop	{r7}
 5422              		.cfi_restore 7
 5423              		.cfi_def_cfa_offset 0
 5424 000a 7047     		bx	lr
 5425              		.cfi_endproc
 5426              	.LFE105:
 5427              		.size	cmd_get_vibrotactile_inputs, .-cmd_get_vibrotactile_inputs
 5428              		.section	.text.commReadIMUFromSH,"ax",%progbits
 5429              		.align	2
 5430              		.global	commReadIMUFromSH
 5431              		.thumb
 5432              		.thumb_func
 5433              		.type	commReadIMUFromSH, %function
 5434              	commReadIMUFromSH:
 5435              	.LFB106:
1233:..\src/command_processing.c **** 
1234:..\src/command_processing.c **** 
1235:..\src/command_processing.c **** 
1236:..\src/command_processing.c **** //==============================================================================
1237:..\src/command_processing.c **** //                                                 READ IMU VALUES FROM SOFTHAND
1238:..\src/command_processing.c **** //==============================================================================
1239:..\src/command_processing.c **** void commReadIMUFromSH(){
 5436              		.loc 1 1239 0
 5437              		.cfi_startproc
 5438              		@ args = 0, pretend = 0, frame = 32
 5439              		@ frame_needed = 1, uses_anonymous_args = 0
 5440 0000 80B5     		push	{r7, lr}
 5441              		.cfi_def_cfa_offset 8
 5442              		.cfi_offset 7, -8
 5443              		.cfi_offset 14, -4
 5444 0002 88B0     		sub	sp, sp, #32
 5445              		.cfi_def_cfa_offset 40
 5446 0004 00AF     		add	r7, sp, #0
 5447              		.cfi_def_cfa_register 7
1240:..\src/command_processing.c ****     // Send CMD_GET_VIBROTACTILE_INPUTS to the slave and gets the PWM control values for the vibrot
1241:..\src/command_processing.c ****     // resulted from the processed IMU values.
1242:..\src/command_processing.c ****     // This function use RS485 protocol to communicate with the second board. 
1243:..\src/command_processing.c ****     // Baude Rate is set to 2000000. 
1244:..\src/command_processing.c ****     // Here a request (: : ID pk_length CMD check) is sent  --> 6bytes * 8bit * 0.5us = 24us
1245:..\src/command_processing.c ****     // and an answer (: : ID pk_length CMD data1[0] data1[1] data2[0] data2[1] check) received --> 
1246:..\src/command_processing.c ****     // At least 64 us are requested for this communication 
1247:..\src/command_processing.c ****     
1248:..\src/command_processing.c ****     uint8 packet_data[16];
1249:..\src/command_processing.c ****     uint8 packet_length;
1250:..\src/command_processing.c ****    
1251:..\src/command_processing.c ****     uint32 t_start, t_end;
1252:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 5448              		.loc 1 1252 0
 5449 0006 0123     		movs	r3, #1
 5450 0008 FB77     		strb	r3, [r7, #31]
1253:..\src/command_processing.c **** 
1254:..\src/command_processing.c ****     packet_length = 2;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 136


 5451              		.loc 1 1254 0
 5452 000a 0223     		movs	r3, #2
 5453 000c BB77     		strb	r3, [r7, #30]
1255:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VIBROTACTILE_INPUTS;
 5454              		.loc 1 1255 0
 5455 000e FA23     		movs	r3, #250
 5456 0010 3B71     		strb	r3, [r7, #4]
1256:..\src/command_processing.c ****     packet_data[1] = CMD_GET_VIBROTACTILE_INPUTS;
 5457              		.loc 1 1256 0
 5458 0012 FA23     		movs	r3, #250
 5459 0014 7B71     		strb	r3, [r7, #5]
1257:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 5460              		.loc 1 1257 0
 5461 0016 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 5462 0018 99B2     		uxth	r1, r3
 5463 001a 234B     		ldr	r3, .L288
 5464 001c 93F84120 		ldrb	r2, [r3, #65]	@ zero_extendqisi2
 5465 0020 3B1D     		adds	r3, r7, #4
 5466 0022 1846     		mov	r0, r3
 5467 0024 FFF7FEFF 		bl	commWriteID
1258:..\src/command_processing.c **** 
1259:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 5468              		.loc 1 1259 0
 5469 0028 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5470 002c 0346     		mov	r3, r0
 5471 002e BB61     		str	r3, [r7, #24]
1260:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_VIBROTACTILE_INPUTS) {
 5472              		.loc 1 1260 0
 5473 0030 18E0     		b	.L282
 5474              	.L285:
1261:..\src/command_processing.c ****         if (interrupt_flag){
 5475              		.loc 1 1261 0
 5476 0032 1E4B     		ldr	r3, .L288+4
 5477 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5478 0036 002B     		cmp	r3, #0
 5479 0038 04D0     		beq	.L283
1262:..\src/command_processing.c ****             interrupt_flag = FALSE;
 5480              		.loc 1 1262 0
 5481 003a 1C4B     		ldr	r3, .L288+4
 5482 003c 0022     		movs	r2, #0
 5483 003e 1A70     		strb	r2, [r3]
1263:..\src/command_processing.c ****             interrupt_manager();
 5484              		.loc 1 1263 0
 5485 0040 FFF7FEFF 		bl	interrupt_manager
 5486              	.L283:
1264:..\src/command_processing.c ****         }
1265:..\src/command_processing.c **** 
1266:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 5487              		.loc 1 1266 0
 5488 0044 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5489 0048 0346     		mov	r3, r0
 5490 004a 7B61     		str	r3, [r7, #20]
1267:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 5491              		.loc 1 1267 0
 5492 004c BA69     		ldr	r2, [r7, #24]
 5493 004e 7B69     		ldr	r3, [r7, #20]
 5494 0050 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 137


 5495 0052 174A     		ldr	r2, .L288+8
 5496 0054 9342     		cmp	r3, r2
 5497 0056 05D9     		bls	.L282
1268:..\src/command_processing.c ****             read_flag = FALSE;
 5498              		.loc 1 1268 0
 5499 0058 0023     		movs	r3, #0
 5500 005a FB77     		strb	r3, [r7, #31]
1269:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 5501              		.loc 1 1269 0
 5502 005c 154B     		ldr	r3, .L288+12
 5503 005e 0022     		movs	r2, #0
 5504 0060 1A70     		strb	r2, [r3]
1270:..\src/command_processing.c ****             break;
 5505              		.loc 1 1270 0
 5506 0062 03E0     		b	.L284
 5507              	.L282:
1260:..\src/command_processing.c ****         if (interrupt_flag){
 5508              		.loc 1 1260 0
 5509 0064 144B     		ldr	r3, .L288+16
 5510 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5511 0068 FB2B     		cmp	r3, #251
 5512 006a E2D1     		bne	.L285
 5513              	.L284:
1271:..\src/command_processing.c ****         }
1272:..\src/command_processing.c ****     }
1273:..\src/command_processing.c **** 
1274:..\src/command_processing.c ****         if (read_flag) {
 5514              		.loc 1 1274 0
 5515 006c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5516 006e 002B     		cmp	r3, #0
 5517 0070 15D0     		beq	.L287
1275:..\src/command_processing.c ****         PWM_IMU_1 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);      
 5518              		.loc 1 1275 0
 5519 0072 114B     		ldr	r3, .L288+16
 5520 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5521 0076 1B02     		lsls	r3, r3, #8
 5522 0078 1AB2     		sxth	r2, r3
 5523 007a 0F4B     		ldr	r3, .L288+16
 5524 007c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5525 007e 1BB2     		sxth	r3, r3
 5526 0080 1343     		orrs	r3, r3, r2
 5527 0082 1AB2     		sxth	r2, r3
 5528 0084 0D4B     		ldr	r3, .L288+20
 5529 0086 1A80     		strh	r2, [r3]	@ movhi
1276:..\src/command_processing.c ****         PWM_IMU_2 = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);      
 5530              		.loc 1 1276 0
 5531 0088 0B4B     		ldr	r3, .L288+16
 5532 008a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5533 008c 1B02     		lsls	r3, r3, #8
 5534 008e 1AB2     		sxth	r2, r3
 5535 0090 094B     		ldr	r3, .L288+16
 5536 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5537 0094 1BB2     		sxth	r3, r3
 5538 0096 1343     		orrs	r3, r3, r2
 5539 0098 1AB2     		sxth	r2, r3
 5540 009a 094B     		ldr	r3, .L288+24
 5541 009c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 138


 5542              	.L287:
1277:..\src/command_processing.c ****     }
1278:..\src/command_processing.c ****     
1279:..\src/command_processing.c **** }
 5543              		.loc 1 1279 0
 5544 009e 00BF     		nop
 5545 00a0 2037     		adds	r7, r7, #32
 5546              		.cfi_def_cfa_offset 8
 5547 00a2 BD46     		mov	sp, r7
 5548              		.cfi_def_cfa_register 13
 5549              		@ sp needed
 5550 00a4 80BD     		pop	{r7, pc}
 5551              	.L289:
 5552 00a6 00BF     		.align	2
 5553              	.L288:
 5554 00a8 00000000 		.word	c_mem
 5555 00ac 00000000 		.word	interrupt_flag
 5556 00b0 20AA4400 		.word	4500000
 5557 00b4 00000000 		.word	master_mode
 5558 00b8 00000000 		.word	g_rx
 5559 00bc 00000000 		.word	PWM_IMU_1
 5560 00c0 00000000 		.word	PWM_IMU_2
 5561              		.cfi_endproc
 5562              	.LFE106:
 5563              		.size	commReadIMUFromSH, .-commReadIMUFromSH
 5564              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 5565              		.align	2
 5566              		.global	commReadResCurrFromSH
 5567              		.thumb
 5568              		.thumb_func
 5569              		.type	commReadResCurrFromSH, %function
 5570              	commReadResCurrFromSH:
 5571              	.LFB107:
1280:..\src/command_processing.c **** 
1281:..\src/command_processing.c **** //==============================================================================
1282:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
1283:..\src/command_processing.c **** //==============================================================================
1284:..\src/command_processing.c **** // This function use RS485 protocol to communicate with the second board. 
1285:..\src/command_processing.c **** // Baude Rate is set to 2000000. 
1286:..\src/command_processing.c **** // Here a request (: : ID pk_length CMD check) is sent  --> 6bytes * 8bit * 0.5us = 24us
1287:..\src/command_processing.c **** // and an answer (: : ID pk_length CMD data1[0] data1[1] check) received --> 8bytes * 8bit * 0.5us 
1288:..\src/command_processing.c **** // At least 56 us are requested for this communication 
1289:..\src/command_processing.c **** int16  commReadResCurrFromSH()
1290:..\src/command_processing.c **** {
 5572              		.loc 1 1290 0
 5573              		.cfi_startproc
 5574              		@ args = 0, pretend = 0, frame = 32
 5575              		@ frame_needed = 1, uses_anonymous_args = 0
 5576 0000 80B5     		push	{r7, lr}
 5577              		.cfi_def_cfa_offset 8
 5578              		.cfi_offset 7, -8
 5579              		.cfi_offset 14, -4
 5580 0002 88B0     		sub	sp, sp, #32
 5581              		.cfi_def_cfa_offset 40
 5582 0004 00AF     		add	r7, sp, #0
 5583              		.cfi_def_cfa_register 7
1291:..\src/command_processing.c ****     uint8 packet_data[16];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 139


1292:..\src/command_processing.c ****     uint8 packet_length;
1293:..\src/command_processing.c ****     int16 curr_diff = 0;
 5584              		.loc 1 1293 0
 5585 0006 0023     		movs	r3, #0
 5586 0008 FB83     		strh	r3, [r7, #30]	@ movhi
1294:..\src/command_processing.c ****     uint32 t_start, t_end;
1295:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 5587              		.loc 1 1295 0
 5588 000a 0123     		movs	r3, #1
 5589 000c 7B77     		strb	r3, [r7, #29]
1296:..\src/command_processing.c **** 
1297:..\src/command_processing.c ****     packet_length = 2;
 5590              		.loc 1 1297 0
 5591 000e 0223     		movs	r3, #2
 5592 0010 3B77     		strb	r3, [r7, #28]
1298:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 5593              		.loc 1 1298 0
 5594 0012 8C23     		movs	r3, #140
 5595 0014 3B71     		strb	r3, [r7, #4]
1299:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 5596              		.loc 1 1299 0
 5597 0016 8C23     		movs	r3, #140
 5598 0018 7B71     		strb	r3, [r7, #5]
1300:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 5599              		.loc 1 1300 0
 5600 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 5601 001c 99B2     		uxth	r1, r3
 5602 001e 1D4B     		ldr	r3, .L297
 5603 0020 93F84120 		ldrb	r2, [r3, #65]	@ zero_extendqisi2
 5604 0024 3B1D     		adds	r3, r7, #4
 5605 0026 1846     		mov	r0, r3
 5606 0028 FFF7FEFF 		bl	commWriteID
1301:..\src/command_processing.c **** 
1302:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 5607              		.loc 1 1302 0
 5608 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5609 0030 0346     		mov	r3, r0
 5610 0032 BB61     		str	r3, [r7, #24]
1303:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 5611              		.loc 1 1303 0
 5612 0034 18E0     		b	.L291
 5613              	.L294:
1304:..\src/command_processing.c ****         if (interrupt_flag){
 5614              		.loc 1 1304 0
 5615 0036 184B     		ldr	r3, .L297+4
 5616 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5617 003a 002B     		cmp	r3, #0
 5618 003c 04D0     		beq	.L292
1305:..\src/command_processing.c ****             interrupt_flag = FALSE;
 5619              		.loc 1 1305 0
 5620 003e 164B     		ldr	r3, .L297+4
 5621 0040 0022     		movs	r2, #0
 5622 0042 1A70     		strb	r2, [r3]
1306:..\src/command_processing.c ****             interrupt_manager();
 5623              		.loc 1 1306 0
 5624 0044 FFF7FEFF 		bl	interrupt_manager
 5625              	.L292:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 140


1307:..\src/command_processing.c ****         }
1308:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 5626              		.loc 1 1308 0
 5627 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 5628 004c 0346     		mov	r3, r0
 5629 004e 7B61     		str	r3, [r7, #20]
1309:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 5630              		.loc 1 1309 0
 5631 0050 BA69     		ldr	r2, [r7, #24]
 5632 0052 7B69     		ldr	r3, [r7, #20]
 5633 0054 D31A     		subs	r3, r2, r3
 5634 0056 114A     		ldr	r2, .L297+8
 5635 0058 9342     		cmp	r3, r2
 5636 005a 05D9     		bls	.L291
1310:..\src/command_processing.c ****             read_flag = FALSE;
 5637              		.loc 1 1310 0
 5638 005c 0023     		movs	r3, #0
 5639 005e 7B77     		strb	r3, [r7, #29]
1311:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 5640              		.loc 1 1311 0
 5641 0060 0F4B     		ldr	r3, .L297+12
 5642 0062 0022     		movs	r2, #0
 5643 0064 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****             break;
 5644              		.loc 1 1312 0
 5645 0066 03E0     		b	.L293
 5646              	.L291:
1303:..\src/command_processing.c ****         if (interrupt_flag){
 5647              		.loc 1 1303 0
 5648 0068 0E4B     		ldr	r3, .L297+16
 5649 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5650 006c 8E2B     		cmp	r3, #142
 5651 006e E2D1     		bne	.L294
 5652              	.L293:
1313:..\src/command_processing.c ****         }
1314:..\src/command_processing.c ****     }
1315:..\src/command_processing.c **** 
1316:..\src/command_processing.c ****     if (read_flag) {
 5653              		.loc 1 1316 0
 5654 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 5655 0072 002B     		cmp	r3, #0
 5656 0074 08D0     		beq	.L295
1317:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 5657              		.loc 1 1317 0
 5658 0076 0B4B     		ldr	r3, .L297+16
 5659 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5660 007a 1B02     		lsls	r3, r3, #8
 5661 007c 1AB2     		sxth	r2, r3
 5662 007e 094B     		ldr	r3, .L297+16
 5663 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5664 0082 1BB2     		sxth	r3, r3
 5665 0084 1343     		orrs	r3, r3, r2
 5666 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 5667              	.L295:
1318:..\src/command_processing.c ****     }
1319:..\src/command_processing.c ****     
1320:..\src/command_processing.c ****     return curr_diff;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 141


 5668              		.loc 1 1320 0
 5669 0088 B7F91E30 		ldrsh	r3, [r7, #30]
1321:..\src/command_processing.c **** }
 5670              		.loc 1 1321 0
 5671 008c 1846     		mov	r0, r3
 5672 008e 2037     		adds	r7, r7, #32
 5673              		.cfi_def_cfa_offset 8
 5674 0090 BD46     		mov	sp, r7
 5675              		.cfi_def_cfa_register 13
 5676              		@ sp needed
 5677 0092 80BD     		pop	{r7, pc}
 5678              	.L298:
 5679              		.align	2
 5680              	.L297:
 5681 0094 00000000 		.word	c_mem
 5682 0098 00000000 		.word	interrupt_flag
 5683 009c 20AA4400 		.word	4500000
 5684 00a0 00000000 		.word	master_mode
 5685 00a4 00000000 		.word	g_rx
 5686              		.cfi_endproc
 5687              	.LFE107:
 5688              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 5689              		.section	.text.cmd_set_baudrate,"ax",%progbits
 5690              		.align	2
 5691              		.global	cmd_set_baudrate
 5692              		.thumb
 5693              		.thumb_func
 5694              		.type	cmd_set_baudrate, %function
 5695              	cmd_set_baudrate:
 5696              	.LFB108:
1322:..\src/command_processing.c **** 
1323:..\src/command_processing.c **** 
1324:..\src/command_processing.c **** /////////////////////////////////////////////////////////////////////////////////////
1325:..\src/command_processing.c **** 
1326:..\src/command_processing.c **** void cmd_set_baudrate(){
 5697              		.loc 1 1326 0
 5698              		.cfi_startproc
 5699              		@ args = 0, pretend = 0, frame = 0
 5700              		@ frame_needed = 1, uses_anonymous_args = 0
 5701              		@ link register save eliminated.
 5702 0000 80B4     		push	{r7}
 5703              		.cfi_def_cfa_offset 4
 5704              		.cfi_offset 7, -4
 5705 0002 00AF     		add	r7, sp, #0
 5706              		.cfi_def_cfa_register 7
1327:..\src/command_processing.c ****     
1328:..\src/command_processing.c **** }
 5707              		.loc 1 1328 0
 5708 0004 00BF     		nop
 5709 0006 BD46     		mov	sp, r7
 5710              		.cfi_def_cfa_register 13
 5711              		@ sp needed
 5712 0008 80BC     		pop	{r7}
 5713              		.cfi_restore 7
 5714              		.cfi_def_cfa_offset 0
 5715 000a 7047     		bx	lr
 5716              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 142


 5717              	.LFE108:
 5718              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 5719              		.section	.text.cmd_ping,"ax",%progbits
 5720              		.align	2
 5721              		.global	cmd_ping
 5722              		.thumb
 5723              		.thumb_func
 5724              		.type	cmd_ping, %function
 5725              	cmd_ping:
 5726              	.LFB109:
1329:..\src/command_processing.c **** 
1330:..\src/command_processing.c **** void cmd_ping(){
 5727              		.loc 1 1330 0
 5728              		.cfi_startproc
 5729              		@ args = 0, pretend = 0, frame = 8
 5730              		@ frame_needed = 1, uses_anonymous_args = 0
 5731 0000 80B5     		push	{r7, lr}
 5732              		.cfi_def_cfa_offset 8
 5733              		.cfi_offset 7, -8
 5734              		.cfi_offset 14, -4
 5735 0002 82B0     		sub	sp, sp, #8
 5736              		.cfi_def_cfa_offset 16
 5737 0004 00AF     		add	r7, sp, #0
 5738              		.cfi_def_cfa_register 7
1331:..\src/command_processing.c **** 
1332:..\src/command_processing.c ****     uint8 packet_data[2];
1333:..\src/command_processing.c **** 
1334:..\src/command_processing.c ****     // Header
1335:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 5739              		.loc 1 1335 0
 5740 0006 0023     		movs	r3, #0
 5741 0008 3B71     		strb	r3, [r7, #4]
1336:..\src/command_processing.c ****     
1337:..\src/command_processing.c ****     // Load Payload
1338:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 5742              		.loc 1 1338 0
 5743 000a 0023     		movs	r3, #0
 5744 000c 7B71     		strb	r3, [r7, #5]
1339:..\src/command_processing.c **** 
1340:..\src/command_processing.c ****     // Send Package to uart
1341:..\src/command_processing.c ****     commWrite(packet_data, 2);
 5745              		.loc 1 1341 0
 5746 000e 3B1D     		adds	r3, r7, #4
 5747 0010 0221     		movs	r1, #2
 5748 0012 1846     		mov	r0, r3
 5749 0014 FFF7FEFF 		bl	commWrite
1342:..\src/command_processing.c **** }
 5750              		.loc 1 1342 0
 5751 0018 00BF     		nop
 5752 001a 0837     		adds	r7, r7, #8
 5753              		.cfi_def_cfa_offset 8
 5754 001c BD46     		mov	sp, r7
 5755              		.cfi_def_cfa_register 13
 5756              		@ sp needed
 5757 001e 80BD     		pop	{r7, pc}
 5758              		.cfi_endproc
 5759              	.LFE109:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 143


 5760              		.size	cmd_ping, .-cmd_ping
 5761              		.section	.text.cmd_get_inputs,"ax",%progbits
 5762              		.align	2
 5763              		.global	cmd_get_inputs
 5764              		.thumb
 5765              		.thumb_func
 5766              		.type	cmd_get_inputs, %function
 5767              	cmd_get_inputs:
 5768              	.LFB110:
1343:..\src/command_processing.c **** 
1344:..\src/command_processing.c **** void cmd_get_inputs(){
 5769              		.loc 1 1344 0
 5770              		.cfi_startproc
 5771              		@ args = 0, pretend = 0, frame = 0
 5772              		@ frame_needed = 1, uses_anonymous_args = 0
 5773              		@ link register save eliminated.
 5774 0000 80B4     		push	{r7}
 5775              		.cfi_def_cfa_offset 4
 5776              		.cfi_offset 7, -4
 5777 0002 00AF     		add	r7, sp, #0
 5778              		.cfi_def_cfa_register 7
1345:..\src/command_processing.c **** 
1346:..\src/command_processing.c **** }
 5779              		.loc 1 1346 0
 5780 0004 00BF     		nop
 5781 0006 BD46     		mov	sp, r7
 5782              		.cfi_def_cfa_register 13
 5783              		@ sp needed
 5784 0008 80BC     		pop	{r7}
 5785              		.cfi_restore 7
 5786              		.cfi_def_cfa_offset 0
 5787 000a 7047     		bx	lr
 5788              		.cfi_endproc
 5789              	.LFE110:
 5790              		.size	cmd_get_inputs, .-cmd_get_inputs
 5791              		.section	.text.cmd_store_params,"ax",%progbits
 5792              		.align	2
 5793              		.global	cmd_store_params
 5794              		.thumb
 5795              		.thumb_func
 5796              		.type	cmd_store_params, %function
 5797              	cmd_store_params:
 5798              	.LFB111:
1347:..\src/command_processing.c **** 
1348:..\src/command_processing.c **** void cmd_store_params(){
 5799              		.loc 1 1348 0
 5800              		.cfi_startproc
 5801              		@ args = 0, pretend = 0, frame = 8
 5802              		@ frame_needed = 1, uses_anonymous_args = 0
 5803 0000 80B5     		push	{r7, lr}
 5804              		.cfi_def_cfa_offset 8
 5805              		.cfi_offset 7, -8
 5806              		.cfi_offset 14, -4
 5807 0002 82B0     		sub	sp, sp, #8
 5808              		.cfi_def_cfa_offset 16
 5809 0004 00AF     		add	r7, sp, #0
 5810              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 144


1349:..\src/command_processing.c ****     
1350:..\src/command_processing.c ****     uint8 CYDATA packet_length = 2;
 5811              		.loc 1 1350 0
 5812 0006 0223     		movs	r3, #2
 5813 0008 FB71     		strb	r3, [r7, #7]
1351:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
1352:..\src/command_processing.c ****     uint8 CYDATA old_id;
1353:..\src/command_processing.c ****       
1354:..\src/command_processing.c ****     // Store params 
1355:..\src/command_processing.c **** 
1356:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 5814              		.loc 1 1356 0
 5815 000a 1F4B     		ldr	r3, .L310
 5816 000c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 5817 000e 1F4B     		ldr	r3, .L310+4
 5818 0010 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5819 0012 9A42     		cmp	r2, r3
 5820 0014 20D0     		beq	.L303
1357:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 5821              		.loc 1 1357 0
 5822 0016 1C4B     		ldr	r3, .L310
 5823 0018 1B7C     		ldrb	r3, [r3, #16]
 5824 001a BB71     		strb	r3, [r7, #6]
1358:..\src/command_processing.c ****         if(memStore(0)) {
 5825              		.loc 1 1358 0
 5826 001c 0020     		movs	r0, #0
 5827 001e FFF7FEFF 		bl	memStore
 5828 0022 0346     		mov	r3, r0
 5829 0024 002B     		cmp	r3, #0
 5830 0026 0BD0     		beq	.L304
1359:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 5831              		.loc 1 1359 0
 5832 0028 0123     		movs	r3, #1
 5833 002a 3B71     		strb	r3, [r7, #4]
1360:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 5834              		.loc 1 1360 0
 5835 002c 0123     		movs	r3, #1
 5836 002e 7B71     		strb	r3, [r7, #5]
1361:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 5837              		.loc 1 1361 0
 5838 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5839 0032 99B2     		uxth	r1, r3
 5840 0034 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5841 0036 3B1D     		adds	r3, r7, #4
 5842 0038 1846     		mov	r0, r3
 5843 003a FFF7FEFF 		bl	commWrite_old_id
 5844 003e 18E0     		b	.L306
 5845              	.L304:
1362:..\src/command_processing.c ****         }    
1363:..\src/command_processing.c ****         else{
1364:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 5846              		.loc 1 1364 0
 5847 0040 0023     		movs	r3, #0
 5848 0042 3B71     		strb	r3, [r7, #4]
1365:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 5849              		.loc 1 1365 0
 5850 0044 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 145


 5851 0046 7B71     		strb	r3, [r7, #5]
1366:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 5852              		.loc 1 1366 0
 5853 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5854 004a 99B2     		uxth	r1, r3
 5855 004c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5856 004e 3B1D     		adds	r3, r7, #4
 5857 0050 1846     		mov	r0, r3
 5858 0052 FFF7FEFF 		bl	commWrite_old_id
 5859 0056 0CE0     		b	.L306
 5860              	.L303:
1367:..\src/command_processing.c ****         }
1368:..\src/command_processing.c ****     }    
1369:..\src/command_processing.c ****     else {
1370:..\src/command_processing.c ****         if(memStore(0))
 5861              		.loc 1 1370 0
 5862 0058 0020     		movs	r0, #0
 5863 005a FFF7FEFF 		bl	memStore
 5864 005e 0346     		mov	r3, r0
 5865 0060 002B     		cmp	r3, #0
 5866 0062 03D0     		beq	.L307
1371:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 5867              		.loc 1 1371 0
 5868 0064 0120     		movs	r0, #1
 5869 0066 FFF7FEFF 		bl	sendAcknowledgment
 5870 006a 02E0     		b	.L306
 5871              	.L307:
1372:..\src/command_processing.c ****         else
1373:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 5872              		.loc 1 1373 0
 5873 006c 0020     		movs	r0, #0
 5874 006e FFF7FEFF 		bl	sendAcknowledgment
 5875              	.L306:
1374:..\src/command_processing.c ****     }
1375:..\src/command_processing.c ****     
1376:..\src/command_processing.c ****     // FW reset (if necessary)
1377:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 5876              		.loc 1 1377 0
 5877 0072 074B     		ldr	r3, .L310+8
 5878 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5879 0076 012B     		cmp	r3, #1
 5880 0078 01D1     		bne	.L309
1378:..\src/command_processing.c ****         CySoftwareReset();
 5881              		.loc 1 1378 0
 5882 007a FFF7FEFF 		bl	CySoftwareReset
 5883              	.L309:
1379:..\src/command_processing.c ****     }
1380:..\src/command_processing.c **** }
 5884              		.loc 1 1380 0
 5885 007e 00BF     		nop
 5886 0080 0837     		adds	r7, r7, #8
 5887              		.cfi_def_cfa_offset 8
 5888 0082 BD46     		mov	sp, r7
 5889              		.cfi_def_cfa_register 13
 5890              		@ sp needed
 5891 0084 80BD     		pop	{r7, pc}
 5892              	.L311:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 146


 5893 0086 00BF     		.align	2
 5894              	.L310:
 5895 0088 00000000 		.word	c_mem
 5896 008c 00000000 		.word	g_mem
 5897 0090 00000000 		.word	reset_PSoC_flag
 5898              		.cfi_endproc
 5899              	.LFE111:
 5900              		.size	cmd_store_params, .-cmd_store_params
 5901              		.section	.text.cmd_get_emg,"ax",%progbits
 5902              		.align	2
 5903              		.global	cmd_get_emg
 5904              		.thumb
 5905              		.thumb_func
 5906              		.type	cmd_get_emg, %function
 5907              	cmd_get_emg:
 5908              	.LFB112:
1381:..\src/command_processing.c **** 
1382:..\src/command_processing.c **** void cmd_get_emg(){
 5909              		.loc 1 1382 0
 5910              		.cfi_startproc
 5911              		@ args = 0, pretend = 0, frame = 16
 5912              		@ frame_needed = 1, uses_anonymous_args = 0
 5913 0000 80B5     		push	{r7, lr}
 5914              		.cfi_def_cfa_offset 8
 5915              		.cfi_offset 7, -8
 5916              		.cfi_offset 14, -4
 5917 0002 84B0     		sub	sp, sp, #16
 5918              		.cfi_def_cfa_offset 24
 5919 0004 00AF     		add	r7, sp, #0
 5920              		.cfi_def_cfa_register 7
1383:..\src/command_processing.c ****     
1384:..\src/command_processing.c ****     uint8 packet_data[6];
1385:..\src/command_processing.c ****     int16 aux_int16;
1386:..\src/command_processing.c ****     
1387:..\src/command_processing.c ****     // Header        
1388:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 5921              		.loc 1 1388 0
 5922 0006 8823     		movs	r3, #136
 5923 0008 3B72     		strb	r3, [r7, #8]
1389:..\src/command_processing.c ****     
1390:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 5924              		.loc 1 1390 0
 5925 000a 144B     		ldr	r3, .L313
 5926 000c 1B68     		ldr	r3, [r3]
 5927 000e 1BB2     		sxth	r3, r3
 5928 0010 FB80     		strh	r3, [r7, #6]	@ movhi
1391:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 5929              		.loc 1 1391 0
 5930 0012 BB1D     		adds	r3, r7, #6
 5931 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5932 0016 BB72     		strb	r3, [r7, #10]
1392:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 5933              		.loc 1 1392 0
 5934 0018 BB1D     		adds	r3, r7, #6
 5935 001a 0133     		adds	r3, r3, #1
 5936 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5937 001e 7B72     		strb	r3, [r7, #9]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 147


1393:..\src/command_processing.c ****     
1394:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 5938              		.loc 1 1394 0
 5939 0020 0E4B     		ldr	r3, .L313
 5940 0022 5B68     		ldr	r3, [r3, #4]
 5941 0024 1BB2     		sxth	r3, r3
 5942 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1395:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 5943              		.loc 1 1395 0
 5944 0028 BB1D     		adds	r3, r7, #6
 5945 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5946 002c 3B73     		strb	r3, [r7, #12]
1396:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 5947              		.loc 1 1396 0
 5948 002e BB1D     		adds	r3, r7, #6
 5949 0030 0133     		adds	r3, r3, #1
 5950 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5951 0034 FB72     		strb	r3, [r7, #11]
1397:..\src/command_processing.c **** 
1398:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 5952              		.loc 1 1398 0
 5953 0036 07F10803 		add	r3, r7, #8
 5954 003a 0521     		movs	r1, #5
 5955 003c 1846     		mov	r0, r3
 5956 003e FFF7FEFF 		bl	LCRChecksum
 5957 0042 0346     		mov	r3, r0
 5958 0044 7B73     		strb	r3, [r7, #13]
1399:..\src/command_processing.c **** 
1400:..\src/command_processing.c ****     commWrite(packet_data, 6);
 5959              		.loc 1 1400 0
 5960 0046 07F10803 		add	r3, r7, #8
 5961 004a 0621     		movs	r1, #6
 5962 004c 1846     		mov	r0, r3
 5963 004e FFF7FEFF 		bl	commWrite
1401:..\src/command_processing.c **** 
1402:..\src/command_processing.c **** }
 5964              		.loc 1 1402 0
 5965 0052 00BF     		nop
 5966 0054 1037     		adds	r7, r7, #16
 5967              		.cfi_def_cfa_offset 8
 5968 0056 BD46     		mov	sp, r7
 5969              		.cfi_def_cfa_register 13
 5970              		@ sp needed
 5971 0058 80BD     		pop	{r7, pc}
 5972              	.L314:
 5973 005a 00BF     		.align	2
 5974              	.L313:
 5975 005c 00000000 		.word	g_adc_measOld
 5976              		.cfi_endproc
 5977              	.LFE112:
 5978              		.size	cmd_get_emg, .-cmd_get_emg
 5979              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 5980              		.align	2
 5981              		.global	cmd_get_imu_readings
 5982              		.thumb
 5983              		.thumb_func
 5984              		.type	cmd_get_imu_readings, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 148


 5985              	cmd_get_imu_readings:
 5986              	.LFB113:
1403:..\src/command_processing.c **** 
1404:..\src/command_processing.c **** void cmd_get_imu_readings(){
 5987              		.loc 1 1404 0
 5988              		.cfi_startproc
 5989              		@ args = 0, pretend = 0, frame = 0
 5990              		@ frame_needed = 1, uses_anonymous_args = 0
 5991              		@ link register save eliminated.
 5992 0000 80B4     		push	{r7}
 5993              		.cfi_def_cfa_offset 4
 5994              		.cfi_offset 7, -4
 5995 0002 00AF     		add	r7, sp, #0
 5996              		.cfi_def_cfa_register 7
1405:..\src/command_processing.c ****  
1406:..\src/command_processing.c **** }
 5997              		.loc 1 1406 0
 5998 0004 00BF     		nop
 5999 0006 BD46     		mov	sp, r7
 6000              		.cfi_def_cfa_register 13
 6001              		@ sp needed
 6002 0008 80BC     		pop	{r7}
 6003              		.cfi_restore 7
 6004              		.cfi_def_cfa_offset 0
 6005 000a 7047     		bx	lr
 6006              		.cfi_endproc
 6007              	.LFE113:
 6008              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 6009              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 6010              		.align	2
 6011              		.global	cmd_get_encoder_map
 6012              		.thumb
 6013              		.thumb_func
 6014              		.type	cmd_get_encoder_map, %function
 6015              	cmd_get_encoder_map:
 6016              	.LFB114:
1407:..\src/command_processing.c **** 
1408:..\src/command_processing.c **** void cmd_get_encoder_map(){
 6017              		.loc 1 1408 0
 6018              		.cfi_startproc
 6019              		@ args = 0, pretend = 0, frame = 0
 6020              		@ frame_needed = 1, uses_anonymous_args = 0
 6021              		@ link register save eliminated.
 6022 0000 80B4     		push	{r7}
 6023              		.cfi_def_cfa_offset 4
 6024              		.cfi_offset 7, -4
 6025 0002 00AF     		add	r7, sp, #0
 6026              		.cfi_def_cfa_register 7
1409:..\src/command_processing.c ****    }
 6027              		.loc 1 1409 0
 6028 0004 00BF     		nop
 6029 0006 BD46     		mov	sp, r7
 6030              		.cfi_def_cfa_register 13
 6031              		@ sp needed
 6032 0008 80BC     		pop	{r7}
 6033              		.cfi_restore 7
 6034              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 149


 6035 000a 7047     		bx	lr
 6036              		.cfi_endproc
 6037              	.LFE114:
 6038              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 6039              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 6040              		.align	2
 6041              		.global	cmd_get_encoder_raw
 6042              		.thumb
 6043              		.thumb_func
 6044              		.type	cmd_get_encoder_raw, %function
 6045              	cmd_get_encoder_raw:
 6046              	.LFB115:
1410:..\src/command_processing.c **** 
1411:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 6047              		.loc 1 1411 0
 6048              		.cfi_startproc
 6049              		@ args = 0, pretend = 0, frame = 0
 6050              		@ frame_needed = 1, uses_anonymous_args = 0
 6051              		@ link register save eliminated.
 6052 0000 80B4     		push	{r7}
 6053              		.cfi_def_cfa_offset 4
 6054              		.cfi_offset 7, -4
 6055 0002 00AF     		add	r7, sp, #0
 6056              		.cfi_def_cfa_register 7
1412:..\src/command_processing.c ****    }
 6057              		.loc 1 1412 0
 6058 0004 00BF     		nop
 6059 0006 BD46     		mov	sp, r7
 6060              		.cfi_def_cfa_register 13
 6061              		@ sp needed
 6062 0008 80BC     		pop	{r7}
 6063              		.cfi_restore 7
 6064              		.cfi_def_cfa_offset 0
 6065 000a 7047     		bx	lr
 6066              		.cfi_endproc
 6067              	.LFE115:
 6068              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 6069              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 6070              		.align	2
 6071              		.global	cmd_get_ADC_map
 6072              		.thumb
 6073              		.thumb_func
 6074              		.type	cmd_get_ADC_map, %function
 6075              	cmd_get_ADC_map:
 6076              	.LFB116:
1413:..\src/command_processing.c **** 
1414:..\src/command_processing.c **** void cmd_get_ADC_map(){
 6077              		.loc 1 1414 0
 6078              		.cfi_startproc
 6079              		@ args = 0, pretend = 0, frame = 0
 6080              		@ frame_needed = 1, uses_anonymous_args = 0
 6081              		@ link register save eliminated.
 6082 0000 80B4     		push	{r7}
 6083              		.cfi_def_cfa_offset 4
 6084              		.cfi_offset 7, -4
 6085 0002 00AF     		add	r7, sp, #0
 6086              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 150


1415:..\src/command_processing.c ****    }
 6087              		.loc 1 1415 0
 6088 0004 00BF     		nop
 6089 0006 BD46     		mov	sp, r7
 6090              		.cfi_def_cfa_register 13
 6091              		@ sp needed
 6092 0008 80BC     		pop	{r7}
 6093              		.cfi_restore 7
 6094              		.cfi_def_cfa_offset 0
 6095 000a 7047     		bx	lr
 6096              		.cfi_endproc
 6097              	.LFE116:
 6098              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 6099              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 6100              		.align	2
 6101              		.global	cmd_get_ADC_raw
 6102              		.thumb
 6103              		.thumb_func
 6104              		.type	cmd_get_ADC_raw, %function
 6105              	cmd_get_ADC_raw:
 6106              	.LFB117:
1416:..\src/command_processing.c **** 
1417:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 6107              		.loc 1 1417 0
 6108              		.cfi_startproc
 6109              		@ args = 0, pretend = 0, frame = 0
 6110              		@ frame_needed = 1, uses_anonymous_args = 0
 6111              		@ link register save eliminated.
 6112 0000 80B4     		push	{r7}
 6113              		.cfi_def_cfa_offset 4
 6114              		.cfi_offset 7, -4
 6115 0002 00AF     		add	r7, sp, #0
 6116              		.cfi_def_cfa_register 7
1418:..\src/command_processing.c ****    
1419:..\src/command_processing.c **** }
 6117              		.loc 1 1419 0
 6118 0004 00BF     		nop
 6119 0006 BD46     		mov	sp, r7
 6120              		.cfi_def_cfa_register 13
 6121              		@ sp needed
 6122 0008 80BC     		pop	{r7}
 6123              		.cfi_restore 7
 6124              		.cfi_def_cfa_offset 0
 6125 000a 7047     		bx	lr
 6126              		.cfi_endproc
 6127              	.LFE117:
 6128              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 6129              		.section	.text.cmd_get_SD_file,"ax",%progbits
 6130              		.align	2
 6131              		.global	cmd_get_SD_file
 6132              		.thumb
 6133              		.thumb_func
 6134              		.type	cmd_get_SD_file, %function
 6135              	cmd_get_SD_file:
 6136              	.LFB118:
1420:..\src/command_processing.c **** 
1421:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 151


 6137              		.loc 1 1421 0
 6138              		.cfi_startproc
 6139              		@ args = 0, pretend = 0, frame = 20064
 6140              		@ frame_needed = 1, uses_anonymous_args = 0
 6141 0000 80B5     		push	{r7, lr}
 6142              		.cfi_def_cfa_offset 8
 6143              		.cfi_offset 7, -8
 6144              		.cfi_offset 14, -4
 6145 0002 ADF59C4D 		sub	sp, sp, #19968
 6146              		.cfi_def_cfa_offset 19976
 6147 0006 98B0     		sub	sp, sp, #96
 6148              		.cfi_def_cfa_offset 20072
 6149 0008 00AF     		add	r7, sp, #0
 6150              		.cfi_def_cfa_register 7
 6151 000a 0246     		mov	r2, r0
 6152 000c 07F16003 		add	r3, r7, #96
 6153 0010 5A3B     		subs	r3, r3, #90
 6154 0012 1A80     		strh	r2, [r3]	@ movhi
1422:..\src/command_processing.c ****     
1423:..\src/command_processing.c ****     uint8 i = 0;
 6155              		.loc 1 1423 0
 6156 0014 0023     		movs	r3, #0
 6157 0016 07F59C42 		add	r2, r7, #19968
 6158 001a 02F15F02 		add	r2, r2, #95
 6159 001e 1370     		strb	r3, [r2]
1424:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 6160              		.loc 1 1424 0
 6161 0020 0023     		movs	r3, #0
 6162 0022 07F59C42 		add	r2, r7, #19968
 6163 0026 02F12C02 		add	r2, r2, #44
 6164 002a 1360     		str	r3, [r2]
 6165 002c 07F59C43 		add	r3, r7, #19968
 6166 0030 03F13003 		add	r3, r3, #48
 6167 0034 2E22     		movs	r2, #46
 6168 0036 0021     		movs	r1, #0
 6169 0038 1846     		mov	r0, r3
 6170 003a FFF7FEFF 		bl	memset
1425:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 6171              		.loc 1 1425 0
 6172 003e 07F16003 		add	r3, r7, #96
 6173 0042 543B     		subs	r3, r3, #84
 6174 0044 0022     		movs	r2, #0
 6175 0046 1A60     		str	r2, [r3]
 6176 0048 0433     		adds	r3, r3, #4
 6177 004a 44F61C62 		movw	r2, #19996
 6178 004e 0021     		movs	r1, #0
 6179 0050 1846     		mov	r0, r3
 6180 0052 FFF7FEFF 		bl	memset
1426:..\src/command_processing.c ****     strcpy(filename, "");
 6181              		.loc 1 1426 0
 6182 0056 3C4B     		ldr	r3, .L325
 6183 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6184 005a 07F59C42 		add	r2, r7, #19968
 6185 005e 02F12C02 		add	r2, r2, #44
 6186 0062 1370     		strb	r3, [r2]
1427:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 6187              		.loc 1 1427 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 152


 6188 0064 384B     		ldr	r3, .L325
 6189 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6190 0068 07F16003 		add	r3, r7, #96
 6191 006c 543B     		subs	r3, r3, #84
 6192 006e 1A70     		strb	r2, [r3]
1428:..\src/command_processing.c ****     
1429:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 6193              		.loc 1 1429 0
 6194 0070 0023     		movs	r3, #0
 6195 0072 07F59C42 		add	r2, r7, #19968
 6196 0076 02F15F02 		add	r2, r2, #95
 6197 007a 1370     		strb	r3, [r2]
 6198 007c 1DE0     		b	.L321
 6199              	.L322:
1430:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6200              		.loc 1 1430 0 discriminator 3
 6201 007e 07F59C43 		add	r3, r7, #19968
 6202 0082 03F15F03 		add	r3, r3, #95
 6203 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6204 0088 07F59C42 		add	r2, r7, #19968
 6205 008c 02F12C02 		add	r2, r2, #44
 6206 0090 1344     		add	r3, r3, r2
 6207 0092 07F59C42 		add	r2, r7, #19968
 6208 0096 02F15F02 		add	r2, r2, #95
 6209 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6210 009c 0332     		adds	r2, r2, #3
 6211 009e 2B49     		ldr	r1, .L325+4
 6212 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6213 00a2 1A70     		strb	r2, [r3]
1429:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6214              		.loc 1 1429 0 discriminator 3
 6215 00a4 07F59C43 		add	r3, r7, #19968
 6216 00a8 03F15F03 		add	r3, r3, #95
 6217 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6218 00ae 0133     		adds	r3, r3, #1
 6219 00b0 07F59C42 		add	r2, r7, #19968
 6220 00b4 02F15F02 		add	r2, r2, #95
 6221 00b8 1370     		strb	r3, [r2]
 6222              	.L321:
1429:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 6223              		.loc 1 1429 0 is_stmt 0 discriminator 1
 6224 00ba 07F59C43 		add	r3, r7, #19968
 6225 00be 03F15F03 		add	r3, r3, #95
 6226 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6227 00c4 9AB2     		uxth	r2, r3
 6228 00c6 07F16003 		add	r3, r7, #96
 6229 00ca 5A3B     		subs	r3, r3, #90
 6230 00cc 1B88     		ldrh	r3, [r3]
 6231 00ce 9342     		cmp	r3, r2
 6232 00d0 D5D8     		bhi	.L322
1431:..\src/command_processing.c ****     }
1432:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 6233              		.loc 1 1432 0 is_stmt 1
 6234 00d2 07F59C43 		add	r3, r7, #19968
 6235 00d6 03F15F03 		add	r3, r3, #95
 6236 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6237 00dc 07F59C42 		add	r2, r7, #19968
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 153


 6238 00e0 02F12C02 		add	r2, r2, #44
 6239 00e4 1344     		add	r3, r3, r2
 6240 00e6 0022     		movs	r2, #0
 6241 00e8 1A70     		strb	r2, [r3]
1433:..\src/command_processing.c ****      
1434:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
1435:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 6242              		.loc 1 1435 0
 6243 00ea 07F59C43 		add	r3, r7, #19968
 6244 00ee 03F12C03 		add	r3, r3, #44
 6245 00f2 1749     		ldr	r1, .L325+8
 6246 00f4 1846     		mov	r0, r3
 6247 00f6 FFF7FEFF 		bl	strcmp
 6248 00fa 0346     		mov	r3, r0
 6249 00fc 002B     		cmp	r3, #0
 6250 00fe 0CD0     		beq	.L323
1436:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 6251              		.loc 1 1436 0
 6252 0100 07F16003 		add	r3, r7, #96
 6253 0104 543B     		subs	r3, r3, #84
 6254 0106 07F59C40 		add	r0, r7, #19968
 6255 010a 00F12C00 		add	r0, r0, #44
 6256 010e 44F62062 		movw	r2, #20000
 6257 0112 1946     		mov	r1, r3
 6258 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 6259 0118 07E0     		b	.L324
 6260              	.L323:
1437:..\src/command_processing.c ****     }
1438:..\src/command_processing.c ****     else {
1439:..\src/command_processing.c ****         //It is the currently open working file
1440:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 6261              		.loc 1 1440 0
 6262 011a 07F16003 		add	r3, r7, #96
 6263 011e 543B     		subs	r3, r3, #84
 6264 0120 44F62061 		movw	r1, #20000
 6265 0124 1846     		mov	r0, r3
 6266 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 6267              	.L324:
1441:..\src/command_processing.c ****     }
1442:..\src/command_processing.c **** 
1443:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
1444:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
1445:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 6268              		.loc 1 1445 0
 6269 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1446:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 6270              		.loc 1 1446 0
 6271 012e 07F16003 		add	r3, r7, #96
 6272 0132 543B     		subs	r3, r3, #84
 6273 0134 1846     		mov	r0, r3
 6274 0136 FFF7FEFF 		bl	UART_RS485_PutString
1447:..\src/command_processing.c **** }
 6275              		.loc 1 1447 0
 6276 013a 00BF     		nop
 6277 013c 07F59C47 		add	r7, r7, #19968
 6278 0140 6037     		adds	r7, r7, #96
 6279              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 154


 6280 0142 BD46     		mov	sp, r7
 6281              		.cfi_def_cfa_register 13
 6282              		@ sp needed
 6283 0144 80BD     		pop	{r7, pc}
 6284              	.L326:
 6285 0146 00BF     		.align	2
 6286              	.L325:
 6287 0148 00000000 		.word	.LC8
 6288 014c 00000000 		.word	g_rx
 6289 0150 00000000 		.word	sdFile
 6290              		.cfi_endproc
 6291              	.LFE118:
 6292              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 6293              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 6294              		.align	2
 6295              		.global	cmd_remove_SD_file
 6296              		.thumb
 6297              		.thumb_func
 6298              		.type	cmd_remove_SD_file, %function
 6299              	cmd_remove_SD_file:
 6300              	.LFB119:
1448:..\src/command_processing.c **** 
1449:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 6301              		.loc 1 1449 0
 6302              		.cfi_startproc
 6303              		@ args = 0, pretend = 0, frame = 8
 6304              		@ frame_needed = 1, uses_anonymous_args = 0
 6305              		@ link register save eliminated.
 6306 0000 80B4     		push	{r7}
 6307              		.cfi_def_cfa_offset 4
 6308              		.cfi_offset 7, -4
 6309 0002 83B0     		sub	sp, sp, #12
 6310              		.cfi_def_cfa_offset 16
 6311 0004 00AF     		add	r7, sp, #0
 6312              		.cfi_def_cfa_register 7
 6313 0006 0346     		mov	r3, r0
 6314 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1450:..\src/command_processing.c ****   
1451:..\src/command_processing.c **** }
 6315              		.loc 1 1451 0
 6316 000a 00BF     		nop
 6317 000c 0C37     		adds	r7, r7, #12
 6318              		.cfi_def_cfa_offset 4
 6319 000e BD46     		mov	sp, r7
 6320              		.cfi_def_cfa_register 13
 6321              		@ sp needed
 6322 0010 80BC     		pop	{r7}
 6323              		.cfi_restore 7
 6324              		.cfi_def_cfa_offset 0
 6325 0012 7047     		bx	lr
 6326              		.cfi_endproc
 6327              	.LFE119:
 6328              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 6329              		.global	__aeabi_i2f
 6330              		.global	__aeabi_ddiv
 6331              		.global	__aeabi_dmul
 6332              		.global	__aeabi_d2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 155


 6333              		.section	.text.vibrotactile_control,"ax",%progbits
 6334              		.align	2
 6335              		.global	vibrotactile_control
 6336              		.thumb
 6337              		.thumb_func
 6338              		.type	vibrotactile_control, %function
 6339              	vibrotactile_control:
 6340              	.LFB120:
1452:..\src/command_processing.c **** 
1453:..\src/command_processing.c **** //==============================================================================
1454:..\src/command_processing.c **** //                                                          VIBROTACTILE CONTROL
1455:..\src/command_processing.c **** //==============================================================================
1456:..\src/command_processing.c **** /* It asks IMU values to the SoftHand and sets vibrotactile feedback device inputs proportionally.*
1457:..\src/command_processing.c **** 
1458:..\src/command_processing.c **** void vibrotactile_control() {
 6341              		.loc 1 1458 0
 6342              		.cfi_startproc
 6343              		@ args = 0, pretend = 0, frame = 8
 6344              		@ frame_needed = 1, uses_anonymous_args = 0
 6345 0000 90B5     		push	{r4, r7, lr}
 6346              		.cfi_def_cfa_offset 12
 6347              		.cfi_offset 4, -12
 6348              		.cfi_offset 7, -8
 6349              		.cfi_offset 14, -4
 6350 0002 83B0     		sub	sp, sp, #12
 6351              		.cfi_def_cfa_offset 24
 6352 0004 00AF     		add	r7, sp, #0
 6353              		.cfi_def_cfa_register 7
1459:..\src/command_processing.c ****     
1460:..\src/command_processing.c ****     uint8 i;
1461:..\src/command_processing.c ****     
1462:..\src/command_processing.c ****     commReadIMUFromSH();    
 6354              		.loc 1 1462 0
 6355 0006 FFF7FEFF 		bl	commReadIMUFromSH
1463:..\src/command_processing.c ****     // Ask to the slave the reference commands to drive the vibrotactile devices. 
1464:..\src/command_processing.c ****     // Values received are already the PWM commands computed by the slave board proportional to the
1465:..\src/command_processing.c ****     
1466:..\src/command_processing.c ****     PWM_IMU_1 = (int16)(((float)PWM_IMU_1/50.0) * SCALA);
 6356              		.loc 1 1466 0
 6357 000a 4B4B     		ldr	r3, .L336
 6358 000c B3F90030 		ldrsh	r3, [r3]
 6359 0010 1846     		mov	r0, r3
 6360 0012 FFF7FEFF 		bl	__aeabi_i2f
 6361 0016 0346     		mov	r3, r0
 6362 0018 1846     		mov	r0, r3
 6363 001a FFF7FEFF 		bl	__aeabi_f2d
 6364 001e 4FF00002 		mov	r2, #0
 6365 0022 464B     		ldr	r3, .L336+4
 6366 0024 FFF7FEFF 		bl	__aeabi_ddiv
 6367 0028 0346     		mov	r3, r0
 6368 002a 0C46     		mov	r4, r1
 6369 002c 1846     		mov	r0, r3
 6370 002e 2146     		mov	r1, r4
 6371 0030 4FF00002 		mov	r2, #0
 6372 0034 424B     		ldr	r3, .L336+8
 6373 0036 FFF7FEFF 		bl	__aeabi_dmul
 6374 003a 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 156


 6375 003c 0C46     		mov	r4, r1
 6376 003e 1846     		mov	r0, r3
 6377 0040 2146     		mov	r1, r4
 6378 0042 FFF7FEFF 		bl	__aeabi_d2iz
 6379 0046 0346     		mov	r3, r0
 6380 0048 1AB2     		sxth	r2, r3
 6381 004a 3B4B     		ldr	r3, .L336
 6382 004c 1A80     		strh	r2, [r3]	@ movhi
1467:..\src/command_processing.c ****     if (PWM_IMU_1 > MAX_VT_PWM) PWM_IMU_1 = MAX_VT_PWM;
 6383              		.loc 1 1467 0
 6384 004e 3A4B     		ldr	r3, .L336
 6385 0050 B3F90030 		ldrsh	r3, [r3]
 6386 0054 642B     		cmp	r3, #100
 6387 0056 02DD     		ble	.L329
 6388              		.loc 1 1467 0 is_stmt 0 discriminator 1
 6389 0058 374B     		ldr	r3, .L336
 6390 005a 6422     		movs	r2, #100
 6391 005c 1A80     		strh	r2, [r3]	@ movhi
 6392              	.L329:
1468:..\src/command_processing.c ****     if (PWM_IMU_1 < MIN_VT_PWM) PWM_IMU_1 = 0;
 6393              		.loc 1 1468 0 is_stmt 1
 6394 005e 364B     		ldr	r3, .L336
 6395 0060 B3F90030 		ldrsh	r3, [r3]
 6396 0064 092B     		cmp	r3, #9
 6397 0066 02DC     		bgt	.L330
 6398              		.loc 1 1468 0 is_stmt 0 discriminator 1
 6399 0068 334B     		ldr	r3, .L336
 6400 006a 0022     		movs	r2, #0
 6401 006c 1A80     		strh	r2, [r3]	@ movhi
 6402              	.L330:
1469:..\src/command_processing.c ****     
1470:..\src/command_processing.c ****     PWM_IMU_2 = (int16) (((float)PWM_IMU_2/50.0) * SCALA);
 6403              		.loc 1 1470 0 is_stmt 1
 6404 006e 354B     		ldr	r3, .L336+12
 6405 0070 B3F90030 		ldrsh	r3, [r3]
 6406 0074 1846     		mov	r0, r3
 6407 0076 FFF7FEFF 		bl	__aeabi_i2f
 6408 007a 0346     		mov	r3, r0
 6409 007c 1846     		mov	r0, r3
 6410 007e FFF7FEFF 		bl	__aeabi_f2d
 6411 0082 4FF00002 		mov	r2, #0
 6412 0086 2D4B     		ldr	r3, .L336+4
 6413 0088 FFF7FEFF 		bl	__aeabi_ddiv
 6414 008c 0346     		mov	r3, r0
 6415 008e 0C46     		mov	r4, r1
 6416 0090 1846     		mov	r0, r3
 6417 0092 2146     		mov	r1, r4
 6418 0094 4FF00002 		mov	r2, #0
 6419 0098 294B     		ldr	r3, .L336+8
 6420 009a FFF7FEFF 		bl	__aeabi_dmul
 6421 009e 0346     		mov	r3, r0
 6422 00a0 0C46     		mov	r4, r1
 6423 00a2 1846     		mov	r0, r3
 6424 00a4 2146     		mov	r1, r4
 6425 00a6 FFF7FEFF 		bl	__aeabi_d2iz
 6426 00aa 0346     		mov	r3, r0
 6427 00ac 1AB2     		sxth	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 157


 6428 00ae 254B     		ldr	r3, .L336+12
 6429 00b0 1A80     		strh	r2, [r3]	@ movhi
1471:..\src/command_processing.c ****     if (PWM_IMU_2 > MAX_VT_PWM) PWM_IMU_2 = MAX_VT_PWM;
 6430              		.loc 1 1471 0
 6431 00b2 244B     		ldr	r3, .L336+12
 6432 00b4 B3F90030 		ldrsh	r3, [r3]
 6433 00b8 642B     		cmp	r3, #100
 6434 00ba 02DD     		ble	.L331
 6435              		.loc 1 1471 0 is_stmt 0 discriminator 1
 6436 00bc 214B     		ldr	r3, .L336+12
 6437 00be 6422     		movs	r2, #100
 6438 00c0 1A80     		strh	r2, [r3]	@ movhi
 6439              	.L331:
1472:..\src/command_processing.c ****     if (PWM_IMU_2 < MIN_VT_PWM) PWM_IMU_2 = 0;
 6440              		.loc 1 1472 0 is_stmt 1
 6441 00c2 204B     		ldr	r3, .L336+12
 6442 00c4 B3F90030 		ldrsh	r3, [r3]
 6443 00c8 092B     		cmp	r3, #9
 6444 00ca 02DC     		bgt	.L332
 6445              		.loc 1 1472 0 is_stmt 0 discriminator 1
 6446 00cc 1D4B     		ldr	r3, .L336+12
 6447 00ce 0022     		movs	r2, #0
 6448 00d0 1A80     		strh	r2, [r3]	@ movhi
 6449              	.L332:
1473:..\src/command_processing.c ****     
1474:..\src/command_processing.c ****     VT_ref[0] = PWM_IMU_1;
 6450              		.loc 1 1474 0 is_stmt 1
 6451 00d2 194B     		ldr	r3, .L336
 6452 00d4 B3F90030 		ldrsh	r3, [r3]
 6453 00d8 DAB2     		uxtb	r2, r3
 6454 00da 1B4B     		ldr	r3, .L336+16
 6455 00dc 1A70     		strb	r2, [r3]
1475:..\src/command_processing.c ****     VT_ref[1] = PWM_IMU_2;
 6456              		.loc 1 1475 0
 6457 00de 194B     		ldr	r3, .L336+12
 6458 00e0 B3F90030 		ldrsh	r3, [r3]
 6459 00e4 DAB2     		uxtb	r2, r3
 6460 00e6 184B     		ldr	r3, .L336+16
 6461 00e8 5A70     		strb	r2, [r3, #1]
1476:..\src/command_processing.c ****     
1477:..\src/command_processing.c ****     VT_ref[0] = PWM_IMU_1;
 6462              		.loc 1 1477 0
 6463 00ea 134B     		ldr	r3, .L336
 6464 00ec B3F90030 		ldrsh	r3, [r3]
 6465 00f0 DAB2     		uxtb	r2, r3
 6466 00f2 154B     		ldr	r3, .L336+16
 6467 00f4 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****     VT_ref[1] = PWM_IMU_2;
 6468              		.loc 1 1478 0
 6469 00f6 134B     		ldr	r3, .L336+12
 6470 00f8 B3F90030 		ldrsh	r3, [r3]
 6471 00fc DAB2     		uxtb	r2, r3
 6472 00fe 124B     		ldr	r3, .L336+16
 6473 0100 5A70     		strb	r2, [r3, #1]
1479:..\src/command_processing.c **** 
1480:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_VT_ACTUATORS; i++){       
 6474              		.loc 1 1480 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 158


 6475 0102 0023     		movs	r3, #0
 6476 0104 FB71     		strb	r3, [r7, #7]
 6477 0106 0FE0     		b	.L333
 6478              	.L335:
1481:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6479              		.loc 1 1481 0
 6480 0108 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6481 010a 1846     		mov	r0, r3
 6482 010c FFF7FEFF 		bl	vibrotactile_control_generic
1482:..\src/command_processing.c ****         
1483:..\src/command_processing.c ****         if (interrupt_flag){
 6483              		.loc 1 1483 0
 6484 0110 0E4B     		ldr	r3, .L336+20
 6485 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6486 0114 002B     		cmp	r3, #0
 6487 0116 04D0     		beq	.L334
1484:..\src/command_processing.c ****             interrupt_flag = FALSE;
 6488              		.loc 1 1484 0
 6489 0118 0C4B     		ldr	r3, .L336+20
 6490 011a 0022     		movs	r2, #0
 6491 011c 1A70     		strb	r2, [r3]
1485:..\src/command_processing.c ****             interrupt_manager();
 6492              		.loc 1 1485 0
 6493 011e FFF7FEFF 		bl	interrupt_manager
 6494              	.L334:
1480:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6495              		.loc 1 1480 0 discriminator 2
 6496 0122 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6497 0124 0133     		adds	r3, r3, #1
 6498 0126 FB71     		strb	r3, [r7, #7]
 6499              	.L333:
1480:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 6500              		.loc 1 1480 0 is_stmt 0 discriminator 1
 6501 0128 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6502 012a 012B     		cmp	r3, #1
 6503 012c ECD9     		bls	.L335
1486:..\src/command_processing.c ****         }
1487:..\src/command_processing.c ****     } 
1488:..\src/command_processing.c **** }
 6504              		.loc 1 1488 0 is_stmt 1
 6505 012e 00BF     		nop
 6506 0130 0C37     		adds	r7, r7, #12
 6507              		.cfi_def_cfa_offset 12
 6508 0132 BD46     		mov	sp, r7
 6509              		.cfi_def_cfa_register 13
 6510              		@ sp needed
 6511 0134 90BD     		pop	{r4, r7, pc}
 6512              	.L337:
 6513 0136 00BF     		.align	2
 6514              	.L336:
 6515 0138 00000000 		.word	PWM_IMU_1
 6516 013c 00004940 		.word	1078525952
 6517 0140 00003E40 		.word	1077805056
 6518 0144 00000000 		.word	PWM_IMU_2
 6519 0148 00000000 		.word	VT_ref
 6520 014c 00000000 		.word	interrupt_flag
 6521              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 159


 6522              	.LFE120:
 6523              		.size	vibrotactile_control, .-vibrotactile_control
 6524              		.global	__aeabi_i2d
 6525              		.global	__aeabi_dsub
 6526              		.global	__aeabi_dadd
 6527              		.global	__aeabi_fcmpgt
 6528              		.global	__aeabi_f2iz
 6529              		.global	__aeabi_fmul
 6530              		.section	.text.air_chambers_control,"ax",%progbits
 6531              		.align	2
 6532              		.global	air_chambers_control
 6533              		.thumb
 6534              		.thumb_func
 6535              		.type	air_chambers_control, %function
 6536              	air_chambers_control:
 6537              	.LFB121:
1489:..\src/command_processing.c **** 
1490:..\src/command_processing.c **** 
1491:..\src/command_processing.c **** //==============================================================================
1492:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
1493:..\src/command_processing.c **** //==============================================================================
1494:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
1495:..\src/command_processing.c **** 
1496:..\src/command_processing.c **** 
1497:..\src/command_processing.c **** void air_chambers_control() {
 6538              		.loc 1 1497 0
 6539              		.cfi_startproc
 6540              		@ args = 0, pretend = 0, frame = 16
 6541              		@ frame_needed = 1, uses_anonymous_args = 0
 6542 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 6543              		.cfi_def_cfa_offset 24
 6544              		.cfi_offset 4, -24
 6545              		.cfi_offset 5, -20
 6546              		.cfi_offset 7, -16
 6547              		.cfi_offset 8, -12
 6548              		.cfi_offset 9, -8
 6549              		.cfi_offset 14, -4
 6550 0004 84B0     		sub	sp, sp, #16
 6551              		.cfi_def_cfa_offset 40
 6552 0006 00AF     		add	r7, sp, #0
 6553              		.cfi_def_cfa_register 7
1498:..\src/command_processing.c **** 
1499:..\src/command_processing.c ****     int16 curr_diff;
1500:..\src/command_processing.c ****     int32 pressure_reference;
1501:..\src/command_processing.c ****     int32 err_pressure;
1502:..\src/command_processing.c ****     int32 valve_command;
1503:..\src/command_processing.c ****     int16 x_value;
1504:..\src/command_processing.c **** 
1505:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
1506:..\src/command_processing.c ****     curr_diff = commReadResCurrFromSH();
 6554              		.loc 1 1506 0
 6555 0008 FFF7FEFF 		bl	commReadResCurrFromSH
 6556 000c 0346     		mov	r3, r0
 6557 000e 3B81     		strh	r3, [r7, #8]	@ movhi
1507:..\src/command_processing.c **** 
1508:..\src/command_processing.c ****     // Compute pressure reference
1509:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 160


 6558              		.loc 1 1509 0
 6559 0010 B7F90830 		ldrsh	r3, [r7, #8]
 6560 0014 1846     		mov	r0, r3
 6561 0016 FFF7FEFF 		bl	__aeabi_i2d
 6562 001a 4FF00002 		mov	r2, #0
 6563 001e 574B     		ldr	r3, .L349
 6564 0020 FFF7FEFF 		bl	__aeabi_dsub
 6565 0024 0346     		mov	r3, r0
 6566 0026 0C46     		mov	r4, r1
 6567 0028 1846     		mov	r0, r3
 6568 002a 2146     		mov	r1, r4
 6569 002c FFF7FEFF 		bl	__aeabi_d2iz
 6570 0030 0346     		mov	r3, r0
 6571 0032 7B81     		strh	r3, [r7, #10]	@ movhi
1510:..\src/command_processing.c ****     if (x_value < 0)
 6572              		.loc 1 1510 0
 6573 0034 B7F90A30 		ldrsh	r3, [r7, #10]
 6574 0038 002B     		cmp	r3, #0
 6575 003a 01DA     		bge	.L339
1511:..\src/command_processing.c ****         x_value = 0;
 6576              		.loc 1 1511 0
 6577 003c 0023     		movs	r3, #0
 6578 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 6579              	.L339:
1512:..\src/command_processing.c ****     
1513:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
 6580              		.loc 1 1513 0
 6581 0040 B7F90A30 		ldrsh	r3, [r7, #10]
 6582 0044 1846     		mov	r0, r3
 6583 0046 FFF7FEFF 		bl	__aeabi_i2d
 6584 004a 4FF00002 		mov	r2, #0
 6585 004e 4C4B     		ldr	r3, .L349+4
 6586 0050 FFF7FEFF 		bl	__aeabi_dmul
 6587 0054 0346     		mov	r3, r0
 6588 0056 0C46     		mov	r4, r1
 6589 0058 2546     		mov	r5, r4
 6590 005a 1C46     		mov	r4, r3
 6591 005c B7F90A30 		ldrsh	r3, [r7, #10]
 6592 0060 1846     		mov	r0, r3
 6593 0062 FFF7FEFF 		bl	__aeabi_i2d
 6594 0066 0246     		mov	r2, r0
 6595 0068 0B46     		mov	r3, r1
 6596 006a 2046     		mov	r0, r4
 6597 006c 2946     		mov	r1, r5
 6598 006e FFF7FEFF 		bl	__aeabi_dmul
 6599 0072 0346     		mov	r3, r0
 6600 0074 0C46     		mov	r4, r1
 6601 0076 2546     		mov	r5, r4
 6602 0078 1C46     		mov	r4, r3
 6603 007a 424B     		ldr	r3, .L349+8
 6604 007c 1B6D     		ldr	r3, [r3, #80]
 6605 007e 1846     		mov	r0, r3
 6606 0080 FFF7FEFF 		bl	__aeabi_i2d
 6607 0084 4FF00002 		mov	r2, #0
 6608 0088 3F4B     		ldr	r3, .L349+12
 6609 008a FFF7FEFF 		bl	__aeabi_dmul
 6610 008e 0246     		mov	r2, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 161


 6611 0090 0B46     		mov	r3, r1
 6612 0092 9046     		mov	r8, r2
 6613 0094 9946     		mov	r9, r3
 6614 0096 B7F90A30 		ldrsh	r3, [r7, #10]
 6615 009a 1846     		mov	r0, r3
 6616 009c FFF7FEFF 		bl	__aeabi_i2d
 6617 00a0 0246     		mov	r2, r0
 6618 00a2 0B46     		mov	r3, r1
 6619 00a4 4046     		mov	r0, r8
 6620 00a6 4946     		mov	r1, r9
 6621 00a8 FFF7FEFF 		bl	__aeabi_dmul
 6622 00ac 0246     		mov	r2, r0
 6623 00ae 0B46     		mov	r3, r1
 6624 00b0 2046     		mov	r0, r4
 6625 00b2 2946     		mov	r1, r5
 6626 00b4 FFF7FEFF 		bl	__aeabi_dadd
 6627 00b8 0346     		mov	r3, r0
 6628 00ba 0C46     		mov	r4, r1
 6629 00bc 1846     		mov	r0, r3
 6630 00be 2146     		mov	r1, r4
 6631 00c0 FFF7FEFF 		bl	__aeabi_d2iz
 6632 00c4 0146     		mov	r1, r0
 6633 00c6 2F4B     		ldr	r3, .L349+8
 6634 00c8 1B6D     		ldr	r3, [r3, #80]
 6635 00ca 2E4A     		ldr	r2, .L349+8
 6636 00cc 126D     		ldr	r2, [r2, #80]
 6637 00ce 02FB03F3 		mul	r3, r2, r3
 6638 00d2 91FBF3F3 		sdiv	r3, r1, r3
 6639 00d6 FB60     		str	r3, [r7, #12]
1514:..\src/command_processing.c ****     if (pressure_reference < 0)
 6640              		.loc 1 1514 0
 6641 00d8 FB68     		ldr	r3, [r7, #12]
 6642 00da 002B     		cmp	r3, #0
 6643 00dc 01DA     		bge	.L340
1515:..\src/command_processing.c ****         pressure_reference = 0;
 6644              		.loc 1 1515 0
 6645 00de 0023     		movs	r3, #0
 6646 00e0 FB60     		str	r3, [r7, #12]
 6647              	.L340:
1516:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
 6648              		.loc 1 1516 0
 6649 00e2 F868     		ldr	r0, [r7, #12]
 6650 00e4 FFF7FEFF 		bl	__aeabi_i2f
 6651 00e8 0246     		mov	r2, r0
 6652 00ea 264B     		ldr	r3, .L349+8
 6653 00ec 5B6D     		ldr	r3, [r3, #84]	@ float
 6654 00ee 1946     		mov	r1, r3
 6655 00f0 1046     		mov	r0, r2
 6656 00f2 FFF7FEFF 		bl	__aeabi_fcmpgt
 6657 00f6 0346     		mov	r3, r0
 6658 00f8 002B     		cmp	r3, #0
 6659 00fa 06D0     		beq	.L341
1517:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
 6660              		.loc 1 1517 0
 6661 00fc 214B     		ldr	r3, .L349+8
 6662 00fe 5B6D     		ldr	r3, [r3, #84]	@ float
 6663 0100 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 162


 6664 0102 FFF7FEFF 		bl	__aeabi_f2iz
 6665 0106 0346     		mov	r3, r0
 6666 0108 FB60     		str	r3, [r7, #12]
 6667              	.L341:
1518:..\src/command_processing.c ****     
1519:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
 6668              		.loc 1 1519 0
 6669 010a 204B     		ldr	r3, .L349+16
 6670 010c 1B68     		ldr	r3, [r3]
 6671 010e FA68     		ldr	r2, [r7, #12]
 6672 0110 D31A     		subs	r3, r2, r3
 6673 0112 7B60     		str	r3, [r7, #4]
1520:..\src/command_processing.c **** 
1521:..\src/command_processing.c ****     if (x_value <= 0){
 6674              		.loc 1 1521 0
 6675 0114 B7F90A30 		ldrsh	r3, [r7, #10]
 6676 0118 002B     		cmp	r3, #0
 6677 011a 06DC     		bgt	.L343
1522:..\src/command_processing.c ****         //i.e the hand is opening
1523:..\src/command_processing.c ****         VALVE_Write(OPEN);
 6678              		.loc 1 1523 0
 6679 011c 0020     		movs	r0, #0
 6680 011e FFF7FEFF 		bl	VALVE_Write
1524:..\src/command_processing.c ****         Pump_refNew = 0;
 6681              		.loc 1 1524 0
 6682 0122 1B4B     		ldr	r3, .L349+20
 6683 0124 0022     		movs	r2, #0
 6684 0126 1A70     		strb	r2, [r3]
 6685 0128 14E0     		b	.L344
 6686              	.L343:
1525:..\src/command_processing.c ****     }
1526:..\src/command_processing.c ****     else {
1527:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
1528:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
1529:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
1530:..\src/command_processing.c ****          VALVE_Write(CLOSED);  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
 6687              		.loc 1 1530 0
 6688 012a 0120     		movs	r0, #1
 6689 012c FFF7FEFF 		bl	VALVE_Write
1531:..\src/command_processing.c ****     
1532:..\src/command_processing.c ****     
1533:..\src/command_processing.c ****     // Pump control*/
1534:..\src/command_processing.c ****    
1535:..\src/command_processing.c ****     Pump_refNew = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
 6690              		.loc 1 1535 0
 6691 0130 144B     		ldr	r3, .L349+8
 6692 0132 9C6D     		ldr	r4, [r3, #88]	@ float
 6693 0134 7868     		ldr	r0, [r7, #4]
 6694 0136 FFF7FEFF 		bl	__aeabi_i2f
 6695 013a 0346     		mov	r3, r0
 6696 013c 1946     		mov	r1, r3
 6697 013e 2046     		mov	r0, r4
 6698 0140 FFF7FEFF 		bl	__aeabi_fmul
 6699 0144 0346     		mov	r3, r0
 6700 0146 1846     		mov	r0, r3
 6701 0148 FFF7FEFF 		bl	__aeabi_f2iz
 6702 014c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 163


 6703 014e DAB2     		uxtb	r2, r3
 6704 0150 0F4B     		ldr	r3, .L349+20
 6705 0152 1A70     		strb	r2, [r3]
 6706              	.L344:
1536:..\src/command_processing.c **** }
1537:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
1538:..\src/command_processing.c ****     
1539:..\src/command_processing.c ****     // Limit output voltage
1540:..\src/command_processing.c ****     if (Pump_refNew > MAX_PUMP_PWM) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
 6707              		.loc 1 1540 0
 6708 0154 0E4B     		ldr	r3, .L349+20
 6709 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6710 0158 502B     		cmp	r3, #80
 6711 015a 02D9     		bls	.L345
1541:..\src/command_processing.c ****         Pump_refNew = MAX_PUMP_PWM; // 80
 6712              		.loc 1 1541 0
 6713 015c 0C4B     		ldr	r3, .L349+20
 6714 015e 5022     		movs	r2, #80
 6715 0160 1A70     		strb	r2, [r3]
 6716              	.L345:
1542:..\src/command_processing.c ****     if (Pump_refNew < MIN_PUMP_PWM)
 6717              		.loc 1 1542 0
 6718 0162 0B4B     		ldr	r3, .L349+20
 6719 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6720 0166 132B     		cmp	r3, #19
 6721 0168 02D8     		bhi	.L348
1543:..\src/command_processing.c ****         Pump_refNew = 0;
 6722              		.loc 1 1543 0
 6723 016a 094B     		ldr	r3, .L349+20
 6724 016c 0022     		movs	r2, #0
 6725 016e 1A70     		strb	r2, [r3]
 6726              	.L348:
1544:..\src/command_processing.c ****          
1545:..\src/command_processing.c ****     
1546:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
1547:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
1548:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
1549:..\src/command_processing.c ****     // motor_control_generic(slave_motor_idx);
1550:..\src/command_processing.c **** 
1551:..\src/command_processing.c **** }
 6727              		.loc 1 1551 0
 6728 0170 00BF     		nop
 6729 0172 1037     		adds	r7, r7, #16
 6730              		.cfi_def_cfa_offset 24
 6731 0174 BD46     		mov	sp, r7
 6732              		.cfi_def_cfa_register 13
 6733              		@ sp needed
 6734 0176 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 6735              	.L350:
 6736 017a 00BF     		.align	2
 6737              	.L349:
 6738 017c 00004940 		.word	1078525952
 6739 0180 00003EC0 		.word	-1069678592
 6740 0184 00000000 		.word	c_mem
 6741 0188 00804B40 		.word	1078689792
 6742 018c 00000000 		.word	pressure_value
 6743 0190 00000000 		.word	Pump_refNew
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 164


 6744              		.cfi_endproc
 6745              	.LFE121:
 6746              		.size	air_chambers_control, .-air_chambers_control
 6747              		.section	.text.pump_control,"ax",%progbits
 6748              		.align	2
 6749              		.global	pump_control
 6750              		.thumb
 6751              		.thumb_func
 6752              		.type	pump_control, %function
 6753              	pump_control:
 6754              	.LFB122:
1552:..\src/command_processing.c **** 
1553:..\src/command_processing.c **** void pump_control() {
 6755              		.loc 1 1553 0
 6756              		.cfi_startproc
 6757              		@ args = 0, pretend = 0, frame = 0
 6758              		@ frame_needed = 1, uses_anonymous_args = 0
 6759 0000 80B5     		push	{r7, lr}
 6760              		.cfi_def_cfa_offset 8
 6761              		.cfi_offset 7, -8
 6762              		.cfi_offset 14, -4
 6763 0002 00AF     		add	r7, sp, #0
 6764              		.cfi_def_cfa_register 7
1554:..\src/command_processing.c ****     if (Pump_ref > 100)
 6765              		.loc 1 1554 0
 6766 0004 064B     		ldr	r3, .L353
 6767 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6768 0008 642B     		cmp	r3, #100
 6769 000a 02D9     		bls	.L352
1555:..\src/command_processing.c ****         Pump_ref = 100;
 6770              		.loc 1 1555 0
 6771 000c 044B     		ldr	r3, .L353
 6772 000e 6422     		movs	r2, #100
 6773 0010 1A70     		strb	r2, [r3]
 6774              	.L352:
1556:..\src/command_processing.c ****     PWM_PUMP_WriteCompare(Pump_ref);
 6775              		.loc 1 1556 0
 6776 0012 034B     		ldr	r3, .L353
 6777 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6778 0016 1846     		mov	r0, r3
 6779 0018 FFF7FEFF 		bl	PWM_PUMP_WriteCompare
1557:..\src/command_processing.c **** }
 6780              		.loc 1 1557 0
 6781 001c 00BF     		nop
 6782 001e 80BD     		pop	{r7, pc}
 6783              	.L354:
 6784              		.align	2
 6785              	.L353:
 6786 0020 00000000 		.word	Pump_ref
 6787              		.cfi_endproc
 6788              	.LFE122:
 6789              		.size	pump_control, .-pump_control
 6790              		.section	.text.VT_control,"ax",%progbits
 6791              		.align	2
 6792              		.global	VT_control
 6793              		.thumb
 6794              		.thumb_func
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 165


 6795              		.type	VT_control, %function
 6796              	VT_control:
 6797              	.LFB123:
1558:..\src/command_processing.c **** 
1559:..\src/command_processing.c **** void VT_control() {
 6798              		.loc 1 1559 0
 6799              		.cfi_startproc
 6800              		@ args = 0, pretend = 0, frame = 0
 6801              		@ frame_needed = 1, uses_anonymous_args = 0
 6802 0000 80B5     		push	{r7, lr}
 6803              		.cfi_def_cfa_offset 8
 6804              		.cfi_offset 7, -8
 6805              		.cfi_offset 14, -4
 6806 0002 00AF     		add	r7, sp, #0
 6807              		.cfi_def_cfa_register 7
1560:..\src/command_processing.c ****     if (VT_ref[0] > 100)
 6808              		.loc 1 1560 0
 6809 0004 0D4B     		ldr	r3, .L358
 6810 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6811 0008 642B     		cmp	r3, #100
 6812 000a 02D9     		bls	.L356
1561:..\src/command_processing.c ****         VT_ref[0] = 100;
 6813              		.loc 1 1561 0
 6814 000c 0B4B     		ldr	r3, .L358
 6815 000e 6422     		movs	r2, #100
 6816 0010 1A70     		strb	r2, [r3]
 6817              	.L356:
1562:..\src/command_processing.c ****     PWM_VT_WriteCompare1(VT_ref[0]);
 6818              		.loc 1 1562 0
 6819 0012 0A4B     		ldr	r3, .L358
 6820 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6821 0016 9BB2     		uxth	r3, r3
 6822 0018 1846     		mov	r0, r3
 6823 001a FFF7FEFF 		bl	PWM_VT_WriteCompare1
1563:..\src/command_processing.c ****     if (VT_ref[1] > 100)
 6824              		.loc 1 1563 0
 6825 001e 074B     		ldr	r3, .L358
 6826 0020 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6827 0022 642B     		cmp	r3, #100
 6828 0024 02D9     		bls	.L357
1564:..\src/command_processing.c ****         VT_ref[1] = 100;
 6829              		.loc 1 1564 0
 6830 0026 054B     		ldr	r3, .L358
 6831 0028 6422     		movs	r2, #100
 6832 002a 5A70     		strb	r2, [r3, #1]
 6833              	.L357:
1565:..\src/command_processing.c ****     PWM_VT_WriteCompare2(VT_ref[1]);
 6834              		.loc 1 1565 0
 6835 002c 034B     		ldr	r3, .L358
 6836 002e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6837 0030 9BB2     		uxth	r3, r3
 6838 0032 1846     		mov	r0, r3
 6839 0034 FFF7FEFF 		bl	PWM_VT_WriteCompare2
1566:..\src/command_processing.c **** }
 6840              		.loc 1 1566 0
 6841 0038 00BF     		nop
 6842 003a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 166


 6843              	.L359:
 6844              		.align	2
 6845              	.L358:
 6846 003c 00000000 		.word	VT_ref
 6847              		.cfi_endproc
 6848              	.LFE123:
 6849              		.size	VT_control, .-VT_control
 6850              		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 6851              		.align	2
 6852              		.global	emg_activation_velocity_fsm
 6853              		.thumb
 6854              		.thumb_func
 6855              		.type	emg_activation_velocity_fsm, %function
 6856              	emg_activation_velocity_fsm:
 6857              	.LFB124:
1567:..\src/command_processing.c **** //==============================================================================
1568:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
1569:..\src/command_processing.c **** //==============================================================================
1570:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
1571:..\src/command_processing.c **** 
1572:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 6858              		.loc 1 1572 0
 6859              		.cfi_startproc
 6860              		@ args = 0, pretend = 0, frame = 0
 6861              		@ frame_needed = 1, uses_anonymous_args = 0
 6862              		@ link register save eliminated.
 6863 0000 80B4     		push	{r7}
 6864              		.cfi_def_cfa_offset 4
 6865              		.cfi_offset 7, -4
 6866 0002 00AF     		add	r7, sp, #0
 6867              		.cfi_def_cfa_register 7
1573:..\src/command_processing.c ****     
1574:..\src/command_processing.c **** return 0;
 6868              		.loc 1 1574 0
 6869 0004 0023     		movs	r3, #0
1575:..\src/command_processing.c **** }
 6870              		.loc 1 1575 0
 6871 0006 1846     		mov	r0, r3
 6872 0008 BD46     		mov	sp, r7
 6873              		.cfi_def_cfa_register 13
 6874              		@ sp needed
 6875 000a 80BC     		pop	{r7}
 6876              		.cfi_restore 7
 6877              		.cfi_def_cfa_offset 0
 6878 000c 7047     		bx	lr
 6879              		.cfi_endproc
 6880              	.LFE124:
 6881              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 6882 000e 00BF     		.section	.text.otbk_act_wrist_control,"ax",%progbits
 6883              		.align	2
 6884              		.global	otbk_act_wrist_control
 6885              		.thumb
 6886              		.thumb_func
 6887              		.type	otbk_act_wrist_control, %function
 6888              	otbk_act_wrist_control:
 6889              	.LFB125:
1576:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 167


1577:..\src/command_processing.c **** //==============================================================================
1578:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
1579:..\src/command_processing.c **** //==============================================================================
1580:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
1581:..\src/command_processing.c **** 
1582:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 6890              		.loc 1 1582 0
 6891              		.cfi_startproc
 6892              		@ args = 0, pretend = 0, frame = 8
 6893              		@ frame_needed = 1, uses_anonymous_args = 0
 6894              		@ link register save eliminated.
 6895 0000 80B4     		push	{r7}
 6896              		.cfi_def_cfa_offset 4
 6897              		.cfi_offset 7, -4
 6898 0002 83B0     		sub	sp, sp, #12
 6899              		.cfi_def_cfa_offset 16
 6900 0004 00AF     		add	r7, sp, #0
 6901              		.cfi_def_cfa_register 7
 6902 0006 7860     		str	r0, [r7, #4]
1583:..\src/command_processing.c ****     
1584:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
1585:..\src/command_processing.c ****     
1586:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
1587:..\src/command_processing.c ****         
1588:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
1589:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
1590:..\src/command_processing.c ****     switch (fsm_state){
1591:..\src/command_processing.c ****         case RELAX_STATE:
1592:..\src/command_processing.c ****             
1593:..\src/command_processing.c ****             // Wrist stop
1594:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
1595:..\src/command_processing.c ****             
1596:..\src/command_processing.c ****             // Softhand stop
1597:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
1598:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
1599:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
1600:..\src/command_processing.c ****             
1601:..\src/command_processing.c ****             break;
1602:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
1603:..\src/command_processing.c ****                 
1604:..\src/command_processing.c ****             break;
1605:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
1606:..\src/command_processing.c ****             
1607:..\src/command_processing.c ****             // Wrist movement
1608:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
1609:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
1610:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
1611:..\src/command_processing.c ****                 }
1612:..\src/command_processing.c ****                 else {
1613:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
1614:..\src/command_processing.c ****                 }
1615:..\src/command_processing.c ****             }
1616:..\src/command_processing.c ****             else {
1617:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
1618:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
1619:..\src/command_processing.c ****                 }
1620:..\src/command_processing.c ****                 else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 168


1621:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
1622:..\src/command_processing.c ****                 }
1623:..\src/command_processing.c ****             }
1624:..\src/command_processing.c ****             
1625:..\src/command_processing.c ****             // Softhand stop
1626:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
1627:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
1628:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
1629:..\src/command_processing.c ****             
1630:..\src/command_processing.c ****             break;
1631:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
1632:..\src/command_processing.c ****             
1633:..\src/command_processing.c ****             // Wrist stop
1634:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****             // SoftHand movement
1637:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
1638:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
1639:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
1640:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
1641:..\src/command_processing.c ****             
1642:..\src/command_processing.c ****             break;
1643:..\src/command_processing.c ****     }
1644:..\src/command_processing.c ****         
1645:..\src/command_processing.c ****     // Limit output voltage
1646:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
1647:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
1648:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
1649:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
1650:..\src/command_processing.c ****     
1651:..\src/command_processing.c **** #endif
1652:..\src/command_processing.c **** }
 6903              		.loc 1 1652 0
 6904 0008 00BF     		nop
 6905 000a 0C37     		adds	r7, r7, #12
 6906              		.cfi_def_cfa_offset 4
 6907 000c BD46     		mov	sp, r7
 6908              		.cfi_def_cfa_register 13
 6909              		@ sp needed
 6910 000e 80BC     		pop	{r7}
 6911              		.cfi_restore 7
 6912              		.cfi_def_cfa_offset 0
 6913 0010 7047     		bx	lr
 6914              		.cfi_endproc
 6915              	.LFE125:
 6916              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 6917 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 6918              		.align	2
 6919              		.global	drive_slave
 6920              		.thumb
 6921              		.thumb_func
 6922              		.type	drive_slave, %function
 6923              	drive_slave:
 6924              	.LFB126:
1653:..\src/command_processing.c **** 
1654:..\src/command_processing.c **** //==============================================================================
1655:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 169


1656:..\src/command_processing.c **** //==============================================================================
1657:..\src/command_processing.c ****  
1658:..\src/command_processing.c **** //==============================================================================
1659:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
1660:..\src/command_processing.c **** //==============================================================================
1661:..\src/command_processing.c ****  
1662:..\src/command_processing.c ****  
1663:..\src/command_processing.c **** void drive_slave( uint8 slave_ID) {
 6925              		.loc 1 1663 0
 6926              		.cfi_startproc
 6927              		@ args = 0, pretend = 0, frame = 24
 6928              		@ frame_needed = 1, uses_anonymous_args = 0
 6929 0000 90B5     		push	{r4, r7, lr}
 6930              		.cfi_def_cfa_offset 12
 6931              		.cfi_offset 4, -12
 6932              		.cfi_offset 7, -8
 6933              		.cfi_offset 14, -4
 6934 0002 87B0     		sub	sp, sp, #28
 6935              		.cfi_def_cfa_offset 40
 6936 0004 00AF     		add	r7, sp, #0
 6937              		.cfi_def_cfa_register 7
 6938 0006 0346     		mov	r3, r0
 6939 0008 FB71     		strb	r3, [r7, #7]
1664:..\src/command_processing.c **** // This function use RS485 protocol to communicate with the second board. 
1665:..\src/command_processing.c **** // Baude Rate is set to 2000000. 
1666:..\src/command_processing.c **** // Here a request (: : ID pk_length CMD check) is sent  --> 6bytes * 8bit * 0.5us = 24us
1667:..\src/command_processing.c **** // and an answer (: : ID pk_length CMD data1[0] data1[1] check) received --> 8bytes * 8bit * 0.5us 
1668:..\src/command_processing.c **** // At least 56 us are requested for this communication 
1669:..\src/command_processing.c **** 
1670:..\src/command_processing.c ****     uint8 packet_data[6];
1671:..\src/command_processing.c ****     uint8 packet_length;
1672:..\src/command_processing.c ****     int16 aux_int16;
1673:..\src/command_processing.c **** 
1674:..\src/command_processing.c ****        
1675:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
1676:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 6940              		.loc 1 1676 0
 6941 000a 8223     		movs	r3, #130
 6942 000c 3B74     		strb	r3, [r7, #16]
1677:..\src/command_processing.c ****     
1678:..\src/command_processing.c ****  //aux_int16 = (int16) motor_idx;
1679:..\src/command_processing.c ****    aux_int16 = (int16) (SH_ref >> g_mem.SH_config.res);
 6943              		.loc 1 1679 0
 6944 000e 1B4B     		ldr	r3, .L364
 6945 0010 1B68     		ldr	r3, [r3]
 6946 0012 1B4A     		ldr	r2, .L364+4
 6947 0014 92F82920 		ldrb	r2, [r2, #41]	@ zero_extendqisi2
 6948 0018 1341     		asrs	r3, r3, r2
 6949 001a 1BB2     		sxth	r3, r3
 6950 001c FB81     		strh	r3, [r7, #14]	@ movhi
1680:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 6951              		.loc 1 1680 0
 6952 001e 07F10E03 		add	r3, r7, #14
 6953 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6954 0024 BB74     		strb	r3, [r7, #18]
1681:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 6955              		.loc 1 1681 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 170


 6956 0026 07F10E03 		add	r3, r7, #14
 6957 002a 0133     		adds	r3, r3, #1
 6958 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6959 002e 7B74     		strb	r3, [r7, #17]
1682:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 6960              		.loc 1 1682 0
 6961 0030 07F11003 		add	r3, r7, #16
 6962 0034 0333     		adds	r3, r3, #3
 6963 0036 0022     		movs	r2, #0
 6964 0038 1A80     		strh	r2, [r3]	@ movhi
1683:..\src/command_processing.c ****   //  packet_data[3] = (char*)0;
1684:..\src/command_processing.c ****    // packet_data[4] = (char*)0;
1685:..\src/command_processing.c ****     packet_length = 6;
 6965              		.loc 1 1685 0
 6966 003a 0623     		movs	r3, #6
 6967 003c FB75     		strb	r3, [r7, #23]
1686:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 6968              		.loc 1 1686 0
 6969 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6970 0040 5C1E     		subs	r4, r3, #1
 6971 0042 FB7D     		ldrb	r3, [r7, #23]
 6972 0044 013B     		subs	r3, r3, #1
 6973 0046 DAB2     		uxtb	r2, r3
 6974 0048 07F11003 		add	r3, r7, #16
 6975 004c 1146     		mov	r1, r2
 6976 004e 1846     		mov	r0, r3
 6977 0050 FFF7FEFF 		bl	LCRChecksum
 6978 0054 0346     		mov	r3, r0
 6979 0056 1A46     		mov	r2, r3
 6980 0058 07F11803 		add	r3, r7, #24
 6981 005c 2344     		add	r3, r3, r4
 6982 005e 03F8082C 		strb	r2, [r3, #-8]
1687:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, slave_ID);
 6983              		.loc 1 1687 0
 6984 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6985 0064 99B2     		uxth	r1, r3
 6986 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6987 0068 07F11003 		add	r3, r7, #16
 6988 006c 1846     		mov	r0, r3
 6989 006e FFF7FEFF 		bl	commWriteID
1688:..\src/command_processing.c **** 
1689:..\src/command_processing.c **** }
 6990              		.loc 1 1689 0
 6991 0072 00BF     		nop
 6992 0074 1C37     		adds	r7, r7, #28
 6993              		.cfi_def_cfa_offset 12
 6994 0076 BD46     		mov	sp, r7
 6995              		.cfi_def_cfa_register 13
 6996              		@ sp needed
 6997 0078 90BD     		pop	{r4, r7, pc}
 6998              	.L365:
 6999 007a 00BF     		.align	2
 7000              	.L364:
 7001 007c 00000000 		.word	SH_ref
 7002 0080 00000000 		.word	g_mem
 7003              		.cfi_endproc
 7004              	.LFE126:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 171


 7005              		.size	drive_slave, .-drive_slave
 7006              		.section	.text.stop_master_device,"ax",%progbits
 7007              		.align	2
 7008              		.global	stop_master_device
 7009              		.thumb
 7010              		.thumb_func
 7011              		.type	stop_master_device, %function
 7012              	stop_master_device:
 7013              	.LFB127:
1690:..\src/command_processing.c **** //==============================================================================
1691:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
1692:..\src/command_processing.c **** //==============================================================================
1693:..\src/command_processing.c ****  
1694:..\src/command_processing.c **** void stop_master_device() {
 7014              		.loc 1 1694 0
 7015              		.cfi_startproc
 7016              		@ args = 0, pretend = 0, frame = 0
 7017              		@ frame_needed = 1, uses_anonymous_args = 0
 7018 0000 80B5     		push	{r7, lr}
 7019              		.cfi_def_cfa_offset 8
 7020              		.cfi_offset 7, -8
 7021              		.cfi_offset 14, -4
 7022 0002 00AF     		add	r7, sp, #0
 7023              		.cfi_def_cfa_register 7
1695:..\src/command_processing.c ****     
1696:..\src/command_processing.c ****         // Stop pump and open valve
1697:..\src/command_processing.c ****         Pump_ref = 0;    
 7024              		.loc 1 1697 0
 7025 0004 074B     		ldr	r3, .L367
 7026 0006 0022     		movs	r2, #0
 7027 0008 1A70     		strb	r2, [r3]
1698:..\src/command_processing.c ****         VALVE_Write(OPEN);
 7028              		.loc 1 1698 0
 7029 000a 0020     		movs	r0, #0
 7030 000c FFF7FEFF 		bl	VALVE_Write
1699:..\src/command_processing.c ****         master_mode = 0; 
 7031              		.loc 1 1699 0
 7032 0010 054B     		ldr	r3, .L367+4
 7033 0012 0022     		movs	r2, #0
 7034 0014 1A70     		strb	r2, [r3]
1700:..\src/command_processing.c ****         g_mem.MS.master_mode_active = FALSE;
 7035              		.loc 1 1700 0
 7036 0016 054B     		ldr	r3, .L367+8
 7037 0018 0022     		movs	r2, #0
 7038 001a 83F84020 		strb	r2, [r3, #64]
1701:..\src/command_processing.c **** 
1702:..\src/command_processing.c **** }
 7039              		.loc 1 1702 0
 7040 001e 00BF     		nop
 7041 0020 80BD     		pop	{r7, pc}
 7042              	.L368:
 7043 0022 00BF     		.align	2
 7044              	.L367:
 7045 0024 00000000 		.word	Pump_ref
 7046 0028 00000000 		.word	master_mode
 7047 002c 00000000 		.word	g_mem
 7048              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 172


 7049              	.LFE127:
 7050              		.size	stop_master_device, .-stop_master_device
 7051              		.section	.text.deactivate_slaves,"ax",%progbits
 7052              		.align	2
 7053              		.global	deactivate_slaves
 7054              		.thumb
 7055              		.thumb_func
 7056              		.type	deactivate_slaves, %function
 7057              	deactivate_slaves:
 7058              	.LFB128:
1703:..\src/command_processing.c **** 
1704:..\src/command_processing.c **** //==============================================================================
1705:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
1706:..\src/command_processing.c **** //==============================================================================
1707:..\src/command_processing.c ****  
1708:..\src/command_processing.c **** void deactivate_slaves() {
 7059              		.loc 1 1708 0
 7060              		.cfi_startproc
 7061              		@ args = 0, pretend = 0, frame = 0
 7062              		@ frame_needed = 1, uses_anonymous_args = 0
 7063              		@ link register save eliminated.
 7064 0000 80B4     		push	{r7}
 7065              		.cfi_def_cfa_offset 4
 7066              		.cfi_offset 7, -4
 7067 0002 00AF     		add	r7, sp, #0
 7068              		.cfi_def_cfa_register 7
1709:..\src/command_processing.c ****    
1710:..\src/command_processing.c **** }
 7069              		.loc 1 1710 0
 7070 0004 00BF     		nop
 7071 0006 BD46     		mov	sp, r7
 7072              		.cfi_def_cfa_register 13
 7073              		@ sp needed
 7074 0008 80BC     		pop	{r7}
 7075              		.cfi_restore 7
 7076              		.cfi_def_cfa_offset 0
 7077 000a 7047     		bx	lr
 7078              		.cfi_endproc
 7079              	.LFE128:
 7080              		.size	deactivate_slaves, .-deactivate_slaves
 7081              		.bss
 7082              		.align	1
 7083              	i.10044:
 7084 0000 0000     		.space	2
 7085 0002 0000     		.align	2
 7086              	last_aux_int16.10114:
 7087 0004 00000000 		.space	6
 7087      0000
 7088              		.text
 7089              	.Letext0:
 7090              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 7091              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 7092              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 7093              		.file 6 "..\\src\\commands.h"
 7094              		.file 7 "..\\src\\globals.h"
 7095              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 7096              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 173


 7097              	.Ldebug_info0:
 7098 0000 21180000 		.4byte	0x1821
 7099 0004 0400     		.2byte	0x4
 7100 0006 00000000 		.4byte	.Ldebug_abbrev0
 7101 000a 04       		.byte	0x4
 7102 000b 01       		.uleb128 0x1
 7103 000c 40080000 		.4byte	.LASF305
 7104 0010 0C       		.byte	0xc
 7105 0011 E1100000 		.4byte	.LASF306
 7106 0015 A5000000 		.4byte	.LASF307
 7107 0019 00000000 		.4byte	.Ldebug_ranges0+0
 7108 001d 00000000 		.4byte	0
 7109 0021 00000000 		.4byte	.Ldebug_line0
 7110 0025 02       		.uleb128 0x2
 7111 0026 01       		.byte	0x1
 7112 0027 06       		.byte	0x6
 7113 0028 D5030000 		.4byte	.LASF0
 7114 002c 02       		.uleb128 0x2
 7115 002d 01       		.byte	0x1
 7116 002e 08       		.byte	0x8
 7117 002f 34040000 		.4byte	.LASF1
 7118 0033 02       		.uleb128 0x2
 7119 0034 02       		.byte	0x2
 7120 0035 05       		.byte	0x5
 7121 0036 B00E0000 		.4byte	.LASF2
 7122 003a 02       		.uleb128 0x2
 7123 003b 02       		.byte	0x2
 7124 003c 07       		.byte	0x7
 7125 003d 4A100000 		.4byte	.LASF3
 7126 0041 03       		.uleb128 0x3
 7127 0042 AD100000 		.4byte	.LASF5
 7128 0046 03       		.byte	0x3
 7129 0047 3F       		.byte	0x3f
 7130 0048 4C000000 		.4byte	0x4c
 7131 004c 02       		.uleb128 0x2
 7132 004d 04       		.byte	0x4
 7133 004e 05       		.byte	0x5
 7134 004f CA020000 		.4byte	.LASF4
 7135 0053 03       		.uleb128 0x3
 7136 0054 F3080000 		.4byte	.LASF6
 7137 0058 03       		.byte	0x3
 7138 0059 41       		.byte	0x41
 7139 005a 5E000000 		.4byte	0x5e
 7140 005e 02       		.uleb128 0x2
 7141 005f 04       		.byte	0x4
 7142 0060 07       		.byte	0x7
 7143 0061 FD060000 		.4byte	.LASF7
 7144 0065 02       		.uleb128 0x2
 7145 0066 08       		.byte	0x8
 7146 0067 05       		.byte	0x5
 7147 0068 FE080000 		.4byte	.LASF8
 7148 006c 02       		.uleb128 0x2
 7149 006d 08       		.byte	0x8
 7150 006e 07       		.byte	0x7
 7151 006f 1E0C0000 		.4byte	.LASF9
 7152 0073 04       		.uleb128 0x4
 7153 0074 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 174


 7154 0075 05       		.byte	0x5
 7155 0076 696E7400 		.ascii	"int\000"
 7156 007a 02       		.uleb128 0x2
 7157 007b 04       		.byte	0x4
 7158 007c 07       		.byte	0x7
 7159 007d 040A0000 		.4byte	.LASF10
 7160 0081 03       		.uleb128 0x3
 7161 0082 6C000000 		.4byte	.LASF11
 7162 0086 04       		.byte	0x4
 7163 0087 2C       		.byte	0x2c
 7164 0088 41000000 		.4byte	0x41
 7165 008c 03       		.uleb128 0x3
 7166 008d AF0F0000 		.4byte	.LASF12
 7167 0091 04       		.byte	0x4
 7168 0092 30       		.byte	0x30
 7169 0093 53000000 		.4byte	0x53
 7170 0097 05       		.uleb128 0x5
 7171 0098 9E0E0000 		.4byte	.LASF13
 7172 009c 05       		.byte	0x5
 7173 009d E401     		.2byte	0x1e4
 7174 009f 2C000000 		.4byte	0x2c
 7175 00a3 05       		.uleb128 0x5
 7176 00a4 35110000 		.4byte	.LASF14
 7177 00a8 05       		.byte	0x5
 7178 00a9 E501     		.2byte	0x1e5
 7179 00ab 3A000000 		.4byte	0x3a
 7180 00af 05       		.uleb128 0x5
 7181 00b0 8D000000 		.4byte	.LASF15
 7182 00b4 05       		.byte	0x5
 7183 00b5 E601     		.2byte	0x1e6
 7184 00b7 5E000000 		.4byte	0x5e
 7185 00bb 05       		.uleb128 0x5
 7186 00bc F0010000 		.4byte	.LASF16
 7187 00c0 05       		.byte	0x5
 7188 00c1 E701     		.2byte	0x1e7
 7189 00c3 25000000 		.4byte	0x25
 7190 00c7 05       		.uleb128 0x5
 7191 00c8 6B0F0000 		.4byte	.LASF17
 7192 00cc 05       		.byte	0x5
 7193 00cd E801     		.2byte	0x1e8
 7194 00cf 33000000 		.4byte	0x33
 7195 00d3 05       		.uleb128 0x5
 7196 00d4 93100000 		.4byte	.LASF18
 7197 00d8 05       		.byte	0x5
 7198 00d9 E901     		.2byte	0x1e9
 7199 00db 4C000000 		.4byte	0x4c
 7200 00df 02       		.uleb128 0x2
 7201 00e0 04       		.byte	0x4
 7202 00e1 04       		.byte	0x4
 7203 00e2 A4090000 		.4byte	.LASF19
 7204 00e6 02       		.uleb128 0x2
 7205 00e7 08       		.byte	0x8
 7206 00e8 04       		.byte	0x4
 7207 00e9 64090000 		.4byte	.LASF20
 7208 00ed 02       		.uleb128 0x2
 7209 00ee 01       		.byte	0x1
 7210 00ef 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 175


 7211 00f0 D1040000 		.4byte	.LASF21
 7212 00f4 05       		.uleb128 0x5
 7213 00f5 D60C0000 		.4byte	.LASF22
 7214 00f9 05       		.byte	0x5
 7215 00fa 8E02     		.2byte	0x28e
 7216 00fc 00010000 		.4byte	0x100
 7217 0100 06       		.uleb128 0x6
 7218 0101 97000000 		.4byte	0x97
 7219 0105 02       		.uleb128 0x2
 7220 0106 08       		.byte	0x8
 7221 0107 04       		.byte	0x4
 7222 0108 880B0000 		.4byte	.LASF23
 7223 010c 02       		.uleb128 0x2
 7224 010d 04       		.byte	0x4
 7225 010e 07       		.byte	0x7
 7226 010f 20000000 		.4byte	.LASF24
 7227 0113 07       		.uleb128 0x7
 7228 0114 04       		.byte	0x4
 7229 0115 ED000000 		.4byte	0xed
 7230 0119 07       		.uleb128 0x7
 7231 011a 04       		.byte	0x4
 7232 011b 1F010000 		.4byte	0x11f
 7233 011f 08       		.uleb128 0x8
 7234 0120 ED000000 		.4byte	0xed
 7235 0124 09       		.uleb128 0x9
 7236 0125 7B060000 		.4byte	.LASF43
 7237 0129 01       		.byte	0x1
 7238 012a 2C000000 		.4byte	0x2c
 7239 012e 06       		.byte	0x6
 7240 012f 43       		.byte	0x43
 7241 0130 A1010000 		.4byte	0x1a1
 7242 0134 0A       		.uleb128 0xa
 7243 0135 0B110000 		.4byte	.LASF25
 7244 0139 01       		.byte	0x1
 7245 013a 0A       		.uleb128 0xa
 7246 013b 1F0F0000 		.4byte	.LASF26
 7247 013f 02       		.byte	0x2
 7248 0140 0A       		.uleb128 0xa
 7249 0141 94030000 		.4byte	.LASF27
 7250 0145 03       		.byte	0x3
 7251 0146 0A       		.uleb128 0xa
 7252 0147 8B0F0000 		.4byte	.LASF28
 7253 014b 04       		.byte	0x4
 7254 014c 0A       		.uleb128 0xa
 7255 014d 61020000 		.4byte	.LASF29
 7256 0151 05       		.byte	0x5
 7257 0152 0A       		.uleb128 0xa
 7258 0153 9C070000 		.4byte	.LASF30
 7259 0157 06       		.byte	0x6
 7260 0158 0A       		.uleb128 0xa
 7261 0159 BA0E0000 		.4byte	.LASF31
 7262 015d 07       		.byte	0x7
 7263 015e 0A       		.uleb128 0xa
 7264 015f A0040000 		.4byte	.LASF32
 7265 0163 08       		.byte	0x8
 7266 0164 0A       		.uleb128 0xa
 7267 0165 73010000 		.4byte	.LASF33
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 176


 7268 0169 09       		.byte	0x9
 7269 016a 0A       		.uleb128 0xa
 7270 016b 20050000 		.4byte	.LASF34
 7271 016f 0A       		.byte	0xa
 7272 0170 0A       		.uleb128 0xa
 7273 0171 7D0F0000 		.4byte	.LASF35
 7274 0175 0B       		.byte	0xb
 7275 0176 0A       		.uleb128 0xa
 7276 0177 6B030000 		.4byte	.LASF36
 7277 017b 0C       		.byte	0xc
 7278 017c 0A       		.uleb128 0xa
 7279 017d D3020000 		.4byte	.LASF37
 7280 0181 0D       		.byte	0xd
 7281 0182 0A       		.uleb128 0xa
 7282 0183 4E0A0000 		.4byte	.LASF38
 7283 0187 0E       		.byte	0xe
 7284 0188 0A       		.uleb128 0xa
 7285 0189 2D020000 		.4byte	.LASF39
 7286 018d 0F       		.byte	0xf
 7287 018e 0A       		.uleb128 0xa
 7288 018f FC0A0000 		.4byte	.LASF40
 7289 0193 10       		.byte	0x10
 7290 0194 0A       		.uleb128 0xa
 7291 0195 C5030000 		.4byte	.LASF41
 7292 0199 11       		.byte	0x11
 7293 019a 0A       		.uleb128 0xa
 7294 019b 540B0000 		.4byte	.LASF42
 7295 019f 12       		.byte	0x12
 7296 01a0 00       		.byte	0
 7297 01a1 09       		.uleb128 0x9
 7298 01a2 AF050000 		.4byte	.LASF44
 7299 01a6 01       		.byte	0x1
 7300 01a7 2C000000 		.4byte	0x2c
 7301 01ab 06       		.byte	0x6
 7302 01ac 5A       		.byte	0x5a
 7303 01ad 00020000 		.4byte	0x200
 7304 01b1 0A       		.uleb128 0xa
 7305 01b2 460D0000 		.4byte	.LASF45
 7306 01b6 00       		.byte	0
 7307 01b7 0A       		.uleb128 0xa
 7308 01b8 4E000000 		.4byte	.LASF46
 7309 01bc 01       		.byte	0x1
 7310 01bd 0A       		.uleb128 0xa
 7311 01be 2A040000 		.4byte	.LASF47
 7312 01c2 02       		.byte	0x2
 7313 01c3 0A       		.uleb128 0xa
 7314 01c4 09000000 		.4byte	.LASF48
 7315 01c8 03       		.byte	0x3
 7316 01c9 0A       		.uleb128 0xa
 7317 01ca 740A0000 		.4byte	.LASF49
 7318 01ce 04       		.byte	0x4
 7319 01cf 0A       		.uleb128 0xa
 7320 01d0 710F0000 		.4byte	.LASF50
 7321 01d4 05       		.byte	0x5
 7322 01d5 0A       		.uleb128 0xa
 7323 01d6 2C0D0000 		.4byte	.LASF51
 7324 01da 06       		.byte	0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 177


 7325 01db 0A       		.uleb128 0xa
 7326 01dc FF040000 		.4byte	.LASF52
 7327 01e0 07       		.byte	0x7
 7328 01e1 0A       		.uleb128 0xa
 7329 01e2 3C0C0000 		.4byte	.LASF53
 7330 01e6 08       		.byte	0x8
 7331 01e7 0A       		.uleb128 0xa
 7332 01e8 01080000 		.4byte	.LASF54
 7333 01ec 09       		.byte	0x9
 7334 01ed 0A       		.uleb128 0xa
 7335 01ee B9050000 		.4byte	.LASF55
 7336 01f2 0A       		.byte	0xa
 7337 01f3 0A       		.uleb128 0xa
 7338 01f4 E30D0000 		.4byte	.LASF56
 7339 01f8 0B       		.byte	0xb
 7340 01f9 0A       		.uleb128 0xa
 7341 01fa AE060000 		.4byte	.LASF57
 7342 01fe 0C       		.byte	0xc
 7343 01ff 00       		.byte	0
 7344 0200 09       		.uleb128 0x9
 7345 0201 320A0000 		.4byte	.LASF58
 7346 0205 01       		.byte	0x1
 7347 0206 2C000000 		.4byte	0x2c
 7348 020a 06       		.byte	0x6
 7349 020b 69       		.byte	0x69
 7350 020c DD020000 		.4byte	0x2dd
 7351 0210 0A       		.uleb128 0xa
 7352 0211 4D110000 		.4byte	.LASF59
 7353 0215 00       		.byte	0
 7354 0216 0A       		.uleb128 0xa
 7355 0217 F00E0000 		.4byte	.LASF60
 7356 021b 01       		.byte	0x1
 7357 021c 0A       		.uleb128 0xa
 7358 021d EC060000 		.4byte	.LASF61
 7359 0221 03       		.byte	0x3
 7360 0222 0A       		.uleb128 0xa
 7361 0223 87040000 		.4byte	.LASF62
 7362 0227 04       		.byte	0x4
 7363 0228 0A       		.uleb128 0xa
 7364 0229 190D0000 		.4byte	.LASF63
 7365 022d 05       		.byte	0x5
 7366 022e 0A       		.uleb128 0xa
 7367 022f DC070000 		.4byte	.LASF64
 7368 0233 06       		.byte	0x6
 7369 0234 0A       		.uleb128 0xa
 7370 0235 0F070000 		.4byte	.LASF65
 7371 0239 09       		.byte	0x9
 7372 023a 0A       		.uleb128 0xa
 7373 023b 29000000 		.4byte	.LASF66
 7374 023f 0A       		.byte	0xa
 7375 0240 0A       		.uleb128 0xa
 7376 0241 4D0F0000 		.4byte	.LASF67
 7377 0245 0C       		.byte	0xc
 7378 0246 0A       		.uleb128 0xa
 7379 0247 C00B0000 		.4byte	.LASF68
 7380 024b 0D       		.byte	0xd
 7381 024c 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 178


 7382 024d 7A040000 		.4byte	.LASF69
 7383 0251 80       		.byte	0x80
 7384 0252 0A       		.uleb128 0xa
 7385 0253 C0040000 		.4byte	.LASF70
 7386 0257 81       		.byte	0x81
 7387 0258 0A       		.uleb128 0xa
 7388 0259 C5050000 		.4byte	.LASF71
 7389 025d 82       		.byte	0x82
 7390 025e 0A       		.uleb128 0xa
 7391 025f D00E0000 		.4byte	.LASF72
 7392 0263 83       		.byte	0x83
 7393 0264 0A       		.uleb128 0xa
 7394 0265 4C0E0000 		.4byte	.LASF73
 7395 0269 84       		.byte	0x84
 7396 026a 0A       		.uleb128 0xa
 7397 026b 2B030000 		.4byte	.LASF74
 7398 026f 85       		.byte	0x85
 7399 0270 0A       		.uleb128 0xa
 7400 0271 2A080000 		.4byte	.LASF75
 7401 0275 86       		.byte	0x86
 7402 0276 0A       		.uleb128 0xa
 7403 0277 B7070000 		.4byte	.LASF76
 7404 027b 88       		.byte	0x88
 7405 027c 0A       		.uleb128 0xa
 7406 027d 3A0F0000 		.4byte	.LASF77
 7407 0281 89       		.byte	0x89
 7408 0282 0A       		.uleb128 0xa
 7409 0283 700C0000 		.4byte	.LASF78
 7410 0287 8B       		.byte	0x8b
 7411 0288 0A       		.uleb128 0xa
 7412 0289 420B0000 		.4byte	.LASF79
 7413 028d 8C       		.byte	0x8c
 7414 028e 0A       		.uleb128 0xa
 7415 028f DF080000 		.4byte	.LASF80
 7416 0293 8E       		.byte	0x8e
 7417 0294 0A       		.uleb128 0xa
 7418 0295 42040000 		.4byte	.LASF81
 7419 0299 FB       		.byte	0xfb
 7420 029a 0A       		.uleb128 0xa
 7421 029b 5E040000 		.4byte	.LASF82
 7422 029f FA       		.byte	0xfa
 7423 02a0 0A       		.uleb128 0xa
 7424 02a1 B50C0000 		.4byte	.LASF83
 7425 02a5 90       		.byte	0x90
 7426 02a6 0A       		.uleb128 0xa
 7427 02a7 70020000 		.4byte	.LASF84
 7428 02ab 92       		.byte	0x92
 7429 02ac 0A       		.uleb128 0xa
 7430 02ad 14100000 		.4byte	.LASF85
 7431 02b1 A1       		.byte	0xa1
 7432 02b2 0A       		.uleb128 0xa
 7433 02b3 1B0E0000 		.4byte	.LASF86
 7434 02b7 A2       		.byte	0xa2
 7435 02b8 0A       		.uleb128 0xa
 7436 02b9 A70A0000 		.4byte	.LASF87
 7437 02bd A3       		.byte	0xa3
 7438 02be 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 179


 7439 02bf 2D0E0000 		.4byte	.LASF88
 7440 02c3 A4       		.byte	0xa4
 7441 02c4 0A       		.uleb128 0xa
 7442 02c5 DF0E0000 		.4byte	.LASF89
 7443 02c9 A5       		.byte	0xa5
 7444 02ca 0A       		.uleb128 0xa
 7445 02cb EC0D0000 		.4byte	.LASF90
 7446 02cf A6       		.byte	0xa6
 7447 02d0 0A       		.uleb128 0xa
 7448 02d1 6B090000 		.4byte	.LASF91
 7449 02d5 A7       		.byte	0xa7
 7450 02d6 0A       		.uleb128 0xa
 7451 02d7 B3090000 		.4byte	.LASF92
 7452 02db A8       		.byte	0xa8
 7453 02dc 00       		.byte	0
 7454 02dd 09       		.uleb128 0x9
 7455 02de FD100000 		.4byte	.LASF93
 7456 02e2 01       		.byte	0x1
 7457 02e3 2C000000 		.4byte	0x2c
 7458 02e7 06       		.byte	0x6
 7459 02e8 BB       		.byte	0xbb
 7460 02e9 1E030000 		.4byte	0x31e
 7461 02ed 0A       		.uleb128 0xa
 7462 02ee 4C060000 		.4byte	.LASF94
 7463 02f2 00       		.byte	0
 7464 02f3 0A       		.uleb128 0xa
 7465 02f4 870A0000 		.4byte	.LASF95
 7466 02f8 01       		.byte	0x1
 7467 02f9 0A       		.uleb128 0xa
 7468 02fa 81020000 		.4byte	.LASF96
 7469 02fe 02       		.byte	0x2
 7470 02ff 0A       		.uleb128 0xa
 7471 0300 C8010000 		.4byte	.LASF97
 7472 0304 03       		.byte	0x3
 7473 0305 0A       		.uleb128 0xa
 7474 0306 86010000 		.4byte	.LASF98
 7475 030a 04       		.byte	0x4
 7476 030b 0A       		.uleb128 0xa
 7477 030c 36000000 		.4byte	.LASF99
 7478 0310 05       		.byte	0x5
 7479 0311 0A       		.uleb128 0xa
 7480 0312 2B070000 		.4byte	.LASF100
 7481 0316 06       		.byte	0x6
 7482 0317 0A       		.uleb128 0xa
 7483 0318 FC0D0000 		.4byte	.LASF101
 7484 031c 07       		.byte	0x7
 7485 031d 00       		.byte	0
 7486 031e 09       		.uleb128 0x9
 7487 031f E60B0000 		.4byte	.LASF102
 7488 0323 01       		.byte	0x1
 7489 0324 2C000000 		.4byte	0x2c
 7490 0328 06       		.byte	0x6
 7491 0329 DE       		.byte	0xde
 7492 032a 3B030000 		.4byte	0x33b
 7493 032e 0A       		.uleb128 0xa
 7494 032f 42060000 		.4byte	.LASF103
 7495 0333 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 180


 7496 0334 0A       		.uleb128 0xa
 7497 0335 7D070000 		.4byte	.LASF104
 7498 0339 01       		.byte	0x1
 7499 033a 00       		.byte	0
 7500 033b 09       		.uleb128 0x9
 7501 033c 600F0000 		.4byte	.LASF105
 7502 0340 01       		.byte	0x1
 7503 0341 2C000000 		.4byte	0x2c
 7504 0345 06       		.byte	0x6
 7505 0346 E6       		.byte	0xe6
 7506 0347 88030000 		.4byte	0x388
 7507 034b 0A       		.uleb128 0xa
 7508 034c 84070000 		.4byte	.LASF106
 7509 0350 00       		.byte	0
 7510 0351 0A       		.uleb128 0xa
 7511 0352 1A110000 		.4byte	.LASF107
 7512 0356 01       		.byte	0x1
 7513 0357 0A       		.uleb128 0xa
 7514 0358 2A090000 		.4byte	.LASF108
 7515 035c 02       		.byte	0x2
 7516 035d 0A       		.uleb128 0xa
 7517 035e 1E0B0000 		.4byte	.LASF109
 7518 0362 03       		.byte	0x3
 7519 0363 0A       		.uleb128 0xa
 7520 0364 3D0A0000 		.4byte	.LASF110
 7521 0368 04       		.byte	0x4
 7522 0369 0A       		.uleb128 0xa
 7523 036a 460C0000 		.4byte	.LASF111
 7524 036e 05       		.byte	0x5
 7525 036f 0A       		.uleb128 0xa
 7526 0370 940B0000 		.4byte	.LASF112
 7527 0374 06       		.byte	0x6
 7528 0375 0A       		.uleb128 0xa
 7529 0376 F10A0000 		.4byte	.LASF113
 7530 037a 07       		.byte	0x7
 7531 037b 0A       		.uleb128 0xa
 7532 037c 08060000 		.4byte	.LASF114
 7533 0380 08       		.byte	0x8
 7534 0381 0A       		.uleb128 0xa
 7535 0382 E0060000 		.4byte	.LASF115
 7536 0386 09       		.byte	0x9
 7537 0387 00       		.byte	0
 7538 0388 0B       		.uleb128 0xb
 7539 0389 79000000 		.4byte	.LASF119
 7540 038d 86       		.byte	0x86
 7541 038e 07       		.byte	0x7
 7542 038f 9B       		.byte	0x9b
 7543 0390 C5030000 		.4byte	0x3c5
 7544 0394 0C       		.uleb128 0xc
 7545 0395 DB050000 		.4byte	.LASF116
 7546 0399 07       		.byte	0x7
 7547 039a 9C       		.byte	0x9c
 7548 039b C5030000 		.4byte	0x3c5
 7549 039f 00       		.byte	0
 7550 03a0 0C       		.uleb128 0xc
 7551 03a1 5C0C0000 		.4byte	.LASF117
 7552 03a5 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 181


 7553 03a6 9D       		.byte	0x9d
 7554 03a7 C7000000 		.4byte	0xc7
 7555 03ab 80       		.byte	0x80
 7556 03ac 0D       		.uleb128 0xd
 7557 03ad 696E6400 		.ascii	"ind\000"
 7558 03b1 07       		.byte	0x7
 7559 03b2 9E       		.byte	0x9e
 7560 03b3 C7000000 		.4byte	0xc7
 7561 03b7 82       		.byte	0x82
 7562 03b8 0C       		.uleb128 0xc
 7563 03b9 52020000 		.4byte	.LASF118
 7564 03bd 07       		.byte	0x7
 7565 03be 9F       		.byte	0x9f
 7566 03bf 97000000 		.4byte	0x97
 7567 03c3 84       		.byte	0x84
 7568 03c4 00       		.byte	0
 7569 03c5 0E       		.uleb128 0xe
 7570 03c6 97000000 		.4byte	0x97
 7571 03ca D5030000 		.4byte	0x3d5
 7572 03ce 0F       		.uleb128 0xf
 7573 03cf 0C010000 		.4byte	0x10c
 7574 03d3 7F       		.byte	0x7f
 7575 03d4 00       		.byte	0
 7576 03d5 0B       		.uleb128 0xb
 7577 03d6 7B050000 		.4byte	.LASF120
 7578 03da 10       		.byte	0x10
 7579 03db 07       		.byte	0x7
 7580 03dc A9       		.byte	0xa9
 7581 03dd 05040000 		.4byte	0x405
 7582 03e1 0D       		.uleb128 0xd
 7583 03e2 696400   		.ascii	"id\000"
 7584 03e5 07       		.byte	0x7
 7585 03e6 AA       		.byte	0xaa
 7586 03e7 97000000 		.4byte	0x97
 7587 03eb 00       		.byte	0
 7588 03ec 0C       		.uleb128 0xc
 7589 03ed EA0F0000 		.4byte	.LASF121
 7590 03f1 07       		.byte	0x7
 7591 03f2 AB       		.byte	0xab
 7592 03f3 97000000 		.4byte	0x97
 7593 03f7 01       		.byte	0x1
 7594 03f8 0C       		.uleb128 0xc
 7595 03f9 FE020000 		.4byte	.LASF122
 7596 03fd 07       		.byte	0x7
 7597 03fe AC       		.byte	0xac
 7598 03ff 05040000 		.4byte	0x405
 7599 0403 02       		.byte	0x2
 7600 0404 00       		.byte	0
 7601 0405 0E       		.uleb128 0xe
 7602 0406 97000000 		.4byte	0x97
 7603 040a 15040000 		.4byte	0x415
 7604 040e 0F       		.uleb128 0xf
 7605 040f 0C010000 		.4byte	0x10c
 7606 0413 0D       		.byte	0xd
 7607 0414 00       		.byte	0
 7608 0415 0B       		.uleb128 0xb
 7609 0416 0C090000 		.4byte	.LASF123
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 182


 7610 041a 10       		.byte	0x10
 7611 041b 07       		.byte	0x7
 7612 041c B3       		.byte	0xb3
 7613 041d 5E040000 		.4byte	0x45e
 7614 0421 0C       		.uleb128 0xc
 7615 0422 4E010000 		.4byte	.LASF124
 7616 0426 07       		.byte	0x7
 7617 0427 B5       		.byte	0xb5
 7618 0428 D3000000 		.4byte	0xd3
 7619 042c 00       		.byte	0
 7620 042d 0C       		.uleb128 0xc
 7621 042e 42050000 		.4byte	.LASF125
 7622 0432 07       		.byte	0x7
 7623 0433 B6       		.byte	0xb6
 7624 0434 D3000000 		.4byte	0xd3
 7625 0438 04       		.byte	0x4
 7626 0439 0C       		.uleb128 0xc
 7627 043a AC070000 		.4byte	.LASF126
 7628 043e 07       		.byte	0x7
 7629 043f B7       		.byte	0xb7
 7630 0440 97000000 		.4byte	0x97
 7631 0444 08       		.byte	0x8
 7632 0445 0D       		.uleb128 0xd
 7633 0446 72657300 		.ascii	"res\000"
 7634 044a 07       		.byte	0x7
 7635 044b B8       		.byte	0xb8
 7636 044c 97000000 		.4byte	0x97
 7637 0450 09       		.byte	0x9
 7638 0451 0C       		.uleb128 0xc
 7639 0452 FE020000 		.4byte	.LASF122
 7640 0456 07       		.byte	0x7
 7641 0457 B9       		.byte	0xb9
 7642 0458 5E040000 		.4byte	0x45e
 7643 045c 0A       		.byte	0xa
 7644 045d 00       		.byte	0
 7645 045e 0E       		.uleb128 0xe
 7646 045f 97000000 		.4byte	0x97
 7647 0463 6E040000 		.4byte	0x46e
 7648 0467 0F       		.uleb128 0xf
 7649 0468 0C010000 		.4byte	0x10c
 7650 046c 05       		.byte	0x5
 7651 046d 00       		.byte	0
 7652 046e 0B       		.uleb128 0xb
 7653 046f 26020000 		.4byte	.LASF127
 7654 0473 10       		.byte	0x10
 7655 0474 07       		.byte	0x7
 7656 0475 C1       		.byte	0xc1
 7657 0476 B7040000 		.4byte	0x4b7
 7658 047a 0C       		.uleb128 0xc
 7659 047b 340B0000 		.4byte	.LASF128
 7660 047f 07       		.byte	0x7
 7661 0480 C2       		.byte	0xc2
 7662 0481 B7040000 		.4byte	0x4b7
 7663 0485 00       		.byte	0
 7664 0486 0C       		.uleb128 0xc
 7665 0487 C1100000 		.4byte	.LASF129
 7666 048b 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 183


 7667 048c C3       		.byte	0xc3
 7668 048d C7040000 		.4byte	0x4c7
 7669 0491 04       		.byte	0x4
 7670 0492 0C       		.uleb128 0xc
 7671 0493 65050000 		.4byte	.LASF130
 7672 0497 07       		.byte	0x7
 7673 0498 C4       		.byte	0xc4
 7674 0499 D7040000 		.4byte	0x4d7
 7675 049d 0C       		.byte	0xc
 7676 049e 0C       		.uleb128 0xc
 7677 049f 06040000 		.4byte	.LASF131
 7678 04a3 07       		.byte	0x7
 7679 04a4 C5       		.byte	0xc5
 7680 04a5 97000000 		.4byte	0x97
 7681 04a9 0E       		.byte	0xe
 7682 04aa 0C       		.uleb128 0xc
 7683 04ab FE020000 		.4byte	.LASF122
 7684 04af 07       		.byte	0x7
 7685 04b0 C6       		.byte	0xc6
 7686 04b1 E7040000 		.4byte	0x4e7
 7687 04b5 0F       		.byte	0xf
 7688 04b6 00       		.byte	0
 7689 04b7 0E       		.uleb128 0xe
 7690 04b8 A3000000 		.4byte	0xa3
 7691 04bc C7040000 		.4byte	0x4c7
 7692 04c0 0F       		.uleb128 0xf
 7693 04c1 0C010000 		.4byte	0x10c
 7694 04c5 01       		.byte	0x1
 7695 04c6 00       		.byte	0
 7696 04c7 0E       		.uleb128 0xe
 7697 04c8 AF000000 		.4byte	0xaf
 7698 04cc D7040000 		.4byte	0x4d7
 7699 04d0 0F       		.uleb128 0xf
 7700 04d1 0C010000 		.4byte	0x10c
 7701 04d5 01       		.byte	0x1
 7702 04d6 00       		.byte	0
 7703 04d7 0E       		.uleb128 0xe
 7704 04d8 97000000 		.4byte	0x97
 7705 04dc E7040000 		.4byte	0x4e7
 7706 04e0 0F       		.uleb128 0xf
 7707 04e1 0C010000 		.4byte	0x10c
 7708 04e5 01       		.byte	0x1
 7709 04e6 00       		.byte	0
 7710 04e7 0E       		.uleb128 0xe
 7711 04e8 97000000 		.4byte	0x97
 7712 04ec F7040000 		.4byte	0x4f7
 7713 04f0 0F       		.uleb128 0xf
 7714 04f1 0C010000 		.4byte	0x10c
 7715 04f5 00       		.byte	0
 7716 04f6 00       		.byte	0
 7717 04f7 0B       		.uleb128 0xb
 7718 04f8 AF010000 		.4byte	.LASF132
 7719 04fc 10       		.byte	0x10
 7720 04fd 07       		.byte	0x7
 7721 04fe CD       		.byte	0xcd
 7722 04ff 28050000 		.4byte	0x528
 7723 0503 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 184


 7724 0504 E1030000 		.4byte	.LASF133
 7725 0508 07       		.byte	0x7
 7726 0509 CE       		.byte	0xce
 7727 050a 97000000 		.4byte	0x97
 7728 050e 00       		.byte	0
 7729 050f 0C       		.uleb128 0xc
 7730 0510 74070000 		.4byte	.LASF134
 7731 0514 07       		.byte	0x7
 7732 0515 CF       		.byte	0xcf
 7733 0516 97000000 		.4byte	0x97
 7734 051a 01       		.byte	0x1
 7735 051b 0C       		.uleb128 0xc
 7736 051c FE020000 		.4byte	.LASF122
 7737 0520 07       		.byte	0x7
 7738 0521 D0       		.byte	0xd0
 7739 0522 05040000 		.4byte	0x405
 7740 0526 02       		.byte	0x2
 7741 0527 00       		.byte	0
 7742 0528 0B       		.uleb128 0xb
 7743 0529 A00B0000 		.4byte	.LASF135
 7744 052d 10       		.byte	0x10
 7745 052e 07       		.byte	0x7
 7746 052f D7       		.byte	0xd7
 7747 0530 7D050000 		.4byte	0x57d
 7748 0534 0C       		.uleb128 0xc
 7749 0535 6E100000 		.4byte	.LASF136
 7750 0539 07       		.byte	0x7
 7751 053a D8       		.byte	0xd8
 7752 053b D3000000 		.4byte	0xd3
 7753 053f 00       		.byte	0
 7754 0540 0C       		.uleb128 0xc
 7755 0541 66060000 		.4byte	.LASF137
 7756 0545 07       		.byte	0x7
 7757 0546 D9       		.byte	0xd9
 7758 0547 DF000000 		.4byte	0xdf
 7759 054b 04       		.byte	0x4
 7760 054c 0C       		.uleb128 0xc
 7761 054d DB0C0000 		.4byte	.LASF138
 7762 0551 07       		.byte	0x7
 7763 0552 DA       		.byte	0xda
 7764 0553 DF000000 		.4byte	0xdf
 7765 0557 08       		.byte	0x8
 7766 0558 0C       		.uleb128 0xc
 7767 0559 0D080000 		.4byte	.LASF139
 7768 055d 07       		.byte	0x7
 7769 055e DB       		.byte	0xdb
 7770 055f 97000000 		.4byte	0x97
 7771 0563 0C       		.byte	0xc
 7772 0564 0C       		.uleb128 0xc
 7773 0565 610E0000 		.4byte	.LASF140
 7774 0569 07       		.byte	0x7
 7775 056a DC       		.byte	0xdc
 7776 056b 97000000 		.4byte	0x97
 7777 056f 0D       		.byte	0xd
 7778 0570 0C       		.uleb128 0xc
 7779 0571 FE020000 		.4byte	.LASF122
 7780 0575 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 185


 7781 0576 DD       		.byte	0xdd
 7782 0577 D7040000 		.4byte	0x4d7
 7783 057b 0E       		.byte	0xe
 7784 057c 00       		.byte	0
 7785 057d 0B       		.uleb128 0xb
 7786 057e 83100000 		.4byte	.LASF141
 7787 0582 60       		.byte	0x60
 7788 0583 07       		.byte	0x7
 7789 0584 E7       		.byte	0xe7
 7790 0585 DC050000 		.4byte	0x5dc
 7791 0589 0C       		.uleb128 0xc
 7792 058a 490A0000 		.4byte	.LASF142
 7793 058e 07       		.byte	0x7
 7794 058f E8       		.byte	0xe8
 7795 0590 97000000 		.4byte	0x97
 7796 0594 00       		.byte	0
 7797 0595 0C       		.uleb128 0xc
 7798 0596 FE020000 		.4byte	.LASF122
 7799 059a 07       		.byte	0x7
 7800 059b E9       		.byte	0xe9
 7801 059c DC050000 		.4byte	0x5dc
 7802 05a0 01       		.byte	0x1
 7803 05a1 0D       		.uleb128 0xd
 7804 05a2 64657600 		.ascii	"dev\000"
 7805 05a6 07       		.byte	0x7
 7806 05a7 EA       		.byte	0xea
 7807 05a8 D5030000 		.4byte	0x3d5
 7808 05ac 10       		.byte	0x10
 7809 05ad 0C       		.uleb128 0xc
 7810 05ae 35090000 		.4byte	.LASF143
 7811 05b2 07       		.byte	0x7
 7812 05b3 EB       		.byte	0xeb
 7813 05b4 15040000 		.4byte	0x415
 7814 05b8 20       		.byte	0x20
 7815 05b9 0D       		.uleb128 0xd
 7816 05ba 656D6700 		.ascii	"emg\000"
 7817 05be 07       		.byte	0x7
 7818 05bf EC       		.byte	0xec
 7819 05c0 6E040000 		.4byte	0x46e
 7820 05c4 30       		.byte	0x30
 7821 05c5 0D       		.uleb128 0xd
 7822 05c6 4D5300   		.ascii	"MS\000"
 7823 05c9 07       		.byte	0x7
 7824 05ca ED       		.byte	0xed
 7825 05cb F7040000 		.4byte	0x4f7
 7826 05cf 40       		.byte	0x40
 7827 05d0 0D       		.uleb128 0xd
 7828 05d1 464200   		.ascii	"FB\000"
 7829 05d4 07       		.byte	0x7
 7830 05d5 EE       		.byte	0xee
 7831 05d6 28050000 		.4byte	0x528
 7832 05da 50       		.byte	0x50
 7833 05db 00       		.byte	0
 7834 05dc 0E       		.uleb128 0xe
 7835 05dd 97000000 		.4byte	0x97
 7836 05e1 EC050000 		.4byte	0x5ec
 7837 05e5 0F       		.uleb128 0xf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 186


 7838 05e6 0C010000 		.4byte	0x10c
 7839 05ea 0E       		.byte	0xe
 7840 05eb 00       		.byte	0
 7841 05ec 10       		.uleb128 0x10
 7842 05ed A5020000 		.4byte	.LASF144
 7843 05f1 2C       		.byte	0x2c
 7844 05f2 07       		.byte	0x7
 7845 05f3 3901     		.2byte	0x139
 7846 05f5 21060000 		.4byte	0x621
 7847 05f9 11       		.uleb128 0x11
 7848 05fa 470E0000 		.4byte	.LASF145
 7849 05fe 07       		.byte	0x7
 7850 05ff 3A01     		.2byte	0x13a
 7851 0601 97000000 		.4byte	0x97
 7852 0605 00       		.byte	0
 7853 0606 11       		.uleb128 0x11
 7854 0607 410E0000 		.4byte	.LASF146
 7855 060b 07       		.byte	0x7
 7856 060c 3B01     		.2byte	0x13b
 7857 060e 97000000 		.4byte	0x97
 7858 0612 01       		.byte	0x1
 7859 0613 11       		.uleb128 0x11
 7860 0614 5F010000 		.4byte	.LASF147
 7861 0618 07       		.byte	0x7
 7862 0619 3C01     		.2byte	0x13c
 7863 061b 21060000 		.4byte	0x621
 7864 061f 04       		.byte	0x4
 7865 0620 00       		.byte	0
 7866 0621 0E       		.uleb128 0xe
 7867 0622 19010000 		.4byte	0x119
 7868 0626 31060000 		.4byte	0x631
 7869 062a 0F       		.uleb128 0xf
 7870 062b 0C010000 		.4byte	0x10c
 7871 062f 09       		.byte	0x9
 7872 0630 00       		.byte	0
 7873 0631 10       		.uleb128 0x10
 7874 0632 08050000 		.4byte	.LASF148
 7875 0636 10       		.byte	0x10
 7876 0637 07       		.byte	0x7
 7877 0638 3F01     		.2byte	0x13f
 7878 063a A7060000 		.4byte	0x6a7
 7879 063e 11       		.uleb128 0x11
 7880 063f AB0D0000 		.4byte	.LASF149
 7881 0643 07       		.byte	0x7
 7882 0644 4001     		.2byte	0x140
 7883 0646 A7060000 		.4byte	0x6a7
 7884 064a 00       		.byte	0
 7885 064b 11       		.uleb128 0x11
 7886 064c 8D100000 		.4byte	.LASF150
 7887 0650 07       		.byte	0x7
 7888 0651 4101     		.2byte	0x141
 7889 0653 97000000 		.4byte	0x97
 7890 0657 04       		.byte	0x4
 7891 0658 11       		.uleb128 0x11
 7892 0659 0B030000 		.4byte	.LASF151
 7893 065d 07       		.byte	0x7
 7894 065e 4201     		.2byte	0x142
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 187


 7895 0660 97000000 		.4byte	0x97
 7896 0664 05       		.byte	0x5
 7897 0665 11       		.uleb128 0x11
 7898 0666 BE010000 		.4byte	.LASF152
 7899 066a 07       		.byte	0x7
 7900 066b 4301     		.2byte	0x143
 7901 066d 19010000 		.4byte	0x119
 7902 0671 08       		.byte	0x8
 7903 0672 11       		.uleb128 0x11
 7904 0673 FC070000 		.4byte	.LASF153
 7905 0677 07       		.byte	0x7
 7906 0678 4401     		.2byte	0x144
 7907 067a 97000000 		.4byte	0x97
 7908 067e 0C       		.byte	0xc
 7909 067f 11       		.uleb128 0x11
 7910 0680 BC0A0000 		.4byte	.LASF154
 7911 0684 07       		.byte	0x7
 7912 0685 4501     		.2byte	0x145
 7913 0687 97000000 		.4byte	0x97
 7914 068b 0D       		.byte	0xd
 7915 068c 11       		.uleb128 0x11
 7916 068d 350C0000 		.4byte	.LASF155
 7917 0691 07       		.byte	0x7
 7918 0692 4601     		.2byte	0x146
 7919 0694 97000000 		.4byte	0x97
 7920 0698 0E       		.byte	0xe
 7921 0699 11       		.uleb128 0x11
 7922 069a D7070000 		.4byte	.LASF156
 7923 069e 07       		.byte	0x7
 7924 069f 4701     		.2byte	0x147
 7925 06a1 97000000 		.4byte	0x97
 7926 06a5 0F       		.byte	0xf
 7927 06a6 00       		.byte	0
 7928 06a7 07       		.uleb128 0x7
 7929 06a8 04       		.byte	0x4
 7930 06a9 97000000 		.4byte	0x97
 7931 06ad 10       		.uleb128 0x10
 7932 06ae E0090000 		.4byte	.LASF157
 7933 06b2 0C       		.byte	0xc
 7934 06b3 07       		.byte	0x7
 7935 06b4 5C01     		.2byte	0x15c
 7936 06b6 D5060000 		.4byte	0x6d5
 7937 06ba 12       		.uleb128 0x12
 7938 06bb 656D6700 		.ascii	"emg\000"
 7939 06bf 07       		.byte	0x7
 7940 06c0 5D01     		.2byte	0x15d
 7941 06c2 D5060000 		.4byte	0x6d5
 7942 06c6 00       		.byte	0
 7943 06c7 11       		.uleb128 0x11
 7944 06c8 B7040000 		.4byte	.LASF158
 7945 06cc 07       		.byte	0x7
 7946 06cd 5E01     		.2byte	0x15e
 7947 06cf DF000000 		.4byte	0xdf
 7948 06d3 08       		.byte	0x8
 7949 06d4 00       		.byte	0
 7950 06d5 0E       		.uleb128 0xe
 7951 06d6 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 188


 7952 06da E5060000 		.4byte	0x6e5
 7953 06de 0F       		.uleb128 0xf
 7954 06df 0C010000 		.4byte	0x10c
 7955 06e3 01       		.byte	0x1
 7956 06e4 00       		.byte	0
 7957 06e5 13       		.uleb128 0x13
 7958 06e6 A30D0000 		.4byte	.LASF308
 7959 06ea 02       		.byte	0x2
 7960 06eb 1403     		.2byte	0x314
 7961 06ed 8C000000 		.4byte	0x8c
 7962 06f1 03       		.byte	0x3
 7963 06f2 0F070000 		.4byte	0x70f
 7964 06f6 14       		.uleb128 0x14
 7965 06f7 B1040000 		.4byte	.LASF218
 7966 06fb 02       		.byte	0x2
 7967 06fc 1403     		.2byte	0x314
 7968 06fe 8C000000 		.4byte	0x8c
 7969 0702 15       		.uleb128 0x15
 7970 0703 4B020000 		.4byte	.LASF267
 7971 0707 02       		.byte	0x2
 7972 0708 1603     		.2byte	0x316
 7973 070a 8C000000 		.4byte	0x8c
 7974 070e 00       		.byte	0
 7975 070f 16       		.uleb128 0x16
 7976 0710 A40E0000 		.4byte	.LASF159
 7977 0714 01       		.byte	0x1
 7978 0715 3D       		.byte	0x3d
 7979 0716 00000000 		.4byte	.LFB64
 7980 071a BC050000 		.4byte	.LFE64-.LFB64
 7981 071e 01       		.uleb128 0x1
 7982 071f 9C       		.byte	0x9c
 7983 0720 17080000 		.4byte	0x817
 7984 0724 17       		.uleb128 0x17
 7985 0725 01060000 		.4byte	.LASF161
 7986 0729 01       		.byte	0x1
 7987 072a 3F       		.byte	0x3f
 7988 072b 97000000 		.4byte	0x97
 7989 072f 02       		.uleb128 0x2
 7990 0730 91       		.byte	0x91
 7991 0731 77       		.sleb128 -9
 7992 0732 18       		.uleb128 0x18
 7993 0733 E5060000 		.4byte	0x6e5
 7994 0737 9A040000 		.4byte	.LBB12
 7995 073b 08000000 		.4byte	.LBE12-.LBB12
 7996 073f 01       		.byte	0x1
 7997 0740 A2       		.byte	0xa2
 7998 0741 60070000 		.4byte	0x760
 7999 0745 19       		.uleb128 0x19
 8000 0746 F6060000 		.4byte	0x6f6
 8001 074a 02       		.uleb128 0x2
 8002 074b 91       		.byte	0x91
 8003 074c 60       		.sleb128 -32
 8004 074d 1A       		.uleb128 0x1a
 8005 074e 9A040000 		.4byte	.LBB13
 8006 0752 08000000 		.4byte	.LBE13-.LBB13
 8007 0756 1B       		.uleb128 0x1b
 8008 0757 02070000 		.4byte	0x702
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 189


 8009 075b 02       		.uleb128 0x2
 8010 075c 91       		.byte	0x91
 8011 075d 5C       		.sleb128 -36
 8012 075e 00       		.byte	0
 8013 075f 00       		.byte	0
 8014 0760 18       		.uleb128 0x18
 8015 0761 E5060000 		.4byte	0x6e5
 8016 0765 B8040000 		.4byte	.LBB14
 8017 0769 08000000 		.4byte	.LBE14-.LBB14
 8018 076d 01       		.byte	0x1
 8019 076e AE       		.byte	0xae
 8020 076f 8E070000 		.4byte	0x78e
 8021 0773 19       		.uleb128 0x19
 8022 0774 F6060000 		.4byte	0x6f6
 8023 0778 02       		.uleb128 0x2
 8024 0779 91       		.byte	0x91
 8025 077a 70       		.sleb128 -16
 8026 077b 1A       		.uleb128 0x1a
 8027 077c B8040000 		.4byte	.LBB15
 8028 0780 08000000 		.4byte	.LBE15-.LBB15
 8029 0784 1B       		.uleb128 0x1b
 8030 0785 02070000 		.4byte	0x702
 8031 0789 02       		.uleb128 0x2
 8032 078a 91       		.byte	0x91
 8033 078b 58       		.sleb128 -40
 8034 078c 00       		.byte	0
 8035 078d 00       		.byte	0
 8036 078e 18       		.uleb128 0x18
 8037 078f E5060000 		.4byte	0x6e5
 8038 0793 56050000 		.4byte	.LBB16
 8039 0797 08000000 		.4byte	.LBE16-.LBB16
 8040 079b 01       		.byte	0x1
 8041 079c F1       		.byte	0xf1
 8042 079d BC070000 		.4byte	0x7bc
 8043 07a1 19       		.uleb128 0x19
 8044 07a2 F6060000 		.4byte	0x6f6
 8045 07a6 02       		.uleb128 0x2
 8046 07a7 91       		.byte	0x91
 8047 07a8 6C       		.sleb128 -20
 8048 07a9 1A       		.uleb128 0x1a
 8049 07aa 56050000 		.4byte	.LBB17
 8050 07ae 08000000 		.4byte	.LBE17-.LBB17
 8051 07b2 1B       		.uleb128 0x1b
 8052 07b3 02070000 		.4byte	0x702
 8053 07b7 02       		.uleb128 0x2
 8054 07b8 91       		.byte	0x91
 8055 07b9 54       		.sleb128 -44
 8056 07ba 00       		.byte	0
 8057 07bb 00       		.byte	0
 8058 07bc 1C       		.uleb128 0x1c
 8059 07bd E5060000 		.4byte	0x6e5
 8060 07c1 86050000 		.4byte	.LBB18
 8061 07c5 08000000 		.4byte	.LBE18-.LBB18
 8062 07c9 01       		.byte	0x1
 8063 07ca 0F01     		.2byte	0x10f
 8064 07cc EB070000 		.4byte	0x7eb
 8065 07d0 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 190


 8066 07d1 F6060000 		.4byte	0x6f6
 8067 07d5 02       		.uleb128 0x2
 8068 07d6 91       		.byte	0x91
 8069 07d7 68       		.sleb128 -24
 8070 07d8 1A       		.uleb128 0x1a
 8071 07d9 86050000 		.4byte	.LBB19
 8072 07dd 08000000 		.4byte	.LBE19-.LBB19
 8073 07e1 1B       		.uleb128 0x1b
 8074 07e2 02070000 		.4byte	0x702
 8075 07e6 02       		.uleb128 0x2
 8076 07e7 91       		.byte	0x91
 8077 07e8 50       		.sleb128 -48
 8078 07e9 00       		.byte	0
 8079 07ea 00       		.byte	0
 8080 07eb 1D       		.uleb128 0x1d
 8081 07ec E5060000 		.4byte	0x6e5
 8082 07f0 9E050000 		.4byte	.LBB20
 8083 07f4 08000000 		.4byte	.LBE20-.LBB20
 8084 07f8 01       		.byte	0x1
 8085 07f9 1501     		.2byte	0x115
 8086 07fb 19       		.uleb128 0x19
 8087 07fc F6060000 		.4byte	0x6f6
 8088 0800 02       		.uleb128 0x2
 8089 0801 91       		.byte	0x91
 8090 0802 64       		.sleb128 -28
 8091 0803 1A       		.uleb128 0x1a
 8092 0804 9E050000 		.4byte	.LBB21
 8093 0808 08000000 		.4byte	.LBE21-.LBB21
 8094 080c 1B       		.uleb128 0x1b
 8095 080d 02070000 		.4byte	0x702
 8096 0811 02       		.uleb128 0x2
 8097 0812 91       		.byte	0x91
 8098 0813 4C       		.sleb128 -52
 8099 0814 00       		.byte	0
 8100 0815 00       		.byte	0
 8101 0816 00       		.byte	0
 8102 0817 1E       		.uleb128 0x1e
 8103 0818 00000000 		.4byte	.LASF160
 8104 081c 01       		.byte	0x1
 8105 081d 2301     		.2byte	0x123
 8106 081f 00000000 		.4byte	.LFB65
 8107 0823 22000000 		.4byte	.LFE65-.LFB65
 8108 0827 01       		.uleb128 0x1
 8109 0828 9C       		.byte	0x9c
 8110 0829 3E080000 		.4byte	0x83e
 8111 082d 1F       		.uleb128 0x1f
 8112 082e 12050000 		.4byte	.LASF162
 8113 0832 01       		.byte	0x1
 8114 0833 2401     		.2byte	0x124
 8115 0835 3E080000 		.4byte	0x83e
 8116 0839 03       		.uleb128 0x3
 8117 083a 91       		.byte	0x91
 8118 083b 9C74     		.sleb128 -1508
 8119 083d 00       		.byte	0
 8120 083e 0E       		.uleb128 0xe
 8121 083f ED000000 		.4byte	0xed
 8122 0843 4F080000 		.4byte	0x84f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 191


 8123 0847 20       		.uleb128 0x20
 8124 0848 0C010000 		.4byte	0x10c
 8125 084c DB05     		.2byte	0x5db
 8126 084e 00       		.byte	0
 8127 084f 21       		.uleb128 0x21
 8128 0850 1E070000 		.4byte	.LASF212
 8129 0854 01       		.byte	0x1
 8130 0855 2D01     		.2byte	0x12d
 8131 0857 97000000 		.4byte	0x97
 8132 085b 00000000 		.4byte	.LFB66
 8133 085f 5E000000 		.4byte	.LFE66-.LFB66
 8134 0863 01       		.uleb128 0x1
 8135 0864 9C       		.byte	0x9c
 8136 0865 88080000 		.4byte	0x888
 8137 0869 22       		.uleb128 0x22
 8138 086a 5A010000 		.4byte	.LASF164
 8139 086e 01       		.byte	0x1
 8140 086f 2D01     		.2byte	0x12d
 8141 0871 97000000 		.4byte	0x97
 8142 0875 02       		.uleb128 0x2
 8143 0876 91       		.byte	0x91
 8144 0877 6F       		.sleb128 -17
 8145 0878 23       		.uleb128 0x23
 8146 0879 736F6400 		.ascii	"sod\000"
 8147 087d 01       		.byte	0x1
 8148 087e 2E01     		.2byte	0x12e
 8149 0880 97000000 		.4byte	0x97
 8150 0884 02       		.uleb128 0x2
 8151 0885 91       		.byte	0x91
 8152 0886 77       		.sleb128 -9
 8153 0887 00       		.byte	0
 8154 0888 1E       		.uleb128 0x1e
 8155 0889 99100000 		.4byte	.LASF163
 8156 088d 01       		.byte	0x1
 8157 088e 3E01     		.2byte	0x13e
 8158 0890 00000000 		.4byte	.LFB67
 8159 0894 64010000 		.4byte	.LFE67-.LFB67
 8160 0898 01       		.uleb128 0x1
 8161 0899 9C       		.byte	0x9c
 8162 089a D1080000 		.4byte	0x8d1
 8163 089e 22       		.uleb128 0x22
 8164 089f D90D0000 		.4byte	.LASF165
 8165 08a3 01       		.byte	0x1
 8166 08a4 3E01     		.2byte	0x13e
 8167 08a6 A3000000 		.4byte	0xa3
 8168 08aa 04       		.uleb128 0x4
 8169 08ab 91       		.byte	0x91
 8170 08ac B6C47E   		.sleb128 -24010
 8171 08af 1F       		.uleb128 0x1f
 8172 08b0 12050000 		.4byte	.LASF162
 8173 08b4 01       		.byte	0x1
 8174 08b5 3F01     		.2byte	0x13f
 8175 08b7 D1080000 		.4byte	0x8d1
 8176 08bb 03       		.uleb128 0x3
 8177 08bc 91       		.byte	0x91
 8178 08bd D860     		.sleb128 -4008
 8179 08bf 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 192


 8180 08c0 68070000 		.4byte	.LASF166
 8181 08c4 01       		.byte	0x1
 8182 08c5 4001     		.2byte	0x140
 8183 08c7 E2080000 		.4byte	0x8e2
 8184 08cb 04       		.uleb128 0x4
 8185 08cc 91       		.byte	0x91
 8186 08cd B8C47E   		.sleb128 -24008
 8187 08d0 00       		.byte	0
 8188 08d1 0E       		.uleb128 0xe
 8189 08d2 ED000000 		.4byte	0xed
 8190 08d6 E2080000 		.4byte	0x8e2
 8191 08da 20       		.uleb128 0x20
 8192 08db 0C010000 		.4byte	0x10c
 8193 08df 9F0F     		.2byte	0xf9f
 8194 08e1 00       		.byte	0
 8195 08e2 0E       		.uleb128 0xe
 8196 08e3 ED000000 		.4byte	0xed
 8197 08e7 F3080000 		.4byte	0x8f3
 8198 08eb 20       		.uleb128 0x20
 8199 08ec 0C010000 		.4byte	0x10c
 8200 08f0 1F4E     		.2byte	0x4e1f
 8201 08f2 00       		.byte	0
 8202 08f3 1E       		.uleb128 0x1e
 8203 08f4 F5010000 		.4byte	.LASF167
 8204 08f8 01       		.byte	0x1
 8205 08f9 7001     		.2byte	0x170
 8206 08fb 00000000 		.4byte	.LFB68
 8207 08ff BC070000 		.4byte	.LFE68-.LFB68
 8208 0903 01       		.uleb128 0x1
 8209 0904 9C       		.byte	0x9c
 8210 0905 430A0000 		.4byte	0xa43
 8211 0909 22       		.uleb128 0x22
 8212 090a 130C0000 		.4byte	.LASF168
 8213 090e 01       		.byte	0x1
 8214 090f 7001     		.2byte	0x170
 8215 0911 97000000 		.4byte	0x97
 8216 0915 03       		.uleb128 0x3
 8217 0916 91       		.byte	0x91
 8218 0917 8F7B     		.sleb128 -625
 8219 0919 22       		.uleb128 0x22
 8220 091a 3C0D0000 		.4byte	.LASF169
 8221 091e 01       		.byte	0x1
 8222 091f 7001     		.2byte	0x170
 8223 0921 97000000 		.4byte	0x97
 8224 0925 03       		.uleb128 0x3
 8225 0926 91       		.byte	0x91
 8226 0927 8E7B     		.sleb128 -626
 8227 0929 22       		.uleb128 0x22
 8228 092a C20F0000 		.4byte	.LASF170
 8229 092e 01       		.byte	0x1
 8230 092f 7001     		.2byte	0x170
 8231 0931 430A0000 		.4byte	0xa43
 8232 0935 03       		.uleb128 0x3
 8233 0936 91       		.byte	0x91
 8234 0937 887B     		.sleb128 -632
 8235 0939 22       		.uleb128 0x22
 8236 093a 7D0A0000 		.4byte	.LASF171
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 193


 8237 093e 01       		.byte	0x1
 8238 093f 7001     		.2byte	0x170
 8239 0941 4E0A0000 		.4byte	0xa4e
 8240 0945 03       		.uleb128 0x3
 8241 0946 91       		.byte	0x91
 8242 0947 847B     		.sleb128 -636
 8243 0949 22       		.uleb128 0x22
 8244 094a 630C0000 		.4byte	.LASF172
 8245 094e 01       		.byte	0x1
 8246 094f 7001     		.2byte	0x170
 8247 0951 97000000 		.4byte	0x97
 8248 0955 02       		.uleb128 0x2
 8249 0956 91       		.byte	0x91
 8250 0957 00       		.sleb128 0
 8251 0958 23       		.uleb128 0x23
 8252 0959 69647800 		.ascii	"idx\000"
 8253 095d 01       		.byte	0x1
 8254 095e 7201     		.2byte	0x172
 8255 0960 97000000 		.4byte	0x97
 8256 0964 02       		.uleb128 0x2
 8257 0965 91       		.byte	0x91
 8258 0966 5F       		.sleb128 -33
 8259 0967 1F       		.uleb128 0x1f
 8260 0968 EC090000 		.4byte	.LASF173
 8261 096c 01       		.byte	0x1
 8262 096d 7301     		.2byte	0x173
 8263 096f A7060000 		.4byte	0x6a7
 8264 0973 02       		.uleb128 0x2
 8265 0974 91       		.byte	0x91
 8266 0975 50       		.sleb128 -48
 8267 0976 1F       		.uleb128 0x1f
 8268 0977 12000000 		.4byte	.LASF174
 8269 097b 01       		.byte	0x1
 8270 097c 7401     		.2byte	0x174
 8271 097e 97000000 		.4byte	0x97
 8272 0982 02       		.uleb128 0x2
 8273 0983 91       		.byte	0x91
 8274 0984 5E       		.sleb128 -34
 8275 0985 1F       		.uleb128 0x1f
 8276 0986 45110000 		.4byte	.LASF175
 8277 098a 01       		.byte	0x1
 8278 098b 7501     		.2byte	0x175
 8279 098d 590A0000 		.4byte	0xa59
 8280 0991 03       		.uleb128 0x3
 8281 0992 91       		.byte	0x91
 8282 0993 C87D     		.sleb128 -312
 8283 0995 1F       		.uleb128 0x1f
 8284 0996 58020000 		.4byte	.LASF176
 8285 099a 01       		.byte	0x1
 8286 099b 7601     		.2byte	0x176
 8287 099d 590A0000 		.4byte	0xa59
 8288 09a1 03       		.uleb128 0x3
 8289 09a2 91       		.byte	0x91
 8290 09a3 CC7B     		.sleb128 -564
 8291 09a5 1F       		.uleb128 0x1f
 8292 09a6 E00F0000 		.4byte	.LASF177
 8293 09aa 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 194


 8294 09ab 7801     		.2byte	0x178
 8295 09ad D3000000 		.4byte	0xd3
 8296 09b1 03       		.uleb128 0x3
 8297 09b2 91       		.byte	0x91
 8298 09b3 C87B     		.sleb128 -568
 8299 09b5 23       		.uleb128 0x23
 8300 09b6 6900     		.ascii	"i\000"
 8301 09b8 01       		.byte	0x1
 8302 09b9 7901     		.2byte	0x179
 8303 09bb 97000000 		.4byte	0x97
 8304 09bf 02       		.uleb128 0x2
 8305 09c0 91       		.byte	0x91
 8306 09c1 5D       		.sleb128 -35
 8307 09c2 23       		.uleb128 0x23
 8308 09c3 6A00     		.ascii	"j\000"
 8309 09c5 01       		.byte	0x1
 8310 09c6 7901     		.2byte	0x179
 8311 09c8 97000000 		.4byte	0x97
 8312 09cc 02       		.uleb128 0x2
 8313 09cd 91       		.byte	0x91
 8314 09ce 5C       		.sleb128 -36
 8315 09cf 1F       		.uleb128 0x1f
 8316 09d0 DA090000 		.4byte	.LASF178
 8317 09d4 01       		.byte	0x1
 8318 09d5 7A01     		.2byte	0x17a
 8319 09d7 97000000 		.4byte	0x97
 8320 09db 02       		.uleb128 0x2
 8321 09dc 91       		.byte	0x91
 8322 09dd 5B       		.sleb128 -37
 8323 09de 1F       		.uleb128 0x1f
 8324 09df AC0C0000 		.4byte	.LASF179
 8325 09e3 01       		.byte	0x1
 8326 09e4 7B01     		.2byte	0x17b
 8327 09e6 690A0000 		.4byte	0xa69
 8328 09ea 03       		.uleb128 0x3
 8329 09eb 91       		.byte	0x91
 8330 09ec 947B     		.sleb128 -620
 8331 09ee 1F       		.uleb128 0x1f
 8332 09ef 8E070000 		.4byte	.LASF180
 8333 09f3 01       		.byte	0x1
 8334 09f4 7D01     		.2byte	0x17d
 8335 09f6 A3000000 		.4byte	0xa3
 8336 09fa 02       		.uleb128 0x2
 8337 09fb 91       		.byte	0x91
 8338 09fc 4E       		.sleb128 -50
 8339 09fd 1F       		.uleb128 0x1f
 8340 09fe 6F050000 		.4byte	.LASF181
 8341 0a02 01       		.byte	0x1
 8342 0a03 7E01     		.2byte	0x17e
 8343 0a05 790A0000 		.4byte	0xa79
 8344 0a09 03       		.uleb128 0x3
 8345 0a0a 91       		.byte	0x91
 8346 0a0b 44       		.sleb128 -60
 8347 0a0c 06       		.byte	0x6
 8348 0a0d 24       		.uleb128 0x24
 8349 0a0e E4000000 		.4byte	.LBB22
 8350 0a12 2C000000 		.4byte	.LBE22-.LBB22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 195


 8351 0a16 290A0000 		.4byte	0xa29
 8352 0a1a 23       		.uleb128 0x23
 8353 0a1b 696900   		.ascii	"ii\000"
 8354 0a1e 01       		.byte	0x1
 8355 0a1f 7F01     		.2byte	0x17f
 8356 0a21 73000000 		.4byte	0x73
 8357 0a25 02       		.uleb128 0x2
 8358 0a26 91       		.byte	0x91
 8359 0a27 54       		.sleb128 -44
 8360 0a28 00       		.byte	0
 8361 0a29 1A       		.uleb128 0x1a
 8362 0a2a 2C010000 		.4byte	.LBB23
 8363 0a2e 80040000 		.4byte	.LBE23-.LBB23
 8364 0a32 23       		.uleb128 0x23
 8365 0a33 736F6400 		.ascii	"sod\000"
 8366 0a37 01       		.byte	0x1
 8367 0a38 8601     		.2byte	0x186
 8368 0a3a 97000000 		.4byte	0x97
 8369 0a3e 02       		.uleb128 0x2
 8370 0a3f 91       		.byte	0x91
 8371 0a40 43       		.sleb128 -61
 8372 0a41 00       		.byte	0
 8373 0a42 00       		.byte	0
 8374 0a43 07       		.uleb128 0x7
 8375 0a44 04       		.byte	0x4
 8376 0a45 490A0000 		.4byte	0xa49
 8377 0a49 08       		.uleb128 0x8
 8378 0a4a 31060000 		.4byte	0x631
 8379 0a4e 07       		.uleb128 0x7
 8380 0a4f 04       		.byte	0x4
 8381 0a50 540A0000 		.4byte	0xa54
 8382 0a54 08       		.uleb128 0x8
 8383 0a55 EC050000 		.4byte	0x5ec
 8384 0a59 0E       		.uleb128 0xe
 8385 0a5a ED000000 		.4byte	0xed
 8386 0a5e 690A0000 		.4byte	0xa69
 8387 0a62 0F       		.uleb128 0xf
 8388 0a63 0C010000 		.4byte	0x10c
 8389 0a67 F9       		.byte	0xf9
 8390 0a68 00       		.byte	0
 8391 0a69 0E       		.uleb128 0xe
 8392 0a6a ED000000 		.4byte	0xed
 8393 0a6e 790A0000 		.4byte	0xa79
 8394 0a72 0F       		.uleb128 0xf
 8395 0a73 0C010000 		.4byte	0x10c
 8396 0a77 31       		.byte	0x31
 8397 0a78 00       		.byte	0
 8398 0a79 0E       		.uleb128 0xe
 8399 0a7a 97000000 		.4byte	0x97
 8400 0a7e 8C0A0000 		.4byte	0xa8c
 8401 0a82 25       		.uleb128 0x25
 8402 0a83 0C010000 		.4byte	0x10c
 8403 0a87 03       		.uleb128 0x3
 8404 0a88 91       		.byte	0x91
 8405 0a89 48       		.sleb128 -56
 8406 0a8a 06       		.byte	0x6
 8407 0a8b 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 196


 8408 0a8c 1E       		.uleb128 0x1e
 8409 0a8d FD0C0000 		.4byte	.LASF182
 8410 0a91 01       		.byte	0x1
 8411 0a92 F101     		.2byte	0x1f1
 8412 0a94 00000000 		.4byte	.LFB69
 8413 0a98 34070000 		.4byte	.LFE69-.LFB69
 8414 0a9c 01       		.uleb128 0x1
 8415 0a9d 9C       		.byte	0x9c
 8416 0a9e 720B0000 		.4byte	0xb72
 8417 0aa2 22       		.uleb128 0x22
 8418 0aa3 60060000 		.4byte	.LASF183
 8419 0aa7 01       		.byte	0x1
 8420 0aa8 F101     		.2byte	0x1f1
 8421 0aaa A3000000 		.4byte	0xa3
 8422 0aae 03       		.uleb128 0x3
 8423 0aaf 91       		.byte	0x91
 8424 0ab0 AE7C     		.sleb128 -466
 8425 0ab2 22       		.uleb128 0x22
 8426 0ab3 630C0000 		.4byte	.LASF172
 8427 0ab7 01       		.byte	0x1
 8428 0ab8 F101     		.2byte	0x1f1
 8429 0aba 97000000 		.4byte	0x97
 8430 0abe 03       		.uleb128 0x3
 8431 0abf 91       		.byte	0x91
 8432 0ac0 AD7C     		.sleb128 -467
 8433 0ac2 23       		.uleb128 0x23
 8434 0ac3 6900     		.ascii	"i\000"
 8435 0ac5 01       		.byte	0x1
 8436 0ac6 F201     		.2byte	0x1f2
 8437 0ac8 97000000 		.4byte	0x97
 8438 0acc 02       		.uleb128 0x2
 8439 0acd 91       		.byte	0x91
 8440 0ace 6F       		.sleb128 -17
 8441 0acf 23       		.uleb128 0x23
 8442 0ad0 6A00     		.ascii	"j\000"
 8443 0ad2 01       		.byte	0x1
 8444 0ad3 F201     		.2byte	0x1f2
 8445 0ad5 97000000 		.4byte	0x97
 8446 0ad9 02       		.uleb128 0x2
 8447 0ada 91       		.byte	0x91
 8448 0adb 6E       		.sleb128 -18
 8449 0adc 1F       		.uleb128 0x1f
 8450 0add E6010000 		.4byte	.LASF184
 8451 0ae1 01       		.byte	0x1
 8452 0ae2 F401     		.2byte	0x1f4
 8453 0ae4 97000000 		.4byte	0x97
 8454 0ae8 02       		.uleb128 0x2
 8455 0ae9 91       		.byte	0x91
 8456 0aea 65       		.sleb128 -27
 8457 0aeb 1F       		.uleb128 0x1f
 8458 0aec 15030000 		.4byte	.LASF185
 8459 0af0 01       		.byte	0x1
 8460 0af1 F701     		.2byte	0x1f7
 8461 0af3 720B0000 		.4byte	0xb72
 8462 0af7 02       		.uleb128 0x2
 8463 0af8 91       		.byte	0x91
 8464 0af9 68       		.sleb128 -24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 197


 8465 0afa 1F       		.uleb128 0x1f
 8466 0afb AF050000 		.4byte	.LASF44
 8467 0aff 01       		.byte	0x1
 8468 0b00 FD01     		.2byte	0x1fd
 8469 0b02 EC050000 		.4byte	0x5ec
 8470 0b06 03       		.uleb128 0x3
 8471 0b07 91       		.byte	0x91
 8472 0b08 B87F     		.sleb128 -72
 8473 0b0a 1F       		.uleb128 0x1f
 8474 0b0b 7D0A0000 		.4byte	.LASF171
 8475 0b0f 01       		.byte	0x1
 8476 0b10 0002     		.2byte	0x200
 8477 0b12 880B0000 		.4byte	0xb88
 8478 0b16 03       		.uleb128 0x3
 8479 0b17 91       		.byte	0x91
 8480 0b18 B47E     		.sleb128 -204
 8481 0b1a 1F       		.uleb128 0x1f
 8482 0b1b 44010000 		.4byte	.LASF186
 8483 0b1f 01       		.byte	0x1
 8484 0b20 0802     		.2byte	0x208
 8485 0b22 97000000 		.4byte	0x97
 8486 0b26 02       		.uleb128 0x2
 8487 0b27 91       		.byte	0x91
 8488 0b28 67       		.sleb128 -25
 8489 0b29 1F       		.uleb128 0x1f
 8490 0b2a 29100000 		.4byte	.LASF187
 8491 0b2e 01       		.byte	0x1
 8492 0b2f 0A02     		.2byte	0x20a
 8493 0b31 31060000 		.4byte	0x631
 8494 0b35 03       		.uleb128 0x3
 8495 0b36 91       		.byte	0x91
 8496 0b37 A47E     		.sleb128 -220
 8497 0b39 1F       		.uleb128 0x1f
 8498 0b3a C20F0000 		.4byte	.LASF170
 8499 0b3e 01       		.byte	0x1
 8500 0b3f 0C02     		.2byte	0x20c
 8501 0b41 9D0B0000 		.4byte	0xb9d
 8502 0b45 03       		.uleb128 0x3
 8503 0b46 91       		.byte	0x91
 8504 0b47 B47C     		.sleb128 -460
 8505 0b49 1F       		.uleb128 0x1f
 8506 0b4a 2F0F0000 		.4byte	.LASF188
 8507 0b4e 01       		.byte	0x1
 8508 0b4f 2302     		.2byte	0x223
 8509 0b51 97000000 		.4byte	0x97
 8510 0b55 02       		.uleb128 0x2
 8511 0b56 91       		.byte	0x91
 8512 0b57 66       		.sleb128 -26
 8513 0b58 1A       		.uleb128 0x1a
 8514 0b59 94050000 		.4byte	.LBB24
 8515 0b5d 7E010000 		.4byte	.LBE24-.LBB24
 8516 0b61 23       		.uleb128 0x23
 8517 0b62 736F6400 		.ascii	"sod\000"
 8518 0b66 01       		.byte	0x1
 8519 0b67 3402     		.2byte	0x234
 8520 0b69 97000000 		.4byte	0x97
 8521 0b6d 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 198


 8522 0b6e 91       		.byte	0x91
 8523 0b6f 64       		.sleb128 -28
 8524 0b70 00       		.byte	0
 8525 0b71 00       		.byte	0
 8526 0b72 07       		.uleb128 0x7
 8527 0b73 04       		.byte	0x4
 8528 0b74 7D050000 		.4byte	0x57d
 8529 0b78 0E       		.uleb128 0xe
 8530 0b79 540A0000 		.4byte	0xa54
 8531 0b7d 880B0000 		.4byte	0xb88
 8532 0b81 0F       		.uleb128 0xf
 8533 0b82 0C010000 		.4byte	0x10c
 8534 0b86 02       		.byte	0x2
 8535 0b87 00       		.byte	0
 8536 0b88 08       		.uleb128 0x8
 8537 0b89 780B0000 		.4byte	0xb78
 8538 0b8d 0E       		.uleb128 0xe
 8539 0b8e 490A0000 		.4byte	0xa49
 8540 0b92 9D0B0000 		.4byte	0xb9d
 8541 0b96 0F       		.uleb128 0xf
 8542 0b97 0C010000 		.4byte	0x10c
 8543 0b9b 0E       		.byte	0xe
 8544 0b9c 00       		.byte	0
 8545 0b9d 08       		.uleb128 0x8
 8546 0b9e 8D0B0000 		.4byte	0xb8d
 8547 0ba2 1E       		.uleb128 0x1e
 8548 0ba3 A1030000 		.4byte	.LASF189
 8549 0ba7 01       		.byte	0x1
 8550 0ba8 5502     		.2byte	0x255
 8551 0baa 00000000 		.4byte	.LFB70
 8552 0bae 34010000 		.4byte	.LFE70-.LFB70
 8553 0bb2 01       		.uleb128 0x1
 8554 0bb3 9C       		.byte	0x9c
 8555 0bb4 000C0000 		.4byte	0xc00
 8556 0bb8 22       		.uleb128 0x22
 8557 0bb9 60060000 		.4byte	.LASF183
 8558 0bbd 01       		.byte	0x1
 8559 0bbe 5502     		.2byte	0x255
 8560 0bc0 A3000000 		.4byte	0xa3
 8561 0bc4 02       		.uleb128 0x2
 8562 0bc5 91       		.byte	0x91
 8563 0bc6 6E       		.sleb128 -18
 8564 0bc7 22       		.uleb128 0x22
 8565 0bc8 C20F0000 		.4byte	.LASF170
 8566 0bcc 01       		.byte	0x1
 8567 0bcd 5502     		.2byte	0x255
 8568 0bcf 430A0000 		.4byte	0xa43
 8569 0bd3 02       		.uleb128 0x2
 8570 0bd4 91       		.byte	0x91
 8571 0bd5 68       		.sleb128 -24
 8572 0bd6 23       		.uleb128 0x23
 8573 0bd7 736F6400 		.ascii	"sod\000"
 8574 0bdb 01       		.byte	0x1
 8575 0bdc 5602     		.2byte	0x256
 8576 0bde 97000000 		.4byte	0x97
 8577 0be2 02       		.uleb128 0x2
 8578 0be3 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 199


 8579 0be4 75       		.sleb128 -11
 8580 0be5 23       		.uleb128 0x23
 8581 0be6 6900     		.ascii	"i\000"
 8582 0be8 01       		.byte	0x1
 8583 0be9 5802     		.2byte	0x258
 8584 0beb 97000000 		.4byte	0x97
 8585 0bef 02       		.uleb128 0x2
 8586 0bf0 91       		.byte	0x91
 8587 0bf1 77       		.sleb128 -9
 8588 0bf2 23       		.uleb128 0x23
 8589 0bf3 6A00     		.ascii	"j\000"
 8590 0bf5 01       		.byte	0x1
 8591 0bf6 5802     		.2byte	0x258
 8592 0bf8 97000000 		.4byte	0x97
 8593 0bfc 02       		.uleb128 0x2
 8594 0bfd 91       		.byte	0x91
 8595 0bfe 76       		.sleb128 -10
 8596 0bff 00       		.byte	0
 8597 0c00 26       		.uleb128 0x26
 8598 0c01 E9070000 		.4byte	.LASF190
 8599 0c05 01       		.byte	0x1
 8600 0c06 7C02     		.2byte	0x27c
 8601 0c08 00000000 		.4byte	.LFB71
 8602 0c0c 14000000 		.4byte	.LFE71-.LFB71
 8603 0c10 01       		.uleb128 0x1
 8604 0c11 9C       		.byte	0x9c
 8605 0c12 260C0000 		.4byte	0xc26
 8606 0c16 22       		.uleb128 0x22
 8607 0c17 60060000 		.4byte	.LASF183
 8608 0c1b 01       		.byte	0x1
 8609 0c1c 7C02     		.2byte	0x27c
 8610 0c1e A3000000 		.4byte	0xa3
 8611 0c22 02       		.uleb128 0x2
 8612 0c23 91       		.byte	0x91
 8613 0c24 76       		.sleb128 -10
 8614 0c25 00       		.byte	0
 8615 0c26 27       		.uleb128 0x27
 8616 0c27 F5020000 		.4byte	.LASF228
 8617 0c2b 01       		.byte	0x1
 8618 0c2c 8402     		.2byte	0x284
 8619 0c2e 00000000 		.4byte	.LFB72
 8620 0c32 0C000000 		.4byte	.LFE72-.LFB72
 8621 0c36 01       		.uleb128 0x1
 8622 0c37 9C       		.byte	0x9c
 8623 0c38 1E       		.uleb128 0x1e
 8624 0c39 C60C0000 		.4byte	.LASF191
 8625 0c3d 01       		.byte	0x1
 8626 0c3e 8802     		.2byte	0x288
 8627 0c40 00000000 		.4byte	.LFB73
 8628 0c44 B8030000 		.4byte	.LFE73-.LFB73
 8629 0c48 01       		.uleb128 0x1
 8630 0c49 9C       		.byte	0x9c
 8631 0c4a 840D0000 		.4byte	0xd84
 8632 0c4e 22       		.uleb128 0x22
 8633 0c4f 130C0000 		.4byte	.LASF168
 8634 0c53 01       		.byte	0x1
 8635 0c54 8802     		.2byte	0x288
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 200


 8636 0c56 97000000 		.4byte	0x97
 8637 0c5a 03       		.uleb128 0x3
 8638 0c5b 91       		.byte	0x91
 8639 0c5c 976B     		.sleb128 -2665
 8640 0c5e 22       		.uleb128 0x22
 8641 0c5f 3C0D0000 		.4byte	.LASF169
 8642 0c63 01       		.byte	0x1
 8643 0c64 8802     		.2byte	0x288
 8644 0c66 97000000 		.4byte	0x97
 8645 0c6a 03       		.uleb128 0x3
 8646 0c6b 91       		.byte	0x91
 8647 0c6c 966B     		.sleb128 -2666
 8648 0c6e 22       		.uleb128 0x22
 8649 0c6f C20F0000 		.4byte	.LASF170
 8650 0c73 01       		.byte	0x1
 8651 0c74 8802     		.2byte	0x288
 8652 0c76 430A0000 		.4byte	0xa43
 8653 0c7a 03       		.uleb128 0x3
 8654 0c7b 91       		.byte	0x91
 8655 0c7c 906B     		.sleb128 -2672
 8656 0c7e 22       		.uleb128 0x22
 8657 0c7f 7D0A0000 		.4byte	.LASF171
 8658 0c83 01       		.byte	0x1
 8659 0c84 8802     		.2byte	0x288
 8660 0c86 4E0A0000 		.4byte	0xa4e
 8661 0c8a 03       		.uleb128 0x3
 8662 0c8b 91       		.byte	0x91
 8663 0c8c 8C6B     		.sleb128 -2676
 8664 0c8e 1F       		.uleb128 0x1f
 8665 0c8f 070C0000 		.4byte	.LASF192
 8666 0c93 01       		.byte	0x1
 8667 0c94 8A02     		.2byte	0x28a
 8668 0c96 840D0000 		.4byte	0xd84
 8669 0c9a 03       		.uleb128 0x3
 8670 0c9b 91       		.byte	0x91
 8671 0c9c 806C     		.sleb128 -2560
 8672 0c9e 23       		.uleb128 0x23
 8673 0c9f 6900     		.ascii	"i\000"
 8674 0ca1 01       		.byte	0x1
 8675 0ca2 8B02     		.2byte	0x28b
 8676 0ca4 73000000 		.4byte	0x73
 8677 0ca8 02       		.uleb128 0x2
 8678 0ca9 91       		.byte	0x91
 8679 0caa 6C       		.sleb128 -20
 8680 0cab 23       		.uleb128 0x23
 8681 0cac 69647800 		.ascii	"idx\000"
 8682 0cb0 01       		.byte	0x1
 8683 0cb1 8C02     		.2byte	0x28c
 8684 0cb3 73000000 		.4byte	0x73
 8685 0cb7 02       		.uleb128 0x2
 8686 0cb8 91       		.byte	0x91
 8687 0cb9 68       		.sleb128 -24
 8688 0cba 1F       		.uleb128 0x1f
 8689 0cbb E00F0000 		.4byte	.LASF177
 8690 0cbf 01       		.byte	0x1
 8691 0cc0 8D02     		.2byte	0x28d
 8692 0cc2 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 201


 8693 0cc6 02       		.uleb128 0x2
 8694 0cc7 91       		.byte	0x91
 8695 0cc8 48       		.sleb128 -56
 8696 0cc9 1F       		.uleb128 0x1f
 8697 0cca 510C0000 		.4byte	.LASF193
 8698 0cce 01       		.byte	0x1
 8699 0ccf 8E02     		.2byte	0x28e
 8700 0cd1 AF000000 		.4byte	0xaf
 8701 0cd5 02       		.uleb128 0x2
 8702 0cd6 91       		.byte	0x91
 8703 0cd7 4C       		.sleb128 -52
 8704 0cd8 1F       		.uleb128 0x1f
 8705 0cd9 B80F0000 		.4byte	.LASF194
 8706 0cdd 01       		.byte	0x1
 8707 0cde 8F02     		.2byte	0x28f
 8708 0ce0 DF000000 		.4byte	0xdf
 8709 0ce4 02       		.uleb128 0x2
 8710 0ce5 91       		.byte	0x91
 8711 0ce6 44       		.sleb128 -60
 8712 0ce7 1F       		.uleb128 0x1f
 8713 0ce8 0F0D0000 		.4byte	.LASF195
 8714 0cec 01       		.byte	0x1
 8715 0ced 9002     		.2byte	0x290
 8716 0cef 97000000 		.4byte	0x97
 8717 0cf3 02       		.uleb128 0x2
 8718 0cf4 91       		.byte	0x91
 8719 0cf5 57       		.sleb128 -41
 8720 0cf6 1F       		.uleb128 0x1f
 8721 0cf7 AA090000 		.4byte	.LASF196
 8722 0cfb 01       		.byte	0x1
 8723 0cfc 9102     		.2byte	0x291
 8724 0cfe BB000000 		.4byte	0xbb
 8725 0d02 02       		.uleb128 0x2
 8726 0d03 91       		.byte	0x91
 8727 0d04 56       		.sleb128 -42
 8728 0d05 1F       		.uleb128 0x1f
 8729 0d06 FE0E0000 		.4byte	.LASF197
 8730 0d0a 01       		.byte	0x1
 8731 0d0b 9202     		.2byte	0x292
 8732 0d0d C7000000 		.4byte	0xc7
 8733 0d11 02       		.uleb128 0x2
 8734 0d12 91       		.byte	0x91
 8735 0d13 54       		.sleb128 -44
 8736 0d14 1F       		.uleb128 0x1f
 8737 0d15 290B0000 		.4byte	.LASF198
 8738 0d19 01       		.byte	0x1
 8739 0d1a 9302     		.2byte	0x293
 8740 0d1c A3000000 		.4byte	0xa3
 8741 0d20 02       		.uleb128 0x2
 8742 0d21 91       		.byte	0x91
 8743 0d22 52       		.sleb128 -46
 8744 0d23 1F       		.uleb128 0x1f
 8745 0d24 15030000 		.4byte	.LASF185
 8746 0d28 01       		.byte	0x1
 8747 0d29 9402     		.2byte	0x294
 8748 0d2b 720B0000 		.4byte	0xb72
 8749 0d2f 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 202


 8750 0d30 91       		.byte	0x91
 8751 0d31 64       		.sleb128 -28
 8752 0d32 1A       		.uleb128 0x1a
 8753 0d33 54000000 		.4byte	.LBB25
 8754 0d37 4A030000 		.4byte	.LBE25-.LBB25
 8755 0d3b 1F       		.uleb128 0x1f
 8756 0d3c EC090000 		.4byte	.LASF173
 8757 0d40 01       		.byte	0x1
 8758 0d41 9702     		.2byte	0x297
 8759 0d43 A7060000 		.4byte	0x6a7
 8760 0d47 02       		.uleb128 0x2
 8761 0d48 91       		.byte	0x91
 8762 0d49 60       		.sleb128 -32
 8763 0d4a 1F       		.uleb128 0x1f
 8764 0d4b E0010000 		.4byte	.LASF199
 8765 0d4f 01       		.byte	0x1
 8766 0d50 9802     		.2byte	0x298
 8767 0d52 A7060000 		.4byte	0x6a7
 8768 0d56 02       		.uleb128 0x2
 8769 0d57 91       		.byte	0x91
 8770 0d58 58       		.sleb128 -40
 8771 0d59 23       		.uleb128 0x23
 8772 0d5a 73747200 		.ascii	"str\000"
 8773 0d5e 01       		.byte	0x1
 8774 0d5f 9902     		.2byte	0x299
 8775 0d61 950D0000 		.4byte	0xd95
 8776 0d65 03       		.uleb128 0x3
 8777 0d66 91       		.byte	0x91
 8778 0d67 9C6B     		.sleb128 -2660
 8779 0d69 1A       		.uleb128 0x1a
 8780 0d6a 9A000000 		.4byte	.LBB26
 8781 0d6e DE020000 		.4byte	.LBE26-.LBB26
 8782 0d72 23       		.uleb128 0x23
 8783 0d73 736F6400 		.ascii	"sod\000"
 8784 0d77 01       		.byte	0x1
 8785 0d78 A202     		.2byte	0x2a2
 8786 0d7a 97000000 		.4byte	0x97
 8787 0d7e 02       		.uleb128 0x2
 8788 0d7f 91       		.byte	0x91
 8789 0d80 5F       		.sleb128 -33
 8790 0d81 00       		.byte	0
 8791 0d82 00       		.byte	0
 8792 0d83 00       		.byte	0
 8793 0d84 0E       		.uleb128 0xe
 8794 0d85 ED000000 		.4byte	0xed
 8795 0d89 950D0000 		.4byte	0xd95
 8796 0d8d 20       		.uleb128 0x20
 8797 0d8e 0C010000 		.4byte	0x10c
 8798 0d92 C309     		.2byte	0x9c3
 8799 0d94 00       		.byte	0
 8800 0d95 0E       		.uleb128 0xe
 8801 0d96 ED000000 		.4byte	0xed
 8802 0d9a A50D0000 		.4byte	0xda5
 8803 0d9e 0F       		.uleb128 0xf
 8804 0d9f 0C010000 		.4byte	0x10c
 8805 0da3 63       		.byte	0x63
 8806 0da4 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 203


 8807 0da5 1E       		.uleb128 0x1e
 8808 0da6 2F010000 		.4byte	.LASF200
 8809 0daa 01       		.byte	0x1
 8810 0dab F002     		.2byte	0x2f0
 8811 0dad 00000000 		.4byte	.LFB74
 8812 0db1 14020000 		.4byte	.LFE74-.LFB74
 8813 0db5 01       		.uleb128 0x1
 8814 0db6 9C       		.byte	0x9c
 8815 0db7 020E0000 		.4byte	0xe02
 8816 0dbb 22       		.uleb128 0x22
 8817 0dbc 070C0000 		.4byte	.LASF192
 8818 0dc0 01       		.byte	0x1
 8819 0dc1 F002     		.2byte	0x2f0
 8820 0dc3 13010000 		.4byte	0x113
 8821 0dc7 03       		.uleb128 0x3
 8822 0dc8 91       		.byte	0x91
 8823 0dc9 F47E     		.sleb128 -140
 8824 0dcb 23       		.uleb128 0x23
 8825 0dcc 6900     		.ascii	"i\000"
 8826 0dce 01       		.byte	0x1
 8827 0dcf F302     		.2byte	0x2f3
 8828 0dd1 73000000 		.4byte	0x73
 8829 0dd5 02       		.uleb128 0x2
 8830 0dd6 91       		.byte	0x91
 8831 0dd7 64       		.sleb128 -28
 8832 0dd8 1F       		.uleb128 0x1f
 8833 0dd9 15030000 		.4byte	.LASF185
 8834 0ddd 01       		.byte	0x1
 8835 0dde F402     		.2byte	0x2f4
 8836 0de0 720B0000 		.4byte	0xb72
 8837 0de4 02       		.uleb128 0x2
 8838 0de5 91       		.byte	0x91
 8839 0de6 60       		.sleb128 -32
 8840 0de7 1A       		.uleb128 0x1a
 8841 0de8 20000000 		.4byte	.LBB27
 8842 0dec AC010000 		.4byte	.LBE27-.LBB27
 8843 0df0 23       		.uleb128 0x23
 8844 0df1 73747200 		.ascii	"str\000"
 8845 0df5 01       		.byte	0x1
 8846 0df6 F802     		.2byte	0x2f8
 8847 0df8 950D0000 		.4byte	0xd95
 8848 0dfc 03       		.uleb128 0x3
 8849 0dfd 91       		.byte	0x91
 8850 0dfe FC7E     		.sleb128 -132
 8851 0e00 00       		.byte	0
 8852 0e01 00       		.byte	0
 8853 0e02 26       		.uleb128 0x26
 8854 0e03 690D0000 		.4byte	.LASF201
 8855 0e07 01       		.byte	0x1
 8856 0e08 1903     		.2byte	0x319
 8857 0e0a 00000000 		.4byte	.LFB75
 8858 0e0e 12000000 		.4byte	.LFE75-.LFB75
 8859 0e12 01       		.uleb128 0x1
 8860 0e13 9C       		.byte	0x9c
 8861 0e14 280E0000 		.4byte	0xe28
 8862 0e18 22       		.uleb128 0x22
 8863 0e19 070C0000 		.4byte	.LASF192
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 204


 8864 0e1d 01       		.byte	0x1
 8865 0e1e 1903     		.2byte	0x319
 8866 0e20 13010000 		.4byte	0x113
 8867 0e24 02       		.uleb128 0x2
 8868 0e25 91       		.byte	0x91
 8869 0e26 74       		.sleb128 -12
 8870 0e27 00       		.byte	0
 8871 0e28 26       		.uleb128 0x26
 8872 0e29 0D0B0000 		.4byte	.LASF202
 8873 0e2d 01       		.byte	0x1
 8874 0e2e 2103     		.2byte	0x321
 8875 0e30 00000000 		.4byte	.LFB76
 8876 0e34 12000000 		.4byte	.LFE76-.LFB76
 8877 0e38 01       		.uleb128 0x1
 8878 0e39 9C       		.byte	0x9c
 8879 0e3a 4E0E0000 		.4byte	0xe4e
 8880 0e3e 22       		.uleb128 0x22
 8881 0e3f 070C0000 		.4byte	.LASF192
 8882 0e43 01       		.byte	0x1
 8883 0e44 2103     		.2byte	0x321
 8884 0e46 13010000 		.4byte	0x113
 8885 0e4a 02       		.uleb128 0x2
 8886 0e4b 91       		.byte	0x91
 8887 0e4c 74       		.sleb128 -12
 8888 0e4d 00       		.byte	0
 8889 0e4e 26       		.uleb128 0x26
 8890 0e4f 530D0000 		.4byte	.LASF203
 8891 0e53 01       		.byte	0x1
 8892 0e54 2903     		.2byte	0x329
 8893 0e56 00000000 		.4byte	.LFB77
 8894 0e5a 12000000 		.4byte	.LFE77-.LFB77
 8895 0e5e 01       		.uleb128 0x1
 8896 0e5f 9C       		.byte	0x9c
 8897 0e60 740E0000 		.4byte	0xe74
 8898 0e64 22       		.uleb128 0x22
 8899 0e65 070C0000 		.4byte	.LASF192
 8900 0e69 01       		.byte	0x1
 8901 0e6a 2903     		.2byte	0x329
 8902 0e6c 13010000 		.4byte	0x113
 8903 0e70 02       		.uleb128 0x2
 8904 0e71 91       		.byte	0x91
 8905 0e72 74       		.sleb128 -12
 8906 0e73 00       		.byte	0
 8907 0e74 26       		.uleb128 0x26
 8908 0e75 200A0000 		.4byte	.LASF204
 8909 0e79 01       		.byte	0x1
 8910 0e7a 3103     		.2byte	0x331
 8911 0e7c 00000000 		.4byte	.LFB78
 8912 0e80 12000000 		.4byte	.LFE78-.LFB78
 8913 0e84 01       		.uleb128 0x1
 8914 0e85 9C       		.byte	0x9c
 8915 0e86 9A0E0000 		.4byte	0xe9a
 8916 0e8a 22       		.uleb128 0x22
 8917 0e8b 070C0000 		.4byte	.LASF192
 8918 0e8f 01       		.byte	0x1
 8919 0e90 3103     		.2byte	0x331
 8920 0e92 13010000 		.4byte	0x113
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 205


 8921 0e96 02       		.uleb128 0x2
 8922 0e97 91       		.byte	0x91
 8923 0e98 74       		.sleb128 -12
 8924 0e99 00       		.byte	0
 8925 0e9a 26       		.uleb128 0x26
 8926 0e9b 7E0D0000 		.4byte	.LASF205
 8927 0e9f 01       		.byte	0x1
 8928 0ea0 3803     		.2byte	0x338
 8929 0ea2 00000000 		.4byte	.LFB79
 8930 0ea6 12000000 		.4byte	.LFE79-.LFB79
 8931 0eaa 01       		.uleb128 0x1
 8932 0eab 9C       		.byte	0x9c
 8933 0eac C00E0000 		.4byte	0xec0
 8934 0eb0 22       		.uleb128 0x22
 8935 0eb1 070C0000 		.4byte	.LASF192
 8936 0eb5 01       		.byte	0x1
 8937 0eb6 3803     		.2byte	0x338
 8938 0eb8 13010000 		.4byte	0x113
 8939 0ebc 02       		.uleb128 0x2
 8940 0ebd 91       		.byte	0x91
 8941 0ebe 74       		.sleb128 -12
 8942 0ebf 00       		.byte	0
 8943 0ec0 26       		.uleb128 0x26
 8944 0ec1 3C030000 		.4byte	.LASF206
 8945 0ec5 01       		.byte	0x1
 8946 0ec6 4003     		.2byte	0x340
 8947 0ec8 00000000 		.4byte	.LFB80
 8948 0ecc 12000000 		.4byte	.LFE80-.LFB80
 8949 0ed0 01       		.uleb128 0x1
 8950 0ed1 9C       		.byte	0x9c
 8951 0ed2 E60E0000 		.4byte	0xee6
 8952 0ed6 22       		.uleb128 0x22
 8953 0ed7 070C0000 		.4byte	.LASF192
 8954 0edb 01       		.byte	0x1
 8955 0edc 4003     		.2byte	0x340
 8956 0ede 13010000 		.4byte	0x113
 8957 0ee2 02       		.uleb128 0x2
 8958 0ee3 91       		.byte	0x91
 8959 0ee4 74       		.sleb128 -12
 8960 0ee5 00       		.byte	0
 8961 0ee6 26       		.uleb128 0x26
 8962 0ee7 24110000 		.4byte	.LASF207
 8963 0eeb 01       		.byte	0x1
 8964 0eec 4903     		.2byte	0x349
 8965 0eee 00000000 		.4byte	.LFB81
 8966 0ef2 12000000 		.4byte	.LFE81-.LFB81
 8967 0ef6 01       		.uleb128 0x1
 8968 0ef7 9C       		.byte	0x9c
 8969 0ef8 0C0F0000 		.4byte	0xf0c
 8970 0efc 22       		.uleb128 0x22
 8971 0efd 070C0000 		.4byte	.LASF192
 8972 0f01 01       		.byte	0x1
 8973 0f02 4903     		.2byte	0x349
 8974 0f04 13010000 		.4byte	0x113
 8975 0f08 02       		.uleb128 0x2
 8976 0f09 91       		.byte	0x91
 8977 0f0a 74       		.sleb128 -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 206


 8978 0f0b 00       		.byte	0
 8979 0f0c 1E       		.uleb128 0x1e
 8980 0f0d EC0C0000 		.4byte	.LASF208
 8981 0f11 01       		.byte	0x1
 8982 0f12 5103     		.2byte	0x351
 8983 0f14 00000000 		.4byte	.LFB82
 8984 0f18 84000000 		.4byte	.LFE82-.LFB82
 8985 0f1c 01       		.uleb128 0x1
 8986 0f1d 9C       		.byte	0x9c
 8987 0f1e 5F0F0000 		.4byte	0xf5f
 8988 0f22 22       		.uleb128 0x22
 8989 0f23 6F050000 		.4byte	.LASF181
 8990 0f27 01       		.byte	0x1
 8991 0f28 5103     		.2byte	0x351
 8992 0f2a A7060000 		.4byte	0x6a7
 8993 0f2e 02       		.uleb128 0x2
 8994 0f2f 91       		.byte	0x91
 8995 0f30 6C       		.sleb128 -20
 8996 0f31 22       		.uleb128 0x22
 8997 0f32 8E070000 		.4byte	.LASF180
 8998 0f36 01       		.byte	0x1
 8999 0f37 5103     		.2byte	0x351
 9000 0f39 A3000000 		.4byte	0xa3
 9001 0f3d 02       		.uleb128 0x2
 9002 0f3e 91       		.byte	0x91
 9003 0f3f 6A       		.sleb128 -22
 9004 0f40 22       		.uleb128 0x22
 9005 0f41 9C0D0000 		.4byte	.LASF209
 9006 0f45 01       		.byte	0x1
 9007 0f46 5103     		.2byte	0x351
 9008 0f48 97000000 		.4byte	0x97
 9009 0f4c 02       		.uleb128 0x2
 9010 0f4d 91       		.byte	0x91
 9011 0f4e 69       		.sleb128 -23
 9012 0f4f 1F       		.uleb128 0x1f
 9013 0f50 60060000 		.4byte	.LASF183
 9014 0f54 01       		.byte	0x1
 9015 0f55 5303     		.2byte	0x353
 9016 0f57 A3000000 		.4byte	0xa3
 9017 0f5b 02       		.uleb128 0x2
 9018 0f5c 91       		.byte	0x91
 9019 0f5d 76       		.sleb128 -10
 9020 0f5e 00       		.byte	0
 9021 0f5f 1E       		.uleb128 0x1e
 9022 0f60 85050000 		.4byte	.LASF210
 9023 0f64 01       		.byte	0x1
 9024 0f65 6D03     		.2byte	0x36d
 9025 0f67 00000000 		.4byte	.LFB83
 9026 0f6b 88000000 		.4byte	.LFE83-.LFB83
 9027 0f6f 01       		.uleb128 0x1
 9028 0f70 9C       		.byte	0x9c
 9029 0f71 A30F0000 		.4byte	0xfa3
 9030 0f75 22       		.uleb128 0x22
 9031 0f76 6F050000 		.4byte	.LASF181
 9032 0f7a 01       		.byte	0x1
 9033 0f7b 6D03     		.2byte	0x36d
 9034 0f7d A7060000 		.4byte	0x6a7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 207


 9035 0f81 02       		.uleb128 0x2
 9036 0f82 91       		.byte	0x91
 9037 0f83 6C       		.sleb128 -20
 9038 0f84 22       		.uleb128 0x22
 9039 0f85 8E070000 		.4byte	.LASF180
 9040 0f89 01       		.byte	0x1
 9041 0f8a 6D03     		.2byte	0x36d
 9042 0f8c A3000000 		.4byte	0xa3
 9043 0f90 02       		.uleb128 0x2
 9044 0f91 91       		.byte	0x91
 9045 0f92 6A       		.sleb128 -22
 9046 0f93 1F       		.uleb128 0x1f
 9047 0f94 60060000 		.4byte	.LASF183
 9048 0f98 01       		.byte	0x1
 9049 0f99 6F03     		.2byte	0x36f
 9050 0f9b A3000000 		.4byte	0xa3
 9051 0f9f 02       		.uleb128 0x2
 9052 0fa0 91       		.byte	0x91
 9053 0fa1 76       		.sleb128 -10
 9054 0fa2 00       		.byte	0
 9055 0fa3 1E       		.uleb128 0x1e
 9056 0fa4 9B0A0000 		.4byte	.LASF211
 9057 0fa8 01       		.byte	0x1
 9058 0fa9 8A03     		.2byte	0x38a
 9059 0fab 00000000 		.4byte	.LFB84
 9060 0faf A0000000 		.4byte	.LFE84-.LFB84
 9061 0fb3 01       		.uleb128 0x1
 9062 0fb4 9C       		.byte	0x9c
 9063 0fb5 F60F0000 		.4byte	0xff6
 9064 0fb9 22       		.uleb128 0x22
 9065 0fba 6F050000 		.4byte	.LASF181
 9066 0fbe 01       		.byte	0x1
 9067 0fbf 8A03     		.2byte	0x38a
 9068 0fc1 A7060000 		.4byte	0x6a7
 9069 0fc5 02       		.uleb128 0x2
 9070 0fc6 91       		.byte	0x91
 9071 0fc7 74       		.sleb128 -12
 9072 0fc8 22       		.uleb128 0x22
 9073 0fc9 8E070000 		.4byte	.LASF180
 9074 0fcd 01       		.byte	0x1
 9075 0fce 8A03     		.2byte	0x38a
 9076 0fd0 A3000000 		.4byte	0xa3
 9077 0fd4 02       		.uleb128 0x2
 9078 0fd5 91       		.byte	0x91
 9079 0fd6 72       		.sleb128 -14
 9080 0fd7 28       		.uleb128 0x28
 9081 0fd8 696400   		.ascii	"id\000"
 9082 0fdb 01       		.byte	0x1
 9083 0fdc 8A03     		.2byte	0x38a
 9084 0fde 97000000 		.4byte	0x97
 9085 0fe2 02       		.uleb128 0x2
 9086 0fe3 91       		.byte	0x91
 9087 0fe4 71       		.sleb128 -15
 9088 0fe5 23       		.uleb128 0x23
 9089 0fe6 6900     		.ascii	"i\000"
 9090 0fe8 01       		.byte	0x1
 9091 0fe9 8C03     		.2byte	0x38c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 208


 9092 0feb A3000000 		.4byte	0xa3
 9093 0fef 05       		.uleb128 0x5
 9094 0ff0 03       		.byte	0x3
 9095 0ff1 00000000 		.4byte	i.10044
 9096 0ff5 00       		.byte	0
 9097 0ff6 21       		.uleb128 0x21
 9098 0ff7 3E100000 		.4byte	.LASF213
 9099 0ffb 01       		.byte	0x1
 9100 0ffc A803     		.2byte	0x3a8
 9101 0ffe 97000000 		.4byte	0x97
 9102 1002 00000000 		.4byte	.LFB85
 9103 1006 3E000000 		.4byte	.LFE85-.LFB85
 9104 100a 01       		.uleb128 0x1
 9105 100b 9C       		.byte	0x9c
 9106 100c 4B100000 		.4byte	0x104b
 9107 1010 22       		.uleb128 0x22
 9108 1011 F9090000 		.4byte	.LASF214
 9109 1015 01       		.byte	0x1
 9110 1016 A803     		.2byte	0x3a8
 9111 1018 A7060000 		.4byte	0x6a7
 9112 101c 02       		.uleb128 0x2
 9113 101d 91       		.byte	0x91
 9114 101e 6C       		.sleb128 -20
 9115 101f 22       		.uleb128 0x22
 9116 1020 36050000 		.4byte	.LASF215
 9117 1024 01       		.byte	0x1
 9118 1025 A803     		.2byte	0x3a8
 9119 1027 97000000 		.4byte	0x97
 9120 102b 02       		.uleb128 0x2
 9121 102c 91       		.byte	0x91
 9122 102d 6B       		.sleb128 -21
 9123 102e 23       		.uleb128 0x23
 9124 102f 6900     		.ascii	"i\000"
 9125 1031 01       		.byte	0x1
 9126 1032 AA03     		.2byte	0x3aa
 9127 1034 97000000 		.4byte	0x97
 9128 1038 02       		.uleb128 0x2
 9129 1039 91       		.byte	0x91
 9130 103a 77       		.sleb128 -9
 9131 103b 1F       		.uleb128 0x1f
 9132 103c AB0B0000 		.4byte	.LASF216
 9133 1040 01       		.byte	0x1
 9134 1041 AB03     		.2byte	0x3ab
 9135 1043 97000000 		.4byte	0x97
 9136 1047 02       		.uleb128 0x2
 9137 1048 91       		.byte	0x91
 9138 1049 76       		.sleb128 -10
 9139 104a 00       		.byte	0
 9140 104b 1E       		.uleb128 0x1e
 9141 104c CD0F0000 		.4byte	.LASF217
 9142 1050 01       		.byte	0x1
 9143 1051 B803     		.2byte	0x3b8
 9144 1053 00000000 		.4byte	.LFB86
 9145 1057 2E000000 		.4byte	.LFE86-.LFB86
 9146 105b 01       		.uleb128 0x1
 9147 105c 9C       		.byte	0x9c
 9148 105d 8F100000 		.4byte	0x108f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 209


 9149 1061 22       		.uleb128 0x22
 9150 1062 B1040000 		.4byte	.LASF218
 9151 1066 01       		.byte	0x1
 9152 1067 B803     		.2byte	0x3b8
 9153 1069 97000000 		.4byte	0x97
 9154 106d 02       		.uleb128 0x2
 9155 106e 91       		.byte	0x91
 9156 106f 6F       		.sleb128 -17
 9157 1070 1F       		.uleb128 0x1f
 9158 1071 8E070000 		.4byte	.LASF180
 9159 1075 01       		.byte	0x1
 9160 1076 B903     		.2byte	0x3b9
 9161 1078 73000000 		.4byte	0x73
 9162 107c 02       		.uleb128 0x2
 9163 107d 91       		.byte	0x91
 9164 107e 74       		.sleb128 -12
 9165 107f 1F       		.uleb128 0x1f
 9166 1080 6F050000 		.4byte	.LASF181
 9167 1084 01       		.byte	0x1
 9168 1085 BA03     		.2byte	0x3ba
 9169 1087 D7040000 		.4byte	0x4d7
 9170 108b 02       		.uleb128 0x2
 9171 108c 91       		.byte	0x91
 9172 108d 70       		.sleb128 -16
 9173 108e 00       		.byte	0
 9174 108f 29       		.uleb128 0x29
 9175 1090 F4030000 		.4byte	.LASF219
 9176 1094 01       		.byte	0x1
 9177 1095 C703     		.2byte	0x3c7
 9178 1097 97000000 		.4byte	0x97
 9179 109b 00000000 		.4byte	.LFB87
 9180 109f 90000000 		.4byte	.LFE87-.LFB87
 9181 10a3 01       		.uleb128 0x1
 9182 10a4 9C       		.byte	0x9c
 9183 10a5 F3100000 		.4byte	0x10f3
 9184 10a9 22       		.uleb128 0x22
 9185 10aa 3F070000 		.4byte	.LASF220
 9186 10ae 01       		.byte	0x1
 9187 10af C703     		.2byte	0x3c7
 9188 10b1 73000000 		.4byte	0x73
 9189 10b5 02       		.uleb128 0x2
 9190 10b6 91       		.byte	0x91
 9191 10b7 64       		.sleb128 -28
 9192 10b8 23       		.uleb128 0x23
 9193 10b9 6900     		.ascii	"i\000"
 9194 10bb 01       		.byte	0x1
 9195 10bc C903     		.2byte	0x3c9
 9196 10be 73000000 		.4byte	0x73
 9197 10c2 02       		.uleb128 0x2
 9198 10c3 91       		.byte	0x91
 9199 10c4 74       		.sleb128 -12
 9200 10c5 1F       		.uleb128 0x1f
 9201 10c6 81000000 		.4byte	.LASF221
 9202 10ca 01       		.byte	0x1
 9203 10cb CA03     		.2byte	0x3ca
 9204 10cd 97000000 		.4byte	0x97
 9205 10d1 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 210


 9206 10d2 91       		.byte	0x91
 9207 10d3 6B       		.sleb128 -21
 9208 10d4 1F       		.uleb128 0x1f
 9209 10d5 A1050000 		.4byte	.LASF222
 9210 10d9 01       		.byte	0x1
 9211 10da CB03     		.2byte	0x3cb
 9212 10dc 73000000 		.4byte	0x73
 9213 10e0 02       		.uleb128 0x2
 9214 10e1 91       		.byte	0x91
 9215 10e2 6C       		.sleb128 -20
 9216 10e3 1F       		.uleb128 0x1f
 9217 10e4 F7040000 		.4byte	.LASF223
 9218 10e8 01       		.byte	0x1
 9219 10e9 CC03     		.2byte	0x3cc
 9220 10eb 97000000 		.4byte	0x97
 9221 10ef 02       		.uleb128 0x2
 9222 10f0 91       		.byte	0x91
 9223 10f1 73       		.sleb128 -13
 9224 10f2 00       		.byte	0
 9225 10f3 1E       		.uleb128 0x1e
 9226 10f4 910C0000 		.4byte	.LASF224
 9227 10f8 01       		.byte	0x1
 9228 10f9 F103     		.2byte	0x3f1
 9229 10fb 00000000 		.4byte	.LFB88
 9230 10ff 60000000 		.4byte	.LFE88-.LFB88
 9231 1103 01       		.uleb128 0x1
 9232 1104 9C       		.byte	0x9c
 9233 1105 17110000 		.4byte	0x1117
 9234 1109 23       		.uleb128 0x23
 9235 110a 6900     		.ascii	"i\000"
 9236 110c 01       		.byte	0x1
 9237 110d F303     		.2byte	0x3f3
 9238 110f A3000000 		.4byte	0xa3
 9239 1113 02       		.uleb128 0x2
 9240 1114 91       		.byte	0x91
 9241 1115 76       		.sleb128 -10
 9242 1116 00       		.byte	0
 9243 1117 29       		.uleb128 0x29
 9244 1118 FC0B0000 		.4byte	.LASF225
 9245 111c 01       		.byte	0x1
 9246 111d 0604     		.2byte	0x406
 9247 111f 97000000 		.4byte	0x97
 9248 1123 00000000 		.4byte	.LFB89
 9249 1127 58000000 		.4byte	.LFE89-.LFB89
 9250 112b 01       		.uleb128 0x1
 9251 112c 9C       		.byte	0x9c
 9252 112d 3F110000 		.4byte	0x113f
 9253 1131 23       		.uleb128 0x23
 9254 1132 6900     		.ascii	"i\000"
 9255 1134 01       		.byte	0x1
 9256 1135 0704     		.2byte	0x407
 9257 1137 A3000000 		.4byte	0xa3
 9258 113b 02       		.uleb128 0x2
 9259 113c 91       		.byte	0x91
 9260 113d 76       		.sleb128 -10
 9261 113e 00       		.byte	0
 9262 113f 2A       		.uleb128 0x2a
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 211


 9263 1140 A7050000 		.4byte	.LASF309
 9264 1144 01       		.byte	0x1
 9265 1145 1904     		.2byte	0x419
 9266 1147 97000000 		.4byte	0x97
 9267 114b 00000000 		.4byte	.LFB90
 9268 114f CC000000 		.4byte	.LFE90-.LFB90
 9269 1153 01       		.uleb128 0x1
 9270 1154 9C       		.byte	0x9c
 9271 1155 2B       		.uleb128 0x2b
 9272 1156 C3070000 		.4byte	.LASF226
 9273 115a 01       		.byte	0x1
 9274 115b 4404     		.2byte	0x444
 9275 115d 00000000 		.4byte	.LFB91
 9276 1161 0C000000 		.4byte	.LFE91-.LFB91
 9277 1165 01       		.uleb128 0x1
 9278 1166 9C       		.byte	0x9c
 9279 1167 2B       		.uleb128 0x2b
 9280 1168 110A0000 		.4byte	.LASF227
 9281 116c 01       		.byte	0x1
 9282 116d 4B04     		.2byte	0x44b
 9283 116f 00000000 		.4byte	.LFB92
 9284 1173 0C000000 		.4byte	.LFE92-.LFB92
 9285 1177 01       		.uleb128 0x1
 9286 1178 9C       		.byte	0x9c
 9287 1179 27       		.uleb128 0x27
 9288 117a 640B0000 		.4byte	.LASF229
 9289 117e 01       		.byte	0x1
 9290 117f 5204     		.2byte	0x452
 9291 1181 00000000 		.4byte	.LFB93
 9292 1185 0C000000 		.4byte	.LFE93-.LFB93
 9293 1189 01       		.uleb128 0x1
 9294 118a 9C       		.byte	0x9c
 9295 118b 2B       		.uleb128 0x2b
 9296 118c 4E050000 		.4byte	.LASF230
 9297 1190 01       		.byte	0x1
 9298 1191 5904     		.2byte	0x459
 9299 1193 00000000 		.4byte	.LFB94
 9300 1197 0C000000 		.4byte	.LFE94-.LFB94
 9301 119b 01       		.uleb128 0x1
 9302 119c 9C       		.byte	0x9c
 9303 119d 27       		.uleb128 0x27
 9304 119e EC050000 		.4byte	.LASF231
 9305 11a2 01       		.byte	0x1
 9306 11a3 6404     		.2byte	0x464
 9307 11a5 00000000 		.4byte	.LFB95
 9308 11a9 0C000000 		.4byte	.LFE95-.LFB95
 9309 11ad 01       		.uleb128 0x1
 9310 11ae 9C       		.byte	0x9c
 9311 11af 27       		.uleb128 0x27
 9312 11b0 7E0C0000 		.4byte	.LASF232
 9313 11b4 01       		.byte	0x1
 9314 11b5 6904     		.2byte	0x469
 9315 11b7 00000000 		.4byte	.LFB96
 9316 11bb 0C000000 		.4byte	.LFE96-.LFB96
 9317 11bf 01       		.uleb128 0x1
 9318 11c0 9C       		.byte	0x9c
 9319 11c1 27       		.uleb128 0x27
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 212


 9320 11c2 04020000 		.4byte	.LASF233
 9321 11c6 01       		.byte	0x1
 9322 11c7 6D04     		.2byte	0x46d
 9323 11c9 00000000 		.4byte	.LFB97
 9324 11cd 0C000000 		.4byte	.LFE97-.LFB97
 9325 11d1 01       		.uleb128 0x1
 9326 11d2 9C       		.byte	0x9c
 9327 11d3 27       		.uleb128 0x27
 9328 11d4 CE080000 		.4byte	.LASF234
 9329 11d8 01       		.byte	0x1
 9330 11d9 7104     		.2byte	0x471
 9331 11db 00000000 		.4byte	.LFB98
 9332 11df 0C000000 		.4byte	.LFE98-.LFB98
 9333 11e3 01       		.uleb128 0x1
 9334 11e4 9C       		.byte	0x9c
 9335 11e5 2C       		.uleb128 0x2c
 9336 11e6 650A0000 		.4byte	.LASF236
 9337 11ea 01       		.byte	0x1
 9338 11eb 7504     		.2byte	0x475
 9339 11ed 00000000 		.4byte	.LFB99
 9340 11f1 BC000000 		.4byte	.LFE99-.LFB99
 9341 11f5 01       		.uleb128 0x1
 9342 11f6 9C       		.byte	0x9c
 9343 11f7 34120000 		.4byte	0x1234
 9344 11fb 1F       		.uleb128 0x1f
 9345 11fc FE0E0000 		.4byte	.LASF197
 9346 1200 01       		.byte	0x1
 9347 1201 7704     		.2byte	0x477
 9348 1203 34120000 		.4byte	0x1234
 9349 1207 02       		.uleb128 0x2
 9350 1208 91       		.byte	0x91
 9351 1209 70       		.sleb128 -16
 9352 120a 1F       		.uleb128 0x1f
 9353 120b 33060000 		.4byte	.LASF235
 9354 120f 01       		.byte	0x1
 9355 1210 7804     		.2byte	0x478
 9356 1212 34120000 		.4byte	0x1234
 9357 1216 05       		.uleb128 0x5
 9358 1217 03       		.byte	0x3
 9359 1218 04000000 		.4byte	last_aux_int16.10114
 9360 121c 1A       		.uleb128 0x1a
 9361 121d 42000000 		.4byte	.LBB28
 9362 1221 1A000000 		.4byte	.LBE28-.LBB28
 9363 1225 23       		.uleb128 0x23
 9364 1226 6900     		.ascii	"i\000"
 9365 1228 01       		.byte	0x1
 9366 1229 7F04     		.2byte	0x47f
 9367 122b 97000000 		.4byte	0x97
 9368 122f 02       		.uleb128 0x2
 9369 1230 91       		.byte	0x91
 9370 1231 77       		.sleb128 -9
 9371 1232 00       		.byte	0
 9372 1233 00       		.byte	0
 9373 1234 0E       		.uleb128 0xe
 9374 1235 C7000000 		.4byte	0xc7
 9375 1239 44120000 		.4byte	0x1244
 9376 123d 0F       		.uleb128 0xf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 213


 9377 123e 0C010000 		.4byte	0x10c
 9378 1242 02       		.byte	0x2
 9379 1243 00       		.byte	0
 9380 1244 2D       		.uleb128 0x2d
 9381 1245 56110000 		.4byte	.LASF237
 9382 1249 01       		.byte	0x1
 9383 124a 9B04     		.2byte	0x49b
 9384 124c 00000000 		.4byte	.LFB100
 9385 1250 2C000000 		.4byte	.LFE100-.LFB100
 9386 1254 01       		.uleb128 0x1
 9387 1255 9C       		.byte	0x9c
 9388 1256 6A120000 		.4byte	0x126a
 9389 125a 23       		.uleb128 0x23
 9390 125b 61757800 		.ascii	"aux\000"
 9391 125f 01       		.byte	0x1
 9392 1260 9C04     		.2byte	0x49c
 9393 1262 97000000 		.4byte	0x97
 9394 1266 02       		.uleb128 0x2
 9395 1267 91       		.byte	0x91
 9396 1268 77       		.sleb128 -9
 9397 1269 00       		.byte	0
 9398 126a 27       		.uleb128 0x27
 9399 126b C40A0000 		.4byte	.LASF238
 9400 126f 01       		.byte	0x1
 9401 1270 A104     		.2byte	0x4a1
 9402 1272 00000000 		.4byte	.LFB101
 9403 1276 0C000000 		.4byte	.LFE101-.LFB101
 9404 127a 01       		.uleb128 0x1
 9405 127b 9C       		.byte	0x9c
 9406 127c 27       		.uleb128 0x27
 9407 127d C30D0000 		.4byte	.LASF239
 9408 1281 01       		.byte	0x1
 9409 1282 A504     		.2byte	0x4a5
 9410 1284 00000000 		.4byte	.LFB102
 9411 1288 0C000000 		.4byte	.LFE102-.LFB102
 9412 128c 01       		.uleb128 0x1
 9413 128d 9C       		.byte	0x9c
 9414 128e 2D       		.uleb128 0x2d
 9415 128f 3F090000 		.4byte	.LASF240
 9416 1293 01       		.byte	0x1
 9417 1294 AA04     		.2byte	0x4aa
 9418 1296 00000000 		.4byte	.LFB103
 9419 129a 84000000 		.4byte	.LFE103-.LFB103
 9420 129e 01       		.uleb128 0x1
 9421 129f 9C       		.byte	0x9c
 9422 12a0 C3120000 		.4byte	0x12c3
 9423 12a4 1F       		.uleb128 0x1f
 9424 12a5 6F050000 		.4byte	.LASF181
 9425 12a9 01       		.byte	0x1
 9426 12aa AE04     		.2byte	0x4ae
 9427 12ac 5E040000 		.4byte	0x45e
 9428 12b0 02       		.uleb128 0x2
 9429 12b1 91       		.byte	0x91
 9430 12b2 70       		.sleb128 -16
 9431 12b3 1F       		.uleb128 0x1f
 9432 12b4 FE0E0000 		.4byte	.LASF197
 9433 12b8 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 214


 9434 12b9 AF04     		.2byte	0x4af
 9435 12bb C7000000 		.4byte	0xc7
 9436 12bf 02       		.uleb128 0x2
 9437 12c0 91       		.byte	0x91
 9438 12c1 6E       		.sleb128 -18
 9439 12c2 00       		.byte	0
 9440 12c3 27       		.uleb128 0x27
 9441 12c4 FA0F0000 		.4byte	.LASF241
 9442 12c8 01       		.byte	0x1
 9443 12c9 CA04     		.2byte	0x4ca
 9444 12cb 00000000 		.4byte	.LFB104
 9445 12cf 0C000000 		.4byte	.LFE104-.LFB104
 9446 12d3 01       		.uleb128 0x1
 9447 12d4 9C       		.byte	0x9c
 9448 12d5 27       		.uleb128 0x27
 9449 12d6 4C070000 		.4byte	.LASF242
 9450 12da 01       		.byte	0x1
 9451 12db CE04     		.2byte	0x4ce
 9452 12dd 00000000 		.4byte	.LFB105
 9453 12e1 0C000000 		.4byte	.LFE105-.LFB105
 9454 12e5 01       		.uleb128 0x1
 9455 12e6 9C       		.byte	0x9c
 9456 12e7 2D       		.uleb128 0x2d
 9457 12e8 CF100000 		.4byte	.LASF243
 9458 12ec 01       		.byte	0x1
 9459 12ed D704     		.2byte	0x4d7
 9460 12ef 00000000 		.4byte	.LFB106
 9461 12f3 C4000000 		.4byte	.LFE106-.LFB106
 9462 12f7 01       		.uleb128 0x1
 9463 12f8 9C       		.byte	0x9c
 9464 12f9 49130000 		.4byte	0x1349
 9465 12fd 1F       		.uleb128 0x1f
 9466 12fe 6F050000 		.4byte	.LASF181
 9467 1302 01       		.byte	0x1
 9468 1303 E004     		.2byte	0x4e0
 9469 1305 49130000 		.4byte	0x1349
 9470 1309 02       		.uleb128 0x2
 9471 130a 91       		.byte	0x91
 9472 130b 5C       		.sleb128 -36
 9473 130c 1F       		.uleb128 0x1f
 9474 130d 8E070000 		.4byte	.LASF180
 9475 1311 01       		.byte	0x1
 9476 1312 E104     		.2byte	0x4e1
 9477 1314 97000000 		.4byte	0x97
 9478 1318 02       		.uleb128 0x2
 9479 1319 91       		.byte	0x91
 9480 131a 76       		.sleb128 -10
 9481 131b 1F       		.uleb128 0x1f
 9482 131c 9D020000 		.4byte	.LASF244
 9483 1320 01       		.byte	0x1
 9484 1321 E304     		.2byte	0x4e3
 9485 1323 AF000000 		.4byte	0xaf
 9486 1327 02       		.uleb128 0x2
 9487 1328 91       		.byte	0x91
 9488 1329 70       		.sleb128 -16
 9489 132a 1F       		.uleb128 0x1f
 9490 132b F40F0000 		.4byte	.LASF245
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 215


 9491 132f 01       		.byte	0x1
 9492 1330 E304     		.2byte	0x4e3
 9493 1332 AF000000 		.4byte	0xaf
 9494 1336 02       		.uleb128 0x2
 9495 1337 91       		.byte	0x91
 9496 1338 6C       		.sleb128 -20
 9497 1339 1F       		.uleb128 0x1f
 9498 133a 11040000 		.4byte	.LASF246
 9499 133e 01       		.byte	0x1
 9500 133f E404     		.2byte	0x4e4
 9501 1341 97000000 		.4byte	0x97
 9502 1345 02       		.uleb128 0x2
 9503 1346 91       		.byte	0x91
 9504 1347 77       		.sleb128 -9
 9505 1348 00       		.byte	0
 9506 1349 0E       		.uleb128 0xe
 9507 134a 97000000 		.4byte	0x97
 9508 134e 59130000 		.4byte	0x1359
 9509 1352 0F       		.uleb128 0xf
 9510 1353 0C010000 		.4byte	0x10c
 9511 1357 0F       		.byte	0xf
 9512 1358 00       		.byte	0
 9513 1359 2E       		.uleb128 0x2e
 9514 135a 98060000 		.4byte	.LASF247
 9515 135e 01       		.byte	0x1
 9516 135f 0905     		.2byte	0x509
 9517 1361 C7000000 		.4byte	0xc7
 9518 1365 00000000 		.4byte	.LFB107
 9519 1369 A8000000 		.4byte	.LFE107-.LFB107
 9520 136d 01       		.uleb128 0x1
 9521 136e 9C       		.byte	0x9c
 9522 136f CE130000 		.4byte	0x13ce
 9523 1373 1F       		.uleb128 0x1f
 9524 1374 6F050000 		.4byte	.LASF181
 9525 1378 01       		.byte	0x1
 9526 1379 0B05     		.2byte	0x50b
 9527 137b 49130000 		.4byte	0x1349
 9528 137f 02       		.uleb128 0x2
 9529 1380 91       		.byte	0x91
 9530 1381 5C       		.sleb128 -36
 9531 1382 1F       		.uleb128 0x1f
 9532 1383 8E070000 		.4byte	.LASF180
 9533 1387 01       		.byte	0x1
 9534 1388 0C05     		.2byte	0x50c
 9535 138a 97000000 		.4byte	0x97
 9536 138e 02       		.uleb128 0x2
 9537 138f 91       		.byte	0x91
 9538 1390 74       		.sleb128 -12
 9539 1391 1F       		.uleb128 0x1f
 9540 1392 E2050000 		.4byte	.LASF248
 9541 1396 01       		.byte	0x1
 9542 1397 0D05     		.2byte	0x50d
 9543 1399 C7000000 		.4byte	0xc7
 9544 139d 02       		.uleb128 0x2
 9545 139e 91       		.byte	0x91
 9546 139f 76       		.sleb128 -10
 9547 13a0 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 216


 9548 13a1 9D020000 		.4byte	.LASF244
 9549 13a5 01       		.byte	0x1
 9550 13a6 0E05     		.2byte	0x50e
 9551 13a8 AF000000 		.4byte	0xaf
 9552 13ac 02       		.uleb128 0x2
 9553 13ad 91       		.byte	0x91
 9554 13ae 70       		.sleb128 -16
 9555 13af 1F       		.uleb128 0x1f
 9556 13b0 F40F0000 		.4byte	.LASF245
 9557 13b4 01       		.byte	0x1
 9558 13b5 0E05     		.2byte	0x50e
 9559 13b7 AF000000 		.4byte	0xaf
 9560 13bb 02       		.uleb128 0x2
 9561 13bc 91       		.byte	0x91
 9562 13bd 6C       		.sleb128 -20
 9563 13be 1F       		.uleb128 0x1f
 9564 13bf 11040000 		.4byte	.LASF246
 9565 13c3 01       		.byte	0x1
 9566 13c4 0F05     		.2byte	0x50f
 9567 13c6 97000000 		.4byte	0x97
 9568 13ca 02       		.uleb128 0x2
 9569 13cb 91       		.byte	0x91
 9570 13cc 75       		.sleb128 -11
 9571 13cd 00       		.byte	0
 9572 13ce 27       		.uleb128 0x27
 9573 13cf 94000000 		.4byte	.LASF249
 9574 13d3 01       		.byte	0x1
 9575 13d4 2E05     		.2byte	0x52e
 9576 13d6 00000000 		.4byte	.LFB108
 9577 13da 0C000000 		.4byte	.LFE108-.LFB108
 9578 13de 01       		.uleb128 0x1
 9579 13df 9C       		.byte	0x9c
 9580 13e0 2D       		.uleb128 0x2d
 9581 13e1 8B030000 		.4byte	.LASF250
 9582 13e5 01       		.byte	0x1
 9583 13e6 3205     		.2byte	0x532
 9584 13e8 00000000 		.4byte	.LFB109
 9585 13ec 20000000 		.4byte	.LFE109-.LFB109
 9586 13f0 01       		.uleb128 0x1
 9587 13f1 9C       		.byte	0x9c
 9588 13f2 06140000 		.4byte	0x1406
 9589 13f6 1F       		.uleb128 0x1f
 9590 13f7 6F050000 		.4byte	.LASF181
 9591 13fb 01       		.byte	0x1
 9592 13fc 3405     		.2byte	0x534
 9593 13fe D7040000 		.4byte	0x4d7
 9594 1402 02       		.uleb128 0x2
 9595 1403 91       		.byte	0x91
 9596 1404 74       		.sleb128 -12
 9597 1405 00       		.byte	0
 9598 1406 27       		.uleb128 0x27
 9599 1407 24060000 		.4byte	.LASF251
 9600 140b 01       		.byte	0x1
 9601 140c 4005     		.2byte	0x540
 9602 140e 00000000 		.4byte	.LFB110
 9603 1412 0C000000 		.4byte	.LFE110-.LFB110
 9604 1416 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 217


 9605 1417 9C       		.byte	0x9c
 9606 1418 2D       		.uleb128 0x2d
 9607 1419 9B0C0000 		.4byte	.LASF252
 9608 141d 01       		.byte	0x1
 9609 141e 4405     		.2byte	0x544
 9610 1420 00000000 		.4byte	.LFB111
 9611 1424 94000000 		.4byte	.LFE111-.LFB111
 9612 1428 01       		.uleb128 0x1
 9613 1429 9C       		.byte	0x9c
 9614 142a 5C140000 		.4byte	0x145c
 9615 142e 1F       		.uleb128 0x1f
 9616 142f 8E070000 		.4byte	.LASF180
 9617 1433 01       		.byte	0x1
 9618 1434 4605     		.2byte	0x546
 9619 1436 97000000 		.4byte	0x97
 9620 143a 02       		.uleb128 0x2
 9621 143b 91       		.byte	0x91
 9622 143c 77       		.sleb128 -9
 9623 143d 1F       		.uleb128 0x1f
 9624 143e 6F050000 		.4byte	.LASF181
 9625 1442 01       		.byte	0x1
 9626 1443 4705     		.2byte	0x547
 9627 1445 D7040000 		.4byte	0x4d7
 9628 1449 02       		.uleb128 0x2
 9629 144a 91       		.byte	0x91
 9630 144b 74       		.sleb128 -12
 9631 144c 1F       		.uleb128 0x1f
 9632 144d 9C0D0000 		.4byte	.LASF209
 9633 1451 01       		.byte	0x1
 9634 1452 4805     		.2byte	0x548
 9635 1454 97000000 		.4byte	0x97
 9636 1458 02       		.uleb128 0x2
 9637 1459 91       		.byte	0x91
 9638 145a 76       		.sleb128 -10
 9639 145b 00       		.byte	0
 9640 145c 2D       		.uleb128 0x2d
 9641 145d 1A020000 		.4byte	.LASF253
 9642 1461 01       		.byte	0x1
 9643 1462 6605     		.2byte	0x566
 9644 1464 00000000 		.4byte	.LFB112
 9645 1468 60000000 		.4byte	.LFE112-.LFB112
 9646 146c 01       		.uleb128 0x1
 9647 146d 9C       		.byte	0x9c
 9648 146e 91140000 		.4byte	0x1491
 9649 1472 1F       		.uleb128 0x1f
 9650 1473 6F050000 		.4byte	.LASF181
 9651 1477 01       		.byte	0x1
 9652 1478 6805     		.2byte	0x568
 9653 147a 5E040000 		.4byte	0x45e
 9654 147e 02       		.uleb128 0x2
 9655 147f 91       		.byte	0x91
 9656 1480 70       		.sleb128 -16
 9657 1481 1F       		.uleb128 0x1f
 9658 1482 FE0E0000 		.4byte	.LASF197
 9659 1486 01       		.byte	0x1
 9660 1487 6905     		.2byte	0x569
 9661 1489 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 218


 9662 148d 02       		.uleb128 0x2
 9663 148e 91       		.byte	0x91
 9664 148f 6E       		.sleb128 -18
 9665 1490 00       		.byte	0
 9666 1491 27       		.uleb128 0x27
 9667 1492 9A010000 		.4byte	.LASF254
 9668 1496 01       		.byte	0x1
 9669 1497 7C05     		.2byte	0x57c
 9670 1499 00000000 		.4byte	.LFB113
 9671 149d 0C000000 		.4byte	.LFE113-.LFB113
 9672 14a1 01       		.uleb128 0x1
 9673 14a2 9C       		.byte	0x9c
 9674 14a3 27       		.uleb128 0x27
 9675 14a4 9B0F0000 		.4byte	.LASF255
 9676 14a8 01       		.byte	0x1
 9677 14a9 8005     		.2byte	0x580
 9678 14ab 00000000 		.4byte	.LFB114
 9679 14af 0C000000 		.4byte	.LFE114-.LFB114
 9680 14b3 01       		.uleb128 0x1
 9681 14b4 9C       		.byte	0x9c
 9682 14b5 27       		.uleb128 0x27
 9683 14b6 8A0E0000 		.4byte	.LASF256
 9684 14ba 01       		.byte	0x1
 9685 14bb 8305     		.2byte	0x583
 9686 14bd 00000000 		.4byte	.LFB115
 9687 14c1 0C000000 		.4byte	.LFE115-.LFB115
 9688 14c5 01       		.uleb128 0x1
 9689 14c6 9C       		.byte	0x9c
 9690 14c7 27       		.uleb128 0x27
 9691 14c8 1B030000 		.4byte	.LASF257
 9692 14cc 01       		.byte	0x1
 9693 14cd 8605     		.2byte	0x586
 9694 14cf 00000000 		.4byte	.LFB116
 9695 14d3 0C000000 		.4byte	.LFE116-.LFB116
 9696 14d7 01       		.uleb128 0x1
 9697 14d8 9C       		.byte	0x9c
 9698 14d9 27       		.uleb128 0x27
 9699 14da 53030000 		.4byte	.LASF258
 9700 14de 01       		.byte	0x1
 9701 14df 8905     		.2byte	0x589
 9702 14e1 00000000 		.4byte	.LFB117
 9703 14e5 0C000000 		.4byte	.LFE117-.LFB117
 9704 14e9 01       		.uleb128 0x1
 9705 14ea 9C       		.byte	0x9c
 9706 14eb 1E       		.uleb128 0x1e
 9707 14ec E5020000 		.4byte	.LASF259
 9708 14f0 01       		.byte	0x1
 9709 14f1 8D05     		.2byte	0x58d
 9710 14f3 00000000 		.4byte	.LFB118
 9711 14f7 54010000 		.4byte	.LFE118-.LFB118
 9712 14fb 01       		.uleb128 0x1
 9713 14fc 9C       		.byte	0x9c
 9714 14fd 40150000 		.4byte	0x1540
 9715 1501 22       		.uleb128 0x22
 9716 1502 88060000 		.4byte	.LASF260
 9717 1506 01       		.byte	0x1
 9718 1507 8D05     		.2byte	0x58d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 219


 9719 1509 A3000000 		.4byte	0xa3
 9720 150d 04       		.uleb128 0x4
 9721 150e 91       		.byte	0x91
 9722 150f 9EE37E   		.sleb128 -20066
 9723 1512 23       		.uleb128 0x23
 9724 1513 6900     		.ascii	"i\000"
 9725 1515 01       		.byte	0x1
 9726 1516 8F05     		.2byte	0x58f
 9727 1518 97000000 		.4byte	0x97
 9728 151c 02       		.uleb128 0x2
 9729 151d 91       		.byte	0x91
 9730 151e 77       		.sleb128 -9
 9731 151f 1F       		.uleb128 0x1f
 9732 1520 FD030000 		.4byte	.LASF261
 9733 1524 01       		.byte	0x1
 9734 1525 9005     		.2byte	0x590
 9735 1527 690A0000 		.4byte	0xa69
 9736 152b 02       		.uleb128 0x2
 9737 152c 91       		.byte	0x91
 9738 152d 44       		.sleb128 -60
 9739 152e 1F       		.uleb128 0x1f
 9740 152f 68070000 		.4byte	.LASF166
 9741 1533 01       		.byte	0x1
 9742 1534 9105     		.2byte	0x591
 9743 1536 E2080000 		.4byte	0x8e2
 9744 153a 04       		.uleb128 0x4
 9745 153b 91       		.byte	0x91
 9746 153c A4E37E   		.sleb128 -20060
 9747 153f 00       		.byte	0
 9748 1540 26       		.uleb128 0x26
 9749 1541 B2030000 		.4byte	.LASF262
 9750 1545 01       		.byte	0x1
 9751 1546 A905     		.2byte	0x5a9
 9752 1548 00000000 		.4byte	.LFB119
 9753 154c 14000000 		.4byte	.LFE119-.LFB119
 9754 1550 01       		.uleb128 0x1
 9755 1551 9C       		.byte	0x9c
 9756 1552 66150000 		.4byte	0x1566
 9757 1556 22       		.uleb128 0x22
 9758 1557 88060000 		.4byte	.LASF260
 9759 155b 01       		.byte	0x1
 9760 155c A905     		.2byte	0x5a9
 9761 155e A3000000 		.4byte	0xa3
 9762 1562 02       		.uleb128 0x2
 9763 1563 91       		.byte	0x91
 9764 1564 76       		.sleb128 -10
 9765 1565 00       		.byte	0
 9766 1566 2D       		.uleb128 0x2d
 9767 1567 15090000 		.4byte	.LASF263
 9768 156b 01       		.byte	0x1
 9769 156c B205     		.2byte	0x5b2
 9770 156e 00000000 		.4byte	.LFB120
 9771 1572 50010000 		.4byte	.LFE120-.LFB120
 9772 1576 01       		.uleb128 0x1
 9773 1577 9C       		.byte	0x9c
 9774 1578 8A150000 		.4byte	0x158a
 9775 157c 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 220


 9776 157d 6900     		.ascii	"i\000"
 9777 157f 01       		.byte	0x1
 9778 1580 B405     		.2byte	0x5b4
 9779 1582 97000000 		.4byte	0x97
 9780 1586 02       		.uleb128 0x2
 9781 1587 91       		.byte	0x91
 9782 1588 6F       		.sleb128 -17
 9783 1589 00       		.byte	0
 9784 158a 2D       		.uleb128 0x2d
 9785 158b 1A010000 		.4byte	.LASF264
 9786 158f 01       		.byte	0x1
 9787 1590 D905     		.2byte	0x5d9
 9788 1592 00000000 		.4byte	.LFB121
 9789 1596 94010000 		.4byte	.LFE121-.LFB121
 9790 159a 01       		.uleb128 0x1
 9791 159b 9C       		.byte	0x9c
 9792 159c E9150000 		.4byte	0x15e9
 9793 15a0 1F       		.uleb128 0x1f
 9794 15a1 E2050000 		.4byte	.LASF248
 9795 15a5 01       		.byte	0x1
 9796 15a6 DB05     		.2byte	0x5db
 9797 15a8 C7000000 		.4byte	0xc7
 9798 15ac 02       		.uleb128 0x2
 9799 15ad 91       		.byte	0x91
 9800 15ae 60       		.sleb128 -32
 9801 15af 1F       		.uleb128 0x1f
 9802 15b0 E4040000 		.4byte	.LASF265
 9803 15b4 01       		.byte	0x1
 9804 15b5 DC05     		.2byte	0x5dc
 9805 15b7 D3000000 		.4byte	0xd3
 9806 15bb 02       		.uleb128 0x2
 9807 15bc 91       		.byte	0x91
 9808 15bd 64       		.sleb128 -28
 9809 15be 1F       		.uleb128 0x1f
 9810 15bf CD090000 		.4byte	.LASF266
 9811 15c3 01       		.byte	0x1
 9812 15c4 DD05     		.2byte	0x5dd
 9813 15c6 D3000000 		.4byte	0xd3
 9814 15ca 02       		.uleb128 0x2
 9815 15cb 91       		.byte	0x91
 9816 15cc 5C       		.sleb128 -36
 9817 15cd 15       		.uleb128 0x15
 9818 15ce D6040000 		.4byte	.LASF268
 9819 15d2 01       		.byte	0x1
 9820 15d3 DE05     		.2byte	0x5de
 9821 15d5 D3000000 		.4byte	0xd3
 9822 15d9 1F       		.uleb128 0x1f
 9823 15da 5D0A0000 		.4byte	.LASF269
 9824 15de 01       		.byte	0x1
 9825 15df DF05     		.2byte	0x5df
 9826 15e1 C7000000 		.4byte	0xc7
 9827 15e5 02       		.uleb128 0x2
 9828 15e6 91       		.byte	0x91
 9829 15e7 62       		.sleb128 -30
 9830 15e8 00       		.byte	0
 9831 15e9 2F       		.uleb128 0x2f
 9832 15ea 66010000 		.4byte	.LASF270
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 221


 9833 15ee 01       		.byte	0x1
 9834 15ef 1106     		.2byte	0x611
 9835 15f1 00000000 		.4byte	.LFB122
 9836 15f5 24000000 		.4byte	.LFE122-.LFB122
 9837 15f9 01       		.uleb128 0x1
 9838 15fa 9C       		.byte	0x9c
 9839 15fb 2F       		.uleb128 0x2f
 9840 15fc 99090000 		.4byte	.LASF271
 9841 1600 01       		.byte	0x1
 9842 1601 1706     		.2byte	0x617
 9843 1603 00000000 		.4byte	.LFB123
 9844 1607 40000000 		.4byte	.LFE123-.LFB123
 9845 160b 01       		.uleb128 0x1
 9846 160c 9C       		.byte	0x9c
 9847 160d 30       		.uleb128 0x30
 9848 160e D50A0000 		.4byte	.LASF272
 9849 1612 01       		.byte	0x1
 9850 1613 2406     		.2byte	0x624
 9851 1615 97000000 		.4byte	0x97
 9852 1619 00000000 		.4byte	.LFB124
 9853 161d 0E000000 		.4byte	.LFE124-.LFB124
 9854 1621 01       		.uleb128 0x1
 9855 1622 9C       		.byte	0x9c
 9856 1623 26       		.uleb128 0x26
 9857 1624 C9060000 		.4byte	.LASF273
 9858 1628 01       		.byte	0x1
 9859 1629 2E06     		.2byte	0x62e
 9860 162b 00000000 		.4byte	.LFB125
 9861 162f 12000000 		.4byte	.LFE125-.LFB125
 9862 1633 01       		.uleb128 0x1
 9863 1634 9C       		.byte	0x9c
 9864 1635 49160000 		.4byte	0x1649
 9865 1639 22       		.uleb128 0x22
 9866 163a 14060000 		.4byte	.LASF274
 9867 163e 01       		.byte	0x1
 9868 163f 2E06     		.2byte	0x62e
 9869 1641 73000000 		.4byte	0x73
 9870 1645 02       		.uleb128 0x2
 9871 1646 91       		.byte	0x91
 9872 1647 74       		.sleb128 -12
 9873 1648 00       		.byte	0
 9874 1649 1E       		.uleb128 0x1e
 9875 164a DA0B0000 		.4byte	.LASF275
 9876 164e 01       		.byte	0x1
 9877 164f 7F06     		.2byte	0x67f
 9878 1651 00000000 		.4byte	.LFB126
 9879 1655 84000000 		.4byte	.LFE126-.LFB126
 9880 1659 01       		.uleb128 0x1
 9881 165a 9C       		.byte	0x9c
 9882 165b 9C160000 		.4byte	0x169c
 9883 165f 22       		.uleb128 0x22
 9884 1660 74070000 		.4byte	.LASF134
 9885 1664 01       		.byte	0x1
 9886 1665 7F06     		.2byte	0x67f
 9887 1667 97000000 		.4byte	0x97
 9888 166b 02       		.uleb128 0x2
 9889 166c 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 222


 9890 166d 5F       		.sleb128 -33
 9891 166e 1F       		.uleb128 0x1f
 9892 166f 6F050000 		.4byte	.LASF181
 9893 1673 01       		.byte	0x1
 9894 1674 8606     		.2byte	0x686
 9895 1676 5E040000 		.4byte	0x45e
 9896 167a 02       		.uleb128 0x2
 9897 167b 91       		.byte	0x91
 9898 167c 68       		.sleb128 -24
 9899 167d 1F       		.uleb128 0x1f
 9900 167e 8E070000 		.4byte	.LASF180
 9901 1682 01       		.byte	0x1
 9902 1683 8706     		.2byte	0x687
 9903 1685 97000000 		.4byte	0x97
 9904 1689 02       		.uleb128 0x2
 9905 168a 91       		.byte	0x91
 9906 168b 6F       		.sleb128 -17
 9907 168c 1F       		.uleb128 0x1f
 9908 168d FE0E0000 		.4byte	.LASF197
 9909 1691 01       		.byte	0x1
 9910 1692 8806     		.2byte	0x688
 9911 1694 C7000000 		.4byte	0xc7
 9912 1698 02       		.uleb128 0x2
 9913 1699 91       		.byte	0x91
 9914 169a 66       		.sleb128 -26
 9915 169b 00       		.byte	0
 9916 169c 2F       		.uleb128 0x2f
 9917 169d 59000000 		.4byte	.LASF276
 9918 16a1 01       		.byte	0x1
 9919 16a2 9E06     		.2byte	0x69e
 9920 16a4 00000000 		.4byte	.LFB127
 9921 16a8 30000000 		.4byte	.LFE127-.LFB127
 9922 16ac 01       		.uleb128 0x1
 9923 16ad 9C       		.byte	0x9c
 9924 16ae 27       		.uleb128 0x27
 9925 16af 8F050000 		.4byte	.LASF277
 9926 16b3 01       		.byte	0x1
 9927 16b4 AC06     		.2byte	0x6ac
 9928 16b6 00000000 		.4byte	.LFB128
 9929 16ba 0C000000 		.4byte	.LFE128-.LFB128
 9930 16be 01       		.uleb128 0x1
 9931 16bf 9C       		.byte	0x9c
 9932 16c0 31       		.uleb128 0x31
 9933 16c1 8C090000 		.4byte	.LASF278
 9934 16c5 08       		.byte	0x8
 9935 16c6 1207     		.2byte	0x712
 9936 16c8 CC160000 		.4byte	0x16cc
 9937 16cc 06       		.uleb128 0x6
 9938 16cd 81000000 		.4byte	0x81
 9939 16d1 31       		.uleb128 0x31
 9940 16d2 63100000 		.4byte	.LASF279
 9941 16d6 07       		.byte	0x7
 9942 16d7 6D01     		.2byte	0x16d
 9943 16d9 AD060000 		.4byte	0x6ad
 9944 16dd 31       		.uleb128 0x31
 9945 16de 7C0E0000 		.4byte	.LASF280
 9946 16e2 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 223


 9947 16e3 6D01     		.2byte	0x16d
 9948 16e5 AD060000 		.4byte	0x6ad
 9949 16e9 31       		.uleb128 0x31
 9950 16ea 74000000 		.4byte	.LASF281
 9951 16ee 07       		.byte	0x7
 9952 16ef 6601     		.2byte	0x166
 9953 16f1 88030000 		.4byte	0x388
 9954 16f5 31       		.uleb128 0x31
 9955 16f6 5D100000 		.4byte	.LASF282
 9956 16fa 07       		.byte	0x7
 9957 16fb 6C01     		.2byte	0x16c
 9958 16fd 7D050000 		.4byte	0x57d
 9959 1701 31       		.uleb128 0x31
 9960 1702 F3090000 		.4byte	.LASF283
 9961 1706 07       		.byte	0x7
 9962 1707 6C01     		.2byte	0x16c
 9963 1709 7D050000 		.4byte	0x57d
 9964 170d 31       		.uleb128 0x31
 9965 170e 140F0000 		.4byte	.LASF284
 9966 1712 07       		.byte	0x7
 9967 1713 7001     		.2byte	0x170
 9968 1715 DF000000 		.4byte	0xdf
 9969 1719 31       		.uleb128 0x31
 9970 171a 1B040000 		.4byte	.LASF285
 9971 171e 07       		.byte	0x7
 9972 171f 6701     		.2byte	0x167
 9973 1721 97000000 		.4byte	0x97
 9974 1725 0E       		.uleb128 0xe
 9975 1726 97000000 		.4byte	0x97
 9976 172a 35170000 		.4byte	0x1735
 9977 172e 0F       		.uleb128 0xf
 9978 172f 0C010000 		.4byte	0x10c
 9979 1733 02       		.byte	0x2
 9980 1734 00       		.byte	0
 9981 1735 31       		.uleb128 0x31
 9982 1736 50090000 		.4byte	.LASF286
 9983 173a 07       		.byte	0x7
 9984 173b 2001     		.2byte	0x120
 9985 173d 25170000 		.4byte	0x1725
 9986 1741 31       		.uleb128 0x31
 9987 1742 B9060000 		.4byte	.LASF287
 9988 1746 07       		.byte	0x7
 9989 1747 6801     		.2byte	0x168
 9990 1749 97000000 		.4byte	0x97
 9991 174d 31       		.uleb128 0x31
 9992 174e 350D0000 		.4byte	.LASF288
 9993 1752 07       		.byte	0x7
 9994 1753 2C01     		.2byte	0x12c
 9995 1755 950D0000 		.4byte	0xd95
 9996 1759 31       		.uleb128 0x31
 9997 175a 63030000 		.4byte	.LASF289
 9998 175e 07       		.byte	0x7
 9999 175f 2D01     		.2byte	0x12d
 10000 1761 950D0000 		.4byte	0xd95
 10001 1765 31       		.uleb128 0x31
 10002 1766 34100000 		.4byte	.LASF290
 10003 176a 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 224


 10004 176b 3001     		.2byte	0x130
 10005 176d 950D0000 		.4byte	0xd95
 10006 1771 31       		.uleb128 0x31
 10007 1772 A1100000 		.4byte	.LASF291
 10008 1776 07       		.byte	0x7
 10009 1777 6A01     		.2byte	0x16a
 10010 1779 97000000 		.4byte	0x97
 10011 177d 31       		.uleb128 0x31
 10012 177e D4050000 		.4byte	.LASF292
 10013 1782 07       		.byte	0x7
 10014 1783 5401     		.2byte	0x154
 10015 1785 D3000000 		.4byte	0xd3
 10016 1789 31       		.uleb128 0x31
 10017 178a D30B0000 		.4byte	.LASF293
 10018 178e 07       		.byte	0x7
 10019 178f 5501     		.2byte	0x155
 10020 1791 D7040000 		.4byte	0x4d7
 10021 1795 31       		.uleb128 0x31
 10022 1796 B7100000 		.4byte	.LASF294
 10023 179a 07       		.byte	0x7
 10024 179b 5501     		.2byte	0x155
 10025 179d D7040000 		.4byte	0x4d7
 10026 17a1 31       		.uleb128 0x31
 10027 17a2 82090000 		.4byte	.LASF295
 10028 17a6 07       		.byte	0x7
 10029 17a7 5501     		.2byte	0x155
 10030 17a9 D7040000 		.4byte	0x4d7
 10031 17ad 31       		.uleb128 0x31
 10032 17ae 3C110000 		.4byte	.LASF296
 10033 17b2 07       		.byte	0x7
 10034 17b3 5601     		.2byte	0x156
 10035 17b5 97000000 		.4byte	0x97
 10036 17b9 31       		.uleb128 0x31
 10037 17ba BE020000 		.4byte	.LASF297
 10038 17be 07       		.byte	0x7
 10039 17bf 5601     		.2byte	0x156
 10040 17c1 97000000 		.4byte	0x97
 10041 17c5 31       		.uleb128 0x31
 10042 17c6 3F020000 		.4byte	.LASF298
 10043 17ca 07       		.byte	0x7
 10044 17cb 5601     		.2byte	0x156
 10045 17cd 97000000 		.4byte	0x97
 10046 17d1 31       		.uleb128 0x31
 10047 17d2 AA020000 		.4byte	.LASF299
 10048 17d6 07       		.byte	0x7
 10049 17d7 8101     		.2byte	0x181
 10050 17d9 C7000000 		.4byte	0xc7
 10051 17dd 31       		.uleb128 0x31
 10052 17de B4020000 		.4byte	.LASF300
 10053 17e2 07       		.byte	0x7
 10054 17e3 8201     		.2byte	0x182
 10055 17e5 C7000000 		.4byte	0xc7
 10056 17e9 31       		.uleb128 0x31
 10057 17ea 7C030000 		.4byte	.LASF301
 10058 17ee 07       		.byte	0x7
 10059 17ef 6B01     		.2byte	0x16b
 10060 17f1 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 225


 10061 17f5 31       		.uleb128 0x31
 10062 17f6 B10D0000 		.4byte	.LASF302
 10063 17fa 07       		.byte	0x7
 10064 17fb 6B01     		.2byte	0x16b
 10065 17fd D3000000 		.4byte	0xd3
 10066 1801 31       		.uleb128 0x31
 10067 1802 B40B0000 		.4byte	.LASF303
 10068 1806 07       		.byte	0x7
 10069 1807 8401     		.2byte	0x184
 10070 1809 840D0000 		.4byte	0xd84
 10071 180d 32       		.uleb128 0x32
 10072 180e 080F0000 		.4byte	.LASF304
 10073 1812 01       		.byte	0x1
 10074 1813 33       		.byte	0x33
 10075 1814 1E180000 		.4byte	0x181e
 10076 1818 05       		.uleb128 0x5
 10077 1819 03       		.byte	0x3
 10078 181a 00000000 		.4byte	EEPROM_ADDR
 10079 181e 07       		.uleb128 0x7
 10080 181f 04       		.byte	0x4
 10081 1820 F4000000 		.4byte	0xf4
 10082 1824 00       		.byte	0
 10083              		.section	.debug_abbrev,"",%progbits
 10084              	.Ldebug_abbrev0:
 10085 0000 01       		.uleb128 0x1
 10086 0001 11       		.uleb128 0x11
 10087 0002 01       		.byte	0x1
 10088 0003 25       		.uleb128 0x25
 10089 0004 0E       		.uleb128 0xe
 10090 0005 13       		.uleb128 0x13
 10091 0006 0B       		.uleb128 0xb
 10092 0007 03       		.uleb128 0x3
 10093 0008 0E       		.uleb128 0xe
 10094 0009 1B       		.uleb128 0x1b
 10095 000a 0E       		.uleb128 0xe
 10096 000b 55       		.uleb128 0x55
 10097 000c 17       		.uleb128 0x17
 10098 000d 11       		.uleb128 0x11
 10099 000e 01       		.uleb128 0x1
 10100 000f 10       		.uleb128 0x10
 10101 0010 17       		.uleb128 0x17
 10102 0011 00       		.byte	0
 10103 0012 00       		.byte	0
 10104 0013 02       		.uleb128 0x2
 10105 0014 24       		.uleb128 0x24
 10106 0015 00       		.byte	0
 10107 0016 0B       		.uleb128 0xb
 10108 0017 0B       		.uleb128 0xb
 10109 0018 3E       		.uleb128 0x3e
 10110 0019 0B       		.uleb128 0xb
 10111 001a 03       		.uleb128 0x3
 10112 001b 0E       		.uleb128 0xe
 10113 001c 00       		.byte	0
 10114 001d 00       		.byte	0
 10115 001e 03       		.uleb128 0x3
 10116 001f 16       		.uleb128 0x16
 10117 0020 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 226


 10118 0021 03       		.uleb128 0x3
 10119 0022 0E       		.uleb128 0xe
 10120 0023 3A       		.uleb128 0x3a
 10121 0024 0B       		.uleb128 0xb
 10122 0025 3B       		.uleb128 0x3b
 10123 0026 0B       		.uleb128 0xb
 10124 0027 49       		.uleb128 0x49
 10125 0028 13       		.uleb128 0x13
 10126 0029 00       		.byte	0
 10127 002a 00       		.byte	0
 10128 002b 04       		.uleb128 0x4
 10129 002c 24       		.uleb128 0x24
 10130 002d 00       		.byte	0
 10131 002e 0B       		.uleb128 0xb
 10132 002f 0B       		.uleb128 0xb
 10133 0030 3E       		.uleb128 0x3e
 10134 0031 0B       		.uleb128 0xb
 10135 0032 03       		.uleb128 0x3
 10136 0033 08       		.uleb128 0x8
 10137 0034 00       		.byte	0
 10138 0035 00       		.byte	0
 10139 0036 05       		.uleb128 0x5
 10140 0037 16       		.uleb128 0x16
 10141 0038 00       		.byte	0
 10142 0039 03       		.uleb128 0x3
 10143 003a 0E       		.uleb128 0xe
 10144 003b 3A       		.uleb128 0x3a
 10145 003c 0B       		.uleb128 0xb
 10146 003d 3B       		.uleb128 0x3b
 10147 003e 05       		.uleb128 0x5
 10148 003f 49       		.uleb128 0x49
 10149 0040 13       		.uleb128 0x13
 10150 0041 00       		.byte	0
 10151 0042 00       		.byte	0
 10152 0043 06       		.uleb128 0x6
 10153 0044 35       		.uleb128 0x35
 10154 0045 00       		.byte	0
 10155 0046 49       		.uleb128 0x49
 10156 0047 13       		.uleb128 0x13
 10157 0048 00       		.byte	0
 10158 0049 00       		.byte	0
 10159 004a 07       		.uleb128 0x7
 10160 004b 0F       		.uleb128 0xf
 10161 004c 00       		.byte	0
 10162 004d 0B       		.uleb128 0xb
 10163 004e 0B       		.uleb128 0xb
 10164 004f 49       		.uleb128 0x49
 10165 0050 13       		.uleb128 0x13
 10166 0051 00       		.byte	0
 10167 0052 00       		.byte	0
 10168 0053 08       		.uleb128 0x8
 10169 0054 26       		.uleb128 0x26
 10170 0055 00       		.byte	0
 10171 0056 49       		.uleb128 0x49
 10172 0057 13       		.uleb128 0x13
 10173 0058 00       		.byte	0
 10174 0059 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 227


 10175 005a 09       		.uleb128 0x9
 10176 005b 04       		.uleb128 0x4
 10177 005c 01       		.byte	0x1
 10178 005d 03       		.uleb128 0x3
 10179 005e 0E       		.uleb128 0xe
 10180 005f 0B       		.uleb128 0xb
 10181 0060 0B       		.uleb128 0xb
 10182 0061 49       		.uleb128 0x49
 10183 0062 13       		.uleb128 0x13
 10184 0063 3A       		.uleb128 0x3a
 10185 0064 0B       		.uleb128 0xb
 10186 0065 3B       		.uleb128 0x3b
 10187 0066 0B       		.uleb128 0xb
 10188 0067 01       		.uleb128 0x1
 10189 0068 13       		.uleb128 0x13
 10190 0069 00       		.byte	0
 10191 006a 00       		.byte	0
 10192 006b 0A       		.uleb128 0xa
 10193 006c 28       		.uleb128 0x28
 10194 006d 00       		.byte	0
 10195 006e 03       		.uleb128 0x3
 10196 006f 0E       		.uleb128 0xe
 10197 0070 1C       		.uleb128 0x1c
 10198 0071 0B       		.uleb128 0xb
 10199 0072 00       		.byte	0
 10200 0073 00       		.byte	0
 10201 0074 0B       		.uleb128 0xb
 10202 0075 13       		.uleb128 0x13
 10203 0076 01       		.byte	0x1
 10204 0077 03       		.uleb128 0x3
 10205 0078 0E       		.uleb128 0xe
 10206 0079 0B       		.uleb128 0xb
 10207 007a 0B       		.uleb128 0xb
 10208 007b 3A       		.uleb128 0x3a
 10209 007c 0B       		.uleb128 0xb
 10210 007d 3B       		.uleb128 0x3b
 10211 007e 0B       		.uleb128 0xb
 10212 007f 01       		.uleb128 0x1
 10213 0080 13       		.uleb128 0x13
 10214 0081 00       		.byte	0
 10215 0082 00       		.byte	0
 10216 0083 0C       		.uleb128 0xc
 10217 0084 0D       		.uleb128 0xd
 10218 0085 00       		.byte	0
 10219 0086 03       		.uleb128 0x3
 10220 0087 0E       		.uleb128 0xe
 10221 0088 3A       		.uleb128 0x3a
 10222 0089 0B       		.uleb128 0xb
 10223 008a 3B       		.uleb128 0x3b
 10224 008b 0B       		.uleb128 0xb
 10225 008c 49       		.uleb128 0x49
 10226 008d 13       		.uleb128 0x13
 10227 008e 38       		.uleb128 0x38
 10228 008f 0B       		.uleb128 0xb
 10229 0090 00       		.byte	0
 10230 0091 00       		.byte	0
 10231 0092 0D       		.uleb128 0xd
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 228


 10232 0093 0D       		.uleb128 0xd
 10233 0094 00       		.byte	0
 10234 0095 03       		.uleb128 0x3
 10235 0096 08       		.uleb128 0x8
 10236 0097 3A       		.uleb128 0x3a
 10237 0098 0B       		.uleb128 0xb
 10238 0099 3B       		.uleb128 0x3b
 10239 009a 0B       		.uleb128 0xb
 10240 009b 49       		.uleb128 0x49
 10241 009c 13       		.uleb128 0x13
 10242 009d 38       		.uleb128 0x38
 10243 009e 0B       		.uleb128 0xb
 10244 009f 00       		.byte	0
 10245 00a0 00       		.byte	0
 10246 00a1 0E       		.uleb128 0xe
 10247 00a2 01       		.uleb128 0x1
 10248 00a3 01       		.byte	0x1
 10249 00a4 49       		.uleb128 0x49
 10250 00a5 13       		.uleb128 0x13
 10251 00a6 01       		.uleb128 0x1
 10252 00a7 13       		.uleb128 0x13
 10253 00a8 00       		.byte	0
 10254 00a9 00       		.byte	0
 10255 00aa 0F       		.uleb128 0xf
 10256 00ab 21       		.uleb128 0x21
 10257 00ac 00       		.byte	0
 10258 00ad 49       		.uleb128 0x49
 10259 00ae 13       		.uleb128 0x13
 10260 00af 2F       		.uleb128 0x2f
 10261 00b0 0B       		.uleb128 0xb
 10262 00b1 00       		.byte	0
 10263 00b2 00       		.byte	0
 10264 00b3 10       		.uleb128 0x10
 10265 00b4 13       		.uleb128 0x13
 10266 00b5 01       		.byte	0x1
 10267 00b6 03       		.uleb128 0x3
 10268 00b7 0E       		.uleb128 0xe
 10269 00b8 0B       		.uleb128 0xb
 10270 00b9 0B       		.uleb128 0xb
 10271 00ba 3A       		.uleb128 0x3a
 10272 00bb 0B       		.uleb128 0xb
 10273 00bc 3B       		.uleb128 0x3b
 10274 00bd 05       		.uleb128 0x5
 10275 00be 01       		.uleb128 0x1
 10276 00bf 13       		.uleb128 0x13
 10277 00c0 00       		.byte	0
 10278 00c1 00       		.byte	0
 10279 00c2 11       		.uleb128 0x11
 10280 00c3 0D       		.uleb128 0xd
 10281 00c4 00       		.byte	0
 10282 00c5 03       		.uleb128 0x3
 10283 00c6 0E       		.uleb128 0xe
 10284 00c7 3A       		.uleb128 0x3a
 10285 00c8 0B       		.uleb128 0xb
 10286 00c9 3B       		.uleb128 0x3b
 10287 00ca 05       		.uleb128 0x5
 10288 00cb 49       		.uleb128 0x49
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 229


 10289 00cc 13       		.uleb128 0x13
 10290 00cd 38       		.uleb128 0x38
 10291 00ce 0B       		.uleb128 0xb
 10292 00cf 00       		.byte	0
 10293 00d0 00       		.byte	0
 10294 00d1 12       		.uleb128 0x12
 10295 00d2 0D       		.uleb128 0xd
 10296 00d3 00       		.byte	0
 10297 00d4 03       		.uleb128 0x3
 10298 00d5 08       		.uleb128 0x8
 10299 00d6 3A       		.uleb128 0x3a
 10300 00d7 0B       		.uleb128 0xb
 10301 00d8 3B       		.uleb128 0x3b
 10302 00d9 05       		.uleb128 0x5
 10303 00da 49       		.uleb128 0x49
 10304 00db 13       		.uleb128 0x13
 10305 00dc 38       		.uleb128 0x38
 10306 00dd 0B       		.uleb128 0xb
 10307 00de 00       		.byte	0
 10308 00df 00       		.byte	0
 10309 00e0 13       		.uleb128 0x13
 10310 00e1 2E       		.uleb128 0x2e
 10311 00e2 01       		.byte	0x1
 10312 00e3 03       		.uleb128 0x3
 10313 00e4 0E       		.uleb128 0xe
 10314 00e5 3A       		.uleb128 0x3a
 10315 00e6 0B       		.uleb128 0xb
 10316 00e7 3B       		.uleb128 0x3b
 10317 00e8 05       		.uleb128 0x5
 10318 00e9 27       		.uleb128 0x27
 10319 00ea 19       		.uleb128 0x19
 10320 00eb 49       		.uleb128 0x49
 10321 00ec 13       		.uleb128 0x13
 10322 00ed 20       		.uleb128 0x20
 10323 00ee 0B       		.uleb128 0xb
 10324 00ef 01       		.uleb128 0x1
 10325 00f0 13       		.uleb128 0x13
 10326 00f1 00       		.byte	0
 10327 00f2 00       		.byte	0
 10328 00f3 14       		.uleb128 0x14
 10329 00f4 05       		.uleb128 0x5
 10330 00f5 00       		.byte	0
 10331 00f6 03       		.uleb128 0x3
 10332 00f7 0E       		.uleb128 0xe
 10333 00f8 3A       		.uleb128 0x3a
 10334 00f9 0B       		.uleb128 0xb
 10335 00fa 3B       		.uleb128 0x3b
 10336 00fb 05       		.uleb128 0x5
 10337 00fc 49       		.uleb128 0x49
 10338 00fd 13       		.uleb128 0x13
 10339 00fe 00       		.byte	0
 10340 00ff 00       		.byte	0
 10341 0100 15       		.uleb128 0x15
 10342 0101 34       		.uleb128 0x34
 10343 0102 00       		.byte	0
 10344 0103 03       		.uleb128 0x3
 10345 0104 0E       		.uleb128 0xe
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 230


 10346 0105 3A       		.uleb128 0x3a
 10347 0106 0B       		.uleb128 0xb
 10348 0107 3B       		.uleb128 0x3b
 10349 0108 05       		.uleb128 0x5
 10350 0109 49       		.uleb128 0x49
 10351 010a 13       		.uleb128 0x13
 10352 010b 00       		.byte	0
 10353 010c 00       		.byte	0
 10354 010d 16       		.uleb128 0x16
 10355 010e 2E       		.uleb128 0x2e
 10356 010f 01       		.byte	0x1
 10357 0110 3F       		.uleb128 0x3f
 10358 0111 19       		.uleb128 0x19
 10359 0112 03       		.uleb128 0x3
 10360 0113 0E       		.uleb128 0xe
 10361 0114 3A       		.uleb128 0x3a
 10362 0115 0B       		.uleb128 0xb
 10363 0116 3B       		.uleb128 0x3b
 10364 0117 0B       		.uleb128 0xb
 10365 0118 27       		.uleb128 0x27
 10366 0119 19       		.uleb128 0x19
 10367 011a 11       		.uleb128 0x11
 10368 011b 01       		.uleb128 0x1
 10369 011c 12       		.uleb128 0x12
 10370 011d 06       		.uleb128 0x6
 10371 011e 40       		.uleb128 0x40
 10372 011f 18       		.uleb128 0x18
 10373 0120 9642     		.uleb128 0x2116
 10374 0122 19       		.uleb128 0x19
 10375 0123 01       		.uleb128 0x1
 10376 0124 13       		.uleb128 0x13
 10377 0125 00       		.byte	0
 10378 0126 00       		.byte	0
 10379 0127 17       		.uleb128 0x17
 10380 0128 34       		.uleb128 0x34
 10381 0129 00       		.byte	0
 10382 012a 03       		.uleb128 0x3
 10383 012b 0E       		.uleb128 0xe
 10384 012c 3A       		.uleb128 0x3a
 10385 012d 0B       		.uleb128 0xb
 10386 012e 3B       		.uleb128 0x3b
 10387 012f 0B       		.uleb128 0xb
 10388 0130 49       		.uleb128 0x49
 10389 0131 13       		.uleb128 0x13
 10390 0132 02       		.uleb128 0x2
 10391 0133 18       		.uleb128 0x18
 10392 0134 00       		.byte	0
 10393 0135 00       		.byte	0
 10394 0136 18       		.uleb128 0x18
 10395 0137 1D       		.uleb128 0x1d
 10396 0138 01       		.byte	0x1
 10397 0139 31       		.uleb128 0x31
 10398 013a 13       		.uleb128 0x13
 10399 013b 11       		.uleb128 0x11
 10400 013c 01       		.uleb128 0x1
 10401 013d 12       		.uleb128 0x12
 10402 013e 06       		.uleb128 0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 231


 10403 013f 58       		.uleb128 0x58
 10404 0140 0B       		.uleb128 0xb
 10405 0141 59       		.uleb128 0x59
 10406 0142 0B       		.uleb128 0xb
 10407 0143 01       		.uleb128 0x1
 10408 0144 13       		.uleb128 0x13
 10409 0145 00       		.byte	0
 10410 0146 00       		.byte	0
 10411 0147 19       		.uleb128 0x19
 10412 0148 05       		.uleb128 0x5
 10413 0149 00       		.byte	0
 10414 014a 31       		.uleb128 0x31
 10415 014b 13       		.uleb128 0x13
 10416 014c 02       		.uleb128 0x2
 10417 014d 18       		.uleb128 0x18
 10418 014e 00       		.byte	0
 10419 014f 00       		.byte	0
 10420 0150 1A       		.uleb128 0x1a
 10421 0151 0B       		.uleb128 0xb
 10422 0152 01       		.byte	0x1
 10423 0153 11       		.uleb128 0x11
 10424 0154 01       		.uleb128 0x1
 10425 0155 12       		.uleb128 0x12
 10426 0156 06       		.uleb128 0x6
 10427 0157 00       		.byte	0
 10428 0158 00       		.byte	0
 10429 0159 1B       		.uleb128 0x1b
 10430 015a 34       		.uleb128 0x34
 10431 015b 00       		.byte	0
 10432 015c 31       		.uleb128 0x31
 10433 015d 13       		.uleb128 0x13
 10434 015e 02       		.uleb128 0x2
 10435 015f 18       		.uleb128 0x18
 10436 0160 00       		.byte	0
 10437 0161 00       		.byte	0
 10438 0162 1C       		.uleb128 0x1c
 10439 0163 1D       		.uleb128 0x1d
 10440 0164 01       		.byte	0x1
 10441 0165 31       		.uleb128 0x31
 10442 0166 13       		.uleb128 0x13
 10443 0167 11       		.uleb128 0x11
 10444 0168 01       		.uleb128 0x1
 10445 0169 12       		.uleb128 0x12
 10446 016a 06       		.uleb128 0x6
 10447 016b 58       		.uleb128 0x58
 10448 016c 0B       		.uleb128 0xb
 10449 016d 59       		.uleb128 0x59
 10450 016e 05       		.uleb128 0x5
 10451 016f 01       		.uleb128 0x1
 10452 0170 13       		.uleb128 0x13
 10453 0171 00       		.byte	0
 10454 0172 00       		.byte	0
 10455 0173 1D       		.uleb128 0x1d
 10456 0174 1D       		.uleb128 0x1d
 10457 0175 01       		.byte	0x1
 10458 0176 31       		.uleb128 0x31
 10459 0177 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 232


 10460 0178 11       		.uleb128 0x11
 10461 0179 01       		.uleb128 0x1
 10462 017a 12       		.uleb128 0x12
 10463 017b 06       		.uleb128 0x6
 10464 017c 58       		.uleb128 0x58
 10465 017d 0B       		.uleb128 0xb
 10466 017e 59       		.uleb128 0x59
 10467 017f 05       		.uleb128 0x5
 10468 0180 00       		.byte	0
 10469 0181 00       		.byte	0
 10470 0182 1E       		.uleb128 0x1e
 10471 0183 2E       		.uleb128 0x2e
 10472 0184 01       		.byte	0x1
 10473 0185 3F       		.uleb128 0x3f
 10474 0186 19       		.uleb128 0x19
 10475 0187 03       		.uleb128 0x3
 10476 0188 0E       		.uleb128 0xe
 10477 0189 3A       		.uleb128 0x3a
 10478 018a 0B       		.uleb128 0xb
 10479 018b 3B       		.uleb128 0x3b
 10480 018c 05       		.uleb128 0x5
 10481 018d 27       		.uleb128 0x27
 10482 018e 19       		.uleb128 0x19
 10483 018f 11       		.uleb128 0x11
 10484 0190 01       		.uleb128 0x1
 10485 0191 12       		.uleb128 0x12
 10486 0192 06       		.uleb128 0x6
 10487 0193 40       		.uleb128 0x40
 10488 0194 18       		.uleb128 0x18
 10489 0195 9642     		.uleb128 0x2116
 10490 0197 19       		.uleb128 0x19
 10491 0198 01       		.uleb128 0x1
 10492 0199 13       		.uleb128 0x13
 10493 019a 00       		.byte	0
 10494 019b 00       		.byte	0
 10495 019c 1F       		.uleb128 0x1f
 10496 019d 34       		.uleb128 0x34
 10497 019e 00       		.byte	0
 10498 019f 03       		.uleb128 0x3
 10499 01a0 0E       		.uleb128 0xe
 10500 01a1 3A       		.uleb128 0x3a
 10501 01a2 0B       		.uleb128 0xb
 10502 01a3 3B       		.uleb128 0x3b
 10503 01a4 05       		.uleb128 0x5
 10504 01a5 49       		.uleb128 0x49
 10505 01a6 13       		.uleb128 0x13
 10506 01a7 02       		.uleb128 0x2
 10507 01a8 18       		.uleb128 0x18
 10508 01a9 00       		.byte	0
 10509 01aa 00       		.byte	0
 10510 01ab 20       		.uleb128 0x20
 10511 01ac 21       		.uleb128 0x21
 10512 01ad 00       		.byte	0
 10513 01ae 49       		.uleb128 0x49
 10514 01af 13       		.uleb128 0x13
 10515 01b0 2F       		.uleb128 0x2f
 10516 01b1 05       		.uleb128 0x5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 233


 10517 01b2 00       		.byte	0
 10518 01b3 00       		.byte	0
 10519 01b4 21       		.uleb128 0x21
 10520 01b5 2E       		.uleb128 0x2e
 10521 01b6 01       		.byte	0x1
 10522 01b7 3F       		.uleb128 0x3f
 10523 01b8 19       		.uleb128 0x19
 10524 01b9 03       		.uleb128 0x3
 10525 01ba 0E       		.uleb128 0xe
 10526 01bb 3A       		.uleb128 0x3a
 10527 01bc 0B       		.uleb128 0xb
 10528 01bd 3B       		.uleb128 0x3b
 10529 01be 05       		.uleb128 0x5
 10530 01bf 27       		.uleb128 0x27
 10531 01c0 19       		.uleb128 0x19
 10532 01c1 49       		.uleb128 0x49
 10533 01c2 13       		.uleb128 0x13
 10534 01c3 11       		.uleb128 0x11
 10535 01c4 01       		.uleb128 0x1
 10536 01c5 12       		.uleb128 0x12
 10537 01c6 06       		.uleb128 0x6
 10538 01c7 40       		.uleb128 0x40
 10539 01c8 18       		.uleb128 0x18
 10540 01c9 9742     		.uleb128 0x2117
 10541 01cb 19       		.uleb128 0x19
 10542 01cc 01       		.uleb128 0x1
 10543 01cd 13       		.uleb128 0x13
 10544 01ce 00       		.byte	0
 10545 01cf 00       		.byte	0
 10546 01d0 22       		.uleb128 0x22
 10547 01d1 05       		.uleb128 0x5
 10548 01d2 00       		.byte	0
 10549 01d3 03       		.uleb128 0x3
 10550 01d4 0E       		.uleb128 0xe
 10551 01d5 3A       		.uleb128 0x3a
 10552 01d6 0B       		.uleb128 0xb
 10553 01d7 3B       		.uleb128 0x3b
 10554 01d8 05       		.uleb128 0x5
 10555 01d9 49       		.uleb128 0x49
 10556 01da 13       		.uleb128 0x13
 10557 01db 02       		.uleb128 0x2
 10558 01dc 18       		.uleb128 0x18
 10559 01dd 00       		.byte	0
 10560 01de 00       		.byte	0
 10561 01df 23       		.uleb128 0x23
 10562 01e0 34       		.uleb128 0x34
 10563 01e1 00       		.byte	0
 10564 01e2 03       		.uleb128 0x3
 10565 01e3 08       		.uleb128 0x8
 10566 01e4 3A       		.uleb128 0x3a
 10567 01e5 0B       		.uleb128 0xb
 10568 01e6 3B       		.uleb128 0x3b
 10569 01e7 05       		.uleb128 0x5
 10570 01e8 49       		.uleb128 0x49
 10571 01e9 13       		.uleb128 0x13
 10572 01ea 02       		.uleb128 0x2
 10573 01eb 18       		.uleb128 0x18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 234


 10574 01ec 00       		.byte	0
 10575 01ed 00       		.byte	0
 10576 01ee 24       		.uleb128 0x24
 10577 01ef 0B       		.uleb128 0xb
 10578 01f0 01       		.byte	0x1
 10579 01f1 11       		.uleb128 0x11
 10580 01f2 01       		.uleb128 0x1
 10581 01f3 12       		.uleb128 0x12
 10582 01f4 06       		.uleb128 0x6
 10583 01f5 01       		.uleb128 0x1
 10584 01f6 13       		.uleb128 0x13
 10585 01f7 00       		.byte	0
 10586 01f8 00       		.byte	0
 10587 01f9 25       		.uleb128 0x25
 10588 01fa 21       		.uleb128 0x21
 10589 01fb 00       		.byte	0
 10590 01fc 49       		.uleb128 0x49
 10591 01fd 13       		.uleb128 0x13
 10592 01fe 2F       		.uleb128 0x2f
 10593 01ff 18       		.uleb128 0x18
 10594 0200 00       		.byte	0
 10595 0201 00       		.byte	0
 10596 0202 26       		.uleb128 0x26
 10597 0203 2E       		.uleb128 0x2e
 10598 0204 01       		.byte	0x1
 10599 0205 3F       		.uleb128 0x3f
 10600 0206 19       		.uleb128 0x19
 10601 0207 03       		.uleb128 0x3
 10602 0208 0E       		.uleb128 0xe
 10603 0209 3A       		.uleb128 0x3a
 10604 020a 0B       		.uleb128 0xb
 10605 020b 3B       		.uleb128 0x3b
 10606 020c 05       		.uleb128 0x5
 10607 020d 27       		.uleb128 0x27
 10608 020e 19       		.uleb128 0x19
 10609 020f 11       		.uleb128 0x11
 10610 0210 01       		.uleb128 0x1
 10611 0211 12       		.uleb128 0x12
 10612 0212 06       		.uleb128 0x6
 10613 0213 40       		.uleb128 0x40
 10614 0214 18       		.uleb128 0x18
 10615 0215 9742     		.uleb128 0x2117
 10616 0217 19       		.uleb128 0x19
 10617 0218 01       		.uleb128 0x1
 10618 0219 13       		.uleb128 0x13
 10619 021a 00       		.byte	0
 10620 021b 00       		.byte	0
 10621 021c 27       		.uleb128 0x27
 10622 021d 2E       		.uleb128 0x2e
 10623 021e 00       		.byte	0
 10624 021f 3F       		.uleb128 0x3f
 10625 0220 19       		.uleb128 0x19
 10626 0221 03       		.uleb128 0x3
 10627 0222 0E       		.uleb128 0xe
 10628 0223 3A       		.uleb128 0x3a
 10629 0224 0B       		.uleb128 0xb
 10630 0225 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 235


 10631 0226 05       		.uleb128 0x5
 10632 0227 11       		.uleb128 0x11
 10633 0228 01       		.uleb128 0x1
 10634 0229 12       		.uleb128 0x12
 10635 022a 06       		.uleb128 0x6
 10636 022b 40       		.uleb128 0x40
 10637 022c 18       		.uleb128 0x18
 10638 022d 9742     		.uleb128 0x2117
 10639 022f 19       		.uleb128 0x19
 10640 0230 00       		.byte	0
 10641 0231 00       		.byte	0
 10642 0232 28       		.uleb128 0x28
 10643 0233 05       		.uleb128 0x5
 10644 0234 00       		.byte	0
 10645 0235 03       		.uleb128 0x3
 10646 0236 08       		.uleb128 0x8
 10647 0237 3A       		.uleb128 0x3a
 10648 0238 0B       		.uleb128 0xb
 10649 0239 3B       		.uleb128 0x3b
 10650 023a 05       		.uleb128 0x5
 10651 023b 49       		.uleb128 0x49
 10652 023c 13       		.uleb128 0x13
 10653 023d 02       		.uleb128 0x2
 10654 023e 18       		.uleb128 0x18
 10655 023f 00       		.byte	0
 10656 0240 00       		.byte	0
 10657 0241 29       		.uleb128 0x29
 10658 0242 2E       		.uleb128 0x2e
 10659 0243 01       		.byte	0x1
 10660 0244 3F       		.uleb128 0x3f
 10661 0245 19       		.uleb128 0x19
 10662 0246 03       		.uleb128 0x3
 10663 0247 0E       		.uleb128 0xe
 10664 0248 3A       		.uleb128 0x3a
 10665 0249 0B       		.uleb128 0xb
 10666 024a 3B       		.uleb128 0x3b
 10667 024b 05       		.uleb128 0x5
 10668 024c 27       		.uleb128 0x27
 10669 024d 19       		.uleb128 0x19
 10670 024e 49       		.uleb128 0x49
 10671 024f 13       		.uleb128 0x13
 10672 0250 11       		.uleb128 0x11
 10673 0251 01       		.uleb128 0x1
 10674 0252 12       		.uleb128 0x12
 10675 0253 06       		.uleb128 0x6
 10676 0254 40       		.uleb128 0x40
 10677 0255 18       		.uleb128 0x18
 10678 0256 9642     		.uleb128 0x2116
 10679 0258 19       		.uleb128 0x19
 10680 0259 01       		.uleb128 0x1
 10681 025a 13       		.uleb128 0x13
 10682 025b 00       		.byte	0
 10683 025c 00       		.byte	0
 10684 025d 2A       		.uleb128 0x2a
 10685 025e 2E       		.uleb128 0x2e
 10686 025f 00       		.byte	0
 10687 0260 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 236


 10688 0261 19       		.uleb128 0x19
 10689 0262 03       		.uleb128 0x3
 10690 0263 0E       		.uleb128 0xe
 10691 0264 3A       		.uleb128 0x3a
 10692 0265 0B       		.uleb128 0xb
 10693 0266 3B       		.uleb128 0x3b
 10694 0267 05       		.uleb128 0x5
 10695 0268 27       		.uleb128 0x27
 10696 0269 19       		.uleb128 0x19
 10697 026a 49       		.uleb128 0x49
 10698 026b 13       		.uleb128 0x13
 10699 026c 11       		.uleb128 0x11
 10700 026d 01       		.uleb128 0x1
 10701 026e 12       		.uleb128 0x12
 10702 026f 06       		.uleb128 0x6
 10703 0270 40       		.uleb128 0x40
 10704 0271 18       		.uleb128 0x18
 10705 0272 9642     		.uleb128 0x2116
 10706 0274 19       		.uleb128 0x19
 10707 0275 00       		.byte	0
 10708 0276 00       		.byte	0
 10709 0277 2B       		.uleb128 0x2b
 10710 0278 2E       		.uleb128 0x2e
 10711 0279 00       		.byte	0
 10712 027a 3F       		.uleb128 0x3f
 10713 027b 19       		.uleb128 0x19
 10714 027c 03       		.uleb128 0x3
 10715 027d 0E       		.uleb128 0xe
 10716 027e 3A       		.uleb128 0x3a
 10717 027f 0B       		.uleb128 0xb
 10718 0280 3B       		.uleb128 0x3b
 10719 0281 05       		.uleb128 0x5
 10720 0282 27       		.uleb128 0x27
 10721 0283 19       		.uleb128 0x19
 10722 0284 11       		.uleb128 0x11
 10723 0285 01       		.uleb128 0x1
 10724 0286 12       		.uleb128 0x12
 10725 0287 06       		.uleb128 0x6
 10726 0288 40       		.uleb128 0x40
 10727 0289 18       		.uleb128 0x18
 10728 028a 9742     		.uleb128 0x2117
 10729 028c 19       		.uleb128 0x19
 10730 028d 00       		.byte	0
 10731 028e 00       		.byte	0
 10732 028f 2C       		.uleb128 0x2c
 10733 0290 2E       		.uleb128 0x2e
 10734 0291 01       		.byte	0x1
 10735 0292 3F       		.uleb128 0x3f
 10736 0293 19       		.uleb128 0x19
 10737 0294 03       		.uleb128 0x3
 10738 0295 0E       		.uleb128 0xe
 10739 0296 3A       		.uleb128 0x3a
 10740 0297 0B       		.uleb128 0xb
 10741 0298 3B       		.uleb128 0x3b
 10742 0299 05       		.uleb128 0x5
 10743 029a 11       		.uleb128 0x11
 10744 029b 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 237


 10745 029c 12       		.uleb128 0x12
 10746 029d 06       		.uleb128 0x6
 10747 029e 40       		.uleb128 0x40
 10748 029f 18       		.uleb128 0x18
 10749 02a0 9742     		.uleb128 0x2117
 10750 02a2 19       		.uleb128 0x19
 10751 02a3 01       		.uleb128 0x1
 10752 02a4 13       		.uleb128 0x13
 10753 02a5 00       		.byte	0
 10754 02a6 00       		.byte	0
 10755 02a7 2D       		.uleb128 0x2d
 10756 02a8 2E       		.uleb128 0x2e
 10757 02a9 01       		.byte	0x1
 10758 02aa 3F       		.uleb128 0x3f
 10759 02ab 19       		.uleb128 0x19
 10760 02ac 03       		.uleb128 0x3
 10761 02ad 0E       		.uleb128 0xe
 10762 02ae 3A       		.uleb128 0x3a
 10763 02af 0B       		.uleb128 0xb
 10764 02b0 3B       		.uleb128 0x3b
 10765 02b1 05       		.uleb128 0x5
 10766 02b2 11       		.uleb128 0x11
 10767 02b3 01       		.uleb128 0x1
 10768 02b4 12       		.uleb128 0x12
 10769 02b5 06       		.uleb128 0x6
 10770 02b6 40       		.uleb128 0x40
 10771 02b7 18       		.uleb128 0x18
 10772 02b8 9642     		.uleb128 0x2116
 10773 02ba 19       		.uleb128 0x19
 10774 02bb 01       		.uleb128 0x1
 10775 02bc 13       		.uleb128 0x13
 10776 02bd 00       		.byte	0
 10777 02be 00       		.byte	0
 10778 02bf 2E       		.uleb128 0x2e
 10779 02c0 2E       		.uleb128 0x2e
 10780 02c1 01       		.byte	0x1
 10781 02c2 3F       		.uleb128 0x3f
 10782 02c3 19       		.uleb128 0x19
 10783 02c4 03       		.uleb128 0x3
 10784 02c5 0E       		.uleb128 0xe
 10785 02c6 3A       		.uleb128 0x3a
 10786 02c7 0B       		.uleb128 0xb
 10787 02c8 3B       		.uleb128 0x3b
 10788 02c9 05       		.uleb128 0x5
 10789 02ca 49       		.uleb128 0x49
 10790 02cb 13       		.uleb128 0x13
 10791 02cc 11       		.uleb128 0x11
 10792 02cd 01       		.uleb128 0x1
 10793 02ce 12       		.uleb128 0x12
 10794 02cf 06       		.uleb128 0x6
 10795 02d0 40       		.uleb128 0x40
 10796 02d1 18       		.uleb128 0x18
 10797 02d2 9642     		.uleb128 0x2116
 10798 02d4 19       		.uleb128 0x19
 10799 02d5 01       		.uleb128 0x1
 10800 02d6 13       		.uleb128 0x13
 10801 02d7 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 238


 10802 02d8 00       		.byte	0
 10803 02d9 2F       		.uleb128 0x2f
 10804 02da 2E       		.uleb128 0x2e
 10805 02db 00       		.byte	0
 10806 02dc 3F       		.uleb128 0x3f
 10807 02dd 19       		.uleb128 0x19
 10808 02de 03       		.uleb128 0x3
 10809 02df 0E       		.uleb128 0xe
 10810 02e0 3A       		.uleb128 0x3a
 10811 02e1 0B       		.uleb128 0xb
 10812 02e2 3B       		.uleb128 0x3b
 10813 02e3 05       		.uleb128 0x5
 10814 02e4 11       		.uleb128 0x11
 10815 02e5 01       		.uleb128 0x1
 10816 02e6 12       		.uleb128 0x12
 10817 02e7 06       		.uleb128 0x6
 10818 02e8 40       		.uleb128 0x40
 10819 02e9 18       		.uleb128 0x18
 10820 02ea 9642     		.uleb128 0x2116
 10821 02ec 19       		.uleb128 0x19
 10822 02ed 00       		.byte	0
 10823 02ee 00       		.byte	0
 10824 02ef 30       		.uleb128 0x30
 10825 02f0 2E       		.uleb128 0x2e
 10826 02f1 00       		.byte	0
 10827 02f2 3F       		.uleb128 0x3f
 10828 02f3 19       		.uleb128 0x19
 10829 02f4 03       		.uleb128 0x3
 10830 02f5 0E       		.uleb128 0xe
 10831 02f6 3A       		.uleb128 0x3a
 10832 02f7 0B       		.uleb128 0xb
 10833 02f8 3B       		.uleb128 0x3b
 10834 02f9 05       		.uleb128 0x5
 10835 02fa 49       		.uleb128 0x49
 10836 02fb 13       		.uleb128 0x13
 10837 02fc 11       		.uleb128 0x11
 10838 02fd 01       		.uleb128 0x1
 10839 02fe 12       		.uleb128 0x12
 10840 02ff 06       		.uleb128 0x6
 10841 0300 40       		.uleb128 0x40
 10842 0301 18       		.uleb128 0x18
 10843 0302 9742     		.uleb128 0x2117
 10844 0304 19       		.uleb128 0x19
 10845 0305 00       		.byte	0
 10846 0306 00       		.byte	0
 10847 0307 31       		.uleb128 0x31
 10848 0308 34       		.uleb128 0x34
 10849 0309 00       		.byte	0
 10850 030a 03       		.uleb128 0x3
 10851 030b 0E       		.uleb128 0xe
 10852 030c 3A       		.uleb128 0x3a
 10853 030d 0B       		.uleb128 0xb
 10854 030e 3B       		.uleb128 0x3b
 10855 030f 05       		.uleb128 0x5
 10856 0310 49       		.uleb128 0x49
 10857 0311 13       		.uleb128 0x13
 10858 0312 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 239


 10859 0313 19       		.uleb128 0x19
 10860 0314 3C       		.uleb128 0x3c
 10861 0315 19       		.uleb128 0x19
 10862 0316 00       		.byte	0
 10863 0317 00       		.byte	0
 10864 0318 32       		.uleb128 0x32
 10865 0319 34       		.uleb128 0x34
 10866 031a 00       		.byte	0
 10867 031b 03       		.uleb128 0x3
 10868 031c 0E       		.uleb128 0xe
 10869 031d 3A       		.uleb128 0x3a
 10870 031e 0B       		.uleb128 0xb
 10871 031f 3B       		.uleb128 0x3b
 10872 0320 0B       		.uleb128 0xb
 10873 0321 49       		.uleb128 0x49
 10874 0322 13       		.uleb128 0x13
 10875 0323 3F       		.uleb128 0x3f
 10876 0324 19       		.uleb128 0x19
 10877 0325 02       		.uleb128 0x2
 10878 0326 18       		.uleb128 0x18
 10879 0327 00       		.byte	0
 10880 0328 00       		.byte	0
 10881 0329 00       		.byte	0
 10882              		.section	.debug_aranges,"",%progbits
 10883 0000 1C020000 		.4byte	0x21c
 10884 0004 0200     		.2byte	0x2
 10885 0006 00000000 		.4byte	.Ldebug_info0
 10886 000a 04       		.byte	0x4
 10887 000b 00       		.byte	0
 10888 000c 0000     		.2byte	0
 10889 000e 0000     		.2byte	0
 10890 0010 00000000 		.4byte	.LFB64
 10891 0014 BC050000 		.4byte	.LFE64-.LFB64
 10892 0018 00000000 		.4byte	.LFB65
 10893 001c 22000000 		.4byte	.LFE65-.LFB65
 10894 0020 00000000 		.4byte	.LFB66
 10895 0024 5E000000 		.4byte	.LFE66-.LFB66
 10896 0028 00000000 		.4byte	.LFB67
 10897 002c 64010000 		.4byte	.LFE67-.LFB67
 10898 0030 00000000 		.4byte	.LFB68
 10899 0034 BC070000 		.4byte	.LFE68-.LFB68
 10900 0038 00000000 		.4byte	.LFB69
 10901 003c 34070000 		.4byte	.LFE69-.LFB69
 10902 0040 00000000 		.4byte	.LFB70
 10903 0044 34010000 		.4byte	.LFE70-.LFB70
 10904 0048 00000000 		.4byte	.LFB71
 10905 004c 14000000 		.4byte	.LFE71-.LFB71
 10906 0050 00000000 		.4byte	.LFB72
 10907 0054 0C000000 		.4byte	.LFE72-.LFB72
 10908 0058 00000000 		.4byte	.LFB73
 10909 005c B8030000 		.4byte	.LFE73-.LFB73
 10910 0060 00000000 		.4byte	.LFB74
 10911 0064 14020000 		.4byte	.LFE74-.LFB74
 10912 0068 00000000 		.4byte	.LFB75
 10913 006c 12000000 		.4byte	.LFE75-.LFB75
 10914 0070 00000000 		.4byte	.LFB76
 10915 0074 12000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 240


 10916 0078 00000000 		.4byte	.LFB77
 10917 007c 12000000 		.4byte	.LFE77-.LFB77
 10918 0080 00000000 		.4byte	.LFB78
 10919 0084 12000000 		.4byte	.LFE78-.LFB78
 10920 0088 00000000 		.4byte	.LFB79
 10921 008c 12000000 		.4byte	.LFE79-.LFB79
 10922 0090 00000000 		.4byte	.LFB80
 10923 0094 12000000 		.4byte	.LFE80-.LFB80
 10924 0098 00000000 		.4byte	.LFB81
 10925 009c 12000000 		.4byte	.LFE81-.LFB81
 10926 00a0 00000000 		.4byte	.LFB82
 10927 00a4 84000000 		.4byte	.LFE82-.LFB82
 10928 00a8 00000000 		.4byte	.LFB83
 10929 00ac 88000000 		.4byte	.LFE83-.LFB83
 10930 00b0 00000000 		.4byte	.LFB84
 10931 00b4 A0000000 		.4byte	.LFE84-.LFB84
 10932 00b8 00000000 		.4byte	.LFB85
 10933 00bc 3E000000 		.4byte	.LFE85-.LFB85
 10934 00c0 00000000 		.4byte	.LFB86
 10935 00c4 2E000000 		.4byte	.LFE86-.LFB86
 10936 00c8 00000000 		.4byte	.LFB87
 10937 00cc 90000000 		.4byte	.LFE87-.LFB87
 10938 00d0 00000000 		.4byte	.LFB88
 10939 00d4 60000000 		.4byte	.LFE88-.LFB88
 10940 00d8 00000000 		.4byte	.LFB89
 10941 00dc 58000000 		.4byte	.LFE89-.LFB89
 10942 00e0 00000000 		.4byte	.LFB90
 10943 00e4 CC000000 		.4byte	.LFE90-.LFB90
 10944 00e8 00000000 		.4byte	.LFB91
 10945 00ec 0C000000 		.4byte	.LFE91-.LFB91
 10946 00f0 00000000 		.4byte	.LFB92
 10947 00f4 0C000000 		.4byte	.LFE92-.LFB92
 10948 00f8 00000000 		.4byte	.LFB93
 10949 00fc 0C000000 		.4byte	.LFE93-.LFB93
 10950 0100 00000000 		.4byte	.LFB94
 10951 0104 0C000000 		.4byte	.LFE94-.LFB94
 10952 0108 00000000 		.4byte	.LFB95
 10953 010c 0C000000 		.4byte	.LFE95-.LFB95
 10954 0110 00000000 		.4byte	.LFB96
 10955 0114 0C000000 		.4byte	.LFE96-.LFB96
 10956 0118 00000000 		.4byte	.LFB97
 10957 011c 0C000000 		.4byte	.LFE97-.LFB97
 10958 0120 00000000 		.4byte	.LFB98
 10959 0124 0C000000 		.4byte	.LFE98-.LFB98
 10960 0128 00000000 		.4byte	.LFB99
 10961 012c BC000000 		.4byte	.LFE99-.LFB99
 10962 0130 00000000 		.4byte	.LFB100
 10963 0134 2C000000 		.4byte	.LFE100-.LFB100
 10964 0138 00000000 		.4byte	.LFB101
 10965 013c 0C000000 		.4byte	.LFE101-.LFB101
 10966 0140 00000000 		.4byte	.LFB102
 10967 0144 0C000000 		.4byte	.LFE102-.LFB102
 10968 0148 00000000 		.4byte	.LFB103
 10969 014c 84000000 		.4byte	.LFE103-.LFB103
 10970 0150 00000000 		.4byte	.LFB104
 10971 0154 0C000000 		.4byte	.LFE104-.LFB104
 10972 0158 00000000 		.4byte	.LFB105
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 241


 10973 015c 0C000000 		.4byte	.LFE105-.LFB105
 10974 0160 00000000 		.4byte	.LFB106
 10975 0164 C4000000 		.4byte	.LFE106-.LFB106
 10976 0168 00000000 		.4byte	.LFB107
 10977 016c A8000000 		.4byte	.LFE107-.LFB107
 10978 0170 00000000 		.4byte	.LFB108
 10979 0174 0C000000 		.4byte	.LFE108-.LFB108
 10980 0178 00000000 		.4byte	.LFB109
 10981 017c 20000000 		.4byte	.LFE109-.LFB109
 10982 0180 00000000 		.4byte	.LFB110
 10983 0184 0C000000 		.4byte	.LFE110-.LFB110
 10984 0188 00000000 		.4byte	.LFB111
 10985 018c 94000000 		.4byte	.LFE111-.LFB111
 10986 0190 00000000 		.4byte	.LFB112
 10987 0194 60000000 		.4byte	.LFE112-.LFB112
 10988 0198 00000000 		.4byte	.LFB113
 10989 019c 0C000000 		.4byte	.LFE113-.LFB113
 10990 01a0 00000000 		.4byte	.LFB114
 10991 01a4 0C000000 		.4byte	.LFE114-.LFB114
 10992 01a8 00000000 		.4byte	.LFB115
 10993 01ac 0C000000 		.4byte	.LFE115-.LFB115
 10994 01b0 00000000 		.4byte	.LFB116
 10995 01b4 0C000000 		.4byte	.LFE116-.LFB116
 10996 01b8 00000000 		.4byte	.LFB117
 10997 01bc 0C000000 		.4byte	.LFE117-.LFB117
 10998 01c0 00000000 		.4byte	.LFB118
 10999 01c4 54010000 		.4byte	.LFE118-.LFB118
 11000 01c8 00000000 		.4byte	.LFB119
 11001 01cc 14000000 		.4byte	.LFE119-.LFB119
 11002 01d0 00000000 		.4byte	.LFB120
 11003 01d4 50010000 		.4byte	.LFE120-.LFB120
 11004 01d8 00000000 		.4byte	.LFB121
 11005 01dc 94010000 		.4byte	.LFE121-.LFB121
 11006 01e0 00000000 		.4byte	.LFB122
 11007 01e4 24000000 		.4byte	.LFE122-.LFB122
 11008 01e8 00000000 		.4byte	.LFB123
 11009 01ec 40000000 		.4byte	.LFE123-.LFB123
 11010 01f0 00000000 		.4byte	.LFB124
 11011 01f4 0E000000 		.4byte	.LFE124-.LFB124
 11012 01f8 00000000 		.4byte	.LFB125
 11013 01fc 12000000 		.4byte	.LFE125-.LFB125
 11014 0200 00000000 		.4byte	.LFB126
 11015 0204 84000000 		.4byte	.LFE126-.LFB126
 11016 0208 00000000 		.4byte	.LFB127
 11017 020c 30000000 		.4byte	.LFE127-.LFB127
 11018 0210 00000000 		.4byte	.LFB128
 11019 0214 0C000000 		.4byte	.LFE128-.LFB128
 11020 0218 00000000 		.4byte	0
 11021 021c 00000000 		.4byte	0
 11022              		.section	.debug_ranges,"",%progbits
 11023              	.Ldebug_ranges0:
 11024 0000 00000000 		.4byte	.LFB64
 11025 0004 BC050000 		.4byte	.LFE64
 11026 0008 00000000 		.4byte	.LFB65
 11027 000c 22000000 		.4byte	.LFE65
 11028 0010 00000000 		.4byte	.LFB66
 11029 0014 5E000000 		.4byte	.LFE66
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 242


 11030 0018 00000000 		.4byte	.LFB67
 11031 001c 64010000 		.4byte	.LFE67
 11032 0020 00000000 		.4byte	.LFB68
 11033 0024 BC070000 		.4byte	.LFE68
 11034 0028 00000000 		.4byte	.LFB69
 11035 002c 34070000 		.4byte	.LFE69
 11036 0030 00000000 		.4byte	.LFB70
 11037 0034 34010000 		.4byte	.LFE70
 11038 0038 00000000 		.4byte	.LFB71
 11039 003c 14000000 		.4byte	.LFE71
 11040 0040 00000000 		.4byte	.LFB72
 11041 0044 0C000000 		.4byte	.LFE72
 11042 0048 00000000 		.4byte	.LFB73
 11043 004c B8030000 		.4byte	.LFE73
 11044 0050 00000000 		.4byte	.LFB74
 11045 0054 14020000 		.4byte	.LFE74
 11046 0058 00000000 		.4byte	.LFB75
 11047 005c 12000000 		.4byte	.LFE75
 11048 0060 00000000 		.4byte	.LFB76
 11049 0064 12000000 		.4byte	.LFE76
 11050 0068 00000000 		.4byte	.LFB77
 11051 006c 12000000 		.4byte	.LFE77
 11052 0070 00000000 		.4byte	.LFB78
 11053 0074 12000000 		.4byte	.LFE78
 11054 0078 00000000 		.4byte	.LFB79
 11055 007c 12000000 		.4byte	.LFE79
 11056 0080 00000000 		.4byte	.LFB80
 11057 0084 12000000 		.4byte	.LFE80
 11058 0088 00000000 		.4byte	.LFB81
 11059 008c 12000000 		.4byte	.LFE81
 11060 0090 00000000 		.4byte	.LFB82
 11061 0094 84000000 		.4byte	.LFE82
 11062 0098 00000000 		.4byte	.LFB83
 11063 009c 88000000 		.4byte	.LFE83
 11064 00a0 00000000 		.4byte	.LFB84
 11065 00a4 A0000000 		.4byte	.LFE84
 11066 00a8 00000000 		.4byte	.LFB85
 11067 00ac 3E000000 		.4byte	.LFE85
 11068 00b0 00000000 		.4byte	.LFB86
 11069 00b4 2E000000 		.4byte	.LFE86
 11070 00b8 00000000 		.4byte	.LFB87
 11071 00bc 90000000 		.4byte	.LFE87
 11072 00c0 00000000 		.4byte	.LFB88
 11073 00c4 60000000 		.4byte	.LFE88
 11074 00c8 00000000 		.4byte	.LFB89
 11075 00cc 58000000 		.4byte	.LFE89
 11076 00d0 00000000 		.4byte	.LFB90
 11077 00d4 CC000000 		.4byte	.LFE90
 11078 00d8 00000000 		.4byte	.LFB91
 11079 00dc 0C000000 		.4byte	.LFE91
 11080 00e0 00000000 		.4byte	.LFB92
 11081 00e4 0C000000 		.4byte	.LFE92
 11082 00e8 00000000 		.4byte	.LFB93
 11083 00ec 0C000000 		.4byte	.LFE93
 11084 00f0 00000000 		.4byte	.LFB94
 11085 00f4 0C000000 		.4byte	.LFE94
 11086 00f8 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 243


 11087 00fc 0C000000 		.4byte	.LFE95
 11088 0100 00000000 		.4byte	.LFB96
 11089 0104 0C000000 		.4byte	.LFE96
 11090 0108 00000000 		.4byte	.LFB97
 11091 010c 0C000000 		.4byte	.LFE97
 11092 0110 00000000 		.4byte	.LFB98
 11093 0114 0C000000 		.4byte	.LFE98
 11094 0118 00000000 		.4byte	.LFB99
 11095 011c BC000000 		.4byte	.LFE99
 11096 0120 00000000 		.4byte	.LFB100
 11097 0124 2C000000 		.4byte	.LFE100
 11098 0128 00000000 		.4byte	.LFB101
 11099 012c 0C000000 		.4byte	.LFE101
 11100 0130 00000000 		.4byte	.LFB102
 11101 0134 0C000000 		.4byte	.LFE102
 11102 0138 00000000 		.4byte	.LFB103
 11103 013c 84000000 		.4byte	.LFE103
 11104 0140 00000000 		.4byte	.LFB104
 11105 0144 0C000000 		.4byte	.LFE104
 11106 0148 00000000 		.4byte	.LFB105
 11107 014c 0C000000 		.4byte	.LFE105
 11108 0150 00000000 		.4byte	.LFB106
 11109 0154 C4000000 		.4byte	.LFE106
 11110 0158 00000000 		.4byte	.LFB107
 11111 015c A8000000 		.4byte	.LFE107
 11112 0160 00000000 		.4byte	.LFB108
 11113 0164 0C000000 		.4byte	.LFE108
 11114 0168 00000000 		.4byte	.LFB109
 11115 016c 20000000 		.4byte	.LFE109
 11116 0170 00000000 		.4byte	.LFB110
 11117 0174 0C000000 		.4byte	.LFE110
 11118 0178 00000000 		.4byte	.LFB111
 11119 017c 94000000 		.4byte	.LFE111
 11120 0180 00000000 		.4byte	.LFB112
 11121 0184 60000000 		.4byte	.LFE112
 11122 0188 00000000 		.4byte	.LFB113
 11123 018c 0C000000 		.4byte	.LFE113
 11124 0190 00000000 		.4byte	.LFB114
 11125 0194 0C000000 		.4byte	.LFE114
 11126 0198 00000000 		.4byte	.LFB115
 11127 019c 0C000000 		.4byte	.LFE115
 11128 01a0 00000000 		.4byte	.LFB116
 11129 01a4 0C000000 		.4byte	.LFE116
 11130 01a8 00000000 		.4byte	.LFB117
 11131 01ac 0C000000 		.4byte	.LFE117
 11132 01b0 00000000 		.4byte	.LFB118
 11133 01b4 54010000 		.4byte	.LFE118
 11134 01b8 00000000 		.4byte	.LFB119
 11135 01bc 14000000 		.4byte	.LFE119
 11136 01c0 00000000 		.4byte	.LFB120
 11137 01c4 50010000 		.4byte	.LFE120
 11138 01c8 00000000 		.4byte	.LFB121
 11139 01cc 94010000 		.4byte	.LFE121
 11140 01d0 00000000 		.4byte	.LFB122
 11141 01d4 24000000 		.4byte	.LFE122
 11142 01d8 00000000 		.4byte	.LFB123
 11143 01dc 40000000 		.4byte	.LFE123
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 244


 11144 01e0 00000000 		.4byte	.LFB124
 11145 01e4 0E000000 		.4byte	.LFE124
 11146 01e8 00000000 		.4byte	.LFB125
 11147 01ec 12000000 		.4byte	.LFE125
 11148 01f0 00000000 		.4byte	.LFB126
 11149 01f4 84000000 		.4byte	.LFE126
 11150 01f8 00000000 		.4byte	.LFB127
 11151 01fc 30000000 		.4byte	.LFE127
 11152 0200 00000000 		.4byte	.LFB128
 11153 0204 0C000000 		.4byte	.LFE128
 11154 0208 00000000 		.4byte	0
 11155 020c 00000000 		.4byte	0
 11156              		.section	.debug_line,"",%progbits
 11157              	.Ldebug_line0:
 11158 0000 3D0B0000 		.section	.debug_str,"MS",%progbits,1
 11158      02008B01 
 11158      00000201 
 11158      FB0E0D00 
 11158      01010101 
 11159              	.LASF160:
 11160 0000 696E666F 		.ascii	"infoSend\000"
 11160      53656E64 
 11160      00
 11161              	.LASF48:
 11162 0009 4D454E55 		.ascii	"MENU_Y_N\000"
 11162      5F595F4E 
 11162      00
 11163              	.LASF174:
 11164 0012 73747269 		.ascii	"string_length\000"
 11164      6E675F6C 
 11164      656E6774 
 11164      6800
 11165              	.LASF24:
 11166 0020 73697A65 		.ascii	"sizetype\000"
 11166      74797065 
 11166      00
 11167              	.LASF66:
 11168 0029 434D445F 		.ascii	"CMD_INIT_MEM\000"
 11168      494E4954 
 11168      5F4D454D 
 11168      00
 11169              	.LASF99:
 11170 0036 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 11170      545F4D4F 
 11170      44455F45 
 11170      4D475F46 
 11170      4346535F 
 11171              	.LASF46:
 11172 004e 4D454E55 		.ascii	"MENU_INPUT\000"
 11172      5F494E50 
 11172      555400
 11173              	.LASF276:
 11174 0059 73746F70 		.ascii	"stop_master_device\000"
 11174      5F6D6173 
 11174      7465725F 
 11174      64657669 
 11174      636500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 245


 11175              	.LASF11:
 11176 006c 696E7433 		.ascii	"int32_t\000"
 11176      325F7400 
 11177              	.LASF281:
 11178 0074 675F7278 		.ascii	"g_rx\000"
 11178      00
 11179              	.LASF119:
 11180 0079 73745F64 		.ascii	"st_data\000"
 11180      61746100 
 11181              	.LASF221:
 11182 0081 77726974 		.ascii	"writeStatus\000"
 11182      65537461 
 11182      74757300 
 11183              	.LASF15:
 11184 008d 75696E74 		.ascii	"uint32\000"
 11184      333200
 11185              	.LASF249:
 11186 0094 636D645F 		.ascii	"cmd_set_baudrate\000"
 11186      7365745F 
 11186      62617564 
 11186      72617465 
 11186      00
 11187              	.LASF307:
 11188 00a5 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 11188      73657273 
 11188      5C6D676E 
 11188      6F63636F 
 11188      5C446F63 
 11189 00d2 5F574953 		.ascii	"_WISH_VIBES\\FW_WearableHealtySubj - WISH+Dayton\\P"
 11189      485F5649 
 11189      4245535C 
 11189      46575F57 
 11189      65617261 
 11190 0103 554C5345 		.ascii	"ULSE_HealthySubj.cydsn\000"
 11190      5F486561 
 11190      6C746879 
 11190      5375626A 
 11190      2E637964 
 11191              	.LASF264:
 11192 011a 6169725F 		.ascii	"air_chambers_control\000"
 11192      6368616D 
 11192      62657273 
 11192      5F636F6E 
 11192      74726F6C 
 11193              	.LASF200:
 11194 012f 70726570 		.ascii	"prepare_generic_info\000"
 11194      6172655F 
 11194      67656E65 
 11194      7269635F 
 11194      696E666F 
 11195              	.LASF186:
 11196 0144 4E554D5F 		.ascii	"NUM_MENUs\000"
 11196      4D454E55 
 11196      7300
 11197              	.LASF124:
 11198 014e 706F735F 		.ascii	"pos_lim_inf\000"
 11198      6C696D5F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 246


 11198      696E6600 
 11199              	.LASF164:
 11200 015a 54595045 		.ascii	"TYPE\000"
 11200      00
 11201              	.LASF147:
 11202 015f 63686F69 		.ascii	"choice\000"
 11202      636500
 11203              	.LASF270:
 11204 0166 70756D70 		.ascii	"pump_control\000"
 11204      5F636F6E 
 11204      74726F6C 
 11204      00
 11205              	.LASF33:
 11206 0173 43555354 		.ascii	"CUSTOM_RESET_COUNT\000"
 11206      4F4D5F52 
 11206      45534554 
 11206      5F434F55 
 11206      4E5400
 11207              	.LASF98:
 11208 0186 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 11208      545F4D4F 
 11208      44455F45 
 11208      4D475F46 
 11208      43465300 
 11209              	.LASF254:
 11210 019a 636D645F 		.ascii	"cmd_get_imu_readings\000"
 11210      6765745F 
 11210      696D755F 
 11210      72656164 
 11210      696E6773 
 11211              	.LASF132:
 11212 01af 73745F4D 		.ascii	"st_MASTER_spec\000"
 11212      41535445 
 11212      525F7370 
 11212      656300
 11213              	.LASF152:
 11214 01be 50415241 		.ascii	"PARAM_STR\000"
 11214      4D5F5354 
 11214      5200
 11215              	.LASF97:
 11216 01c8 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 11216      545F4D4F 
 11216      44455F45 
 11216      4D475F49 
 11216      4E544547 
 11217              	.LASF199:
 11218 01e0 6D5F746D 		.ascii	"m_tmp\000"
 11218      7000
 11219              	.LASF184:
 11220 01e6 50415241 		.ascii	"PARAM_IDX\000"
 11220      4D5F4944 
 11220      5800
 11221              	.LASF16:
 11222 01f0 696E7438 		.ascii	"int8\000"
 11222      00
 11223              	.LASF167:
 11224 01f5 6765745F 		.ascii	"get_param_list\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 247


 11224      70617261 
 11224      6D5F6C69 
 11224      737400
 11225              	.LASF233:
 11226 0204 636D645F 		.ascii	"cmd_get_accelerations\000"
 11226      6765745F 
 11226      61636365 
 11226      6C657261 
 11226      74696F6E 
 11227              	.LASF253:
 11228 021a 636D645F 		.ascii	"cmd_get_emg\000"
 11228      6765745F 
 11228      656D6700 
 11229              	.LASF127:
 11230 0226 73745F65 		.ascii	"st_emg\000"
 11230      6D6700
 11231              	.LASF39:
 11232 022d 43555354 		.ascii	"CUSTOM_MEAS_OFF_2\000"
 11232      4F4D5F4D 
 11232      4541535F 
 11232      4F46465F 
 11232      3200
 11233              	.LASF298:
 11234 023f 50756D70 		.ascii	"Pump_refNew\000"
 11234      5F726566 
 11234      4E657700 
 11235              	.LASF267:
 11236 024b 72657375 		.ascii	"result\000"
 11236      6C7400
 11237              	.LASF118:
 11238 0252 72656164 		.ascii	"ready\000"
 11238      7900
 11239              	.LASF176:
 11240 0258 6175785F 		.ascii	"aux_str1\000"
 11240      73747231 
 11240      00
 11241              	.LASF29:
 11242 0261 43555354 		.ascii	"CUSTOM_POS_LIM\000"
 11242      4F4D5F50 
 11242      4F535F4C 
 11242      494D00
 11243              	.LASF84:
 11244 0270 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 11244      4745545F 
 11244      4A4F5953 
 11244      5449434B 
 11244      00
 11245              	.LASF96:
 11246 0281 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 11246      545F4D4F 
 11246      44455F45 
 11246      4D475F50 
 11246      524F504F 
 11247              	.LASF244:
 11248 029d 745F7374 		.ascii	"t_start\000"
 11248      61727400 
 11249              	.LASF144:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 248


 11250 02a5 6D656E75 		.ascii	"menu\000"
 11250      00
 11251              	.LASF299:
 11252 02aa 50574D5F 		.ascii	"PWM_IMU_1\000"
 11252      494D555F 
 11252      3100
 11253              	.LASF300:
 11254 02b4 50574D5F 		.ascii	"PWM_IMU_2\000"
 11254      494D555F 
 11254      3200
 11255              	.LASF297:
 11256 02be 50756D70 		.ascii	"Pump_refOld\000"
 11256      5F726566 
 11256      4F6C6400 
 11257              	.LASF4:
 11258 02ca 6C6F6E67 		.ascii	"long int\000"
 11258      20696E74 
 11258      00
 11259              	.LASF37:
 11260 02d3 43555354 		.ascii	"CUSTOM_CURR_PID_2\000"
 11260      4F4D5F43 
 11260      5552525F 
 11260      5049445F 
 11260      3200
 11261              	.LASF259:
 11262 02e5 636D645F 		.ascii	"cmd_get_SD_file\000"
 11262      6765745F 
 11262      53445F66 
 11262      696C6500 
 11263              	.LASF228:
 11264 02f5 7365745A 		.ascii	"setZeros\000"
 11264      65726F73 
 11264      00
 11265              	.LASF122:
 11266 02fe 756E7573 		.ascii	"unused_bytes\000"
 11266      65645F62 
 11266      79746573 
 11266      00
 11267              	.LASF151:
 11268 030b 4E554D5F 		.ascii	"NUM_ITEMS\000"
 11268      4954454D 
 11268      5300
 11269              	.LASF185:
 11270 0315 4D454D5F 		.ascii	"MEM_P\000"
 11270      5000
 11271              	.LASF257:
 11272 031b 636D645F 		.ascii	"cmd_get_ADC_map\000"
 11272      6765745F 
 11272      4144435F 
 11272      6D617000 
 11273              	.LASF74:
 11274 032b 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 11274      4745545F 
 11274      43555252 
 11274      454E5453 
 11274      00
 11275              	.LASF206:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 249


 11276 033c 70726570 		.ascii	"prepare_SD_EMG_history\000"
 11276      6172655F 
 11276      53445F45 
 11276      4D475F68 
 11276      6973746F 
 11277              	.LASF258:
 11278 0353 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 11278      6765745F 
 11278      4144435F 
 11278      72617700 
 11279              	.LASF289:
 11280 0363 73645061 		.ascii	"sdParam\000"
 11280      72616D00 
 11281              	.LASF36:
 11282 036b 43555354 		.ascii	"CUSTOM_POS_PID_2\000"
 11282      4F4D5F50 
 11282      4F535F50 
 11282      49445F32 
 11282      00
 11283              	.LASF301:
 11284 037c 70726573 		.ascii	"pressure_value\000"
 11284      73757265 
 11284      5F76616C 
 11284      756500
 11285              	.LASF250:
 11286 038b 636D645F 		.ascii	"cmd_ping\000"
 11286      70696E67 
 11286      00
 11287              	.LASF27:
 11288 0394 43555354 		.ascii	"CUSTOM_INPUT\000"
 11288      4F4D5F49 
 11288      4E505554 
 11288      00
 11289              	.LASF189:
 11290 03a1 7365745F 		.ascii	"set_custom_param\000"
 11290      63757374 
 11290      6F6D5F70 
 11290      6172616D 
 11290      00
 11291              	.LASF262:
 11292 03b2 636D645F 		.ascii	"cmd_remove_SD_file\000"
 11292      72656D6F 
 11292      76655F53 
 11292      445F6669 
 11292      6C6500
 11293              	.LASF41:
 11294 03c5 43555354 		.ascii	"CUSTOM_DRIVER_2\000"
 11294      4F4D5F44 
 11294      52495645 
 11294      525F3200 
 11295              	.LASF0:
 11296 03d5 7369676E 		.ascii	"signed char\000"
 11296      65642063 
 11296      68617200 
 11297              	.LASF133:
 11298 03e1 6D617374 		.ascii	"master_mode_active\000"
 11298      65725F6D 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 250


 11298      6F64655F 
 11298      61637469 
 11298      766500
 11299              	.LASF219:
 11300 03f4 6D656D53 		.ascii	"memStore\000"
 11300      746F7265 
 11300      00
 11301              	.LASF261:
 11302 03fd 66696C65 		.ascii	"filename\000"
 11302      6E616D65 
 11302      00
 11303              	.LASF131:
 11304 0406 73776974 		.ascii	"switch_emg\000"
 11304      63685F65 
 11304      6D6700
 11305              	.LASF246:
 11306 0411 72656164 		.ascii	"read_flag\000"
 11306      5F666C61 
 11306      6700
 11307              	.LASF285:
 11308 041b 696E7465 		.ascii	"interrupt_flag\000"
 11308      72727570 
 11308      745F666C 
 11308      616700
 11309              	.LASF47:
 11310 042a 4D454E55 		.ascii	"MENU_CTRL\000"
 11310      5F435452 
 11310      4C00
 11311              	.LASF1:
 11312 0434 756E7369 		.ascii	"unsigned char\000"
 11312      676E6564 
 11312      20636861 
 11312      7200
 11313              	.LASF81:
 11314 0442 434D445F 		.ascii	"CMD_SET_VIBROTACTILE_INPUTS\000"
 11314      5345545F 
 11314      56494252 
 11314      4F544143 
 11314      54494C45 
 11315              	.LASF82:
 11316 045e 434D445F 		.ascii	"CMD_GET_VIBROTACTILE_INPUTS\000"
 11316      4745545F 
 11316      56494252 
 11316      4F544143 
 11316      54494C45 
 11317              	.LASF69:
 11318 047a 434D445F 		.ascii	"CMD_ACTIVATE\000"
 11318      41435449 
 11318      56415445 
 11318      00
 11319              	.LASF62:
 11320 0487 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 11320      53544F52 
 11320      455F4445 
 11320      4641554C 
 11320      545F5041 
 11321              	.LASF32:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 251


 11322 04a0 43555354 		.ascii	"CUSTOM_HAND_SIDE\000"
 11322      4F4D5F48 
 11322      414E445F 
 11322      53494445 
 11322      00
 11323              	.LASF218:
 11324 04b1 76616C75 		.ascii	"value\000"
 11324      6500
 11325              	.LASF158:
 11326 04b7 70726573 		.ascii	"pressure\000"
 11326      73757265 
 11326      00
 11327              	.LASF70:
 11328 04c0 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 11328      4745545F 
 11328      41435449 
 11328      56415445 
 11328      00
 11329              	.LASF21:
 11330 04d1 63686172 		.ascii	"char\000"
 11330      00
 11331              	.LASF268:
 11332 04d6 76616C76 		.ascii	"valve_command\000"
 11332      655F636F 
 11332      6D6D616E 
 11332      6400
 11333              	.LASF265:
 11334 04e4 70726573 		.ascii	"pressure_reference\000"
 11334      73757265 
 11334      5F726566 
 11334      6572656E 
 11334      636500
 11335              	.LASF223:
 11336 04f7 7265745F 		.ascii	"ret_val\000"
 11336      76616C00 
 11337              	.LASF52:
 11338 04ff 4D454E55 		.ascii	"MENU_SPI\000"
 11338      5F535049 
 11338      00
 11339              	.LASF148:
 11340 0508 70617261 		.ascii	"parameter\000"
 11340      6D657465 
 11340      7200
 11341              	.LASF162:
 11342 0512 7061636B 		.ascii	"packet_string\000"
 11342      65745F73 
 11342      7472696E 
 11342      6700
 11343              	.LASF34:
 11344 0520 43555354 		.ascii	"CUSTOM_LAST_CHECKED_t\000"
 11344      4F4D5F4C 
 11344      4153545F 
 11344      43484543 
 11344      4B45445F 
 11345              	.LASF215:
 11346 0536 64617461 		.ascii	"data_length\000"
 11346      5F6C656E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 252


 11346      67746800 
 11347              	.LASF125:
 11348 0542 706F735F 		.ascii	"pos_lim_sup\000"
 11348      6C696D5F 
 11348      73757000 
 11349              	.LASF230:
 11350 054e 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 11350      6E69745F 
 11350      4F74626B 
 11350      41637457 
 11350      72697374 
 11351              	.LASF130:
 11352 0565 656D675F 		.ascii	"emg_speed\000"
 11352      73706565 
 11352      6400
 11353              	.LASF181:
 11354 056f 7061636B 		.ascii	"packet_data\000"
 11354      65745F64 
 11354      61746100 
 11355              	.LASF120:
 11356 057b 73745F64 		.ascii	"st_device\000"
 11356      65766963 
 11356      6500
 11357              	.LASF210:
 11358 0585 636F6D6D 		.ascii	"commWrite\000"
 11358      57726974 
 11358      6500
 11359              	.LASF277:
 11360 058f 64656163 		.ascii	"deactivate_slaves\000"
 11360      74697661 
 11360      74655F73 
 11360      6C617665 
 11360      7300
 11361              	.LASF222:
 11362 05a1 70616765 		.ascii	"pages\000"
 11362      7300
 11363              	.LASF309:
 11364 05a7 6D656D49 		.ascii	"memInit\000"
 11364      6E697400 
 11365              	.LASF44:
 11366 05af 6D656E75 		.ascii	"menu_type\000"
 11366      5F747970 
 11366      6500
 11367              	.LASF55:
 11368 05b9 4D454E55 		.ascii	"MENU_DEVICE\000"
 11368      5F444556 
 11368      49434500 
 11369              	.LASF71:
 11370 05c5 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 11370      5345545F 
 11370      494E5055 
 11370      545300
 11371              	.LASF292:
 11372 05d4 53485F72 		.ascii	"SH_ref\000"
 11372      656600
 11373              	.LASF116:
 11374 05db 62756666 		.ascii	"buffer\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 253


 11374      657200
 11375              	.LASF248:
 11376 05e2 63757272 		.ascii	"curr_diff\000"
 11376      5F646966 
 11376      6600
 11377              	.LASF231:
 11378 05ec 636D645F 		.ascii	"cmd_get_measurements\000"
 11378      6765745F 
 11378      6D656173 
 11378      7572656D 
 11378      656E7473 
 11379              	.LASF161:
 11380 0601 72785F63 		.ascii	"rx_cmd\000"
 11380      6D6400
 11381              	.LASF114:
 11382 0608 54595045 		.ascii	"TYPE_DOUBLE\000"
 11382      5F444F55 
 11382      424C4500 
 11383              	.LASF274:
 11384 0614 736C6176 		.ascii	"slave_motor_idx\000"
 11384      655F6D6F 
 11384      746F725F 
 11384      69647800 
 11385              	.LASF251:
 11386 0624 636D645F 		.ascii	"cmd_get_inputs\000"
 11386      6765745F 
 11386      696E7075 
 11386      747300
 11387              	.LASF235:
 11388 0633 6C617374 		.ascii	"last_aux_int16\000"
 11388      5F617578 
 11388      5F696E74 
 11388      313600
 11389              	.LASF103:
 11390 0642 41434B5F 		.ascii	"ACK_ERROR\000"
 11390      4552524F 
 11390      5200
 11391              	.LASF94:
 11392 064c 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 11392      545F4D4F 
 11392      44455F45 
 11392      58544552 
 11392      4E414C00 
 11393              	.LASF183:
 11394 0660 696E6465 		.ascii	"index\000"
 11394      7800
 11395              	.LASF137:
 11396 0666 6D617869 		.ascii	"maximum_pressure_kPa\000"
 11396      6D756D5F 
 11396      70726573 
 11396      73757265 
 11396      5F6B5061 
 11397              	.LASF43:
 11398 067b 63757374 		.ascii	"custom_param\000"
 11398      6F6D5F70 
 11398      6172616D 
 11398      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 254


 11399              	.LASF260:
 11400 0688 66696C65 		.ascii	"filename_length\000"
 11400      6E616D65 
 11400      5F6C656E 
 11400      67746800 
 11401              	.LASF247:
 11402 0698 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 11402      52656164 
 11402      52657343 
 11402      75727246 
 11402      726F6D53 
 11403              	.LASF57:
 11404 06ae 4D454E55 		.ascii	"MENU_WRIST\000"
 11404      5F575249 
 11404      535400
 11405              	.LASF287:
 11406 06b9 72657365 		.ascii	"reset_PSoC_flag\000"
 11406      745F5053 
 11406      6F435F66 
 11406      6C616700 
 11407              	.LASF273:
 11408 06c9 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 11408      5F616374 
 11408      5F777269 
 11408      73745F63 
 11408      6F6E7472 
 11409              	.LASF115:
 11410 06e0 54595045 		.ascii	"TYPE_STRING\000"
 11410      5F535452 
 11410      494E4700 
 11411              	.LASF61:
 11412 06ec 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 11412      53544F52 
 11412      455F5041 
 11412      52414D53 
 11412      00
 11413              	.LASF7:
 11414 06fd 6C6F6E67 		.ascii	"long unsigned int\000"
 11414      20756E73 
 11414      69676E65 
 11414      6420696E 
 11414      7400
 11415              	.LASF65:
 11416 070f 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 11416      424F4F54 
 11416      4C4F4144 
 11416      455200
 11417              	.LASF212:
 11418 071e 6E756D5F 		.ascii	"num_of_bytes\000"
 11418      6F665F62 
 11418      79746573 
 11418      00
 11419              	.LASF100:
 11420 072b 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 11420      545F4D4F 
 11420      44455F4A 
 11420      4F595354 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 255


 11420      49434B00 
 11421              	.LASF220:
 11422 073f 64697370 		.ascii	"displacement\000"
 11422      6C616365 
 11422      6D656E74 
 11422      00
 11423              	.LASF242:
 11424 074c 636D645F 		.ascii	"cmd_get_vibrotactile_inputs\000"
 11424      6765745F 
 11424      76696272 
 11424      6F746163 
 11424      74696C65 
 11425              	.LASF166:
 11426 0768 7374725F 		.ascii	"str_sd_data\000"
 11426      73645F64 
 11426      61746100 
 11427              	.LASF134:
 11428 0774 736C6176 		.ascii	"slave_ID\000"
 11428      655F4944 
 11428      00
 11429              	.LASF104:
 11430 077d 41434B5F 		.ascii	"ACK_OK\000"
 11430      4F4B00
 11431              	.LASF106:
 11432 0784 54595045 		.ascii	"TYPE_FLAG\000"
 11432      5F464C41 
 11432      4700
 11433              	.LASF180:
 11434 078e 7061636B 		.ascii	"packet_length\000"
 11434      65745F6C 
 11434      656E6774 
 11434      6800
 11435              	.LASF30:
 11436 079c 43555354 		.ascii	"CUSTOM_REST_POS\000"
 11436      4F4D5F52 
 11436      4553545F 
 11436      504F5300 
 11437              	.LASF126:
 11438 07ac 696E7075 		.ascii	"input_mode\000"
 11438      745F6D6F 
 11438      646500
 11439              	.LASF76:
 11440 07b7 434D445F 		.ascii	"CMD_GET_EMG\000"
 11440      4745545F 
 11440      454D4700 
 11441              	.LASF226:
 11442 07c3 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 11442      6E69745F 
 11442      536F6674 
 11442      48616E64 
 11442      50726F00 
 11443              	.LASF156:
 11444 07d7 70696E67 		.ascii	"ping\000"
 11444      00
 11445              	.LASF64:
 11446 07dc 434D445F 		.ascii	"CMD_GET_INFO\000"
 11446      4745545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 256


 11446      494E464F 
 11446      00
 11447              	.LASF190:
 11448 07e9 6765745F 		.ascii	"get_IMU_param_list\000"
 11448      494D555F 
 11448      70617261 
 11448      6D5F6C69 
 11448      737400
 11449              	.LASF153:
 11450 07fc 4D454E55 		.ascii	"MENU\000"
 11450      00
 11451              	.LASF54:
 11452 0801 4D454E55 		.ascii	"MENU_DRIVER\000"
 11452      5F445249 
 11452      56455200 
 11453              	.LASF139:
 11454 080d 76696272 		.ascii	"vibrotactile_feedback_active\000"
 11454      6F746163 
 11454      74696C65 
 11454      5F666565 
 11454      64626163 
 11455              	.LASF75:
 11456 082a 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 11456      4745545F 
 11456      43555252 
 11456      5F414E44 
 11456      5F4D4541 
 11457              	.LASF305:
 11458 0840 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11458      43313120 
 11458      352E342E 
 11458      31203230 
 11458      31363036 
 11459 0873 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 11459      20726576 
 11459      6973696F 
 11459      6E203233 
 11459      37373135 
 11460 08a6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 11460      66756E63 
 11460      74696F6E 
 11460      2D736563 
 11460      74696F6E 
 11461              	.LASF234:
 11462 08ce 636D645F 		.ascii	"cmd_get_joystick\000"
 11462      6765745F 
 11462      6A6F7973 
 11462      7469636B 
 11462      00
 11463              	.LASF80:
 11464 08df 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 11464      5345545F 
 11464      43554646 
 11464      5F494E50 
 11464      55545300 
 11465              	.LASF6:
 11466 08f3 5F5F7569 		.ascii	"__uint32_t\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 257


 11466      6E743332 
 11466      5F7400
 11467              	.LASF8:
 11468 08fe 6C6F6E67 		.ascii	"long long int\000"
 11468      206C6F6E 
 11468      6720696E 
 11468      7400
 11469              	.LASF123:
 11470 090c 73745F73 		.ascii	"st_slave\000"
 11470      6C617665 
 11470      00
 11471              	.LASF263:
 11472 0915 76696272 		.ascii	"vibrotactile_control\000"
 11472      6F746163 
 11472      74696C65 
 11472      5F636F6E 
 11472      74726F6C 
 11473              	.LASF108:
 11474 092a 54595045 		.ascii	"TYPE_UINT8\000"
 11474      5F55494E 
 11474      543800
 11475              	.LASF143:
 11476 0935 53485F63 		.ascii	"SH_config\000"
 11476      6F6E6669 
 11476      6700
 11477              	.LASF240:
 11478 093f 636D645F 		.ascii	"cmd_get_currents\000"
 11478      6765745F 
 11478      63757272 
 11478      656E7473 
 11478      00
 11479              	.LASF286:
 11480 0950 6368616E 		.ascii	"change_ext_ref_flag\000"
 11480      67655F65 
 11480      78745F72 
 11480      65665F66 
 11480      6C616700 
 11481              	.LASF20:
 11482 0964 646F7562 		.ascii	"double\000"
 11482      6C6500
 11483              	.LASF91:
 11484 096b 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 11484      4745545F 
 11484      53445F53 
 11484      494E474C 
 11484      455F4649 
 11485              	.LASF295:
 11486 0982 56545F72 		.ascii	"VT_refNew\000"
 11486      65664E65 
 11486      7700
 11487              	.LASF278:
 11488 098c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11488      52784275 
 11488      66666572 
 11488      00
 11489              	.LASF271:
 11490 0999 56545F63 		.ascii	"VT_control\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 258


 11490      6F6E7472 
 11490      6F6C00
 11491              	.LASF19:
 11492 09a4 666C6F61 		.ascii	"float\000"
 11492      7400
 11493              	.LASF196:
 11494 09aa 6175785F 		.ascii	"aux_int8\000"
 11494      696E7438 
 11494      00
 11495              	.LASF92:
 11496 09b3 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 11496      52454D4F 
 11496      56455F53 
 11496      445F5349 
 11496      4E474C45 
 11497              	.LASF266:
 11498 09cd 6572725F 		.ascii	"err_pressure\000"
 11498      70726573 
 11498      73757265 
 11498      00
 11499              	.LASF178:
 11500 09da 636F756E 		.ascii	"count\000"
 11500      7400
 11501              	.LASF157:
 11502 09e0 73745F61 		.ascii	"st_adc_meas\000"
 11502      64635F6D 
 11502      65617300 
 11503              	.LASF173:
 11504 09ec 6D5F6164 		.ascii	"m_addr\000"
 11504      647200
 11505              	.LASF283:
 11506 09f3 635F6D65 		.ascii	"c_mem\000"
 11506      6D00
 11507              	.LASF214:
 11508 09f9 64617461 		.ascii	"data_array\000"
 11508      5F617272 
 11508      617900
 11509              	.LASF10:
 11510 0a04 756E7369 		.ascii	"unsigned int\000"
 11510      676E6564 
 11510      20696E74 
 11510      00
 11511              	.LASF227:
 11512 0a11 6D656D49 		.ascii	"memInit_Master\000"
 11512      6E69745F 
 11512      4D617374 
 11512      657200
 11513              	.LASF204:
 11514 0a20 70726570 		.ascii	"prepare_SD_legend\000"
 11514      6172655F 
 11514      53445F6C 
 11514      6567656E 
 11514      6400
 11515              	.LASF58:
 11516 0a32 53485F63 		.ascii	"SH_command\000"
 11516      6F6D6D61 
 11516      6E6400
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 259


 11517              	.LASF110:
 11518 0a3d 54595045 		.ascii	"TYPE_UINT16\000"
 11518      5F55494E 
 11518      54313600 
 11519              	.LASF142:
 11520 0a49 666C6167 		.ascii	"flag\000"
 11520      00
 11521              	.LASF38:
 11522 0a4e 43555354 		.ascii	"CUSTOM_INPUT_2\000"
 11522      4F4D5F49 
 11522      4E505554 
 11522      5F3200
 11523              	.LASF269:
 11524 0a5d 785F7661 		.ascii	"x_value\000"
 11524      6C756500 
 11525              	.LASF236:
 11526 0a65 636D645F 		.ascii	"cmd_set_inputs\000"
 11526      7365745F 
 11526      696E7075 
 11526      747300
 11527              	.LASF49:
 11528 0a74 4D454E55 		.ascii	"MENU_R_L\000"
 11528      5F525F4C 
 11528      00
 11529              	.LASF171:
 11530 0a7d 4D454E55 		.ascii	"MENU_LIST\000"
 11530      5F4C4953 
 11530      5400
 11531              	.LASF95:
 11532 0a87 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 11532      545F4D4F 
 11532      44455F45 
 11532      4E434F44 
 11532      45523300 
 11533              	.LASF211:
 11534 0a9b 636F6D6D 		.ascii	"commWriteID\000"
 11534      57726974 
 11534      65494400 
 11535              	.LASF87:
 11536 0aa7 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 11536      4745545F 
 11536      454E434F 
 11536      4445525F 
 11536      434F4E46 
 11537              	.LASF154:
 11538 0abc 4E554D5F 		.ascii	"NUM_STR\000"
 11538      53545200 
 11539              	.LASF238:
 11540 0ac4 636D645F 		.ascii	"cmd_get_activate\000"
 11540      6765745F 
 11540      61637469 
 11540      76617465 
 11540      00
 11541              	.LASF272:
 11542 0ad5 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 11542      61637469 
 11542      76617469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 260


 11542      6F6E5F76 
 11542      656C6F63 
 11543              	.LASF113:
 11544 0af1 54595045 		.ascii	"TYPE_FLOAT\000"
 11544      5F464C4F 
 11544      415400
 11545              	.LASF40:
 11546 0afc 43555354 		.ascii	"CUSTOM_POS_LIM_2\000"
 11546      4F4D5F50 
 11546      4F535F4C 
 11546      494D5F32 
 11546      00
 11547              	.LASF202:
 11548 0b0d 70726570 		.ascii	"prepare_R01_info\000"
 11548      6172655F 
 11548      5230315F 
 11548      696E666F 
 11548      00
 11549              	.LASF109:
 11550 0b1e 54595045 		.ascii	"TYPE_INT16\000"
 11550      5F494E54 
 11550      313600
 11551              	.LASF198:
 11552 0b29 6175785F 		.ascii	"aux_uint16\000"
 11552      75696E74 
 11552      313600
 11553              	.LASF128:
 11554 0b34 656D675F 		.ascii	"emg_threshold\000"
 11554      74687265 
 11554      73686F6C 
 11554      6400
 11555              	.LASF79:
 11556 0b42 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 11556      4745545F 
 11556      43555252 
 11556      5F444946 
 11556      4600
 11557              	.LASF42:
 11558 0b54 43555354 		.ascii	"CUSTOM_DEV_TYPE\000"
 11558      4F4D5F44 
 11558      45565F54 
 11558      59504500 
 11559              	.LASF229:
 11560 0b64 6D656D49 		.ascii	"memInit_AirChambers_Vibrotactile_Fb\000"
 11560      6E69745F 
 11560      41697243 
 11560      68616D62 
 11560      6572735F 
 11561              	.LASF23:
 11562 0b88 6C6F6E67 		.ascii	"long double\000"
 11562      20646F75 
 11562      626C6500 
 11563              	.LASF112:
 11564 0b94 54595045 		.ascii	"TYPE_UINT32\000"
 11564      5F55494E 
 11564      54333200 
 11565              	.LASF135:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 261


 11566 0ba0 73745F46 		.ascii	"st_FB_spec\000"
 11566      425F7370 
 11566      656300
 11567              	.LASF216:
 11568 0bab 63686563 		.ascii	"checksum\000"
 11568      6B73756D 
 11568      00
 11569              	.LASF303:
 11570 0bb4 73757065 		.ascii	"superstring\000"
 11570      72737472 
 11570      696E6700 
 11571              	.LASF68:
 11572 0bc0 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 11572      48414E44 
 11572      5F43414C 
 11572      49425241 
 11572      544500
 11573              	.LASF293:
 11574 0bd3 56545F72 		.ascii	"VT_ref\000"
 11574      656600
 11575              	.LASF275:
 11576 0bda 64726976 		.ascii	"drive_slave\000"
 11576      655F736C 
 11576      61766500 
 11577              	.LASF102:
 11578 0be6 61636B6E 		.ascii	"acknowledgment_values\000"
 11578      6F776C65 
 11578      64676D65 
 11578      6E745F76 
 11578      616C7565 
 11579              	.LASF225:
 11580 0bfc 6D656D52 		.ascii	"memRestore\000"
 11580      6573746F 
 11580      726500
 11581              	.LASF192:
 11582 0c07 696E666F 		.ascii	"info_string\000"
 11582      5F737472 
 11582      696E6700 
 11583              	.LASF168:
 11584 0c13 6E756D5F 		.ascii	"num_params\000"
 11584      70617261 
 11584      6D7300
 11585              	.LASF9:
 11586 0c1e 6C6F6E67 		.ascii	"long long unsigned int\000"
 11586      206C6F6E 
 11586      6720756E 
 11586      7369676E 
 11586      65642069 
 11587              	.LASF155:
 11588 0c35 63757374 		.ascii	"custom\000"
 11588      6F6D00
 11589              	.LASF53:
 11590 0c3c 4D454E55 		.ascii	"MENU_USER\000"
 11590      5F555345 
 11590      5200
 11591              	.LASF111:
 11592 0c46 54595045 		.ascii	"TYPE_INT32\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 262


 11592      5F494E54 
 11592      333200
 11593              	.LASF193:
 11594 0c51 6175785F 		.ascii	"aux_uint32\000"
 11594      75696E74 
 11594      333200
 11595              	.LASF117:
 11596 0c5c 6C656E67 		.ascii	"length\000"
 11596      746800
 11597              	.LASF172:
 11598 0c63 73656E64 		.ascii	"sendToDevice\000"
 11598      546F4465 
 11598      76696365 
 11598      00
 11599              	.LASF78:
 11600 0c70 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 11600      4745545F 
 11600      41434345 
 11600      4C00
 11601              	.LASF232:
 11602 0c7e 636D645F 		.ascii	"cmd_get_velocities\000"
 11602      6765745F 
 11602      76656C6F 
 11602      63697469 
 11602      657300
 11603              	.LASF224:
 11604 0c91 6D656D52 		.ascii	"memRecall\000"
 11604      6563616C 
 11604      6C00
 11605              	.LASF252:
 11606 0c9b 636D645F 		.ascii	"cmd_store_params\000"
 11606      73746F72 
 11606      655F7061 
 11606      72616D73 
 11606      00
 11607              	.LASF179:
 11608 0cac 6175785F 		.ascii	"aux_char\000"
 11608      63686172 
 11608      00
 11609              	.LASF83:
 11610 0cb5 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 11610      5345545F 
 11610      42415544 
 11610      52415445 
 11610      00
 11611              	.LASF191:
 11612 0cc6 71626164 		.ascii	"qbadminp_string\000"
 11612      6D696E70 
 11612      5F737472 
 11612      696E6700 
 11613              	.LASF22:
 11614 0cd6 72656738 		.ascii	"reg8\000"
 11614      00
 11615              	.LASF138:
 11616 0cdb 70726F70 		.ascii	"prop_err_fb_gain\000"
 11616      5F657272 
 11616      5F66625F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 263


 11616      6761696E 
 11616      00
 11617              	.LASF208:
 11618 0cec 636F6D6D 		.ascii	"commWrite_old_id\000"
 11618      57726974 
 11618      655F6F6C 
 11618      645F6964 
 11618      00
 11619              	.LASF182:
 11620 0cfd 6D616E61 		.ascii	"manage_param_list\000"
 11620      67655F70 
 11620      6172616D 
 11620      5F6C6973 
 11620      7400
 11621              	.LASF195:
 11622 0d0f 6175785F 		.ascii	"aux_uint8\000"
 11622      75696E74 
 11622      3800
 11623              	.LASF63:
 11624 0d19 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 11624      52455354 
 11624      4F52455F 
 11624      50415241 
 11624      4D5300
 11625              	.LASF51:
 11626 0d2c 4D454E55 		.ascii	"MENU_EXP\000"
 11626      5F455850 
 11626      00
 11627              	.LASF288:
 11628 0d35 73644669 		.ascii	"sdFile\000"
 11628      6C6500
 11629              	.LASF169:
 11630 0d3c 6E756D5F 		.ascii	"num_menus\000"
 11630      6D656E75 
 11630      7300
 11631              	.LASF45:
 11632 0d46 4D454E55 		.ascii	"MENU_NO_MENU\000"
 11632      5F4E4F5F 
 11632      4D454E55 
 11632      00
 11633              	.LASF203:
 11634 0d53 70726570 		.ascii	"prepare_SD_param_info\000"
 11634      6172655F 
 11634      53445F70 
 11634      6172616D 
 11634      5F696E66 
 11635              	.LASF201:
 11636 0d69 70726570 		.ascii	"prepare_counter_info\000"
 11636      6172655F 
 11636      636F756E 
 11636      7465725F 
 11636      696E666F 
 11637              	.LASF205:
 11638 0d7e 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 11638      6172655F 
 11638      53445F45 
 11638      4D475F48 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 264


 11638      6973746F 
 11639              	.LASF209:
 11640 0d9c 6F6C645F 		.ascii	"old_id\000"
 11640      696400
 11641              	.LASF308:
 11642 0da3 5F5F5245 		.ascii	"__REV16\000"
 11642      56313600 
 11643              	.LASF149:
 11644 0dab 5641525F 		.ascii	"VAR_P\000"
 11644      5000
 11645              	.LASF302:
 11646 0db1 42617474 		.ascii	"Battery_level_out\000"
 11646      6572795F 
 11646      6C657665 
 11646      6C5F6F75 
 11646      7400
 11647              	.LASF239:
 11648 0dc3 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 11648      6765745F 
 11648      63757272 
 11648      5F616E64 
 11648      5F6D6561 
 11649              	.LASF165:
 11650 0dd9 696E666F 		.ascii	"info_type\000"
 11650      5F747970 
 11650      6500
 11651              	.LASF56:
 11652 0de3 4D454E55 		.ascii	"MENU_FSM\000"
 11652      5F46534D 
 11652      00
 11653              	.LASF90:
 11654 0dec 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 11654      4745545F 
 11654      4144435F 
 11654      52415700 
 11655              	.LASF101:
 11656 0dfc 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 11656      545F4D4F 
 11656      44455F45 
 11656      4D475F50 
 11656      524F504F 
 11657              	.LASF86:
 11658 0e1b 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 11658      4745545F 
 11658      494D555F 
 11658      50415241 
 11658      4D00
 11659              	.LASF88:
 11660 0e2d 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 11660      4745545F 
 11660      454E434F 
 11660      4445525F 
 11660      52415700 
 11661              	.LASF146:
 11662 0e41 72657365 		.ascii	"reset\000"
 11662      7400
 11663              	.LASF145:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 265


 11664 0e47 6E616D65 		.ascii	"name\000"
 11664      00
 11665              	.LASF73:
 11666 0e4c 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 11666      4745545F 
 11666      4D454153 
 11666      5552454D 
 11666      454E5453 
 11667              	.LASF140:
 11668 0e61 61697263 		.ascii	"airchamber_feedback_active\000"
 11668      68616D62 
 11668      65725F66 
 11668      65656462 
 11668      61636B5F 
 11669              	.LASF280:
 11670 0e7c 675F6164 		.ascii	"g_adc_measOld\000"
 11670      635F6D65 
 11670      61734F6C 
 11670      6400
 11671              	.LASF256:
 11672 0e8a 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 11672      6765745F 
 11672      656E636F 
 11672      6465725F 
 11672      72617700 
 11673              	.LASF13:
 11674 0e9e 75696E74 		.ascii	"uint8\000"
 11674      3800
 11675              	.LASF159:
 11676 0ea4 636F6D6D 		.ascii	"commProcess\000"
 11676      50726F63 
 11676      65737300 
 11677              	.LASF2:
 11678 0eb0 73686F72 		.ascii	"short int\000"
 11678      7420696E 
 11678      7400
 11679              	.LASF31:
 11680 0eba 43555354 		.ascii	"CUSTOM_REST_POS_DELAY\000"
 11680      4F4D5F52 
 11680      4553545F 
 11680      504F535F 
 11680      44454C41 
 11681              	.LASF72:
 11682 0ed0 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 11682      4745545F 
 11682      494E5055 
 11682      545300
 11683              	.LASF89:
 11684 0edf 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 11684      4745545F 
 11684      4144435F 
 11684      434F4E46 
 11684      00
 11685              	.LASF60:
 11686 0ef0 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 11686      5345545F 
 11686      5A45524F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 266


 11686      5300
 11687              	.LASF197:
 11688 0efe 6175785F 		.ascii	"aux_int16\000"
 11688      696E7431 
 11688      3600
 11689              	.LASF304:
 11690 0f08 45455052 		.ascii	"EEPROM_ADDR\000"
 11690      4F4D5F41 
 11690      44445200 
 11691              	.LASF284:
 11692 0f14 6379636C 		.ascii	"cycle_time\000"
 11692      655F7469 
 11692      6D6500
 11693              	.LASF26:
 11694 0f1f 43555354 		.ascii	"CUSTOM_CURR_PID\000"
 11694      4F4D5F43 
 11694      5552525F 
 11694      50494400 
 11695              	.LASF188:
 11696 0f2f 4E554D5F 		.ascii	"NUM_PARAMs\000"
 11696      50415241 
 11696      4D7300
 11697              	.LASF77:
 11698 0f3a 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 11698      4745545F 
 11698      56454C4F 
 11698      43495449 
 11698      455300
 11699              	.LASF67:
 11700 0f4d 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 11700      4745545F 
 11700      50415241 
 11700      4D5F4C49 
 11700      535400
 11701              	.LASF105:
 11702 0f60 64617461 		.ascii	"data_types\000"
 11702      5F747970 
 11702      657300
 11703              	.LASF17:
 11704 0f6b 696E7431 		.ascii	"int16\000"
 11704      3600
 11705              	.LASF50:
 11706 0f71 4D454E55 		.ascii	"MENU_ON_OFF\000"
 11706      5F4F4E5F 
 11706      4F464600 
 11707              	.LASF35:
 11708 0f7d 43555354 		.ascii	"CUSTOM_DRIVER\000"
 11708      4F4D5F44 
 11708      52495645 
 11708      5200
 11709              	.LASF28:
 11710 0f8b 43555354 		.ascii	"CUSTOM_MEAS_OFF\000"
 11710      4F4D5F4D 
 11710      4541535F 
 11710      4F464600 
 11711              	.LASF255:
 11712 0f9b 636D645F 		.ascii	"cmd_get_encoder_map\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 267


 11712      6765745F 
 11712      656E636F 
 11712      6465725F 
 11712      6D617000 
 11713              	.LASF12:
 11714 0faf 75696E74 		.ascii	"uint32_t\000"
 11714      33325F74 
 11714      00
 11715              	.LASF194:
 11716 0fb8 6175785F 		.ascii	"aux_float\000"
 11716      666C6F61 
 11716      7400
 11717              	.LASF170:
 11718 0fc2 50415241 		.ascii	"PARAM_LIST\000"
 11718      4D5F4C49 
 11718      535400
 11719              	.LASF217:
 11720 0fcd 73656E64 		.ascii	"sendAcknowledgment\000"
 11720      41636B6E 
 11720      6F776C65 
 11720      64676D65 
 11720      6E7400
 11721              	.LASF177:
 11722 0fe0 6175785F 		.ascii	"aux_int32\000"
 11722      696E7433 
 11722      3200
 11723              	.LASF121:
 11724 0fea 62617564 		.ascii	"baud_rate\000"
 11724      5F726174 
 11724      6500
 11725              	.LASF245:
 11726 0ff4 745F656E 		.ascii	"t_end\000"
 11726      6400
 11727              	.LASF241:
 11728 0ffa 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 11728      6765745F 
 11728      63757272 
 11728      656E7473 
 11728      5F666F72 
 11729              	.LASF85:
 11730 1014 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 11730      4745545F 
 11730      494D555F 
 11730      52454144 
 11730      494E4753 
 11731              	.LASF187:
 11732 1029 70617261 		.ascii	"param_type\000"
 11732      6D5F7479 
 11732      706500
 11733              	.LASF290:
 11734 1034 73645230 		.ascii	"sdR01File\000"
 11734      3146696C 
 11734      6500
 11735              	.LASF213:
 11736 103e 4C435243 		.ascii	"LCRChecksum\000"
 11736      6865636B 
 11736      73756D00 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 268


 11737              	.LASF3:
 11738 104a 73686F72 		.ascii	"short unsigned int\000"
 11738      7420756E 
 11738      7369676E 
 11738      65642069 
 11738      6E7400
 11739              	.LASF282:
 11740 105d 675F6D65 		.ascii	"g_mem\000"
 11740      6D00
 11741              	.LASF279:
 11742 1063 675F6164 		.ascii	"g_adc_meas\000"
 11742      635F6D65 
 11742      617300
 11743              	.LASF136:
 11744 106e 6D61785F 		.ascii	"max_residual_current\000"
 11744      72657369 
 11744      6475616C 
 11744      5F637572 
 11744      72656E74 
 11745              	.LASF141:
 11746 1083 73745F65 		.ascii	"st_eeprom\000"
 11746      6570726F 
 11746      6D00
 11747              	.LASF150:
 11748 108d 54595045 		.ascii	"TYPES\000"
 11748      5300
 11749              	.LASF18:
 11750 1093 696E7433 		.ascii	"int32\000"
 11750      3200
 11751              	.LASF163:
 11752 1099 696E666F 		.ascii	"infoGet\000"
 11752      47657400 
 11753              	.LASF291:
 11754 10a1 6D617374 		.ascii	"master_mode\000"
 11754      65725F6D 
 11754      6F646500 
 11755              	.LASF5:
 11756 10ad 5F5F696E 		.ascii	"__int32_t\000"
 11756      7433325F 
 11756      7400
 11757              	.LASF294:
 11758 10b7 56545F72 		.ascii	"VT_refOld\000"
 11758      65664F6C 
 11758      6400
 11759              	.LASF129:
 11760 10c1 656D675F 		.ascii	"emg_max_value\000"
 11760      6D61785F 
 11760      76616C75 
 11760      6500
 11761              	.LASF243:
 11762 10cf 636F6D6D 		.ascii	"commReadIMUFromSH\000"
 11762      52656164 
 11762      494D5546 
 11762      726F6D53 
 11762      4800
 11763              	.LASF306:
 11764 10e1 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccOygPd6.s 			page 269


 11764      72635C63 
 11764      6F6D6D61 
 11764      6E645F70 
 11764      726F6365 
 11765              	.LASF93:
 11766 10fd 53485F69 		.ascii	"SH_input_mode\000"
 11766      6E707574 
 11766      5F6D6F64 
 11766      6500
 11767              	.LASF25:
 11768 110b 43555354 		.ascii	"CUSTOM_POS_PID\000"
 11768      4F4D5F50 
 11768      4F535F50 
 11768      494400
 11769              	.LASF107:
 11770 111a 54595045 		.ascii	"TYPE_INT8\000"
 11770      5F494E54 
 11770      3800
 11771              	.LASF207:
 11772 1124 494D555F 		.ascii	"IMU_reading_info\000"
 11772      72656164 
 11772      696E675F 
 11772      696E666F 
 11772      00
 11773              	.LASF14:
 11774 1135 75696E74 		.ascii	"uint16\000"
 11774      313600
 11775              	.LASF296:
 11776 113c 50756D70 		.ascii	"Pump_ref\000"
 11776      5F726566 
 11776      00
 11777              	.LASF175:
 11778 1145 6175785F 		.ascii	"aux_str\000"
 11778      73747200 
 11779              	.LASF59:
 11780 114d 434D445F 		.ascii	"CMD_PING\000"
 11780      50494E47 
 11780      00
 11781              	.LASF237:
 11782 1156 636D645F 		.ascii	"cmd_activate\000"
 11782      61637469 
 11782      76617465 
 11782      00
 11783              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
