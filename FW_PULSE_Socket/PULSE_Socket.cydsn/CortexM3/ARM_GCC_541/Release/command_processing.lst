ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 48
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8CB0     		sub	sp, sp, #48
  44              		.cfi_def_cfa_offset 56
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 0E4B     		ldr	r3, .L54
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82F30 		strb	r3, [r7, #47]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e 0C4B     		ldr	r3, .L54
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c 0848     		ldr	r0, .L54
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 064B     		ldr	r3, .L54
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e 044A     		ldr	r2, .L54
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 06D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 024B     		ldr	r3, .L54
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 06E3     		b	.L1
  75              	.L55:
  76              		.align	2
  77              	.L54:
  78 0040 00000000 		.word	g_rx
  79              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  80              		.loc 1 74 0
  81 0044 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
  82 0048 FA2B     		cmp	r3, #250
  83 004a 00F2FF82 		bhi	.L53
  84 004e 01A2     		adr	r2, .L6
  85 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  86              		.p2align 2
  87              	.L6:
  88 0054 CB040000 		.word	.L5+1
  89 0058 AD040000 		.word	.L7+1
  90 005c 4D060000 		.word	.L53+1
  91 0060 D1040000 		.word	.L8+1
  92 0064 D7040000 		.word	.L9+1
  93 0068 F3040000 		.word	.L10+1
  94 006c 95040000 		.word	.L11+1
  95 0070 4D060000 		.word	.L53+1
  96 0074 4D060000 		.word	.L53+1
  97 0078 27050000 		.word	.L12+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 4


  98 007c 0D050000 		.word	.L13+1
  99 0080 4D060000 		.word	.L53+1
 100 0084 B3040000 		.word	.L14+1
 101 0088 49050000 		.word	.L15+1
 102 008c 4D060000 		.word	.L53+1
 103 0090 4D060000 		.word	.L53+1
 104 0094 4D060000 		.word	.L53+1
 105 0098 4D060000 		.word	.L53+1
 106 009c 4D060000 		.word	.L53+1
 107 00a0 4D060000 		.word	.L53+1
 108 00a4 4D060000 		.word	.L53+1
 109 00a8 4D060000 		.word	.L53+1
 110 00ac 4D060000 		.word	.L53+1
 111 00b0 4D060000 		.word	.L53+1
 112 00b4 4D060000 		.word	.L53+1
 113 00b8 4D060000 		.word	.L53+1
 114 00bc 4D060000 		.word	.L53+1
 115 00c0 4D060000 		.word	.L53+1
 116 00c4 4D060000 		.word	.L53+1
 117 00c8 4D060000 		.word	.L53+1
 118 00cc 4D060000 		.word	.L53+1
 119 00d0 4D060000 		.word	.L53+1
 120 00d4 4D060000 		.word	.L53+1
 121 00d8 4D060000 		.word	.L53+1
 122 00dc 4D060000 		.word	.L53+1
 123 00e0 4D060000 		.word	.L53+1
 124 00e4 4D060000 		.word	.L53+1
 125 00e8 4D060000 		.word	.L53+1
 126 00ec 4D060000 		.word	.L53+1
 127 00f0 4D060000 		.word	.L53+1
 128 00f4 4D060000 		.word	.L53+1
 129 00f8 4D060000 		.word	.L53+1
 130 00fc 4D060000 		.word	.L53+1
 131 0100 4D060000 		.word	.L53+1
 132 0104 4D060000 		.word	.L53+1
 133 0108 4D060000 		.word	.L53+1
 134 010c 4D060000 		.word	.L53+1
 135 0110 4D060000 		.word	.L53+1
 136 0114 4D060000 		.word	.L53+1
 137 0118 4D060000 		.word	.L53+1
 138 011c 4D060000 		.word	.L53+1
 139 0120 4D060000 		.word	.L53+1
 140 0124 4D060000 		.word	.L53+1
 141 0128 4D060000 		.word	.L53+1
 142 012c 4D060000 		.word	.L53+1
 143 0130 4D060000 		.word	.L53+1
 144 0134 4D060000 		.word	.L53+1
 145 0138 4D060000 		.word	.L53+1
 146 013c 4D060000 		.word	.L53+1
 147 0140 4D060000 		.word	.L53+1
 148 0144 4D060000 		.word	.L53+1
 149 0148 4D060000 		.word	.L53+1
 150 014c 4D060000 		.word	.L53+1
 151 0150 4D060000 		.word	.L53+1
 152 0154 4D060000 		.word	.L53+1
 153 0158 4D060000 		.word	.L53+1
 154 015c 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 5


 155 0160 4D060000 		.word	.L53+1
 156 0164 4D060000 		.word	.L53+1
 157 0168 4D060000 		.word	.L53+1
 158 016c 4D060000 		.word	.L53+1
 159 0170 4D060000 		.word	.L53+1
 160 0174 4D060000 		.word	.L53+1
 161 0178 4D060000 		.word	.L53+1
 162 017c 4D060000 		.word	.L53+1
 163 0180 4D060000 		.word	.L53+1
 164 0184 4D060000 		.word	.L53+1
 165 0188 4D060000 		.word	.L53+1
 166 018c 4D060000 		.word	.L53+1
 167 0190 4D060000 		.word	.L53+1
 168 0194 4D060000 		.word	.L53+1
 169 0198 4D060000 		.word	.L53+1
 170 019c 4D060000 		.word	.L53+1
 171 01a0 4D060000 		.word	.L53+1
 172 01a4 4D060000 		.word	.L53+1
 173 01a8 4D060000 		.word	.L53+1
 174 01ac 4D060000 		.word	.L53+1
 175 01b0 4D060000 		.word	.L53+1
 176 01b4 4D060000 		.word	.L53+1
 177 01b8 4D060000 		.word	.L53+1
 178 01bc 4D060000 		.word	.L53+1
 179 01c0 4D060000 		.word	.L53+1
 180 01c4 4D060000 		.word	.L53+1
 181 01c8 4D060000 		.word	.L53+1
 182 01cc 4D060000 		.word	.L53+1
 183 01d0 4D060000 		.word	.L53+1
 184 01d4 4D060000 		.word	.L53+1
 185 01d8 4D060000 		.word	.L53+1
 186 01dc 4D060000 		.word	.L53+1
 187 01e0 4D060000 		.word	.L53+1
 188 01e4 4D060000 		.word	.L53+1
 189 01e8 4D060000 		.word	.L53+1
 190 01ec 4D060000 		.word	.L53+1
 191 01f0 4D060000 		.word	.L53+1
 192 01f4 4D060000 		.word	.L53+1
 193 01f8 4D060000 		.word	.L53+1
 194 01fc 4D060000 		.word	.L53+1
 195 0200 4D060000 		.word	.L53+1
 196 0204 4D060000 		.word	.L53+1
 197 0208 4D060000 		.word	.L53+1
 198 020c 4D060000 		.word	.L53+1
 199 0210 4D060000 		.word	.L53+1
 200 0214 4D060000 		.word	.L53+1
 201 0218 4D060000 		.word	.L53+1
 202 021c 4D060000 		.word	.L53+1
 203 0220 4D060000 		.word	.L53+1
 204 0224 4D060000 		.word	.L53+1
 205 0228 4D060000 		.word	.L53+1
 206 022c 4D060000 		.word	.L53+1
 207 0230 4D060000 		.word	.L53+1
 208 0234 4D060000 		.word	.L53+1
 209 0238 4D060000 		.word	.L53+1
 210 023c 4D060000 		.word	.L53+1
 211 0240 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 6


 212 0244 4D060000 		.word	.L53+1
 213 0248 4D060000 		.word	.L53+1
 214 024c 4D060000 		.word	.L53+1
 215 0250 4D060000 		.word	.L53+1
 216 0254 41040000 		.word	.L16+1
 217 0258 83040000 		.word	.L17+1
 218 025c 47040000 		.word	.L18+1
 219 0260 8F040000 		.word	.L19+1
 220 0264 4D040000 		.word	.L20+1
 221 0268 59040000 		.word	.L21+1
 222 026c 53040000 		.word	.L22+1
 223 0270 4D060000 		.word	.L53+1
 224 0274 7D040000 		.word	.L23+1
 225 0278 6B040000 		.word	.L24+1
 226 027c 4D060000 		.word	.L53+1
 227 0280 71040000 		.word	.L25+1
 228 0284 5F040000 		.word	.L26+1
 229 0288 4D060000 		.word	.L53+1
 230 028c 4D060000 		.word	.L53+1
 231 0290 4D060000 		.word	.L53+1
 232 0294 89040000 		.word	.L27+1
 233 0298 4D060000 		.word	.L53+1
 234 029c 77040000 		.word	.L28+1
 235 02a0 4D060000 		.word	.L53+1
 236 02a4 4D060000 		.word	.L53+1
 237 02a8 4D060000 		.word	.L53+1
 238 02ac 4D060000 		.word	.L53+1
 239 02b0 4D060000 		.word	.L53+1
 240 02b4 4D060000 		.word	.L53+1
 241 02b8 4D060000 		.word	.L53+1
 242 02bc 4D060000 		.word	.L53+1
 243 02c0 4D060000 		.word	.L53+1
 244 02c4 4D060000 		.word	.L53+1
 245 02c8 4D060000 		.word	.L53+1
 246 02cc 4D060000 		.word	.L53+1
 247 02d0 4D060000 		.word	.L53+1
 248 02d4 4D060000 		.word	.L53+1
 249 02d8 E7050000 		.word	.L29+1
 250 02dc ED050000 		.word	.L30+1
 251 02e0 05060000 		.word	.L31+1
 252 02e4 0B060000 		.word	.L32+1
 253 02e8 11060000 		.word	.L33+1
 254 02ec 17060000 		.word	.L34+1
 255 02f0 1D060000 		.word	.L35+1
 256 02f4 35060000 		.word	.L36+1
 257 02f8 4D060000 		.word	.L53+1
 258 02fc 4D060000 		.word	.L53+1
 259 0300 4D060000 		.word	.L53+1
 260 0304 4D060000 		.word	.L53+1
 261 0308 4D060000 		.word	.L53+1
 262 030c 4D060000 		.word	.L53+1
 263 0310 4D060000 		.word	.L53+1
 264 0314 4D060000 		.word	.L53+1
 265 0318 4D060000 		.word	.L53+1
 266 031c 4D060000 		.word	.L53+1
 267 0320 4D060000 		.word	.L53+1
 268 0324 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 7


 269 0328 4D060000 		.word	.L53+1
 270 032c 4D060000 		.word	.L53+1
 271 0330 4D060000 		.word	.L53+1
 272 0334 4D060000 		.word	.L53+1
 273 0338 4D060000 		.word	.L53+1
 274 033c 4D060000 		.word	.L53+1
 275 0340 4D060000 		.word	.L53+1
 276 0344 4D060000 		.word	.L53+1
 277 0348 4D060000 		.word	.L53+1
 278 034c 4D060000 		.word	.L53+1
 279 0350 4D060000 		.word	.L53+1
 280 0354 4D060000 		.word	.L53+1
 281 0358 4D060000 		.word	.L53+1
 282 035c 4D060000 		.word	.L53+1
 283 0360 4D060000 		.word	.L53+1
 284 0364 4D060000 		.word	.L53+1
 285 0368 4D060000 		.word	.L53+1
 286 036c 4D060000 		.word	.L53+1
 287 0370 4D060000 		.word	.L53+1
 288 0374 4D060000 		.word	.L53+1
 289 0378 4D060000 		.word	.L53+1
 290 037c 4D060000 		.word	.L53+1
 291 0380 4D060000 		.word	.L53+1
 292 0384 4D060000 		.word	.L53+1
 293 0388 4D060000 		.word	.L53+1
 294 038c 4D060000 		.word	.L53+1
 295 0390 4D060000 		.word	.L53+1
 296 0394 4D060000 		.word	.L53+1
 297 0398 4D060000 		.word	.L53+1
 298 039c 4D060000 		.word	.L53+1
 299 03a0 4D060000 		.word	.L53+1
 300 03a4 4D060000 		.word	.L53+1
 301 03a8 4D060000 		.word	.L53+1
 302 03ac 4D060000 		.word	.L53+1
 303 03b0 4D060000 		.word	.L53+1
 304 03b4 4D060000 		.word	.L53+1
 305 03b8 4D060000 		.word	.L53+1
 306 03bc 4D060000 		.word	.L53+1
 307 03c0 4D060000 		.word	.L53+1
 308 03c4 4D060000 		.word	.L53+1
 309 03c8 4D060000 		.word	.L53+1
 310 03cc 4D060000 		.word	.L53+1
 311 03d0 4D060000 		.word	.L53+1
 312 03d4 4D060000 		.word	.L53+1
 313 03d8 4D060000 		.word	.L53+1
 314 03dc 4D060000 		.word	.L53+1
 315 03e0 4D060000 		.word	.L53+1
 316 03e4 4D060000 		.word	.L53+1
 317 03e8 4D060000 		.word	.L53+1
 318 03ec 4D060000 		.word	.L53+1
 319 03f0 4D060000 		.word	.L53+1
 320 03f4 4D060000 		.word	.L53+1
 321 03f8 4D060000 		.word	.L53+1
 322 03fc 4D060000 		.word	.L53+1
 323 0400 4D060000 		.word	.L53+1
 324 0404 4D060000 		.word	.L53+1
 325 0408 4D060000 		.word	.L53+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 8


 326 040c 4D060000 		.word	.L53+1
 327 0410 4D060000 		.word	.L53+1
 328 0414 4D060000 		.word	.L53+1
 329 0418 4D060000 		.word	.L53+1
 330 041c 4D060000 		.word	.L53+1
 331 0420 4D060000 		.word	.L53+1
 332 0424 4D060000 		.word	.L53+1
 333 0428 4D060000 		.word	.L53+1
 334 042c 4D060000 		.word	.L53+1
 335 0430 4D060000 		.word	.L53+1
 336 0434 4D060000 		.word	.L53+1
 337 0438 4D060000 		.word	.L53+1
 338 043c 65040000 		.word	.L37+1
 339              		.p2align 1
 340              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 341              		.loc 1 78 0
 342 0440 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 343              		.loc 1 79 0
 344 0444 03E1     		b	.L1
 345              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 346              		.loc 1 84 0
 347 0446 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 348              		.loc 1 85 0
 349 044a 00E1     		b	.L1
 350              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 351              		.loc 1 90 0
 352 044c FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 353              		.loc 1 91 0
 354 0450 FDE0     		b	.L1
 355              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 356              		.loc 1 96 0
 357 0452 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 358              		.loc 1 97 0
 359 0456 FAE0     		b	.L1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 9


 360              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 361              		.loc 1 102 0
 362 0458 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 363              		.loc 1 103 0
 364 045c F7E0     		b	.L1
 365              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 366              		.loc 1 108 0
 367 045e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 368              		.loc 1 109 0
 369 0462 F4E0     		b	.L1
 370              	.L37:
 110:..\src/command_processing.c **** 
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_VIBROTACTILE_INPUTS
 112:..\src/command_processing.c ****          
 113:..\src/command_processing.c ****         case CMD_GET_VIBROTACTILE_INPUTS:
 114:..\src/command_processing.c ****             cmd_get_vibrotactile_inputs();
 371              		.loc 1 114 0
 372 0464 FFF7FEFF 		bl	cmd_get_vibrotactile_inputs
 115:..\src/command_processing.c ****             break;            
 373              		.loc 1 115 0
 374 0468 F1E0     		b	.L1
 375              	.L24:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c ****         
 119:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 120:..\src/command_processing.c ****             cmd_get_velocities();
 376              		.loc 1 120 0
 377 046a FFF7FEFF 		bl	cmd_get_velocities
 121:..\src/command_processing.c ****             break;
 378              		.loc 1 121 0
 379 046e EEE0     		b	.L1
 380              	.L25:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 126:..\src/command_processing.c ****             cmd_get_accelerations();
 381              		.loc 1 126 0
 382 0470 FFF7FEFF 		bl	cmd_get_accelerations
 127:..\src/command_processing.c ****             break;
 383              		.loc 1 127 0
 384 0474 EBE0     		b	.L1
 385              	.L28:
 128:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 10


 129:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 132:..\src/command_processing.c ****             cmd_get_joystick();
 386              		.loc 1 132 0
 387 0476 FFF7FEFF 		bl	cmd_get_joystick
 133:..\src/command_processing.c ****         break;
 388              		.loc 1 133 0
 389 047a E8E0     		b	.L1
 390              	.L23:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 136:..\src/command_processing.c **** 
 137:..\src/command_processing.c ****         case CMD_GET_EMG:
 138:..\src/command_processing.c ****             cmd_get_emg();
 391              		.loc 1 138 0
 392 047c FFF7FEFF 		bl	cmd_get_emg
 139:..\src/command_processing.c ****             break;
 393              		.loc 1 139 0
 394 0480 E5E0     		b	.L1
 395              	.L17:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 144:..\src/command_processing.c ****             cmd_get_activate();
 396              		.loc 1 144 0
 397 0482 FFF7FEFF 		bl	cmd_get_activate
 145:..\src/command_processing.c ****             break;
 398              		.loc 1 145 0
 399 0486 E2E0     		b	.L1
 400              	.L27:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 148:..\src/command_processing.c ****             
 149:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 150:..\src/command_processing.c ****             cmd_set_baudrate();
 401              		.loc 1 150 0
 402 0488 FFF7FEFF 		bl	cmd_set_baudrate
 151:..\src/command_processing.c ****             break;  
 403              		.loc 1 151 0
 404 048c DFE0     		b	.L1
 405              	.L19:
 152:..\src/command_processing.c ****             
 153:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 156:..\src/command_processing.c ****             cmd_get_inputs();
 406              		.loc 1 156 0
 407 048e FFF7FEFF 		bl	cmd_get_inputs
 157:..\src/command_processing.c ****             break;
 408              		.loc 1 157 0
 409 0492 DCE0     		b	.L1
 410              	.L11:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 160:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 11


 161:..\src/command_processing.c ****         case CMD_GET_INFO:
 162:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 411              		.loc 1 162 0
 412 0494 6F4B     		ldr	r3, .L56
 413 0496 1B88     		ldrh	r3, [r3]
 414 0498 BB61     		str	r3, [r7, #24]
 415              	.LBB12:
 416              	.LBB13:
 417              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 12


  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 13


 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 14


 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 15


 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 16


 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 17


 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 18


 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 19


 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 20


 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 21


 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 22


 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 23


 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 24


 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 25


 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 418              		.loc 2 792 0
 419 049a BB69     		ldr	r3, [r7, #24]
 420              		.syntax unified
 421              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 422 049c 5BBA     		rev16 r3, r3
 423              	@ 0 "" 2
 424              		.thumb
 425              		.syntax unified
 426 049e 7B61     		str	r3, [r7, #20]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 427              		.loc 2 793 0
 428 04a0 7B69     		ldr	r3, [r7, #20]
 429              	.LBE13:
 430              	.LBE12:
 431              		.loc 1 162 0
 432 04a2 9BB2     		uxth	r3, r3
 433 04a4 1846     		mov	r0, r3
 434 04a6 FFF7FEFF 		bl	infoGet
 163:..\src/command_processing.c ****             break;
 435              		.loc 1 163 0
 436 04aa D0E0     		b	.L1
 437              	.L7:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 168:..\src/command_processing.c ****             setZeros();
 438              		.loc 1 168 0
 439 04ac FFF7FEFF 		bl	setZeros
 169:..\src/command_processing.c ****             break;
 440              		.loc 1 169 0
 441 04b0 CDE0     		b	.L1
 442              	.L14:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 172:..\src/command_processing.c **** 
 173:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 174:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 443              		.loc 1 174 0
 444 04b2 684B     		ldr	r3, .L56
 445 04b4 1B88     		ldrh	r3, [r3]
 446 04b6 BB62     		str	r3, [r7, #40]
 447              	.LBB14:
 448              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 449              		.loc 2 792 0
 450 04b8 BB6A     		ldr	r3, [r7, #40]
 451              		.syntax unified
 452              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 453 04ba 5BBA     		rev16 r3, r3
 454              	@ 0 "" 2
 455              		.thumb
 456              		.syntax unified
 457 04bc 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 26


 458              		.loc 2 793 0
 459 04be 3B69     		ldr	r3, [r7, #16]
 460              	.LBE15:
 461              	.LBE14:
 462              		.loc 1 174 0
 463 04c0 9BB2     		uxth	r3, r3
 464 04c2 1846     		mov	r0, r3
 465 04c4 FFF7FEFF 		bl	manage_param_list
 175:..\src/command_processing.c ****             break;
 466              		.loc 1 175 0
 467 04c8 C1E0     		b	.L1
 468              	.L5:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================================     CMD_PING
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_PING:
 180:..\src/command_processing.c ****             cmd_ping();
 469              		.loc 1 180 0
 470 04ca FFF7FEFF 		bl	cmd_ping
 181:..\src/command_processing.c ****             break;
 471              		.loc 1 181 0
 472 04ce BEE0     		b	.L1
 473              	.L8:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 184:..\src/command_processing.c ****             
 185:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 186:..\src/command_processing.c ****             cmd_store_params();
 474              		.loc 1 186 0
 475 04d0 FFF7FEFF 		bl	cmd_store_params
 187:..\src/command_processing.c ****             break;
 476              		.loc 1 187 0
 477 04d4 BBE0     		b	.L1
 478              	.L9:
 188:..\src/command_processing.c **** 
 189:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 190:..\src/command_processing.c **** 
 191:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 192:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 479              		.loc 1 192 0
 480 04d6 3220     		movs	r0, #50
 481 04d8 FFF7FEFF 		bl	memStore
 482 04dc 0346     		mov	r3, r0
 483 04de 002B     		cmp	r3, #0
 484 04e0 03D0     		beq	.L40
 193:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 485              		.loc 1 193 0
 486 04e2 0120     		movs	r0, #1
 487 04e4 FFF7FEFF 		bl	sendAcknowledgment
 194:..\src/command_processing.c ****             else
 195:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 196:..\src/command_processing.c ****             break;
 488              		.loc 1 196 0
 489 04e8 B1E0     		b	.L1
 490              	.L40:
 195:..\src/command_processing.c ****             break;
 491              		.loc 1 195 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 27


 492 04ea 0020     		movs	r0, #0
 493 04ec FFF7FEFF 		bl	sendAcknowledgment
 494              		.loc 1 196 0
 495 04f0 ADE0     		b	.L1
 496              	.L10:
 197:..\src/command_processing.c **** 
 198:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 199:..\src/command_processing.c **** 
 200:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 201:..\src/command_processing.c ****             if(memRestore())
 497              		.loc 1 201 0
 498 04f2 FFF7FEFF 		bl	memRestore
 499 04f6 0346     		mov	r3, r0
 500 04f8 002B     		cmp	r3, #0
 501 04fa 03D0     		beq	.L42
 202:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 502              		.loc 1 202 0
 503 04fc 0120     		movs	r0, #1
 504 04fe FFF7FEFF 		bl	sendAcknowledgment
 203:..\src/command_processing.c ****             else
 204:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 205:..\src/command_processing.c ****             break;
 505              		.loc 1 205 0
 506 0502 A4E0     		b	.L1
 507              	.L42:
 204:..\src/command_processing.c ****             break;
 508              		.loc 1 204 0
 509 0504 0020     		movs	r0, #0
 510 0506 FFF7FEFF 		bl	sendAcknowledgment
 511              		.loc 1 205 0
 512 050a A0E0     		b	.L1
 513              	.L13:
 206:..\src/command_processing.c **** 
 207:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 208:..\src/command_processing.c **** 
 209:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 210:..\src/command_processing.c ****             if(memInit())
 514              		.loc 1 210 0
 515 050c FFF7FEFF 		bl	memInit
 516 0510 0346     		mov	r3, r0
 517 0512 002B     		cmp	r3, #0
 518 0514 03D0     		beq	.L44
 211:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 519              		.loc 1 211 0
 520 0516 0120     		movs	r0, #1
 521 0518 FFF7FEFF 		bl	sendAcknowledgment
 212:..\src/command_processing.c ****             else
 213:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 214:..\src/command_processing.c ****             break;
 522              		.loc 1 214 0
 523 051c 97E0     		b	.L1
 524              	.L44:
 213:..\src/command_processing.c ****             break;
 525              		.loc 1 213 0
 526 051e 0020     		movs	r0, #0
 527 0520 FFF7FEFF 		bl	sendAcknowledgment
 528              		.loc 1 214 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 28


 529 0524 93E0     		b	.L1
 530              	.L12:
 215:..\src/command_processing.c **** 
 216:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 217:..\src/command_processing.c **** 
 218:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 219:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 220:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 531              		.loc 1 220 0
 532 0526 0120     		movs	r0, #1
 533 0528 FFF7FEFF 		bl	sendAcknowledgment
 221:..\src/command_processing.c ****             CyDelay(1000);
 534              		.loc 1 221 0
 535 052c 4FF47A70 		mov	r0, #1000
 536 0530 FFF7FEFF 		bl	CyDelay
 222:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 537              		.loc 1 222 0
 538 0534 0020     		movs	r0, #0
 539 0536 FFF7FEFF 		bl	FTDI_ENABLE_Write
 223:..\src/command_processing.c ****             CyDelay(1000);
 540              		.loc 1 223 0
 541 053a 4FF47A70 		mov	r0, #1000
 542 053e FFF7FEFF 		bl	CyDelay
 224:..\src/command_processing.c ****             Bootloadable_Load();
 543              		.loc 1 224 0
 544 0542 FFF7FEFF 		bl	Bootloadable_Load
 225:..\src/command_processing.c ****             break;
 545              		.loc 1 225 0
 546 0546 82E0     		b	.L1
 547              	.L15:
 226:..\src/command_processing.c **** 
 227:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 228:..\src/command_processing.c **** 
 229:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 230:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 548              		.loc 1 230 0
 549 0548 434B     		ldr	r3, .L56+4
 550 054a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 551 054c 1B02     		lsls	r3, r3, #8
 552 054e 1AB2     		sxth	r2, r3
 553 0550 414B     		ldr	r3, .L56+4
 554 0552 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 555 0554 1BB2     		sxth	r3, r3
 556 0556 1343     		orrs	r3, r3, r2
 557 0558 1AB2     		sxth	r2, r3
 558 055a 404B     		ldr	r3, .L56+8
 559 055c 5A80     		strh	r2, [r3, #2]	@ movhi
 231:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 560              		.loc 1 231 0
 561 055e 3E4B     		ldr	r3, .L56+4
 562 0560 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 563 0562 1B02     		lsls	r3, r3, #8
 564 0564 1AB2     		sxth	r2, r3
 565 0566 3C4B     		ldr	r3, .L56+4
 566 0568 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 567 056a 1BB2     		sxth	r3, r3
 568 056c 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 29


 569 056e 1AB2     		sxth	r2, r3
 570 0570 3A4B     		ldr	r3, .L56+8
 571 0572 9A80     		strh	r2, [r3, #4]	@ movhi
 232:..\src/command_processing.c ****             
 233:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 572              		.loc 1 233 0
 573 0574 394B     		ldr	r3, .L56+8
 574 0576 B3F90230 		ldrsh	r3, [r3, #2]
 575 057a B3F1FF3F 		cmp	r3, #-1
 576 057e 0FD1     		bne	.L46
 577              		.loc 1 233 0 is_stmt 0 discriminator 1
 578 0580 364B     		ldr	r3, .L56+8
 579 0582 B3F90430 		ldrsh	r3, [r3, #4]
 580 0586 B3F1FF3F 		cmp	r3, #-1
 581 058a 09D1     		bne	.L46
 234:..\src/command_processing.c ****                 calib.enabled = FALSE;
 582              		.loc 1 234 0 is_stmt 1
 583 058c 334B     		ldr	r3, .L56+8
 584 058e 0022     		movs	r2, #0
 585 0590 1A70     		strb	r2, [r3]
 235:..\src/command_processing.c ****                 calib.speed = 0;
 586              		.loc 1 235 0
 587 0592 324B     		ldr	r3, .L56+8
 588 0594 0022     		movs	r2, #0
 589 0596 5A80     		strh	r2, [r3, #2]	@ movhi
 236:..\src/command_processing.c ****                 calib.repetitions = 0;
 590              		.loc 1 236 0
 591 0598 304B     		ldr	r3, .L56+8
 592 059a 0022     		movs	r2, #0
 593 059c 9A80     		strh	r2, [r3, #4]	@ movhi
 237:..\src/command_processing.c ****                 break;
 594              		.loc 1 237 0
 595 059e 56E0     		b	.L1
 596              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             // Speed & repetitions saturations
 240:..\src/command_processing.c ****             if (calib.speed < 0) {
 597              		.loc 1 240 0
 598 05a0 2E4B     		ldr	r3, .L56+8
 599 05a2 B3F90230 		ldrsh	r3, [r3, #2]
 600 05a6 002B     		cmp	r3, #0
 601 05a8 03DA     		bge	.L47
 241:..\src/command_processing.c ****                 calib.speed = 0;
 602              		.loc 1 241 0
 603 05aa 2C4B     		ldr	r3, .L56+8
 604 05ac 0022     		movs	r2, #0
 605 05ae 5A80     		strh	r2, [r3, #2]	@ movhi
 606 05b0 07E0     		b	.L48
 607              	.L47:
 242:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 608              		.loc 1 242 0
 609 05b2 2A4B     		ldr	r3, .L56+8
 610 05b4 B3F90230 		ldrsh	r3, [r3, #2]
 611 05b8 C82B     		cmp	r3, #200
 612 05ba 02DD     		ble	.L48
 243:..\src/command_processing.c ****                 calib.speed = 200;
 613              		.loc 1 243 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 30


 614 05bc 274B     		ldr	r3, .L56+8
 615 05be C822     		movs	r2, #200
 616 05c0 5A80     		strh	r2, [r3, #2]	@ movhi
 617              	.L48:
 244:..\src/command_processing.c ****             }
 245:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 618              		.loc 1 245 0
 619 05c2 264B     		ldr	r3, .L56+8
 620 05c4 B3F90430 		ldrsh	r3, [r3, #4]
 621 05c8 002B     		cmp	r3, #0
 622 05ca 02DA     		bge	.L49
 246:..\src/command_processing.c ****                 calib.repetitions = 0;
 623              		.loc 1 246 0
 624 05cc 234B     		ldr	r3, .L56+8
 625 05ce 0022     		movs	r2, #0
 626 05d0 9A80     		strh	r2, [r3, #4]	@ movhi
 627              	.L49:
 247:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 248:..\src/command_processing.c ****                 calib.repetitions = 32767;
 249:..\src/command_processing.c ****             }
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 628              		.loc 1 251 0
 629 05d2 234B     		ldr	r3, .L56+12
 630 05d4 0022     		movs	r2, #0
 631 05d6 1A60     		str	r2, [r3]
 252:..\src/command_processing.c ****             calib.enabled = TRUE;
 632              		.loc 1 252 0
 633 05d8 204B     		ldr	r3, .L56+8
 634 05da 0122     		movs	r2, #1
 635 05dc 1A70     		strb	r2, [r3]
 253:..\src/command_processing.c ****          
 254:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 636              		.loc 1 254 0
 637 05de 0120     		movs	r0, #1
 638 05e0 FFF7FEFF 		bl	sendAcknowledgment
 255:..\src/command_processing.c ****             break;
 639              		.loc 1 255 0
 640 05e4 33E0     		b	.L1
 641              	.L29:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 260:..\src/command_processing.c ****             cmd_get_imu_readings();
 642              		.loc 1 260 0
 643 05e6 FFF7FEFF 		bl	cmd_get_imu_readings
 261:..\src/command_processing.c ****             break; 
 644              		.loc 1 261 0
 645 05ea 30E0     		b	.L1
 646              	.L30:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 266:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 647              		.loc 1 266 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 31


 648 05ec 194B     		ldr	r3, .L56
 649 05ee 1B88     		ldrh	r3, [r3]
 650 05f0 7B62     		str	r3, [r7, #36]
 651              	.LBB16:
 652              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 653              		.loc 2 792 0
 654 05f2 7B6A     		ldr	r3, [r7, #36]
 655              		.syntax unified
 656              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 657 05f4 5BBA     		rev16 r3, r3
 658              	@ 0 "" 2
 659              		.thumb
 660              		.syntax unified
 661 05f6 FB60     		str	r3, [r7, #12]
 662              		.loc 2 793 0
 663 05f8 FB68     		ldr	r3, [r7, #12]
 664              	.LBE17:
 665              	.LBE16:
 666              		.loc 1 266 0
 667 05fa 9BB2     		uxth	r3, r3
 668 05fc 1846     		mov	r0, r3
 669 05fe FFF7FEFF 		bl	get_IMU_param_list
 267:..\src/command_processing.c ****             break;             
 670              		.loc 1 267 0
 671 0602 24E0     		b	.L1
 672              	.L31:
 268:..\src/command_processing.c ****             
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 272:..\src/command_processing.c ****             cmd_get_encoder_map();
 673              		.loc 1 272 0
 674 0604 FFF7FEFF 		bl	cmd_get_encoder_map
 273:..\src/command_processing.c ****             break; 
 675              		.loc 1 273 0
 676 0608 21E0     		b	.L1
 677              	.L32:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 278:..\src/command_processing.c ****             cmd_get_encoder_raw();
 678              		.loc 1 278 0
 679 060a FFF7FEFF 		bl	cmd_get_encoder_raw
 279:..\src/command_processing.c ****             break; 
 680              		.loc 1 279 0
 681 060e 1EE0     		b	.L1
 682              	.L33:
 280:..\src/command_processing.c **** 
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 284:..\src/command_processing.c ****             cmd_get_ADC_map();
 683              		.loc 1 284 0
 684 0610 FFF7FEFF 		bl	cmd_get_ADC_map
 285:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 32


 685              		.loc 1 285 0
 686 0614 1BE0     		b	.L1
 687              	.L34:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 290:..\src/command_processing.c ****             cmd_get_ADC_raw();
 688              		.loc 1 290 0
 689 0616 FFF7FEFF 		bl	cmd_get_ADC_raw
 291:..\src/command_processing.c ****             break; 
 690              		.loc 1 291 0
 691 061a 18E0     		b	.L1
 692              	.L35:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_SINGLE_FILE
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 296:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 693              		.loc 1 296 0
 694 061c 0D4B     		ldr	r3, .L56
 695 061e 1B88     		ldrh	r3, [r3]
 696 0620 3B62     		str	r3, [r7, #32]
 697              	.LBB18:
 698              	.LBB19:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 699              		.loc 2 792 0
 700 0622 3B6A     		ldr	r3, [r7, #32]
 701              		.syntax unified
 702              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 703 0624 5BBA     		rev16 r3, r3
 704              	@ 0 "" 2
 705              		.thumb
 706              		.syntax unified
 707 0626 BB60     		str	r3, [r7, #8]
 708              		.loc 2 793 0
 709 0628 BB68     		ldr	r3, [r7, #8]
 710              	.LBE19:
 711              	.LBE18:
 712              		.loc 1 296 0
 713 062a 9BB2     		uxth	r3, r3
 714 062c 1846     		mov	r0, r3
 715 062e FFF7FEFF 		bl	cmd_get_SD_file
 297:..\src/command_processing.c ****             break;   
 716              		.loc 1 297 0
 717 0632 0CE0     		b	.L1
 718              	.L36:
 298:..\src/command_processing.c ****             
 299:..\src/command_processing.c **** //=====================================================     CMD_REMOVE_SD_SINGLE_FILE
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c ****         case CMD_REMOVE_SD_SINGLE_FILE:
 302:..\src/command_processing.c ****             cmd_remove_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 719              		.loc 1 302 0
 720 0634 074B     		ldr	r3, .L56
 721 0636 1B88     		ldrh	r3, [r3]
 722 0638 FB61     		str	r3, [r7, #28]
 723              	.LBB20:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 33


 724              	.LBB21:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 725              		.loc 2 792 0
 726 063a FB69     		ldr	r3, [r7, #28]
 727              		.syntax unified
 728              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 729 063c 5BBA     		rev16 r3, r3
 730              	@ 0 "" 2
 731              		.thumb
 732              		.syntax unified
 733 063e 7B60     		str	r3, [r7, #4]
 734              		.loc 2 793 0
 735 0640 7B68     		ldr	r3, [r7, #4]
 736              	.LBE21:
 737              	.LBE20:
 738              		.loc 1 302 0
 739 0642 9BB2     		uxth	r3, r3
 740 0644 1846     		mov	r0, r3
 741 0646 FFF7FEFF 		bl	cmd_remove_SD_file
 303:..\src/command_processing.c ****             break;               
 742              		.loc 1 303 0
 743 064a 00E0     		b	.L1
 744              	.L53:
 304:..\src/command_processing.c ****             
 305:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 306:..\src/command_processing.c ****         default:
 307:..\src/command_processing.c ****             break;
 745              		.loc 1 307 0
 746 064c 00BF     		nop
 747              	.L1:
 308:..\src/command_processing.c **** 
 309:..\src/command_processing.c ****     }
 310:..\src/command_processing.c **** }  
 748              		.loc 1 310 0
 749 064e 3037     		adds	r7, r7, #48
 750              		.cfi_def_cfa_offset 8
 751 0650 BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 0652 80BD     		pop	{r7, pc}
 755              	.L57:
 756              		.align	2
 757              	.L56:
 758 0654 01000000 		.word	g_rx+1
 759 0658 00000000 		.word	g_rx
 760 065c 00000000 		.word	calib
 761 0660 00000000 		.word	g_refNew
 762              		.cfi_endproc
 763              	.LFE64:
 764              		.size	commProcess, .-commProcess
 765              		.section	.text.infoSend,"ax",%progbits
 766              		.align	2
 767              		.global	infoSend
 768              		.thumb
 769              		.thumb_func
 770              		.type	infoSend, %function
 771              	infoSend:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 34


 772              	.LFB65:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** //==============================================================================
 313:..\src/command_processing.c **** //                                                                     INFO SEND
 314:..\src/command_processing.c **** //==============================================================================
 315:..\src/command_processing.c **** 
 316:..\src/command_processing.c **** void infoSend(void){
 773              		.loc 1 316 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 1504
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777 0000 80B5     		push	{r7, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 ADF5BC6D 		sub	sp, sp, #1504
 782              		.cfi_def_cfa_offset 1512
 783 0006 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 317:..\src/command_processing.c ****     char packet_string[1500];
 318:..\src/command_processing.c ****     
 319:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 785              		.loc 1 319 0
 786 0008 3B1D     		adds	r3, r7, #4
 787 000a 1846     		mov	r0, r3
 788 000c FFF7FEFF 		bl	prepare_generic_info
 320:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 789              		.loc 1 320 0
 790 0010 3B1D     		adds	r3, r7, #4
 791 0012 1846     		mov	r0, r3
 792 0014 FFF7FEFF 		bl	UART_RS485_PutString
 321:..\src/command_processing.c **** }
 793              		.loc 1 321 0
 794 0018 00BF     		nop
 795 001a 07F5BC67 		add	r7, r7, #1504
 796              		.cfi_def_cfa_offset 8
 797 001e BD46     		mov	sp, r7
 798              		.cfi_def_cfa_register 13
 799              		@ sp needed
 800 0020 80BD     		pop	{r7, pc}
 801              		.cfi_endproc
 802              	.LFE65:
 803              		.size	infoSend, .-infoSend
 804 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 805              		.align	2
 806              		.global	infoGet
 807              		.thumb
 808              		.thumb_func
 809              		.type	infoGet, %function
 810              	infoGet:
 811              	.LFB66:
 322:..\src/command_processing.c **** 
 323:..\src/command_processing.c **** 
 324:..\src/command_processing.c **** //==============================================================================
 325:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 326:..\src/command_processing.c **** //==============================================================================
 327:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 35


 328:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 812              		.loc 1 328 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 24008
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816 0000 80B5     		push	{r7, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 ADF5BB4D 		sub	sp, sp, #23936
 821              		.cfi_def_cfa_offset 23944
 822 0006 92B0     		sub	sp, sp, #72
 823              		.cfi_def_cfa_offset 24016
 824 0008 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 826 000a 0246     		mov	r2, r0
 827 000c 07F14803 		add	r3, r7, #72
 828 0010 423B     		subs	r3, r3, #66
 829 0012 1A80     		strh	r2, [r3]	@ movhi
 329:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 830              		.loc 1 329 0
 831 0014 07F59C43 		add	r3, r7, #19968
 832 0018 03F12803 		add	r3, r3, #40
 833 001c 0022     		movs	r2, #0
 834 001e 1A60     		str	r2, [r3]
 835 0020 0433     		adds	r3, r3, #4
 836 0022 40F69C72 		movw	r2, #3996
 837 0026 0021     		movs	r1, #0
 838 0028 1846     		mov	r0, r3
 839 002a FFF7FEFF 		bl	memset
 330:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 840              		.loc 1 330 0
 841 002e 07F14803 		add	r3, r7, #72
 842 0032 403B     		subs	r3, r3, #64
 843 0034 0022     		movs	r2, #0
 844 0036 1A60     		str	r2, [r3]
 845 0038 0433     		adds	r3, r3, #4
 846 003a 44F61C62 		movw	r2, #19996
 847 003e 0021     		movs	r1, #0
 848 0040 1846     		mov	r0, r3
 849 0042 FFF7FEFF 		bl	memset
 331:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 332:..\src/command_processing.c **** 
 333:..\src/command_processing.c ****     switch (info_type) {
 850              		.loc 1 333 0
 851 0046 07F14803 		add	r3, r7, #72
 852 004a 423B     		subs	r3, r3, #66
 853 004c 1B88     		ldrh	r3, [r3]
 854 004e 062B     		cmp	r3, #6
 855 0050 7DD8     		bhi	.L70
 856 0052 01A2     		adr	r2, .L62
 857 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 858              		.p2align 2
 859              	.L62:
 860 0058 75000000 		.word	.L61+1
 861 005c 97000000 		.word	.L63+1
 862 0060 B9000000 		.word	.L64+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 36


 863 0064 E1000000 		.word	.L65+1
 864 0068 03010000 		.word	.L66+1
 865 006c 21010000 		.word	.L67+1
 866 0070 27010000 		.word	.L68+1
 867              		.p2align 1
 868              	.L61:
 334:..\src/command_processing.c ****         case INFO_ALL:
 335:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 869              		.loc 1 335 0
 870 0074 07F59C43 		add	r3, r7, #19968
 871 0078 03F12803 		add	r3, r3, #40
 872 007c 1846     		mov	r0, r3
 873 007e FFF7FEFF 		bl	prepare_generic_info
 336:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 874              		.loc 1 336 0
 875 0082 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 337:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 876              		.loc 1 337 0
 877 0086 07F59C43 		add	r3, r7, #19968
 878 008a 03F12803 		add	r3, r3, #40
 879 008e 1846     		mov	r0, r3
 880 0090 FFF7FEFF 		bl	UART_RS485_PutString
 338:..\src/command_processing.c ****             break;
 881              		.loc 1 338 0
 882 0094 5CE0     		b	.L69
 883              	.L63:
 339:..\src/command_processing.c ****         case CYCLES_INFO:
 340:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 884              		.loc 1 340 0
 885 0096 07F59C43 		add	r3, r7, #19968
 886 009a 03F12803 		add	r3, r3, #40
 887 009e 1846     		mov	r0, r3
 888 00a0 FFF7FEFF 		bl	prepare_counter_info
 341:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 889              		.loc 1 341 0
 890 00a4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 342:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 891              		.loc 1 342 0
 892 00a8 07F59C43 		add	r3, r7, #19968
 893 00ac 03F12803 		add	r3, r3, #40
 894 00b0 1846     		mov	r0, r3
 895 00b2 FFF7FEFF 		bl	UART_RS485_PutString
 343:..\src/command_processing.c ****             break;
 896              		.loc 1 343 0
 897 00b6 4BE0     		b	.L69
 898              	.L64:
 344:..\src/command_processing.c ****         case GET_SD_PARAM:
 345:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 899              		.loc 1 345 0
 900 00b8 07F59C43 		add	r3, r7, #19968
 901 00bc 03F12803 		add	r3, r3, #40
 902 00c0 4FF47A62 		mov	r2, #4000
 903 00c4 1946     		mov	r1, r3
 904 00c6 2548     		ldr	r0, .L71
 905 00c8 FFF7FEFF 		bl	Read_SD_Closed_File
 346:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 906              		.loc 1 346 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 37


 907 00cc FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 347:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 908              		.loc 1 347 0
 909 00d0 07F59C43 		add	r3, r7, #19968
 910 00d4 03F12803 		add	r3, r3, #40
 911 00d8 1846     		mov	r0, r3
 912 00da FFF7FEFF 		bl	UART_RS485_PutString
 348:..\src/command_processing.c ****             break;
 913              		.loc 1 348 0
 914 00de 37E0     		b	.L69
 915              	.L65:
 349:..\src/command_processing.c ****         case GET_SD_DATA:
 350:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 916              		.loc 1 350 0
 917 00e0 07F14803 		add	r3, r7, #72
 918 00e4 403B     		subs	r3, r3, #64
 919 00e6 44F62061 		movw	r1, #20000
 920 00ea 1846     		mov	r0, r3
 921 00ec FFF7FEFF 		bl	Read_SD_Current_Data
 351:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 922              		.loc 1 351 0
 923 00f0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 352:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 924              		.loc 1 352 0
 925 00f4 07F14803 		add	r3, r7, #72
 926 00f8 403B     		subs	r3, r3, #64
 927 00fa 1846     		mov	r0, r3
 928 00fc FFF7FEFF 		bl	UART_RS485_PutString
 353:..\src/command_processing.c ****             break;
 929              		.loc 1 353 0
 930 0100 26E0     		b	.L69
 931              	.L66:
 354:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 355:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 932              		.loc 1 355 0
 933 0102 07F14803 		add	r3, r7, #72
 934 0106 403B     		subs	r3, r3, #64
 935 0108 1846     		mov	r0, r3
 936 010a FFF7FEFF 		bl	Get_SD_FS
 356:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 937              		.loc 1 356 0
 938 010e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 357:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 939              		.loc 1 357 0
 940 0112 07F14803 		add	r3, r7, #72
 941 0116 403B     		subs	r3, r3, #64
 942 0118 1846     		mov	r0, r3
 943 011a FFF7FEFF 		bl	UART_RS485_PutString
 358:..\src/command_processing.c ****             break;
 944              		.loc 1 358 0
 945 011e 17E0     		b	.L69
 946              	.L67:
 359:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 360:..\src/command_processing.c ****             // Send every single byte inside the function, since it could be a large file to send
 361:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 947              		.loc 1 361 0
 948 0120 FFF7FEFF 		bl	Read_SD_EMG_History_Data
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 38


 362:..\src/command_processing.c ****             break;
 949              		.loc 1 362 0
 950 0124 14E0     		b	.L69
 951              	.L68:
 363:..\src/command_processing.c ****         case GET_SD_R01_SUMM:
 364:..\src/command_processing.c ****             Read_SD_Closed_File(sdR01File, packet_string, sizeof(packet_string));
 952              		.loc 1 364 0
 953 0126 07F59C43 		add	r3, r7, #19968
 954 012a 03F12803 		add	r3, r3, #40
 955 012e 4FF47A62 		mov	r2, #4000
 956 0132 1946     		mov	r1, r3
 957 0134 0A48     		ldr	r0, .L71+4
 958 0136 FFF7FEFF 		bl	Read_SD_Closed_File
 365:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 959              		.loc 1 365 0
 960 013a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 366:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 961              		.loc 1 366 0
 962 013e 07F59C43 		add	r3, r7, #19968
 963 0142 03F12803 		add	r3, r3, #40
 964 0146 1846     		mov	r0, r3
 965 0148 FFF7FEFF 		bl	UART_RS485_PutString
 367:..\src/command_processing.c ****             break;            
 966              		.loc 1 367 0
 967 014c 00E0     		b	.L69
 968              	.L70:
 368:..\src/command_processing.c ****         default:
 369:..\src/command_processing.c ****             break;
 969              		.loc 1 369 0
 970 014e 00BF     		nop
 971              	.L69:
 370:..\src/command_processing.c ****     }
 371:..\src/command_processing.c **** }
 972              		.loc 1 371 0 discriminator 1
 973 0150 00BF     		nop
 974 0152 07F5BB47 		add	r7, r7, #23936
 975 0156 4837     		adds	r7, r7, #72
 976              		.cfi_def_cfa_offset 8
 977 0158 BD46     		mov	sp, r7
 978              		.cfi_def_cfa_register 13
 979              		@ sp needed
 980 015a 80BD     		pop	{r7, pc}
 981              	.L72:
 982              		.align	2
 983              	.L71:
 984 015c 00000000 		.word	sdParam
 985 0160 00000000 		.word	sdR01File
 986              		.cfi_endproc
 987              	.LFE66:
 988              		.size	infoGet, .-infoGet
 989              		.global	__aeabi_i2f
 990              		.global	__aeabi_fdiv
 991              		.section	.rodata
 992              		.align	2
 993              	.LC88:
 994 0000 20557362 		.ascii	" Usb\000"
 994      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 39


 995 0005 000000   		.align	2
 996              	.LC89:
 997 0008 2048616E 		.ascii	" Handle\000"
 997      646C6500 
 998              		.align	2
 999              	.LC90:
 1000 0010 20454D47 		.ascii	" EMG proportional\000"
 1000      2070726F 
 1000      706F7274 
 1000      696F6E61 
 1000      6C00
 1001 0022 0000     		.align	2
 1002              	.LC91:
 1003 0024 20454D47 		.ascii	" EMG integral\000"
 1003      20696E74 
 1003      65677261 
 1003      6C00
 1004 0032 0000     		.align	2
 1005              	.LC92:
 1006 0034 20454D47 		.ascii	" EMG FCFS\000"
 1006      20464346 
 1006      5300
 1007 003e 0000     		.align	2
 1008              	.LC93:
 1009 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 1009      20464346 
 1009      53204164 
 1009      76616E63 
 1009      656400
 1010 0053 00       		.align	2
 1011              	.LC94:
 1012 0054 204A6F79 		.ascii	" Joystick\000"
 1012      73746963 
 1012      6B00
 1013 005e 0000     		.align	2
 1014              	.LC95:
 1015 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 1015      2070726F 
 1015      706F7274 
 1015      696F6E61 
 1015      6C204E6F 
 1016 0082 0000     		.align	2
 1017              	.LC96:
 1018 0084 20506F73 		.ascii	" Position\000"
 1018      6974696F 
 1018      6E00
 1019 008e 0000     		.align	2
 1020              	.LC97:
 1021 0090 2050574D 		.ascii	" PWM\000"
 1021      00
 1022 0095 000000   		.align	2
 1023              	.LC98:
 1024 0098 20437572 		.ascii	" Current\000"
 1024      72656E74 
 1024      00
 1025 00a1 000000   		.align	2
 1026              	.LC99:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 40


 1027 00a4 20506F73 		.ascii	" Position and Current\000"
 1027      6974696F 
 1027      6E20616E 
 1027      64204375 
 1027      7272656E 
 1028 00ba 0000     		.align	2
 1029              	.LC100:
 1030 00bc 20594553 		.ascii	" YES\000\000"
 1030      0000
 1031 00c2 0000     		.align	2
 1032              	.LC101:
 1033 00c4 204E4F00 		.ascii	" NO\000\000"
 1033      00
 1034 00c9 000000   		.align	2
 1035              	.LC102:
 1036 00cc 20526967 		.ascii	" Right\000\000"
 1036      68740000 
 1037              		.align	2
 1038              	.LC103:
 1039 00d4 204C6566 		.ascii	" Left\000\000"
 1039      740000
 1040 00db 00       		.align	2
 1041              	.LC104:
 1042 00dc 204F4646 		.ascii	" OFF\000\000"
 1042      0000
 1043 00e2 0000     		.align	2
 1044              	.LC105:
 1045 00e4 204F4E00 		.ascii	" ON\000\000"
 1045      00
 1046 00e9 000000   		.align	2
 1047              	.LC106:
 1048 00ec 204E6F6E 		.ascii	" None\000\000"
 1048      650000
 1049 00f3 00       		.align	2
 1050              	.LC107:
 1051 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 1051      52544320 
 1051      626F6172 
 1051      640000
 1052 0103 00       		.align	2
 1053              	.LC108:
 1054 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 1054      6920626F 
 1054      61726420 
 1054      5B4E2F41 
 1054      5D0000
 1055 0117 00       		.align	2
 1056              	.LC109:
 1057 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 1057      6572205B 
 1057      4E2F415D 
 1057      0000
 1058 0126 0000     		.align	2
 1059              	.LC110:
 1060 0128 204C6F77 		.ascii	" Low\000\000"
 1060      0000
 1061 012e 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 41


 1062              	.LC111:
 1063 0130 20486967 		.ascii	" High\000\000"
 1063      680000
 1064 0137 00       		.align	2
 1065              	.LC112:
 1066 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 1066      45524943 
 1066      20555345 
 1066      520000
 1067 0147 00       		.align	2
 1068              	.LC113:
 1069 0148 204D4152 		.ascii	" MARIA\000\000"
 1069      49410000 
 1070              		.align	2
 1071              	.LC114:
 1072 0150 20523031 		.ascii	" R01\000\000"
 1072      0000
 1073 0156 0000     		.align	2
 1074              	.LC115:
 1075 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 1075      33383837 
 1075      20285374 
 1075      616E6461 
 1075      72642900 
 1076 016d 000000   		.align	2
 1077              	.LC116:
 1078 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 1078      35303139 
 1078      20284869 
 1078      67682070 
 1078      6F776572 
 1079 0187 00       		.align	2
 1080              	.LC117:
 1081 0188 20455343 		.ascii	" ESC (Brushless)\000\000"
 1081      20284272 
 1081      7573686C 
 1081      65737329 
 1081      0000
 1082 019a 0000     		.align	2
 1083              	.LC118:
 1084 019c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 1084      5448414E 
 1084      44205052 
 1084      4F0000
 1085 01ab 00       		.align	2
 1086              	.LC119:
 1087 01ac 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 1087      45524943 
 1087      2032204D 
 1087      4F544F52 
 1087      530000
 1088 01bf 00       		.align	2
 1089              	.LC120:
 1090 01c0 20414952 		.ascii	" AIR CHAMBERS\000\000"
 1090      20434841 
 1090      4D424552 
 1090      530000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 42


 1091 01cf 00       		.align	2
 1092              	.LC121:
 1093 01d0 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 1093      4F424F43 
 1093      4B205752 
 1093      49535400 
 1093      00
 1094 01e1 000000   		.align	2
 1095              	.LC122:
 1096 01e4 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 1096      5448414E 
 1096      44203220 
 1096      4D4F544F 
 1096      52530000 
 1097              		.align	2
 1098              	.LC123:
 1099 01f8 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 1099      743A7379 
 1099      6E322C20 
 1099      536C6F77 
 1099      3A73796E 
 1100 020f 00       		.align	2
 1101              	.LC124:
 1102 0210 20466173 		.ascii	" Fast:wrist,Slow:hand\000\000"
 1102      743A7772 
 1102      6973742C 
 1102      536C6F77 
 1102      3A68616E 
 1103 0227 00       		.align	2
 1104              	.LC125:
 1105 0228 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 1105      773A7379 
 1105      6E322C20 
 1105      46617374 
 1105      3A73796E 
 1106 023f 00       		.align	2
 1107              	.LC126:
 1108 0240 20536C6F 		.ascii	" Slow:wrist,Fast:hand\000\000"
 1108      773A7772 
 1108      6973742C 
 1108      46617374 
 1108      3A68616E 
 1109 0257 00       		.align	2
 1110              	.LC127:
 1111 0258 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 1111      73653A43 
 1111      572C204F 
 1111      70656E3A 
 1111      43435700 
 1112 026d 000000   		.align	2
 1113              	.LC128:
 1114 0270 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 1114      73653A43 
 1114      43572C20 
 1114      4F70656E 
 1114      3A435700 
 1115              		.section	.text.get_param_list,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 43


 1116              		.align	2
 1117              		.global	get_param_list
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	get_param_list, %function
 1121              	get_param_list:
 1122              	.LFB67:
 372:..\src/command_processing.c **** 
 373:..\src/command_processing.c **** 
 374:..\src/command_processing.c **** //==============================================================================
 375:..\src/command_processing.c **** //                                                                GET PARAM LIST
 376:..\src/command_processing.c **** //==============================================================================
 377:..\src/command_processing.c **** 
 378:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 379:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 380:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 381:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 1123              		.loc 1 381 0
 1124              		.cfi_startproc
 1125              		@ args = 16, pretend = 0, frame = 6104
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1128              		.cfi_def_cfa_offset 20
 1129              		.cfi_offset 4, -20
 1130              		.cfi_offset 5, -16
 1131              		.cfi_offset 6, -12
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 ADF5BE5D 		sub	sp, sp, #6080
 1135              		.cfi_def_cfa_offset 6100
 1136 0006 87B0     		sub	sp, sp, #28
 1137              		.cfi_def_cfa_offset 6128
 1138 0008 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 1140 000a 07F11804 		add	r4, r7, #24
 1141 000e 0C3C     		subs	r4, r4, #12
 1142 0010 2060     		str	r0, [r4]
 1143 0012 07F11800 		add	r0, r7, #24
 1144 0016 1038     		subs	r0, r0, #16
 1145 0018 0160     		str	r1, [r0]
 1146 001a 07F11801 		add	r1, r7, #24
 1147 001e 1439     		subs	r1, r1, #20
 1148 0020 0A60     		str	r2, [r1]
 1149 0022 07F11802 		add	r2, r7, #24
 1150 0026 183A     		subs	r2, r2, #24
 1151 0028 1360     		str	r3, [r2]
 382:..\src/command_processing.c ****     
 383:..\src/command_processing.c ****     //Package to be sent variables
 384:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1152              		.loc 1 384 0
 1153 002a 07F15803 		add	r3, r7, #88
 1154 002e 043B     		subs	r3, r3, #4
 1155 0030 0022     		movs	r2, #0
 1156 0032 1A60     		str	r2, [r3]
 1157 0034 0433     		adds	r3, r3, #4
 1158 0036 41F26C72 		movw	r2, #5996
 1159 003a 0021     		movs	r1, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 44


 1160 003c 1846     		mov	r0, r3
 1161 003e FFF7FEFF 		bl	memset
 385:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1162              		.loc 1 385 0
 1163 0042 41F27073 		movw	r3, #6000
 1164 0046 07F5BE52 		add	r2, r7, #6080
 1165 004a 02F11002 		add	r2, r2, #16
 1166 004e 1380     		strh	r3, [r2]	@ movhi
 386:..\src/command_processing.c **** 
 387:..\src/command_processing.c ****     //Auxiliary variables
 388:..\src/command_processing.c ****     uint8 CYDATA i, j;
 389:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1167              		.loc 1 389 0
 1168 0050 0023     		movs	r3, #0
 1169 0052 07F5BE52 		add	r2, r7, #6080
 1170 0056 02F11502 		add	r2, r2, #21
 1171 005a 1370     		strb	r3, [r2]
 390:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1172              		.loc 1 390 0
 1173 005c 0023     		movs	r3, #0
 1174 005e 07F5BE52 		add	r2, r7, #6080
 1175 0062 02F11402 		add	r2, r2, #20
 1176 0066 1370     		strb	r3, [r2]
 391:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1177              		.loc 1 391 0
 1178 0068 0023     		movs	r3, #0
 1179 006a 07F5BE52 		add	r2, r7, #6080
 1180 006e 02F11302 		add	r2, r2, #19
 1181 0072 1370     		strb	r3, [r2]
 392:..\src/command_processing.c ****     uint8 CYDATA string_length;
 393:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1182              		.loc 1 393 0
 1183 0074 07F13803 		add	r3, r7, #56
 1184 0078 183B     		subs	r3, r3, #24
 1185 007a 0022     		movs	r2, #0
 1186 007c 1A60     		str	r2, [r3]
 1187 007e 0433     		adds	r3, r3, #4
 1188 0080 2E22     		movs	r2, #46
 1189 0082 0021     		movs	r1, #0
 1190 0084 1846     		mov	r0, r3
 1191 0086 FFF7FEFF 		bl	memset
 394:..\src/command_processing.c ****     float aux_float;
 395:..\src/command_processing.c ****     int16 aux_int16;
 396:..\src/command_processing.c ****     uint16 aux_uint16;
 397:..\src/command_processing.c ****     int32 aux_int32;
 398:..\src/command_processing.c ****     uint32 aux_uint32;
 399:..\src/command_processing.c **** 
 400:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1192              		.loc 1 400 0
 1193 008a 0023     		movs	r3, #0
 1194 008c 07F5BE52 		add	r2, r7, #6080
 1195 0090 02F10F02 		add	r2, r2, #15
 1196 0094 1370     		strb	r3, [r2]
 401:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1197              		.loc 1 401 0
 1198 0096 0123     		movs	r3, #1
 1199 0098 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 45


 1200 009c 02F10E02 		add	r2, r2, #14
 1201 00a0 1370     		strb	r3, [r2]
 402:..\src/command_processing.c ****   
 403:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1202              		.loc 1 403 0
 1203 00a2 07F11803 		add	r3, r7, #24
 1204 00a6 0C3B     		subs	r3, r3, #12
 1205 00a8 1B68     		ldr	r3, [r3]
 1206 00aa 1B68     		ldr	r3, [r3]
 1207 00ac 07F5BE52 		add	r2, r7, #6080
 1208 00b0 02F10802 		add	r2, r2, #8
 1209 00b4 1360     		str	r3, [r2]
 404:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1210              		.loc 1 404 0
 1211 00b6 07F5BE53 		add	r3, r7, #6080
 1212 00ba 03F10803 		add	r3, r3, #8
 1213 00be 1B68     		ldr	r3, [r3]
 1214 00c0 07F5BE52 		add	r2, r7, #6080
 1215 00c4 02F10402 		add	r2, r2, #4
 1216 00c8 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****         
 406:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1217              		.loc 1 406 0
 1218 00ca 07F15803 		add	r3, r7, #88
 1219 00ce 043B     		subs	r3, r3, #4
 1220 00d0 0C22     		movs	r2, #12
 1221 00d2 1A70     		strb	r2, [r3]
 407:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1222              		.loc 1 407 0
 1223 00d4 07F15803 		add	r3, r7, #88
 1224 00d8 043B     		subs	r3, r3, #4
 1225 00da 5322     		movs	r2, #83
 1226 00dc 5A70     		strb	r2, [r3, #1]
 408:..\src/command_processing.c ****     
 409:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1227              		.loc 1 409 0
 1228 00de 0023     		movs	r3, #0
 1229 00e0 07F5BE52 		add	r2, r7, #6080
 1230 00e4 02F11502 		add	r2, r2, #21
 1231 00e8 1370     		strb	r3, [r2]
 1232 00ea 03F025B8 		b	.L74
 1233              	.L279:
 410:..\src/command_processing.c ****         
 411:..\src/command_processing.c ****         // Assign m_addr memory address
 412:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1234              		.loc 1 412 0
 1235 00ee 07F5BE53 		add	r3, r7, #6080
 1236 00f2 03F11503 		add	r3, r3, #21
 1237 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 00f8 9A00     		lsls	r2, r3, #2
 1239 00fa 07F11803 		add	r3, r7, #24
 1240 00fe 0C3B     		subs	r3, r3, #12
 1241 0100 1B68     		ldr	r3, [r3]
 1242 0102 1344     		add	r3, r3, r2
 1243 0104 1B68     		ldr	r3, [r3]
 1244 0106 07F5BE52 		add	r2, r7, #6080
 1245 010a 02F10802 		add	r2, r2, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 46


 1246 010e 1360     		str	r3, [r2]
 413:..\src/command_processing.c ****         
 414:..\src/command_processing.c ****         // Add parameter type and size to packet
 415:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1247              		.loc 1 415 0
 1248 0110 07F5BE53 		add	r3, r7, #6080
 1249 0114 03F11503 		add	r3, r3, #21
 1250 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 011a 3222     		movs	r2, #50
 1252 011c 02FB03F3 		mul	r3, r2, r3
 1253 0120 9A1C     		adds	r2, r3, #2
 1254 0122 07F5BE53 		add	r3, r7, #6080
 1255 0126 03F11503 		add	r3, r3, #21
 1256 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1257 012c 07F11803 		add	r3, r7, #24
 1258 0130 103B     		subs	r3, r3, #16
 1259 0132 1B68     		ldr	r3, [r3]
 1260 0134 0B44     		add	r3, r3, r1
 1261 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1262 0138 07F15803 		add	r3, r7, #88
 1263 013c 043B     		subs	r3, r3, #4
 1264 013e 9954     		strb	r1, [r3, r2]
 416:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1265              		.loc 1 416 0
 1266 0140 07F5BE53 		add	r3, r7, #6080
 1267 0144 03F11503 		add	r3, r3, #21
 1268 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1269 014a 3222     		movs	r2, #50
 1270 014c 02FB03F3 		mul	r3, r2, r3
 1271 0150 DA1C     		adds	r2, r3, #3
 1272 0152 07F5BE53 		add	r3, r7, #6080
 1273 0156 03F11503 		add	r3, r3, #21
 1274 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1275 015c 07F11803 		add	r3, r7, #24
 1276 0160 143B     		subs	r3, r3, #20
 1277 0162 1B68     		ldr	r3, [r3]
 1278 0164 0B44     		add	r3, r3, r1
 1279 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1280 0168 07F15803 		add	r3, r7, #88
 1281 016c 043B     		subs	r3, r3, #4
 1282 016e 9954     		strb	r1, [r3, r2]
 417:..\src/command_processing.c ****         
 418:..\src/command_processing.c ****         // Find size of data
 419:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1283              		.loc 1 419 0
 1284 0170 07F5BE53 		add	r3, r7, #6080
 1285 0174 03F11503 		add	r3, r3, #21
 1286 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1287 017a 07F11803 		add	r3, r7, #24
 1288 017e 103B     		subs	r3, r3, #16
 1289 0180 1B68     		ldr	r3, [r3]
 1290 0182 1344     		add	r3, r3, r2
 1291 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1292 0186 092B     		cmp	r3, #9
 1293 0188 2BD8     		bhi	.L75
 1294 018a 01A2     		adr	r2, .L77
 1295 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 47


 1296              		.p2align 2
 1297              	.L77:
 1298 0190 B9010000 		.word	.L76+1
 1299 0194 B9010000 		.word	.L76+1
 1300 0198 B9010000 		.word	.L76+1
 1301 019c C7010000 		.word	.L78+1
 1302 01a0 C7010000 		.word	.L78+1
 1303 01a4 D5010000 		.word	.L79+1
 1304 01a8 D5010000 		.word	.L79+1
 1305 01ac D5010000 		.word	.L79+1
 1306 01b0 E3010000 		.word	.L75+1
 1307 01b4 B9010000 		.word	.L76+1
 1308              		.p2align 1
 1309              	.L76:
 420:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 421:..\src/command_processing.c ****                 sod = 1; break;
 1310              		.loc 1 421 0
 1311 01b8 0123     		movs	r3, #1
 1312 01ba 07F5BE52 		add	r2, r7, #6080
 1313 01be 02F11302 		add	r2, r2, #19
 1314 01c2 1370     		strb	r3, [r2]
 1315 01c4 0DE0     		b	.L75
 1316              	.L78:
 422:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 423:..\src/command_processing.c ****                 sod = 2; break;
 1317              		.loc 1 423 0
 1318 01c6 0223     		movs	r3, #2
 1319 01c8 07F5BE52 		add	r2, r7, #6080
 1320 01cc 02F11302 		add	r2, r2, #19
 1321 01d0 1370     		strb	r3, [r2]
 1322 01d2 06E0     		b	.L75
 1323              	.L79:
 424:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 425:..\src/command_processing.c ****                 sod = 4; break;
 1324              		.loc 1 425 0
 1325 01d4 0423     		movs	r3, #4
 1326 01d6 07F5BE52 		add	r2, r7, #6080
 1327 01da 02F11302 		add	r2, r2, #19
 1328 01de 1370     		strb	r3, [r2]
 1329 01e0 00BF     		nop
 1330              	.L75:
 426:..\src/command_processing.c ****         }
 427:..\src/command_processing.c ****             
 428:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1331              		.loc 1 428 0
 1332 01e2 07F5BE53 		add	r3, r7, #6080
 1333 01e6 03F11503 		add	r3, r3, #21
 1334 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1335 01ec 07F5BF52 		add	r2, r7, #6112
 1336 01f0 02F11802 		add	r2, r2, #24
 1337 01f4 1268     		ldr	r2, [r2]
 1338 01f6 1344     		add	r3, r3, r2
 1339 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 01fa 002B     		cmp	r3, #0
 1341 01fc 40F0DA83 		bne	.L80
 429:..\src/command_processing.c ****             
 430:..\src/command_processing.c ****             // Add parameter data to packet
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 48


 431:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1342              		.loc 1 431 0
 1343 0200 07F5BE53 		add	r3, r7, #6080
 1344 0204 03F11503 		add	r3, r3, #21
 1345 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1346 020a 07F11803 		add	r3, r7, #24
 1347 020e 103B     		subs	r3, r3, #16
 1348 0210 1B68     		ldr	r3, [r3]
 1349 0212 1344     		add	r3, r3, r2
 1350 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1351 0216 092B     		cmp	r3, #9
 1352 0218 02F25781 		bhi	.L114
 1353 021c 01A2     		adr	r2, .L83
 1354 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1355 0222 00BF     		.p2align 2
 1356              	.L83:
 1357 0224 4D020000 		.word	.L82+1
 1358 0228 09030000 		.word	.L84+1
 1359 022c 4D020000 		.word	.L82+1
 1360 0230 C5030000 		.word	.L85+1
 1361 0234 F7040000 		.word	.L86+1
 1362 0238 23060000 		.word	.L87+1
 1363 023c 53070000 		.word	.L88+1
 1364 0240 83080000 		.word	.L89+1
 1365 0244 CB240000 		.word	.L114+1
 1366 0248 4D020000 		.word	.L82+1
 1367              		.p2align 1
 1368              	.L82:
 432:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1369              		.loc 1 433 0
 1370 024c 0023     		movs	r3, #0
 1371 024e 07F5BE52 		add	r2, r7, #6080
 1372 0252 02F11702 		add	r2, r2, #23
 1373 0256 1370     		strb	r3, [r2]
 1374 0258 42E0     		b	.L90
 1375              	.L91:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1376              		.loc 1 434 0 discriminator 3
 1377 025a 07F5BE53 		add	r3, r7, #6080
 1378 025e 03F11703 		add	r3, r3, #23
 1379 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1380 0264 07F5BE52 		add	r2, r7, #6080
 1381 0268 02F11302 		add	r2, r2, #19
 1382 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1383 026e 02FB03F3 		mul	r3, r2, r3
 1384 0272 1A46     		mov	r2, r3
 1385 0274 07F5BE53 		add	r3, r7, #6080
 1386 0278 03F10803 		add	r3, r3, #8
 1387 027c 1B68     		ldr	r3, [r3]
 1388 027e 1344     		add	r3, r3, r2
 1389 0280 07F5BE52 		add	r2, r7, #6080
 1390 0284 02F10402 		add	r2, r2, #4
 1391 0288 1360     		str	r3, [r2]
 435:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1392              		.loc 1 435 0 discriminator 3
 1393 028a 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 49


 1394 028e 03F11503 		add	r3, r3, #21
 1395 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1396 0294 3222     		movs	r2, #50
 1397 0296 02FB03F3 		mul	r3, r2, r3
 1398 029a 1A1D     		adds	r2, r3, #4
 1399 029c 07F5BE53 		add	r3, r7, #6080
 1400 02a0 03F11703 		add	r3, r3, #23
 1401 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1402 02a6 07F5BE51 		add	r1, r7, #6080
 1403 02aa 01F11301 		add	r1, r1, #19
 1404 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1405 02b0 01FB03F3 		mul	r3, r1, r3
 1406 02b4 1A44     		add	r2, r2, r3
 1407 02b6 07F5BE53 		add	r3, r7, #6080
 1408 02ba 03F10403 		add	r3, r3, #4
 1409 02be 1B68     		ldr	r3, [r3]
 1410 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1411 02c2 07F15803 		add	r3, r7, #88
 1412 02c6 043B     		subs	r3, r3, #4
 1413 02c8 9954     		strb	r1, [r3, r2]
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1414              		.loc 1 433 0 discriminator 3
 1415 02ca 07F5BE53 		add	r3, r7, #6080
 1416 02ce 03F11703 		add	r3, r3, #23
 1417 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 02d4 0133     		adds	r3, r3, #1
 1419 02d6 07F5BE52 		add	r2, r7, #6080
 1420 02da 02F11702 		add	r2, r2, #23
 1421 02de 1370     		strb	r3, [r2]
 1422              	.L90:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1423              		.loc 1 433 0 is_stmt 0 discriminator 1
 1424 02e0 07F5BE53 		add	r3, r7, #6080
 1425 02e4 03F11503 		add	r3, r3, #21
 1426 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1427 02ea 07F11803 		add	r3, r7, #24
 1428 02ee 143B     		subs	r3, r3, #20
 1429 02f0 1B68     		ldr	r3, [r3]
 1430 02f2 1344     		add	r3, r3, r2
 1431 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1432 02f6 07F5BE52 		add	r2, r7, #6080
 1433 02fa 02F11702 		add	r2, r2, #23
 1434 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1435 0300 9A42     		cmp	r2, r3
 1436 0302 AAD3     		bcc	.L91
 436:..\src/command_processing.c ****                     }
 437:..\src/command_processing.c ****                     break;                
 1437              		.loc 1 437 0 is_stmt 1
 1438 0304 02F0E1B8 		b	.L114
 1439              	.L84:
 438:..\src/command_processing.c ****                 case TYPE_INT8:
 439:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1440              		.loc 1 439 0
 1441 0308 0023     		movs	r3, #0
 1442 030a 07F5BE52 		add	r2, r7, #6080
 1443 030e 02F11702 		add	r2, r2, #23
 1444 0312 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 50


 1445 0314 42E0     		b	.L92
 1446              	.L93:
 440:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1447              		.loc 1 440 0 discriminator 3
 1448 0316 07F5BE53 		add	r3, r7, #6080
 1449 031a 03F11703 		add	r3, r3, #23
 1450 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1451 0320 07F5BE52 		add	r2, r7, #6080
 1452 0324 02F11302 		add	r2, r2, #19
 1453 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1454 032a 02FB03F3 		mul	r3, r2, r3
 1455 032e 1A46     		mov	r2, r3
 1456 0330 07F5BE53 		add	r3, r7, #6080
 1457 0334 03F10803 		add	r3, r3, #8
 1458 0338 1B68     		ldr	r3, [r3]
 1459 033a 1344     		add	r3, r3, r2
 1460 033c 07F5BE52 		add	r2, r7, #6080
 1461 0340 02F10402 		add	r2, r2, #4
 1462 0344 1360     		str	r3, [r2]
 441:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1463              		.loc 1 441 0 discriminator 3
 1464 0346 07F5BE53 		add	r3, r7, #6080
 1465 034a 03F11503 		add	r3, r3, #21
 1466 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 0350 3222     		movs	r2, #50
 1468 0352 02FB03F3 		mul	r3, r2, r3
 1469 0356 1A1D     		adds	r2, r3, #4
 1470 0358 07F5BE53 		add	r3, r7, #6080
 1471 035c 03F11703 		add	r3, r3, #23
 1472 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 0362 07F5BE51 		add	r1, r7, #6080
 1474 0366 01F11301 		add	r1, r1, #19
 1475 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1476 036c 01FB03F3 		mul	r3, r1, r3
 1477 0370 1A44     		add	r2, r2, r3
 1478 0372 07F5BE53 		add	r3, r7, #6080
 1479 0376 03F10403 		add	r3, r3, #4
 1480 037a 1B68     		ldr	r3, [r3]
 1481 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1482 037e 07F15803 		add	r3, r7, #88
 1483 0382 043B     		subs	r3, r3, #4
 1484 0384 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1485              		.loc 1 439 0 discriminator 3
 1486 0386 07F5BE53 		add	r3, r7, #6080
 1487 038a 03F11703 		add	r3, r3, #23
 1488 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1489 0390 0133     		adds	r3, r3, #1
 1490 0392 07F5BE52 		add	r2, r7, #6080
 1491 0396 02F11702 		add	r2, r2, #23
 1492 039a 1370     		strb	r3, [r2]
 1493              	.L92:
 439:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1494              		.loc 1 439 0 is_stmt 0 discriminator 1
 1495 039c 07F5BE53 		add	r3, r7, #6080
 1496 03a0 03F11503 		add	r3, r3, #21
 1497 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 51


 1498 03a6 07F11803 		add	r3, r7, #24
 1499 03aa 143B     		subs	r3, r3, #20
 1500 03ac 1B68     		ldr	r3, [r3]
 1501 03ae 1344     		add	r3, r3, r2
 1502 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1503 03b2 07F5BE52 		add	r2, r7, #6080
 1504 03b6 02F11702 		add	r2, r2, #23
 1505 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1506 03bc 9A42     		cmp	r2, r3
 1507 03be AAD3     		bcc	.L93
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1508              		.loc 1 443 0 is_stmt 1
 1509 03c0 02F083B8 		b	.L114
 1510              	.L85:
 444:..\src/command_processing.c ****                 case TYPE_INT16:
 445:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1511              		.loc 1 445 0
 1512 03c4 0023     		movs	r3, #0
 1513 03c6 07F5BE52 		add	r2, r7, #6080
 1514 03ca 02F11702 		add	r2, r2, #23
 1515 03ce 1370     		strb	r3, [r2]
 1516 03d0 7CE0     		b	.L94
 1517              	.L97:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1518              		.loc 1 446 0
 1519 03d2 07F5BE53 		add	r3, r7, #6080
 1520 03d6 03F11703 		add	r3, r3, #23
 1521 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1522 03dc 07F5BE52 		add	r2, r7, #6080
 1523 03e0 02F11302 		add	r2, r2, #19
 1524 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1525 03e6 02FB03F3 		mul	r3, r2, r3
 1526 03ea 1A46     		mov	r2, r3
 1527 03ec 07F5BE53 		add	r3, r7, #6080
 1528 03f0 03F10803 		add	r3, r3, #8
 1529 03f4 1B68     		ldr	r3, [r3]
 1530 03f6 1344     		add	r3, r3, r2
 1531 03f8 07F5BE52 		add	r2, r7, #6080
 1532 03fc 02F10402 		add	r2, r2, #4
 1533 0400 1360     		str	r3, [r2]
 447:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1534              		.loc 1 447 0
 1535 0402 07F5BE53 		add	r3, r7, #6080
 1536 0406 03F10403 		add	r3, r3, #4
 1537 040a 1B68     		ldr	r3, [r3]
 1538 040c B3F90020 		ldrsh	r2, [r3]
 1539 0410 07F13803 		add	r3, r7, #56
 1540 0414 1E3B     		subs	r3, r3, #30
 1541 0416 1A80     		strh	r2, [r3]	@ movhi
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1542              		.loc 1 448 0
 1543 0418 0023     		movs	r3, #0
 1544 041a 07F5BE52 		add	r2, r7, #6080
 1545 041e 02F11602 		add	r2, r2, #22
 1546 0422 1370     		strb	r3, [r2]
 1547 0424 3BE0     		b	.L95
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 52


 1548              	.L96:
 449:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1549              		.loc 1 449 0 discriminator 3
 1550 0426 07F5BE53 		add	r3, r7, #6080
 1551 042a 03F11503 		add	r3, r3, #21
 1552 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 0430 3222     		movs	r2, #50
 1554 0432 02FB03F3 		mul	r3, r2, r3
 1555 0436 1A1D     		adds	r2, r3, #4
 1556 0438 07F5BE53 		add	r3, r7, #6080
 1557 043c 03F11703 		add	r3, r3, #23
 1558 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 0442 07F5BE51 		add	r1, r7, #6080
 1560 0446 01F11301 		add	r1, r1, #19
 1561 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1562 044c 01FB03F3 		mul	r3, r1, r3
 1563 0450 1A44     		add	r2, r2, r3
 1564 0452 07F5BE53 		add	r3, r7, #6080
 1565 0456 03F11303 		add	r3, r3, #19
 1566 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1567 045c 1A44     		add	r2, r2, r3
 1568 045e 07F5BE53 		add	r3, r7, #6080
 1569 0462 03F11603 		add	r3, r3, #22
 1570 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1571 0468 D31A     		subs	r3, r2, r3
 1572 046a 5A1E     		subs	r2, r3, #1
 1573 046c 07F5BE53 		add	r3, r7, #6080
 1574 0470 03F11603 		add	r3, r3, #22
 1575 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1576 0476 07F13803 		add	r3, r7, #56
 1577 047a 1E3B     		subs	r3, r3, #30
 1578 047c 0B44     		add	r3, r3, r1
 1579 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1580 0480 07F15803 		add	r3, r7, #88
 1581 0484 043B     		subs	r3, r3, #4
 1582 0486 9954     		strb	r1, [r3, r2]
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1583              		.loc 1 448 0 discriminator 3
 1584 0488 07F5BE53 		add	r3, r7, #6080
 1585 048c 03F11603 		add	r3, r3, #22
 1586 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 0492 0133     		adds	r3, r3, #1
 1588 0494 07F5BE52 		add	r2, r7, #6080
 1589 0498 02F11602 		add	r2, r2, #22
 1590 049c 1370     		strb	r3, [r2]
 1591              	.L95:
 448:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1592              		.loc 1 448 0 is_stmt 0 discriminator 1
 1593 049e 07F5BE53 		add	r3, r7, #6080
 1594 04a2 03F11603 		add	r3, r3, #22
 1595 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1596 04a8 07F5BE53 		add	r3, r7, #6080
 1597 04ac 03F11303 		add	r3, r3, #19
 1598 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 04b2 9A42     		cmp	r2, r3
 1600 04b4 B7D3     		bcc	.L96
 445:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 53


 1601              		.loc 1 445 0 is_stmt 1 discriminator 2
 1602 04b6 07F5BE53 		add	r3, r7, #6080
 1603 04ba 03F11703 		add	r3, r3, #23
 1604 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1605 04c0 0133     		adds	r3, r3, #1
 1606 04c2 07F5BE52 		add	r2, r7, #6080
 1607 04c6 02F11702 		add	r2, r2, #23
 1608 04ca 1370     		strb	r3, [r2]
 1609              	.L94:
 445:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1610              		.loc 1 445 0 is_stmt 0 discriminator 1
 1611 04cc 07F5BE53 		add	r3, r7, #6080
 1612 04d0 03F11503 		add	r3, r3, #21
 1613 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1614 04d6 07F11803 		add	r3, r7, #24
 1615 04da 143B     		subs	r3, r3, #20
 1616 04dc 1B68     		ldr	r3, [r3]
 1617 04de 1344     		add	r3, r3, r2
 1618 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1619 04e2 07F5BE52 		add	r2, r7, #6080
 1620 04e6 02F11702 		add	r2, r2, #23
 1621 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1622 04ec 9A42     		cmp	r2, r3
 1623 04ee FFF470AF 		bcc	.L97
 450:..\src/command_processing.c ****                         }
 451:..\src/command_processing.c ****                     }
 452:..\src/command_processing.c ****                     break;
 1624              		.loc 1 452 0 is_stmt 1
 1625 04f2 01F0EABF 		b	.L114
 1626              	.L86:
 453:..\src/command_processing.c ****                 case TYPE_UINT16:
 454:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1627              		.loc 1 454 0
 1628 04f6 0023     		movs	r3, #0
 1629 04f8 07F5BE52 		add	r2, r7, #6080
 1630 04fc 02F11702 		add	r2, r2, #23
 1631 0500 1370     		strb	r3, [r2]
 1632 0502 79E0     		b	.L98
 1633              	.L101:
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1634              		.loc 1 455 0
 1635 0504 07F5BE53 		add	r3, r7, #6080
 1636 0508 03F11703 		add	r3, r3, #23
 1637 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1638 050e 07F5BE52 		add	r2, r7, #6080
 1639 0512 02F11302 		add	r2, r2, #19
 1640 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1641 0518 02FB03F3 		mul	r3, r2, r3
 1642 051c 1A46     		mov	r2, r3
 1643 051e 07F5BE53 		add	r3, r7, #6080
 1644 0522 03F10803 		add	r3, r3, #8
 1645 0526 1B68     		ldr	r3, [r3]
 1646 0528 1344     		add	r3, r3, r2
 1647 052a 07F5BE52 		add	r2, r7, #6080
 1648 052e 02F10402 		add	r2, r2, #4
 1649 0532 1360     		str	r3, [r2]
 456:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 54


 1650              		.loc 1 456 0
 1651 0534 07F5BE53 		add	r3, r7, #6080
 1652 0538 03F10403 		add	r3, r3, #4
 1653 053c 1B68     		ldr	r3, [r3]
 1654 053e 1A88     		ldrh	r2, [r3]
 1655 0540 07F11803 		add	r3, r7, #24
 1656 0544 1A80     		strh	r2, [r3]	@ movhi
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1657              		.loc 1 457 0
 1658 0546 0023     		movs	r3, #0
 1659 0548 07F5BE52 		add	r2, r7, #6080
 1660 054c 02F11602 		add	r2, r2, #22
 1661 0550 1370     		strb	r3, [r2]
 1662 0552 3AE0     		b	.L99
 1663              	.L100:
 458:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1664              		.loc 1 458 0 discriminator 3
 1665 0554 07F5BE53 		add	r3, r7, #6080
 1666 0558 03F11503 		add	r3, r3, #21
 1667 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1668 055e 3222     		movs	r2, #50
 1669 0560 02FB03F3 		mul	r3, r2, r3
 1670 0564 1A1D     		adds	r2, r3, #4
 1671 0566 07F5BE53 		add	r3, r7, #6080
 1672 056a 03F11703 		add	r3, r3, #23
 1673 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1674 0570 07F5BE51 		add	r1, r7, #6080
 1675 0574 01F11301 		add	r1, r1, #19
 1676 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1677 057a 01FB03F3 		mul	r3, r1, r3
 1678 057e 1A44     		add	r2, r2, r3
 1679 0580 07F5BE53 		add	r3, r7, #6080
 1680 0584 03F11303 		add	r3, r3, #19
 1681 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1682 058a 1A44     		add	r2, r2, r3
 1683 058c 07F5BE53 		add	r3, r7, #6080
 1684 0590 03F11603 		add	r3, r3, #22
 1685 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1686 0596 D31A     		subs	r3, r2, r3
 1687 0598 5A1E     		subs	r2, r3, #1
 1688 059a 07F5BE53 		add	r3, r7, #6080
 1689 059e 03F11603 		add	r3, r3, #22
 1690 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 05a4 07F11801 		add	r1, r7, #24
 1692 05a8 0B44     		add	r3, r3, r1
 1693 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1694 05ac 07F15803 		add	r3, r7, #88
 1695 05b0 043B     		subs	r3, r3, #4
 1696 05b2 9954     		strb	r1, [r3, r2]
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1697              		.loc 1 457 0 discriminator 3
 1698 05b4 07F5BE53 		add	r3, r7, #6080
 1699 05b8 03F11603 		add	r3, r3, #22
 1700 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1701 05be 0133     		adds	r3, r3, #1
 1702 05c0 07F5BE52 		add	r2, r7, #6080
 1703 05c4 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 55


 1704 05c8 1370     		strb	r3, [r2]
 1705              	.L99:
 457:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1706              		.loc 1 457 0 is_stmt 0 discriminator 1
 1707 05ca 07F5BE53 		add	r3, r7, #6080
 1708 05ce 03F11603 		add	r3, r3, #22
 1709 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1710 05d4 07F5BE53 		add	r3, r7, #6080
 1711 05d8 03F11303 		add	r3, r3, #19
 1712 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1713 05de 9A42     		cmp	r2, r3
 1714 05e0 B8D3     		bcc	.L100
 454:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1715              		.loc 1 454 0 is_stmt 1 discriminator 2
 1716 05e2 07F5BE53 		add	r3, r7, #6080
 1717 05e6 03F11703 		add	r3, r3, #23
 1718 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 05ec 0133     		adds	r3, r3, #1
 1720 05ee 07F5BE52 		add	r2, r7, #6080
 1721 05f2 02F11702 		add	r2, r2, #23
 1722 05f6 1370     		strb	r3, [r2]
 1723              	.L98:
 454:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1724              		.loc 1 454 0 is_stmt 0 discriminator 1
 1725 05f8 07F5BE53 		add	r3, r7, #6080
 1726 05fc 03F11503 		add	r3, r3, #21
 1727 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1728 0602 07F11803 		add	r3, r7, #24
 1729 0606 143B     		subs	r3, r3, #20
 1730 0608 1B68     		ldr	r3, [r3]
 1731 060a 1344     		add	r3, r3, r2
 1732 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1733 060e 07F5BE52 		add	r2, r7, #6080
 1734 0612 02F11702 		add	r2, r2, #23
 1735 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1736 0618 9A42     		cmp	r2, r3
 1737 061a FFF473AF 		bcc	.L101
 459:..\src/command_processing.c ****                         }
 460:..\src/command_processing.c ****                     }
 461:..\src/command_processing.c ****                     break;
 1738              		.loc 1 461 0 is_stmt 1
 1739 061e 01F054BF 		b	.L114
 1740              	.L87:
 462:..\src/command_processing.c ****                 case TYPE_INT32: 
 463:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1741              		.loc 1 463 0
 1742 0622 0023     		movs	r3, #0
 1743 0624 07F5BE52 		add	r2, r7, #6080
 1744 0628 02F11702 		add	r2, r2, #23
 1745 062c 1370     		strb	r3, [r2]
 1746 062e 7BE0     		b	.L102
 1747              	.L105:
 464:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1748              		.loc 1 464 0
 1749 0630 07F5BE53 		add	r3, r7, #6080
 1750 0634 03F11703 		add	r3, r3, #23
 1751 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 56


 1752 063a 07F5BE52 		add	r2, r7, #6080
 1753 063e 02F11302 		add	r2, r2, #19
 1754 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1755 0644 02FB03F3 		mul	r3, r2, r3
 1756 0648 1A46     		mov	r2, r3
 1757 064a 07F5BE53 		add	r3, r7, #6080
 1758 064e 03F10803 		add	r3, r3, #8
 1759 0652 1B68     		ldr	r3, [r3]
 1760 0654 1344     		add	r3, r3, r2
 1761 0656 07F5BE52 		add	r2, r7, #6080
 1762 065a 02F10402 		add	r2, r2, #4
 1763 065e 1360     		str	r3, [r2]
 465:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1764              		.loc 1 465 0
 1765 0660 07F5BE53 		add	r3, r7, #6080
 1766 0664 03F10403 		add	r3, r3, #4
 1767 0668 1B68     		ldr	r3, [r3]
 1768 066a 1A68     		ldr	r2, [r3]
 1769 066c 07F11803 		add	r3, r7, #24
 1770 0670 043B     		subs	r3, r3, #4
 1771 0672 1A60     		str	r2, [r3]
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1772              		.loc 1 466 0
 1773 0674 0023     		movs	r3, #0
 1774 0676 07F5BE52 		add	r2, r7, #6080
 1775 067a 02F11602 		add	r2, r2, #22
 1776 067e 1370     		strb	r3, [r2]
 1777 0680 3BE0     		b	.L103
 1778              	.L104:
 467:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1779              		.loc 1 467 0 discriminator 3
 1780 0682 07F5BE53 		add	r3, r7, #6080
 1781 0686 03F11503 		add	r3, r3, #21
 1782 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 068c 3222     		movs	r2, #50
 1784 068e 02FB03F3 		mul	r3, r2, r3
 1785 0692 1A1D     		adds	r2, r3, #4
 1786 0694 07F5BE53 		add	r3, r7, #6080
 1787 0698 03F11703 		add	r3, r3, #23
 1788 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 069e 07F5BE51 		add	r1, r7, #6080
 1790 06a2 01F11301 		add	r1, r1, #19
 1791 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1792 06a8 01FB03F3 		mul	r3, r1, r3
 1793 06ac 1A44     		add	r2, r2, r3
 1794 06ae 07F5BE53 		add	r3, r7, #6080
 1795 06b2 03F11303 		add	r3, r3, #19
 1796 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 06b8 1A44     		add	r2, r2, r3
 1798 06ba 07F5BE53 		add	r3, r7, #6080
 1799 06be 03F11603 		add	r3, r3, #22
 1800 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 06c4 D31A     		subs	r3, r2, r3
 1802 06c6 5A1E     		subs	r2, r3, #1
 1803 06c8 07F5BE53 		add	r3, r7, #6080
 1804 06cc 03F11603 		add	r3, r3, #22
 1805 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 57


 1806 06d2 07F11803 		add	r3, r7, #24
 1807 06d6 043B     		subs	r3, r3, #4
 1808 06d8 0B44     		add	r3, r3, r1
 1809 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1810 06dc 07F15803 		add	r3, r7, #88
 1811 06e0 043B     		subs	r3, r3, #4
 1812 06e2 9954     		strb	r1, [r3, r2]
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1813              		.loc 1 466 0 discriminator 3
 1814 06e4 07F5BE53 		add	r3, r7, #6080
 1815 06e8 03F11603 		add	r3, r3, #22
 1816 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1817 06ee 0133     		adds	r3, r3, #1
 1818 06f0 07F5BE52 		add	r2, r7, #6080
 1819 06f4 02F11602 		add	r2, r2, #22
 1820 06f8 1370     		strb	r3, [r2]
 1821              	.L103:
 466:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1822              		.loc 1 466 0 is_stmt 0 discriminator 1
 1823 06fa 07F5BE53 		add	r3, r7, #6080
 1824 06fe 03F11603 		add	r3, r3, #22
 1825 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1826 0704 07F5BE53 		add	r3, r7, #6080
 1827 0708 03F11303 		add	r3, r3, #19
 1828 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1829 070e 9A42     		cmp	r2, r3
 1830 0710 B7D3     		bcc	.L104
 463:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1831              		.loc 1 463 0 is_stmt 1 discriminator 2
 1832 0712 07F5BE53 		add	r3, r7, #6080
 1833 0716 03F11703 		add	r3, r3, #23
 1834 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 071c 0133     		adds	r3, r3, #1
 1836 071e 07F5BE52 		add	r2, r7, #6080
 1837 0722 02F11702 		add	r2, r2, #23
 1838 0726 1370     		strb	r3, [r2]
 1839              	.L102:
 463:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1840              		.loc 1 463 0 is_stmt 0 discriminator 1
 1841 0728 07F5BE53 		add	r3, r7, #6080
 1842 072c 03F11503 		add	r3, r3, #21
 1843 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1844 0732 07F11803 		add	r3, r7, #24
 1845 0736 143B     		subs	r3, r3, #20
 1846 0738 1B68     		ldr	r3, [r3]
 1847 073a 1344     		add	r3, r3, r2
 1848 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1849 073e 07F5BE52 		add	r2, r7, #6080
 1850 0742 02F11702 		add	r2, r2, #23
 1851 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1852 0748 9A42     		cmp	r2, r3
 1853 074a FFF471AF 		bcc	.L105
 468:..\src/command_processing.c ****                         }
 469:..\src/command_processing.c ****                     }
 470:..\src/command_processing.c ****                     break;
 1854              		.loc 1 470 0 is_stmt 1
 1855 074e 01F0BCBE 		b	.L114
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 58


 1856              	.L88:
 471:..\src/command_processing.c ****                 case TYPE_UINT32: 
 472:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1857              		.loc 1 472 0
 1858 0752 0023     		movs	r3, #0
 1859 0754 07F5BE52 		add	r2, r7, #6080
 1860 0758 02F11702 		add	r2, r2, #23
 1861 075c 1370     		strb	r3, [r2]
 1862 075e 7BE0     		b	.L106
 1863              	.L109:
 473:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1864              		.loc 1 473 0
 1865 0760 07F5BE53 		add	r3, r7, #6080
 1866 0764 03F11703 		add	r3, r3, #23
 1867 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1868 076a 07F5BE52 		add	r2, r7, #6080
 1869 076e 02F11302 		add	r2, r2, #19
 1870 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1871 0774 02FB03F3 		mul	r3, r2, r3
 1872 0778 1A46     		mov	r2, r3
 1873 077a 07F5BE53 		add	r3, r7, #6080
 1874 077e 03F10803 		add	r3, r3, #8
 1875 0782 1B68     		ldr	r3, [r3]
 1876 0784 1344     		add	r3, r3, r2
 1877 0786 07F5BE52 		add	r2, r7, #6080
 1878 078a 02F10402 		add	r2, r2, #4
 1879 078e 1360     		str	r3, [r2]
 474:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1880              		.loc 1 474 0
 1881 0790 07F5BE53 		add	r3, r7, #6080
 1882 0794 03F10403 		add	r3, r3, #4
 1883 0798 1B68     		ldr	r3, [r3]
 1884 079a 1A68     		ldr	r2, [r3]
 1885 079c 07F11803 		add	r3, r7, #24
 1886 07a0 083B     		subs	r3, r3, #8
 1887 07a2 1A60     		str	r2, [r3]
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1888              		.loc 1 475 0
 1889 07a4 0023     		movs	r3, #0
 1890 07a6 07F5BE52 		add	r2, r7, #6080
 1891 07aa 02F11602 		add	r2, r2, #22
 1892 07ae 1370     		strb	r3, [r2]
 1893 07b0 3BE0     		b	.L107
 1894              	.L108:
 476:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1895              		.loc 1 476 0 discriminator 3
 1896 07b2 07F5BE53 		add	r3, r7, #6080
 1897 07b6 03F11503 		add	r3, r3, #21
 1898 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1899 07bc 3222     		movs	r2, #50
 1900 07be 02FB03F3 		mul	r3, r2, r3
 1901 07c2 1A1D     		adds	r2, r3, #4
 1902 07c4 07F5BE53 		add	r3, r7, #6080
 1903 07c8 03F11703 		add	r3, r3, #23
 1904 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1905 07ce 07F5BE51 		add	r1, r7, #6080
 1906 07d2 01F11301 		add	r1, r1, #19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 59


 1907 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1908 07d8 01FB03F3 		mul	r3, r1, r3
 1909 07dc 1A44     		add	r2, r2, r3
 1910 07de 07F5BE53 		add	r3, r7, #6080
 1911 07e2 03F11303 		add	r3, r3, #19
 1912 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1913 07e8 1A44     		add	r2, r2, r3
 1914 07ea 07F5BE53 		add	r3, r7, #6080
 1915 07ee 03F11603 		add	r3, r3, #22
 1916 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 07f4 D31A     		subs	r3, r2, r3
 1918 07f6 5A1E     		subs	r2, r3, #1
 1919 07f8 07F5BE53 		add	r3, r7, #6080
 1920 07fc 03F11603 		add	r3, r3, #22
 1921 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1922 0802 07F11803 		add	r3, r7, #24
 1923 0806 083B     		subs	r3, r3, #8
 1924 0808 0B44     		add	r3, r3, r1
 1925 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1926 080c 07F15803 		add	r3, r7, #88
 1927 0810 043B     		subs	r3, r3, #4
 1928 0812 9954     		strb	r1, [r3, r2]
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1929              		.loc 1 475 0 discriminator 3
 1930 0814 07F5BE53 		add	r3, r7, #6080
 1931 0818 03F11603 		add	r3, r3, #22
 1932 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1933 081e 0133     		adds	r3, r3, #1
 1934 0820 07F5BE52 		add	r2, r7, #6080
 1935 0824 02F11602 		add	r2, r2, #22
 1936 0828 1370     		strb	r3, [r2]
 1937              	.L107:
 475:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1938              		.loc 1 475 0 is_stmt 0 discriminator 1
 1939 082a 07F5BE53 		add	r3, r7, #6080
 1940 082e 03F11603 		add	r3, r3, #22
 1941 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1942 0834 07F5BE53 		add	r3, r7, #6080
 1943 0838 03F11303 		add	r3, r3, #19
 1944 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1945 083e 9A42     		cmp	r2, r3
 1946 0840 B7D3     		bcc	.L108
 472:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1947              		.loc 1 472 0 is_stmt 1 discriminator 2
 1948 0842 07F5BE53 		add	r3, r7, #6080
 1949 0846 03F11703 		add	r3, r3, #23
 1950 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 084c 0133     		adds	r3, r3, #1
 1952 084e 07F5BE52 		add	r2, r7, #6080
 1953 0852 02F11702 		add	r2, r2, #23
 1954 0856 1370     		strb	r3, [r2]
 1955              	.L106:
 472:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1956              		.loc 1 472 0 is_stmt 0 discriminator 1
 1957 0858 07F5BE53 		add	r3, r7, #6080
 1958 085c 03F11503 		add	r3, r3, #21
 1959 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 60


 1960 0862 07F11803 		add	r3, r7, #24
 1961 0866 143B     		subs	r3, r3, #20
 1962 0868 1B68     		ldr	r3, [r3]
 1963 086a 1344     		add	r3, r3, r2
 1964 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1965 086e 07F5BE52 		add	r2, r7, #6080
 1966 0872 02F11702 		add	r2, r2, #23
 1967 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1968 0878 9A42     		cmp	r2, r3
 1969 087a FFF471AF 		bcc	.L109
 477:..\src/command_processing.c ****                         }
 478:..\src/command_processing.c ****                     }
 479:..\src/command_processing.c ****                     break;
 1970              		.loc 1 479 0 is_stmt 1
 1971 087e 01F024BE 		b	.L114
 1972              	.L89:
 480:..\src/command_processing.c ****                     
 481:..\src/command_processing.c ****                 case TYPE_FLOAT:
 482:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1973              		.loc 1 482 0
 1974 0882 0023     		movs	r3, #0
 1975 0884 07F5BE52 		add	r2, r7, #6080
 1976 0888 02F11702 		add	r2, r2, #23
 1977 088c 1370     		strb	r3, [r2]
 1978 088e 7BE0     		b	.L110
 1979              	.L113:
 483:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1980              		.loc 1 483 0
 1981 0890 07F5BE53 		add	r3, r7, #6080
 1982 0894 03F11703 		add	r3, r3, #23
 1983 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1984 089a 07F5BE52 		add	r2, r7, #6080
 1985 089e 02F11302 		add	r2, r2, #19
 1986 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1987 08a4 02FB03F3 		mul	r3, r2, r3
 1988 08a8 1A46     		mov	r2, r3
 1989 08aa 07F5BE53 		add	r3, r7, #6080
 1990 08ae 03F10803 		add	r3, r3, #8
 1991 08b2 1B68     		ldr	r3, [r3]
 1992 08b4 1344     		add	r3, r3, r2
 1993 08b6 07F5BE52 		add	r2, r7, #6080
 1994 08ba 02F10402 		add	r2, r2, #4
 1995 08be 1360     		str	r3, [r2]
 484:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1996              		.loc 1 484 0
 1997 08c0 07F5BE53 		add	r3, r7, #6080
 1998 08c4 03F10403 		add	r3, r3, #4
 1999 08c8 1B68     		ldr	r3, [r3]
 2000 08ca 1A68     		ldr	r2, [r3]	@ float
 2001 08cc 07F13803 		add	r3, r7, #56
 2002 08d0 1C3B     		subs	r3, r3, #28
 2003 08d2 1A60     		str	r2, [r3]	@ float
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2004              		.loc 1 485 0
 2005 08d4 0023     		movs	r3, #0
 2006 08d6 07F5BE52 		add	r2, r7, #6080
 2007 08da 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 61


 2008 08de 1370     		strb	r3, [r2]
 2009 08e0 3BE0     		b	.L111
 2010              	.L112:
 486:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2011              		.loc 1 486 0 discriminator 3
 2012 08e2 07F5BE53 		add	r3, r7, #6080
 2013 08e6 03F11503 		add	r3, r3, #21
 2014 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2015 08ec 3222     		movs	r2, #50
 2016 08ee 02FB03F3 		mul	r3, r2, r3
 2017 08f2 1A1D     		adds	r2, r3, #4
 2018 08f4 07F5BE53 		add	r3, r7, #6080
 2019 08f8 03F11703 		add	r3, r3, #23
 2020 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 08fe 07F5BE51 		add	r1, r7, #6080
 2022 0902 01F11301 		add	r1, r1, #19
 2023 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2024 0908 01FB03F3 		mul	r3, r1, r3
 2025 090c 1A44     		add	r2, r2, r3
 2026 090e 07F5BE53 		add	r3, r7, #6080
 2027 0912 03F11303 		add	r3, r3, #19
 2028 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2029 0918 1A44     		add	r2, r2, r3
 2030 091a 07F5BE53 		add	r3, r7, #6080
 2031 091e 03F11603 		add	r3, r3, #22
 2032 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2033 0924 D31A     		subs	r3, r2, r3
 2034 0926 5A1E     		subs	r2, r3, #1
 2035 0928 07F5BE53 		add	r3, r7, #6080
 2036 092c 03F11603 		add	r3, r3, #22
 2037 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2038 0932 07F13803 		add	r3, r7, #56
 2039 0936 1C3B     		subs	r3, r3, #28
 2040 0938 0B44     		add	r3, r3, r1
 2041 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2042 093c 07F15803 		add	r3, r7, #88
 2043 0940 043B     		subs	r3, r3, #4
 2044 0942 9954     		strb	r1, [r3, r2]
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2045              		.loc 1 485 0 discriminator 3
 2046 0944 07F5BE53 		add	r3, r7, #6080
 2047 0948 03F11603 		add	r3, r3, #22
 2048 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2049 094e 0133     		adds	r3, r3, #1
 2050 0950 07F5BE52 		add	r2, r7, #6080
 2051 0954 02F11602 		add	r2, r2, #22
 2052 0958 1370     		strb	r3, [r2]
 2053              	.L111:
 485:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2054              		.loc 1 485 0 is_stmt 0 discriminator 1
 2055 095a 07F5BE53 		add	r3, r7, #6080
 2056 095e 03F11603 		add	r3, r3, #22
 2057 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2058 0964 07F5BE53 		add	r3, r7, #6080
 2059 0968 03F11303 		add	r3, r3, #19
 2060 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2061 096e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 62


 2062 0970 B7D3     		bcc	.L112
 482:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2063              		.loc 1 482 0 is_stmt 1 discriminator 2
 2064 0972 07F5BE53 		add	r3, r7, #6080
 2065 0976 03F11703 		add	r3, r3, #23
 2066 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2067 097c 0133     		adds	r3, r3, #1
 2068 097e 07F5BE52 		add	r2, r7, #6080
 2069 0982 02F11702 		add	r2, r2, #23
 2070 0986 1370     		strb	r3, [r2]
 2071              	.L110:
 482:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2072              		.loc 1 482 0 is_stmt 0 discriminator 1
 2073 0988 07F5BE53 		add	r3, r7, #6080
 2074 098c 03F11503 		add	r3, r3, #21
 2075 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2076 0992 07F11803 		add	r3, r7, #24
 2077 0996 143B     		subs	r3, r3, #20
 2078 0998 1B68     		ldr	r3, [r3]
 2079 099a 1344     		add	r3, r3, r2
 2080 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2081 099e 07F5BE52 		add	r2, r7, #6080
 2082 09a2 02F11702 		add	r2, r2, #23
 2083 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2084 09a8 9A42     		cmp	r2, r3
 2085 09aa FFF471AF 		bcc	.L113
 487:..\src/command_processing.c ****                         }
 488:..\src/command_processing.c ****                     }
 489:..\src/command_processing.c ****                     break;   
 2086              		.loc 1 489 0 is_stmt 1 discriminator 7
 2087 09ae 00BF     		nop
 2088 09b0 01F08BBD 		b	.L114
 2089              	.L80:
 490:..\src/command_processing.c ****             }
 491:..\src/command_processing.c ****         }
 492:..\src/command_processing.c ****         else {
 493:..\src/command_processing.c ****             
 494:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 495:..\src/command_processing.c ****             
 496:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 497:..\src/command_processing.c ****                 switch(idx+1){
 2090              		.loc 1 497 0
 2091 09b4 07F5BE53 		add	r3, r7, #6080
 2092 09b8 03F11503 		add	r3, r3, #21
 2093 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2094 09be 0133     		adds	r3, r3, #1
 2095 09c0 023B     		subs	r3, r3, #2
 2096 09c2 332B     		cmp	r3, #51
 2097 09c4 01F28085 		bhi	.L284
 2098 09c8 01A2     		adr	r2, .L117
 2099 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2100 09ce 00BF     		.p2align 2
 2101              	.L117:
 2102 09d0 A10A0000 		.word	.L116+1
 2103 09d4 6D0F0000 		.word	.L118+1
 2104 09d8 C9240000 		.word	.L284+1
 2105 09dc C9240000 		.word	.L284+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 63


 2106 09e0 C9240000 		.word	.L284+1
 2107 09e4 C9240000 		.word	.L284+1
 2108 09e8 37140000 		.word	.L119+1
 2109 09ec C9240000 		.word	.L284+1
 2110 09f0 C9240000 		.word	.L284+1
 2111 09f4 AB150000 		.word	.L120+1
 2112 09f8 C9240000 		.word	.L284+1
 2113 09fc C9240000 		.word	.L284+1
 2114 0a00 C9240000 		.word	.L284+1
 2115 0a04 C9240000 		.word	.L284+1
 2116 0a08 C9240000 		.word	.L284+1
 2117 0a0c C9240000 		.word	.L284+1
 2118 0a10 C9240000 		.word	.L284+1
 2119 0a14 C9240000 		.word	.L284+1
 2120 0a18 C9240000 		.word	.L284+1
 2121 0a1c C9240000 		.word	.L284+1
 2122 0a20 C9240000 		.word	.L284+1
 2123 0a24 79170000 		.word	.L121+1
 2124 0a28 C9240000 		.word	.L284+1
 2125 0a2c C9240000 		.word	.L284+1
 2126 0a30 C9240000 		.word	.L284+1
 2127 0a34 C9240000 		.word	.L284+1
 2128 0a38 C9240000 		.word	.L284+1
 2129 0a3c C9240000 		.word	.L284+1
 2130 0a40 C9240000 		.word	.L284+1
 2131 0a44 C9240000 		.word	.L284+1
 2132 0a48 C9240000 		.word	.L284+1
 2133 0a4c C9240000 		.word	.L284+1
 2134 0a50 C9240000 		.word	.L284+1
 2135 0a54 C9240000 		.word	.L284+1
 2136 0a58 C9240000 		.word	.L284+1
 2137 0a5c C9240000 		.word	.L284+1
 2138 0a60 C9240000 		.word	.L284+1
 2139 0a64 C9240000 		.word	.L284+1
 2140 0a68 C9240000 		.word	.L284+1
 2141 0a6c C9240000 		.word	.L284+1
 2142 0a70 C9240000 		.word	.L284+1
 2143 0a74 C9240000 		.word	.L284+1
 2144 0a78 43180000 		.word	.L122+1
 2145 0a7c 111D0000 		.word	.L123+1
 2146 0a80 C9240000 		.word	.L284+1
 2147 0a84 C9240000 		.word	.L284+1
 2148 0a88 C9240000 		.word	.L284+1
 2149 0a8c C9240000 		.word	.L284+1
 2150 0a90 DB210000 		.word	.L124+1
 2151 0a94 C9240000 		.word	.L284+1
 2152 0a98 C9240000 		.word	.L284+1
 2153 0a9c FF220000 		.word	.L125+1
 2154              		.p2align 1
 2155              	.L116:
 498:..\src/command_processing.c ****                     case 2:         // Position PID
 499:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2156              		.loc 1 499 0
 2157 0aa0 07F5BE53 		add	r3, r7, #6080
 2158 0aa4 03F10F03 		add	r3, r3, #15
 2159 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2160 0aaa AC49     		ldr	r1, .L290
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 64


 2161 0aac 1346     		mov	r3, r2
 2162 0aae DB00     		lsls	r3, r3, #3
 2163 0ab0 9B1A     		subs	r3, r3, r2
 2164 0ab2 1B01     		lsls	r3, r3, #4
 2165 0ab4 0B44     		add	r3, r3, r1
 2166 0ab6 03F20F13 		addw	r3, r3, #271
 2167 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2168 0abc 032B     		cmp	r3, #3
 2169 0abe 00F02981 		beq	.L126
 500:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2170              		.loc 1 500 0
 2171 0ac2 07F5BE53 		add	r3, r7, #6080
 2172 0ac6 03F10F03 		add	r3, r3, #15
 2173 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2174 0acc A349     		ldr	r1, .L290
 2175 0ace 1346     		mov	r3, r2
 2176 0ad0 DB00     		lsls	r3, r3, #3
 2177 0ad2 9B1A     		subs	r3, r3, r2
 2178 0ad4 1B01     		lsls	r3, r3, #4
 2179 0ad6 0B44     		add	r3, r3, r1
 2180 0ad8 B033     		adds	r3, r3, #176
 2181 0ada 1B68     		ldr	r3, [r3]
 2182 0adc 1846     		mov	r0, r3
 2183 0ade FFF7FEFF 		bl	__aeabi_i2f
 2184 0ae2 0346     		mov	r3, r0
 2185 0ae4 4FF08F41 		mov	r1, #1199570944
 2186 0ae8 1846     		mov	r0, r3
 2187 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2188 0aee 0346     		mov	r3, r0
 2189 0af0 1A46     		mov	r2, r3
 2190 0af2 07F13803 		add	r3, r7, #56
 2191 0af6 1C3B     		subs	r3, r3, #28
 2192 0af8 1A60     		str	r2, [r3]	@ float
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2193              		.loc 1 501 0
 2194 0afa 0023     		movs	r3, #0
 2195 0afc 07F5BE52 		add	r2, r7, #6080
 2196 0b00 02F11702 		add	r2, r2, #23
 2197 0b04 1370     		strb	r3, [r2]
 2198 0b06 2EE0     		b	.L127
 2199              	.L128:
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2200              		.loc 1 502 0 discriminator 3
 2201 0b08 07F5BE53 		add	r3, r7, #6080
 2202 0b0c 03F11503 		add	r3, r3, #21
 2203 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2204 0b12 3222     		movs	r2, #50
 2205 0b14 02FB03F3 		mul	r3, r2, r3
 2206 0b18 1A1D     		adds	r2, r3, #4
 2207 0b1a 07F5BE53 		add	r3, r7, #6080
 2208 0b1e 03F11303 		add	r3, r3, #19
 2209 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2210 0b24 1A44     		add	r2, r2, r3
 2211 0b26 07F5BE53 		add	r3, r7, #6080
 2212 0b2a 03F11703 		add	r3, r3, #23
 2213 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2214 0b30 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 65


 2215 0b32 5A1E     		subs	r2, r3, #1
 2216 0b34 07F5BE53 		add	r3, r7, #6080
 2217 0b38 03F11703 		add	r3, r3, #23
 2218 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2219 0b3e 07F13803 		add	r3, r7, #56
 2220 0b42 1C3B     		subs	r3, r3, #28
 2221 0b44 0B44     		add	r3, r3, r1
 2222 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2223 0b48 07F15803 		add	r3, r7, #88
 2224 0b4c 043B     		subs	r3, r3, #4
 2225 0b4e 9954     		strb	r1, [r3, r2]
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2226              		.loc 1 501 0 discriminator 3
 2227 0b50 07F5BE53 		add	r3, r7, #6080
 2228 0b54 03F11703 		add	r3, r3, #23
 2229 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 0b5a 0133     		adds	r3, r3, #1
 2231 0b5c 07F5BE52 		add	r2, r7, #6080
 2232 0b60 02F11702 		add	r2, r2, #23
 2233 0b64 1370     		strb	r3, [r2]
 2234              	.L127:
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2235              		.loc 1 501 0 is_stmt 0 discriminator 1
 2236 0b66 07F5BE53 		add	r3, r7, #6080
 2237 0b6a 03F11703 		add	r3, r3, #23
 2238 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2239 0b70 07F5BE53 		add	r3, r7, #6080
 2240 0b74 03F11303 		add	r3, r3, #19
 2241 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2242 0b7a 9A42     		cmp	r2, r3
 2243 0b7c C4D3     		bcc	.L128
 503:..\src/command_processing.c ****                             }
 504:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2244              		.loc 1 504 0 is_stmt 1
 2245 0b7e 07F5BE53 		add	r3, r7, #6080
 2246 0b82 03F10F03 		add	r3, r3, #15
 2247 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2248 0b88 7449     		ldr	r1, .L290
 2249 0b8a 1346     		mov	r3, r2
 2250 0b8c DB00     		lsls	r3, r3, #3
 2251 0b8e 9B1A     		subs	r3, r3, r2
 2252 0b90 1B01     		lsls	r3, r3, #4
 2253 0b92 0B44     		add	r3, r3, r1
 2254 0b94 B433     		adds	r3, r3, #180
 2255 0b96 1B68     		ldr	r3, [r3]
 2256 0b98 1846     		mov	r0, r3
 2257 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2258 0b9e 0346     		mov	r3, r0
 2259 0ba0 4FF08F41 		mov	r1, #1199570944
 2260 0ba4 1846     		mov	r0, r3
 2261 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2262 0baa 0346     		mov	r3, r0
 2263 0bac 1A46     		mov	r2, r3
 2264 0bae 07F13803 		add	r3, r7, #56
 2265 0bb2 1C3B     		subs	r3, r3, #28
 2266 0bb4 1A60     		str	r2, [r3]	@ float
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 66


 2267              		.loc 1 505 0
 2268 0bb6 0023     		movs	r3, #0
 2269 0bb8 07F5BE52 		add	r2, r7, #6080
 2270 0bbc 02F11702 		add	r2, r2, #23
 2271 0bc0 1370     		strb	r3, [r2]
 2272 0bc2 34E0     		b	.L129
 2273              	.L130:
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2274              		.loc 1 506 0 discriminator 3
 2275 0bc4 07F5BE53 		add	r3, r7, #6080
 2276 0bc8 03F11503 		add	r3, r3, #21
 2277 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2278 0bce 3222     		movs	r2, #50
 2279 0bd0 02FB03F3 		mul	r3, r2, r3
 2280 0bd4 1A1D     		adds	r2, r3, #4
 2281 0bd6 07F5BE53 		add	r3, r7, #6080
 2282 0bda 03F11303 		add	r3, r3, #19
 2283 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2284 0be0 1A44     		add	r2, r2, r3
 2285 0be2 07F5BE53 		add	r3, r7, #6080
 2286 0be6 03F11303 		add	r3, r3, #19
 2287 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2288 0bec 1A44     		add	r2, r2, r3
 2289 0bee 07F5BE53 		add	r3, r7, #6080
 2290 0bf2 03F11703 		add	r3, r3, #23
 2291 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2292 0bf8 D31A     		subs	r3, r2, r3
 2293 0bfa 5A1E     		subs	r2, r3, #1
 2294 0bfc 07F5BE53 		add	r3, r7, #6080
 2295 0c00 03F11703 		add	r3, r3, #23
 2296 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2297 0c06 07F13803 		add	r3, r7, #56
 2298 0c0a 1C3B     		subs	r3, r3, #28
 2299 0c0c 0B44     		add	r3, r3, r1
 2300 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2301 0c10 07F15803 		add	r3, r7, #88
 2302 0c14 043B     		subs	r3, r3, #4
 2303 0c16 9954     		strb	r1, [r3, r2]
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2304              		.loc 1 505 0 discriminator 3
 2305 0c18 07F5BE53 		add	r3, r7, #6080
 2306 0c1c 03F11703 		add	r3, r3, #23
 2307 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2308 0c22 0133     		adds	r3, r3, #1
 2309 0c24 07F5BE52 		add	r2, r7, #6080
 2310 0c28 02F11702 		add	r2, r2, #23
 2311 0c2c 1370     		strb	r3, [r2]
 2312              	.L129:
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2313              		.loc 1 505 0 is_stmt 0 discriminator 1
 2314 0c2e 07F5BE53 		add	r3, r7, #6080
 2315 0c32 03F11703 		add	r3, r3, #23
 2316 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2317 0c38 07F5BE53 		add	r3, r7, #6080
 2318 0c3c 03F11303 		add	r3, r3, #19
 2319 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0c42 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 67


 2321 0c44 BED3     		bcc	.L130
 507:..\src/command_processing.c ****                             }
 508:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2322              		.loc 1 508 0 is_stmt 1
 2323 0c46 07F5BE53 		add	r3, r7, #6080
 2324 0c4a 03F10F03 		add	r3, r3, #15
 2325 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2326 0c50 4249     		ldr	r1, .L290
 2327 0c52 1346     		mov	r3, r2
 2328 0c54 DB00     		lsls	r3, r3, #3
 2329 0c56 9B1A     		subs	r3, r3, r2
 2330 0c58 1B01     		lsls	r3, r3, #4
 2331 0c5a 0B44     		add	r3, r3, r1
 2332 0c5c B833     		adds	r3, r3, #184
 2333 0c5e 1B68     		ldr	r3, [r3]
 2334 0c60 1846     		mov	r0, r3
 2335 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2336 0c66 0346     		mov	r3, r0
 2337 0c68 4FF08F41 		mov	r1, #1199570944
 2338 0c6c 1846     		mov	r0, r3
 2339 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2340 0c72 0346     		mov	r3, r0
 2341 0c74 1A46     		mov	r2, r3
 2342 0c76 07F13803 		add	r3, r7, #56
 2343 0c7a 1C3B     		subs	r3, r3, #28
 2344 0c7c 1A60     		str	r2, [r3]	@ float
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2345              		.loc 1 509 0
 2346 0c7e 0023     		movs	r3, #0
 2347 0c80 07F5BE52 		add	r2, r7, #6080
 2348 0c84 02F11702 		add	r2, r2, #23
 2349 0c88 1370     		strb	r3, [r2]
 2350 0c8a 35E0     		b	.L131
 2351              	.L132:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2352              		.loc 1 510 0 discriminator 3
 2353 0c8c 07F5BE53 		add	r3, r7, #6080
 2354 0c90 03F11503 		add	r3, r3, #21
 2355 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2356 0c96 3222     		movs	r2, #50
 2357 0c98 02FB03F3 		mul	r3, r2, r3
 2358 0c9c 1A1D     		adds	r2, r3, #4
 2359 0c9e 07F5BE53 		add	r3, r7, #6080
 2360 0ca2 03F11303 		add	r3, r3, #19
 2361 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362 0ca8 5B00     		lsls	r3, r3, #1
 2363 0caa 1A44     		add	r2, r2, r3
 2364 0cac 07F5BE53 		add	r3, r7, #6080
 2365 0cb0 03F11303 		add	r3, r3, #19
 2366 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 0cb6 1A44     		add	r2, r2, r3
 2368 0cb8 07F5BE53 		add	r3, r7, #6080
 2369 0cbc 03F11703 		add	r3, r3, #23
 2370 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2371 0cc2 D31A     		subs	r3, r2, r3
 2372 0cc4 5A1E     		subs	r2, r3, #1
 2373 0cc6 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 68


 2374 0cca 03F11703 		add	r3, r3, #23
 2375 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2376 0cd0 07F13803 		add	r3, r7, #56
 2377 0cd4 1C3B     		subs	r3, r3, #28
 2378 0cd6 0B44     		add	r3, r3, r1
 2379 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2380 0cda 07F15803 		add	r3, r7, #88
 2381 0cde 043B     		subs	r3, r3, #4
 2382 0ce0 9954     		strb	r1, [r3, r2]
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2383              		.loc 1 509 0 discriminator 3
 2384 0ce2 07F5BE53 		add	r3, r7, #6080
 2385 0ce6 03F11703 		add	r3, r3, #23
 2386 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2387 0cec 0133     		adds	r3, r3, #1
 2388 0cee 07F5BE52 		add	r2, r7, #6080
 2389 0cf2 02F11702 		add	r2, r2, #23
 2390 0cf6 1370     		strb	r3, [r2]
 2391              	.L131:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2392              		.loc 1 509 0 is_stmt 0 discriminator 1
 2393 0cf8 07F5BE53 		add	r3, r7, #6080
 2394 0cfc 03F11703 		add	r3, r3, #23
 2395 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2396 0d02 07F5BE53 		add	r3, r7, #6080
 2397 0d06 03F11303 		add	r3, r3, #19
 2398 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2399 0d0c 9A42     		cmp	r2, r3
 2400 0d0e BDD3     		bcc	.L132
 511:..\src/command_processing.c ****                             } 
 512:..\src/command_processing.c ****                         }
 513:..\src/command_processing.c ****                         else {
 514:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 517:..\src/command_processing.c ****                             }
 518:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 521:..\src/command_processing.c ****                             }
 522:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 525:..\src/command_processing.c ****                             }
 526:..\src/command_processing.c ****                         }
 527:..\src/command_processing.c ****                         break;
 2401              		.loc 1 527 0 is_stmt 1
 2402 0d10 01F0DBBB 		b	.L114
 2403              	.L126:
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2404              		.loc 1 514 0
 2405 0d14 07F5BE53 		add	r3, r7, #6080
 2406 0d18 03F10F03 		add	r3, r3, #15
 2407 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2408 0d1e 0F49     		ldr	r1, .L290
 2409 0d20 1346     		mov	r3, r2
 2410 0d22 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 69


 2411 0d24 9B1A     		subs	r3, r3, r2
 2412 0d26 1B01     		lsls	r3, r3, #4
 2413 0d28 0B44     		add	r3, r3, r1
 2414 0d2a C833     		adds	r3, r3, #200
 2415 0d2c 1B68     		ldr	r3, [r3]
 2416 0d2e 1846     		mov	r0, r3
 2417 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2418 0d34 0346     		mov	r3, r0
 2419 0d36 4FF08F41 		mov	r1, #1199570944
 2420 0d3a 1846     		mov	r0, r3
 2421 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2422 0d40 0346     		mov	r3, r0
 2423 0d42 1A46     		mov	r2, r3
 2424 0d44 07F13803 		add	r3, r7, #56
 2425 0d48 1C3B     		subs	r3, r3, #28
 2426 0d4a 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2427              		.loc 1 515 0
 2428 0d4c 0023     		movs	r3, #0
 2429 0d4e 07F5BE52 		add	r2, r7, #6080
 2430 0d52 02F11702 		add	r2, r2, #23
 2431 0d56 1370     		strb	r3, [r2]
 2432 0d58 31E0     		b	.L134
 2433              	.L291:
 2434 0d5a 00BF     		.align	2
 2435              	.L290:
 2436 0d5c 00000000 		.word	c_mem
 2437              	.L135:
 516:..\src/command_processing.c ****                             }
 2438              		.loc 1 516 0 discriminator 3
 2439 0d60 07F5BE53 		add	r3, r7, #6080
 2440 0d64 03F11503 		add	r3, r3, #21
 2441 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2442 0d6a 3222     		movs	r2, #50
 2443 0d6c 02FB03F3 		mul	r3, r2, r3
 2444 0d70 1A1D     		adds	r2, r3, #4
 2445 0d72 07F5BE53 		add	r3, r7, #6080
 2446 0d76 03F11303 		add	r3, r3, #19
 2447 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2448 0d7c 1A44     		add	r2, r2, r3
 2449 0d7e 07F5BE53 		add	r3, r7, #6080
 2450 0d82 03F11703 		add	r3, r3, #23
 2451 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2452 0d88 D31A     		subs	r3, r2, r3
 2453 0d8a 5A1E     		subs	r2, r3, #1
 2454 0d8c 07F5BE53 		add	r3, r7, #6080
 2455 0d90 03F11703 		add	r3, r3, #23
 2456 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2457 0d96 07F13803 		add	r3, r7, #56
 2458 0d9a 1C3B     		subs	r3, r3, #28
 2459 0d9c 0B44     		add	r3, r3, r1
 2460 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2461 0da0 07F15803 		add	r3, r7, #88
 2462 0da4 043B     		subs	r3, r3, #4
 2463 0da6 9954     		strb	r1, [r3, r2]
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2464              		.loc 1 515 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 70


 2465 0da8 07F5BE53 		add	r3, r7, #6080
 2466 0dac 03F11703 		add	r3, r3, #23
 2467 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 0db2 0133     		adds	r3, r3, #1
 2469 0db4 07F5BE52 		add	r2, r7, #6080
 2470 0db8 02F11702 		add	r2, r2, #23
 2471 0dbc 1370     		strb	r3, [r2]
 2472              	.L134:
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2473              		.loc 1 515 0 is_stmt 0 discriminator 1
 2474 0dbe 07F5BE53 		add	r3, r7, #6080
 2475 0dc2 03F11703 		add	r3, r3, #23
 2476 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2477 0dc8 07F5BE53 		add	r3, r7, #6080
 2478 0dcc 03F11303 		add	r3, r3, #19
 2479 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2480 0dd2 9A42     		cmp	r2, r3
 2481 0dd4 C4D3     		bcc	.L135
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2482              		.loc 1 518 0 is_stmt 1
 2483 0dd6 07F5BE53 		add	r3, r7, #6080
 2484 0dda 03F10F03 		add	r3, r3, #15
 2485 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2486 0de0 AB49     		ldr	r1, .L292
 2487 0de2 1346     		mov	r3, r2
 2488 0de4 DB00     		lsls	r3, r3, #3
 2489 0de6 9B1A     		subs	r3, r3, r2
 2490 0de8 1B01     		lsls	r3, r3, #4
 2491 0dea 0B44     		add	r3, r3, r1
 2492 0dec CC33     		adds	r3, r3, #204
 2493 0dee 1B68     		ldr	r3, [r3]
 2494 0df0 1846     		mov	r0, r3
 2495 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2496 0df6 0346     		mov	r3, r0
 2497 0df8 4FF08F41 		mov	r1, #1199570944
 2498 0dfc 1846     		mov	r0, r3
 2499 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2500 0e02 0346     		mov	r3, r0
 2501 0e04 1A46     		mov	r2, r3
 2502 0e06 07F13803 		add	r3, r7, #56
 2503 0e0a 1C3B     		subs	r3, r3, #28
 2504 0e0c 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2505              		.loc 1 519 0
 2506 0e0e 0023     		movs	r3, #0
 2507 0e10 07F5BE52 		add	r2, r7, #6080
 2508 0e14 02F11702 		add	r2, r2, #23
 2509 0e18 1370     		strb	r3, [r2]
 2510 0e1a 34E0     		b	.L136
 2511              	.L137:
 520:..\src/command_processing.c ****                             }
 2512              		.loc 1 520 0 discriminator 3
 2513 0e1c 07F5BE53 		add	r3, r7, #6080
 2514 0e20 03F11503 		add	r3, r3, #21
 2515 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 0e26 3222     		movs	r2, #50
 2517 0e28 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 71


 2518 0e2c 1A1D     		adds	r2, r3, #4
 2519 0e2e 07F5BE53 		add	r3, r7, #6080
 2520 0e32 03F11303 		add	r3, r3, #19
 2521 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2522 0e38 1A44     		add	r2, r2, r3
 2523 0e3a 07F5BE53 		add	r3, r7, #6080
 2524 0e3e 03F11303 		add	r3, r3, #19
 2525 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2526 0e44 1A44     		add	r2, r2, r3
 2527 0e46 07F5BE53 		add	r3, r7, #6080
 2528 0e4a 03F11703 		add	r3, r3, #23
 2529 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2530 0e50 D31A     		subs	r3, r2, r3
 2531 0e52 5A1E     		subs	r2, r3, #1
 2532 0e54 07F5BE53 		add	r3, r7, #6080
 2533 0e58 03F11703 		add	r3, r3, #23
 2534 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2535 0e5e 07F13803 		add	r3, r7, #56
 2536 0e62 1C3B     		subs	r3, r3, #28
 2537 0e64 0B44     		add	r3, r3, r1
 2538 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2539 0e68 07F15803 		add	r3, r7, #88
 2540 0e6c 043B     		subs	r3, r3, #4
 2541 0e6e 9954     		strb	r1, [r3, r2]
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2542              		.loc 1 519 0 discriminator 3
 2543 0e70 07F5BE53 		add	r3, r7, #6080
 2544 0e74 03F11703 		add	r3, r3, #23
 2545 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2546 0e7a 0133     		adds	r3, r3, #1
 2547 0e7c 07F5BE52 		add	r2, r7, #6080
 2548 0e80 02F11702 		add	r2, r2, #23
 2549 0e84 1370     		strb	r3, [r2]
 2550              	.L136:
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2551              		.loc 1 519 0 is_stmt 0 discriminator 1
 2552 0e86 07F5BE53 		add	r3, r7, #6080
 2553 0e8a 03F11703 		add	r3, r3, #23
 2554 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2555 0e90 07F5BE53 		add	r3, r7, #6080
 2556 0e94 03F11303 		add	r3, r3, #19
 2557 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2558 0e9a 9A42     		cmp	r2, r3
 2559 0e9c BED3     		bcc	.L137
 522:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2560              		.loc 1 522 0 is_stmt 1
 2561 0e9e 07F5BE53 		add	r3, r7, #6080
 2562 0ea2 03F10F03 		add	r3, r3, #15
 2563 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2564 0ea8 7949     		ldr	r1, .L292
 2565 0eaa 1346     		mov	r3, r2
 2566 0eac DB00     		lsls	r3, r3, #3
 2567 0eae 9B1A     		subs	r3, r3, r2
 2568 0eb0 1B01     		lsls	r3, r3, #4
 2569 0eb2 0B44     		add	r3, r3, r1
 2570 0eb4 D033     		adds	r3, r3, #208
 2571 0eb6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 72


 2572 0eb8 1846     		mov	r0, r3
 2573 0eba FFF7FEFF 		bl	__aeabi_i2f
 2574 0ebe 0346     		mov	r3, r0
 2575 0ec0 4FF08F41 		mov	r1, #1199570944
 2576 0ec4 1846     		mov	r0, r3
 2577 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2578 0eca 0346     		mov	r3, r0
 2579 0ecc 1A46     		mov	r2, r3
 2580 0ece 07F13803 		add	r3, r7, #56
 2581 0ed2 1C3B     		subs	r3, r3, #28
 2582 0ed4 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2583              		.loc 1 523 0
 2584 0ed6 0023     		movs	r3, #0
 2585 0ed8 07F5BE52 		add	r2, r7, #6080
 2586 0edc 02F11702 		add	r2, r2, #23
 2587 0ee0 1370     		strb	r3, [r2]
 2588 0ee2 35E0     		b	.L138
 2589              	.L139:
 524:..\src/command_processing.c ****                             }
 2590              		.loc 1 524 0 discriminator 3
 2591 0ee4 07F5BE53 		add	r3, r7, #6080
 2592 0ee8 03F11503 		add	r3, r3, #21
 2593 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2594 0eee 3222     		movs	r2, #50
 2595 0ef0 02FB03F3 		mul	r3, r2, r3
 2596 0ef4 1A1D     		adds	r2, r3, #4
 2597 0ef6 07F5BE53 		add	r3, r7, #6080
 2598 0efa 03F11303 		add	r3, r3, #19
 2599 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2600 0f00 5B00     		lsls	r3, r3, #1
 2601 0f02 1A44     		add	r2, r2, r3
 2602 0f04 07F5BE53 		add	r3, r7, #6080
 2603 0f08 03F11303 		add	r3, r3, #19
 2604 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2605 0f0e 1A44     		add	r2, r2, r3
 2606 0f10 07F5BE53 		add	r3, r7, #6080
 2607 0f14 03F11703 		add	r3, r3, #23
 2608 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2609 0f1a D31A     		subs	r3, r2, r3
 2610 0f1c 5A1E     		subs	r2, r3, #1
 2611 0f1e 07F5BE53 		add	r3, r7, #6080
 2612 0f22 03F11703 		add	r3, r3, #23
 2613 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2614 0f28 07F13803 		add	r3, r7, #56
 2615 0f2c 1C3B     		subs	r3, r3, #28
 2616 0f2e 0B44     		add	r3, r3, r1
 2617 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2618 0f32 07F15803 		add	r3, r7, #88
 2619 0f36 043B     		subs	r3, r3, #4
 2620 0f38 9954     		strb	r1, [r3, r2]
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2621              		.loc 1 523 0 discriminator 3
 2622 0f3a 07F5BE53 		add	r3, r7, #6080
 2623 0f3e 03F11703 		add	r3, r3, #23
 2624 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2625 0f44 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 73


 2626 0f46 07F5BE52 		add	r2, r7, #6080
 2627 0f4a 02F11702 		add	r2, r2, #23
 2628 0f4e 1370     		strb	r3, [r2]
 2629              	.L138:
 523:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2630              		.loc 1 523 0 is_stmt 0 discriminator 1
 2631 0f50 07F5BE53 		add	r3, r7, #6080
 2632 0f54 03F11703 		add	r3, r3, #23
 2633 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2634 0f5a 07F5BE53 		add	r3, r7, #6080
 2635 0f5e 03F11303 		add	r3, r3, #19
 2636 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2637 0f64 9A42     		cmp	r2, r3
 2638 0f66 BDD3     		bcc	.L139
 2639              		.loc 1 527 0 is_stmt 1
 2640 0f68 01F0AFBA 		b	.L114
 2641              	.L118:
 528:..\src/command_processing.c ****                         
 529:..\src/command_processing.c ****                     case 3:         //Current PID
 530:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2642              		.loc 1 530 0
 2643 0f6c 07F5BE53 		add	r3, r7, #6080
 2644 0f70 03F10F03 		add	r3, r3, #15
 2645 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2646 0f76 4649     		ldr	r1, .L292
 2647 0f78 1346     		mov	r3, r2
 2648 0f7a DB00     		lsls	r3, r3, #3
 2649 0f7c 9B1A     		subs	r3, r3, r2
 2650 0f7e 1B01     		lsls	r3, r3, #4
 2651 0f80 0B44     		add	r3, r3, r1
 2652 0f82 03F20F13 		addw	r3, r3, #271
 2653 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2654 0f88 032B     		cmp	r3, #3
 2655 0f8a 00F02B81 		beq	.L140
 531:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2656              		.loc 1 531 0
 2657 0f8e 07F5BE53 		add	r3, r7, #6080
 2658 0f92 03F10F03 		add	r3, r3, #15
 2659 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2660 0f98 3D49     		ldr	r1, .L292
 2661 0f9a 1346     		mov	r3, r2
 2662 0f9c DB00     		lsls	r3, r3, #3
 2663 0f9e 9B1A     		subs	r3, r3, r2
 2664 0fa0 1B01     		lsls	r3, r3, #4
 2665 0fa2 0B44     		add	r3, r3, r1
 2666 0fa4 BC33     		adds	r3, r3, #188
 2667 0fa6 1B68     		ldr	r3, [r3]
 2668 0fa8 1846     		mov	r0, r3
 2669 0faa FFF7FEFF 		bl	__aeabi_i2f
 2670 0fae 0346     		mov	r3, r0
 2671 0fb0 4FF08F41 		mov	r1, #1199570944
 2672 0fb4 1846     		mov	r0, r3
 2673 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2674 0fba 0346     		mov	r3, r0
 2675 0fbc 1A46     		mov	r2, r3
 2676 0fbe 07F13803 		add	r3, r7, #56
 2677 0fc2 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 74


 2678 0fc4 1A60     		str	r2, [r3]	@ float
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2679              		.loc 1 532 0
 2680 0fc6 0023     		movs	r3, #0
 2681 0fc8 07F5BE52 		add	r2, r7, #6080
 2682 0fcc 02F11702 		add	r2, r2, #23
 2683 0fd0 1370     		strb	r3, [r2]
 2684 0fd2 2EE0     		b	.L141
 2685              	.L142:
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2686              		.loc 1 533 0 discriminator 3
 2687 0fd4 07F5BE53 		add	r3, r7, #6080
 2688 0fd8 03F11503 		add	r3, r3, #21
 2689 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2690 0fde 3222     		movs	r2, #50
 2691 0fe0 02FB03F3 		mul	r3, r2, r3
 2692 0fe4 1A1D     		adds	r2, r3, #4
 2693 0fe6 07F5BE53 		add	r3, r7, #6080
 2694 0fea 03F11303 		add	r3, r3, #19
 2695 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2696 0ff0 1A44     		add	r2, r2, r3
 2697 0ff2 07F5BE53 		add	r3, r7, #6080
 2698 0ff6 03F11703 		add	r3, r3, #23
 2699 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2700 0ffc D31A     		subs	r3, r2, r3
 2701 0ffe 5A1E     		subs	r2, r3, #1
 2702 1000 07F5BE53 		add	r3, r7, #6080
 2703 1004 03F11703 		add	r3, r3, #23
 2704 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2705 100a 07F13803 		add	r3, r7, #56
 2706 100e 1C3B     		subs	r3, r3, #28
 2707 1010 0B44     		add	r3, r3, r1
 2708 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2709 1014 07F15803 		add	r3, r7, #88
 2710 1018 043B     		subs	r3, r3, #4
 2711 101a 9954     		strb	r1, [r3, r2]
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2712              		.loc 1 532 0 discriminator 3
 2713 101c 07F5BE53 		add	r3, r7, #6080
 2714 1020 03F11703 		add	r3, r3, #23
 2715 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2716 1026 0133     		adds	r3, r3, #1
 2717 1028 07F5BE52 		add	r2, r7, #6080
 2718 102c 02F11702 		add	r2, r2, #23
 2719 1030 1370     		strb	r3, [r2]
 2720              	.L141:
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2721              		.loc 1 532 0 is_stmt 0 discriminator 1
 2722 1032 07F5BE53 		add	r3, r7, #6080
 2723 1036 03F11703 		add	r3, r3, #23
 2724 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2725 103c 07F5BE53 		add	r3, r7, #6080
 2726 1040 03F11303 		add	r3, r3, #19
 2727 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2728 1046 9A42     		cmp	r2, r3
 2729 1048 C4D3     		bcc	.L142
 534:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 75


 535:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2730              		.loc 1 535 0 is_stmt 1
 2731 104a 07F5BE53 		add	r3, r7, #6080
 2732 104e 03F10F03 		add	r3, r3, #15
 2733 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2734 1054 0E49     		ldr	r1, .L292
 2735 1056 1346     		mov	r3, r2
 2736 1058 DB00     		lsls	r3, r3, #3
 2737 105a 9B1A     		subs	r3, r3, r2
 2738 105c 1B01     		lsls	r3, r3, #4
 2739 105e 0B44     		add	r3, r3, r1
 2740 1060 C033     		adds	r3, r3, #192
 2741 1062 1B68     		ldr	r3, [r3]
 2742 1064 1846     		mov	r0, r3
 2743 1066 FFF7FEFF 		bl	__aeabi_i2f
 2744 106a 0346     		mov	r3, r0
 2745 106c 4FF08F41 		mov	r1, #1199570944
 2746 1070 1846     		mov	r0, r3
 2747 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2748 1076 0346     		mov	r3, r0
 2749 1078 1A46     		mov	r2, r3
 2750 107a 07F13803 		add	r3, r7, #56
 2751 107e 1C3B     		subs	r3, r3, #28
 2752 1080 1A60     		str	r2, [r3]	@ float
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2753              		.loc 1 536 0
 2754 1082 0023     		movs	r3, #0
 2755 1084 07F5BE52 		add	r2, r7, #6080
 2756 1088 02F11702 		add	r2, r2, #23
 2757 108c 1370     		strb	r3, [r2]
 2758 108e 36E0     		b	.L143
 2759              	.L293:
 2760              		.align	2
 2761              	.L292:
 2762 1090 00000000 		.word	c_mem
 2763              	.L144:
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2764              		.loc 1 537 0 discriminator 3
 2765 1094 07F5BE53 		add	r3, r7, #6080
 2766 1098 03F11503 		add	r3, r3, #21
 2767 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2768 109e 3222     		movs	r2, #50
 2769 10a0 02FB03F3 		mul	r3, r2, r3
 2770 10a4 1A1D     		adds	r2, r3, #4
 2771 10a6 07F5BE53 		add	r3, r7, #6080
 2772 10aa 03F11303 		add	r3, r3, #19
 2773 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2774 10b0 1A44     		add	r2, r2, r3
 2775 10b2 07F5BE53 		add	r3, r7, #6080
 2776 10b6 03F11303 		add	r3, r3, #19
 2777 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2778 10bc 1A44     		add	r2, r2, r3
 2779 10be 07F5BE53 		add	r3, r7, #6080
 2780 10c2 03F11703 		add	r3, r3, #23
 2781 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2782 10c8 D31A     		subs	r3, r2, r3
 2783 10ca 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 76


 2784 10cc 07F5BE53 		add	r3, r7, #6080
 2785 10d0 03F11703 		add	r3, r3, #23
 2786 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2787 10d6 07F13803 		add	r3, r7, #56
 2788 10da 1C3B     		subs	r3, r3, #28
 2789 10dc 0B44     		add	r3, r3, r1
 2790 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2791 10e0 07F15803 		add	r3, r7, #88
 2792 10e4 043B     		subs	r3, r3, #4
 2793 10e6 9954     		strb	r1, [r3, r2]
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2794              		.loc 1 536 0 discriminator 3
 2795 10e8 07F5BE53 		add	r3, r7, #6080
 2796 10ec 03F11703 		add	r3, r3, #23
 2797 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2798 10f2 0133     		adds	r3, r3, #1
 2799 10f4 07F5BE52 		add	r2, r7, #6080
 2800 10f8 02F11702 		add	r2, r2, #23
 2801 10fc 1370     		strb	r3, [r2]
 2802              	.L143:
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2803              		.loc 1 536 0 is_stmt 0 discriminator 1
 2804 10fe 07F5BE53 		add	r3, r7, #6080
 2805 1102 03F11703 		add	r3, r3, #23
 2806 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2807 1108 07F5BE53 		add	r3, r7, #6080
 2808 110c 03F11303 		add	r3, r3, #19
 2809 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2810 1112 9A42     		cmp	r2, r3
 2811 1114 BED3     		bcc	.L144
 538:..\src/command_processing.c ****                             }
 539:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2812              		.loc 1 539 0 is_stmt 1
 2813 1116 07F5BE53 		add	r3, r7, #6080
 2814 111a 03F10F03 		add	r3, r3, #15
 2815 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2816 1120 C849     		ldr	r1, .L294
 2817 1122 1346     		mov	r3, r2
 2818 1124 DB00     		lsls	r3, r3, #3
 2819 1126 9B1A     		subs	r3, r3, r2
 2820 1128 1B01     		lsls	r3, r3, #4
 2821 112a 0B44     		add	r3, r3, r1
 2822 112c C433     		adds	r3, r3, #196
 2823 112e 1B68     		ldr	r3, [r3]
 2824 1130 1846     		mov	r0, r3
 2825 1132 FFF7FEFF 		bl	__aeabi_i2f
 2826 1136 0346     		mov	r3, r0
 2827 1138 4FF08F41 		mov	r1, #1199570944
 2828 113c 1846     		mov	r0, r3
 2829 113e FFF7FEFF 		bl	__aeabi_fdiv
 2830 1142 0346     		mov	r3, r0
 2831 1144 1A46     		mov	r2, r3
 2832 1146 07F13803 		add	r3, r7, #56
 2833 114a 1C3B     		subs	r3, r3, #28
 2834 114c 1A60     		str	r2, [r3]	@ float
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2835              		.loc 1 540 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 77


 2836 114e 0023     		movs	r3, #0
 2837 1150 07F5BE52 		add	r2, r7, #6080
 2838 1154 02F11702 		add	r2, r2, #23
 2839 1158 1370     		strb	r3, [r2]
 2840 115a 35E0     		b	.L145
 2841              	.L146:
 541:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2842              		.loc 1 541 0 discriminator 3
 2843 115c 07F5BE53 		add	r3, r7, #6080
 2844 1160 03F11503 		add	r3, r3, #21
 2845 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2846 1166 3222     		movs	r2, #50
 2847 1168 02FB03F3 		mul	r3, r2, r3
 2848 116c 1A1D     		adds	r2, r3, #4
 2849 116e 07F5BE53 		add	r3, r7, #6080
 2850 1172 03F11303 		add	r3, r3, #19
 2851 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2852 1178 5B00     		lsls	r3, r3, #1
 2853 117a 1A44     		add	r2, r2, r3
 2854 117c 07F5BE53 		add	r3, r7, #6080
 2855 1180 03F11303 		add	r3, r3, #19
 2856 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2857 1186 1A44     		add	r2, r2, r3
 2858 1188 07F5BE53 		add	r3, r7, #6080
 2859 118c 03F11703 		add	r3, r3, #23
 2860 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2861 1192 D31A     		subs	r3, r2, r3
 2862 1194 5A1E     		subs	r2, r3, #1
 2863 1196 07F5BE53 		add	r3, r7, #6080
 2864 119a 03F11703 		add	r3, r3, #23
 2865 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2866 11a0 07F13803 		add	r3, r7, #56
 2867 11a4 1C3B     		subs	r3, r3, #28
 2868 11a6 0B44     		add	r3, r3, r1
 2869 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2870 11aa 07F15803 		add	r3, r7, #88
 2871 11ae 043B     		subs	r3, r3, #4
 2872 11b0 9954     		strb	r1, [r3, r2]
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2873              		.loc 1 540 0 discriminator 3
 2874 11b2 07F5BE53 		add	r3, r7, #6080
 2875 11b6 03F11703 		add	r3, r3, #23
 2876 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2877 11bc 0133     		adds	r3, r3, #1
 2878 11be 07F5BE52 		add	r2, r7, #6080
 2879 11c2 02F11702 		add	r2, r2, #23
 2880 11c6 1370     		strb	r3, [r2]
 2881              	.L145:
 540:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2882              		.loc 1 540 0 is_stmt 0 discriminator 1
 2883 11c8 07F5BE53 		add	r3, r7, #6080
 2884 11cc 03F11703 		add	r3, r3, #23
 2885 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2886 11d2 07F5BE53 		add	r3, r7, #6080
 2887 11d6 03F11303 		add	r3, r3, #19
 2888 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2889 11dc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 78


 2890 11de BDD3     		bcc	.L146
 542:..\src/command_processing.c ****                             }
 543:..\src/command_processing.c ****                         }
 544:..\src/command_processing.c ****                         else {
 545:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 546:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 547:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 548:..\src/command_processing.c ****                             }
 549:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 550:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 551:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 552:..\src/command_processing.c ****                             }
 553:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 554:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 555:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 556:..\src/command_processing.c ****                             }
 557:..\src/command_processing.c ****                         }            
 558:..\src/command_processing.c ****                         break;  
 2891              		.loc 1 558 0 is_stmt 1
 2892 11e0 01F073B9 		b	.L114
 2893              	.L140:
 545:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2894              		.loc 1 545 0
 2895 11e4 07F5BE53 		add	r3, r7, #6080
 2896 11e8 03F10F03 		add	r3, r3, #15
 2897 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2898 11ee 9549     		ldr	r1, .L294
 2899 11f0 1346     		mov	r3, r2
 2900 11f2 DB00     		lsls	r3, r3, #3
 2901 11f4 9B1A     		subs	r3, r3, r2
 2902 11f6 1B01     		lsls	r3, r3, #4
 2903 11f8 0B44     		add	r3, r3, r1
 2904 11fa D433     		adds	r3, r3, #212
 2905 11fc 1B68     		ldr	r3, [r3]
 2906 11fe 1846     		mov	r0, r3
 2907 1200 FFF7FEFF 		bl	__aeabi_i2f
 2908 1204 0346     		mov	r3, r0
 2909 1206 4FF08F41 		mov	r1, #1199570944
 2910 120a 1846     		mov	r0, r3
 2911 120c FFF7FEFF 		bl	__aeabi_fdiv
 2912 1210 0346     		mov	r3, r0
 2913 1212 1A46     		mov	r2, r3
 2914 1214 07F13803 		add	r3, r7, #56
 2915 1218 1C3B     		subs	r3, r3, #28
 2916 121a 1A60     		str	r2, [r3]	@ float
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2917              		.loc 1 546 0
 2918 121c 0023     		movs	r3, #0
 2919 121e 07F5BE52 		add	r2, r7, #6080
 2920 1222 02F11702 		add	r2, r2, #23
 2921 1226 1370     		strb	r3, [r2]
 2922 1228 2EE0     		b	.L148
 2923              	.L149:
 547:..\src/command_processing.c ****                             }
 2924              		.loc 1 547 0 discriminator 3
 2925 122a 07F5BE53 		add	r3, r7, #6080
 2926 122e 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 79


 2927 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2928 1234 3222     		movs	r2, #50
 2929 1236 02FB03F3 		mul	r3, r2, r3
 2930 123a 1A1D     		adds	r2, r3, #4
 2931 123c 07F5BE53 		add	r3, r7, #6080
 2932 1240 03F11303 		add	r3, r3, #19
 2933 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2934 1246 1A44     		add	r2, r2, r3
 2935 1248 07F5BE53 		add	r3, r7, #6080
 2936 124c 03F11703 		add	r3, r3, #23
 2937 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2938 1252 D31A     		subs	r3, r2, r3
 2939 1254 5A1E     		subs	r2, r3, #1
 2940 1256 07F5BE53 		add	r3, r7, #6080
 2941 125a 03F11703 		add	r3, r3, #23
 2942 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2943 1260 07F13803 		add	r3, r7, #56
 2944 1264 1C3B     		subs	r3, r3, #28
 2945 1266 0B44     		add	r3, r3, r1
 2946 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2947 126a 07F15803 		add	r3, r7, #88
 2948 126e 043B     		subs	r3, r3, #4
 2949 1270 9954     		strb	r1, [r3, r2]
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2950              		.loc 1 546 0 discriminator 3
 2951 1272 07F5BE53 		add	r3, r7, #6080
 2952 1276 03F11703 		add	r3, r3, #23
 2953 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2954 127c 0133     		adds	r3, r3, #1
 2955 127e 07F5BE52 		add	r2, r7, #6080
 2956 1282 02F11702 		add	r2, r2, #23
 2957 1286 1370     		strb	r3, [r2]
 2958              	.L148:
 546:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2959              		.loc 1 546 0 is_stmt 0 discriminator 1
 2960 1288 07F5BE53 		add	r3, r7, #6080
 2961 128c 03F11703 		add	r3, r3, #23
 2962 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2963 1292 07F5BE53 		add	r3, r7, #6080
 2964 1296 03F11303 		add	r3, r3, #19
 2965 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2966 129c 9A42     		cmp	r2, r3
 2967 129e C4D3     		bcc	.L149
 549:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2968              		.loc 1 549 0 is_stmt 1
 2969 12a0 07F5BE53 		add	r3, r7, #6080
 2970 12a4 03F10F03 		add	r3, r3, #15
 2971 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2972 12aa 6649     		ldr	r1, .L294
 2973 12ac 1346     		mov	r3, r2
 2974 12ae DB00     		lsls	r3, r3, #3
 2975 12b0 9B1A     		subs	r3, r3, r2
 2976 12b2 1B01     		lsls	r3, r3, #4
 2977 12b4 0B44     		add	r3, r3, r1
 2978 12b6 D833     		adds	r3, r3, #216
 2979 12b8 1B68     		ldr	r3, [r3]
 2980 12ba 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 80


 2981 12bc FFF7FEFF 		bl	__aeabi_i2f
 2982 12c0 0346     		mov	r3, r0
 2983 12c2 4FF08F41 		mov	r1, #1199570944
 2984 12c6 1846     		mov	r0, r3
 2985 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2986 12cc 0346     		mov	r3, r0
 2987 12ce 1A46     		mov	r2, r3
 2988 12d0 07F13803 		add	r3, r7, #56
 2989 12d4 1C3B     		subs	r3, r3, #28
 2990 12d6 1A60     		str	r2, [r3]	@ float
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2991              		.loc 1 550 0
 2992 12d8 0023     		movs	r3, #0
 2993 12da 07F5BE52 		add	r2, r7, #6080
 2994 12de 02F11702 		add	r2, r2, #23
 2995 12e2 1370     		strb	r3, [r2]
 2996 12e4 34E0     		b	.L150
 2997              	.L151:
 551:..\src/command_processing.c ****                             }
 2998              		.loc 1 551 0 discriminator 3
 2999 12e6 07F5BE53 		add	r3, r7, #6080
 3000 12ea 03F11503 		add	r3, r3, #21
 3001 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3002 12f0 3222     		movs	r2, #50
 3003 12f2 02FB03F3 		mul	r3, r2, r3
 3004 12f6 1A1D     		adds	r2, r3, #4
 3005 12f8 07F5BE53 		add	r3, r7, #6080
 3006 12fc 03F11303 		add	r3, r3, #19
 3007 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3008 1302 1A44     		add	r2, r2, r3
 3009 1304 07F5BE53 		add	r3, r7, #6080
 3010 1308 03F11303 		add	r3, r3, #19
 3011 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3012 130e 1A44     		add	r2, r2, r3
 3013 1310 07F5BE53 		add	r3, r7, #6080
 3014 1314 03F11703 		add	r3, r3, #23
 3015 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3016 131a D31A     		subs	r3, r2, r3
 3017 131c 5A1E     		subs	r2, r3, #1
 3018 131e 07F5BE53 		add	r3, r7, #6080
 3019 1322 03F11703 		add	r3, r3, #23
 3020 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3021 1328 07F13803 		add	r3, r7, #56
 3022 132c 1C3B     		subs	r3, r3, #28
 3023 132e 0B44     		add	r3, r3, r1
 3024 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3025 1332 07F15803 		add	r3, r7, #88
 3026 1336 043B     		subs	r3, r3, #4
 3027 1338 9954     		strb	r1, [r3, r2]
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3028              		.loc 1 550 0 discriminator 3
 3029 133a 07F5BE53 		add	r3, r7, #6080
 3030 133e 03F11703 		add	r3, r3, #23
 3031 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3032 1344 0133     		adds	r3, r3, #1
 3033 1346 07F5BE52 		add	r2, r7, #6080
 3034 134a 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 81


 3035 134e 1370     		strb	r3, [r2]
 3036              	.L150:
 550:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3037              		.loc 1 550 0 is_stmt 0 discriminator 1
 3038 1350 07F5BE53 		add	r3, r7, #6080
 3039 1354 03F11703 		add	r3, r3, #23
 3040 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3041 135a 07F5BE53 		add	r3, r7, #6080
 3042 135e 03F11303 		add	r3, r3, #19
 3043 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3044 1364 9A42     		cmp	r2, r3
 3045 1366 BED3     		bcc	.L151
 553:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3046              		.loc 1 553 0 is_stmt 1
 3047 1368 07F5BE53 		add	r3, r7, #6080
 3048 136c 03F10F03 		add	r3, r3, #15
 3049 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3050 1372 3449     		ldr	r1, .L294
 3051 1374 1346     		mov	r3, r2
 3052 1376 DB00     		lsls	r3, r3, #3
 3053 1378 9B1A     		subs	r3, r3, r2
 3054 137a 1B01     		lsls	r3, r3, #4
 3055 137c 0B44     		add	r3, r3, r1
 3056 137e DC33     		adds	r3, r3, #220
 3057 1380 1B68     		ldr	r3, [r3]
 3058 1382 1846     		mov	r0, r3
 3059 1384 FFF7FEFF 		bl	__aeabi_i2f
 3060 1388 0346     		mov	r3, r0
 3061 138a 4FF08F41 		mov	r1, #1199570944
 3062 138e 1846     		mov	r0, r3
 3063 1390 FFF7FEFF 		bl	__aeabi_fdiv
 3064 1394 0346     		mov	r3, r0
 3065 1396 1A46     		mov	r2, r3
 3066 1398 07F13803 		add	r3, r7, #56
 3067 139c 1C3B     		subs	r3, r3, #28
 3068 139e 1A60     		str	r2, [r3]	@ float
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3069              		.loc 1 554 0
 3070 13a0 0023     		movs	r3, #0
 3071 13a2 07F5BE52 		add	r2, r7, #6080
 3072 13a6 02F11702 		add	r2, r2, #23
 3073 13aa 1370     		strb	r3, [r2]
 3074 13ac 35E0     		b	.L152
 3075              	.L153:
 555:..\src/command_processing.c ****                             }
 3076              		.loc 1 555 0 discriminator 3
 3077 13ae 07F5BE53 		add	r3, r7, #6080
 3078 13b2 03F11503 		add	r3, r3, #21
 3079 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3080 13b8 3222     		movs	r2, #50
 3081 13ba 02FB03F3 		mul	r3, r2, r3
 3082 13be 1A1D     		adds	r2, r3, #4
 3083 13c0 07F5BE53 		add	r3, r7, #6080
 3084 13c4 03F11303 		add	r3, r3, #19
 3085 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3086 13ca 5B00     		lsls	r3, r3, #1
 3087 13cc 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 82


 3088 13ce 07F5BE53 		add	r3, r7, #6080
 3089 13d2 03F11303 		add	r3, r3, #19
 3090 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3091 13d8 1A44     		add	r2, r2, r3
 3092 13da 07F5BE53 		add	r3, r7, #6080
 3093 13de 03F11703 		add	r3, r3, #23
 3094 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3095 13e4 D31A     		subs	r3, r2, r3
 3096 13e6 5A1E     		subs	r2, r3, #1
 3097 13e8 07F5BE53 		add	r3, r7, #6080
 3098 13ec 03F11703 		add	r3, r3, #23
 3099 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3100 13f2 07F13803 		add	r3, r7, #56
 3101 13f6 1C3B     		subs	r3, r3, #28
 3102 13f8 0B44     		add	r3, r3, r1
 3103 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3104 13fc 07F15803 		add	r3, r7, #88
 3105 1400 043B     		subs	r3, r3, #4
 3106 1402 9954     		strb	r1, [r3, r2]
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3107              		.loc 1 554 0 discriminator 3
 3108 1404 07F5BE53 		add	r3, r7, #6080
 3109 1408 03F11703 		add	r3, r3, #23
 3110 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3111 140e 0133     		adds	r3, r3, #1
 3112 1410 07F5BE52 		add	r2, r7, #6080
 3113 1414 02F11702 		add	r2, r2, #23
 3114 1418 1370     		strb	r3, [r2]
 3115              	.L152:
 554:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3116              		.loc 1 554 0 is_stmt 0 discriminator 1
 3117 141a 07F5BE53 		add	r3, r7, #6080
 3118 141e 03F11703 		add	r3, r3, #23
 3119 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3120 1424 07F5BE53 		add	r3, r7, #6080
 3121 1428 03F11303 		add	r3, r3, #19
 3122 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3123 142e 9A42     		cmp	r2, r3
 3124 1430 BDD3     		bcc	.L153
 3125              		.loc 1 558 0 is_stmt 1
 3126 1432 01F04AB8 		b	.L114
 3127              	.L119:
 559:..\src/command_processing.c **** 
 560:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 561:..\src/command_processing.c ****                         for (i=0; i<NUM_ITEMS[idx]; i++){
 3128              		.loc 1 561 0
 3129 1436 0023     		movs	r3, #0
 3130 1438 07F5BE52 		add	r2, r7, #6080
 3131 143c 02F11702 		add	r2, r2, #23
 3132 1440 1370     		strb	r3, [r2]
 3133 1442 9DE0     		b	.L154
 3134              	.L295:
 3135              		.align	2
 3136              	.L294:
 3137 1444 00000000 		.word	c_mem
 3138              	.L157:
 562:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 83


 3139              		.loc 1 562 0
 3140 1448 07F5BE53 		add	r3, r7, #6080
 3141 144c 03F10F03 		add	r3, r3, #15
 3142 1450 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3143 1452 C749     		ldr	r1, .L296
 3144 1454 1346     		mov	r3, r2
 3145 1456 DB00     		lsls	r3, r3, #3
 3146 1458 9B1A     		subs	r3, r3, r2
 3147 145a 1B01     		lsls	r3, r3, #4
 3148 145c 0B44     		add	r3, r3, r1
 3149 145e 03F58873 		add	r3, r3, #272
 3150 1462 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3151 1464 1846     		mov	r0, r3
 3152 1466 07F5BE53 		add	r3, r7, #6080
 3153 146a 03F11703 		add	r3, r3, #23
 3154 146e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3155 1470 C049     		ldr	r1, .L296+4
 3156 1472 0346     		mov	r3, r0
 3157 1474 5B00     		lsls	r3, r3, #1
 3158 1476 0344     		add	r3, r3, r0
 3159 1478 9B00     		lsls	r3, r3, #2
 3160 147a 1344     		add	r3, r3, r2
 3161 147c 6633     		adds	r3, r3, #102
 3162 147e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3163 1482 07F5BE53 		add	r3, r7, #6080
 3164 1486 03F10F03 		add	r3, r3, #15
 3165 148a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3166 148c B848     		ldr	r0, .L296
 3167 148e 1346     		mov	r3, r2
 3168 1490 DB00     		lsls	r3, r3, #3
 3169 1492 9B1A     		subs	r3, r3, r2
 3170 1494 1B01     		lsls	r3, r3, #4
 3171 1496 0344     		add	r3, r3, r0
 3172 1498 03F58873 		add	r3, r3, #272
 3173 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3174 149e 1C46     		mov	r4, r3
 3175 14a0 07F5BE53 		add	r3, r7, #6080
 3176 14a4 03F11703 		add	r3, r3, #23
 3177 14a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3178 14aa B248     		ldr	r0, .L296+4
 3179 14ac 2346     		mov	r3, r4
 3180 14ae 5B00     		lsls	r3, r3, #1
 3181 14b0 2344     		add	r3, r3, r4
 3182 14b2 1B01     		lsls	r3, r3, #4
 3183 14b4 0344     		add	r3, r3, r0
 3184 14b6 1344     		add	r3, r3, r2
 3185 14b8 03F29513 		addw	r3, r3, #405
 3186 14bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3187 14be 41FA03F3 		asr	r3, r1, r3
 3188 14c2 1AB2     		sxth	r2, r3
 3189 14c4 07F13803 		add	r3, r7, #56
 3190 14c8 1E3B     		subs	r3, r3, #30
 3191 14ca 1A80     		strh	r2, [r3]	@ movhi
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3192              		.loc 1 563 0
 3193 14cc 0023     		movs	r3, #0
 3194 14ce 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 84


 3195 14d2 02F11602 		add	r2, r2, #22
 3196 14d6 1370     		strb	r3, [r2]
 3197 14d8 3BE0     		b	.L155
 3198              	.L156:
 564:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 3199              		.loc 1 564 0 discriminator 3
 3200 14da 07F5BE53 		add	r3, r7, #6080
 3201 14de 03F11503 		add	r3, r3, #21
 3202 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3203 14e4 3222     		movs	r2, #50
 3204 14e6 02FB03F3 		mul	r3, r2, r3
 3205 14ea 1A1D     		adds	r2, r3, #4
 3206 14ec 07F5BE53 		add	r3, r7, #6080
 3207 14f0 03F11703 		add	r3, r3, #23
 3208 14f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3209 14f6 07F5BE51 		add	r1, r7, #6080
 3210 14fa 01F11301 		add	r1, r1, #19
 3211 14fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3212 1500 01FB03F3 		mul	r3, r1, r3
 3213 1504 1A44     		add	r2, r2, r3
 3214 1506 07F5BE53 		add	r3, r7, #6080
 3215 150a 03F11303 		add	r3, r3, #19
 3216 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3217 1510 1A44     		add	r2, r2, r3
 3218 1512 07F5BE53 		add	r3, r7, #6080
 3219 1516 03F11603 		add	r3, r3, #22
 3220 151a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3221 151c D31A     		subs	r3, r2, r3
 3222 151e 5A1E     		subs	r2, r3, #1
 3223 1520 07F5BE53 		add	r3, r7, #6080
 3224 1524 03F11603 		add	r3, r3, #22
 3225 1528 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3226 152a 07F13803 		add	r3, r7, #56
 3227 152e 1E3B     		subs	r3, r3, #30
 3228 1530 0B44     		add	r3, r3, r1
 3229 1532 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3230 1534 07F15803 		add	r3, r7, #88
 3231 1538 043B     		subs	r3, r3, #4
 3232 153a 9954     		strb	r1, [r3, r2]
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3233              		.loc 1 563 0 discriminator 3
 3234 153c 07F5BE53 		add	r3, r7, #6080
 3235 1540 03F11603 		add	r3, r3, #22
 3236 1544 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 1546 0133     		adds	r3, r3, #1
 3238 1548 07F5BE52 		add	r2, r7, #6080
 3239 154c 02F11602 		add	r2, r2, #22
 3240 1550 1370     		strb	r3, [r2]
 3241              	.L155:
 563:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 3242              		.loc 1 563 0 is_stmt 0 discriminator 1
 3243 1552 07F5BE53 		add	r3, r7, #6080
 3244 1556 03F11603 		add	r3, r3, #22
 3245 155a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3246 155c 07F5BE53 		add	r3, r7, #6080
 3247 1560 03F11303 		add	r3, r3, #19
 3248 1564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 85


 3249 1566 9A42     		cmp	r2, r3
 3250 1568 B7D3     		bcc	.L156
 561:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3251              		.loc 1 561 0 is_stmt 1 discriminator 2
 3252 156a 07F5BE53 		add	r3, r7, #6080
 3253 156e 03F11703 		add	r3, r3, #23
 3254 1572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3255 1574 0133     		adds	r3, r3, #1
 3256 1576 07F5BE52 		add	r2, r7, #6080
 3257 157a 02F11702 		add	r2, r2, #23
 3258 157e 1370     		strb	r3, [r2]
 3259              	.L154:
 561:..\src/command_processing.c ****                             aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >>
 3260              		.loc 1 561 0 is_stmt 0 discriminator 1
 3261 1580 07F5BE53 		add	r3, r7, #6080
 3262 1584 03F11503 		add	r3, r3, #21
 3263 1588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3264 158a 07F11803 		add	r3, r7, #24
 3265 158e 143B     		subs	r3, r3, #20
 3266 1590 1B68     		ldr	r3, [r3]
 3267 1592 1344     		add	r3, r3, r2
 3268 1594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3269 1596 07F5BE52 		add	r2, r7, #6080
 3270 159a 02F11702 		add	r2, r2, #23
 3271 159e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3272 15a0 9A42     		cmp	r2, r3
 3273 15a2 FFF451AF 		bcc	.L157
 565:..\src/command_processing.c ****                             }
 566:..\src/command_processing.c ****                         }
 567:..\src/command_processing.c ****                         break;
 3274              		.loc 1 567 0 is_stmt 1
 3275 15a6 00F090BF 		b	.L114
 3276              	.L120:
 568:..\src/command_processing.c ****                 
 569:..\src/command_processing.c ****                     case 11:        //Position limits
 570:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3277              		.loc 1 570 0
 3278 15aa 07F5BE53 		add	r3, r7, #6080
 3279 15ae 03F10F03 		add	r3, r3, #15
 3280 15b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3281 15b4 6F49     		ldr	r1, .L296+4
 3282 15b6 1346     		mov	r3, r2
 3283 15b8 DB00     		lsls	r3, r3, #3
 3284 15ba 9B1A     		subs	r3, r3, r2
 3285 15bc 1B01     		lsls	r3, r3, #4
 3286 15be 0B44     		add	r3, r3, r1
 3287 15c0 E433     		adds	r3, r3, #228
 3288 15c2 1968     		ldr	r1, [r3]
 3289 15c4 07F5BE53 		add	r3, r7, #6080
 3290 15c8 03F10F03 		add	r3, r3, #15
 3291 15cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3292 15ce 6848     		ldr	r0, .L296
 3293 15d0 1346     		mov	r3, r2
 3294 15d2 DB00     		lsls	r3, r3, #3
 3295 15d4 9B1A     		subs	r3, r3, r2
 3296 15d6 1B01     		lsls	r3, r3, #4
 3297 15d8 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 86


 3298 15da 03F58873 		add	r3, r3, #272
 3299 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3300 15e0 1846     		mov	r0, r3
 3301 15e2 644A     		ldr	r2, .L296+4
 3302 15e4 0346     		mov	r3, r0
 3303 15e6 5B00     		lsls	r3, r3, #1
 3304 15e8 0344     		add	r3, r3, r0
 3305 15ea 1B01     		lsls	r3, r3, #4
 3306 15ec 1344     		add	r3, r3, r2
 3307 15ee 03F29513 		addw	r3, r3, #405
 3308 15f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3309 15f4 41FA03F2 		asr	r2, r1, r3
 3310 15f8 07F11803 		add	r3, r7, #24
 3311 15fc 043B     		subs	r3, r3, #4
 3312 15fe 1A60     		str	r2, [r3]
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3313              		.loc 1 571 0
 3314 1600 0023     		movs	r3, #0
 3315 1602 07F5BE52 		add	r2, r7, #6080
 3316 1606 02F11602 		add	r2, r2, #22
 3317 160a 1370     		strb	r3, [r2]
 3318 160c 2EE0     		b	.L158
 3319              	.L159:
 572:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3320              		.loc 1 572 0 discriminator 3
 3321 160e 07F5BE53 		add	r3, r7, #6080
 3322 1612 03F11503 		add	r3, r3, #21
 3323 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3324 1618 3222     		movs	r2, #50
 3325 161a 02FB03F3 		mul	r3, r2, r3
 3326 161e 1A1D     		adds	r2, r3, #4
 3327 1620 07F5BE53 		add	r3, r7, #6080
 3328 1624 03F11303 		add	r3, r3, #19
 3329 1628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3330 162a 1A44     		add	r2, r2, r3
 3331 162c 07F5BE53 		add	r3, r7, #6080
 3332 1630 03F11603 		add	r3, r3, #22
 3333 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3334 1636 D31A     		subs	r3, r2, r3
 3335 1638 5A1E     		subs	r2, r3, #1
 3336 163a 07F5BE53 		add	r3, r7, #6080
 3337 163e 03F11603 		add	r3, r3, #22
 3338 1642 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3339 1644 07F11803 		add	r3, r7, #24
 3340 1648 043B     		subs	r3, r3, #4
 3341 164a 0B44     		add	r3, r3, r1
 3342 164c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3343 164e 07F15803 		add	r3, r7, #88
 3344 1652 043B     		subs	r3, r3, #4
 3345 1654 9954     		strb	r1, [r3, r2]
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3346              		.loc 1 571 0 discriminator 3
 3347 1656 07F5BE53 		add	r3, r7, #6080
 3348 165a 03F11603 		add	r3, r3, #22
 3349 165e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3350 1660 0133     		adds	r3, r3, #1
 3351 1662 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 87


 3352 1666 02F11602 		add	r2, r2, #22
 3353 166a 1370     		strb	r3, [r2]
 3354              	.L158:
 571:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3355              		.loc 1 571 0 is_stmt 0 discriminator 1
 3356 166c 07F5BE53 		add	r3, r7, #6080
 3357 1670 03F11603 		add	r3, r3, #22
 3358 1674 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3359 1676 07F5BE53 		add	r3, r7, #6080
 3360 167a 03F11303 		add	r3, r3, #19
 3361 167e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3362 1680 9A42     		cmp	r2, r3
 3363 1682 C4D3     		bcc	.L159
 573:..\src/command_processing.c ****                         }
 574:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3364              		.loc 1 574 0 is_stmt 1
 3365 1684 07F5BE53 		add	r3, r7, #6080
 3366 1688 03F10F03 		add	r3, r3, #15
 3367 168c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3368 168e 3949     		ldr	r1, .L296+4
 3369 1690 1346     		mov	r3, r2
 3370 1692 DB00     		lsls	r3, r3, #3
 3371 1694 9B1A     		subs	r3, r3, r2
 3372 1696 1B01     		lsls	r3, r3, #4
 3373 1698 0B44     		add	r3, r3, r1
 3374 169a E833     		adds	r3, r3, #232
 3375 169c 1968     		ldr	r1, [r3]
 3376 169e 07F5BE53 		add	r3, r7, #6080
 3377 16a2 03F10F03 		add	r3, r3, #15
 3378 16a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3379 16a8 3148     		ldr	r0, .L296
 3380 16aa 1346     		mov	r3, r2
 3381 16ac DB00     		lsls	r3, r3, #3
 3382 16ae 9B1A     		subs	r3, r3, r2
 3383 16b0 1B01     		lsls	r3, r3, #4
 3384 16b2 0344     		add	r3, r3, r0
 3385 16b4 03F58873 		add	r3, r3, #272
 3386 16b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3387 16ba 1846     		mov	r0, r3
 3388 16bc 2D4A     		ldr	r2, .L296+4
 3389 16be 0346     		mov	r3, r0
 3390 16c0 5B00     		lsls	r3, r3, #1
 3391 16c2 0344     		add	r3, r3, r0
 3392 16c4 1B01     		lsls	r3, r3, #4
 3393 16c6 1344     		add	r3, r3, r2
 3394 16c8 03F29513 		addw	r3, r3, #405
 3395 16cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3396 16ce 41FA03F2 		asr	r2, r1, r3
 3397 16d2 07F11803 		add	r3, r7, #24
 3398 16d6 043B     		subs	r3, r3, #4
 3399 16d8 1A60     		str	r2, [r3]
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3400              		.loc 1 575 0
 3401 16da 0023     		movs	r3, #0
 3402 16dc 07F5BE52 		add	r2, r7, #6080
 3403 16e0 02F11602 		add	r2, r2, #22
 3404 16e4 1370     		strb	r3, [r2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 88


 3405 16e6 34E0     		b	.L160
 3406              	.L161:
 576:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3407              		.loc 1 576 0 discriminator 3
 3408 16e8 07F5BE53 		add	r3, r7, #6080
 3409 16ec 03F11503 		add	r3, r3, #21
 3410 16f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3411 16f2 3222     		movs	r2, #50
 3412 16f4 02FB03F3 		mul	r3, r2, r3
 3413 16f8 1A1D     		adds	r2, r3, #4
 3414 16fa 07F5BE53 		add	r3, r7, #6080
 3415 16fe 03F11303 		add	r3, r3, #19
 3416 1702 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3417 1704 1A44     		add	r2, r2, r3
 3418 1706 07F5BE53 		add	r3, r7, #6080
 3419 170a 03F11303 		add	r3, r3, #19
 3420 170e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3421 1710 1A44     		add	r2, r2, r3
 3422 1712 07F5BE53 		add	r3, r7, #6080
 3423 1716 03F11603 		add	r3, r3, #22
 3424 171a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3425 171c D31A     		subs	r3, r2, r3
 3426 171e 5A1E     		subs	r2, r3, #1
 3427 1720 07F5BE53 		add	r3, r7, #6080
 3428 1724 03F11603 		add	r3, r3, #22
 3429 1728 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3430 172a 07F11803 		add	r3, r7, #24
 3431 172e 043B     		subs	r3, r3, #4
 3432 1730 0B44     		add	r3, r3, r1
 3433 1732 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3434 1734 07F15803 		add	r3, r7, #88
 3435 1738 043B     		subs	r3, r3, #4
 3436 173a 9954     		strb	r1, [r3, r2]
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3437              		.loc 1 575 0 discriminator 3
 3438 173c 07F5BE53 		add	r3, r7, #6080
 3439 1740 03F11603 		add	r3, r3, #22
 3440 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 1746 0133     		adds	r3, r3, #1
 3442 1748 07F5BE52 		add	r2, r7, #6080
 3443 174c 02F11602 		add	r2, r2, #22
 3444 1750 1370     		strb	r3, [r2]
 3445              	.L160:
 575:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3446              		.loc 1 575 0 is_stmt 0 discriminator 1
 3447 1752 07F5BE53 		add	r3, r7, #6080
 3448 1756 03F11603 		add	r3, r3, #22
 3449 175a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3450 175c 07F5BE53 		add	r3, r7, #6080
 3451 1760 03F11303 		add	r3, r3, #19
 3452 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3453 1766 9A42     		cmp	r2, r3
 3454 1768 BED3     		bcc	.L161
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;            
 3455              		.loc 1 578 0 is_stmt 1
 3456 176a 00F0AEBE 		b	.L114
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 89


 3457              	.L297:
 3458 176e 00BF     		.align	2
 3459              	.L296:
 3460 1770 00000000 		.word	g_mem
 3461 1774 00000000 		.word	c_mem
 3462              	.L121:
 579:..\src/command_processing.c **** 
 580:..\src/command_processing.c ****                     case 23:        //Rest Position
 581:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3463              		.loc 1 581 0
 3464 1778 CF4B     		ldr	r3, .L298
 3465 177a D3F8A012 		ldr	r1, [r3, #672]
 3466 177e 07F5BE53 		add	r3, r7, #6080
 3467 1782 03F10F03 		add	r3, r3, #15
 3468 1786 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3469 1788 CC48     		ldr	r0, .L298+4
 3470 178a 1346     		mov	r3, r2
 3471 178c DB00     		lsls	r3, r3, #3
 3472 178e 9B1A     		subs	r3, r3, r2
 3473 1790 1B01     		lsls	r3, r3, #4
 3474 1792 0344     		add	r3, r3, r0
 3475 1794 03F58873 		add	r3, r3, #272
 3476 1798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3477 179a 1846     		mov	r0, r3
 3478 179c C64A     		ldr	r2, .L298
 3479 179e 0346     		mov	r3, r0
 3480 17a0 5B00     		lsls	r3, r3, #1
 3481 17a2 0344     		add	r3, r3, r0
 3482 17a4 1B01     		lsls	r3, r3, #4
 3483 17a6 1344     		add	r3, r3, r2
 3484 17a8 03F29513 		addw	r3, r3, #405
 3485 17ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3486 17ae 41FA03F2 		asr	r2, r1, r3
 3487 17b2 07F11803 		add	r3, r7, #24
 3488 17b6 043B     		subs	r3, r3, #4
 3489 17b8 1A60     		str	r2, [r3]
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3490              		.loc 1 582 0
 3491 17ba 0023     		movs	r3, #0
 3492 17bc 07F5BE52 		add	r2, r7, #6080
 3493 17c0 02F11602 		add	r2, r2, #22
 3494 17c4 1370     		strb	r3, [r2]
 3495 17c6 2EE0     		b	.L162
 3496              	.L163:
 583:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3497              		.loc 1 583 0 discriminator 3
 3498 17c8 07F5BE53 		add	r3, r7, #6080
 3499 17cc 03F11503 		add	r3, r3, #21
 3500 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3501 17d2 3222     		movs	r2, #50
 3502 17d4 02FB03F3 		mul	r3, r2, r3
 3503 17d8 1A1D     		adds	r2, r3, #4
 3504 17da 07F5BE53 		add	r3, r7, #6080
 3505 17de 03F11303 		add	r3, r3, #19
 3506 17e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3507 17e4 1A44     		add	r2, r2, r3
 3508 17e6 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 90


 3509 17ea 03F11603 		add	r3, r3, #22
 3510 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3511 17f0 D31A     		subs	r3, r2, r3
 3512 17f2 5A1E     		subs	r2, r3, #1
 3513 17f4 07F5BE53 		add	r3, r7, #6080
 3514 17f8 03F11603 		add	r3, r3, #22
 3515 17fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3516 17fe 07F11803 		add	r3, r7, #24
 3517 1802 043B     		subs	r3, r3, #4
 3518 1804 0B44     		add	r3, r3, r1
 3519 1806 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3520 1808 07F15803 		add	r3, r7, #88
 3521 180c 043B     		subs	r3, r3, #4
 3522 180e 9954     		strb	r1, [r3, r2]
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3523              		.loc 1 582 0 discriminator 3
 3524 1810 07F5BE53 		add	r3, r7, #6080
 3525 1814 03F11603 		add	r3, r3, #22
 3526 1818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3527 181a 0133     		adds	r3, r3, #1
 3528 181c 07F5BE52 		add	r2, r7, #6080
 3529 1820 02F11602 		add	r2, r2, #22
 3530 1824 1370     		strb	r3, [r2]
 3531              	.L162:
 582:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3532              		.loc 1 582 0 is_stmt 0 discriminator 1
 3533 1826 07F5BE53 		add	r3, r7, #6080
 3534 182a 03F11603 		add	r3, r3, #22
 3535 182e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 1830 07F5BE53 		add	r3, r7, #6080
 3537 1834 03F11303 		add	r3, r3, #19
 3538 1838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3539 183a 9A42     		cmp	r2, r3
 3540 183c C4D3     		bcc	.L163
 584:..\src/command_processing.c ****                         }
 585:..\src/command_processing.c ****                         break; 
 3541              		.loc 1 585 0 is_stmt 1
 3542 183e 00F044BE 		b	.L114
 3543              	.L122:
 586:..\src/command_processing.c ****                         
 587:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 588:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3544              		.loc 1 588 0
 3545 1842 07F5BE53 		add	r3, r7, #6080
 3546 1846 03F10E03 		add	r3, r3, #14
 3547 184a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3548 184c 9A49     		ldr	r1, .L298
 3549 184e 1346     		mov	r3, r2
 3550 1850 DB00     		lsls	r3, r3, #3
 3551 1852 9B1A     		subs	r3, r3, r2
 3552 1854 1B01     		lsls	r3, r3, #4
 3553 1856 0B44     		add	r3, r3, r1
 3554 1858 03F20F13 		addw	r3, r3, #271
 3555 185c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3556 185e 032B     		cmp	r3, #3
 3557 1860 00F02E81 		beq	.L164
 589:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 91


 3558              		.loc 1 589 0
 3559 1864 07F5BE53 		add	r3, r7, #6080
 3560 1868 03F10E03 		add	r3, r3, #14
 3561 186c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3562 186e 9249     		ldr	r1, .L298
 3563 1870 1346     		mov	r3, r2
 3564 1872 DB00     		lsls	r3, r3, #3
 3565 1874 9B1A     		subs	r3, r3, r2
 3566 1876 1B01     		lsls	r3, r3, #4
 3567 1878 0B44     		add	r3, r3, r1
 3568 187a B033     		adds	r3, r3, #176
 3569 187c 1B68     		ldr	r3, [r3]
 3570 187e 1846     		mov	r0, r3
 3571 1880 FFF7FEFF 		bl	__aeabi_i2f
 3572 1884 0346     		mov	r3, r0
 3573 1886 4FF08F41 		mov	r1, #1199570944
 3574 188a 1846     		mov	r0, r3
 3575 188c FFF7FEFF 		bl	__aeabi_fdiv
 3576 1890 0346     		mov	r3, r0
 3577 1892 1A46     		mov	r2, r3
 3578 1894 07F13803 		add	r3, r7, #56
 3579 1898 1C3B     		subs	r3, r3, #28
 3580 189a 1A60     		str	r2, [r3]	@ float
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3581              		.loc 1 590 0
 3582 189c 0023     		movs	r3, #0
 3583 189e 07F5BE52 		add	r2, r7, #6080
 3584 18a2 02F11702 		add	r2, r2, #23
 3585 18a6 1370     		strb	r3, [r2]
 3586 18a8 2EE0     		b	.L165
 3587              	.L166:
 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3588              		.loc 1 591 0 discriminator 3
 3589 18aa 07F5BE53 		add	r3, r7, #6080
 3590 18ae 03F11503 		add	r3, r3, #21
 3591 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3592 18b4 3222     		movs	r2, #50
 3593 18b6 02FB03F3 		mul	r3, r2, r3
 3594 18ba 1A1D     		adds	r2, r3, #4
 3595 18bc 07F5BE53 		add	r3, r7, #6080
 3596 18c0 03F11303 		add	r3, r3, #19
 3597 18c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3598 18c6 1A44     		add	r2, r2, r3
 3599 18c8 07F5BE53 		add	r3, r7, #6080
 3600 18cc 03F11703 		add	r3, r3, #23
 3601 18d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3602 18d2 D31A     		subs	r3, r2, r3
 3603 18d4 5A1E     		subs	r2, r3, #1
 3604 18d6 07F5BE53 		add	r3, r7, #6080
 3605 18da 03F11703 		add	r3, r3, #23
 3606 18de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3607 18e0 07F13803 		add	r3, r7, #56
 3608 18e4 1C3B     		subs	r3, r3, #28
 3609 18e6 0B44     		add	r3, r3, r1
 3610 18e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3611 18ea 07F15803 		add	r3, r7, #88
 3612 18ee 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 92


 3613 18f0 9954     		strb	r1, [r3, r2]
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3614              		.loc 1 590 0 discriminator 3
 3615 18f2 07F5BE53 		add	r3, r7, #6080
 3616 18f6 03F11703 		add	r3, r3, #23
 3617 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3618 18fc 0133     		adds	r3, r3, #1
 3619 18fe 07F5BE52 		add	r2, r7, #6080
 3620 1902 02F11702 		add	r2, r2, #23
 3621 1906 1370     		strb	r3, [r2]
 3622              	.L165:
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3623              		.loc 1 590 0 is_stmt 0 discriminator 1
 3624 1908 07F5BE53 		add	r3, r7, #6080
 3625 190c 03F11703 		add	r3, r3, #23
 3626 1910 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3627 1912 07F5BE53 		add	r3, r7, #6080
 3628 1916 03F11303 		add	r3, r3, #19
 3629 191a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3630 191c 9A42     		cmp	r2, r3
 3631 191e C4D3     		bcc	.L166
 592:..\src/command_processing.c ****                             }
 593:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3632              		.loc 1 593 0 is_stmt 1
 3633 1920 07F5BE53 		add	r3, r7, #6080
 3634 1924 03F10E03 		add	r3, r3, #14
 3635 1928 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3636 192a 6349     		ldr	r1, .L298
 3637 192c 1346     		mov	r3, r2
 3638 192e DB00     		lsls	r3, r3, #3
 3639 1930 9B1A     		subs	r3, r3, r2
 3640 1932 1B01     		lsls	r3, r3, #4
 3641 1934 0B44     		add	r3, r3, r1
 3642 1936 B433     		adds	r3, r3, #180
 3643 1938 1B68     		ldr	r3, [r3]
 3644 193a 1846     		mov	r0, r3
 3645 193c FFF7FEFF 		bl	__aeabi_i2f
 3646 1940 0346     		mov	r3, r0
 3647 1942 4FF08F41 		mov	r1, #1199570944
 3648 1946 1846     		mov	r0, r3
 3649 1948 FFF7FEFF 		bl	__aeabi_fdiv
 3650 194c 0346     		mov	r3, r0
 3651 194e 1A46     		mov	r2, r3
 3652 1950 07F13803 		add	r3, r7, #56
 3653 1954 1C3B     		subs	r3, r3, #28
 3654 1956 1A60     		str	r2, [r3]	@ float
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3655              		.loc 1 594 0
 3656 1958 0023     		movs	r3, #0
 3657 195a 07F5BE52 		add	r2, r7, #6080
 3658 195e 02F11702 		add	r2, r2, #23
 3659 1962 1370     		strb	r3, [r2]
 3660 1964 34E0     		b	.L167
 3661              	.L168:
 595:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3662              		.loc 1 595 0 discriminator 3
 3663 1966 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 93


 3664 196a 03F11503 		add	r3, r3, #21
 3665 196e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3666 1970 3222     		movs	r2, #50
 3667 1972 02FB03F3 		mul	r3, r2, r3
 3668 1976 1A1D     		adds	r2, r3, #4
 3669 1978 07F5BE53 		add	r3, r7, #6080
 3670 197c 03F11303 		add	r3, r3, #19
 3671 1980 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3672 1982 1A44     		add	r2, r2, r3
 3673 1984 07F5BE53 		add	r3, r7, #6080
 3674 1988 03F11303 		add	r3, r3, #19
 3675 198c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3676 198e 1A44     		add	r2, r2, r3
 3677 1990 07F5BE53 		add	r3, r7, #6080
 3678 1994 03F11703 		add	r3, r3, #23
 3679 1998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3680 199a D31A     		subs	r3, r2, r3
 3681 199c 5A1E     		subs	r2, r3, #1
 3682 199e 07F5BE53 		add	r3, r7, #6080
 3683 19a2 03F11703 		add	r3, r3, #23
 3684 19a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3685 19a8 07F13803 		add	r3, r7, #56
 3686 19ac 1C3B     		subs	r3, r3, #28
 3687 19ae 0B44     		add	r3, r3, r1
 3688 19b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3689 19b2 07F15803 		add	r3, r7, #88
 3690 19b6 043B     		subs	r3, r3, #4
 3691 19b8 9954     		strb	r1, [r3, r2]
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3692              		.loc 1 594 0 discriminator 3
 3693 19ba 07F5BE53 		add	r3, r7, #6080
 3694 19be 03F11703 		add	r3, r3, #23
 3695 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3696 19c4 0133     		adds	r3, r3, #1
 3697 19c6 07F5BE52 		add	r2, r7, #6080
 3698 19ca 02F11702 		add	r2, r2, #23
 3699 19ce 1370     		strb	r3, [r2]
 3700              	.L167:
 594:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3701              		.loc 1 594 0 is_stmt 0 discriminator 1
 3702 19d0 07F5BE53 		add	r3, r7, #6080
 3703 19d4 03F11703 		add	r3, r3, #23
 3704 19d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3705 19da 07F5BE53 		add	r3, r7, #6080
 3706 19de 03F11303 		add	r3, r3, #19
 3707 19e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3708 19e4 9A42     		cmp	r2, r3
 3709 19e6 BED3     		bcc	.L168
 596:..\src/command_processing.c ****                             }
 597:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3710              		.loc 1 597 0 is_stmt 1
 3711 19e8 07F5BE53 		add	r3, r7, #6080
 3712 19ec 03F10E03 		add	r3, r3, #14
 3713 19f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3714 19f2 3149     		ldr	r1, .L298
 3715 19f4 1346     		mov	r3, r2
 3716 19f6 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 94


 3717 19f8 9B1A     		subs	r3, r3, r2
 3718 19fa 1B01     		lsls	r3, r3, #4
 3719 19fc 0B44     		add	r3, r3, r1
 3720 19fe B833     		adds	r3, r3, #184
 3721 1a00 1B68     		ldr	r3, [r3]
 3722 1a02 1846     		mov	r0, r3
 3723 1a04 FFF7FEFF 		bl	__aeabi_i2f
 3724 1a08 0346     		mov	r3, r0
 3725 1a0a 4FF08F41 		mov	r1, #1199570944
 3726 1a0e 1846     		mov	r0, r3
 3727 1a10 FFF7FEFF 		bl	__aeabi_fdiv
 3728 1a14 0346     		mov	r3, r0
 3729 1a16 1A46     		mov	r2, r3
 3730 1a18 07F13803 		add	r3, r7, #56
 3731 1a1c 1C3B     		subs	r3, r3, #28
 3732 1a1e 1A60     		str	r2, [r3]	@ float
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3733              		.loc 1 598 0
 3734 1a20 0023     		movs	r3, #0
 3735 1a22 07F5BE52 		add	r2, r7, #6080
 3736 1a26 02F11702 		add	r2, r2, #23
 3737 1a2a 1370     		strb	r3, [r2]
 3738 1a2c 35E0     		b	.L169
 3739              	.L170:
 599:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3740              		.loc 1 599 0 discriminator 3
 3741 1a2e 07F5BE53 		add	r3, r7, #6080
 3742 1a32 03F11503 		add	r3, r3, #21
 3743 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3744 1a38 3222     		movs	r2, #50
 3745 1a3a 02FB03F3 		mul	r3, r2, r3
 3746 1a3e 1A1D     		adds	r2, r3, #4
 3747 1a40 07F5BE53 		add	r3, r7, #6080
 3748 1a44 03F11303 		add	r3, r3, #19
 3749 1a48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3750 1a4a 5B00     		lsls	r3, r3, #1
 3751 1a4c 1A44     		add	r2, r2, r3
 3752 1a4e 07F5BE53 		add	r3, r7, #6080
 3753 1a52 03F11303 		add	r3, r3, #19
 3754 1a56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3755 1a58 1A44     		add	r2, r2, r3
 3756 1a5a 07F5BE53 		add	r3, r7, #6080
 3757 1a5e 03F11703 		add	r3, r3, #23
 3758 1a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3759 1a64 D31A     		subs	r3, r2, r3
 3760 1a66 5A1E     		subs	r2, r3, #1
 3761 1a68 07F5BE53 		add	r3, r7, #6080
 3762 1a6c 03F11703 		add	r3, r3, #23
 3763 1a70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3764 1a72 07F13803 		add	r3, r7, #56
 3765 1a76 1C3B     		subs	r3, r3, #28
 3766 1a78 0B44     		add	r3, r3, r1
 3767 1a7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3768 1a7c 07F15803 		add	r3, r7, #88
 3769 1a80 043B     		subs	r3, r3, #4
 3770 1a82 9954     		strb	r1, [r3, r2]
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 95


 3771              		.loc 1 598 0 discriminator 3
 3772 1a84 07F5BE53 		add	r3, r7, #6080
 3773 1a88 03F11703 		add	r3, r3, #23
 3774 1a8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3775 1a8e 0133     		adds	r3, r3, #1
 3776 1a90 07F5BE52 		add	r2, r7, #6080
 3777 1a94 02F11702 		add	r2, r2, #23
 3778 1a98 1370     		strb	r3, [r2]
 3779              	.L169:
 598:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3780              		.loc 1 598 0 is_stmt 0 discriminator 1
 3781 1a9a 07F5BE53 		add	r3, r7, #6080
 3782 1a9e 03F11703 		add	r3, r3, #23
 3783 1aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3784 1aa4 07F5BE53 		add	r3, r7, #6080
 3785 1aa8 03F11303 		add	r3, r3, #19
 3786 1aac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3787 1aae 9A42     		cmp	r2, r3
 3788 1ab0 BDD3     		bcc	.L170
 600:..\src/command_processing.c ****                             } 
 601:..\src/command_processing.c ****                         }
 602:..\src/command_processing.c ****                         else {
 603:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 606:..\src/command_processing.c ****                             }
 607:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 608:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 609:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 610:..\src/command_processing.c ****                             }
 611:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 614:..\src/command_processing.c ****                             }
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 3789              		.loc 1 616 0 is_stmt 1
 3790 1ab2 00F00ABD 		b	.L114
 3791              	.L299:
 3792 1ab6 00BF     		.align	2
 3793              	.L298:
 3794 1ab8 00000000 		.word	c_mem
 3795 1abc 00000000 		.word	g_mem
 3796              	.L164:
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3797              		.loc 1 603 0
 3798 1ac0 07F5BE53 		add	r3, r7, #6080
 3799 1ac4 03F10E03 		add	r3, r3, #14
 3800 1ac8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3801 1aca AB49     		ldr	r1, .L300
 3802 1acc 1346     		mov	r3, r2
 3803 1ace DB00     		lsls	r3, r3, #3
 3804 1ad0 9B1A     		subs	r3, r3, r2
 3805 1ad2 1B01     		lsls	r3, r3, #4
 3806 1ad4 0B44     		add	r3, r3, r1
 3807 1ad6 C833     		adds	r3, r3, #200
 3808 1ad8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 96


 3809 1ada 1846     		mov	r0, r3
 3810 1adc FFF7FEFF 		bl	__aeabi_i2f
 3811 1ae0 0346     		mov	r3, r0
 3812 1ae2 4FF08F41 		mov	r1, #1199570944
 3813 1ae6 1846     		mov	r0, r3
 3814 1ae8 FFF7FEFF 		bl	__aeabi_fdiv
 3815 1aec 0346     		mov	r3, r0
 3816 1aee 1A46     		mov	r2, r3
 3817 1af0 07F13803 		add	r3, r7, #56
 3818 1af4 1C3B     		subs	r3, r3, #28
 3819 1af6 1A60     		str	r2, [r3]	@ float
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3820              		.loc 1 604 0
 3821 1af8 0023     		movs	r3, #0
 3822 1afa 07F5BE52 		add	r2, r7, #6080
 3823 1afe 02F11702 		add	r2, r2, #23
 3824 1b02 1370     		strb	r3, [r2]
 3825 1b04 2EE0     		b	.L172
 3826              	.L173:
 605:..\src/command_processing.c ****                             }
 3827              		.loc 1 605 0 discriminator 3
 3828 1b06 07F5BE53 		add	r3, r7, #6080
 3829 1b0a 03F11503 		add	r3, r3, #21
 3830 1b0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3831 1b10 3222     		movs	r2, #50
 3832 1b12 02FB03F3 		mul	r3, r2, r3
 3833 1b16 1A1D     		adds	r2, r3, #4
 3834 1b18 07F5BE53 		add	r3, r7, #6080
 3835 1b1c 03F11303 		add	r3, r3, #19
 3836 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3837 1b22 1A44     		add	r2, r2, r3
 3838 1b24 07F5BE53 		add	r3, r7, #6080
 3839 1b28 03F11703 		add	r3, r3, #23
 3840 1b2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3841 1b2e D31A     		subs	r3, r2, r3
 3842 1b30 5A1E     		subs	r2, r3, #1
 3843 1b32 07F5BE53 		add	r3, r7, #6080
 3844 1b36 03F11703 		add	r3, r3, #23
 3845 1b3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3846 1b3c 07F13803 		add	r3, r7, #56
 3847 1b40 1C3B     		subs	r3, r3, #28
 3848 1b42 0B44     		add	r3, r3, r1
 3849 1b44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3850 1b46 07F15803 		add	r3, r7, #88
 3851 1b4a 043B     		subs	r3, r3, #4
 3852 1b4c 9954     		strb	r1, [r3, r2]
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3853              		.loc 1 604 0 discriminator 3
 3854 1b4e 07F5BE53 		add	r3, r7, #6080
 3855 1b52 03F11703 		add	r3, r3, #23
 3856 1b56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3857 1b58 0133     		adds	r3, r3, #1
 3858 1b5a 07F5BE52 		add	r2, r7, #6080
 3859 1b5e 02F11702 		add	r2, r2, #23
 3860 1b62 1370     		strb	r3, [r2]
 3861              	.L172:
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 97


 3862              		.loc 1 604 0 is_stmt 0 discriminator 1
 3863 1b64 07F5BE53 		add	r3, r7, #6080
 3864 1b68 03F11703 		add	r3, r3, #23
 3865 1b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3866 1b6e 07F5BE53 		add	r3, r7, #6080
 3867 1b72 03F11303 		add	r3, r3, #19
 3868 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3869 1b78 9A42     		cmp	r2, r3
 3870 1b7a C4D3     		bcc	.L173
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3871              		.loc 1 607 0 is_stmt 1
 3872 1b7c 07F5BE53 		add	r3, r7, #6080
 3873 1b80 03F10E03 		add	r3, r3, #14
 3874 1b84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3875 1b86 7C49     		ldr	r1, .L300
 3876 1b88 1346     		mov	r3, r2
 3877 1b8a DB00     		lsls	r3, r3, #3
 3878 1b8c 9B1A     		subs	r3, r3, r2
 3879 1b8e 1B01     		lsls	r3, r3, #4
 3880 1b90 0B44     		add	r3, r3, r1
 3881 1b92 CC33     		adds	r3, r3, #204
 3882 1b94 1B68     		ldr	r3, [r3]
 3883 1b96 1846     		mov	r0, r3
 3884 1b98 FFF7FEFF 		bl	__aeabi_i2f
 3885 1b9c 0346     		mov	r3, r0
 3886 1b9e 4FF08F41 		mov	r1, #1199570944
 3887 1ba2 1846     		mov	r0, r3
 3888 1ba4 FFF7FEFF 		bl	__aeabi_fdiv
 3889 1ba8 0346     		mov	r3, r0
 3890 1baa 1A46     		mov	r2, r3
 3891 1bac 07F13803 		add	r3, r7, #56
 3892 1bb0 1C3B     		subs	r3, r3, #28
 3893 1bb2 1A60     		str	r2, [r3]	@ float
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3894              		.loc 1 608 0
 3895 1bb4 0023     		movs	r3, #0
 3896 1bb6 07F5BE52 		add	r2, r7, #6080
 3897 1bba 02F11702 		add	r2, r2, #23
 3898 1bbe 1370     		strb	r3, [r2]
 3899 1bc0 34E0     		b	.L174
 3900              	.L175:
 609:..\src/command_processing.c ****                             }
 3901              		.loc 1 609 0 discriminator 3
 3902 1bc2 07F5BE53 		add	r3, r7, #6080
 3903 1bc6 03F11503 		add	r3, r3, #21
 3904 1bca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3905 1bcc 3222     		movs	r2, #50
 3906 1bce 02FB03F3 		mul	r3, r2, r3
 3907 1bd2 1A1D     		adds	r2, r3, #4
 3908 1bd4 07F5BE53 		add	r3, r7, #6080
 3909 1bd8 03F11303 		add	r3, r3, #19
 3910 1bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 1bde 1A44     		add	r2, r2, r3
 3912 1be0 07F5BE53 		add	r3, r7, #6080
 3913 1be4 03F11303 		add	r3, r3, #19
 3914 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3915 1bea 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 98


 3916 1bec 07F5BE53 		add	r3, r7, #6080
 3917 1bf0 03F11703 		add	r3, r3, #23
 3918 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3919 1bf6 D31A     		subs	r3, r2, r3
 3920 1bf8 5A1E     		subs	r2, r3, #1
 3921 1bfa 07F5BE53 		add	r3, r7, #6080
 3922 1bfe 03F11703 		add	r3, r3, #23
 3923 1c02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3924 1c04 07F13803 		add	r3, r7, #56
 3925 1c08 1C3B     		subs	r3, r3, #28
 3926 1c0a 0B44     		add	r3, r3, r1
 3927 1c0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3928 1c0e 07F15803 		add	r3, r7, #88
 3929 1c12 043B     		subs	r3, r3, #4
 3930 1c14 9954     		strb	r1, [r3, r2]
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3931              		.loc 1 608 0 discriminator 3
 3932 1c16 07F5BE53 		add	r3, r7, #6080
 3933 1c1a 03F11703 		add	r3, r3, #23
 3934 1c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3935 1c20 0133     		adds	r3, r3, #1
 3936 1c22 07F5BE52 		add	r2, r7, #6080
 3937 1c26 02F11702 		add	r2, r2, #23
 3938 1c2a 1370     		strb	r3, [r2]
 3939              	.L174:
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3940              		.loc 1 608 0 is_stmt 0 discriminator 1
 3941 1c2c 07F5BE53 		add	r3, r7, #6080
 3942 1c30 03F11703 		add	r3, r3, #23
 3943 1c34 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3944 1c36 07F5BE53 		add	r3, r7, #6080
 3945 1c3a 03F11303 		add	r3, r3, #19
 3946 1c3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3947 1c40 9A42     		cmp	r2, r3
 3948 1c42 BED3     		bcc	.L175
 611:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3949              		.loc 1 611 0 is_stmt 1
 3950 1c44 07F5BE53 		add	r3, r7, #6080
 3951 1c48 03F10E03 		add	r3, r3, #14
 3952 1c4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3953 1c4e 4A49     		ldr	r1, .L300
 3954 1c50 1346     		mov	r3, r2
 3955 1c52 DB00     		lsls	r3, r3, #3
 3956 1c54 9B1A     		subs	r3, r3, r2
 3957 1c56 1B01     		lsls	r3, r3, #4
 3958 1c58 0B44     		add	r3, r3, r1
 3959 1c5a D033     		adds	r3, r3, #208
 3960 1c5c 1B68     		ldr	r3, [r3]
 3961 1c5e 1846     		mov	r0, r3
 3962 1c60 FFF7FEFF 		bl	__aeabi_i2f
 3963 1c64 0346     		mov	r3, r0
 3964 1c66 4FF08F41 		mov	r1, #1199570944
 3965 1c6a 1846     		mov	r0, r3
 3966 1c6c FFF7FEFF 		bl	__aeabi_fdiv
 3967 1c70 0346     		mov	r3, r0
 3968 1c72 1A46     		mov	r2, r3
 3969 1c74 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 99


 3970 1c78 1C3B     		subs	r3, r3, #28
 3971 1c7a 1A60     		str	r2, [r3]	@ float
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3972              		.loc 1 612 0
 3973 1c7c 0023     		movs	r3, #0
 3974 1c7e 07F5BE52 		add	r2, r7, #6080
 3975 1c82 02F11702 		add	r2, r2, #23
 3976 1c86 1370     		strb	r3, [r2]
 3977 1c88 35E0     		b	.L176
 3978              	.L177:
 613:..\src/command_processing.c ****                             }
 3979              		.loc 1 613 0 discriminator 3
 3980 1c8a 07F5BE53 		add	r3, r7, #6080
 3981 1c8e 03F11503 		add	r3, r3, #21
 3982 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3983 1c94 3222     		movs	r2, #50
 3984 1c96 02FB03F3 		mul	r3, r2, r3
 3985 1c9a 1A1D     		adds	r2, r3, #4
 3986 1c9c 07F5BE53 		add	r3, r7, #6080
 3987 1ca0 03F11303 		add	r3, r3, #19
 3988 1ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3989 1ca6 5B00     		lsls	r3, r3, #1
 3990 1ca8 1A44     		add	r2, r2, r3
 3991 1caa 07F5BE53 		add	r3, r7, #6080
 3992 1cae 03F11303 		add	r3, r3, #19
 3993 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3994 1cb4 1A44     		add	r2, r2, r3
 3995 1cb6 07F5BE53 		add	r3, r7, #6080
 3996 1cba 03F11703 		add	r3, r3, #23
 3997 1cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3998 1cc0 D31A     		subs	r3, r2, r3
 3999 1cc2 5A1E     		subs	r2, r3, #1
 4000 1cc4 07F5BE53 		add	r3, r7, #6080
 4001 1cc8 03F11703 		add	r3, r3, #23
 4002 1ccc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4003 1cce 07F13803 		add	r3, r7, #56
 4004 1cd2 1C3B     		subs	r3, r3, #28
 4005 1cd4 0B44     		add	r3, r3, r1
 4006 1cd6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4007 1cd8 07F15803 		add	r3, r7, #88
 4008 1cdc 043B     		subs	r3, r3, #4
 4009 1cde 9954     		strb	r1, [r3, r2]
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4010              		.loc 1 612 0 discriminator 3
 4011 1ce0 07F5BE53 		add	r3, r7, #6080
 4012 1ce4 03F11703 		add	r3, r3, #23
 4013 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4014 1cea 0133     		adds	r3, r3, #1
 4015 1cec 07F5BE52 		add	r2, r7, #6080
 4016 1cf0 02F11702 		add	r2, r2, #23
 4017 1cf4 1370     		strb	r3, [r2]
 4018              	.L176:
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4019              		.loc 1 612 0 is_stmt 0 discriminator 1
 4020 1cf6 07F5BE53 		add	r3, r7, #6080
 4021 1cfa 03F11703 		add	r3, r3, #23
 4022 1cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 100


 4023 1d00 07F5BE53 		add	r3, r7, #6080
 4024 1d04 03F11303 		add	r3, r3, #19
 4025 1d08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4026 1d0a 9A42     		cmp	r2, r3
 4027 1d0c BDD3     		bcc	.L177
 4028              		.loc 1 616 0 is_stmt 1
 4029 1d0e DCE3     		b	.L114
 4030              	.L123:
 617:..\src/command_processing.c ****                         
 618:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 619:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 4031              		.loc 1 619 0
 4032 1d10 07F5BE53 		add	r3, r7, #6080
 4033 1d14 03F10E03 		add	r3, r3, #14
 4034 1d18 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4035 1d1a 1749     		ldr	r1, .L300
 4036 1d1c 1346     		mov	r3, r2
 4037 1d1e DB00     		lsls	r3, r3, #3
 4038 1d20 9B1A     		subs	r3, r3, r2
 4039 1d22 1B01     		lsls	r3, r3, #4
 4040 1d24 0B44     		add	r3, r3, r1
 4041 1d26 03F20F13 		addw	r3, r3, #271
 4042 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4043 1d2c 032B     		cmp	r3, #3
 4044 1d2e 00F02A81 		beq	.L178
 620:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 4045              		.loc 1 620 0
 4046 1d32 07F5BE53 		add	r3, r7, #6080
 4047 1d36 03F10E03 		add	r3, r3, #14
 4048 1d3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4049 1d3c 0E49     		ldr	r1, .L300
 4050 1d3e 1346     		mov	r3, r2
 4051 1d40 DB00     		lsls	r3, r3, #3
 4052 1d42 9B1A     		subs	r3, r3, r2
 4053 1d44 1B01     		lsls	r3, r3, #4
 4054 1d46 0B44     		add	r3, r3, r1
 4055 1d48 BC33     		adds	r3, r3, #188
 4056 1d4a 1B68     		ldr	r3, [r3]
 4057 1d4c 1846     		mov	r0, r3
 4058 1d4e FFF7FEFF 		bl	__aeabi_i2f
 4059 1d52 0346     		mov	r3, r0
 4060 1d54 4FF08F41 		mov	r1, #1199570944
 4061 1d58 1846     		mov	r0, r3
 4062 1d5a FFF7FEFF 		bl	__aeabi_fdiv
 4063 1d5e 0346     		mov	r3, r0
 4064 1d60 1A46     		mov	r2, r3
 4065 1d62 07F13803 		add	r3, r7, #56
 4066 1d66 1C3B     		subs	r3, r3, #28
 4067 1d68 1A60     		str	r2, [r3]	@ float
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4068              		.loc 1 621 0
 4069 1d6a 0023     		movs	r3, #0
 4070 1d6c 07F5BE52 		add	r2, r7, #6080
 4071 1d70 02F11702 		add	r2, r2, #23
 4072 1d74 1370     		strb	r3, [r2]
 4073 1d76 30E0     		b	.L179
 4074              	.L301:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 101


 4075              		.align	2
 4076              	.L300:
 4077 1d78 00000000 		.word	c_mem
 4078              	.L180:
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4079              		.loc 1 622 0 discriminator 3
 4080 1d7c 07F5BE53 		add	r3, r7, #6080
 4081 1d80 03F11503 		add	r3, r3, #21
 4082 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4083 1d86 3222     		movs	r2, #50
 4084 1d88 02FB03F3 		mul	r3, r2, r3
 4085 1d8c 1A1D     		adds	r2, r3, #4
 4086 1d8e 07F5BE53 		add	r3, r7, #6080
 4087 1d92 03F11303 		add	r3, r3, #19
 4088 1d96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4089 1d98 1A44     		add	r2, r2, r3
 4090 1d9a 07F5BE53 		add	r3, r7, #6080
 4091 1d9e 03F11703 		add	r3, r3, #23
 4092 1da2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4093 1da4 D31A     		subs	r3, r2, r3
 4094 1da6 5A1E     		subs	r2, r3, #1
 4095 1da8 07F5BE53 		add	r3, r7, #6080
 4096 1dac 03F11703 		add	r3, r3, #23
 4097 1db0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4098 1db2 07F13803 		add	r3, r7, #56
 4099 1db6 1C3B     		subs	r3, r3, #28
 4100 1db8 0B44     		add	r3, r3, r1
 4101 1dba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4102 1dbc 07F15803 		add	r3, r7, #88
 4103 1dc0 043B     		subs	r3, r3, #4
 4104 1dc2 9954     		strb	r1, [r3, r2]
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4105              		.loc 1 621 0 discriminator 3
 4106 1dc4 07F5BE53 		add	r3, r7, #6080
 4107 1dc8 03F11703 		add	r3, r3, #23
 4108 1dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4109 1dce 0133     		adds	r3, r3, #1
 4110 1dd0 07F5BE52 		add	r2, r7, #6080
 4111 1dd4 02F11702 		add	r2, r2, #23
 4112 1dd8 1370     		strb	r3, [r2]
 4113              	.L179:
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4114              		.loc 1 621 0 is_stmt 0 discriminator 1
 4115 1dda 07F5BE53 		add	r3, r7, #6080
 4116 1dde 03F11703 		add	r3, r3, #23
 4117 1de2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4118 1de4 07F5BE53 		add	r3, r7, #6080
 4119 1de8 03F11303 		add	r3, r3, #19
 4120 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4121 1dee 9A42     		cmp	r2, r3
 4122 1df0 C4D3     		bcc	.L180
 623:..\src/command_processing.c ****                             }
 624:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 4123              		.loc 1 624 0 is_stmt 1
 4124 1df2 07F5BE53 		add	r3, r7, #6080
 4125 1df6 03F10E03 		add	r3, r3, #14
 4126 1dfa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 102


 4127 1dfc A249     		ldr	r1, .L302
 4128 1dfe 1346     		mov	r3, r2
 4129 1e00 DB00     		lsls	r3, r3, #3
 4130 1e02 9B1A     		subs	r3, r3, r2
 4131 1e04 1B01     		lsls	r3, r3, #4
 4132 1e06 0B44     		add	r3, r3, r1
 4133 1e08 C033     		adds	r3, r3, #192
 4134 1e0a 1B68     		ldr	r3, [r3]
 4135 1e0c 1846     		mov	r0, r3
 4136 1e0e FFF7FEFF 		bl	__aeabi_i2f
 4137 1e12 0346     		mov	r3, r0
 4138 1e14 4FF08F41 		mov	r1, #1199570944
 4139 1e18 1846     		mov	r0, r3
 4140 1e1a FFF7FEFF 		bl	__aeabi_fdiv
 4141 1e1e 0346     		mov	r3, r0
 4142 1e20 1A46     		mov	r2, r3
 4143 1e22 07F13803 		add	r3, r7, #56
 4144 1e26 1C3B     		subs	r3, r3, #28
 4145 1e28 1A60     		str	r2, [r3]	@ float
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4146              		.loc 1 625 0
 4147 1e2a 0023     		movs	r3, #0
 4148 1e2c 07F5BE52 		add	r2, r7, #6080
 4149 1e30 02F11702 		add	r2, r2, #23
 4150 1e34 1370     		strb	r3, [r2]
 4151 1e36 34E0     		b	.L181
 4152              	.L182:
 626:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4153              		.loc 1 626 0 discriminator 3
 4154 1e38 07F5BE53 		add	r3, r7, #6080
 4155 1e3c 03F11503 		add	r3, r3, #21
 4156 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4157 1e42 3222     		movs	r2, #50
 4158 1e44 02FB03F3 		mul	r3, r2, r3
 4159 1e48 1A1D     		adds	r2, r3, #4
 4160 1e4a 07F5BE53 		add	r3, r7, #6080
 4161 1e4e 03F11303 		add	r3, r3, #19
 4162 1e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4163 1e54 1A44     		add	r2, r2, r3
 4164 1e56 07F5BE53 		add	r3, r7, #6080
 4165 1e5a 03F11303 		add	r3, r3, #19
 4166 1e5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4167 1e60 1A44     		add	r2, r2, r3
 4168 1e62 07F5BE53 		add	r3, r7, #6080
 4169 1e66 03F11703 		add	r3, r3, #23
 4170 1e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4171 1e6c D31A     		subs	r3, r2, r3
 4172 1e6e 5A1E     		subs	r2, r3, #1
 4173 1e70 07F5BE53 		add	r3, r7, #6080
 4174 1e74 03F11703 		add	r3, r3, #23
 4175 1e78 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4176 1e7a 07F13803 		add	r3, r7, #56
 4177 1e7e 1C3B     		subs	r3, r3, #28
 4178 1e80 0B44     		add	r3, r3, r1
 4179 1e82 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4180 1e84 07F15803 		add	r3, r7, #88
 4181 1e88 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 103


 4182 1e8a 9954     		strb	r1, [r3, r2]
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4183              		.loc 1 625 0 discriminator 3
 4184 1e8c 07F5BE53 		add	r3, r7, #6080
 4185 1e90 03F11703 		add	r3, r3, #23
 4186 1e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4187 1e96 0133     		adds	r3, r3, #1
 4188 1e98 07F5BE52 		add	r2, r7, #6080
 4189 1e9c 02F11702 		add	r2, r2, #23
 4190 1ea0 1370     		strb	r3, [r2]
 4191              	.L181:
 625:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4192              		.loc 1 625 0 is_stmt 0 discriminator 1
 4193 1ea2 07F5BE53 		add	r3, r7, #6080
 4194 1ea6 03F11703 		add	r3, r3, #23
 4195 1eaa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4196 1eac 07F5BE53 		add	r3, r7, #6080
 4197 1eb0 03F11303 		add	r3, r3, #19
 4198 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4199 1eb6 9A42     		cmp	r2, r3
 4200 1eb8 BED3     		bcc	.L182
 627:..\src/command_processing.c ****                             }
 628:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4201              		.loc 1 628 0 is_stmt 1
 4202 1eba 07F5BE53 		add	r3, r7, #6080
 4203 1ebe 03F10E03 		add	r3, r3, #14
 4204 1ec2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4205 1ec4 7049     		ldr	r1, .L302
 4206 1ec6 1346     		mov	r3, r2
 4207 1ec8 DB00     		lsls	r3, r3, #3
 4208 1eca 9B1A     		subs	r3, r3, r2
 4209 1ecc 1B01     		lsls	r3, r3, #4
 4210 1ece 0B44     		add	r3, r3, r1
 4211 1ed0 C433     		adds	r3, r3, #196
 4212 1ed2 1B68     		ldr	r3, [r3]
 4213 1ed4 1846     		mov	r0, r3
 4214 1ed6 FFF7FEFF 		bl	__aeabi_i2f
 4215 1eda 0346     		mov	r3, r0
 4216 1edc 4FF08F41 		mov	r1, #1199570944
 4217 1ee0 1846     		mov	r0, r3
 4218 1ee2 FFF7FEFF 		bl	__aeabi_fdiv
 4219 1ee6 0346     		mov	r3, r0
 4220 1ee8 1A46     		mov	r2, r3
 4221 1eea 07F13803 		add	r3, r7, #56
 4222 1eee 1C3B     		subs	r3, r3, #28
 4223 1ef0 1A60     		str	r2, [r3]	@ float
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4224              		.loc 1 629 0
 4225 1ef2 0023     		movs	r3, #0
 4226 1ef4 07F5BE52 		add	r2, r7, #6080
 4227 1ef8 02F11702 		add	r2, r2, #23
 4228 1efc 1370     		strb	r3, [r2]
 4229 1efe 35E0     		b	.L183
 4230              	.L184:
 630:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4231              		.loc 1 630 0 discriminator 3
 4232 1f00 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 104


 4233 1f04 03F11503 		add	r3, r3, #21
 4234 1f08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4235 1f0a 3222     		movs	r2, #50
 4236 1f0c 02FB03F3 		mul	r3, r2, r3
 4237 1f10 1A1D     		adds	r2, r3, #4
 4238 1f12 07F5BE53 		add	r3, r7, #6080
 4239 1f16 03F11303 		add	r3, r3, #19
 4240 1f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4241 1f1c 5B00     		lsls	r3, r3, #1
 4242 1f1e 1A44     		add	r2, r2, r3
 4243 1f20 07F5BE53 		add	r3, r7, #6080
 4244 1f24 03F11303 		add	r3, r3, #19
 4245 1f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4246 1f2a 1A44     		add	r2, r2, r3
 4247 1f2c 07F5BE53 		add	r3, r7, #6080
 4248 1f30 03F11703 		add	r3, r3, #23
 4249 1f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4250 1f36 D31A     		subs	r3, r2, r3
 4251 1f38 5A1E     		subs	r2, r3, #1
 4252 1f3a 07F5BE53 		add	r3, r7, #6080
 4253 1f3e 03F11703 		add	r3, r3, #23
 4254 1f42 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4255 1f44 07F13803 		add	r3, r7, #56
 4256 1f48 1C3B     		subs	r3, r3, #28
 4257 1f4a 0B44     		add	r3, r3, r1
 4258 1f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4259 1f4e 07F15803 		add	r3, r7, #88
 4260 1f52 043B     		subs	r3, r3, #4
 4261 1f54 9954     		strb	r1, [r3, r2]
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4262              		.loc 1 629 0 discriminator 3
 4263 1f56 07F5BE53 		add	r3, r7, #6080
 4264 1f5a 03F11703 		add	r3, r3, #23
 4265 1f5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4266 1f60 0133     		adds	r3, r3, #1
 4267 1f62 07F5BE52 		add	r2, r7, #6080
 4268 1f66 02F11702 		add	r2, r2, #23
 4269 1f6a 1370     		strb	r3, [r2]
 4270              	.L183:
 629:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4271              		.loc 1 629 0 is_stmt 0 discriminator 1
 4272 1f6c 07F5BE53 		add	r3, r7, #6080
 4273 1f70 03F11703 		add	r3, r3, #23
 4274 1f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4275 1f76 07F5BE53 		add	r3, r7, #6080
 4276 1f7a 03F11303 		add	r3, r3, #19
 4277 1f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4278 1f80 9A42     		cmp	r2, r3
 4279 1f82 BDD3     		bcc	.L184
 631:..\src/command_processing.c ****                             }
 632:..\src/command_processing.c ****                         }
 633:..\src/command_processing.c ****                         else {
 634:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 635:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 636:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 637:..\src/command_processing.c ****                             }
 638:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 105


 639:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 640:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 641:..\src/command_processing.c ****                             }
 642:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 643:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 644:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 645:..\src/command_processing.c ****                             }
 646:..\src/command_processing.c ****                         }            
 647:..\src/command_processing.c ****                         break;  
 4280              		.loc 1 647 0 is_stmt 1
 4281 1f84 A1E2     		b	.L114
 4282              	.L178:
 634:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4283              		.loc 1 634 0
 4284 1f86 07F5BE53 		add	r3, r7, #6080
 4285 1f8a 03F10E03 		add	r3, r3, #14
 4286 1f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4287 1f90 3D49     		ldr	r1, .L302
 4288 1f92 1346     		mov	r3, r2
 4289 1f94 DB00     		lsls	r3, r3, #3
 4290 1f96 9B1A     		subs	r3, r3, r2
 4291 1f98 1B01     		lsls	r3, r3, #4
 4292 1f9a 0B44     		add	r3, r3, r1
 4293 1f9c D433     		adds	r3, r3, #212
 4294 1f9e 1B68     		ldr	r3, [r3]
 4295 1fa0 1846     		mov	r0, r3
 4296 1fa2 FFF7FEFF 		bl	__aeabi_i2f
 4297 1fa6 0346     		mov	r3, r0
 4298 1fa8 4FF08F41 		mov	r1, #1199570944
 4299 1fac 1846     		mov	r0, r3
 4300 1fae FFF7FEFF 		bl	__aeabi_fdiv
 4301 1fb2 0346     		mov	r3, r0
 4302 1fb4 1A46     		mov	r2, r3
 4303 1fb6 07F13803 		add	r3, r7, #56
 4304 1fba 1C3B     		subs	r3, r3, #28
 4305 1fbc 1A60     		str	r2, [r3]	@ float
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4306              		.loc 1 635 0
 4307 1fbe 0023     		movs	r3, #0
 4308 1fc0 07F5BE52 		add	r2, r7, #6080
 4309 1fc4 02F11702 		add	r2, r2, #23
 4310 1fc8 1370     		strb	r3, [r2]
 4311 1fca 2EE0     		b	.L186
 4312              	.L187:
 636:..\src/command_processing.c ****                             }
 4313              		.loc 1 636 0 discriminator 3
 4314 1fcc 07F5BE53 		add	r3, r7, #6080
 4315 1fd0 03F11503 		add	r3, r3, #21
 4316 1fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4317 1fd6 3222     		movs	r2, #50
 4318 1fd8 02FB03F3 		mul	r3, r2, r3
 4319 1fdc 1A1D     		adds	r2, r3, #4
 4320 1fde 07F5BE53 		add	r3, r7, #6080
 4321 1fe2 03F11303 		add	r3, r3, #19
 4322 1fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4323 1fe8 1A44     		add	r2, r2, r3
 4324 1fea 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 106


 4325 1fee 03F11703 		add	r3, r3, #23
 4326 1ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4327 1ff4 D31A     		subs	r3, r2, r3
 4328 1ff6 5A1E     		subs	r2, r3, #1
 4329 1ff8 07F5BE53 		add	r3, r7, #6080
 4330 1ffc 03F11703 		add	r3, r3, #23
 4331 2000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4332 2002 07F13803 		add	r3, r7, #56
 4333 2006 1C3B     		subs	r3, r3, #28
 4334 2008 0B44     		add	r3, r3, r1
 4335 200a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4336 200c 07F15803 		add	r3, r7, #88
 4337 2010 043B     		subs	r3, r3, #4
 4338 2012 9954     		strb	r1, [r3, r2]
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4339              		.loc 1 635 0 discriminator 3
 4340 2014 07F5BE53 		add	r3, r7, #6080
 4341 2018 03F11703 		add	r3, r3, #23
 4342 201c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4343 201e 0133     		adds	r3, r3, #1
 4344 2020 07F5BE52 		add	r2, r7, #6080
 4345 2024 02F11702 		add	r2, r2, #23
 4346 2028 1370     		strb	r3, [r2]
 4347              	.L186:
 635:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4348              		.loc 1 635 0 is_stmt 0 discriminator 1
 4349 202a 07F5BE53 		add	r3, r7, #6080
 4350 202e 03F11703 		add	r3, r3, #23
 4351 2032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4352 2034 07F5BE53 		add	r3, r7, #6080
 4353 2038 03F11303 		add	r3, r3, #19
 4354 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4355 203e 9A42     		cmp	r2, r3
 4356 2040 C4D3     		bcc	.L187
 638:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4357              		.loc 1 638 0 is_stmt 1
 4358 2042 07F5BE53 		add	r3, r7, #6080
 4359 2046 03F10E03 		add	r3, r3, #14
 4360 204a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4361 204c 0E49     		ldr	r1, .L302
 4362 204e 1346     		mov	r3, r2
 4363 2050 DB00     		lsls	r3, r3, #3
 4364 2052 9B1A     		subs	r3, r3, r2
 4365 2054 1B01     		lsls	r3, r3, #4
 4366 2056 0B44     		add	r3, r3, r1
 4367 2058 D833     		adds	r3, r3, #216
 4368 205a 1B68     		ldr	r3, [r3]
 4369 205c 1846     		mov	r0, r3
 4370 205e FFF7FEFF 		bl	__aeabi_i2f
 4371 2062 0346     		mov	r3, r0
 4372 2064 4FF08F41 		mov	r1, #1199570944
 4373 2068 1846     		mov	r0, r3
 4374 206a FFF7FEFF 		bl	__aeabi_fdiv
 4375 206e 0346     		mov	r3, r0
 4376 2070 1A46     		mov	r2, r3
 4377 2072 07F13803 		add	r3, r7, #56
 4378 2076 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 107


 4379 2078 1A60     		str	r2, [r3]	@ float
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4380              		.loc 1 639 0
 4381 207a 0023     		movs	r3, #0
 4382 207c 07F5BE52 		add	r2, r7, #6080
 4383 2080 02F11702 		add	r2, r2, #23
 4384 2084 1370     		strb	r3, [r2]
 4385 2086 36E0     		b	.L188
 4386              	.L303:
 4387              		.align	2
 4388              	.L302:
 4389 2088 00000000 		.word	c_mem
 4390              	.L189:
 640:..\src/command_processing.c ****                             }
 4391              		.loc 1 640 0 discriminator 3
 4392 208c 07F5BE53 		add	r3, r7, #6080
 4393 2090 03F11503 		add	r3, r3, #21
 4394 2094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4395 2096 3222     		movs	r2, #50
 4396 2098 02FB03F3 		mul	r3, r2, r3
 4397 209c 1A1D     		adds	r2, r3, #4
 4398 209e 07F5BE53 		add	r3, r7, #6080
 4399 20a2 03F11303 		add	r3, r3, #19
 4400 20a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4401 20a8 1A44     		add	r2, r2, r3
 4402 20aa 07F5BE53 		add	r3, r7, #6080
 4403 20ae 03F11303 		add	r3, r3, #19
 4404 20b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4405 20b4 1A44     		add	r2, r2, r3
 4406 20b6 07F5BE53 		add	r3, r7, #6080
 4407 20ba 03F11703 		add	r3, r3, #23
 4408 20be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4409 20c0 D31A     		subs	r3, r2, r3
 4410 20c2 5A1E     		subs	r2, r3, #1
 4411 20c4 07F5BE53 		add	r3, r7, #6080
 4412 20c8 03F11703 		add	r3, r3, #23
 4413 20cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4414 20ce 07F13803 		add	r3, r7, #56
 4415 20d2 1C3B     		subs	r3, r3, #28
 4416 20d4 0B44     		add	r3, r3, r1
 4417 20d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4418 20d8 07F15803 		add	r3, r7, #88
 4419 20dc 043B     		subs	r3, r3, #4
 4420 20de 9954     		strb	r1, [r3, r2]
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4421              		.loc 1 639 0 discriminator 3
 4422 20e0 07F5BE53 		add	r3, r7, #6080
 4423 20e4 03F11703 		add	r3, r3, #23
 4424 20e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4425 20ea 0133     		adds	r3, r3, #1
 4426 20ec 07F5BE52 		add	r2, r7, #6080
 4427 20f0 02F11702 		add	r2, r2, #23
 4428 20f4 1370     		strb	r3, [r2]
 4429              	.L188:
 639:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4430              		.loc 1 639 0 is_stmt 0 discriminator 1
 4431 20f6 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 108


 4432 20fa 03F11703 		add	r3, r3, #23
 4433 20fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4434 2100 07F5BE53 		add	r3, r7, #6080
 4435 2104 03F11303 		add	r3, r3, #19
 4436 2108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4437 210a 9A42     		cmp	r2, r3
 4438 210c BED3     		bcc	.L189
 642:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4439              		.loc 1 642 0 is_stmt 1
 4440 210e 07F5BE53 		add	r3, r7, #6080
 4441 2112 03F10E03 		add	r3, r3, #14
 4442 2116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4443 2118 C849     		ldr	r1, .L304
 4444 211a 1346     		mov	r3, r2
 4445 211c DB00     		lsls	r3, r3, #3
 4446 211e 9B1A     		subs	r3, r3, r2
 4447 2120 1B01     		lsls	r3, r3, #4
 4448 2122 0B44     		add	r3, r3, r1
 4449 2124 DC33     		adds	r3, r3, #220
 4450 2126 1B68     		ldr	r3, [r3]
 4451 2128 1846     		mov	r0, r3
 4452 212a FFF7FEFF 		bl	__aeabi_i2f
 4453 212e 0346     		mov	r3, r0
 4454 2130 4FF08F41 		mov	r1, #1199570944
 4455 2134 1846     		mov	r0, r3
 4456 2136 FFF7FEFF 		bl	__aeabi_fdiv
 4457 213a 0346     		mov	r3, r0
 4458 213c 1A46     		mov	r2, r3
 4459 213e 07F13803 		add	r3, r7, #56
 4460 2142 1C3B     		subs	r3, r3, #28
 4461 2144 1A60     		str	r2, [r3]	@ float
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4462              		.loc 1 643 0
 4463 2146 0023     		movs	r3, #0
 4464 2148 07F5BE52 		add	r2, r7, #6080
 4465 214c 02F11702 		add	r2, r2, #23
 4466 2150 1370     		strb	r3, [r2]
 4467 2152 35E0     		b	.L190
 4468              	.L191:
 644:..\src/command_processing.c ****                             }
 4469              		.loc 1 644 0 discriminator 3
 4470 2154 07F5BE53 		add	r3, r7, #6080
 4471 2158 03F11503 		add	r3, r3, #21
 4472 215c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4473 215e 3222     		movs	r2, #50
 4474 2160 02FB03F3 		mul	r3, r2, r3
 4475 2164 1A1D     		adds	r2, r3, #4
 4476 2166 07F5BE53 		add	r3, r7, #6080
 4477 216a 03F11303 		add	r3, r3, #19
 4478 216e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 2170 5B00     		lsls	r3, r3, #1
 4480 2172 1A44     		add	r2, r2, r3
 4481 2174 07F5BE53 		add	r3, r7, #6080
 4482 2178 03F11303 		add	r3, r3, #19
 4483 217c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4484 217e 1A44     		add	r2, r2, r3
 4485 2180 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 109


 4486 2184 03F11703 		add	r3, r3, #23
 4487 2188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4488 218a D31A     		subs	r3, r2, r3
 4489 218c 5A1E     		subs	r2, r3, #1
 4490 218e 07F5BE53 		add	r3, r7, #6080
 4491 2192 03F11703 		add	r3, r3, #23
 4492 2196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4493 2198 07F13803 		add	r3, r7, #56
 4494 219c 1C3B     		subs	r3, r3, #28
 4495 219e 0B44     		add	r3, r3, r1
 4496 21a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4497 21a2 07F15803 		add	r3, r7, #88
 4498 21a6 043B     		subs	r3, r3, #4
 4499 21a8 9954     		strb	r1, [r3, r2]
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4500              		.loc 1 643 0 discriminator 3
 4501 21aa 07F5BE53 		add	r3, r7, #6080
 4502 21ae 03F11703 		add	r3, r3, #23
 4503 21b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504 21b4 0133     		adds	r3, r3, #1
 4505 21b6 07F5BE52 		add	r2, r7, #6080
 4506 21ba 02F11702 		add	r2, r2, #23
 4507 21be 1370     		strb	r3, [r2]
 4508              	.L190:
 643:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4509              		.loc 1 643 0 is_stmt 0 discriminator 1
 4510 21c0 07F5BE53 		add	r3, r7, #6080
 4511 21c4 03F11703 		add	r3, r3, #23
 4512 21c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4513 21ca 07F5BE53 		add	r3, r7, #6080
 4514 21ce 03F11303 		add	r3, r3, #19
 4515 21d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4516 21d4 9A42     		cmp	r2, r3
 4517 21d6 BDD3     		bcc	.L191
 4518              		.loc 1 647 0 is_stmt 1
 4519 21d8 77E1     		b	.L114
 4520              	.L124:
 648:..\src/command_processing.c **** 
 649:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 650:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4521              		.loc 1 650 0
 4522 21da 07F5BE53 		add	r3, r7, #6080
 4523 21de 03F10E03 		add	r3, r3, #14
 4524 21e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4525 21e4 9649     		ldr	r1, .L304+4
 4526 21e6 1346     		mov	r3, r2
 4527 21e8 DB00     		lsls	r3, r3, #3
 4528 21ea 9B1A     		subs	r3, r3, r2
 4529 21ec 1B01     		lsls	r3, r3, #4
 4530 21ee 0B44     		add	r3, r3, r1
 4531 21f0 03F58873 		add	r3, r3, #272
 4532 21f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4533 21f6 1846     		mov	r0, r3
 4534 21f8 07F5BE53 		add	r3, r7, #6080
 4535 21fc 03F11703 		add	r3, r3, #23
 4536 2200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4537 2202 8E49     		ldr	r1, .L304
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 110


 4538 2204 0346     		mov	r3, r0
 4539 2206 5B00     		lsls	r3, r3, #1
 4540 2208 0344     		add	r3, r3, r0
 4541 220a 9B00     		lsls	r3, r3, #2
 4542 220c 1344     		add	r3, r3, r2
 4543 220e 6633     		adds	r3, r3, #102
 4544 2210 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4545 2214 07F5BE53 		add	r3, r7, #6080
 4546 2218 03F10E03 		add	r3, r3, #14
 4547 221c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4548 221e 8848     		ldr	r0, .L304+4
 4549 2220 1346     		mov	r3, r2
 4550 2222 DB00     		lsls	r3, r3, #3
 4551 2224 9B1A     		subs	r3, r3, r2
 4552 2226 1B01     		lsls	r3, r3, #4
 4553 2228 0344     		add	r3, r3, r0
 4554 222a 03F58873 		add	r3, r3, #272
 4555 222e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4556 2230 1C46     		mov	r4, r3
 4557 2232 07F5BE53 		add	r3, r7, #6080
 4558 2236 03F11703 		add	r3, r3, #23
 4559 223a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4560 223c 7F48     		ldr	r0, .L304
 4561 223e 2346     		mov	r3, r4
 4562 2240 5B00     		lsls	r3, r3, #1
 4563 2242 2344     		add	r3, r3, r4
 4564 2244 1B01     		lsls	r3, r3, #4
 4565 2246 0344     		add	r3, r3, r0
 4566 2248 1344     		add	r3, r3, r2
 4567 224a 03F29513 		addw	r3, r3, #405
 4568 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4569 2250 41FA03F3 		asr	r3, r1, r3
 4570 2254 1AB2     		sxth	r2, r3
 4571 2256 07F13803 		add	r3, r7, #56
 4572 225a 1E3B     		subs	r3, r3, #30
 4573 225c 1A80     		strh	r2, [r3]	@ movhi
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4574              		.loc 1 651 0
 4575 225e 0023     		movs	r3, #0
 4576 2260 07F5BE52 		add	r2, r7, #6080
 4577 2264 02F11602 		add	r2, r2, #22
 4578 2268 1370     		strb	r3, [r2]
 4579 226a 3BE0     		b	.L192
 4580              	.L193:
 652:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4581              		.loc 1 652 0 discriminator 3
 4582 226c 07F5BE53 		add	r3, r7, #6080
 4583 2270 03F11503 		add	r3, r3, #21
 4584 2274 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4585 2276 3222     		movs	r2, #50
 4586 2278 02FB03F3 		mul	r3, r2, r3
 4587 227c 1A1D     		adds	r2, r3, #4
 4588 227e 07F5BE53 		add	r3, r7, #6080
 4589 2282 03F11703 		add	r3, r3, #23
 4590 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4591 2288 07F5BE51 		add	r1, r7, #6080
 4592 228c 01F11301 		add	r1, r1, #19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 111


 4593 2290 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4594 2292 01FB03F3 		mul	r3, r1, r3
 4595 2296 1A44     		add	r2, r2, r3
 4596 2298 07F5BE53 		add	r3, r7, #6080
 4597 229c 03F11303 		add	r3, r3, #19
 4598 22a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4599 22a2 1A44     		add	r2, r2, r3
 4600 22a4 07F5BE53 		add	r3, r7, #6080
 4601 22a8 03F11603 		add	r3, r3, #22
 4602 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4603 22ae D31A     		subs	r3, r2, r3
 4604 22b0 5A1E     		subs	r2, r3, #1
 4605 22b2 07F5BE53 		add	r3, r7, #6080
 4606 22b6 03F11603 		add	r3, r3, #22
 4607 22ba 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4608 22bc 07F13803 		add	r3, r7, #56
 4609 22c0 1E3B     		subs	r3, r3, #30
 4610 22c2 0B44     		add	r3, r3, r1
 4611 22c4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4612 22c6 07F15803 		add	r3, r7, #88
 4613 22ca 043B     		subs	r3, r3, #4
 4614 22cc 9954     		strb	r1, [r3, r2]
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4615              		.loc 1 651 0 discriminator 3
 4616 22ce 07F5BE53 		add	r3, r7, #6080
 4617 22d2 03F11603 		add	r3, r3, #22
 4618 22d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4619 22d8 0133     		adds	r3, r3, #1
 4620 22da 07F5BE52 		add	r2, r7, #6080
 4621 22de 02F11602 		add	r2, r2, #22
 4622 22e2 1370     		strb	r3, [r2]
 4623              	.L192:
 651:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4624              		.loc 1 651 0 is_stmt 0 discriminator 1
 4625 22e4 07F5BE53 		add	r3, r7, #6080
 4626 22e8 03F11603 		add	r3, r3, #22
 4627 22ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4628 22ee 07F5BE53 		add	r3, r7, #6080
 4629 22f2 03F11303 		add	r3, r3, #19
 4630 22f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4631 22f8 9A42     		cmp	r2, r3
 4632 22fa B7D3     		bcc	.L193
 653:..\src/command_processing.c ****                         }
 654:..\src/command_processing.c ****                         break;
 4633              		.loc 1 654 0 is_stmt 1
 4634 22fc E5E0     		b	.L114
 4635              	.L125:
 655:..\src/command_processing.c ****                 
 656:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 657:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4636              		.loc 1 657 0
 4637 22fe 07F5BE53 		add	r3, r7, #6080
 4638 2302 03F10E03 		add	r3, r3, #14
 4639 2306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4640 2308 4C49     		ldr	r1, .L304
 4641 230a 1346     		mov	r3, r2
 4642 230c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 112


 4643 230e 9B1A     		subs	r3, r3, r2
 4644 2310 1B01     		lsls	r3, r3, #4
 4645 2312 0B44     		add	r3, r3, r1
 4646 2314 E433     		adds	r3, r3, #228
 4647 2316 1968     		ldr	r1, [r3]
 4648 2318 07F5BE53 		add	r3, r7, #6080
 4649 231c 03F10E03 		add	r3, r3, #14
 4650 2320 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4651 2322 4748     		ldr	r0, .L304+4
 4652 2324 1346     		mov	r3, r2
 4653 2326 DB00     		lsls	r3, r3, #3
 4654 2328 9B1A     		subs	r3, r3, r2
 4655 232a 1B01     		lsls	r3, r3, #4
 4656 232c 0344     		add	r3, r3, r0
 4657 232e 03F58873 		add	r3, r3, #272
 4658 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4659 2334 1846     		mov	r0, r3
 4660 2336 414A     		ldr	r2, .L304
 4661 2338 0346     		mov	r3, r0
 4662 233a 5B00     		lsls	r3, r3, #1
 4663 233c 0344     		add	r3, r3, r0
 4664 233e 1B01     		lsls	r3, r3, #4
 4665 2340 1344     		add	r3, r3, r2
 4666 2342 03F29513 		addw	r3, r3, #405
 4667 2346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4668 2348 41FA03F2 		asr	r2, r1, r3
 4669 234c 07F11803 		add	r3, r7, #24
 4670 2350 043B     		subs	r3, r3, #4
 4671 2352 1A60     		str	r2, [r3]
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4672              		.loc 1 658 0
 4673 2354 0023     		movs	r3, #0
 4674 2356 07F5BE52 		add	r2, r7, #6080
 4675 235a 02F11602 		add	r2, r2, #22
 4676 235e 1370     		strb	r3, [r2]
 4677 2360 2EE0     		b	.L194
 4678              	.L195:
 659:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4679              		.loc 1 659 0 discriminator 3
 4680 2362 07F5BE53 		add	r3, r7, #6080
 4681 2366 03F11503 		add	r3, r3, #21
 4682 236a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4683 236c 3222     		movs	r2, #50
 4684 236e 02FB03F3 		mul	r3, r2, r3
 4685 2372 1A1D     		adds	r2, r3, #4
 4686 2374 07F5BE53 		add	r3, r7, #6080
 4687 2378 03F11303 		add	r3, r3, #19
 4688 237c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4689 237e 1A44     		add	r2, r2, r3
 4690 2380 07F5BE53 		add	r3, r7, #6080
 4691 2384 03F11603 		add	r3, r3, #22
 4692 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4693 238a D31A     		subs	r3, r2, r3
 4694 238c 5A1E     		subs	r2, r3, #1
 4695 238e 07F5BE53 		add	r3, r7, #6080
 4696 2392 03F11603 		add	r3, r3, #22
 4697 2396 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 113


 4698 2398 07F11803 		add	r3, r7, #24
 4699 239c 043B     		subs	r3, r3, #4
 4700 239e 0B44     		add	r3, r3, r1
 4701 23a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4702 23a2 07F15803 		add	r3, r7, #88
 4703 23a6 043B     		subs	r3, r3, #4
 4704 23a8 9954     		strb	r1, [r3, r2]
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4705              		.loc 1 658 0 discriminator 3
 4706 23aa 07F5BE53 		add	r3, r7, #6080
 4707 23ae 03F11603 		add	r3, r3, #22
 4708 23b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4709 23b4 0133     		adds	r3, r3, #1
 4710 23b6 07F5BE52 		add	r2, r7, #6080
 4711 23ba 02F11602 		add	r2, r2, #22
 4712 23be 1370     		strb	r3, [r2]
 4713              	.L194:
 658:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4714              		.loc 1 658 0 is_stmt 0 discriminator 1
 4715 23c0 07F5BE53 		add	r3, r7, #6080
 4716 23c4 03F11603 		add	r3, r3, #22
 4717 23c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4718 23ca 07F5BE53 		add	r3, r7, #6080
 4719 23ce 03F11303 		add	r3, r3, #19
 4720 23d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4721 23d4 9A42     		cmp	r2, r3
 4722 23d6 C4D3     		bcc	.L195
 660:..\src/command_processing.c ****                         }
 661:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4723              		.loc 1 661 0 is_stmt 1
 4724 23d8 07F5BE53 		add	r3, r7, #6080
 4725 23dc 03F10E03 		add	r3, r3, #14
 4726 23e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4727 23e2 1649     		ldr	r1, .L304
 4728 23e4 1346     		mov	r3, r2
 4729 23e6 DB00     		lsls	r3, r3, #3
 4730 23e8 9B1A     		subs	r3, r3, r2
 4731 23ea 1B01     		lsls	r3, r3, #4
 4732 23ec 0B44     		add	r3, r3, r1
 4733 23ee E833     		adds	r3, r3, #232
 4734 23f0 1968     		ldr	r1, [r3]
 4735 23f2 07F5BE53 		add	r3, r7, #6080
 4736 23f6 03F10E03 		add	r3, r3, #14
 4737 23fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4738 23fc 1048     		ldr	r0, .L304+4
 4739 23fe 1346     		mov	r3, r2
 4740 2400 DB00     		lsls	r3, r3, #3
 4741 2402 9B1A     		subs	r3, r3, r2
 4742 2404 1B01     		lsls	r3, r3, #4
 4743 2406 0344     		add	r3, r3, r0
 4744 2408 03F58873 		add	r3, r3, #272
 4745 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4746 240e 1846     		mov	r0, r3
 4747 2410 0A4A     		ldr	r2, .L304
 4748 2412 0346     		mov	r3, r0
 4749 2414 5B00     		lsls	r3, r3, #1
 4750 2416 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 114


 4751 2418 1B01     		lsls	r3, r3, #4
 4752 241a 1344     		add	r3, r3, r2
 4753 241c 03F29513 		addw	r3, r3, #405
 4754 2420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4755 2422 41FA03F2 		asr	r2, r1, r3
 4756 2426 07F11803 		add	r3, r7, #24
 4757 242a 043B     		subs	r3, r3, #4
 4758 242c 1A60     		str	r2, [r3]
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4759              		.loc 1 662 0
 4760 242e 0023     		movs	r3, #0
 4761 2430 07F5BE52 		add	r2, r7, #6080
 4762 2434 02F11602 		add	r2, r2, #22
 4763 2438 1370     		strb	r3, [r2]
 4764 243a 38E0     		b	.L196
 4765              	.L305:
 4766              		.align	2
 4767              	.L304:
 4768 243c 00000000 		.word	c_mem
 4769 2440 00000000 		.word	g_mem
 4770              	.L197:
 663:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4771              		.loc 1 663 0 discriminator 3
 4772 2444 07F5BE53 		add	r3, r7, #6080
 4773 2448 03F11503 		add	r3, r3, #21
 4774 244c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4775 244e 3222     		movs	r2, #50
 4776 2450 02FB03F3 		mul	r3, r2, r3
 4777 2454 1A1D     		adds	r2, r3, #4
 4778 2456 07F5BE53 		add	r3, r7, #6080
 4779 245a 03F11303 		add	r3, r3, #19
 4780 245e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4781 2460 1A44     		add	r2, r2, r3
 4782 2462 07F5BE53 		add	r3, r7, #6080
 4783 2466 03F11303 		add	r3, r3, #19
 4784 246a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4785 246c 1A44     		add	r2, r2, r3
 4786 246e 07F5BE53 		add	r3, r7, #6080
 4787 2472 03F11603 		add	r3, r3, #22
 4788 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4789 2478 D31A     		subs	r3, r2, r3
 4790 247a 5A1E     		subs	r2, r3, #1
 4791 247c 07F5BE53 		add	r3, r7, #6080
 4792 2480 03F11603 		add	r3, r3, #22
 4793 2484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4794 2486 07F11803 		add	r3, r7, #24
 4795 248a 043B     		subs	r3, r3, #4
 4796 248c 0B44     		add	r3, r3, r1
 4797 248e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4798 2490 07F15803 		add	r3, r7, #88
 4799 2494 043B     		subs	r3, r3, #4
 4800 2496 9954     		strb	r1, [r3, r2]
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4801              		.loc 1 662 0 discriminator 3
 4802 2498 07F5BE53 		add	r3, r7, #6080
 4803 249c 03F11603 		add	r3, r3, #22
 4804 24a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 115


 4805 24a2 0133     		adds	r3, r3, #1
 4806 24a4 07F5BE52 		add	r2, r7, #6080
 4807 24a8 02F11602 		add	r2, r2, #22
 4808 24ac 1370     		strb	r3, [r2]
 4809              	.L196:
 662:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4810              		.loc 1 662 0 is_stmt 0 discriminator 1
 4811 24ae 07F5BE53 		add	r3, r7, #6080
 4812 24b2 03F11603 		add	r3, r3, #22
 4813 24b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4814 24b8 07F5BE53 		add	r3, r7, #6080
 4815 24bc 03F11303 		add	r3, r3, #19
 4816 24c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4817 24c2 9A42     		cmp	r2, r3
 4818 24c4 BED3     		bcc	.L197
 664:..\src/command_processing.c ****                         }
 665:..\src/command_processing.c ****                         break;
 4819              		.loc 1 665 0 is_stmt 1
 4820 24c6 00E0     		b	.L114
 4821              	.L284:
 666:..\src/command_processing.c ****                         
 667:..\src/command_processing.c ****                     default:
 668:..\src/command_processing.c ****                         break;
 4822              		.loc 1 668 0
 4823 24c8 00BF     		nop
 4824              	.L114:
 669:..\src/command_processing.c ****                 }
 670:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 671:..\src/command_processing.c ****                         
 672:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 673:..\src/command_processing.c ****         }
 674:..\src/command_processing.c ****         
 675:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4825              		.loc 1 675 0
 4826 24ca 07F5BE53 		add	r3, r7, #6080
 4827 24ce 03F11503 		add	r3, r3, #21
 4828 24d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4829 24d4 9B00     		lsls	r3, r3, #2
 4830 24d6 07F5BF52 		add	r2, r7, #6112
 4831 24da 02F11402 		add	r2, r2, #20
 4832 24de 1268     		ldr	r2, [r2]
 4833 24e0 1344     		add	r3, r3, r2
 4834 24e2 1A68     		ldr	r2, [r3]
 4835 24e4 07F13803 		add	r3, r7, #56
 4836 24e8 183B     		subs	r3, r3, #24
 4837 24ea 1146     		mov	r1, r2
 4838 24ec 1846     		mov	r0, r3
 4839 24ee FFF7FEFF 		bl	sprintf
 676:..\src/command_processing.c ****         string_length = strlen(aux_str);
 4840              		.loc 1 676 0
 4841 24f2 07F13803 		add	r3, r7, #56
 4842 24f6 183B     		subs	r3, r3, #24
 4843 24f8 1846     		mov	r0, r3
 4844 24fa FFF7FEFF 		bl	strlen
 4845 24fe 0346     		mov	r3, r0
 4846 2500 07F5BE52 		add	r2, r7, #6080
 4847 2504 02F11202 		add	r2, r2, #18
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 116


 4848 2508 1370     		strb	r3, [r2]
 677:..\src/command_processing.c ****         
 678:..\src/command_processing.c ****         // Parameters with a menu
 679:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4849              		.loc 1 679 0
 4850 250a 07F5BE53 		add	r3, r7, #6080
 4851 250e 03F11503 		add	r3, r3, #21
 4852 2512 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4853 2514 07F11803 		add	r3, r7, #24
 4854 2518 103B     		subs	r3, r3, #16
 4855 251a 1B68     		ldr	r3, [r3]
 4856 251c 1344     		add	r3, r3, r2
 4857 251e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4858 2520 002B     		cmp	r3, #0
 4859 2522 40F0D984 		bne	.L198
 680:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4860              		.loc 1 680 0
 4861 2526 07F5BE53 		add	r3, r7, #6080
 4862 252a 03F11403 		add	r3, r3, #20
 4863 252e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4864 2530 07F5BF52 		add	r2, r7, #6112
 4865 2534 02F11002 		add	r2, r2, #16
 4866 2538 1268     		ldr	r2, [r2]
 4867 253a 1344     		add	r3, r3, r2
 4868 253c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4869 253e 013B     		subs	r3, r3, #1
 4870 2540 0B2B     		cmp	r3, #11
 4871 2542 00F2BB84 		bhi	.L199
 4872 2546 01A2     		adr	r2, .L201
 4873 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4874              		.p2align 2
 4875              	.L201:
 4876 254c 7D250000 		.word	.L200+1
 4877 2550 27270000 		.word	.L202+1
 4878 2554 FD270000 		.word	.L203+1
 4879 2558 51280000 		.word	.L204+1
 4880 255c B5280000 		.word	.L205+1
 4881 2560 11290000 		.word	.L206+1
 4882 2564 2D2A0000 		.word	.L207+1
 4883 2568 B52A0000 		.word	.L208+1
 4884 256c 492B0000 		.word	.L209+1
 4885 2570 F32B0000 		.word	.L210+1
 4886 2574 472D0000 		.word	.L211+1
 4887 2578 3B2E0000 		.word	.L212+1
 4888              		.p2align 1
 4889              	.L200:
 681:..\src/command_processing.c ****                 case 1:     // input mode menu
 682:..\src/command_processing.c ****                     switch(*m_addr) {
 4890              		.loc 1 682 0
 4891 257c 07F5BE53 		add	r3, r7, #6080
 4892 2580 03F10803 		add	r3, r3, #8
 4893 2584 1B68     		ldr	r3, [r3]
 4894 2586 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4895 2588 072B     		cmp	r3, #7
 4896 258a 00F29084 		bhi	.L285
 4897 258e 01A2     		adr	r2, .L215
 4898 2590 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 117


 4899              		.p2align 2
 4900              	.L215:
 4901 2594 B5250000 		.word	.L214+1
 4902 2598 D9250000 		.word	.L216+1
 4903 259c FF250000 		.word	.L217+1
 4904 25a0 2D260000 		.word	.L218+1
 4905 25a4 59260000 		.word	.L219+1
 4906 25a8 83260000 		.word	.L220+1
 4907 25ac B7260000 		.word	.L221+1
 4908 25b0 E1260000 		.word	.L222+1
 4909              		.p2align 1
 4910              	.L214:
 683:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 684:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4911              		.loc 1 684 0
 4912 25b4 07F13803 		add	r3, r7, #56
 4913 25b8 183B     		subs	r3, r3, #24
 4914 25ba 1846     		mov	r0, r3
 4915 25bc FFF7FEFF 		bl	strlen
 4916 25c0 0346     		mov	r3, r0
 4917 25c2 1A46     		mov	r2, r3
 4918 25c4 07F13803 		add	r3, r7, #56
 4919 25c8 183B     		subs	r3, r3, #24
 4920 25ca 1344     		add	r3, r3, r2
 4921 25cc DA4A     		ldr	r2, .L306
 4922 25ce 1068     		ldr	r0, [r2]	@ unaligned
 4923 25d0 1860     		str	r0, [r3]	@ unaligned
 4924 25d2 1279     		ldrb	r2, [r2, #4]
 4925 25d4 1A71     		strb	r2, [r3, #4]
 685:..\src/command_processing.c ****                         break;
 4926              		.loc 1 685 0
 4927 25d6 A5E0     		b	.L213
 4928              	.L216:
 686:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 687:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4929              		.loc 1 687 0
 4930 25d8 07F13803 		add	r3, r7, #56
 4931 25dc 183B     		subs	r3, r3, #24
 4932 25de 1846     		mov	r0, r3
 4933 25e0 FFF7FEFF 		bl	strlen
 4934 25e4 0346     		mov	r3, r0
 4935 25e6 1A46     		mov	r2, r3
 4936 25e8 07F13803 		add	r3, r7, #56
 4937 25ec 183B     		subs	r3, r3, #24
 4938 25ee 1344     		add	r3, r3, r2
 4939 25f0 D249     		ldr	r1, .L306+4
 4940 25f2 1A46     		mov	r2, r3
 4941 25f4 0B46     		mov	r3, r1
 4942 25f6 03CB     		ldmia	r3!, {r0, r1}
 4943 25f8 1060     		str	r0, [r2]	@ unaligned
 4944 25fa 5160     		str	r1, [r2, #4]	@ unaligned
 688:..\src/command_processing.c ****                         break;
 4945              		.loc 1 688 0
 4946 25fc 92E0     		b	.L213
 4947              	.L217:
 689:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 690:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 118


 4948              		.loc 1 690 0
 4949 25fe 07F13803 		add	r3, r7, #56
 4950 2602 183B     		subs	r3, r3, #24
 4951 2604 1846     		mov	r0, r3
 4952 2606 FFF7FEFF 		bl	strlen
 4953 260a 0346     		mov	r3, r0
 4954 260c 1A46     		mov	r2, r3
 4955 260e 07F13803 		add	r3, r7, #56
 4956 2612 183B     		subs	r3, r3, #24
 4957 2614 1344     		add	r3, r3, r2
 4958 2616 CA4A     		ldr	r2, .L306+8
 4959 2618 1D46     		mov	r5, r3
 4960 261a 1446     		mov	r4, r2
 4961 261c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4962 261e 2860     		str	r0, [r5]	@ unaligned
 4963 2620 6960     		str	r1, [r5, #4]	@ unaligned
 4964 2622 AA60     		str	r2, [r5, #8]	@ unaligned
 4965 2624 EB60     		str	r3, [r5, #12]	@ unaligned
 4966 2626 2388     		ldrh	r3, [r4]	@ unaligned
 4967 2628 2B82     		strh	r3, [r5, #16]	@ unaligned
 691:..\src/command_processing.c ****                         break;
 4968              		.loc 1 691 0
 4969 262a 7BE0     		b	.L213
 4970              	.L218:
 692:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 693:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4971              		.loc 1 693 0
 4972 262c 07F13803 		add	r3, r7, #56
 4973 2630 183B     		subs	r3, r3, #24
 4974 2632 1846     		mov	r0, r3
 4975 2634 FFF7FEFF 		bl	strlen
 4976 2638 0346     		mov	r3, r0
 4977 263a 1A46     		mov	r2, r3
 4978 263c 07F13803 		add	r3, r7, #56
 4979 2640 183B     		subs	r3, r3, #24
 4980 2642 1344     		add	r3, r3, r2
 4981 2644 BF4A     		ldr	r2, .L306+12
 4982 2646 1C46     		mov	r4, r3
 4983 2648 1346     		mov	r3, r2
 4984 264a 07CB     		ldmia	r3!, {r0, r1, r2}
 4985 264c 2060     		str	r0, [r4]	@ unaligned
 4986 264e 6160     		str	r1, [r4, #4]	@ unaligned
 4987 2650 A260     		str	r2, [r4, #8]	@ unaligned
 4988 2652 1B88     		ldrh	r3, [r3]	@ unaligned
 4989 2654 A381     		strh	r3, [r4, #12]	@ unaligned
 694:..\src/command_processing.c ****                         break;
 4990              		.loc 1 694 0
 4991 2656 65E0     		b	.L213
 4992              	.L219:
 695:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 696:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4993              		.loc 1 696 0
 4994 2658 07F13803 		add	r3, r7, #56
 4995 265c 183B     		subs	r3, r3, #24
 4996 265e 1846     		mov	r0, r3
 4997 2660 FFF7FEFF 		bl	strlen
 4998 2664 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 119


 4999 2666 1A46     		mov	r2, r3
 5000 2668 07F13803 		add	r3, r7, #56
 5001 266c 183B     		subs	r3, r3, #24
 5002 266e 1344     		add	r3, r3, r2
 5003 2670 B549     		ldr	r1, .L306+16
 5004 2672 1A46     		mov	r2, r3
 5005 2674 0B46     		mov	r3, r1
 5006 2676 03CB     		ldmia	r3!, {r0, r1}
 5007 2678 1060     		str	r0, [r2]	@ unaligned
 5008 267a 5160     		str	r1, [r2, #4]	@ unaligned
 5009 267c 1B88     		ldrh	r3, [r3]	@ unaligned
 5010 267e 1381     		strh	r3, [r2, #8]	@ unaligned
 697:..\src/command_processing.c ****                         break;
 5011              		.loc 1 697 0
 5012 2680 50E0     		b	.L213
 5013              	.L220:
 698:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 699:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 5014              		.loc 1 699 0
 5015 2682 07F13803 		add	r3, r7, #56
 5016 2686 183B     		subs	r3, r3, #24
 5017 2688 1846     		mov	r0, r3
 5018 268a FFF7FEFF 		bl	strlen
 5019 268e 0346     		mov	r3, r0
 5020 2690 1A46     		mov	r2, r3
 5021 2692 07F13803 		add	r3, r7, #56
 5022 2696 183B     		subs	r3, r3, #24
 5023 2698 1344     		add	r3, r3, r2
 5024 269a AC4A     		ldr	r2, .L306+20
 5025 269c 1D46     		mov	r5, r3
 5026 269e 1446     		mov	r4, r2
 5027 26a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5028 26a2 2860     		str	r0, [r5]	@ unaligned
 5029 26a4 6960     		str	r1, [r5, #4]	@ unaligned
 5030 26a6 AA60     		str	r2, [r5, #8]	@ unaligned
 5031 26a8 EB60     		str	r3, [r5, #12]	@ unaligned
 5032 26aa 2388     		ldrh	r3, [r4]	@ unaligned
 5033 26ac A278     		ldrb	r2, [r4, #2]
 5034 26ae 2B82     		strh	r3, [r5, #16]	@ unaligned
 5035 26b0 1346     		mov	r3, r2
 5036 26b2 AB74     		strb	r3, [r5, #18]
 700:..\src/command_processing.c ****                         break;
 5037              		.loc 1 700 0
 5038 26b4 36E0     		b	.L213
 5039              	.L221:
 701:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 702:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 5040              		.loc 1 702 0
 5041 26b6 07F13803 		add	r3, r7, #56
 5042 26ba 183B     		subs	r3, r3, #24
 5043 26bc 1846     		mov	r0, r3
 5044 26be FFF7FEFF 		bl	strlen
 5045 26c2 0346     		mov	r3, r0
 5046 26c4 1A46     		mov	r2, r3
 5047 26c6 07F13803 		add	r3, r7, #56
 5048 26ca 183B     		subs	r3, r3, #24
 5049 26cc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 120


 5050 26ce A049     		ldr	r1, .L306+24
 5051 26d0 1A46     		mov	r2, r3
 5052 26d2 0B46     		mov	r3, r1
 5053 26d4 03CB     		ldmia	r3!, {r0, r1}
 5054 26d6 1060     		str	r0, [r2]	@ unaligned
 5055 26d8 5160     		str	r1, [r2, #4]	@ unaligned
 5056 26da 1B88     		ldrh	r3, [r3]	@ unaligned
 5057 26dc 1381     		strh	r3, [r2, #8]	@ unaligned
 703:..\src/command_processing.c ****                         break;
 5058              		.loc 1 703 0
 5059 26de 21E0     		b	.L213
 5060              	.L222:
 704:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 705:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 5061              		.loc 1 705 0
 5062 26e0 07F13803 		add	r3, r7, #56
 5063 26e4 183B     		subs	r3, r3, #24
 5064 26e6 1846     		mov	r0, r3
 5065 26e8 FFF7FEFF 		bl	strlen
 5066 26ec 0346     		mov	r3, r0
 5067 26ee 1A46     		mov	r2, r3
 5068 26f0 07F13803 		add	r3, r7, #56
 5069 26f4 183B     		subs	r3, r3, #24
 5070 26f6 1344     		add	r3, r3, r2
 5071 26f8 964A     		ldr	r2, .L306+28
 5072 26fa 1446     		mov	r4, r2
 5073 26fc 9E46     		mov	lr, r3
 5074 26fe 04F1200C 		add	ip, r4, #32
 5075              	.L223:
 5076 2702 7546     		mov	r5, lr
 5077 2704 2646     		mov	r6, r4
 5078 2706 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 5079 2708 2860     		str	r0, [r5]	@ unaligned
 5080 270a 6960     		str	r1, [r5, #4]	@ unaligned
 5081 270c AA60     		str	r2, [r5, #8]	@ unaligned
 5082 270e EB60     		str	r3, [r5, #12]	@ unaligned
 5083 2710 1034     		adds	r4, r4, #16
 5084 2712 0EF1100E 		add	lr, lr, #16
 5085 2716 6445     		cmp	r4, ip
 5086 2718 F3D1     		bne	.L223
 5087 271a 7246     		mov	r2, lr
 5088 271c 2346     		mov	r3, r4
 5089 271e 1B88     		ldrh	r3, [r3]	@ unaligned
 5090 2720 1380     		strh	r3, [r2]	@ unaligned
 706:..\src/command_processing.c ****                         break;
 5091              		.loc 1 706 0
 5092 2722 00BF     		nop
 5093              	.L213:
 707:..\src/command_processing.c ****                     }
 708:..\src/command_processing.c ****                     break;
 5094              		.loc 1 708 0
 5095 2724 C3E3     		b	.L285
 5096              	.L202:
 709:..\src/command_processing.c ****                 case 2:     // control mode menu
 710:..\src/command_processing.c ****                     switch(*m_addr){
 5097              		.loc 1 710 0
 5098 2726 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 121


 5099 272a 03F10803 		add	r3, r3, #8
 5100 272e 1B68     		ldr	r3, [r3]
 5101 2730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5102 2732 032B     		cmp	r3, #3
 5103 2734 00F2BD83 		bhi	.L286
 5104 2738 01A2     		adr	r2, .L226
 5105 273a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5106 273e 00BF     		.p2align 2
 5107              	.L226:
 5108 2740 51270000 		.word	.L225+1
 5109 2744 7B270000 		.word	.L227+1
 5110 2748 9F270000 		.word	.L228+1
 5111 274c C9270000 		.word	.L229+1
 5112              		.p2align 1
 5113              	.L225:
 711:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 712:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 5114              		.loc 1 712 0
 5115 2750 07F13803 		add	r3, r7, #56
 5116 2754 183B     		subs	r3, r3, #24
 5117 2756 1846     		mov	r0, r3
 5118 2758 FFF7FEFF 		bl	strlen
 5119 275c 0346     		mov	r3, r0
 5120 275e 1A46     		mov	r2, r3
 5121 2760 07F13803 		add	r3, r7, #56
 5122 2764 183B     		subs	r3, r3, #24
 5123 2766 1344     		add	r3, r3, r2
 5124 2768 7B49     		ldr	r1, .L306+32
 5125 276a 1A46     		mov	r2, r3
 5126 276c 0B46     		mov	r3, r1
 5127 276e 03CB     		ldmia	r3!, {r0, r1}
 5128 2770 1060     		str	r0, [r2]	@ unaligned
 5129 2772 5160     		str	r1, [r2, #4]	@ unaligned
 5130 2774 1B88     		ldrh	r3, [r3]	@ unaligned
 5131 2776 1381     		strh	r3, [r2, #8]	@ unaligned
 713:..\src/command_processing.c ****                         break;
 5132              		.loc 1 713 0
 5133 2778 3FE0     		b	.L224
 5134              	.L227:
 714:..\src/command_processing.c ****                         case CONTROL_PWM:
 715:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 5135              		.loc 1 715 0
 5136 277a 07F13803 		add	r3, r7, #56
 5137 277e 183B     		subs	r3, r3, #24
 5138 2780 1846     		mov	r0, r3
 5139 2782 FFF7FEFF 		bl	strlen
 5140 2786 0346     		mov	r3, r0
 5141 2788 1A46     		mov	r2, r3
 5142 278a 07F13803 		add	r3, r7, #56
 5143 278e 183B     		subs	r3, r3, #24
 5144 2790 1344     		add	r3, r3, r2
 5145 2792 724A     		ldr	r2, .L306+36
 5146 2794 1068     		ldr	r0, [r2]	@ unaligned
 5147 2796 1860     		str	r0, [r3]	@ unaligned
 5148 2798 1279     		ldrb	r2, [r2, #4]
 5149 279a 1A71     		strb	r2, [r3, #4]
 716:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 122


 5150              		.loc 1 716 0
 5151 279c 2DE0     		b	.L224
 5152              	.L228:
 717:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 718:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 5153              		.loc 1 718 0
 5154 279e 07F13803 		add	r3, r7, #56
 5155 27a2 183B     		subs	r3, r3, #24
 5156 27a4 1846     		mov	r0, r3
 5157 27a6 FFF7FEFF 		bl	strlen
 5158 27aa 0346     		mov	r3, r0
 5159 27ac 1A46     		mov	r2, r3
 5160 27ae 07F13803 		add	r3, r7, #56
 5161 27b2 183B     		subs	r3, r3, #24
 5162 27b4 1344     		add	r3, r3, r2
 5163 27b6 6A49     		ldr	r1, .L306+40
 5164 27b8 1A46     		mov	r2, r3
 5165 27ba 0B46     		mov	r3, r1
 5166 27bc 03CB     		ldmia	r3!, {r0, r1}
 5167 27be 1060     		str	r0, [r2]	@ unaligned
 5168 27c0 5160     		str	r1, [r2, #4]	@ unaligned
 5169 27c2 1B78     		ldrb	r3, [r3]
 5170 27c4 1372     		strb	r3, [r2, #8]
 719:..\src/command_processing.c ****                         break;
 5171              		.loc 1 719 0
 5172 27c6 18E0     		b	.L224
 5173              	.L229:
 720:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 721:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5174              		.loc 1 721 0
 5175 27c8 07F13803 		add	r3, r7, #56
 5176 27cc 183B     		subs	r3, r3, #24
 5177 27ce 1846     		mov	r0, r3
 5178 27d0 FFF7FEFF 		bl	strlen
 5179 27d4 0346     		mov	r3, r0
 5180 27d6 1A46     		mov	r2, r3
 5181 27d8 07F13803 		add	r3, r7, #56
 5182 27dc 183B     		subs	r3, r3, #24
 5183 27de 1344     		add	r3, r3, r2
 5184 27e0 604A     		ldr	r2, .L306+44
 5185 27e2 1D46     		mov	r5, r3
 5186 27e4 1446     		mov	r4, r2
 5187 27e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5188 27e8 2860     		str	r0, [r5]	@ unaligned
 5189 27ea 6960     		str	r1, [r5, #4]	@ unaligned
 5190 27ec AA60     		str	r2, [r5, #8]	@ unaligned
 5191 27ee EB60     		str	r3, [r5, #12]	@ unaligned
 5192 27f0 2068     		ldr	r0, [r4]	@ unaligned
 5193 27f2 2861     		str	r0, [r5, #16]	@ unaligned
 5194 27f4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5195 27f6 AB82     		strh	r3, [r5, #20]	@ unaligned
 722:..\src/command_processing.c ****                         break;
 5196              		.loc 1 722 0
 5197 27f8 00BF     		nop
 5198              	.L224:
 723:..\src/command_processing.c ****                     }
 724:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 123


 5199              		.loc 1 724 0
 5200 27fa 5AE3     		b	.L286
 5201              	.L203:
 725:..\src/command_processing.c ****                 case 3:     // yes/no menu
 726:..\src/command_processing.c ****                     if(*m_addr){
 5202              		.loc 1 726 0
 5203 27fc 07F5BE53 		add	r3, r7, #6080
 5204 2800 03F10803 		add	r3, r3, #8
 5205 2804 1B68     		ldr	r3, [r3]
 5206 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5207 2808 002B     		cmp	r3, #0
 5208 280a 11D0     		beq	.L230
 727:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5209              		.loc 1 727 0
 5210 280c 07F13803 		add	r3, r7, #56
 5211 2810 183B     		subs	r3, r3, #24
 5212 2812 1846     		mov	r0, r3
 5213 2814 FFF7FEFF 		bl	strlen
 5214 2818 0346     		mov	r3, r0
 5215 281a 1A46     		mov	r2, r3
 5216 281c 07F13803 		add	r3, r7, #56
 5217 2820 183B     		subs	r3, r3, #24
 5218 2822 1344     		add	r3, r3, r2
 5219 2824 504A     		ldr	r2, .L306+48
 5220 2826 1068     		ldr	r0, [r2]	@ unaligned
 5221 2828 1860     		str	r0, [r3]	@ unaligned
 5222 282a 1279     		ldrb	r2, [r2, #4]
 5223 282c 1A71     		strb	r2, [r3, #4]
 728:..\src/command_processing.c ****                     }
 729:..\src/command_processing.c ****                     else {
 730:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 731:..\src/command_processing.c ****                     }
 732:..\src/command_processing.c ****                     break;    
 5224              		.loc 1 732 0
 5225 282e 45E3     		b	.L199
 5226              	.L230:
 730:..\src/command_processing.c ****                     }
 5227              		.loc 1 730 0
 5228 2830 07F13803 		add	r3, r7, #56
 5229 2834 183B     		subs	r3, r3, #24
 5230 2836 1846     		mov	r0, r3
 5231 2838 FFF7FEFF 		bl	strlen
 5232 283c 0346     		mov	r3, r0
 5233 283e 1A46     		mov	r2, r3
 5234 2840 07F13803 		add	r3, r7, #56
 5235 2844 183B     		subs	r3, r3, #24
 5236 2846 1344     		add	r3, r3, r2
 5237 2848 484A     		ldr	r2, .L306+52
 5238 284a 1068     		ldr	r0, [r2]	@ unaligned
 5239 284c 1860     		str	r0, [r3]	@ unaligned
 5240              		.loc 1 732 0
 5241 284e 35E3     		b	.L199
 5242              	.L204:
 733:..\src/command_processing.c ****                 case 4:     // right/lef menu
 734:..\src/command_processing.c ****                     switch(*m_addr){
 5243              		.loc 1 734 0
 5244 2850 07F5BE53 		add	r3, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 124


 5245 2854 03F10803 		add	r3, r3, #8
 5246 2858 1B68     		ldr	r3, [r3]
 5247 285a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5248 285c 002B     		cmp	r3, #0
 5249 285e 02D0     		beq	.L233
 5250 2860 012B     		cmp	r3, #1
 5251 2862 14D0     		beq	.L234
 735:..\src/command_processing.c ****                         case RIGHT_HAND:
 736:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 737:..\src/command_processing.c ****                         break;
 738:..\src/command_processing.c ****                         case LEFT_HAND:
 739:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 740:..\src/command_processing.c ****                         break;
 741:..\src/command_processing.c ****                     }
 742:..\src/command_processing.c ****                     break;
 5252              		.loc 1 742 0
 5253 2864 2AE3     		b	.L199
 5254              	.L233:
 736:..\src/command_processing.c ****                         break;
 5255              		.loc 1 736 0
 5256 2866 07F13803 		add	r3, r7, #56
 5257 286a 183B     		subs	r3, r3, #24
 5258 286c 1846     		mov	r0, r3
 5259 286e FFF7FEFF 		bl	strlen
 5260 2872 0346     		mov	r3, r0
 5261 2874 1A46     		mov	r2, r3
 5262 2876 07F13803 		add	r3, r7, #56
 5263 287a 183B     		subs	r3, r3, #24
 5264 287c 1344     		add	r3, r3, r2
 5265 287e 3C4A     		ldr	r2, .L306+56
 5266 2880 1068     		ldr	r0, [r2]	@ unaligned
 5267 2882 1860     		str	r0, [r3]	@ unaligned
 5268 2884 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5269 2886 9279     		ldrb	r2, [r2, #6]
 5270 2888 9980     		strh	r1, [r3, #4]	@ unaligned
 5271 288a 9A71     		strb	r2, [r3, #6]
 737:..\src/command_processing.c ****                         case LEFT_HAND:
 5272              		.loc 1 737 0
 5273 288c 11E0     		b	.L232
 5274              	.L234:
 739:..\src/command_processing.c ****                         break;
 5275              		.loc 1 739 0
 5276 288e 07F13803 		add	r3, r7, #56
 5277 2892 183B     		subs	r3, r3, #24
 5278 2894 1846     		mov	r0, r3
 5279 2896 FFF7FEFF 		bl	strlen
 5280 289a 0346     		mov	r3, r0
 5281 289c 1A46     		mov	r2, r3
 5282 289e 07F13803 		add	r3, r7, #56
 5283 28a2 183B     		subs	r3, r3, #24
 5284 28a4 1344     		add	r3, r3, r2
 5285 28a6 334A     		ldr	r2, .L306+60
 5286 28a8 1068     		ldr	r0, [r2]	@ unaligned
 5287 28aa 1860     		str	r0, [r3]	@ unaligned
 5288 28ac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5289 28ae 9A80     		strh	r2, [r3, #4]	@ unaligned
 740:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 125


 5290              		.loc 1 740 0
 5291 28b0 00BF     		nop
 5292              	.L232:
 5293              		.loc 1 742 0
 5294 28b2 03E3     		b	.L199
 5295              	.L205:
 743:..\src/command_processing.c ****                 case 5:     // on/off menu
 744:..\src/command_processing.c ****                     switch(*m_addr){
 5296              		.loc 1 744 0
 5297 28b4 07F5BE53 		add	r3, r7, #6080
 5298 28b8 03F10803 		add	r3, r3, #8
 5299 28bc 1B68     		ldr	r3, [r3]
 5300 28be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5301 28c0 002B     		cmp	r3, #0
 5302 28c2 02D0     		beq	.L236
 5303 28c4 012B     		cmp	r3, #1
 5304 28c6 12D0     		beq	.L237
 745:..\src/command_processing.c ****                         case 0:
 746:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case 1:
 749:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                     }
 752:..\src/command_processing.c ****                     break;
 5305              		.loc 1 752 0
 5306 28c8 F8E2     		b	.L199
 5307              	.L236:
 746:..\src/command_processing.c ****                         break;
 5308              		.loc 1 746 0
 5309 28ca 07F13803 		add	r3, r7, #56
 5310 28ce 183B     		subs	r3, r3, #24
 5311 28d0 1846     		mov	r0, r3
 5312 28d2 FFF7FEFF 		bl	strlen
 5313 28d6 0346     		mov	r3, r0
 5314 28d8 1A46     		mov	r2, r3
 5315 28da 07F13803 		add	r3, r7, #56
 5316 28de 183B     		subs	r3, r3, #24
 5317 28e0 1344     		add	r3, r3, r2
 5318 28e2 254A     		ldr	r2, .L306+64
 5319 28e4 1068     		ldr	r0, [r2]	@ unaligned
 5320 28e6 1860     		str	r0, [r3]	@ unaligned
 5321 28e8 1279     		ldrb	r2, [r2, #4]
 5322 28ea 1A71     		strb	r2, [r3, #4]
 747:..\src/command_processing.c ****                         case 1:
 5323              		.loc 1 747 0
 5324 28ec 0FE0     		b	.L235
 5325              	.L237:
 749:..\src/command_processing.c ****                         break;
 5326              		.loc 1 749 0
 5327 28ee 07F13803 		add	r3, r7, #56
 5328 28f2 183B     		subs	r3, r3, #24
 5329 28f4 1846     		mov	r0, r3
 5330 28f6 FFF7FEFF 		bl	strlen
 5331 28fa 0346     		mov	r3, r0
 5332 28fc 1A46     		mov	r2, r3
 5333 28fe 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 126


 5334 2902 183B     		subs	r3, r3, #24
 5335 2904 1344     		add	r3, r3, r2
 5336 2906 1D4A     		ldr	r2, .L306+68
 5337 2908 1068     		ldr	r0, [r2]	@ unaligned
 5338 290a 1860     		str	r0, [r3]	@ unaligned
 750:..\src/command_processing.c ****                     }
 5339              		.loc 1 750 0
 5340 290c 00BF     		nop
 5341              	.L235:
 5342              		.loc 1 752 0
 5343 290e D5E2     		b	.L199
 5344              	.L206:
 753:..\src/command_processing.c ****                 case 6:     // expansion port menu
 754:..\src/command_processing.c ****                     switch(*m_addr){
 5345              		.loc 1 754 0
 5346 2910 07F5BE53 		add	r3, r7, #6080
 5347 2914 03F10803 		add	r3, r3, #8
 5348 2918 1B68     		ldr	r3, [r3]
 5349 291a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5350 291c 032B     		cmp	r3, #3
 5351 291e 00F2CA82 		bhi	.L287
 5352 2922 01A2     		adr	r2, .L240
 5353 2924 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5354              		.p2align 2
 5355              	.L240:
 5356 2928 81290000 		.word	.L239+1
 5357 292c A5290000 		.word	.L241+1
 5358 2930 D1290000 		.word	.L242+1
 5359 2934 FF290000 		.word	.L243+1
 5360              		.p2align 1
 5361              	.L307:
 5362              		.align	2
 5363              	.L306:
 5364 2938 00000000 		.word	.LC88
 5365 293c 08000000 		.word	.LC89
 5366 2940 10000000 		.word	.LC90
 5367 2944 24000000 		.word	.LC91
 5368 2948 34000000 		.word	.LC92
 5369 294c 40000000 		.word	.LC93
 5370 2950 54000000 		.word	.LC94
 5371 2954 60000000 		.word	.LC95
 5372 2958 84000000 		.word	.LC96
 5373 295c 90000000 		.word	.LC97
 5374 2960 98000000 		.word	.LC98
 5375 2964 A4000000 		.word	.LC99
 5376 2968 BC000000 		.word	.LC100
 5377 296c C4000000 		.word	.LC101
 5378 2970 CC000000 		.word	.LC102
 5379 2974 D4000000 		.word	.LC103
 5380 2978 DC000000 		.word	.LC104
 5381 297c E4000000 		.word	.LC105
 5382              	.L239:
 755:..\src/command_processing.c ****                         case EXP_NONE:
 756:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5383              		.loc 1 756 0
 5384 2980 07F13803 		add	r3, r7, #56
 5385 2984 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 127


 5386 2986 1846     		mov	r0, r3
 5387 2988 FFF7FEFF 		bl	strlen
 5388 298c 0346     		mov	r3, r0
 5389 298e 1A46     		mov	r2, r3
 5390 2990 07F13803 		add	r3, r7, #56
 5391 2994 183B     		subs	r3, r3, #24
 5392 2996 1344     		add	r3, r3, r2
 5393 2998 CD4A     		ldr	r2, .L308
 5394 299a 1068     		ldr	r0, [r2]	@ unaligned
 5395 299c 1860     		str	r0, [r3]	@ unaligned
 5396 299e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5397 29a0 9A80     		strh	r2, [r3, #4]	@ unaligned
 757:..\src/command_processing.c ****                             break;
 5398              		.loc 1 757 0
 5399 29a2 42E0     		b	.L238
 5400              	.L241:
 758:..\src/command_processing.c ****                         case EXP_SD_RTC:
 759:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5401              		.loc 1 759 0
 5402 29a4 07F13803 		add	r3, r7, #56
 5403 29a8 183B     		subs	r3, r3, #24
 5404 29aa 1846     		mov	r0, r3
 5405 29ac FFF7FEFF 		bl	strlen
 5406 29b0 0346     		mov	r3, r0
 5407 29b2 1A46     		mov	r2, r3
 5408 29b4 07F13803 		add	r3, r7, #56
 5409 29b8 183B     		subs	r3, r3, #24
 5410 29ba 1344     		add	r3, r3, r2
 5411 29bc C54A     		ldr	r2, .L308+4
 5412 29be 1C46     		mov	r4, r3
 5413 29c0 1346     		mov	r3, r2
 5414 29c2 07CB     		ldmia	r3!, {r0, r1, r2}
 5415 29c4 2060     		str	r0, [r4]	@ unaligned
 5416 29c6 6160     		str	r1, [r4, #4]	@ unaligned
 5417 29c8 A260     		str	r2, [r4, #8]	@ unaligned
 5418 29ca 1B88     		ldrh	r3, [r3]	@ unaligned
 5419 29cc A381     		strh	r3, [r4, #12]	@ unaligned
 760:..\src/command_processing.c ****                             break;
 5420              		.loc 1 760 0
 5421 29ce 2CE0     		b	.L238
 5422              	.L242:
 761:..\src/command_processing.c ****                         case EXP_WIFI:
 762:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5423              		.loc 1 762 0
 5424 29d0 07F13803 		add	r3, r7, #56
 5425 29d4 183B     		subs	r3, r3, #24
 5426 29d6 1846     		mov	r0, r3
 5427 29d8 FFF7FEFF 		bl	strlen
 5428 29dc 0346     		mov	r3, r0
 5429 29de 1A46     		mov	r2, r3
 5430 29e0 07F13803 		add	r3, r7, #56
 5431 29e4 183B     		subs	r3, r3, #24
 5432 29e6 1344     		add	r3, r3, r2
 5433 29e8 BB4A     		ldr	r2, .L308+8
 5434 29ea 1D46     		mov	r5, r3
 5435 29ec 1446     		mov	r4, r2
 5436 29ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 128


 5437 29f0 2860     		str	r0, [r5]	@ unaligned
 5438 29f2 6960     		str	r1, [r5, #4]	@ unaligned
 5439 29f4 AA60     		str	r2, [r5, #8]	@ unaligned
 5440 29f6 EB60     		str	r3, [r5, #12]	@ unaligned
 5441 29f8 2388     		ldrh	r3, [r4]	@ unaligned
 5442 29fa 2B82     		strh	r3, [r5, #16]	@ unaligned
 763:..\src/command_processing.c ****         					break;
 5443              		.loc 1 763 0
 5444 29fc 15E0     		b	.L238
 5445              	.L243:
 764:..\src/command_processing.c ****                         case EXP_OTHER:
 765:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5446              		.loc 1 765 0
 5447 29fe 07F13803 		add	r3, r7, #56
 5448 2a02 183B     		subs	r3, r3, #24
 5449 2a04 1846     		mov	r0, r3
 5450 2a06 FFF7FEFF 		bl	strlen
 5451 2a0a 0346     		mov	r3, r0
 5452 2a0c 1A46     		mov	r2, r3
 5453 2a0e 07F13803 		add	r3, r7, #56
 5454 2a12 183B     		subs	r3, r3, #24
 5455 2a14 1344     		add	r3, r3, r2
 5456 2a16 B14A     		ldr	r2, .L308+12
 5457 2a18 1C46     		mov	r4, r3
 5458 2a1a 1346     		mov	r3, r2
 5459 2a1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5460 2a1e 2060     		str	r0, [r4]	@ unaligned
 5461 2a20 6160     		str	r1, [r4, #4]	@ unaligned
 5462 2a22 A260     		str	r2, [r4, #8]	@ unaligned
 5463 2a24 1B78     		ldrb	r3, [r3]
 5464 2a26 2373     		strb	r3, [r4, #12]
 766:..\src/command_processing.c ****         					break;
 5465              		.loc 1 766 0
 5466 2a28 00BF     		nop
 5467              	.L238:
 767:..\src/command_processing.c ****                     }
 768:..\src/command_processing.c ****                     break;
 5468              		.loc 1 768 0
 5469 2a2a 44E2     		b	.L287
 5470              	.L207:
 769:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 770:..\src/command_processing.c ****                     switch(*m_addr){
 5471              		.loc 1 770 0
 5472 2a2c 07F5BE53 		add	r3, r7, #6080
 5473 2a30 03F10803 		add	r3, r3, #8
 5474 2a34 1B68     		ldr	r3, [r3]
 5475 2a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5476 2a38 012B     		cmp	r3, #1
 5477 2a3a 16D0     		beq	.L245
 5478 2a3c 022B     		cmp	r3, #2
 5479 2a3e 26D0     		beq	.L246
 5480 2a40 002B     		cmp	r3, #0
 5481 2a42 00D0     		beq	.L247
 771:..\src/command_processing.c ****                         case 0: 
 772:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 773:..\src/command_processing.c ****                             break;
 774:..\src/command_processing.c ****                         case 1: 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 129


 775:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 776:..\src/command_processing.c ****                             break;
 777:..\src/command_processing.c ****                         case 2: 
 778:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 779:..\src/command_processing.c ****                             break;
 780:..\src/command_processing.c ****                         default:
 781:..\src/command_processing.c ****                             break;
 5482              		.loc 1 781 0
 5483 2a44 35E0     		b	.L248
 5484              	.L247:
 772:..\src/command_processing.c ****                             break;
 5485              		.loc 1 772 0
 5486 2a46 07F13803 		add	r3, r7, #56
 5487 2a4a 183B     		subs	r3, r3, #24
 5488 2a4c 1846     		mov	r0, r3
 5489 2a4e FFF7FEFF 		bl	strlen
 5490 2a52 0346     		mov	r3, r0
 5491 2a54 1A46     		mov	r2, r3
 5492 2a56 07F13803 		add	r3, r7, #56
 5493 2a5a 183B     		subs	r3, r3, #24
 5494 2a5c 1344     		add	r3, r3, r2
 5495 2a5e 9C4A     		ldr	r2, .L308
 5496 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5497 2a62 1860     		str	r0, [r3]	@ unaligned
 5498 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5499 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 773:..\src/command_processing.c ****                         case 1: 
 5500              		.loc 1 773 0
 5501 2a68 23E0     		b	.L248
 5502              	.L245:
 775:..\src/command_processing.c ****                             break;
 5503              		.loc 1 775 0
 5504 2a6a 07F13803 		add	r3, r7, #56
 5505 2a6e 183B     		subs	r3, r3, #24
 5506 2a70 1846     		mov	r0, r3
 5507 2a72 FFF7FEFF 		bl	strlen
 5508 2a76 0346     		mov	r3, r0
 5509 2a78 1A46     		mov	r2, r3
 5510 2a7a 07F13803 		add	r3, r7, #56
 5511 2a7e 183B     		subs	r3, r3, #24
 5512 2a80 1344     		add	r3, r3, r2
 5513 2a82 974A     		ldr	r2, .L308+16
 5514 2a84 1068     		ldr	r0, [r2]	@ unaligned
 5515 2a86 1860     		str	r0, [r3]	@ unaligned
 5516 2a88 1279     		ldrb	r2, [r2, #4]
 5517 2a8a 1A71     		strb	r2, [r3, #4]
 776:..\src/command_processing.c ****                         case 2: 
 5518              		.loc 1 776 0
 5519 2a8c 11E0     		b	.L248
 5520              	.L246:
 778:..\src/command_processing.c ****                             break;
 5521              		.loc 1 778 0
 5522 2a8e 07F13803 		add	r3, r7, #56
 5523 2a92 183B     		subs	r3, r3, #24
 5524 2a94 1846     		mov	r0, r3
 5525 2a96 FFF7FEFF 		bl	strlen
 5526 2a9a 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 130


 5527 2a9c 1A46     		mov	r2, r3
 5528 2a9e 07F13803 		add	r3, r7, #56
 5529 2aa2 183B     		subs	r3, r3, #24
 5530 2aa4 1344     		add	r3, r3, r2
 5531 2aa6 8F4A     		ldr	r2, .L308+20
 5532 2aa8 1068     		ldr	r0, [r2]	@ unaligned
 5533 2aaa 1860     		str	r0, [r3]	@ unaligned
 5534 2aac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5535 2aae 9A80     		strh	r2, [r3, #4]	@ unaligned
 779:..\src/command_processing.c ****                         default:
 5536              		.loc 1 779 0
 5537 2ab0 00BF     		nop
 5538              	.L248:
 782:..\src/command_processing.c ****                     } 
 783:..\src/command_processing.c ****                     break;
 5539              		.loc 1 783 0 discriminator 12
 5540 2ab2 03E2     		b	.L199
 5541              	.L208:
 784:..\src/command_processing.c ****                 case 8:     // user menu          
 785:..\src/command_processing.c ****                     switch(*m_addr){
 5542              		.loc 1 785 0
 5543 2ab4 07F5BE53 		add	r3, r7, #6080
 5544 2ab8 03F10803 		add	r3, r3, #8
 5545 2abc 1B68     		ldr	r3, [r3]
 5546 2abe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5547 2ac0 012B     		cmp	r3, #1
 5548 2ac2 1AD0     		beq	.L250
 5549 2ac4 022B     		cmp	r3, #2
 5550 2ac6 2CD0     		beq	.L251
 5551 2ac8 002B     		cmp	r3, #0
 5552 2aca 00D0     		beq	.L252
 786:..\src/command_processing.c ****                         case GENERIC_USER:
 787:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 788:..\src/command_processing.c ****                         break;
 789:..\src/command_processing.c ****                         case MARIA:
 790:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 791:..\src/command_processing.c ****                         break;
 792:..\src/command_processing.c ****                         case R01:
 793:..\src/command_processing.c ****                             strcat(aux_str, " R01\0");
 794:..\src/command_processing.c ****                         break;
 795:..\src/command_processing.c ****                     }   
 796:..\src/command_processing.c ****                     break;                    
 5553              		.loc 1 796 0
 5554 2acc F6E1     		b	.L199
 5555              	.L252:
 787:..\src/command_processing.c ****                         break;
 5556              		.loc 1 787 0
 5557 2ace 07F13803 		add	r3, r7, #56
 5558 2ad2 183B     		subs	r3, r3, #24
 5559 2ad4 1846     		mov	r0, r3
 5560 2ad6 FFF7FEFF 		bl	strlen
 5561 2ada 0346     		mov	r3, r0
 5562 2adc 1A46     		mov	r2, r3
 5563 2ade 07F13803 		add	r3, r7, #56
 5564 2ae2 183B     		subs	r3, r3, #24
 5565 2ae4 1344     		add	r3, r3, r2
 5566 2ae6 804A     		ldr	r2, .L308+24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 131


 5567 2ae8 1C46     		mov	r4, r3
 5568 2aea 1346     		mov	r3, r2
 5569 2aec 07CB     		ldmia	r3!, {r0, r1, r2}
 5570 2aee 2060     		str	r0, [r4]	@ unaligned
 5571 2af0 6160     		str	r1, [r4, #4]	@ unaligned
 5572 2af2 A260     		str	r2, [r4, #8]	@ unaligned
 5573 2af4 1B88     		ldrh	r3, [r3]	@ unaligned
 5574 2af6 A381     		strh	r3, [r4, #12]	@ unaligned
 788:..\src/command_processing.c ****                         case MARIA:
 5575              		.loc 1 788 0
 5576 2af8 25E0     		b	.L249
 5577              	.L250:
 790:..\src/command_processing.c ****                         break;
 5578              		.loc 1 790 0
 5579 2afa 07F13803 		add	r3, r7, #56
 5580 2afe 183B     		subs	r3, r3, #24
 5581 2b00 1846     		mov	r0, r3
 5582 2b02 FFF7FEFF 		bl	strlen
 5583 2b06 0346     		mov	r3, r0
 5584 2b08 1A46     		mov	r2, r3
 5585 2b0a 07F13803 		add	r3, r7, #56
 5586 2b0e 183B     		subs	r3, r3, #24
 5587 2b10 1344     		add	r3, r3, r2
 5588 2b12 764A     		ldr	r2, .L308+28
 5589 2b14 1068     		ldr	r0, [r2]	@ unaligned
 5590 2b16 1860     		str	r0, [r3]	@ unaligned
 5591 2b18 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5592 2b1a 9279     		ldrb	r2, [r2, #6]
 5593 2b1c 9980     		strh	r1, [r3, #4]	@ unaligned
 5594 2b1e 9A71     		strb	r2, [r3, #6]
 791:..\src/command_processing.c ****                         case R01:
 5595              		.loc 1 791 0
 5596 2b20 11E0     		b	.L249
 5597              	.L251:
 793:..\src/command_processing.c ****                         break;
 5598              		.loc 1 793 0
 5599 2b22 07F13803 		add	r3, r7, #56
 5600 2b26 183B     		subs	r3, r3, #24
 5601 2b28 1846     		mov	r0, r3
 5602 2b2a FFF7FEFF 		bl	strlen
 5603 2b2e 0346     		mov	r3, r0
 5604 2b30 1A46     		mov	r2, r3
 5605 2b32 07F13803 		add	r3, r7, #56
 5606 2b36 183B     		subs	r3, r3, #24
 5607 2b38 1344     		add	r3, r3, r2
 5608 2b3a 6D4A     		ldr	r2, .L308+32
 5609 2b3c 1068     		ldr	r0, [r2]	@ unaligned
 5610 2b3e 1860     		str	r0, [r3]	@ unaligned
 5611 2b40 1279     		ldrb	r2, [r2, #4]
 5612 2b42 1A71     		strb	r2, [r3, #4]
 794:..\src/command_processing.c ****                     }   
 5613              		.loc 1 794 0
 5614 2b44 00BF     		nop
 5615              	.L249:
 5616              		.loc 1 796 0
 5617 2b46 B9E1     		b	.L199
 5618              	.L209:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 132


 797:..\src/command_processing.c ****                 case 9:     // driver type menu
 798:..\src/command_processing.c ****                     switch(*m_addr){
 5619              		.loc 1 798 0
 5620 2b48 07F5BE53 		add	r3, r7, #6080
 5621 2b4c 03F10803 		add	r3, r3, #8
 5622 2b50 1B68     		ldr	r3, [r3]
 5623 2b52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5624 2b54 012B     		cmp	r3, #1
 5625 2b56 1BD0     		beq	.L254
 5626 2b58 022B     		cmp	r3, #2
 5627 2b5a 32D0     		beq	.L255
 5628 2b5c 002B     		cmp	r3, #0
 5629 2b5e 00D0     		beq	.L256
 799:..\src/command_processing.c ****                         case 0:
 800:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 801:..\src/command_processing.c ****                         break;
 802:..\src/command_processing.c ****                         case 1:
 803:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 804:..\src/command_processing.c ****                         break;
 805:..\src/command_processing.c ****                         case 2:
 806:..\src/command_processing.c ****                             strcat(aux_str, " ESC (Brushless)\0");
 807:..\src/command_processing.c ****                         break;
 808:..\src/command_processing.c ****                     }
 809:..\src/command_processing.c ****                     break;
 5630              		.loc 1 809 0
 5631 2b60 ACE1     		b	.L199
 5632              	.L256:
 800:..\src/command_processing.c ****                         break;
 5633              		.loc 1 800 0
 5634 2b62 07F13803 		add	r3, r7, #56
 5635 2b66 183B     		subs	r3, r3, #24
 5636 2b68 1846     		mov	r0, r3
 5637 2b6a FFF7FEFF 		bl	strlen
 5638 2b6e 0346     		mov	r3, r0
 5639 2b70 1A46     		mov	r2, r3
 5640 2b72 07F13803 		add	r3, r7, #56
 5641 2b76 183B     		subs	r3, r3, #24
 5642 2b78 1344     		add	r3, r3, r2
 5643 2b7a 5E4A     		ldr	r2, .L308+36
 5644 2b7c 1D46     		mov	r5, r3
 5645 2b7e 1446     		mov	r4, r2
 5646 2b80 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5647 2b82 2860     		str	r0, [r5]	@ unaligned
 5648 2b84 6960     		str	r1, [r5, #4]	@ unaligned
 5649 2b86 AA60     		str	r2, [r5, #8]	@ unaligned
 5650 2b88 EB60     		str	r3, [r5, #12]	@ unaligned
 5651 2b8a 2068     		ldr	r0, [r4]	@ unaligned
 5652 2b8c 2861     		str	r0, [r5, #16]	@ unaligned
 801:..\src/command_processing.c ****                         case 1:
 5653              		.loc 1 801 0
 5654 2b8e 2FE0     		b	.L253
 5655              	.L254:
 803:..\src/command_processing.c ****                         break;
 5656              		.loc 1 803 0
 5657 2b90 07F13803 		add	r3, r7, #56
 5658 2b94 183B     		subs	r3, r3, #24
 5659 2b96 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 133


 5660 2b98 FFF7FEFF 		bl	strlen
 5661 2b9c 0346     		mov	r3, r0
 5662 2b9e 1A46     		mov	r2, r3
 5663 2ba0 07F13803 		add	r3, r7, #56
 5664 2ba4 183B     		subs	r3, r3, #24
 5665 2ba6 1344     		add	r3, r3, r2
 5666 2ba8 534A     		ldr	r2, .L308+40
 5667 2baa 1D46     		mov	r5, r3
 5668 2bac 1446     		mov	r4, r2
 5669 2bae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5670 2bb0 2860     		str	r0, [r5]	@ unaligned
 5671 2bb2 6960     		str	r1, [r5, #4]	@ unaligned
 5672 2bb4 AA60     		str	r2, [r5, #8]	@ unaligned
 5673 2bb6 EB60     		str	r3, [r5, #12]	@ unaligned
 5674 2bb8 2068     		ldr	r0, [r4]	@ unaligned
 5675 2bba 2861     		str	r0, [r5, #16]	@ unaligned
 5676 2bbc A388     		ldrh	r3, [r4, #4]	@ unaligned
 5677 2bbe AB82     		strh	r3, [r5, #20]	@ unaligned
 804:..\src/command_processing.c ****                         case 2:
 5678              		.loc 1 804 0
 5679 2bc0 16E0     		b	.L253
 5680              	.L255:
 806:..\src/command_processing.c ****                         break;
 5681              		.loc 1 806 0
 5682 2bc2 07F13803 		add	r3, r7, #56
 5683 2bc6 183B     		subs	r3, r3, #24
 5684 2bc8 1846     		mov	r0, r3
 5685 2bca FFF7FEFF 		bl	strlen
 5686 2bce 0346     		mov	r3, r0
 5687 2bd0 1A46     		mov	r2, r3
 5688 2bd2 07F13803 		add	r3, r7, #56
 5689 2bd6 183B     		subs	r3, r3, #24
 5690 2bd8 1344     		add	r3, r3, r2
 5691 2bda 484A     		ldr	r2, .L308+44
 5692 2bdc 1D46     		mov	r5, r3
 5693 2bde 1446     		mov	r4, r2
 5694 2be0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5695 2be2 2860     		str	r0, [r5]	@ unaligned
 5696 2be4 6960     		str	r1, [r5, #4]	@ unaligned
 5697 2be6 AA60     		str	r2, [r5, #8]	@ unaligned
 5698 2be8 EB60     		str	r3, [r5, #12]	@ unaligned
 5699 2bea 2378     		ldrb	r3, [r4]
 5700 2bec 2B74     		strb	r3, [r5, #16]
 807:..\src/command_processing.c ****                     }
 5701              		.loc 1 807 0
 5702 2bee 00BF     		nop
 5703              	.L253:
 5704              		.loc 1 809 0
 5705 2bf0 64E1     		b	.L199
 5706              	.L210:
 810:..\src/command_processing.c ****                 case 10:    // device type menu
 811:..\src/command_processing.c ****                     switch(*m_addr){
 5707              		.loc 1 811 0
 5708 2bf2 07F5BE53 		add	r3, r7, #6080
 5709 2bf6 03F10803 		add	r3, r3, #8
 5710 2bfa 1B68     		ldr	r3, [r3]
 5711 2bfc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 134


 5712 2bfe 042B     		cmp	r3, #4
 5713 2c00 00F25B81 		bhi	.L288
 5714 2c04 01A2     		adr	r2, .L259
 5715 2c06 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5716 2c0a 00BF     		.p2align 2
 5717              	.L259:
 5718 2c0c 212C0000 		.word	.L258+1
 5719 2c10 4D2C0000 		.word	.L260+1
 5720 2c14 7B2C0000 		.word	.L261+1
 5721 2c18 A72C0000 		.word	.L262+1
 5722 2c1c 112D0000 		.word	.L263+1
 5723              		.p2align 1
 5724              	.L258:
 812:..\src/command_processing.c ****                         case 0:
 813:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5725              		.loc 1 813 0
 5726 2c20 07F13803 		add	r3, r7, #56
 5727 2c24 183B     		subs	r3, r3, #24
 5728 2c26 1846     		mov	r0, r3
 5729 2c28 FFF7FEFF 		bl	strlen
 5730 2c2c 0346     		mov	r3, r0
 5731 2c2e 1A46     		mov	r2, r3
 5732 2c30 07F13803 		add	r3, r7, #56
 5733 2c34 183B     		subs	r3, r3, #24
 5734 2c36 1344     		add	r3, r3, r2
 5735 2c38 314A     		ldr	r2, .L308+48
 5736 2c3a 1C46     		mov	r4, r3
 5737 2c3c 1346     		mov	r3, r2
 5738 2c3e 07CB     		ldmia	r3!, {r0, r1, r2}
 5739 2c40 2060     		str	r0, [r4]	@ unaligned
 5740 2c42 6160     		str	r1, [r4, #4]	@ unaligned
 5741 2c44 A260     		str	r2, [r4, #8]	@ unaligned
 5742 2c46 1B88     		ldrh	r3, [r3]	@ unaligned
 5743 2c48 A381     		strh	r3, [r4, #12]	@ unaligned
 814:..\src/command_processing.c ****                         break;
 5744              		.loc 1 814 0
 5745 2c4a 7BE0     		b	.L257
 5746              	.L260:
 815:..\src/command_processing.c ****                         case 1:
 816:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5747              		.loc 1 816 0
 5748 2c4c 07F13803 		add	r3, r7, #56
 5749 2c50 183B     		subs	r3, r3, #24
 5750 2c52 1846     		mov	r0, r3
 5751 2c54 FFF7FEFF 		bl	strlen
 5752 2c58 0346     		mov	r3, r0
 5753 2c5a 1A46     		mov	r2, r3
 5754 2c5c 07F13803 		add	r3, r7, #56
 5755 2c60 183B     		subs	r3, r3, #24
 5756 2c62 1344     		add	r3, r3, r2
 5757 2c64 274A     		ldr	r2, .L308+52
 5758 2c66 1D46     		mov	r5, r3
 5759 2c68 1446     		mov	r4, r2
 5760 2c6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5761 2c6c 2860     		str	r0, [r5]	@ unaligned
 5762 2c6e 6960     		str	r1, [r5, #4]	@ unaligned
 5763 2c70 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 135


 5764 2c72 EB60     		str	r3, [r5, #12]	@ unaligned
 5765 2c74 2388     		ldrh	r3, [r4]	@ unaligned
 5766 2c76 2B82     		strh	r3, [r5, #16]	@ unaligned
 817:..\src/command_processing.c ****                         break;
 5767              		.loc 1 817 0
 5768 2c78 64E0     		b	.L257
 5769              	.L261:
 818:..\src/command_processing.c ****                         case 2:
 819:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5770              		.loc 1 819 0
 5771 2c7a 07F13803 		add	r3, r7, #56
 5772 2c7e 183B     		subs	r3, r3, #24
 5773 2c80 1846     		mov	r0, r3
 5774 2c82 FFF7FEFF 		bl	strlen
 5775 2c86 0346     		mov	r3, r0
 5776 2c88 1A46     		mov	r2, r3
 5777 2c8a 07F13803 		add	r3, r7, #56
 5778 2c8e 183B     		subs	r3, r3, #24
 5779 2c90 1344     		add	r3, r3, r2
 5780 2c92 1D4A     		ldr	r2, .L308+56
 5781 2c94 1C46     		mov	r4, r3
 5782 2c96 1346     		mov	r3, r2
 5783 2c98 07CB     		ldmia	r3!, {r0, r1, r2}
 5784 2c9a 2060     		str	r0, [r4]	@ unaligned
 5785 2c9c 6160     		str	r1, [r4, #4]	@ unaligned
 5786 2c9e A260     		str	r2, [r4, #8]	@ unaligned
 5787 2ca0 1B88     		ldrh	r3, [r3]	@ unaligned
 5788 2ca2 A381     		strh	r3, [r4, #12]	@ unaligned
 820:..\src/command_processing.c ****                         break;
 5789              		.loc 1 820 0
 5790 2ca4 4EE0     		b	.L257
 5791              	.L262:
 821:..\src/command_processing.c ****                         case 3:
 822:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5792              		.loc 1 822 0
 5793 2ca6 07F13803 		add	r3, r7, #56
 5794 2caa 183B     		subs	r3, r3, #24
 5795 2cac 1846     		mov	r0, r3
 5796 2cae FFF7FEFF 		bl	strlen
 5797 2cb2 0346     		mov	r3, r0
 5798 2cb4 1A46     		mov	r2, r3
 5799 2cb6 07F13803 		add	r3, r7, #56
 5800 2cba 183B     		subs	r3, r3, #24
 5801 2cbc 1344     		add	r3, r3, r2
 5802 2cbe 134A     		ldr	r2, .L308+60
 5803 2cc0 1C46     		mov	r4, r3
 5804 2cc2 1546     		mov	r5, r2
 5805 2cc4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5806 2cc6 2060     		str	r0, [r4]	@ unaligned
 5807 2cc8 6160     		str	r1, [r4, #4]	@ unaligned
 5808 2cca A260     		str	r2, [r4, #8]	@ unaligned
 5809 2ccc E360     		str	r3, [r4, #12]	@ unaligned
 823:..\src/command_processing.c ****                         break;
 5810              		.loc 1 823 0
 5811 2cce 39E0     		b	.L257
 5812              	.L309:
 5813              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 136


 5814              	.L308:
 5815 2cd0 EC000000 		.word	.LC106
 5816 2cd4 F4000000 		.word	.LC107
 5817 2cd8 04010000 		.word	.LC108
 5818 2cdc 18010000 		.word	.LC109
 5819 2ce0 28010000 		.word	.LC110
 5820 2ce4 30010000 		.word	.LC111
 5821 2ce8 38010000 		.word	.LC112
 5822 2cec 48010000 		.word	.LC113
 5823 2cf0 50010000 		.word	.LC114
 5824 2cf4 58010000 		.word	.LC115
 5825 2cf8 70010000 		.word	.LC116
 5826 2cfc 88010000 		.word	.LC117
 5827 2d00 9C010000 		.word	.LC118
 5828 2d04 AC010000 		.word	.LC119
 5829 2d08 C0010000 		.word	.LC120
 5830 2d0c D0010000 		.word	.LC121
 5831              	.L263:
 824:..\src/command_processing.c ****                         case 4:
 825:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5832              		.loc 1 825 0
 5833 2d10 07F13803 		add	r3, r7, #56
 5834 2d14 183B     		subs	r3, r3, #24
 5835 2d16 1846     		mov	r0, r3
 5836 2d18 FFF7FEFF 		bl	strlen
 5837 2d1c 0346     		mov	r3, r0
 5838 2d1e 1A46     		mov	r2, r3
 5839 2d20 07F13803 		add	r3, r7, #56
 5840 2d24 183B     		subs	r3, r3, #24
 5841 2d26 1344     		add	r3, r3, r2
 5842 2d28 714A     		ldr	r2, .L310
 5843 2d2a 1D46     		mov	r5, r3
 5844 2d2c 1446     		mov	r4, r2
 5845 2d2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5846 2d30 2860     		str	r0, [r5]	@ unaligned
 5847 2d32 6960     		str	r1, [r5, #4]	@ unaligned
 5848 2d34 AA60     		str	r2, [r5, #8]	@ unaligned
 5849 2d36 EB60     		str	r3, [r5, #12]	@ unaligned
 5850 2d38 2388     		ldrh	r3, [r4]	@ unaligned
 5851 2d3a A278     		ldrb	r2, [r4, #2]
 5852 2d3c 2B82     		strh	r3, [r5, #16]	@ unaligned
 5853 2d3e 1346     		mov	r3, r2
 5854 2d40 AB74     		strb	r3, [r5, #18]
 826:..\src/command_processing.c ****                         break;
 5855              		.loc 1 826 0
 5856 2d42 00BF     		nop
 5857              	.L257:
 827:..\src/command_processing.c ****                     }
 828:..\src/command_processing.c ****                     break;
 5858              		.loc 1 828 0
 5859 2d44 B9E0     		b	.L288
 5860              	.L211:
 829:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 830:..\src/command_processing.c ****                     switch(*m_addr){
 5861              		.loc 1 830 0
 5862 2d46 07F5BE53 		add	r3, r7, #6080
 5863 2d4a 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 137


 5864 2d4e 1B68     		ldr	r3, [r3]
 5865 2d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5866 2d52 002B     		cmp	r3, #0
 5867 2d54 02D0     		beq	.L265
 5868 2d56 012B     		cmp	r3, #1
 5869 2d58 37D0     		beq	.L266
 831:..\src/command_processing.c ****                         case 0:
 832:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 833:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 834:..\src/command_processing.c ****                             }
 835:..\src/command_processing.c ****                             else {
 836:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist,Slow:hand\0");
 837:..\src/command_processing.c ****                             }                            
 838:..\src/command_processing.c ****                         break;
 839:..\src/command_processing.c ****                         case 1:
 840:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 841:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 842:..\src/command_processing.c ****                             }
 843:..\src/command_processing.c ****                             else {
 844:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist,Fast:hand\0");
 845:..\src/command_processing.c ****                             }
 846:..\src/command_processing.c ****                         break;
 847:..\src/command_processing.c ****                     }
 848:..\src/command_processing.c ****                     break;
 5870              		.loc 1 848 0
 5871 2d5a AFE0     		b	.L199
 5872              	.L265:
 832:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5873              		.loc 1 832 0
 5874 2d5c 654B     		ldr	r3, .L310+4
 5875 2d5e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5876 2d62 042B     		cmp	r3, #4
 5877 2d64 18D1     		bne	.L267
 833:..\src/command_processing.c ****                             }
 5878              		.loc 1 833 0
 5879 2d66 07F13803 		add	r3, r7, #56
 5880 2d6a 183B     		subs	r3, r3, #24
 5881 2d6c 1846     		mov	r0, r3
 5882 2d6e FFF7FEFF 		bl	strlen
 5883 2d72 0346     		mov	r3, r0
 5884 2d74 1A46     		mov	r2, r3
 5885 2d76 07F13803 		add	r3, r7, #56
 5886 2d7a 183B     		subs	r3, r3, #24
 5887 2d7c 1344     		add	r3, r3, r2
 5888 2d7e 5E4A     		ldr	r2, .L310+8
 5889 2d80 1D46     		mov	r5, r3
 5890 2d82 1446     		mov	r4, r2
 5891 2d84 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5892 2d86 2860     		str	r0, [r5]	@ unaligned
 5893 2d88 6960     		str	r1, [r5, #4]	@ unaligned
 5894 2d8a AA60     		str	r2, [r5, #8]	@ unaligned
 5895 2d8c EB60     		str	r3, [r5, #12]	@ unaligned
 5896 2d8e 2068     		ldr	r0, [r4]	@ unaligned
 5897 2d90 2861     		str	r0, [r5, #16]	@ unaligned
 5898 2d92 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5899 2d94 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 138


 5900              		.loc 1 838 0
 5901 2d96 4FE0     		b	.L264
 5902              	.L267:
 836:..\src/command_processing.c ****                             }                            
 5903              		.loc 1 836 0
 5904 2d98 07F13803 		add	r3, r7, #56
 5905 2d9c 183B     		subs	r3, r3, #24
 5906 2d9e 1846     		mov	r0, r3
 5907 2da0 FFF7FEFF 		bl	strlen
 5908 2da4 0346     		mov	r3, r0
 5909 2da6 1A46     		mov	r2, r3
 5910 2da8 07F13803 		add	r3, r7, #56
 5911 2dac 183B     		subs	r3, r3, #24
 5912 2dae 1344     		add	r3, r3, r2
 5913 2db0 524A     		ldr	r2, .L310+12
 5914 2db2 1D46     		mov	r5, r3
 5915 2db4 1446     		mov	r4, r2
 5916 2db6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5917 2db8 2860     		str	r0, [r5]	@ unaligned
 5918 2dba 6960     		str	r1, [r5, #4]	@ unaligned
 5919 2dbc AA60     		str	r2, [r5, #8]	@ unaligned
 5920 2dbe EB60     		str	r3, [r5, #12]	@ unaligned
 5921 2dc0 2068     		ldr	r0, [r4]	@ unaligned
 5922 2dc2 2861     		str	r0, [r5, #16]	@ unaligned
 5923 2dc4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5924 2dc6 AB82     		strh	r3, [r5, #20]	@ unaligned
 838:..\src/command_processing.c ****                         case 1:
 5925              		.loc 1 838 0
 5926 2dc8 36E0     		b	.L264
 5927              	.L266:
 840:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5928              		.loc 1 840 0
 5929 2dca 4A4B     		ldr	r3, .L310+4
 5930 2dcc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5931 2dd0 042B     		cmp	r3, #4
 5932 2dd2 18D1     		bne	.L269
 841:..\src/command_processing.c ****                             }
 5933              		.loc 1 841 0
 5934 2dd4 07F13803 		add	r3, r7, #56
 5935 2dd8 183B     		subs	r3, r3, #24
 5936 2dda 1846     		mov	r0, r3
 5937 2ddc FFF7FEFF 		bl	strlen
 5938 2de0 0346     		mov	r3, r0
 5939 2de2 1A46     		mov	r2, r3
 5940 2de4 07F13803 		add	r3, r7, #56
 5941 2de8 183B     		subs	r3, r3, #24
 5942 2dea 1344     		add	r3, r3, r2
 5943 2dec 444A     		ldr	r2, .L310+16
 5944 2dee 1D46     		mov	r5, r3
 5945 2df0 1446     		mov	r4, r2
 5946 2df2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5947 2df4 2860     		str	r0, [r5]	@ unaligned
 5948 2df6 6960     		str	r1, [r5, #4]	@ unaligned
 5949 2df8 AA60     		str	r2, [r5, #8]	@ unaligned
 5950 2dfa EB60     		str	r3, [r5, #12]	@ unaligned
 5951 2dfc 2068     		ldr	r0, [r4]	@ unaligned
 5952 2dfe 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 139


 5953 2e00 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5954 2e02 AB82     		strh	r3, [r5, #20]	@ unaligned
 846:..\src/command_processing.c ****                     }
 5955              		.loc 1 846 0
 5956 2e04 17E0     		b	.L289
 5957              	.L269:
 844:..\src/command_processing.c ****                             }
 5958              		.loc 1 844 0
 5959 2e06 07F13803 		add	r3, r7, #56
 5960 2e0a 183B     		subs	r3, r3, #24
 5961 2e0c 1846     		mov	r0, r3
 5962 2e0e FFF7FEFF 		bl	strlen
 5963 2e12 0346     		mov	r3, r0
 5964 2e14 1A46     		mov	r2, r3
 5965 2e16 07F13803 		add	r3, r7, #56
 5966 2e1a 183B     		subs	r3, r3, #24
 5967 2e1c 1344     		add	r3, r3, r2
 5968 2e1e 394A     		ldr	r2, .L310+20
 5969 2e20 1D46     		mov	r5, r3
 5970 2e22 1446     		mov	r4, r2
 5971 2e24 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5972 2e26 2860     		str	r0, [r5]	@ unaligned
 5973 2e28 6960     		str	r1, [r5, #4]	@ unaligned
 5974 2e2a AA60     		str	r2, [r5, #8]	@ unaligned
 5975 2e2c EB60     		str	r3, [r5, #12]	@ unaligned
 5976 2e2e 2068     		ldr	r0, [r4]	@ unaligned
 5977 2e30 2861     		str	r0, [r5, #16]	@ unaligned
 5978 2e32 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5979 2e34 AB82     		strh	r3, [r5, #20]	@ unaligned
 5980              	.L289:
 846:..\src/command_processing.c ****                     }
 5981              		.loc 1 846 0
 5982 2e36 00BF     		nop
 5983              	.L264:
 5984              		.loc 1 848 0 discriminator 13
 5985 2e38 40E0     		b	.L199
 5986              	.L212:
 849:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 850:..\src/command_processing.c ****                     switch(*m_addr){
 5987              		.loc 1 850 0
 5988 2e3a 07F5BE53 		add	r3, r7, #6080
 5989 2e3e 03F10803 		add	r3, r3, #8
 5990 2e42 1B68     		ldr	r3, [r3]
 5991 2e44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5992 2e46 002B     		cmp	r3, #0
 5993 2e48 02D0     		beq	.L272
 5994 2e4a 012B     		cmp	r3, #1
 5995 2e4c 17D0     		beq	.L273
 851:..\src/command_processing.c ****                         case 0:
 852:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 853:..\src/command_processing.c ****                         break;
 854:..\src/command_processing.c ****                         case 1:
 855:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 856:..\src/command_processing.c ****                         break;
 857:..\src/command_processing.c ****                     }
 858:..\src/command_processing.c ****                     break;
 5996              		.loc 1 858 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 140


 5997 2e4e 35E0     		b	.L199
 5998              	.L272:
 852:..\src/command_processing.c ****                         break;
 5999              		.loc 1 852 0
 6000 2e50 07F13803 		add	r3, r7, #56
 6001 2e54 183B     		subs	r3, r3, #24
 6002 2e56 1846     		mov	r0, r3
 6003 2e58 FFF7FEFF 		bl	strlen
 6004 2e5c 0346     		mov	r3, r0
 6005 2e5e 1A46     		mov	r2, r3
 6006 2e60 07F13803 		add	r3, r7, #56
 6007 2e64 183B     		subs	r3, r3, #24
 6008 2e66 1344     		add	r3, r3, r2
 6009 2e68 274A     		ldr	r2, .L310+24
 6010 2e6a 1D46     		mov	r5, r3
 6011 2e6c 1446     		mov	r4, r2
 6012 2e6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6013 2e70 2860     		str	r0, [r5]	@ unaligned
 6014 2e72 6960     		str	r1, [r5, #4]	@ unaligned
 6015 2e74 AA60     		str	r2, [r5, #8]	@ unaligned
 6016 2e76 EB60     		str	r3, [r5, #12]	@ unaligned
 6017 2e78 2068     		ldr	r0, [r4]	@ unaligned
 6018 2e7a 2861     		str	r0, [r5, #16]	@ unaligned
 853:..\src/command_processing.c ****                         case 1:
 6019              		.loc 1 853 0
 6020 2e7c 16E0     		b	.L271
 6021              	.L273:
 855:..\src/command_processing.c ****                         break;
 6022              		.loc 1 855 0
 6023 2e7e 07F13803 		add	r3, r7, #56
 6024 2e82 183B     		subs	r3, r3, #24
 6025 2e84 1846     		mov	r0, r3
 6026 2e86 FFF7FEFF 		bl	strlen
 6027 2e8a 0346     		mov	r3, r0
 6028 2e8c 1A46     		mov	r2, r3
 6029 2e8e 07F13803 		add	r3, r7, #56
 6030 2e92 183B     		subs	r3, r3, #24
 6031 2e94 1344     		add	r3, r3, r2
 6032 2e96 1D4A     		ldr	r2, .L310+28
 6033 2e98 1D46     		mov	r5, r3
 6034 2e9a 1446     		mov	r4, r2
 6035 2e9c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 6036 2e9e 2860     		str	r0, [r5]	@ unaligned
 6037 2ea0 6960     		str	r1, [r5, #4]	@ unaligned
 6038 2ea2 AA60     		str	r2, [r5, #8]	@ unaligned
 6039 2ea4 EB60     		str	r3, [r5, #12]	@ unaligned
 6040 2ea6 2068     		ldr	r0, [r4]	@ unaligned
 6041 2ea8 2861     		str	r0, [r5, #16]	@ unaligned
 856:..\src/command_processing.c ****                     }
 6042              		.loc 1 856 0
 6043 2eaa 00BF     		nop
 6044              	.L271:
 6045              		.loc 1 858 0
 6046 2eac 06E0     		b	.L199
 6047              	.L285:
 708:..\src/command_processing.c ****                 case 2:     // control mode menu
 6048              		.loc 1 708 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 141


 6049 2eae 00BF     		nop
 6050 2eb0 04E0     		b	.L199
 6051              	.L286:
 724:..\src/command_processing.c ****                 case 3:     // yes/no menu
 6052              		.loc 1 724 0
 6053 2eb2 00BF     		nop
 6054 2eb4 02E0     		b	.L199
 6055              	.L287:
 768:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 6056              		.loc 1 768 0
 6057 2eb6 00BF     		nop
 6058 2eb8 00E0     		b	.L199
 6059              	.L288:
 828:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 6060              		.loc 1 828 0
 6061 2eba 00BF     		nop
 6062              	.L199:
 859:..\src/command_processing.c ****             }
 860:..\src/command_processing.c ****             //Recomputes string length
 861:..\src/command_processing.c ****             string_length = strlen(aux_str)+1;
 6063              		.loc 1 861 0
 6064 2ebc 07F13803 		add	r3, r7, #56
 6065 2ec0 183B     		subs	r3, r3, #24
 6066 2ec2 1846     		mov	r0, r3
 6067 2ec4 FFF7FEFF 		bl	strlen
 6068 2ec8 0346     		mov	r3, r0
 6069 2eca DBB2     		uxtb	r3, r3
 6070 2ecc 0133     		adds	r3, r3, #1
 6071 2ece 07F5BE52 		add	r2, r7, #6080
 6072 2ed2 02F11202 		add	r2, r2, #18
 6073 2ed6 1370     		strb	r3, [r2]
 6074              	.L198:
 862:..\src/command_processing.c ****         }
 863:..\src/command_processing.c **** 
 864:..\src/command_processing.c ****         // Add parameter string to packet
 865:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6075              		.loc 1 865 0
 6076 2ed8 07F5BE53 		add	r3, r7, #6080
 6077 2edc 03F11203 		add	r3, r3, #18
 6078 2ee0 1B78     		ldrb	r3, [r3]
 6079 2ee2 07F5BE52 		add	r2, r7, #6080
 6080 2ee6 02F11702 		add	r2, r2, #23
 6081 2eea 1370     		strb	r3, [r2]
 6082 2eec 56E0     		b	.L274
 6083              	.L311:
 6084 2eee 00BF     		.align	2
 6085              	.L310:
 6086 2ef0 E4010000 		.word	.LC122
 6087 2ef4 00000000 		.word	c_mem
 6088 2ef8 F8010000 		.word	.LC123
 6089 2efc 10020000 		.word	.LC124
 6090 2f00 28020000 		.word	.LC125
 6091 2f04 40020000 		.word	.LC126
 6092 2f08 58020000 		.word	.LC127
 6093 2f0c 70020000 		.word	.LC128
 6094              	.L275:
 866:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 142


 6095              		.loc 1 866 0 discriminator 3
 6096 2f10 07F5BE53 		add	r3, r7, #6080
 6097 2f14 03F11503 		add	r3, r3, #21
 6098 2f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6099 2f1a 3222     		movs	r2, #50
 6100 2f1c 02FB03F3 		mul	r3, r2, r3
 6101 2f20 1A1D     		adds	r2, r3, #4
 6102 2f22 07F5BE53 		add	r3, r7, #6080
 6103 2f26 03F11303 		add	r3, r3, #19
 6104 2f2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6105 2f2c 07F5BE53 		add	r3, r7, #6080
 6106 2f30 03F11503 		add	r3, r3, #21
 6107 2f34 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6108 2f36 07F11803 		add	r3, r7, #24
 6109 2f3a 143B     		subs	r3, r3, #20
 6110 2f3c 1B68     		ldr	r3, [r3]
 6111 2f3e 0344     		add	r3, r3, r0
 6112 2f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6113 2f42 03FB01F3 		mul	r3, r3, r1
 6114 2f46 1A44     		add	r2, r2, r3
 6115 2f48 07F5BE53 		add	r3, r7, #6080
 6116 2f4c 03F11203 		add	r3, r3, #18
 6117 2f50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6118 2f52 1A44     		add	r2, r2, r3
 6119 2f54 07F5BE53 		add	r3, r7, #6080
 6120 2f58 03F11703 		add	r3, r3, #23
 6121 2f5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6122 2f5e D21A     		subs	r2, r2, r3
 6123 2f60 07F5BE53 		add	r3, r7, #6080
 6124 2f64 03F11203 		add	r3, r3, #18
 6125 2f68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6126 2f6a 07F5BE53 		add	r3, r7, #6080
 6127 2f6e 03F11703 		add	r3, r3, #23
 6128 2f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6129 2f74 C91A     		subs	r1, r1, r3
 6130 2f76 07F13803 		add	r3, r7, #56
 6131 2f7a 183B     		subs	r3, r3, #24
 6132 2f7c 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 6133 2f7e 07F15803 		add	r3, r7, #88
 6134 2f82 043B     		subs	r3, r3, #4
 6135 2f84 9954     		strb	r1, [r3, r2]
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
 6136              		.loc 1 865 0 discriminator 3
 6137 2f86 07F5BE53 		add	r3, r7, #6080
 6138 2f8a 03F11703 		add	r3, r3, #23
 6139 2f8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6140 2f90 013B     		subs	r3, r3, #1
 6141 2f92 07F5BE52 		add	r2, r7, #6080
 6142 2f96 02F11702 		add	r2, r2, #23
 6143 2f9a 1370     		strb	r3, [r2]
 6144              	.L274:
 865:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length - i] = aux
 6145              		.loc 1 865 0 is_stmt 0 discriminator 1
 6146 2f9c 07F5BE53 		add	r3, r7, #6080
 6147 2fa0 03F11703 		add	r3, r3, #23
 6148 2fa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6149 2fa6 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 143


 6150 2fa8 B2D1     		bne	.L275
 867:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 868:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6151              		.loc 1 868 0 is_stmt 1
 6152 2faa 07F5BE53 		add	r3, r7, #6080
 6153 2fae 03F11503 		add	r3, r3, #21
 6154 2fb2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6155 2fb4 07F11803 		add	r3, r7, #24
 6156 2fb8 103B     		subs	r3, r3, #16
 6157 2fba 1B68     		ldr	r3, [r3]
 6158 2fbc 1344     		add	r3, r3, r2
 6159 2fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6160 2fc0 002B     		cmp	r3, #0
 6161 2fc2 3CD1     		bne	.L276
 869:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length] = NUM_MEN
 6162              		.loc 1 869 0
 6163 2fc4 07F5BE53 		add	r3, r7, #6080
 6164 2fc8 03F11503 		add	r3, r3, #21
 6165 2fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6166 2fce 3222     		movs	r2, #50
 6167 2fd0 02FB03F3 		mul	r3, r2, r3
 6168 2fd4 1A1D     		adds	r2, r3, #4
 6169 2fd6 07F5BE53 		add	r3, r7, #6080
 6170 2fda 03F11303 		add	r3, r3, #19
 6171 2fde 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6172 2fe0 07F5BE53 		add	r3, r7, #6080
 6173 2fe4 03F11503 		add	r3, r3, #21
 6174 2fe8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6175 2fea 07F11803 		add	r3, r7, #24
 6176 2fee 143B     		subs	r3, r3, #20
 6177 2ff0 1B68     		ldr	r3, [r3]
 6178 2ff2 0344     		add	r3, r3, r0
 6179 2ff4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6180 2ff6 03FB01F3 		mul	r3, r3, r1
 6181 2ffa 1A44     		add	r2, r2, r3
 6182 2ffc 07F5BE53 		add	r3, r7, #6080
 6183 3000 03F11203 		add	r3, r3, #18
 6184 3004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6185 3006 1A44     		add	r2, r2, r3
 6186 3008 07F5BE53 		add	r3, r7, #6080
 6187 300c 03F11403 		add	r3, r3, #20
 6188 3010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6189 3012 07F5BF51 		add	r1, r7, #6112
 6190 3016 01F11001 		add	r1, r1, #16
 6191 301a 0968     		ldr	r1, [r1]
 6192 301c 0B44     		add	r3, r3, r1
 6193 301e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6194 3020 07F15803 		add	r3, r7, #88
 6195 3024 043B     		subs	r3, r3, #4
 6196 3026 9954     		strb	r1, [r3, r2]
 870:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 6197              		.loc 1 870 0
 6198 3028 07F5BE53 		add	r3, r7, #6080
 6199 302c 03F11403 		add	r3, r3, #20
 6200 3030 1B78     		ldrb	r3, [r3]
 6201 3032 0133     		adds	r3, r3, #1
 6202 3034 07F5BE52 		add	r2, r7, #6080
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 144


 6203 3038 02F11402 		add	r2, r2, #20
 6204 303c 1370     		strb	r3, [r2]
 6205              	.L276:
 871:..\src/command_processing.c ****         }      
 872:..\src/command_processing.c ****         
 873:..\src/command_processing.c ****         // Add struct index after an empty bit
 874:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 875:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6206              		.loc 1 875 0
 6207 303e 07F5BE53 		add	r3, r7, #6080
 6208 3042 03F11503 		add	r3, r3, #21
 6209 3046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6210 3048 07F11803 		add	r3, r7, #24
 6211 304c 103B     		subs	r3, r3, #16
 6212 304e 1B68     		ldr	r3, [r3]
 6213 3050 1344     		add	r3, r3, r2
 6214 3052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6215 3054 002B     		cmp	r3, #0
 6216 3056 32D1     		bne	.L277
 876:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length + 2] = NUM
 6217              		.loc 1 876 0
 6218 3058 07F5BE53 		add	r3, r7, #6080
 6219 305c 03F11503 		add	r3, r3, #21
 6220 3060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6221 3062 3222     		movs	r2, #50
 6222 3064 02FB03F3 		mul	r3, r2, r3
 6223 3068 1A1D     		adds	r2, r3, #4
 6224 306a 07F5BE53 		add	r3, r7, #6080
 6225 306e 03F11303 		add	r3, r3, #19
 6226 3072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6227 3074 07F5BE53 		add	r3, r7, #6080
 6228 3078 03F11503 		add	r3, r3, #21
 6229 307c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6230 307e 07F11803 		add	r3, r7, #24
 6231 3082 143B     		subs	r3, r3, #20
 6232 3084 1B68     		ldr	r3, [r3]
 6233 3086 0344     		add	r3, r3, r0
 6234 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6235 308a 03FB01F3 		mul	r3, r3, r1
 6236 308e 1A44     		add	r2, r2, r3
 6237 3090 07F5BE53 		add	r3, r7, #6080
 6238 3094 03F11203 		add	r3, r3, #18
 6239 3098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6240 309a 1344     		add	r3, r3, r2
 6241 309c 9A1C     		adds	r2, r3, #2
 6242 309e 07F5BE53 		add	r3, r7, #6080
 6243 30a2 03F11503 		add	r3, r3, #21
 6244 30a6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6245 30a8 07F11803 		add	r3, r7, #24
 6246 30ac 183B     		subs	r3, r3, #24
 6247 30ae 1B68     		ldr	r3, [r3]
 6248 30b0 0B44     		add	r3, r3, r1
 6249 30b2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6250 30b4 07F15803 		add	r3, r7, #88
 6251 30b8 043B     		subs	r3, r3, #4
 6252 30ba 9954     		strb	r1, [r3, r2]
 6253 30bc 31E0     		b	.L278
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 145


 6254              	.L277:
 877:..\src/command_processing.c ****         }
 878:..\src/command_processing.c ****         else {
 879:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_length + 1] = NUM
 6255              		.loc 1 879 0
 6256 30be 07F5BE53 		add	r3, r7, #6080
 6257 30c2 03F11503 		add	r3, r3, #21
 6258 30c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6259 30c8 3222     		movs	r2, #50
 6260 30ca 02FB03F3 		mul	r3, r2, r3
 6261 30ce 1A1D     		adds	r2, r3, #4
 6262 30d0 07F5BE53 		add	r3, r7, #6080
 6263 30d4 03F11303 		add	r3, r3, #19
 6264 30d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6265 30da 07F5BE53 		add	r3, r7, #6080
 6266 30de 03F11503 		add	r3, r3, #21
 6267 30e2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6268 30e4 07F11803 		add	r3, r7, #24
 6269 30e8 143B     		subs	r3, r3, #20
 6270 30ea 1B68     		ldr	r3, [r3]
 6271 30ec 0344     		add	r3, r3, r0
 6272 30ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6273 30f0 03FB01F3 		mul	r3, r3, r1
 6274 30f4 1A44     		add	r2, r2, r3
 6275 30f6 07F5BE53 		add	r3, r7, #6080
 6276 30fa 03F11203 		add	r3, r3, #18
 6277 30fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6278 3100 1344     		add	r3, r3, r2
 6279 3102 5A1C     		adds	r2, r3, #1
 6280 3104 07F5BE53 		add	r3, r7, #6080
 6281 3108 03F11503 		add	r3, r3, #21
 6282 310c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6283 310e 07F11803 		add	r3, r7, #24
 6284 3112 183B     		subs	r3, r3, #24
 6285 3114 1B68     		ldr	r3, [r3]
 6286 3116 0B44     		add	r3, r3, r1
 6287 3118 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6288 311a 07F15803 		add	r3, r7, #88
 6289 311e 043B     		subs	r3, r3, #4
 6290 3120 9954     		strb	r1, [r3, r2]
 6291              	.L278:
 409:..\src/command_processing.c ****         
 6292              		.loc 1 409 0 discriminator 2
 6293 3122 07F5BE53 		add	r3, r7, #6080
 6294 3126 03F11503 		add	r3, r3, #21
 6295 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6296 312c 0133     		adds	r3, r3, #1
 6297 312e 07F5BE52 		add	r2, r7, #6080
 6298 3132 02F11502 		add	r2, r2, #21
 6299 3136 1370     		strb	r3, [r2]
 6300              	.L74:
 409:..\src/command_processing.c ****         
 6301              		.loc 1 409 0 is_stmt 0 discriminator 1
 6302 3138 07F5BE53 		add	r3, r7, #6080
 6303 313c 03F11503 		add	r3, r3, #21
 6304 3140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6305 3142 522B     		cmp	r3, #82
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 146


 6306 3144 7CF6D3AF 		bls	.L279
 880:..\src/command_processing.c ****         }
 881:..\src/command_processing.c ****     }
 882:..\src/command_processing.c **** 
 883:..\src/command_processing.c ****     // Add menu
 884:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6307              		.loc 1 884 0 is_stmt 1
 6308 3148 0023     		movs	r3, #0
 6309 314a 07F5BE52 		add	r2, r7, #6080
 6310 314e 02F11602 		add	r2, r2, #22
 6311 3152 1370     		strb	r3, [r2]
 6312 3154 72E0     		b	.L280
 6313              	.L283:
 885:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6314              		.loc 1 885 0
 6315 3156 07F5BE53 		add	r3, r7, #6080
 6316 315a 03F11603 		add	r3, r3, #22
 6317 315e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6318 3160 9B00     		lsls	r3, r3, #2
 6319 3162 07F5BF52 		add	r2, r7, #6112
 6320 3166 02F11C02 		add	r2, r2, #28
 6321 316a 1268     		ldr	r2, [r2]
 6322 316c 1344     		add	r3, r3, r2
 6323 316e 1B68     		ldr	r3, [r3]
 6324 3170 1846     		mov	r0, r3
 6325 3172 FFF7FEFF 		bl	strlen
 6326 3176 0346     		mov	r3, r0
 6327 3178 07F5BE52 		add	r2, r7, #6080
 6328 317c 02F11202 		add	r2, r2, #18
 6329 3180 1370     		strb	r3, [r2]
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6330              		.loc 1 886 0
 6331 3182 07F5BE53 		add	r3, r7, #6080
 6332 3186 03F11203 		add	r3, r3, #18
 6333 318a 1B78     		ldrb	r3, [r3]
 6334 318c 07F5BE52 		add	r2, r7, #6080
 6335 3190 02F11702 		add	r2, r2, #23
 6336 3194 1370     		strb	r3, [r2]
 6337 3196 3FE0     		b	.L281
 6338              	.L282:
 887:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_length -
 6339              		.loc 1 887 0 discriminator 3
 6340 3198 07F5BE53 		add	r3, r7, #6080
 6341 319c 03F11603 		add	r3, r3, #22
 6342 31a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6343 31a2 9622     		movs	r2, #150
 6344 31a4 02FB03F3 		mul	r3, r2, r3
 6345 31a8 03F58153 		add	r3, r3, #4128
 6346 31ac 1833     		adds	r3, r3, #24
 6347 31ae 07F5BE52 		add	r2, r7, #6080
 6348 31b2 02F11202 		add	r2, r2, #18
 6349 31b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6350 31b8 1A44     		add	r2, r2, r3
 6351 31ba 07F5BE53 		add	r3, r7, #6080
 6352 31be 03F11703 		add	r3, r3, #23
 6353 31c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6354 31c4 D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 147


 6355 31c6 07F5BE53 		add	r3, r7, #6080
 6356 31ca 03F11603 		add	r3, r3, #22
 6357 31ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6358 31d0 9B00     		lsls	r3, r3, #2
 6359 31d2 07F5BF51 		add	r1, r7, #6112
 6360 31d6 01F11C01 		add	r1, r1, #28
 6361 31da 0968     		ldr	r1, [r1]
 6362 31dc 0B44     		add	r3, r3, r1
 6363 31de 1B68     		ldr	r3, [r3]
 6364 31e0 07F5BE51 		add	r1, r7, #6080
 6365 31e4 01F11201 		add	r1, r1, #18
 6366 31e8 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6367 31ea 07F5BE51 		add	r1, r7, #6080
 6368 31ee 01F11701 		add	r1, r1, #23
 6369 31f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6370 31f4 411A     		subs	r1, r0, r1
 6371 31f6 0B44     		add	r3, r3, r1
 6372 31f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6373 31fa 07F15803 		add	r3, r7, #88
 6374 31fe 043B     		subs	r3, r3, #4
 6375 3200 9954     		strb	r1, [r3, r2]
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6376              		.loc 1 886 0 discriminator 3
 6377 3202 07F5BE53 		add	r3, r7, #6080
 6378 3206 03F11703 		add	r3, r3, #23
 6379 320a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6380 320c 013B     		subs	r3, r3, #1
 6381 320e 07F5BE52 		add	r2, r7, #6080
 6382 3212 02F11702 		add	r2, r2, #23
 6383 3216 1370     		strb	r3, [r2]
 6384              	.L281:
 886:..\src/command_processing.c ****         for(i = string_length; i != 0; i--)
 6385              		.loc 1 886 0 is_stmt 0 discriminator 1
 6386 3218 07F5BE53 		add	r3, r7, #6080
 6387 321c 03F11703 		add	r3, r3, #23
 6388 3220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6389 3222 002B     		cmp	r3, #0
 6390 3224 B8D1     		bne	.L282
 884:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6391              		.loc 1 884 0 is_stmt 1 discriminator 2
 6392 3226 07F5BE53 		add	r3, r7, #6080
 6393 322a 03F11603 		add	r3, r3, #22
 6394 322e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6395 3230 0133     		adds	r3, r3, #1
 6396 3232 07F5BE52 		add	r2, r7, #6080
 6397 3236 02F11602 		add	r2, r2, #22
 6398 323a 1370     		strb	r3, [r2]
 6399              	.L280:
 884:..\src/command_processing.c ****         string_length = strlen((char*)MENU_STR[j]);
 6400              		.loc 1 884 0 is_stmt 0 discriminator 1
 6401 323c 07F5BE53 		add	r3, r7, #6080
 6402 3240 03F11603 		add	r3, r3, #22
 6403 3244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6404 3246 0B2B     		cmp	r3, #11
 6405 3248 85D9     		bls	.L283
 888:..\src/command_processing.c ****     }
 889:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 148


 890:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 6406              		.loc 1 890 0 is_stmt 1
 6407 324a 07F5BE53 		add	r3, r7, #6080
 6408 324e 03F11003 		add	r3, r3, #16
 6409 3252 1B88     		ldrh	r3, [r3]
 6410 3254 5C1E     		subs	r4, r3, #1
 6411 3256 07F5BE53 		add	r3, r7, #6080
 6412 325a 03F11003 		add	r3, r3, #16
 6413 325e 1B88     		ldrh	r3, [r3]	@ movhi
 6414 3260 DBB2     		uxtb	r3, r3
 6415 3262 013B     		subs	r3, r3, #1
 6416 3264 DAB2     		uxtb	r2, r3
 6417 3266 07F15803 		add	r3, r7, #88
 6418 326a 043B     		subs	r3, r3, #4
 6419 326c 1146     		mov	r1, r2
 6420 326e 1846     		mov	r0, r3
 6421 3270 FFF7FEFF 		bl	LCRChecksum
 6422 3274 0346     		mov	r3, r0
 6423 3276 1A46     		mov	r2, r3
 6424 3278 07F15803 		add	r3, r7, #88
 6425 327c 043B     		subs	r3, r3, #4
 6426 327e 1A55     		strb	r2, [r3, r4]
 891:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 6427              		.loc 1 891 0
 6428 3280 07F5BE53 		add	r3, r7, #6080
 6429 3284 03F11003 		add	r3, r3, #16
 6430 3288 1A88     		ldrh	r2, [r3]
 6431 328a 07F15803 		add	r3, r7, #88
 6432 328e 043B     		subs	r3, r3, #4
 6433 3290 1146     		mov	r1, r2
 6434 3292 1846     		mov	r0, r3
 6435 3294 FFF7FEFF 		bl	commWrite
 892:..\src/command_processing.c **** }
 6436              		.loc 1 892 0
 6437 3298 00BF     		nop
 6438 329a 07F5BE57 		add	r7, r7, #6080
 6439 329e 1C37     		adds	r7, r7, #28
 6440              		.cfi_def_cfa_offset 20
 6441 32a0 BD46     		mov	sp, r7
 6442              		.cfi_def_cfa_register 13
 6443              		@ sp needed
 6444 32a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 6445              		.cfi_endproc
 6446              	.LFE67:
 6447              		.size	get_param_list, .-get_param_list
 6448              		.section	.rodata
 6449 0285 000000   		.align	2
 6450              	.LC130:
 6451 0288 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6451      204E6F6E 
 6451      650A3120 
 6451      2D3E204C 
 6451      6F772028 
 6452 02b8 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6452      74657220 
 6452      72656164 
 6452      290A3220 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 149


 6452      2D3E2048 
 6453 02e8 62697420 		.ascii	"bit register read)\012\000"
 6453      72656769 
 6453      73746572 
 6453      20726561 
 6453      64290A00 
 6454              		.align	2
 6455              	.LC131:
 6456 02fc 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6456      20466173 
 6456      743A7379 
 6456      6E322C20 
 6456      536C6F77 
 6457 032c 796E310A 		.ascii	"yn1\012\000"
 6457      00
 6458 0331 000000   		.align	2
 6459              	.LC132:
 6460 0334 30202D3E 		.ascii	"0 -> Fast:wrist,Slow:hand\0121 -> Slow:wrist,Fast:h"
 6460      20466173 
 6460      743A7772 
 6460      6973742C 
 6460      536C6F77 
 6461 0364 616E640A 		.ascii	"and\012\000"
 6461      00
 6462 0369 000000   		.align	2
 6463              	.LC133:
 6464 036c 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6464      20557362 
 6464      0A31202D 
 6464      3E204861 
 6464      6E646C65 
 6465 0397 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6465      20454D47 
 6465      20496E74 
 6465      65677261 
 6465      6C0A3420 
 6466 03c4 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6466      616E6365 
 6466      640A3620 
 6466      2D3E204A 
 6466      6F797374 
 6467 03f1 204E430A 		.ascii	" NC\012\000"
 6467      00
 6468 03f6 0000     		.align	2
 6469              	.LC134:
 6470 03f8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6470      20506F73 
 6470      6974696F 
 6470      6E0A3120 
 6470      2D3E2050 
 6471 0422 6F736974 		.ascii	"osition and Current\012\000"
 6471      696F6E20 
 6471      616E6420 
 6471      43757272 
 6471      656E740A 
 6472 0437 00       		.align	2
 6473              	.LC135:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 150


 6474 0438 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6474      20446561 
 6474      63746976 
 6474      61746520 
 6474      5B4E4F5D 
 6475 0462 0000     		.align	2
 6476              	.LC136:
 6477 0464 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6477      20526967 
 6477      68740A31 
 6477      202D3E20 
 6477      4C656674 
 6478 047a 0000     		.align	2
 6479              	.LC137:
 6480 047c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6480      204F4646 
 6480      0A31202D 
 6480      3E204F4E 
 6480      0A546865 
 6481 04a3 00       		.align	2
 6482              	.LC138:
 6483 04a4 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6483      204E6F6E 
 6483      650A3120 
 6483      2D3E2053 
 6483      442F5254 
 6484 04d1 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6484      0A33202D 
 6484      3E204F74 
 6484      68657220 
 6484      5B4E2F41 
 6485 04fc 00       		.ascii	"\000"
 6486 04fd 000000   		.align	2
 6487              	.LC139:
 6488 0500 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> R01\012The "
 6488      2047656E 
 6488      65726963 
 6488      20757365 
 6488      720A3120 
 6489 052a 626F6172 		.ascii	"board will reset\012\000"
 6489      64207769 
 6489      6C6C2072 
 6489      65736574 
 6489      0A00
 6490              		.align	2
 6491              	.LC140:
 6492 053c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6492      204D4333 
 6492      33383837 
 6492      20285374 
 6492      616E6461 
 6493 056c 290A3220 		.ascii	")\0122 -> ESC (Brushless)\012The board will reset\012"
 6493      2D3E2045 
 6493      53432028 
 6493      42727573 
 6493      686C6573 
 6494 0598 00       		.ascii	"\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 151


 6495 0599 000000   		.align	2
 6496              	.LC141:
 6497 059c 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6497      20534F46 
 6497      5448414E 
 6497      44205052 
 6497      4F0A3120 
 6498 05c9 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6498      4348414D 
 6498      42455253 
 6498      0A33202D 
 6498      3E204F54 
 6499 05f6 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6499      4D4F544F 
 6499      52530A54 
 6499      68652062 
 6499      6F617264 
 6500 0617 00       		.align	2
 6501              	.LC142:
 6502 0618 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6502      20436C6F 
 6502      73653A43 
 6502      572C204F 
 6502      70656E3A 
 6503 0648 00       		.ascii	"\000"
 6504 0649 000000   		.align	2
 6505              	.LC0:
 6506 064c 02       		.byte	2
 6507 064d 07       		.byte	7
 6508 064e 07       		.byte	7
 6509 064f 00       		.byte	0
 6510 0650 00       		.byte	0
 6511 0651 00       		.byte	0
 6512 0652 02       		.byte	2
 6513 0653 03       		.byte	3
 6514 0654 07       		.byte	7
 6515 0655 00       		.byte	0
 6516 0656 05       		.byte	5
 6517 0657 05       		.byte	5
 6518 0658 03       		.byte	3
 6519 0659 04       		.byte	4
 6520 065a 00       		.byte	0
 6521 065b 06       		.byte	6
 6522 065c 02       		.byte	2
 6523 065d 00       		.byte	0
 6524 065e 01       		.byte	1
 6525 065f 00       		.byte	0
 6526 0660 07       		.byte	7
 6527 0661 02       		.byte	2
 6528 0662 05       		.byte	5
 6529 0663 05       		.byte	5
 6530 0664 05       		.byte	5
 6531 0665 00       		.byte	0
 6532 0666 00       		.byte	0
 6533 0667 00       		.byte	0
 6534 0668 00       		.byte	0
 6535 0669 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 152


 6536 066a 00       		.byte	0
 6537 066b 02       		.byte	2
 6538 066c 00       		.byte	0
 6539 066d 02       		.byte	2
 6540 066e 00       		.byte	0
 6541 066f 09       		.byte	9
 6542 0670 02       		.byte	2
 6543 0671 00       		.byte	0
 6544 0672 02       		.byte	2
 6545 0673 00       		.byte	0
 6546 0674 02       		.byte	2
 6547 0675 01       		.byte	1
 6548 0676 00       		.byte	0
 6549 0677 07       		.byte	7
 6550 0678 07       		.byte	7
 6551 0679 00       		.byte	0
 6552 067a 00       		.byte	0
 6553 067b 00       		.byte	0
 6554 067c 02       		.byte	2
 6555 067d 03       		.byte	3
 6556 067e 07       		.byte	7
 6557 067f 00       		.byte	0
 6558 0680 05       		.byte	5
 6559 0681 05       		.byte	5
 6560 0682 03       		.byte	3
 6561 0683 00       		.byte	0
 6562 0684 01       		.byte	1
 6563 0685 00       		.byte	0
 6564 0686 07       		.byte	7
 6565 0687 02       		.byte	2
 6566 0688 00       		.byte	0
 6567 0689 02       		.byte	2
 6568 068a 00       		.byte	0
 6569 068b 02       		.byte	2
 6570 068c 01       		.byte	1
 6571 068d 02       		.byte	2
 6572 068e 02       		.byte	2
 6573 068f 00       		.byte	0
 6574 0690 02       		.byte	2
 6575 0691 02       		.byte	2
 6576 0692 00       		.byte	0
 6577 0693 04       		.byte	4
 6578 0694 03       		.byte	3
 6579 0695 04       		.byte	4
 6580 0696 00       		.byte	0
 6581 0697 00       		.byte	0
 6582 0698 00       		.byte	0
 6583 0699 00       		.byte	0
 6584 069a 00       		.byte	0
 6585 069b 02       		.byte	2
 6586 069c 05       		.byte	5
 6587 069d 07       		.byte	7
 6588 069e 07       		.byte	7
 6589 069f 00       		.align	2
 6590              	.LC1:
 6591 06a0 31202D20 		.ascii	"1 - Device ID:\000"
 6591      44657669 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 153


 6591      63652049 
 6591      443A00
 6592 06af 00       		.align	2
 6593              	.LC2:
 6594 06b0 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6594      506F7369 
 6594      74696F6E 
 6594      20504944 
 6594      205B502C 
 6595              		.align	2
 6596              	.LC3:
 6597 06cc 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6597      43757272 
 6597      656E7420 
 6597      50494420 
 6597      5B502C20 
 6598 06e7 00       		.align	2
 6599              	.LC4:
 6600 06e8 34202D20 		.ascii	"4 - Startup Activation:\000"
 6600      53746172 
 6600      74757020 
 6600      41637469 
 6600      76617469 
 6601              		.align	2
 6602              	.LC5:
 6603 0700 35202D20 		.ascii	"5 - Input mode:\000"
 6603      496E7075 
 6603      74206D6F 
 6603      64653A00 
 6604              		.align	2
 6605              	.LC6:
 6606 0710 36202D20 		.ascii	"6 - Control mode:\000"
 6606      436F6E74 
 6606      726F6C20 
 6606      6D6F6465 
 6606      3A00
 6607 0722 0000     		.align	2
 6608              	.LC7:
 6609 0724 37202D20 		.ascii	"7 - Resolutions:\000"
 6609      5265736F 
 6609      6C757469 
 6609      6F6E733A 
 6609      00
 6610 0735 000000   		.align	2
 6611              	.LC8:
 6612 0738 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6612      4D656173 
 6612      7572656D 
 6612      656E7420 
 6612      4F666673 
 6613 0751 000000   		.align	2
 6614              	.LC9:
 6615 0754 39202D20 		.ascii	"9 - Multipliers:\000"
 6615      4D756C74 
 6615      69706C69 
 6615      6572733A 
 6615      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 154


 6616 0765 000000   		.align	2
 6617              	.LC10:
 6618 0768 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6618      20506F73 
 6618      2E206C69 
 6618      6D697420 
 6618      61637469 
 6619              		.align	2
 6620              	.LC11:
 6621 0780 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6621      20506F73 
 6621      2E206C69 
 6621      6D697473 
 6621      205B696E 
 6622 079d 000000   		.align	2
 6623              	.LC12:
 6624 07a0 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6624      204D6178 
 6624      20737465 
 6624      7073205B 
 6624      6E65672C 
 6625 07bb 00       		.align	2
 6626              	.LC13:
 6627 07bc 3133202D 		.ascii	"13 - Current limit:\000"
 6627      20437572 
 6627      72656E74 
 6627      206C696D 
 6627      69743A00 
 6628              		.align	2
 6629              	.LC14:
 6630 07d0 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6630      20454D47 
 6630      20746872 
 6630      6573686F 
 6630      6C64733A 
 6631 07e5 000000   		.align	2
 6632              	.LC15:
 6633 07e8 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6633      20454D47 
 6633      2063616C 
 6633      69627261 
 6633      74696F6E 
 6634 0809 000000   		.align	2
 6635              	.LC16:
 6636 080c 3136202D 		.ascii	"16 - EMG max values:\000"
 6636      20454D47 
 6636      206D6178 
 6636      2076616C 
 6636      7565733A 
 6637 0821 000000   		.align	2
 6638              	.LC17:
 6639 0824 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6639      20454D47 
 6639      206D6178 
 6639      20737065 
 6639      6564733A 
 6640 0839 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 155


 6641              	.LC18:
 6642 083c 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6642      20416273 
 6642      6F6C7574 
 6642      6520656E 
 6642      636F6465 
 6643              		.align	2
 6644              	.LC19:
 6645 085c 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6645      204D6F74 
 6645      6F722068 
 6645      616E646C 
 6645      65207261 
 6646 0875 000000   		.align	2
 6647              	.LC20:
 6648 0878 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6648      2050574D 
 6648      20726573 
 6648      63616C69 
 6648      6E673A00 
 6649              		.align	2
 6650              	.LC21:
 6651 088c 3231202D 		.ascii	"21 - Current lookup:\000"
 6651      20437572 
 6651      72656E74 
 6651      206C6F6F 
 6651      6B75703A 
 6652 08a1 000000   		.align	2
 6653              	.LC22:
 6654 08a4 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6654      20446174 
 6654      65206F66 
 6654      206D6169 
 6654      6E74656E 
 6655 08c6 0000     		.align	2
 6656              	.LC23:
 6657 08c8 3233202D 		.ascii	"23 - Rest position:\000"
 6657      20526573 
 6657      7420706F 
 6657      73697469 
 6657      6F6E3A00 
 6658              		.align	2
 6659              	.LC24:
 6660 08dc 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6660      20526573 
 6660      7420706F 
 6660      73697469 
 6660      6F6E2074 
 6661              		.align	2
 6662              	.LC25:
 6663 0900 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6663      20526573 
 6663      74207665 
 6663      6C20636C 
 6663      6F737572 
 6664 0923 00       		.align	2
 6665              	.LC26:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 156


 6666 0924 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6666      20526573 
 6666      7420706F 
 6666      73697469 
 6666      6F6E2065 
 6667              		.align	2
 6668              	.LC27:
 6669 0940 3237202D 		.ascii	"27 - EMG inversion:\000"
 6669      20454D47 
 6669      20696E76 
 6669      65727369 
 6669      6F6E3A00 
 6670              		.align	2
 6671              	.LC28:
 6672 0954 3238202D 		.ascii	"28 - Hand side:\000"
 6672      2048616E 
 6672      64207369 
 6672      64653A00 
 6673              		.align	2
 6674              	.LC29:
 6675 0964 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6675      20456E61 
 6675      626C6520 
 6675      494D5573 
 6675      3A00
 6676 0976 0000     		.align	2
 6677              	.LC30:
 6678 0978 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6678      20526561 
 6678      64204578 
 6678      70616E73 
 6678      696F6E20 
 6679 0992 0000     		.align	2
 6680              	.LC31:
 6681 0994 3331202D 		.ascii	"31 - Reset counters:\000"
 6681      20526573 
 6681      65742063 
 6681      6F756E74 
 6681      6572733A 
 6682 09a9 000000   		.align	2
 6683              	.LC32:
 6684 09ac 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6684      204C6173 
 6684      74206368 
 6684      65636B65 
 6684      64205469 
 6685 09d2 0000     		.align	2
 6686              	.LC33:
 6687 09d4 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6687      20535049 
 6687      20726561 
 6687      64206465 
 6687      6C617920 
 6688 09ef 00       		.align	2
 6689              	.LC34:
 6690 09f0 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6690      204F6E20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 157


 6690      626F6172 
 6690      6420494D 
 6690      5520636F 
 6691 0a15 000000   		.align	2
 6692              	.LC35:
 6693 0a18 3335202D 		.ascii	"35 - User ID:\000"
 6693      20557365 
 6693      72204944 
 6693      3A00
 6694 0a26 0000     		.align	2
 6695              	.LC36:
 6696 0a28 3336202D 		.ascii	"36 - User code:\000"
 6696      20557365 
 6696      7220636F 
 6696      64653A00 
 6697              		.align	2
 6698              	.LC37:
 6699 0a38 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6699      20417373 
 6699      6F636961 
 6699      74656420 
 6699      656E636F 
 6700 0a56 0000     		.align	2
 6701              	.LC38:
 6702 0a58 3338202D 		.ascii	"38 - Driver type:\000"
 6702      20447269 
 6702      76657220 
 6702      74797065 
 6702      3A00
 6703 0a6a 0000     		.align	2
 6704              	.LC39:
 6705 0a6c 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6705      2050574D 
 6705      20726174 
 6705      65206C69 
 6705      6D697465 
 6706 0a83 00       		.align	2
 6707              	.LC40:
 6708 0a84 3430202D 		.ascii	"40 - Not reversible:\000"
 6708      204E6F74 
 6708      20726576 
 6708      65727369 
 6708      626C653A 
 6709 0a99 000000   		.align	2
 6710              	.LC41:
 6711 0a9c 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6711      20456E63 
 6711      20696478 
 6711      20757365 
 6711      6420666F 
 6712 0abb 00       		.align	2
 6713              	.LC42:
 6714 0abc 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6714      20476561 
 6714      72207061 
 6714      72616D73 
 6714      5B4E312C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 158


 6715 0ada 0000     		.align	2
 6716              	.LC43:
 6717 0adc 3433202D 		.ascii	"43 - Use second motor:\000"
 6717      20557365 
 6717      20736563 
 6717      6F6E6420 
 6717      6D6F746F 
 6718 0af3 00       		.align	2
 6719              	.LC44:
 6720 0af4 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6720      20506F73 
 6720      6974696F 
 6720      6E205049 
 6720      44205B50 
 6721 0b11 000000   		.align	2
 6722              	.LC45:
 6723 0b14 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6723      20437572 
 6723      72656E74 
 6723      20504944 
 6723      205B502C 
 6724              		.align	2
 6725              	.LC46:
 6726 0b30 3436202D 		.ascii	"46 - Startup Activation:\000"
 6726      20537461 
 6726      72747570 
 6726      20416374 
 6726      69766174 
 6727 0b49 000000   		.align	2
 6728              	.LC47:
 6729 0b4c 3437202D 		.ascii	"47 - Input mode:\000"
 6729      20496E70 
 6729      7574206D 
 6729      6F64653A 
 6729      00
 6730 0b5d 000000   		.align	2
 6731              	.LC48:
 6732 0b60 3438202D 		.ascii	"48 - Control mode:\000"
 6732      20436F6E 
 6732      74726F6C 
 6732      206D6F64 
 6732      653A00
 6733 0b73 00       		.align	2
 6734              	.LC49:
 6735 0b74 3439202D 		.ascii	"49 - Resolutions:\000"
 6735      20526573 
 6735      6F6C7574 
 6735      696F6E73 
 6735      3A00
 6736 0b86 0000     		.align	2
 6737              	.LC50:
 6738 0b88 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6738      204D6561 
 6738      73757265 
 6738      6D656E74 
 6738      204F6666 
 6739 0ba2 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 159


 6740              	.LC51:
 6741 0ba4 3531202D 		.ascii	"51 - Multipliers:\000"
 6741      204D756C 
 6741      7469706C 
 6741      69657273 
 6741      3A00
 6742 0bb6 0000     		.align	2
 6743              	.LC52:
 6744 0bb8 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6744      20506F73 
 6744      2E206C69 
 6744      6D697420 
 6744      61637469 
 6745              		.align	2
 6746              	.LC53:
 6747 0bd0 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6747      20506F73 
 6747      2E206C69 
 6747      6D697473 
 6747      205B696E 
 6748 0bed 000000   		.align	2
 6749              	.LC54:
 6750 0bf0 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6750      204D6178 
 6750      20737465 
 6750      7073205B 
 6750      6E65672C 
 6751 0c0b 00       		.align	2
 6752              	.LC55:
 6753 0c0c 3535202D 		.ascii	"55 - Current limit:\000"
 6753      20437572 
 6753      72656E74 
 6753      206C696D 
 6753      69743A00 
 6754              		.align	2
 6755              	.LC56:
 6756 0c20 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6756      20416273 
 6756      6F6C7574 
 6756      6520656E 
 6756      636F6465 
 6757              		.align	2
 6758              	.LC57:
 6759 0c40 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6759      204D6F74 
 6759      6F722068 
 6759      616E646C 
 6759      65207261 
 6760 0c59 000000   		.align	2
 6761              	.LC58:
 6762 0c5c 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6762      2050574D 
 6762      20726573 
 6762      63616C69 
 6762      6E673A00 
 6763              		.align	2
 6764              	.LC59:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 160


 6765 0c70 3539202D 		.ascii	"59 - Current lookup:\000"
 6765      20437572 
 6765      72656E74 
 6765      206C6F6F 
 6765      6B75703A 
 6766 0c85 000000   		.align	2
 6767              	.LC60:
 6768 0c88 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6768      20417373 
 6768      6F636961 
 6768      74656420 
 6768      656E636F 
 6769 0ca6 0000     		.align	2
 6770              	.LC61:
 6771 0ca8 3631202D 		.ascii	"61 - Driver type:\000"
 6771      20447269 
 6771      76657220 
 6771      74797065 
 6771      3A00
 6772 0cba 0000     		.align	2
 6773              	.LC62:
 6774 0cbc 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6774      2050574D 
 6774      20726174 
 6774      65206C69 
 6774      6D697465 
 6775 0cd3 00       		.align	2
 6776              	.LC63:
 6777 0cd4 3633202D 		.ascii	"63 - Not reversible:\000"
 6777      204E6F74 
 6777      20726576 
 6777      65727369 
 6777      626C653A 
 6778 0ce9 000000   		.align	2
 6779              	.LC64:
 6780 0cec 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6780      20456E63 
 6780      20696478 
 6780      20757365 
 6780      6420666F 
 6781 0d0b 00       		.align	2
 6782              	.LC65:
 6783 0d0c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6783      20476561 
 6783      72207061 
 6783      72616D73 
 6783      5B4E312C 
 6784 0d2a 0000     		.align	2
 6785              	.LC66:
 6786 0d2c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6786      20526561 
 6786      6420656E 
 6786      63207261 
 6786      77206C69 
 6787 0d46 0000     		.align	2
 6788              	.LC67:
 6789 0d48 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 161


 6789      20526561 
 6789      6420656E 
 6789      63207261 
 6789      77206C69 
 6790 0d62 0000     		.align	2
 6791              	.LC68:
 6792 0d64 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6792      20526561 
 6792      64206164 
 6792      64697469 
 6792      6F6E616C 
 6793 0d83 00       		.align	2
 6794              	.LC69:
 6795 0d84 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6795      20414443 
 6795      20636861 
 6795      6E6E656C 
 6795      205B312D 
 6796              		.align	2
 6797              	.LC70:
 6798 0d9c 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6798      20414443 
 6798      20636861 
 6798      6E6E656C 
 6798      205B372D 
 6799 0db5 000000   		.align	2
 6800              	.LC71:
 6801 0db8 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6801      20526563 
 6801      6F726420 
 6801      454D4720 
 6801      6F6E2053 
 6802              		.align	2
 6803              	.LC72:
 6804 0dd4 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6804      204A6F79 
 6804      73746963 
 6804      6B20636C 
 6804      6F737572 
 6805 0df1 000000   		.align	2
 6806              	.LC73:
 6807 0df4 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6807      204A6F79 
 6807      73746963 
 6807      6B207468 
 6807      72657368 
 6808 0e0d 000000   		.align	2
 6809              	.LC74:
 6810 0e10 3734202D 		.ascii	"74 - Joystick gains:\000"
 6810      204A6F79 
 6810      73746963 
 6810      6B206761 
 6810      696E733A 
 6811 0e25 000000   		.align	2
 6812              	.LC75:
 6813 0e28 3735202D 		.ascii	"75 - Device type:\000"
 6813      20446576 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 162


 6813      69636520 
 6813      74797065 
 6813      3A00
 6814 0e3a 0000     		.align	2
 6815              	.LC76:
 6816 0e3c 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6816      20454D47 
 6816      2046534D 
 6816      20616374 
 6816      2E6D6F64 
 6817 0e53 00       		.align	2
 6818              	.LC77:
 6819 0e54 3737202D 		.ascii	"77 - Air Chamber Feedback:\000"
 6819      20416972 
 6819      20436861 
 6819      6D626572 
 6819      20466565 
 6820 0e6f 00       		.align	2
 6821              	.LC78:
 6822 0e70 3738202D 		.ascii	"78 - Vibrotactile Feedback:\000"
 6822      20566962 
 6822      726F7461 
 6822      6374696C 
 6822      65204665 
 6823              		.align	2
 6824              	.LC79:
 6825 0e8c 3739202D 		.ascii	"79 - Master Mode:\000"
 6825      204D6173 
 6825      74657220 
 6825      4D6F6465 
 6825      3A00
 6826 0e9e 0000     		.align	2
 6827              	.LC80:
 6828 0ea0 3830202D 		.ascii	"80 - Slave ID:\000"
 6828      20536C61 
 6828      76652049 
 6828      443A00
 6829 0eaf 00       		.align	2
 6830              	.LC81:
 6831 0eb0 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6831      204D6178 
 6831      696D756D 
 6831      20736C61 
 6831      76652072 
 6832 0ed5 000000   		.align	2
 6833              	.LC82:
 6834 0ed8 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6834      204D6178 
 6834      696D756D 
 6834      20707265 
 6834      73737572 
 6835 0efe 0000     		.align	2
 6836              	.LC83:
 6837 0f00 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6837      2050726F 
 6837      706F7274 
 6837      696F6E61 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 163


 6837      6C207072 
 6838 0f27 00       		.align	2
 6839              	.LC129:
 6840 0f28 A0060000 		.word	.LC1
 6841 0f2c B0060000 		.word	.LC2
 6842 0f30 CC060000 		.word	.LC3
 6843 0f34 E8060000 		.word	.LC4
 6844 0f38 00070000 		.word	.LC5
 6845 0f3c 10070000 		.word	.LC6
 6846 0f40 24070000 		.word	.LC7
 6847 0f44 38070000 		.word	.LC8
 6848 0f48 54070000 		.word	.LC9
 6849 0f4c 68070000 		.word	.LC10
 6850 0f50 80070000 		.word	.LC11
 6851 0f54 A0070000 		.word	.LC12
 6852 0f58 BC070000 		.word	.LC13
 6853 0f5c D0070000 		.word	.LC14
 6854 0f60 E8070000 		.word	.LC15
 6855 0f64 0C080000 		.word	.LC16
 6856 0f68 24080000 		.word	.LC17
 6857 0f6c 3C080000 		.word	.LC18
 6858 0f70 5C080000 		.word	.LC19
 6859 0f74 78080000 		.word	.LC20
 6860 0f78 8C080000 		.word	.LC21
 6861 0f7c A4080000 		.word	.LC22
 6862 0f80 C8080000 		.word	.LC23
 6863 0f84 DC080000 		.word	.LC24
 6864 0f88 00090000 		.word	.LC25
 6865 0f8c 24090000 		.word	.LC26
 6866 0f90 40090000 		.word	.LC27
 6867 0f94 54090000 		.word	.LC28
 6868 0f98 64090000 		.word	.LC29
 6869 0f9c 78090000 		.word	.LC30
 6870 0fa0 94090000 		.word	.LC31
 6871 0fa4 AC090000 		.word	.LC32
 6872 0fa8 D4090000 		.word	.LC33
 6873 0fac F0090000 		.word	.LC34
 6874 0fb0 180A0000 		.word	.LC35
 6875 0fb4 280A0000 		.word	.LC36
 6876 0fb8 380A0000 		.word	.LC37
 6877 0fbc 580A0000 		.word	.LC38
 6878 0fc0 6C0A0000 		.word	.LC39
 6879 0fc4 840A0000 		.word	.LC40
 6880 0fc8 9C0A0000 		.word	.LC41
 6881 0fcc BC0A0000 		.word	.LC42
 6882 0fd0 DC0A0000 		.word	.LC43
 6883 0fd4 F40A0000 		.word	.LC44
 6884 0fd8 140B0000 		.word	.LC45
 6885 0fdc 300B0000 		.word	.LC46
 6886 0fe0 4C0B0000 		.word	.LC47
 6887 0fe4 600B0000 		.word	.LC48
 6888 0fe8 740B0000 		.word	.LC49
 6889 0fec 880B0000 		.word	.LC50
 6890 0ff0 A40B0000 		.word	.LC51
 6891 0ff4 B80B0000 		.word	.LC52
 6892 0ff8 D00B0000 		.word	.LC53
 6893 0ffc F00B0000 		.word	.LC54
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 164


 6894 1000 0C0C0000 		.word	.LC55
 6895 1004 200C0000 		.word	.LC56
 6896 1008 400C0000 		.word	.LC57
 6897 100c 5C0C0000 		.word	.LC58
 6898 1010 700C0000 		.word	.LC59
 6899 1014 880C0000 		.word	.LC60
 6900 1018 A80C0000 		.word	.LC61
 6901 101c BC0C0000 		.word	.LC62
 6902 1020 D40C0000 		.word	.LC63
 6903 1024 EC0C0000 		.word	.LC64
 6904 1028 0C0D0000 		.word	.LC65
 6905 102c 2C0D0000 		.word	.LC66
 6906 1030 480D0000 		.word	.LC67
 6907 1034 640D0000 		.word	.LC68
 6908 1038 840D0000 		.word	.LC69
 6909 103c 9C0D0000 		.word	.LC70
 6910 1040 B80D0000 		.word	.LC71
 6911 1044 D40D0000 		.word	.LC72
 6912 1048 F40D0000 		.word	.LC73
 6913 104c 100E0000 		.word	.LC74
 6914 1050 280E0000 		.word	.LC75
 6915 1054 3C0E0000 		.word	.LC76
 6916 1058 540E0000 		.word	.LC77
 6917 105c 700E0000 		.word	.LC78
 6918 1060 8C0E0000 		.word	.LC79
 6919 1064 A00E0000 		.word	.LC80
 6920 1068 B00E0000 		.word	.LC81
 6921 106c D80E0000 		.word	.LC82
 6922 1070 000F0000 		.word	.LC83
 6923              		.align	2
 6924              	.LC85:
 6925 1074 03       		.byte	3
 6926 1075 01       		.byte	1
 6927 1076 02       		.byte	2
 6928 1077 03       		.byte	3
 6929 1078 03       		.byte	3
 6930 1079 03       		.byte	3
 6931 107a 03       		.byte	3
 6932 107b 03       		.byte	3
 6933 107c 03       		.byte	3
 6934 107d 04       		.byte	4
 6935 107e 05       		.byte	5
 6936 107f 06       		.byte	6
 6937 1080 03       		.byte	3
 6938 1081 07       		.byte	7
 6939 1082 08       		.byte	8
 6940 1083 09       		.byte	9
 6941 1084 03       		.byte	3
 6942 1085 05       		.byte	5
 6943 1086 03       		.byte	3
 6944 1087 01       		.byte	1
 6945 1088 02       		.byte	2
 6946 1089 03       		.byte	3
 6947 108a 03       		.byte	3
 6948 108b 03       		.byte	3
 6949 108c 09       		.byte	9
 6950 108d 03       		.byte	3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 165


 6951 108e 05       		.byte	5
 6952 108f 03       		.byte	3
 6953 1090 0A       		.byte	10
 6954 1091 03       		.byte	3
 6955 1092 03       		.byte	3
 6956 1093 03       		.byte	3
 6957 1094 03       		.byte	3
 6958 1095 000000   		.align	2
 6959              	.LC86:
 6960 1098 02       		.byte	2
 6961 1099 03       		.byte	3
 6962 109a 08       		.byte	8
 6963 109b 0B       		.byte	11
 6964 109c 17       		.byte	23
 6965 109d 2C       		.byte	44
 6966 109e 2D       		.byte	45
 6967 109f 32       		.byte	50
 6968 10a0 35       		.byte	53
 6969 10a1 000000   		.align	2
 6970              	.LC87:
 6971 10a4 02       		.byte	2
 6972 10a5 03       		.byte	3
 6973 10a6 05       		.byte	5
 6974 10a7 08       		.byte	8
 6975 10a8 0B       		.byte	11
 6976 10a9 17       		.byte	23
 6977 10aa 18       		.byte	24
 6978 10ab 1C       		.byte	28
 6979 10ac 1F       		.byte	31
 6980 10ad 20       		.byte	32
 6981 10ae 26       		.byte	38
 6982 10af 2C       		.byte	44
 6983 10b0 2D       		.byte	45
 6984 10b1 2F       		.byte	47
 6985 10b2 32       		.byte	50
 6986 10b3 35       		.byte	53
 6987 10b4 3D       		.byte	61
 6988 10b5 4B       		.byte	75
 6989              		.section	.text.manage_param_list,"ax",%progbits
 6990              		.align	2
 6991              		.global	manage_param_list
 6992              		.thumb
 6993              		.thumb_func
 6994              		.type	manage_param_list, %function
 6995              	manage_param_list:
 6996              	.LFB68:
 893:..\src/command_processing.c **** 
 894:..\src/command_processing.c **** //==============================================================================
 895:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 896:..\src/command_processing.c **** //==============================================================================
 897:..\src/command_processing.c **** 
 898:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6997              		.loc 1 898 0
 6998              		.cfi_startproc
 6999              		@ args = 0, pretend = 0, frame = 1416
 7000              		@ frame_needed = 1, uses_anonymous_args = 0
 7001 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 166


 7002              		.cfi_def_cfa_offset 20
 7003              		.cfi_offset 4, -20
 7004              		.cfi_offset 5, -16
 7005              		.cfi_offset 6, -12
 7006              		.cfi_offset 7, -8
 7007              		.cfi_offset 14, -4
 7008 0002 ADF29C5D 		subw	sp, sp, #1436
 7009              		.cfi_def_cfa_offset 1456
 7010 0006 04AF     		add	r7, sp, #16
 7011              		.cfi_def_cfa 7, 1440
 7012 0008 0246     		mov	r2, r0
 7013 000a BB1D     		adds	r3, r7, #6
 7014 000c 1A80     		strh	r2, [r3]	@ movhi
 899:..\src/command_processing.c ****     uint8 CYDATA i, j;
 900:..\src/command_processing.c ****     uint8 CYDATA sod;
 901:..\src/command_processing.c ****     uint8 PARAM_IDX;
 902:..\src/command_processing.c ****     int16 aux_int16;
 903:..\src/command_processing.c ****     uint16 aux_uint16;
 904:..\src/command_processing.c ****     int32 aux_int32;
 905:..\src/command_processing.c ****     uint32 aux_uint32;
 906:..\src/command_processing.c ****     float aux_float;
 907:..\src/command_processing.c ****  
 908:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 7015              		.loc 1 908 0
 7016 000e 0023     		movs	r3, #0
 7017 0010 87F87D35 		strb	r3, [r7, #1405]
 909:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 7018              		.loc 1 909 0
 7019 0014 0123     		movs	r3, #1
 7020 0016 87F87C35 		strb	r3, [r7, #1404]
 910:..\src/command_processing.c ****     
 911:..\src/command_processing.c ****     // Arrays
 912:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 7021              		.loc 1 912 0
 7022 001a 054B     		ldr	r3, .L377
 7023 001c C7F88035 		str	r3, [r7, #1408]
 913:..\src/command_processing.c ****     
 914:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 7024              		.loc 1 914 0
 7025 0020 BB1D     		adds	r3, r7, #6
 7026 0022 1B88     		ldrh	r3, [r3]
 7027 0024 002B     		cmp	r3, #0
 7028 0026 07D0     		beq	.L313
 915:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 7029              		.loc 1 915 0
 7030 0028 024B     		ldr	r3, .L377+4
 7031 002a C7F88035 		str	r3, [r7, #1408]
 7032 002e 03E0     		b	.L378
 7033              	.L379:
 7034              		.align	2
 7035              	.L377:
 7036 0030 00000000 		.word	c_mem
 7037 0034 00000000 		.word	g_mem
 7038              	.L378:
 7039              	.L313:
 916:..\src/command_processing.c ****     }
 917:..\src/command_processing.c ****  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 167


 918:..\src/command_processing.c ****     
 919:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 920:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7040              		.loc 1 921 0
 7041 0038 D7F88035 		ldr	r3, [r7, #1408]
 7042 003c 03F1A002 		add	r2, r3, #160
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7043              		.loc 1 920 0
 7044 0040 07F21C43 		addw	r3, r7, #1052
 7045 0044 1A60     		str	r2, [r3]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 7046              		.loc 1 922 0
 7047 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7048 004a 1346     		mov	r3, r2
 7049 004c DB00     		lsls	r3, r3, #3
 7050 004e 9B1A     		subs	r3, r3, r2
 7051 0050 1B01     		lsls	r3, r3, #4
 7052 0052 B033     		adds	r3, r3, #176
 7053 0054 D7F88025 		ldr	r2, [r7, #1408]
 7054 0058 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7055              		.loc 1 920 0
 7056 005a 07F21C43 		addw	r3, r7, #1052
 7057 005e 5A60     		str	r2, [r3, #4]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 7058              		.loc 1 923 0
 7059 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7060 0064 1346     		mov	r3, r2
 7061 0066 DB00     		lsls	r3, r3, #3
 7062 0068 9B1A     		subs	r3, r3, r2
 7063 006a 1B01     		lsls	r3, r3, #4
 7064 006c B833     		adds	r3, r3, #184
 7065 006e D7F88025 		ldr	r2, [r7, #1408]
 7066 0072 1344     		add	r3, r3, r2
 7067 0074 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7068              		.loc 1 920 0
 7069 0076 07F21C43 		addw	r3, r7, #1052
 7070 007a 9A60     		str	r2, [r3, #8]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 7071              		.loc 1 924 0
 7072 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7073 0080 1346     		mov	r3, r2
 7074 0082 DB00     		lsls	r3, r3, #3
 7075 0084 9B1A     		subs	r3, r3, r2
 7076 0086 1B01     		lsls	r3, r3, #4
 7077 0088 E033     		adds	r3, r3, #224
 7078 008a D7F88025 		ldr	r2, [r7, #1408]
 7079 008e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7080              		.loc 1 920 0
 7081 0090 07F21C43 		addw	r3, r7, #1052
 7082 0094 DA60     		str	r2, [r3, #12]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 7083              		.loc 1 925 0
 7084 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 168


 7085 009a 1346     		mov	r3, r2
 7086 009c DB00     		lsls	r3, r3, #3
 7087 009e 9B1A     		subs	r3, r3, r2
 7088 00a0 1B01     		lsls	r3, r3, #4
 7089 00a2 03F58473 		add	r3, r3, #264
 7090 00a6 D7F88025 		ldr	r2, [r7, #1408]
 7091 00aa 1344     		add	r3, r3, r2
 7092 00ac 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7093              		.loc 1 920 0
 7094 00ae 07F21C43 		addw	r3, r7, #1052
 7095 00b2 1A61     		str	r2, [r3, #16]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 7096              		.loc 1 926 0
 7097 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7098 00b8 1346     		mov	r3, r2
 7099 00ba DB00     		lsls	r3, r3, #3
 7100 00bc 9B1A     		subs	r3, r3, r2
 7101 00be 1B01     		lsls	r3, r3, #4
 7102 00c0 03F58473 		add	r3, r3, #264
 7103 00c4 D7F88025 		ldr	r2, [r7, #1408]
 7104 00c8 1344     		add	r3, r3, r2
 7105 00ca DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7106              		.loc 1 920 0
 7107 00cc 07F21C43 		addw	r3, r7, #1052
 7108 00d0 5A61     		str	r2, [r3, #20]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 7109              		.loc 1 927 0
 7110 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7111 00d6 D7F88015 		ldr	r1, [r7, #1408]
 7112 00da 1346     		mov	r3, r2
 7113 00dc DB00     		lsls	r3, r3, #3
 7114 00de 9B1A     		subs	r3, r3, r2
 7115 00e0 1B01     		lsls	r3, r3, #4
 7116 00e2 0B44     		add	r3, r3, r1
 7117 00e4 03F58873 		add	r3, r3, #272
 7118 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7119 00ea 1A46     		mov	r2, r3
 7120 00ec 1346     		mov	r3, r2
 7121 00ee 5B00     		lsls	r3, r3, #1
 7122 00f0 1344     		add	r3, r3, r2
 7123 00f2 1B01     		lsls	r3, r3, #4
 7124 00f4 03F5C873 		add	r3, r3, #400
 7125 00f8 D7F88025 		ldr	r2, [r7, #1408]
 7126 00fc 1344     		add	r3, r3, r2
 7127 00fe 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7128              		.loc 1 920 0
 7129 0100 07F21C43 		addw	r3, r7, #1052
 7130 0104 9A61     		str	r2, [r3, #24]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 7131              		.loc 1 928 0
 7132 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7133 010a D7F88015 		ldr	r1, [r7, #1408]
 7134 010e 1346     		mov	r3, r2
 7135 0110 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 169


 7136 0112 9B1A     		subs	r3, r3, r2
 7137 0114 1B01     		lsls	r3, r3, #4
 7138 0116 0B44     		add	r3, r3, r1
 7139 0118 03F58873 		add	r3, r3, #272
 7140 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7141 011e 1A46     		mov	r2, r3
 7142 0120 1346     		mov	r3, r2
 7143 0122 5B00     		lsls	r3, r3, #1
 7144 0124 1344     		add	r3, r3, r2
 7145 0126 1B01     		lsls	r3, r3, #4
 7146 0128 03F5CC73 		add	r3, r3, #408
 7147 012c D7F88025 		ldr	r2, [r7, #1408]
 7148 0130 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7149              		.loc 1 920 0
 7150 0132 07F21C43 		addw	r3, r7, #1052
 7151 0136 DA61     		str	r2, [r3, #28]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 7152              		.loc 1 929 0
 7153 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7154 013c D7F88015 		ldr	r1, [r7, #1408]
 7155 0140 1346     		mov	r3, r2
 7156 0142 DB00     		lsls	r3, r3, #3
 7157 0144 9B1A     		subs	r3, r3, r2
 7158 0146 1B01     		lsls	r3, r3, #4
 7159 0148 0B44     		add	r3, r3, r1
 7160 014a 03F58873 		add	r3, r3, #272
 7161 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7162 0150 1A46     		mov	r2, r3
 7163 0152 1346     		mov	r3, r2
 7164 0154 5B00     		lsls	r3, r3, #1
 7165 0156 1344     		add	r3, r3, r2
 7166 0158 1B01     		lsls	r3, r3, #4
 7167 015a 03F5D073 		add	r3, r3, #416
 7168 015e D7F88025 		ldr	r2, [r7, #1408]
 7169 0162 1344     		add	r3, r3, r2
 7170 0164 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7171              		.loc 1 920 0
 7172 0166 07F21C43 		addw	r3, r7, #1052
 7173 016a 1A62     		str	r2, [r3, #32]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 7174              		.loc 1 930 0
 7175 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7176 0170 1346     		mov	r3, r2
 7177 0172 DB00     		lsls	r3, r3, #3
 7178 0174 9B1A     		subs	r3, r3, r2
 7179 0176 1B01     		lsls	r3, r3, #4
 7180 0178 E033     		adds	r3, r3, #224
 7181 017a D7F88025 		ldr	r2, [r7, #1408]
 7182 017e 1344     		add	r3, r3, r2
 7183 0180 DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7184              		.loc 1 920 0
 7185 0182 07F21C43 		addw	r3, r7, #1052
 7186 0186 5A62     		str	r2, [r3, #36]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 170


 7187              		.loc 1 931 0
 7188 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7189 018c 1346     		mov	r3, r2
 7190 018e DB00     		lsls	r3, r3, #3
 7191 0190 9B1A     		subs	r3, r3, r2
 7192 0192 1B01     		lsls	r3, r3, #4
 7193 0194 E033     		adds	r3, r3, #224
 7194 0196 D7F88025 		ldr	r2, [r7, #1408]
 7195 019a 1344     		add	r3, r3, r2
 7196 019c 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7197              		.loc 1 920 0
 7198 019e 07F21C43 		addw	r3, r7, #1052
 7199 01a2 9A62     		str	r2, [r3, #40]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7200              		.loc 1 932 0
 7201 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7202 01a8 1346     		mov	r3, r2
 7203 01aa DB00     		lsls	r3, r3, #3
 7204 01ac 9B1A     		subs	r3, r3, r2
 7205 01ae 1B01     		lsls	r3, r3, #4
 7206 01b0 E833     		adds	r3, r3, #232
 7207 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7208 01b6 1344     		add	r3, r3, r2
 7209 01b8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7210              		.loc 1 920 0
 7211 01ba 07F21C43 		addw	r3, r7, #1052
 7212 01be DA62     		str	r2, [r3, #44]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7213              		.loc 1 933 0
 7214 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7215 01c4 1346     		mov	r3, r2
 7216 01c6 DB00     		lsls	r3, r3, #3
 7217 01c8 9B1A     		subs	r3, r3, r2
 7218 01ca 1B01     		lsls	r3, r3, #4
 7219 01cc 03F58473 		add	r3, r3, #264
 7220 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7221 01d4 1344     		add	r3, r3, r2
 7222 01d6 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7223              		.loc 1 920 0
 7224 01d8 07F21C43 		addw	r3, r7, #1052
 7225 01dc 1A63     		str	r2, [r3, #48]
 934:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7226              		.loc 1 934 0
 7227 01de D7F88035 		ldr	r3, [r7, #1408]
 7228 01e2 03F5F872 		add	r2, r3, #496
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7229              		.loc 1 920 0
 7230 01e6 07F21C43 		addw	r3, r7, #1052
 7231 01ea 5A63     		str	r2, [r3, #52]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7232              		.loc 1 935 0
 7233 01ec D7F88035 		ldr	r3, [r7, #1408]
 7234 01f0 03F5FF72 		add	r2, r3, #510
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 171


 7235              		.loc 1 920 0
 7236 01f4 07F21C43 		addw	r3, r7, #1052
 7237 01f8 9A63     		str	r2, [r3, #56]
 936:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7238              		.loc 1 936 0
 7239 01fa D7F88035 		ldr	r3, [r7, #1408]
 7240 01fe 03F5FA72 		add	r2, r3, #500
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7241              		.loc 1 920 0
 7242 0202 07F21C43 		addw	r3, r7, #1052
 7243 0206 DA63     		str	r2, [r3, #60]
 937:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7244              		.loc 1 937 0
 7245 0208 D7F88035 		ldr	r3, [r7, #1408]
 7246 020c 03F5FE72 		add	r2, r3, #508
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7247              		.loc 1 920 0
 7248 0210 07F21C43 		addw	r3, r7, #1052
 7249 0214 1A64     		str	r2, [r3, #64]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7250              		.loc 1 938 0
 7251 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7252 021a D7F88015 		ldr	r1, [r7, #1408]
 7253 021e 1346     		mov	r3, r2
 7254 0220 DB00     		lsls	r3, r3, #3
 7255 0222 9B1A     		subs	r3, r3, r2
 7256 0224 1B01     		lsls	r3, r3, #4
 7257 0226 0B44     		add	r3, r3, r1
 7258 0228 03F58873 		add	r3, r3, #272
 7259 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7260 022e 1A46     		mov	r2, r3
 7261 0230 1346     		mov	r3, r2
 7262 0232 5B00     		lsls	r3, r3, #1
 7263 0234 1344     		add	r3, r3, r2
 7264 0236 1B01     		lsls	r3, r3, #4
 7265 0238 03F5D873 		add	r3, r3, #432
 7266 023c D7F88025 		ldr	r2, [r7, #1408]
 7267 0240 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7268              		.loc 1 920 0
 7269 0242 07F21C43 		addw	r3, r7, #1052
 7270 0246 5A64     		str	r2, [r3, #68]
 939:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7271              		.loc 1 939 0
 7272 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7273 024c D7F88015 		ldr	r1, [r7, #1408]
 7274 0250 1346     		mov	r3, r2
 7275 0252 DB00     		lsls	r3, r3, #3
 7276 0254 9B1A     		subs	r3, r3, r2
 7277 0256 1B01     		lsls	r3, r3, #4
 7278 0258 0B44     		add	r3, r3, r1
 7279 025a 03F58873 		add	r3, r3, #272
 7280 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7281 0260 1A46     		mov	r2, r3
 7282 0262 1346     		mov	r3, r2
 7283 0264 5B00     		lsls	r3, r3, #1
 7284 0266 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 172


 7285 0268 1B01     		lsls	r3, r3, #4
 7286 026a 03F5D873 		add	r3, r3, #432
 7287 026e D7F88025 		ldr	r2, [r7, #1408]
 7288 0272 1344     		add	r3, r3, r2
 7289 0274 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7290              		.loc 1 920 0
 7291 0276 07F21C43 		addw	r3, r7, #1052
 7292 027a 9A64     		str	r2, [r3, #72]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7293              		.loc 1 940 0
 7294 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7295 0280 1346     		mov	r3, r2
 7296 0282 DB00     		lsls	r3, r3, #3
 7297 0284 9B1A     		subs	r3, r3, r2
 7298 0286 1B01     		lsls	r3, r3, #4
 7299 0288 E033     		adds	r3, r3, #224
 7300 028a D7F88025 		ldr	r2, [r7, #1408]
 7301 028e 1344     		add	r3, r3, r2
 7302 0290 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7303              		.loc 1 920 0
 7304 0292 07F21C43 		addw	r3, r7, #1052
 7305 0296 DA64     		str	r2, [r3, #76]
 941:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7306              		.loc 1 941 0
 7307 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7308 029c 1346     		mov	r3, r2
 7309 029e DB00     		lsls	r3, r3, #3
 7310 02a0 9B1A     		subs	r3, r3, r2
 7311 02a2 1B01     		lsls	r3, r3, #4
 7312 02a4 F033     		adds	r3, r3, #240
 7313 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7314 02aa 1344     		add	r3, r3, r2
 7315 02ac 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7316              		.loc 1 920 0
 7317 02ae 07F21C43 		addw	r3, r7, #1052
 7318 02b2 1A65     		str	r2, [r3, #80]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7319              		.loc 1 942 0
 7320 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7321 02b8 03F1A102 		add	r2, r3, #161
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7322              		.loc 1 920 0
 7323 02bc 07F21C43 		addw	r3, r7, #1052
 7324 02c0 5A65     		str	r2, [r3, #84]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7325              		.loc 1 943 0
 7326 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7327 02c6 03F52872 		add	r2, r3, #672
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7328              		.loc 1 920 0
 7329 02ca 07F21C43 		addw	r3, r7, #1052
 7330 02ce 9A65     		str	r2, [r3, #88]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7331              		.loc 1 944 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 173


 7332 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7333 02d4 03F52972 		add	r2, r3, #676
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7334              		.loc 1 920 0
 7335 02d8 07F21C43 		addw	r3, r7, #1052
 7336 02dc DA65     		str	r2, [r3, #92]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7337              		.loc 1 945 0
 7338 02de D7F88035 		ldr	r3, [r7, #1408]
 7339 02e2 03F52A72 		add	r2, r3, #680
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7340              		.loc 1 920 0
 7341 02e6 07F21C43 		addw	r3, r7, #1052
 7342 02ea 1A66     		str	r2, [r3, #96]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7343              		.loc 1 946 0
 7344 02ec D7F88035 		ldr	r3, [r7, #1408]
 7345 02f0 03F52B72 		add	r2, r3, #684
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7346              		.loc 1 920 0
 7347 02f4 07F21C43 		addw	r3, r7, #1052
 7348 02f8 5A66     		str	r2, [r3, #100]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7349              		.loc 1 947 0
 7350 02fa D7F88035 		ldr	r3, [r7, #1408]
 7351 02fe 03F2FF12 		addw	r2, r3, #511
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7352              		.loc 1 920 0
 7353 0302 07F21C43 		addw	r3, r7, #1052
 7354 0306 9A66     		str	r2, [r3, #104]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7355              		.loc 1 948 0
 7356 0308 D7F88035 		ldr	r3, [r7, #1408]
 7357 030c 03F1A702 		add	r2, r3, #167
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7358              		.loc 1 920 0
 7359 0310 07F21C43 		addw	r3, r7, #1052
 7360 0314 DA66     		str	r2, [r3, #108]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7361              		.loc 1 949 0
 7362 0316 D7F88035 		ldr	r3, [r7, #1408]
 7363 031a 03F50072 		add	r2, r3, #512
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7364              		.loc 1 920 0
 7365 031e 07F21C43 		addw	r3, r7, #1052
 7366 0322 1A67     		str	r2, [r3, #112]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7367              		.loc 1 950 0
 7368 0324 D7F88035 		ldr	r3, [r7, #1408]
 7369 0328 03F22622 		addw	r2, r3, #550
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7370              		.loc 1 920 0
 7371 032c 07F21C43 		addw	r3, r7, #1052
 7372 0330 5A67     		str	r2, [r3, #116]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7373              		.loc 1 951 0
 7374 0332 D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 174


 7375 0336 03F1A802 		add	r2, r3, #168
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7376              		.loc 1 920 0
 7377 033a 07F21C43 		addw	r3, r7, #1052
 7378 033e 9A67     		str	r2, [r3, #120]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7379              		.loc 1 952 0
 7380 0340 D7F88035 		ldr	r3, [r7, #1408]
 7381 0344 03F50872 		add	r2, r3, #544
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7382              		.loc 1 920 0
 7383 0348 07F21C43 		addw	r3, r7, #1052
 7384 034c DA67     		str	r2, [r3, #124]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7385              		.loc 1 953 0
 7386 034e D7F88035 		ldr	r3, [r7, #1408]
 7387 0352 03F20122 		addw	r2, r3, #513
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7388              		.loc 1 920 0
 7389 0356 07F21C43 		addw	r3, r7, #1052
 7390 035a C3F88020 		str	r2, [r3, #128]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7391              		.loc 1 954 0
 7392 035e D7F88035 		ldr	r3, [r7, #1408]
 7393 0362 03F20222 		addw	r2, r3, #514
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7394              		.loc 1 920 0
 7395 0366 07F21C43 		addw	r3, r7, #1052
 7396 036a C3F88420 		str	r2, [r3, #132]
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7397              		.loc 1 955 0
 7398 036e D7F88035 		ldr	r3, [r7, #1408]
 7399 0372 03F1AB02 		add	r2, r3, #171
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7400              		.loc 1 920 0
 7401 0376 07F21C43 		addw	r3, r7, #1052
 7402 037a C3F88820 		str	r2, [r3, #136]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7403              		.loc 1 956 0
 7404 037e D7F88035 		ldr	r3, [r7, #1408]
 7405 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7406 0386 1233     		adds	r3, r3, #18
 7407 0388 5B01     		lsls	r3, r3, #5
 7408 038a D7F88025 		ldr	r2, [r7, #1408]
 7409 038e 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7410              		.loc 1 920 0
 7411 0390 07F21C43 		addw	r3, r7, #1052
 7412 0394 C3F88C20 		str	r2, [r3, #140]
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7413              		.loc 1 959 0
 7414 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7415 039c 1346     		mov	r3, r2
 7416 039e DB00     		lsls	r3, r3, #3
 7417 03a0 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 175


 7418 03a2 1B01     		lsls	r3, r3, #4
 7419 03a4 03F58873 		add	r3, r3, #272
 7420 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7421 03ac 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7422              		.loc 1 920 0
 7423 03ae 07F21C43 		addw	r3, r7, #1052
 7424 03b2 C3F89020 		str	r2, [r3, #144]
 960:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7425              		.loc 1 960 0
 7426 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7427 03ba 1346     		mov	r3, r2
 7428 03bc DB00     		lsls	r3, r3, #3
 7429 03be 9B1A     		subs	r3, r3, r2
 7430 03c0 1B01     		lsls	r3, r3, #4
 7431 03c2 E033     		adds	r3, r3, #224
 7432 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7433 03c8 1344     		add	r3, r3, r2
 7434 03ca 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7435              		.loc 1 920 0
 7436 03cc 07F21C43 		addw	r3, r7, #1052
 7437 03d0 C3F89420 		str	r2, [r3, #148]
 961:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7438              		.loc 1 961 0
 7439 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7440 03d8 1346     		mov	r3, r2
 7441 03da DB00     		lsls	r3, r3, #3
 7442 03dc 9B1A     		subs	r3, r3, r2
 7443 03de 1B01     		lsls	r3, r3, #4
 7444 03e0 03F58873 		add	r3, r3, #272
 7445 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7446 03e8 1344     		add	r3, r3, r2
 7447 03ea 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7448              		.loc 1 920 0
 7449 03ec 07F21C43 		addw	r3, r7, #1052
 7450 03f0 C3F89820 		str	r2, [r3, #152]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7451              		.loc 1 962 0
 7452 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7453 03f8 1346     		mov	r3, r2
 7454 03fa DB00     		lsls	r3, r3, #3
 7455 03fc 9B1A     		subs	r3, r3, r2
 7456 03fe 1B01     		lsls	r3, r3, #4
 7457 0400 03F58873 		add	r3, r3, #272
 7458 0404 D7F88025 		ldr	r2, [r7, #1408]
 7459 0408 1344     		add	r3, r3, r2
 7460 040a 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7461              		.loc 1 920 0
 7462 040c 07F21C43 		addw	r3, r7, #1052
 7463 0410 C3F89C20 		str	r2, [r3, #156]
 963:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7464              		.loc 1 963 0
 7465 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7466 0418 D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 176


 7467 041c 1346     		mov	r3, r2
 7468 041e DB00     		lsls	r3, r3, #3
 7469 0420 9B1A     		subs	r3, r3, r2
 7470 0422 1B01     		lsls	r3, r3, #4
 7471 0424 0B44     		add	r3, r3, r1
 7472 0426 03F58873 		add	r3, r3, #272
 7473 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7474 042c 1A46     		mov	r2, r3
 7475 042e 1346     		mov	r3, r2
 7476 0430 5B00     		lsls	r3, r3, #1
 7477 0432 1344     		add	r3, r3, r2
 7478 0434 1B01     		lsls	r3, r3, #4
 7479 0436 03F5D873 		add	r3, r3, #432
 7480 043a D7F88025 		ldr	r2, [r7, #1408]
 7481 043e 1344     		add	r3, r3, r2
 7482 0440 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7483              		.loc 1 920 0
 7484 0442 07F21C43 		addw	r3, r7, #1052
 7485 0446 C3F8A020 		str	r2, [r3, #160]
 964:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7486              		.loc 1 964 0
 7487 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7488 044e D7F88015 		ldr	r1, [r7, #1408]
 7489 0452 1346     		mov	r3, r2
 7490 0454 DB00     		lsls	r3, r3, #3
 7491 0456 9B1A     		subs	r3, r3, r2
 7492 0458 1B01     		lsls	r3, r3, #4
 7493 045a 0B44     		add	r3, r3, r1
 7494 045c 03F58873 		add	r3, r3, #272
 7495 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7496 0462 1A46     		mov	r2, r3
 7497 0464 1346     		mov	r3, r2
 7498 0466 5B00     		lsls	r3, r3, #1
 7499 0468 1344     		add	r3, r3, r2
 7500 046a 1B01     		lsls	r3, r3, #4
 7501 046c 03F5D873 		add	r3, r3, #432
 7502 0470 D7F88025 		ldr	r2, [r7, #1408]
 7503 0474 1344     		add	r3, r3, r2
 7504 0476 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7505              		.loc 1 920 0
 7506 0478 07F21C43 		addw	r3, r7, #1052
 7507 047c C3F8A420 		str	r2, [r3, #164]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7508              		.loc 1 965 0
 7509 0480 D7F88035 		ldr	r3, [r7, #1408]
 7510 0484 03F1A902 		add	r2, r3, #169
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7511              		.loc 1 920 0
 7512 0488 07F21C43 		addw	r3, r7, #1052
 7513 048c C3F8A820 		str	r2, [r3, #168]
 966:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7514              		.loc 1 966 0
 7515 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7516 0494 1346     		mov	r3, r2
 7517 0496 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 177


 7518 0498 9B1A     		subs	r3, r3, r2
 7519 049a 1B01     		lsls	r3, r3, #4
 7520 049c B033     		adds	r3, r3, #176
 7521 049e D7F88025 		ldr	r2, [r7, #1408]
 7522 04a2 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7523              		.loc 1 920 0
 7524 04a4 07F21C43 		addw	r3, r7, #1052
 7525 04a8 C3F8AC20 		str	r2, [r3, #172]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7526              		.loc 1 967 0
 7527 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7528 04b0 1346     		mov	r3, r2
 7529 04b2 DB00     		lsls	r3, r3, #3
 7530 04b4 9B1A     		subs	r3, r3, r2
 7531 04b6 1B01     		lsls	r3, r3, #4
 7532 04b8 B833     		adds	r3, r3, #184
 7533 04ba D7F88025 		ldr	r2, [r7, #1408]
 7534 04be 1344     		add	r3, r3, r2
 7535 04c0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7536              		.loc 1 920 0
 7537 04c2 07F21C43 		addw	r3, r7, #1052
 7538 04c6 C3F8B020 		str	r2, [r3, #176]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7539              		.loc 1 968 0
 7540 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7541 04ce 1346     		mov	r3, r2
 7542 04d0 DB00     		lsls	r3, r3, #3
 7543 04d2 9B1A     		subs	r3, r3, r2
 7544 04d4 1B01     		lsls	r3, r3, #4
 7545 04d6 E033     		adds	r3, r3, #224
 7546 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7547 04dc 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7548              		.loc 1 920 0
 7549 04de 07F21C43 		addw	r3, r7, #1052
 7550 04e2 C3F8B420 		str	r2, [r3, #180]
 969:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7551              		.loc 1 969 0
 7552 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7553 04ea 1346     		mov	r3, r2
 7554 04ec DB00     		lsls	r3, r3, #3
 7555 04ee 9B1A     		subs	r3, r3, r2
 7556 04f0 1B01     		lsls	r3, r3, #4
 7557 04f2 03F58473 		add	r3, r3, #264
 7558 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7559 04fa 1344     		add	r3, r3, r2
 7560 04fc 9A1D     		adds	r2, r3, #6
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7561              		.loc 1 920 0
 7562 04fe 07F21C43 		addw	r3, r7, #1052
 7563 0502 C3F8B820 		str	r2, [r3, #184]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7564              		.loc 1 970 0
 7565 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7566 050a 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 178


 7567 050c DB00     		lsls	r3, r3, #3
 7568 050e 9B1A     		subs	r3, r3, r2
 7569 0510 1B01     		lsls	r3, r3, #4
 7570 0512 03F58473 		add	r3, r3, #264
 7571 0516 D7F88025 		ldr	r2, [r7, #1408]
 7572 051a 1344     		add	r3, r3, r2
 7573 051c DA1D     		adds	r2, r3, #7
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7574              		.loc 1 920 0
 7575 051e 07F21C43 		addw	r3, r7, #1052
 7576 0522 C3F8BC20 		str	r2, [r3, #188]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7577              		.loc 1 971 0
 7578 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7579 052a D7F88015 		ldr	r1, [r7, #1408]
 7580 052e 1346     		mov	r3, r2
 7581 0530 DB00     		lsls	r3, r3, #3
 7582 0532 9B1A     		subs	r3, r3, r2
 7583 0534 1B01     		lsls	r3, r3, #4
 7584 0536 0B44     		add	r3, r3, r1
 7585 0538 03F58873 		add	r3, r3, #272
 7586 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7587 053e 1A46     		mov	r2, r3
 7588 0540 1346     		mov	r3, r2
 7589 0542 5B00     		lsls	r3, r3, #1
 7590 0544 1344     		add	r3, r3, r2
 7591 0546 1B01     		lsls	r3, r3, #4
 7592 0548 03F5C873 		add	r3, r3, #400
 7593 054c D7F88025 		ldr	r2, [r7, #1408]
 7594 0550 1344     		add	r3, r3, r2
 7595 0552 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7596              		.loc 1 920 0
 7597 0554 07F21C43 		addw	r3, r7, #1052
 7598 0558 C3F8C020 		str	r2, [r3, #192]
 972:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7599              		.loc 1 972 0
 7600 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7601 0560 D7F88015 		ldr	r1, [r7, #1408]
 7602 0564 1346     		mov	r3, r2
 7603 0566 DB00     		lsls	r3, r3, #3
 7604 0568 9B1A     		subs	r3, r3, r2
 7605 056a 1B01     		lsls	r3, r3, #4
 7606 056c 0B44     		add	r3, r3, r1
 7607 056e 03F58873 		add	r3, r3, #272
 7608 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7609 0574 1A46     		mov	r2, r3
 7610 0576 1346     		mov	r3, r2
 7611 0578 5B00     		lsls	r3, r3, #1
 7612 057a 1344     		add	r3, r3, r2
 7613 057c 1B01     		lsls	r3, r3, #4
 7614 057e 03F5CC73 		add	r3, r3, #408
 7615 0582 D7F88025 		ldr	r2, [r7, #1408]
 7616 0586 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7617              		.loc 1 920 0
 7618 0588 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 179


 7619 058c C3F8C420 		str	r2, [r3, #196]
 973:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7620              		.loc 1 973 0
 7621 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7622 0594 D7F88015 		ldr	r1, [r7, #1408]
 7623 0598 1346     		mov	r3, r2
 7624 059a DB00     		lsls	r3, r3, #3
 7625 059c 9B1A     		subs	r3, r3, r2
 7626 059e 1B01     		lsls	r3, r3, #4
 7627 05a0 0B44     		add	r3, r3, r1
 7628 05a2 03F58873 		add	r3, r3, #272
 7629 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7630 05a8 1A46     		mov	r2, r3
 7631 05aa 1346     		mov	r3, r2
 7632 05ac 5B00     		lsls	r3, r3, #1
 7633 05ae 1344     		add	r3, r3, r2
 7634 05b0 1B01     		lsls	r3, r3, #4
 7635 05b2 03F5D073 		add	r3, r3, #416
 7636 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7637 05ba 1344     		add	r3, r3, r2
 7638 05bc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7639              		.loc 1 920 0
 7640 05be 07F21C43 		addw	r3, r7, #1052
 7641 05c2 C3F8C820 		str	r2, [r3, #200]
 974:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7642              		.loc 1 974 0
 7643 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7644 05ca 1346     		mov	r3, r2
 7645 05cc DB00     		lsls	r3, r3, #3
 7646 05ce 9B1A     		subs	r3, r3, r2
 7647 05d0 1B01     		lsls	r3, r3, #4
 7648 05d2 E033     		adds	r3, r3, #224
 7649 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7650 05d8 1344     		add	r3, r3, r2
 7651 05da DA1C     		adds	r2, r3, #3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7652              		.loc 1 920 0
 7653 05dc 07F21C43 		addw	r3, r7, #1052
 7654 05e0 C3F8CC20 		str	r2, [r3, #204]
 975:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7655              		.loc 1 975 0
 7656 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7657 05e8 1346     		mov	r3, r2
 7658 05ea DB00     		lsls	r3, r3, #3
 7659 05ec 9B1A     		subs	r3, r3, r2
 7660 05ee 1B01     		lsls	r3, r3, #4
 7661 05f0 E033     		adds	r3, r3, #224
 7662 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7663 05f6 1344     		add	r3, r3, r2
 7664 05f8 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7665              		.loc 1 920 0
 7666 05fa 07F21C43 		addw	r3, r7, #1052
 7667 05fe C3F8D020 		str	r2, [r3, #208]
 976:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7668              		.loc 1 976 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 180


 7669 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7670 0606 1346     		mov	r3, r2
 7671 0608 DB00     		lsls	r3, r3, #3
 7672 060a 9B1A     		subs	r3, r3, r2
 7673 060c 1B01     		lsls	r3, r3, #4
 7674 060e E833     		adds	r3, r3, #232
 7675 0610 D7F88025 		ldr	r2, [r7, #1408]
 7676 0614 1344     		add	r3, r3, r2
 7677 0616 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7678              		.loc 1 920 0
 7679 0618 07F21C43 		addw	r3, r7, #1052
 7680 061c C3F8D420 		str	r2, [r3, #212]
 977:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7681              		.loc 1 977 0
 7682 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7683 0624 1346     		mov	r3, r2
 7684 0626 DB00     		lsls	r3, r3, #3
 7685 0628 9B1A     		subs	r3, r3, r2
 7686 062a 1B01     		lsls	r3, r3, #4
 7687 062c 03F58473 		add	r3, r3, #264
 7688 0630 D7F88025 		ldr	r2, [r7, #1408]
 7689 0634 1344     		add	r3, r3, r2
 7690 0636 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7691              		.loc 1 920 0
 7692 0638 07F21C43 		addw	r3, r7, #1052
 7693 063c C3F8D820 		str	r2, [r3, #216]
 978:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7694              		.loc 1 978 0
 7695 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7696 0644 D7F88015 		ldr	r1, [r7, #1408]
 7697 0648 1346     		mov	r3, r2
 7698 064a DB00     		lsls	r3, r3, #3
 7699 064c 9B1A     		subs	r3, r3, r2
 7700 064e 1B01     		lsls	r3, r3, #4
 7701 0650 0B44     		add	r3, r3, r1
 7702 0652 03F58873 		add	r3, r3, #272
 7703 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7704 0658 1A46     		mov	r2, r3
 7705 065a 1346     		mov	r3, r2
 7706 065c 5B00     		lsls	r3, r3, #1
 7707 065e 1344     		add	r3, r3, r2
 7708 0660 1B01     		lsls	r3, r3, #4
 7709 0662 03F5D873 		add	r3, r3, #432
 7710 0666 D7F88025 		ldr	r2, [r7, #1408]
 7711 066a 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7712              		.loc 1 920 0
 7713 066c 07F21C43 		addw	r3, r7, #1052
 7714 0670 C3F8DC20 		str	r2, [r3, #220]
 979:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7715              		.loc 1 979 0
 7716 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7717 0678 D7F88015 		ldr	r1, [r7, #1408]
 7718 067c 1346     		mov	r3, r2
 7719 067e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 181


 7720 0680 9B1A     		subs	r3, r3, r2
 7721 0682 1B01     		lsls	r3, r3, #4
 7722 0684 0B44     		add	r3, r3, r1
 7723 0686 03F58873 		add	r3, r3, #272
 7724 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7725 068c 1A46     		mov	r2, r3
 7726 068e 1346     		mov	r3, r2
 7727 0690 5B00     		lsls	r3, r3, #1
 7728 0692 1344     		add	r3, r3, r2
 7729 0694 1B01     		lsls	r3, r3, #4
 7730 0696 03F5D873 		add	r3, r3, #432
 7731 069a D7F88025 		ldr	r2, [r7, #1408]
 7732 069e 1344     		add	r3, r3, r2
 7733 06a0 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7734              		.loc 1 920 0
 7735 06a2 07F21C43 		addw	r3, r7, #1052
 7736 06a6 C3F8E020 		str	r2, [r3, #224]
 980:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7737              		.loc 1 980 0
 7738 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7739 06ae 1346     		mov	r3, r2
 7740 06b0 DB00     		lsls	r3, r3, #3
 7741 06b2 9B1A     		subs	r3, r3, r2
 7742 06b4 1B01     		lsls	r3, r3, #4
 7743 06b6 E033     		adds	r3, r3, #224
 7744 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7745 06bc 1344     		add	r3, r3, r2
 7746 06be 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7747              		.loc 1 920 0
 7748 06c0 07F21C43 		addw	r3, r7, #1052
 7749 06c4 C3F8E420 		str	r2, [r3, #228]
 981:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7750              		.loc 1 981 0
 7751 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7752 06cc 1346     		mov	r3, r2
 7753 06ce DB00     		lsls	r3, r3, #3
 7754 06d0 9B1A     		subs	r3, r3, r2
 7755 06d2 1B01     		lsls	r3, r3, #4
 7756 06d4 F033     		adds	r3, r3, #240
 7757 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7758 06da 1344     		add	r3, r3, r2
 7759 06dc 1A1D     		adds	r2, r3, #4
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7760              		.loc 1 920 0
 7761 06de 07F21C43 		addw	r3, r7, #1052
 7762 06e2 C3F8E820 		str	r2, [r3, #232]
 982:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7763              		.loc 1 982 0
 7764 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7765 06ea 1346     		mov	r3, r2
 7766 06ec DB00     		lsls	r3, r3, #3
 7767 06ee 9B1A     		subs	r3, r3, r2
 7768 06f0 1B01     		lsls	r3, r3, #4
 7769 06f2 03F58873 		add	r3, r3, #272
 7770 06f6 D7F88025 		ldr	r2, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 182


 7771 06fa 1A44     		add	r2, r2, r3
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7772              		.loc 1 920 0
 7773 06fc 07F21C43 		addw	r3, r7, #1052
 7774 0700 C3F8EC20 		str	r2, [r3, #236]
 983:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7775              		.loc 1 983 0
 7776 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7777 0708 1346     		mov	r3, r2
 7778 070a DB00     		lsls	r3, r3, #3
 7779 070c 9B1A     		subs	r3, r3, r2
 7780 070e 1B01     		lsls	r3, r3, #4
 7781 0710 E033     		adds	r3, r3, #224
 7782 0712 D7F88025 		ldr	r2, [r7, #1408]
 7783 0716 1344     		add	r3, r3, r2
 7784 0718 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7785              		.loc 1 920 0
 7786 071a 07F21C43 		addw	r3, r7, #1052
 7787 071e C3F8F020 		str	r2, [r3, #240]
 984:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7788              		.loc 1 984 0
 7789 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7790 0726 1346     		mov	r3, r2
 7791 0728 DB00     		lsls	r3, r3, #3
 7792 072a 9B1A     		subs	r3, r3, r2
 7793 072c 1B01     		lsls	r3, r3, #4
 7794 072e 03F58873 		add	r3, r3, #272
 7795 0732 D7F88025 		ldr	r2, [r7, #1408]
 7796 0736 1344     		add	r3, r3, r2
 7797 0738 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7798              		.loc 1 920 0
 7799 073a 07F21C43 		addw	r3, r7, #1052
 7800 073e C3F8F420 		str	r2, [r3, #244]
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7801              		.loc 1 985 0
 7802 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7803 0746 1346     		mov	r3, r2
 7804 0748 DB00     		lsls	r3, r3, #3
 7805 074a 9B1A     		subs	r3, r3, r2
 7806 074c 1B01     		lsls	r3, r3, #4
 7807 074e 03F58873 		add	r3, r3, #272
 7808 0752 D7F88025 		ldr	r2, [r7, #1408]
 7809 0756 1344     		add	r3, r3, r2
 7810 0758 9A1C     		adds	r2, r3, #2
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7811              		.loc 1 920 0
 7812 075a 07F21C43 		addw	r3, r7, #1052
 7813 075e C3F8F820 		str	r2, [r3, #248]
 986:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7814              		.loc 1 986 0
 7815 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7816 0766 D7F88015 		ldr	r1, [r7, #1408]
 7817 076a 1346     		mov	r3, r2
 7818 076c DB00     		lsls	r3, r3, #3
 7819 076e 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 183


 7820 0770 1B01     		lsls	r3, r3, #4
 7821 0772 0B44     		add	r3, r3, r1
 7822 0774 03F58873 		add	r3, r3, #272
 7823 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7824 077a 1A46     		mov	r2, r3
 7825 077c 1346     		mov	r3, r2
 7826 077e 5B00     		lsls	r3, r3, #1
 7827 0780 1344     		add	r3, r3, r2
 7828 0782 1B01     		lsls	r3, r3, #4
 7829 0784 03F5D873 		add	r3, r3, #432
 7830 0788 D7F88025 		ldr	r2, [r7, #1408]
 7831 078c 1344     		add	r3, r3, r2
 7832 078e 5A1C     		adds	r2, r3, #1
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7833              		.loc 1 920 0
 7834 0790 07F21C43 		addw	r3, r7, #1052
 7835 0794 C3F8FC20 		str	r2, [r3, #252]
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7836              		.loc 1 987 0
 7837 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7838 079c D7F88015 		ldr	r1, [r7, #1408]
 7839 07a0 1346     		mov	r3, r2
 7840 07a2 DB00     		lsls	r3, r3, #3
 7841 07a4 9B1A     		subs	r3, r3, r2
 7842 07a6 1B01     		lsls	r3, r3, #4
 7843 07a8 0B44     		add	r3, r3, r1
 7844 07aa 03F58873 		add	r3, r3, #272
 7845 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7846 07b0 1A46     		mov	r2, r3
 7847 07b2 1346     		mov	r3, r2
 7848 07b4 5B00     		lsls	r3, r3, #1
 7849 07b6 1344     		add	r3, r3, r2
 7850 07b8 1B01     		lsls	r3, r3, #4
 7851 07ba 03F5D873 		add	r3, r3, #432
 7852 07be D7F88025 		ldr	r2, [r7, #1408]
 7853 07c2 1344     		add	r3, r3, r2
 7854 07c4 5A1D     		adds	r2, r3, #5
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7855              		.loc 1 920 0
 7856 07c6 07F21C43 		addw	r3, r7, #1052
 7857 07ca C3F80021 		str	r2, [r3, #256]
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7858              		.loc 1 989 0
 7859 07ce D7F88035 		ldr	r3, [r7, #1408]
 7860 07d2 03F5C872 		add	r2, r3, #400
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7861              		.loc 1 920 0
 7862 07d6 07F21C43 		addw	r3, r7, #1052
 7863 07da C3F80421 		str	r2, [r3, #260]
 990:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7864              		.loc 1 990 0
 7865 07de D7F88035 		ldr	r3, [r7, #1408]
 7866 07e2 03F5E072 		add	r2, r3, #448
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7867              		.loc 1 920 0
 7868 07e6 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 184


 7869 07ea C3F80821 		str	r2, [r3, #264]
 991:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7870              		.loc 1 991 0
 7871 07ee D7F88035 		ldr	r3, [r7, #1408]
 7872 07f2 03F22722 		addw	r2, r3, #551
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7873              		.loc 1 920 0
 7874 07f6 07F21C43 		addw	r3, r7, #1052
 7875 07fa C3F80C21 		str	r2, [r3, #268]
 992:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7876              		.loc 1 992 0
 7877 07fe D7F88035 		ldr	r3, [r7, #1408]
 7878 0802 03F50A72 		add	r2, r3, #552
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7879              		.loc 1 920 0
 7880 0806 07F21C43 		addw	r3, r7, #1052
 7881 080a C3F81021 		str	r2, [r3, #272]
 993:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7882              		.loc 1 993 0
 7883 080e D7F88035 		ldr	r3, [r7, #1408]
 7884 0812 03F22E22 		addw	r2, r3, #558
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7885              		.loc 1 920 0
 7886 0816 07F21C43 		addw	r3, r7, #1052
 7887 081a C3F81421 		str	r2, [r3, #276]
 994:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7888              		.loc 1 994 0
 7889 081e D7F88035 		ldr	r3, [r7, #1408]
 7890 0822 03F50D72 		add	r2, r3, #564
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7891              		.loc 1 920 0
 7892 0826 07F21C43 		addw	r3, r7, #1052
 7893 082a C3F81821 		str	r2, [r3, #280]
 995:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7894              		.loc 1 995 0
 7895 082e D7F88035 		ldr	r3, [r7, #1408]
 7896 0832 03F52C72 		add	r2, r3, #688
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7897              		.loc 1 920 0
 7898 0836 07F21C43 		addw	r3, r7, #1052
 7899 083a C3F81C21 		str	r2, [r3, #284]
 996:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7900              		.loc 1 996 0
 7901 083e D7F88035 		ldr	r3, [r7, #1408]
 7902 0842 03F2B222 		addw	r2, r3, #690
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7903              		.loc 1 920 0
 7904 0846 07F21C43 		addw	r3, r7, #1052
 7905 084a C3F82021 		str	r2, [r3, #288]
 997:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7906              		.loc 1 997 0
 7907 084e D7F88035 		ldr	r3, [r7, #1408]
 7908 0852 03F52D72 		add	r2, r3, #692
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7909              		.loc 1 920 0
 7910 0856 07F21C43 		addw	r3, r7, #1052
 7911 085a C3F82421 		str	r2, [r3, #292]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 185


 998:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7912              		.loc 1 998 0
 7913 085e D7F88035 		ldr	r3, [r7, #1408]
 7914 0862 03F1AC02 		add	r2, r3, #172
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7915              		.loc 1 920 0
 7916 0866 07F21C43 		addw	r3, r7, #1052
 7917 086a C3F82821 		str	r2, [r3, #296]
 999:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7918              		.loc 1 999 0
 7919 086e D7F88035 		ldr	r3, [r7, #1408]
 7920 0872 03F53872 		add	r2, r3, #736
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7921              		.loc 1 920 0
 7922 0876 07F21C43 		addw	r3, r7, #1052
 7923 087a C3F82C21 		str	r2, [r3, #300]
1000:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.airchamber_feedback_active),
 7924              		.loc 1 1000 0
 7925 087e D7F88035 		ldr	r3, [r7, #1408]
 7926 0882 03F2DD22 		addw	r2, r3, #733
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7927              		.loc 1 920 0
 7928 0886 07F21C43 		addw	r3, r7, #1052
 7929 088a C3F83021 		str	r2, [r3, #304]
1001:..\src/command_processing.c ****         
1002:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.vibrotactile_feedback_active),              // additional wrist params
 7930              		.loc 1 1002 0
 7931 088e D7F88035 		ldr	r3, [r7, #1408]
 7932 0892 03F53772 		add	r2, r3, #732
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7933              		.loc 1 920 0
 7934 0896 07F21C43 		addw	r3, r7, #1052
 7935 089a C3F83421 		str	r2, [r3, #308]
1003:..\src/command_processing.c ****         
1004:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.master_mode_active),                        // additional master params
 7936              		.loc 1 1004 0
 7937 089e D7F88035 		ldr	r3, [r7, #1408]
 7938 08a2 03F53072 		add	r2, r3, #704
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7939              		.loc 1 920 0
 7940 08a6 07F21C43 		addw	r3, r7, #1052
 7941 08aa C3F83821 		str	r2, [r3, #312]
1005:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7942              		.loc 1 1005 0
 7943 08ae D7F88035 		ldr	r3, [r7, #1408]
 7944 08b2 03F2C122 		addw	r2, r3, #705
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7945              		.loc 1 920 0
 7946 08b6 07F21C43 		addw	r3, r7, #1052
 7947 08ba C3F83C21 		str	r2, [r3, #316]
1006:..\src/command_processing.c ****         
1007:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7948              		.loc 1 1007 0
 7949 08be D7F88035 		ldr	r3, [r7, #1408]
 7950 08c2 03F53472 		add	r2, r3, #720
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7951              		.loc 1 920 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 186


 7952 08c6 07F21C43 		addw	r3, r7, #1052
 7953 08ca C3F84021 		str	r2, [r3, #320]
1008:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7954              		.loc 1 1008 0
 7955 08ce D7F88035 		ldr	r3, [r7, #1408]
 7956 08d2 03F53572 		add	r2, r3, #724
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7957              		.loc 1 920 0
 7958 08d6 07F21C43 		addw	r3, r7, #1052
 7959 08da C3F84421 		str	r2, [r3, #324]
1009:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7960              		.loc 1 1009 0
 7961 08de D7F88035 		ldr	r3, [r7, #1408]
 7962 08e2 03F53672 		add	r2, r3, #728
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7963              		.loc 1 920 0
 7964 08e6 07F21C43 		addw	r3, r7, #1052
 7965 08ea C3F84821 		str	r2, [r3, #328]
1010:..\src/command_processing.c ****         
1011:..\src/command_processing.c **** 
1012:..\src/command_processing.c ****     };
1013:..\src/command_processing.c ****     
1014:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7966              		.loc 1 1014 0
 7967 08ee 07F57273 		add	r3, r7, #968
 7968 08f2 F64A     		ldr	r2, .L380
 7969 08f4 1846     		mov	r0, r3
 7970 08f6 1146     		mov	r1, r2
 7971 08f8 5323     		movs	r3, #83
 7972 08fa 1A46     		mov	r2, r3
 7973 08fc FFF7FEFF 		bl	memcpy
1015:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
1016:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
1017:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
1018:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
1019:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
1020:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
1021:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1022:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1023:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1024:..\src/command_processing.c ****         
1025:..\src/command_processing.c ****         // GENERIC PARAMS
1026:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1027:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1028:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1029:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1030:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1031:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1032:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1033:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1034:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1035:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
1036:..\src/command_processing.c ****         TYPE_FLAG,
1037:..\src/command_processing.c ****         
1038:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1039:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1040:..\src/command_processing.c ****     };
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 187


1041:..\src/command_processing.c **** 
1042:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7974              		.loc 1 1042 0
 7975 0900 07F55D73 		add	r3, r7, #884
 7976 0904 0122     		movs	r2, #1
 7977 0906 1A70     		strb	r2, [r3]
 7978 0908 07F55D73 		add	r3, r7, #884
 7979 090c 0322     		movs	r2, #3
 7980 090e 5A70     		strb	r2, [r3, #1]
 7981 0910 07F55D73 		add	r3, r7, #884
 7982 0914 0322     		movs	r2, #3
 7983 0916 9A70     		strb	r2, [r3, #2]
 7984 0918 07F55D73 		add	r3, r7, #884
 7985 091c 0122     		movs	r2, #1
 7986 091e DA70     		strb	r2, [r3, #3]
 7987 0920 07F55D73 		add	r3, r7, #884
 7988 0924 0122     		movs	r2, #1
 7989 0926 1A71     		strb	r2, [r3, #4]
 7990 0928 07F55D73 		add	r3, r7, #884
 7991 092c 0122     		movs	r2, #1
 7992 092e 5A71     		strb	r2, [r3, #5]
 7993 0930 07F55D73 		add	r3, r7, #884
 7994 0934 0322     		movs	r2, #3
 7995 0936 9A71     		strb	r2, [r3, #6]
 7996 0938 07F55D73 		add	r3, r7, #884
 7997 093c 0322     		movs	r2, #3
 7998 093e DA71     		strb	r2, [r3, #7]
 7999 0940 07F55D73 		add	r3, r7, #884
 8000 0944 0322     		movs	r2, #3
 8001 0946 1A72     		strb	r2, [r3, #8]
 8002 0948 07F55D73 		add	r3, r7, #884
 8003 094c 0122     		movs	r2, #1
 8004 094e 5A72     		strb	r2, [r3, #9]
 8005 0950 07F55D73 		add	r3, r7, #884
 8006 0954 0222     		movs	r2, #2
 8007 0956 9A72     		strb	r2, [r3, #10]
 8008 0958 07F55D73 		add	r3, r7, #884
 8009 095c 0222     		movs	r2, #2
 8010 095e DA72     		strb	r2, [r3, #11]
 8011 0960 07F55D73 		add	r3, r7, #884
 8012 0964 0122     		movs	r2, #1
 8013 0966 1A73     		strb	r2, [r3, #12]
 8014 0968 07F55D73 		add	r3, r7, #884
 8015 096c 0222     		movs	r2, #2
 8016 096e 5A73     		strb	r2, [r3, #13]
 8017 0970 07F55D73 		add	r3, r7, #884
 8018 0974 0122     		movs	r2, #1
 8019 0976 9A73     		strb	r2, [r3, #14]
 8020 0978 07F55D73 		add	r3, r7, #884
 8021 097c 0222     		movs	r2, #2
 8022 097e DA73     		strb	r2, [r3, #15]
 8023 0980 07F55D73 		add	r3, r7, #884
 8024 0984 0222     		movs	r2, #2
 8025 0986 1A74     		strb	r2, [r3, #16]
 8026 0988 07F55D73 		add	r3, r7, #884
 8027 098c 0122     		movs	r2, #1
 8028 098e 5A74     		strb	r2, [r3, #17]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 188


 8029 0990 07F55D73 		add	r3, r7, #884
 8030 0994 0122     		movs	r2, #1
 8031 0996 9A74     		strb	r2, [r3, #18]
 8032 0998 07F55D73 		add	r3, r7, #884
 8033 099c 0122     		movs	r2, #1
 8034 099e DA74     		strb	r2, [r3, #19]
 8035 09a0 07F55D73 		add	r3, r7, #884
 8036 09a4 0622     		movs	r2, #6
 8037 09a6 1A75     		strb	r2, [r3, #20]
 8038 09a8 07F55D73 		add	r3, r7, #884
 8039 09ac 0322     		movs	r2, #3
 8040 09ae 5A75     		strb	r2, [r3, #21]
 8041 09b0 07F55D73 		add	r3, r7, #884
 8042 09b4 0122     		movs	r2, #1
 8043 09b6 9A75     		strb	r2, [r3, #22]
 8044 09b8 07F55D73 		add	r3, r7, #884
 8045 09bc 0122     		movs	r2, #1
 8046 09be DA75     		strb	r2, [r3, #23]
 8047 09c0 07F55D73 		add	r3, r7, #884
 8048 09c4 0122     		movs	r2, #1
 8049 09c6 1A76     		strb	r2, [r3, #24]
 8050 09c8 07F55D73 		add	r3, r7, #884
 8051 09cc 0122     		movs	r2, #1
 8052 09ce 5A76     		strb	r2, [r3, #25]
 8053 09d0 07F55D73 		add	r3, r7, #884
 8054 09d4 0122     		movs	r2, #1
 8055 09d6 9A76     		strb	r2, [r3, #26]
 8056 09d8 07F55D73 		add	r3, r7, #884
 8057 09dc 0122     		movs	r2, #1
 8058 09de DA76     		strb	r2, [r3, #27]
 8059 09e0 07F55D73 		add	r3, r7, #884
 8060 09e4 0122     		movs	r2, #1
 8061 09e6 1A77     		strb	r2, [r3, #28]
 8062 09e8 07F55D73 		add	r3, r7, #884
 8063 09ec 0122     		movs	r2, #1
 8064 09ee 5A77     		strb	r2, [r3, #29]
 8065 09f0 07F55D73 		add	r3, r7, #884
 8066 09f4 0122     		movs	r2, #1
 8067 09f6 9A77     		strb	r2, [r3, #30]
 8068 09f8 07F55D73 		add	r3, r7, #884
 8069 09fc 0622     		movs	r2, #6
 8070 09fe DA77     		strb	r2, [r3, #31]
 8071 0a00 07F55D73 		add	r3, r7, #884
 8072 0a04 0122     		movs	r2, #1
 8073 0a06 83F82020 		strb	r2, [r3, #32]
 8074 0a0a 07F55D73 		add	r3, r7, #884
 8075 0a0e 0522     		movs	r2, #5
 8076 0a10 83F82120 		strb	r2, [r3, #33]
 8077 0a14 07F55D73 		add	r3, r7, #884
 8078 0a18 0122     		movs	r2, #1
 8079 0a1a 83F82220 		strb	r2, [r3, #34]
 8080 0a1e 07F55D73 		add	r3, r7, #884
 8081 0a22 0622     		movs	r2, #6
 8082 0a24 83F82320 		strb	r2, [r3, #35]
 8083 0a28 07F55D73 		add	r3, r7, #884
 8084 0a2c 0122     		movs	r2, #1
 8085 0a2e 83F82420 		strb	r2, [r3, #36]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 189


 8086 0a32 07F55D73 		add	r3, r7, #884
 8087 0a36 0122     		movs	r2, #1
 8088 0a38 83F82520 		strb	r2, [r3, #37]
 8089 0a3c 07F55D73 		add	r3, r7, #884
 8090 0a40 0122     		movs	r2, #1
 8091 0a42 83F82620 		strb	r2, [r3, #38]
 8092 0a46 07F55D73 		add	r3, r7, #884
 8093 0a4a 0122     		movs	r2, #1
 8094 0a4c 83F82720 		strb	r2, [r3, #39]
 8095 0a50 07F55D73 		add	r3, r7, #884
 8096 0a54 0322     		movs	r2, #3
 8097 0a56 83F82820 		strb	r2, [r3, #40]
 8098 0a5a 07F55D73 		add	r3, r7, #884
 8099 0a5e 0322     		movs	r2, #3
 8100 0a60 83F82920 		strb	r2, [r3, #41]
 8101 0a64 07F55D73 		add	r3, r7, #884
 8102 0a68 0122     		movs	r2, #1
 8103 0a6a 83F82A20 		strb	r2, [r3, #42]
 8104 0a6e 07F55D73 		add	r3, r7, #884
 8105 0a72 0322     		movs	r2, #3
 8106 0a74 83F82B20 		strb	r2, [r3, #43]
 8107 0a78 07F55D73 		add	r3, r7, #884
 8108 0a7c 0322     		movs	r2, #3
 8109 0a7e 83F82C20 		strb	r2, [r3, #44]
 8110 0a82 07F55D73 		add	r3, r7, #884
 8111 0a86 0122     		movs	r2, #1
 8112 0a88 83F82D20 		strb	r2, [r3, #45]
 8113 0a8c 07F55D73 		add	r3, r7, #884
 8114 0a90 0122     		movs	r2, #1
 8115 0a92 83F82E20 		strb	r2, [r3, #46]
 8116 0a96 07F55D73 		add	r3, r7, #884
 8117 0a9a 0122     		movs	r2, #1
 8118 0a9c 83F82F20 		strb	r2, [r3, #47]
 8119 0aa0 07F55D73 		add	r3, r7, #884
 8120 0aa4 0322     		movs	r2, #3
 8121 0aa6 83F83020 		strb	r2, [r3, #48]
 8122 0aaa 07F55D73 		add	r3, r7, #884
 8123 0aae 0322     		movs	r2, #3
 8124 0ab0 83F83120 		strb	r2, [r3, #49]
 8125 0ab4 07F55D73 		add	r3, r7, #884
 8126 0ab8 0322     		movs	r2, #3
 8127 0aba 83F83220 		strb	r2, [r3, #50]
 8128 0abe 07F55D73 		add	r3, r7, #884
 8129 0ac2 0122     		movs	r2, #1
 8130 0ac4 83F83320 		strb	r2, [r3, #51]
 8131 0ac8 07F55D73 		add	r3, r7, #884
 8132 0acc 0222     		movs	r2, #2
 8133 0ace 83F83420 		strb	r2, [r3, #52]
 8134 0ad2 07F55D73 		add	r3, r7, #884
 8135 0ad6 0222     		movs	r2, #2
 8136 0ad8 83F83520 		strb	r2, [r3, #53]
 8137 0adc 07F55D73 		add	r3, r7, #884
 8138 0ae0 0122     		movs	r2, #1
 8139 0ae2 83F83620 		strb	r2, [r3, #54]
 8140 0ae6 07F55D73 		add	r3, r7, #884
 8141 0aea 0122     		movs	r2, #1
 8142 0aec 83F83720 		strb	r2, [r3, #55]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 190


 8143 0af0 07F55D73 		add	r3, r7, #884
 8144 0af4 0122     		movs	r2, #1
 8145 0af6 83F83820 		strb	r2, [r3, #56]
 8146 0afa 07F55D73 		add	r3, r7, #884
 8147 0afe 0122     		movs	r2, #1
 8148 0b00 83F83920 		strb	r2, [r3, #57]
 8149 0b04 07F55D73 		add	r3, r7, #884
 8150 0b08 0622     		movs	r2, #6
 8151 0b0a 83F83A20 		strb	r2, [r3, #58]
 8152 0b0e 07F55D73 		add	r3, r7, #884
 8153 0b12 0122     		movs	r2, #1
 8154 0b14 83F83B20 		strb	r2, [r3, #59]
 8155 0b18 07F55D73 		add	r3, r7, #884
 8156 0b1c 0122     		movs	r2, #1
 8157 0b1e 83F83C20 		strb	r2, [r3, #60]
 8158 0b22 07F55D73 		add	r3, r7, #884
 8159 0b26 0122     		movs	r2, #1
 8160 0b28 83F83D20 		strb	r2, [r3, #61]
 8161 0b2c 07F55D73 		add	r3, r7, #884
 8162 0b30 0122     		movs	r2, #1
 8163 0b32 83F83E20 		strb	r2, [r3, #62]
 8164 0b36 07F55D73 		add	r3, r7, #884
 8165 0b3a 0322     		movs	r2, #3
 8166 0b3c 83F83F20 		strb	r2, [r3, #63]
 8167 0b40 07F55D73 		add	r3, r7, #884
 8168 0b44 0322     		movs	r2, #3
 8169 0b46 83F84020 		strb	r2, [r3, #64]
1043:..\src/command_processing.c ****         1, 3, 3, 1, 
1044:..\src/command_processing.c ****         1, 1, 3, 3,
1045:..\src/command_processing.c ****         3, 1, 2, 2, 
1046:..\src/command_processing.c ****         1, 2, 1, 2,
1047:..\src/command_processing.c ****         2, 1, 1, 1, 
1048:..\src/command_processing.c ****         6, 3, 1, 1,
1049:..\src/command_processing.c ****         1, 1, 1, 1, 
1050:..\src/command_processing.c ****         1, 1, 1, 6,
1051:..\src/command_processing.c ****         1, 5, 1, 6,
1052:..\src/command_processing.c ****         
1053:..\src/command_processing.c ****         // GENERIC PARAMS
1054:..\src/command_processing.c ****         1, 1, 1, 1,
1055:..\src/command_processing.c ****         3, 3, 1, 3,
1056:..\src/command_processing.c ****         3, 1, 1, 1,
1057:..\src/command_processing.c ****         3, 3, 3, 1,
1058:..\src/command_processing.c ****         2, 2, 1, 1,
1059:..\src/command_processing.c ****         1, 1, 6, 1,
1060:..\src/command_processing.c ****         1, 1, 1, 3, 
1061:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 8170              		.loc 1 1061 0
 8171 0b4a 614B     		ldr	r3, .L380+4
 8172 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
 8173              		.loc 1 1042 0
 8174 0b4e 07F55D73 		add	r3, r7, #884
 8175 0b52 83F84120 		strb	r2, [r3, #65]
 8176              		.loc 1 1061 0
 8177 0b56 5E4B     		ldr	r3, .L380+4
 8178 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         1, 3, 3, 1, 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 191


 8179              		.loc 1 1042 0
 8180 0b5a 07F55D73 		add	r3, r7, #884
 8181 0b5e 83F84220 		strb	r2, [r3, #66]
 8182 0b62 07F55D73 		add	r3, r7, #884
 8183 0b66 0122     		movs	r2, #1
 8184 0b68 83F84320 		strb	r2, [r3, #67]
 8185 0b6c 07F55D73 		add	r3, r7, #884
 8186 0b70 0622     		movs	r2, #6
 8187 0b72 83F84420 		strb	r2, [r3, #68]
 8188 0b76 07F55D73 		add	r3, r7, #884
 8189 0b7a 0622     		movs	r2, #6
 8190 0b7c 83F84520 		strb	r2, [r3, #69]
 8191 0b80 07F55D73 		add	r3, r7, #884
 8192 0b84 0122     		movs	r2, #1
 8193 0b86 83F84620 		strb	r2, [r3, #70]
 8194 0b8a 07F55D73 		add	r3, r7, #884
 8195 0b8e 0122     		movs	r2, #1
 8196 0b90 83F84720 		strb	r2, [r3, #71]
 8197 0b94 07F55D73 		add	r3, r7, #884
 8198 0b98 0122     		movs	r2, #1
 8199 0b9a 83F84820 		strb	r2, [r3, #72]
 8200 0b9e 07F55D73 		add	r3, r7, #884
 8201 0ba2 0222     		movs	r2, #2
 8202 0ba4 83F84920 		strb	r2, [r3, #73]
 8203 0ba8 07F55D73 		add	r3, r7, #884
 8204 0bac 0122     		movs	r2, #1
 8205 0bae 83F84A20 		strb	r2, [r3, #74]
 8206 0bb2 07F55D73 		add	r3, r7, #884
 8207 0bb6 0122     		movs	r2, #1
 8208 0bb8 83F84B20 		strb	r2, [r3, #75]
 8209 0bbc 07F55D73 		add	r3, r7, #884
 8210 0bc0 0122     		movs	r2, #1
 8211 0bc2 83F84C20 		strb	r2, [r3, #76]
 8212 0bc6 07F55D73 		add	r3, r7, #884
 8213 0bca 0122     		movs	r2, #1
 8214 0bcc 83F84D20 		strb	r2, [r3, #77]
 8215 0bd0 07F55D73 		add	r3, r7, #884
 8216 0bd4 0122     		movs	r2, #1
 8217 0bd6 83F84E20 		strb	r2, [r3, #78]
 8218 0bda 07F55D73 		add	r3, r7, #884
 8219 0bde 0122     		movs	r2, #1
 8220 0be0 83F84F20 		strb	r2, [r3, #79]
 8221 0be4 07F55D73 		add	r3, r7, #884
 8222 0be8 0122     		movs	r2, #1
 8223 0bea 83F85020 		strb	r2, [r3, #80]
 8224 0bee 07F55D73 		add	r3, r7, #884
 8225 0bf2 0122     		movs	r2, #1
 8226 0bf4 83F85120 		strb	r2, [r3, #81]
 8227 0bf8 07F55D73 		add	r3, r7, #884
 8228 0bfc 0122     		movs	r2, #1
 8229 0bfe 83F85220 		strb	r2, [r3, #82]
1062:..\src/command_processing.c ****         6, 6, 1, 1,
1063:..\src/command_processing.c ****         1, 2, 1, 1,
1064:..\src/command_processing.c ****         1,
1065:..\src/command_processing.c ****         
1066:..\src/command_processing.c ****            1, 1, 1, 
1067:..\src/command_processing.c ****         1, 1, 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 192


1068:..\src/command_processing.c ****     };
1069:..\src/command_processing.c ****     
1070:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8230              		.loc 1 1070 0
 8231 0c02 07F54873 		add	r3, r7, #800
 8232 0c06 0022     		movs	r2, #0
 8233 0c08 1A70     		strb	r2, [r3]
 8234 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8235 0c0e 0A33     		adds	r3, r3, #10
 8236 0c10 DAB2     		uxtb	r2, r3
 8237 0c12 07F54873 		add	r3, r7, #800
 8238 0c16 5A70     		strb	r2, [r3, #1]
 8239 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8240 0c1c 0A33     		adds	r3, r3, #10
 8241 0c1e DAB2     		uxtb	r2, r3
 8242 0c20 07F54873 		add	r3, r7, #800
 8243 0c24 9A70     		strb	r2, [r3, #2]
 8244 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8245 0c2a 0A33     		adds	r3, r3, #10
 8246 0c2c DAB2     		uxtb	r2, r3
 8247 0c2e 07F54873 		add	r3, r7, #800
 8248 0c32 DA70     		strb	r2, [r3, #3]
 8249 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8250 0c38 0A33     		adds	r3, r3, #10
 8251 0c3a DAB2     		uxtb	r2, r3
 8252 0c3c 07F54873 		add	r3, r7, #800
 8253 0c40 1A71     		strb	r2, [r3, #4]
 8254 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8255 0c46 0A33     		adds	r3, r3, #10
 8256 0c48 DAB2     		uxtb	r2, r3
 8257 0c4a 07F54873 		add	r3, r7, #800
 8258 0c4e 5A71     		strb	r2, [r3, #5]
1071:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1072:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8259              		.loc 1 1072 0
 8260 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8261 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8262 0c58 1346     		mov	r3, r2
 8263 0c5a DB00     		lsls	r3, r3, #3
 8264 0c5c 9B1A     		subs	r3, r3, r2
 8265 0c5e 1B01     		lsls	r3, r3, #4
 8266 0c60 0B44     		add	r3, r3, r1
 8267 0c62 03F58873 		add	r3, r3, #272
 8268 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8269              		.loc 1 1070 0
 8270 0c68 1433     		adds	r3, r3, #20
 8271 0c6a DAB2     		uxtb	r2, r3
 8272 0c6c 07F54873 		add	r3, r7, #800
 8273 0c70 9A71     		strb	r2, [r3, #6]
 8274              		.loc 1 1072 0
 8275 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8276 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8277 0c7a 1346     		mov	r3, r2
 8278 0c7c DB00     		lsls	r3, r3, #3
 8279 0c7e 9B1A     		subs	r3, r3, r2
 8280 0c80 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 193


 8281 0c82 0B44     		add	r3, r3, r1
 8282 0c84 03F58873 		add	r3, r3, #272
 8283 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8284              		.loc 1 1070 0
 8285 0c8a 1433     		adds	r3, r3, #20
 8286 0c8c DAB2     		uxtb	r2, r3
 8287 0c8e 07F54873 		add	r3, r7, #800
 8288 0c92 DA71     		strb	r2, [r3, #7]
1073:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8289              		.loc 1 1073 0
 8290 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8291 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8292 0c9c 1346     		mov	r3, r2
 8293 0c9e DB00     		lsls	r3, r3, #3
 8294 0ca0 9B1A     		subs	r3, r3, r2
 8295 0ca2 1B01     		lsls	r3, r3, #4
 8296 0ca4 0B44     		add	r3, r3, r1
 8297 0ca6 03F58873 		add	r3, r3, #272
 8298 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8299              		.loc 1 1070 0
 8300 0cac 1433     		adds	r3, r3, #20
 8301 0cae DAB2     		uxtb	r2, r3
 8302 0cb0 07F54873 		add	r3, r7, #800
 8303 0cb4 1A72     		strb	r2, [r3, #8]
 8304 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8305 0cba 0A33     		adds	r3, r3, #10
 8306 0cbc DAB2     		uxtb	r2, r3
 8307 0cbe 07F54873 		add	r3, r7, #800
 8308 0cc2 5A72     		strb	r2, [r3, #9]
 8309 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8310 0cc8 04E0     		b	.L381
 8311              	.L382:
 8312 0cca 00BF     		.align	2
 8313              	.L380:
 8314 0ccc 4C060000 		.word	.LC0
 8315 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8316              	.L381:
 8317 0cd4 0A33     		adds	r3, r3, #10
 8318 0cd6 DAB2     		uxtb	r2, r3
 8319 0cd8 07F54873 		add	r3, r7, #800
 8320 0cdc 9A72     		strb	r2, [r3, #10]
 8321 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8322 0ce2 0A33     		adds	r3, r3, #10
 8323 0ce4 DAB2     		uxtb	r2, r3
 8324 0ce6 07F54873 		add	r3, r7, #800
 8325 0cea DA72     		strb	r2, [r3, #11]
 8326 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8327 0cf0 0A33     		adds	r3, r3, #10
 8328 0cf2 DAB2     		uxtb	r2, r3
 8329 0cf4 07F54873 		add	r3, r7, #800
 8330 0cf8 1A73     		strb	r2, [r3, #12]
 8331 0cfa 07F54873 		add	r3, r7, #800
 8332 0cfe 1E22     		movs	r2, #30
 8333 0d00 5A73     		strb	r2, [r3, #13]
 8334 0d02 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 194


 8335 0d06 1E22     		movs	r2, #30
 8336 0d08 9A73     		strb	r2, [r3, #14]
 8337 0d0a 07F54873 		add	r3, r7, #800
 8338 0d0e 1E22     		movs	r2, #30
 8339 0d10 DA73     		strb	r2, [r3, #15]
 8340 0d12 07F54873 		add	r3, r7, #800
 8341 0d16 1E22     		movs	r2, #30
 8342 0d18 1A74     		strb	r2, [r3, #16]
1074:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1075:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8343              		.loc 1 1075 0
 8344 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8345 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8346 0d22 1346     		mov	r3, r2
 8347 0d24 DB00     		lsls	r3, r3, #3
 8348 0d26 9B1A     		subs	r3, r3, r2
 8349 0d28 1B01     		lsls	r3, r3, #4
 8350 0d2a 0B44     		add	r3, r3, r1
 8351 0d2c 03F58873 		add	r3, r3, #272
 8352 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8353              		.loc 1 1070 0
 8354 0d32 1433     		adds	r3, r3, #20
 8355 0d34 DAB2     		uxtb	r2, r3
 8356 0d36 07F54873 		add	r3, r7, #800
 8357 0d3a 5A74     		strb	r2, [r3, #17]
 8358              		.loc 1 1075 0
 8359 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8360 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8361 0d44 1346     		mov	r3, r2
 8362 0d46 DB00     		lsls	r3, r3, #3
 8363 0d48 9B1A     		subs	r3, r3, r2
 8364 0d4a 1B01     		lsls	r3, r3, #4
 8365 0d4c 0B44     		add	r3, r3, r1
 8366 0d4e 03F58873 		add	r3, r3, #272
 8367 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8368              		.loc 1 1070 0
 8369 0d54 1433     		adds	r3, r3, #20
 8370 0d56 DAB2     		uxtb	r2, r3
 8371 0d58 07F54873 		add	r3, r7, #800
 8372 0d5c 9A74     		strb	r2, [r3, #18]
 8373 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8374 0d62 0A33     		adds	r3, r3, #10
 8375 0d64 DAB2     		uxtb	r2, r3
 8376 0d66 07F54873 		add	r3, r7, #800
 8377 0d6a DA74     		strb	r2, [r3, #19]
 8378 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8379 0d70 0A33     		adds	r3, r3, #10
 8380 0d72 DAB2     		uxtb	r2, r3
 8381 0d74 07F54873 		add	r3, r7, #800
 8382 0d78 1A75     		strb	r2, [r3, #20]
 8383 0d7a 07F54873 		add	r3, r7, #800
 8384 0d7e 0022     		movs	r2, #0
 8385 0d80 5A75     		strb	r2, [r3, #21]
 8386 0d82 07F54873 		add	r3, r7, #800
 8387 0d86 4622     		movs	r2, #70
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 195


 8388 0d88 9A75     		strb	r2, [r3, #22]
 8389 0d8a 07F54873 		add	r3, r7, #800
 8390 0d8e 4622     		movs	r2, #70
 8391 0d90 DA75     		strb	r2, [r3, #23]
 8392 0d92 07F54873 		add	r3, r7, #800
 8393 0d96 4622     		movs	r2, #70
 8394 0d98 1A76     		strb	r2, [r3, #24]
 8395 0d9a 07F54873 		add	r3, r7, #800
 8396 0d9e 4622     		movs	r2, #70
 8397 0da0 5A76     		strb	r2, [r3, #25]
 8398 0da2 07F54873 		add	r3, r7, #800
 8399 0da6 1E22     		movs	r2, #30
 8400 0da8 9A76     		strb	r2, [r3, #26]
 8401 0daa 07F54873 		add	r3, r7, #800
 8402 0dae 0022     		movs	r2, #0
 8403 0db0 DA76     		strb	r2, [r3, #27]
 8404 0db2 07F54873 		add	r3, r7, #800
 8405 0db6 2822     		movs	r2, #40
 8406 0db8 1A77     		strb	r2, [r3, #28]
 8407 0dba 07F54873 		add	r3, r7, #800
 8408 0dbe 3222     		movs	r2, #50
 8409 0dc0 5A77     		strb	r2, [r3, #29]
 8410 0dc2 07F54873 		add	r3, r7, #800
 8411 0dc6 0022     		movs	r2, #0
 8412 0dc8 9A77     		strb	r2, [r3, #30]
 8413 0dca 07F54873 		add	r3, r7, #800
 8414 0dce 3222     		movs	r2, #50
 8415 0dd0 DA77     		strb	r2, [r3, #31]
 8416 0dd2 07F54873 		add	r3, r7, #800
 8417 0dd6 2822     		movs	r2, #40
 8418 0dd8 83F82020 		strb	r2, [r3, #32]
 8419 0ddc 07F54873 		add	r3, r7, #800
 8420 0de0 2822     		movs	r2, #40
 8421 0de2 83F82120 		strb	r2, [r3, #33]
 8422 0de6 07F54873 		add	r3, r7, #800
 8423 0dea 0022     		movs	r2, #0
 8424 0dec 83F82220 		strb	r2, [r3, #34]
1076:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1077:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1078:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1079:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8425              		.loc 1 1079 0
 8426 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8427 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8428              		.loc 1 1070 0
 8429 0df8 3C33     		adds	r3, r3, #60
 8430 0dfa DAB2     		uxtb	r2, r3
 8431 0dfc 07F54873 		add	r3, r7, #800
 8432 0e00 83F82320 		strb	r2, [r3, #35]
 8433 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8434 0e08 0A33     		adds	r3, r3, #10
 8435 0e0a DAB2     		uxtb	r2, r3
 8436 0e0c 07F54873 		add	r3, r7, #800
 8437 0e10 83F82420 		strb	r2, [r3, #36]
 8438 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8439 0e18 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 196


 8440 0e1a DAB2     		uxtb	r2, r3
 8441 0e1c 07F54873 		add	r3, r7, #800
 8442 0e20 83F82520 		strb	r2, [r3, #37]
 8443 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8444 0e28 0A33     		adds	r3, r3, #10
 8445 0e2a DAB2     		uxtb	r2, r3
 8446 0e2c 07F54873 		add	r3, r7, #800
 8447 0e30 83F82620 		strb	r2, [r3, #38]
 8448 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8449 0e38 0A33     		adds	r3, r3, #10
 8450 0e3a DAB2     		uxtb	r2, r3
 8451 0e3c 07F54873 		add	r3, r7, #800
 8452 0e40 83F82720 		strb	r2, [r3, #39]
1080:..\src/command_processing.c ****         
1081:..\src/command_processing.c ****         // GENERIC PARAMS
1082:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1083:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8453              		.loc 1 1083 0
 8454 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8455 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8456 0e4c 1346     		mov	r3, r2
 8457 0e4e DB00     		lsls	r3, r3, #3
 8458 0e50 9B1A     		subs	r3, r3, r2
 8459 0e52 1B01     		lsls	r3, r3, #4
 8460 0e54 0B44     		add	r3, r3, r1
 8461 0e56 03F58873 		add	r3, r3, #272
 8462 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8463              		.loc 1 1070 0
 8464 0e5c 1433     		adds	r3, r3, #20
 8465 0e5e DAB2     		uxtb	r2, r3
 8466 0e60 07F54873 		add	r3, r7, #800
 8467 0e64 83F82820 		strb	r2, [r3, #40]
 8468              		.loc 1 1083 0
 8469 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8470 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8471 0e70 1346     		mov	r3, r2
 8472 0e72 DB00     		lsls	r3, r3, #3
 8473 0e74 9B1A     		subs	r3, r3, r2
 8474 0e76 1B01     		lsls	r3, r3, #4
 8475 0e78 0B44     		add	r3, r3, r1
 8476 0e7a 03F58873 		add	r3, r3, #272
 8477 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8478              		.loc 1 1070 0
 8479 0e80 1433     		adds	r3, r3, #20
 8480 0e82 DAB2     		uxtb	r2, r3
 8481 0e84 07F54873 		add	r3, r7, #800
 8482 0e88 83F82920 		strb	r2, [r3, #41]
 8483 0e8c 07F54873 		add	r3, r7, #800
 8484 0e90 0022     		movs	r2, #0
 8485 0e92 83F82A20 		strb	r2, [r3, #42]
 8486 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8487 0e9a 0A33     		adds	r3, r3, #10
 8488 0e9c DAB2     		uxtb	r2, r3
 8489 0e9e 07F54873 		add	r3, r7, #800
 8490 0ea2 83F82B20 		strb	r2, [r3, #43]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 197


 8491 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8492 0eaa 0A33     		adds	r3, r3, #10
 8493 0eac DAB2     		uxtb	r2, r3
 8494 0eae 07F54873 		add	r3, r7, #800
 8495 0eb2 83F82C20 		strb	r2, [r3, #44]
 8496 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8497 0eba 0A33     		adds	r3, r3, #10
 8498 0ebc DAB2     		uxtb	r2, r3
 8499 0ebe 07F54873 		add	r3, r7, #800
 8500 0ec2 83F82D20 		strb	r2, [r3, #45]
 8501 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8502 0eca 0A33     		adds	r3, r3, #10
 8503 0ecc DAB2     		uxtb	r2, r3
 8504 0ece 07F54873 		add	r3, r7, #800
 8505 0ed2 83F82E20 		strb	r2, [r3, #46]
 8506 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8507 0eda 0A33     		adds	r3, r3, #10
 8508 0edc DAB2     		uxtb	r2, r3
 8509 0ede 07F54873 		add	r3, r7, #800
 8510 0ee2 83F82F20 		strb	r2, [r3, #47]
1084:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1085:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8511              		.loc 1 1085 0
 8512 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8513 0eea D7F88015 		ldr	r1, [r7, #1408]
 8514 0eee 1346     		mov	r3, r2
 8515 0ef0 DB00     		lsls	r3, r3, #3
 8516 0ef2 9B1A     		subs	r3, r3, r2
 8517 0ef4 1B01     		lsls	r3, r3, #4
 8518 0ef6 0B44     		add	r3, r3, r1
 8519 0ef8 03F58873 		add	r3, r3, #272
 8520 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8521              		.loc 1 1070 0
 8522 0efe 1433     		adds	r3, r3, #20
 8523 0f00 DAB2     		uxtb	r2, r3
 8524 0f02 07F54873 		add	r3, r7, #800
 8525 0f06 83F83020 		strb	r2, [r3, #48]
 8526              		.loc 1 1085 0
 8527 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8528 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8529 0f12 1346     		mov	r3, r2
 8530 0f14 DB00     		lsls	r3, r3, #3
 8531 0f16 9B1A     		subs	r3, r3, r2
 8532 0f18 1B01     		lsls	r3, r3, #4
 8533 0f1a 0B44     		add	r3, r3, r1
 8534 0f1c 03F58873 		add	r3, r3, #272
 8535 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8536              		.loc 1 1070 0
 8537 0f22 1433     		adds	r3, r3, #20
 8538 0f24 DAB2     		uxtb	r2, r3
 8539 0f26 07F54873 		add	r3, r7, #800
 8540 0f2a 83F83120 		strb	r2, [r3, #49]
 8541              		.loc 1 1085 0
 8542 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8543 0f32 D7F88015 		ldr	r1, [r7, #1408]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 198


 8544 0f36 1346     		mov	r3, r2
 8545 0f38 DB00     		lsls	r3, r3, #3
 8546 0f3a 9B1A     		subs	r3, r3, r2
 8547 0f3c 1B01     		lsls	r3, r3, #4
 8548 0f3e 0B44     		add	r3, r3, r1
 8549 0f40 03F58873 		add	r3, r3, #272
 8550 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8551              		.loc 1 1070 0
 8552 0f46 1433     		adds	r3, r3, #20
 8553 0f48 DAB2     		uxtb	r2, r3
 8554 0f4a 07F54873 		add	r3, r7, #800
 8555 0f4e 83F83220 		strb	r2, [r3, #50]
 8556 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8557 0f56 0A33     		adds	r3, r3, #10
 8558 0f58 DAB2     		uxtb	r2, r3
 8559 0f5a 07F54873 		add	r3, r7, #800
 8560 0f5e 83F83320 		strb	r2, [r3, #51]
 8561 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8562 0f66 0A33     		adds	r3, r3, #10
 8563 0f68 DAB2     		uxtb	r2, r3
 8564 0f6a 07F54873 		add	r3, r7, #800
 8565 0f6e 83F83420 		strb	r2, [r3, #52]
 8566 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8567 0f76 0A33     		adds	r3, r3, #10
 8568 0f78 DAB2     		uxtb	r2, r3
 8569 0f7a 07F54873 		add	r3, r7, #800
 8570 0f7e 83F83520 		strb	r2, [r3, #53]
 8571 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8572 0f86 0A33     		adds	r3, r3, #10
 8573 0f88 DAB2     		uxtb	r2, r3
 8574 0f8a 07F54873 		add	r3, r7, #800
 8575 0f8e 83F83620 		strb	r2, [r3, #54]
1086:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8576              		.loc 1 1086 0
 8577 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8578 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8579 0f9a 1346     		mov	r3, r2
 8580 0f9c DB00     		lsls	r3, r3, #3
 8581 0f9e 9B1A     		subs	r3, r3, r2
 8582 0fa0 1B01     		lsls	r3, r3, #4
 8583 0fa2 0B44     		add	r3, r3, r1
 8584 0fa4 03F58873 		add	r3, r3, #272
 8585 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8586              		.loc 1 1070 0
 8587 0faa 1433     		adds	r3, r3, #20
 8588 0fac DAB2     		uxtb	r2, r3
 8589 0fae 07F54873 		add	r3, r7, #800
 8590 0fb2 83F83720 		strb	r2, [r3, #55]
1087:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8591              		.loc 1 1087 0
 8592 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8593 0fba D7F88015 		ldr	r1, [r7, #1408]
 8594 0fbe 1346     		mov	r3, r2
 8595 0fc0 DB00     		lsls	r3, r3, #3
 8596 0fc2 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 199


 8597 0fc4 1B01     		lsls	r3, r3, #4
 8598 0fc6 0B44     		add	r3, r3, r1
 8599 0fc8 03F58873 		add	r3, r3, #272
 8600 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8601              		.loc 1 1070 0
 8602 0fce 1433     		adds	r3, r3, #20
 8603 0fd0 DAB2     		uxtb	r2, r3
 8604 0fd2 07F54873 		add	r3, r7, #800
 8605 0fd6 83F83820 		strb	r2, [r3, #56]
 8606 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8607 0fde 0A33     		adds	r3, r3, #10
 8608 0fe0 DAB2     		uxtb	r2, r3
 8609 0fe2 07F54873 		add	r3, r7, #800
 8610 0fe6 83F83920 		strb	r2, [r3, #57]
 8611 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8612 0fee 0A33     		adds	r3, r3, #10
 8613 0ff0 DAB2     		uxtb	r2, r3
 8614 0ff2 07F54873 		add	r3, r7, #800
 8615 0ff6 83F83A20 		strb	r2, [r3, #58]
 8616 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8617 0ffe 0A33     		adds	r3, r3, #10
 8618 1000 DAB2     		uxtb	r2, r3
 8619 1002 07F54873 		add	r3, r7, #800
 8620 1006 83F83B20 		strb	r2, [r3, #59]
 8621 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8622 100e 0A33     		adds	r3, r3, #10
 8623 1010 DAB2     		uxtb	r2, r3
 8624 1012 07F54873 		add	r3, r7, #800
 8625 1016 83F83C20 		strb	r2, [r3, #60]
 8626 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8627 101e 0A33     		adds	r3, r3, #10
 8628 1020 DAB2     		uxtb	r2, r3
 8629 1022 07F54873 		add	r3, r7, #800
 8630 1026 83F83D20 		strb	r2, [r3, #61]
 8631 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8632 102e 0A33     		adds	r3, r3, #10
 8633 1030 DAB2     		uxtb	r2, r3
 8634 1032 07F54873 		add	r3, r7, #800
 8635 1036 83F83E20 		strb	r2, [r3, #62]
1088:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8636              		.loc 1 1088 0
 8637 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8638 103e D7F88015 		ldr	r1, [r7, #1408]
 8639 1042 1346     		mov	r3, r2
 8640 1044 DB00     		lsls	r3, r3, #3
 8641 1046 9B1A     		subs	r3, r3, r2
 8642 1048 1B01     		lsls	r3, r3, #4
 8643 104a 0B44     		add	r3, r3, r1
 8644 104c 03F58873 		add	r3, r3, #272
 8645 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8646              		.loc 1 1070 0
 8647 1052 1433     		adds	r3, r3, #20
 8648 1054 DAB2     		uxtb	r2, r3
 8649 1056 07F54873 		add	r3, r7, #800
 8650 105a 83F83F20 		strb	r2, [r3, #63]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 200


1089:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8651              		.loc 1 1089 0
 8652 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8653 1062 D7F88015 		ldr	r1, [r7, #1408]
 8654 1066 1346     		mov	r3, r2
 8655 1068 DB00     		lsls	r3, r3, #3
 8656 106a 9B1A     		subs	r3, r3, r2
 8657 106c 1B01     		lsls	r3, r3, #4
 8658 106e 0B44     		add	r3, r3, r1
 8659 1070 03F58873 		add	r3, r3, #272
 8660 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1070:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8661              		.loc 1 1070 0
 8662 1076 1433     		adds	r3, r3, #20
 8663 1078 DAB2     		uxtb	r2, r3
 8664 107a 07F54873 		add	r3, r7, #800
 8665 107e 83F84020 		strb	r2, [r3, #64]
 8666 1082 07F54873 		add	r3, r7, #800
 8667 1086 1422     		movs	r2, #20
 8668 1088 83F84120 		strb	r2, [r3, #65]
 8669 108c 07F54873 		add	r3, r7, #800
 8670 1090 1522     		movs	r2, #21
 8671 1092 83F84220 		strb	r2, [r3, #66]
 8672 1096 07F54873 		add	r3, r7, #800
 8673 109a 3222     		movs	r2, #50
 8674 109c 83F84320 		strb	r2, [r3, #67]
 8675 10a0 07F54873 		add	r3, r7, #800
 8676 10a4 3222     		movs	r2, #50
 8677 10a6 83F84420 		strb	r2, [r3, #68]
 8678 10aa 07F54873 		add	r3, r7, #800
 8679 10ae 3222     		movs	r2, #50
 8680 10b0 83F84520 		strb	r2, [r3, #69]
 8681 10b4 07F54873 		add	r3, r7, #800
 8682 10b8 3222     		movs	r2, #50
 8683 10ba 83F84620 		strb	r2, [r3, #70]
 8684 10be 07F54873 		add	r3, r7, #800
 8685 10c2 6E22     		movs	r2, #110
 8686 10c4 83F84720 		strb	r2, [r3, #71]
 8687 10c8 07F54873 		add	r3, r7, #800
 8688 10cc 6E22     		movs	r2, #110
 8689 10ce 83F84820 		strb	r2, [r3, #72]
 8690 10d2 07F54873 		add	r3, r7, #800
 8691 10d6 6E22     		movs	r2, #110
 8692 10d8 83F84920 		strb	r2, [r3, #73]
 8693 10dc 07F54873 		add	r3, r7, #800
 8694 10e0 0022     		movs	r2, #0
 8695 10e2 83F84A20 		strb	r2, [r3, #74]
 8696 10e6 07F54873 		add	r3, r7, #800
 8697 10ea 6422     		movs	r2, #100
 8698 10ec 83F84B20 		strb	r2, [r3, #75]
 8699 10f0 07F54873 		add	r3, r7, #800
 8700 10f4 5A22     		movs	r2, #90
 8701 10f6 83F84C20 		strb	r2, [r3, #76]
 8702 10fa 07F54873 		add	r3, r7, #800
 8703 10fe 5A22     		movs	r2, #90
 8704 1100 83F84D20 		strb	r2, [r3, #77]
 8705 1104 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 201


 8706 1108 5022     		movs	r2, #80
 8707 110a 83F84E20 		strb	r2, [r3, #78]
 8708 110e 07F54873 		add	r3, r7, #800
 8709 1112 5022     		movs	r2, #80
 8710 1114 83F84F20 		strb	r2, [r3, #79]
 8711 1118 07F54873 		add	r3, r7, #800
 8712 111c 5A22     		movs	r2, #90
 8713 111e 83F85020 		strb	r2, [r3, #80]
 8714 1122 07F54873 		add	r3, r7, #800
 8715 1126 5A22     		movs	r2, #90
 8716 1128 83F85120 		strb	r2, [r3, #81]
 8717 112c 07F54873 		add	r3, r7, #800
 8718 1130 5A22     		movs	r2, #90
 8719 1132 83F85220 		strb	r2, [r3, #82]
1090:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1091:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1092:..\src/command_processing.c ****         ST_FB_SPEC,
1093:..\src/command_processing.c ****         
1094:..\src/command_processing.c ****                     ST_FB_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1095:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1096:..\src/command_processing.c ****         
1097:..\src/command_processing.c ****     };
1098:..\src/command_processing.c ****     
1099:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8720              		.loc 1 1099 0
 8721 1136 07F5EA73 		add	r3, r7, #468
 8722 113a D04A     		ldr	r2, .L383
 8723 113c 1846     		mov	r0, r3
 8724 113e 1146     		mov	r1, r2
 8725 1140 4FF4A673 		mov	r3, #332
 8726 1144 1A46     		mov	r2, r3
 8727 1146 FFF7FEFF 		bl	memcpy
1100:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1101:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1102:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1103:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1104:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1105:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1106:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1107:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1108:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1109:..\src/command_processing.c ****         
1110:..\src/command_processing.c ****         // GENERIC PARAMS
1111:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1112:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1113:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1114:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1115:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1116:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1117:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1118:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1119:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
1120:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1121:..\src/command_processing.c ****         "77 - Air Chamber Feedback:",
1122:..\src/command_processing.c ****         
1123:..\src/command_processing.c ****                                      "78 - Vibrotactile Feedback:", "79 - Master Mode:", "80 - Slav
1124:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 202


1125:..\src/command_processing.c ****     };
1126:..\src/command_processing.c **** 
1127:..\src/command_processing.c ****     //Parameters menu
1128:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8728              		.loc 1 1128 0
 8729 114a 07F5AE73 		add	r3, r7, #348
 8730 114e 0022     		movs	r2, #0
 8731 1150 1A60     		str	r2, [r3]
 8732 1152 0433     		adds	r3, r3, #4
 8733 1154 7222     		movs	r2, #114
 8734 1156 0021     		movs	r1, #0
 8735 1158 1846     		mov	r0, r3
 8736 115a FFF7FEFF 		bl	memset
1129:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8737              		.loc 1 1129 0
 8738 115e 07F5AE70 		add	r0, r7, #348
 8739 1162 6423     		movs	r3, #100
 8740 1164 0A22     		movs	r2, #10
 8741 1166 C649     		ldr	r1, .L383+4
 8742 1168 FFF7FEFF 		bl	sprintf
1130:..\src/command_processing.c **** 
1131:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8743              		.loc 1 1131 0
 8744 116c 07F59273 		add	r3, r7, #292
 8745 1170 0022     		movs	r2, #0
 8746 1172 1A60     		str	r2, [r3]
 8747 1174 0433     		adds	r3, r3, #4
 8748 1176 3422     		movs	r2, #52
 8749 1178 0021     		movs	r1, #0
 8750 117a 1846     		mov	r0, r3
 8751 117c FFF7FEFF 		bl	memset
1132:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8752              		.loc 1 1132 0
 8753 1180 D7F88035 		ldr	r3, [r7, #1408]
 8754 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8755 1188 042B     		cmp	r3, #4
 8756 118a 10D1     		bne	.L314
1133:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8757              		.loc 1 1133 0
 8758 118c 07F59273 		add	r3, r7, #292
 8759 1190 BC4A     		ldr	r2, .L383+8
 8760 1192 1C46     		mov	r4, r3
 8761 1194 1546     		mov	r5, r2
 8762 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8763 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8764 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8765 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8766 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8767 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8768 11a2 95E80300 		ldmia	r5, {r0, r1}
 8769 11a6 2060     		str	r0, [r4]
 8770 11a8 0434     		adds	r4, r4, #4
 8771 11aa 2170     		strb	r1, [r4]
 8772 11ac 0FE0     		b	.L315
 8773              	.L314:
1134:..\src/command_processing.c ****     }
1135:..\src/command_processing.c ****     else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 203


1136:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist,Slow:hand\n1 -> Slow:wrist,Fast:hand\n")
 8774              		.loc 1 1136 0
 8775 11ae 07F59273 		add	r3, r7, #292
 8776 11b2 B54A     		ldr	r2, .L383+12
 8777 11b4 1C46     		mov	r4, r3
 8778 11b6 1546     		mov	r5, r2
 8779 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8780 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8781 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8782 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8783 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8784 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8785 11c4 95E80300 		ldmia	r5, {r0, r1}
 8786 11c8 2060     		str	r0, [r4]
 8787 11ca 0434     		adds	r4, r4, #4
 8788 11cc 2170     		strb	r1, [r4]
 8789              	.L315:
1137:..\src/command_processing.c ****     }
1138:..\src/command_processing.c ****     
1139:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8790              		.loc 1 1139 0
 8791 11ce 07F1F403 		add	r3, r7, #244
 8792 11d2 AE4A     		ldr	r2, .L383+16
 8793 11d4 1A60     		str	r2, [r3]
 8794 11d6 07F1F403 		add	r3, r7, #244
 8795 11da AD4A     		ldr	r2, .L383+20
 8796 11dc 5A60     		str	r2, [r3, #4]
 8797 11de 07F1F403 		add	r3, r7, #244
 8798 11e2 AC4A     		ldr	r2, .L383+24
 8799 11e4 9A60     		str	r2, [r3, #8]
 8800 11e6 07F1F403 		add	r3, r7, #244
 8801 11ea AB4A     		ldr	r2, .L383+28
 8802 11ec DA60     		str	r2, [r3, #12]
 8803 11ee 07F1F403 		add	r3, r7, #244
 8804 11f2 AA4A     		ldr	r2, .L383+32
 8805 11f4 1A61     		str	r2, [r3, #16]
 8806 11f6 07F1F403 		add	r3, r7, #244
 8807 11fa A94A     		ldr	r2, .L383+36
 8808 11fc 5A61     		str	r2, [r3, #20]
 8809 11fe 07F1F403 		add	r3, r7, #244
 8810 1202 07F5AE72 		add	r2, r7, #348
 8811 1206 9A61     		str	r2, [r3, #24]
 8812 1208 07F1F403 		add	r3, r7, #244
 8813 120c A54A     		ldr	r2, .L383+40
 8814 120e DA61     		str	r2, [r3, #28]
 8815 1210 07F1F403 		add	r3, r7, #244
 8816 1214 A44A     		ldr	r2, .L383+44
 8817 1216 1A62     		str	r2, [r3, #32]
 8818 1218 07F1F403 		add	r3, r7, #244
 8819 121c A34A     		ldr	r2, .L383+48
 8820 121e 5A62     		str	r2, [r3, #36]
 8821 1220 07F1F403 		add	r3, r7, #244
 8822 1224 07F59272 		add	r2, r7, #292
 8823 1228 9A62     		str	r2, [r3, #40]
 8824 122a 07F1F403 		add	r3, r7, #244
 8825 122e A04A     		ldr	r2, .L383+52
 8826 1230 DA62     		str	r2, [r3, #44]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 204


1140:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1141:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1142:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1143:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1144:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1145:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1146:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1147:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> R01\nThe board will reset\n",                         
1148:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\n2 -> ESC (Brushless)\nThe board will r
1149:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1150:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1151:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1152:..\src/command_processing.c ****     };   
1153:..\src/command_processing.c ****     
1154:..\src/command_processing.c ****     uint8 NUM_MENU[33] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8827              		.loc 1 1154 0
 8828 1232 07F1D003 		add	r3, r7, #208
 8829 1236 9F4A     		ldr	r2, .L383+56
 8830 1238 1446     		mov	r4, r2
 8831 123a 1E46     		mov	r6, r3
 8832 123c 04F1200E 		add	lr, r4, #32
 8833              	.L316:
 8834 1240 3546     		mov	r5, r6
 8835 1242 2346     		mov	r3, r4
 8836 1244 1868     		ldr	r0, [r3]	@ unaligned
 8837 1246 5968     		ldr	r1, [r3, #4]	@ unaligned
 8838 1248 9A68     		ldr	r2, [r3, #8]	@ unaligned
 8839 124a DB68     		ldr	r3, [r3, #12]	@ unaligned
 8840 124c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 8841 124e 1034     		adds	r4, r4, #16
 8842 1250 1036     		adds	r6, r6, #16
 8843 1252 7445     		cmp	r4, lr
 8844 1254 F4D1     		bne	.L316
 8845 1256 3346     		mov	r3, r6
 8846 1258 2246     		mov	r2, r4
 8847 125a 1278     		ldrb	r2, [r2]
 8848 125c 1A70     		strb	r2, [r3]
1155:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8849              		.loc 1 1155 0
 8850 125e 07F1C403 		add	r3, r7, #196
 8851 1262 954A     		ldr	r2, .L383+60
 8852 1264 1068     		ldr	r0, [r2]	@ unaligned
 8853 1266 5168     		ldr	r1, [r2, #4]	@ unaligned
 8854 1268 03C3     		stmia	r3!, {r0, r1}
 8855 126a 127A     		ldrb	r2, [r2, #8]
 8856 126c 1A70     		strb	r2, [r3]
1156:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8857              		.loc 1 1156 0
 8858 126e 07F1B003 		add	r3, r7, #176
 8859 1272 924A     		ldr	r2, .L383+64
 8860 1274 1C46     		mov	r4, r3
 8861 1276 1546     		mov	r5, r2
 8862 1278 2868     		ldr	r0, [r5]	@ unaligned
 8863 127a 6968     		ldr	r1, [r5, #4]	@ unaligned
 8864 127c AA68     		ldr	r2, [r5, #8]	@ unaligned
 8865 127e EB68     		ldr	r3, [r5, #12]	@ unaligned
 8866 1280 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 205


 8867 1282 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8868 1284 2380     		strh	r3, [r4]	@ unaligned
1157:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8869              		.loc 1 1157 0
 8870 1286 2323     		movs	r3, #35
 8871 1288 87F87B35 		strb	r3, [r7, #1403]
1158:..\src/command_processing.c **** 
1159:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1160:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1161:..\src/command_processing.c ****     
1162:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1163:..\src/command_processing.c **** 
1164:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1165:..\src/command_processing.c ****     
1166:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1167:..\src/command_processing.c ****     j = 0;
 8872              		.loc 1 1167 0
 8873 128c 0023     		movs	r3, #0
 8874 128e 87F88635 		strb	r3, [r7, #1414]
1168:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8875              		.loc 1 1168 0
 8876 1292 0023     		movs	r3, #0
 8877 1294 87F88735 		strb	r3, [r7, #1415]
 8878 1298 21E0     		b	.L317
 8879              	.L320:
1169:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8880              		.loc 1 1169 0
 8881 129a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8882 129e 07F1C402 		add	r2, r7, #196
 8883 12a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8884 12a4 1A46     		mov	r2, r3
 8885 12a6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8886 12aa 0133     		adds	r3, r3, #1
 8887 12ac 9A42     		cmp	r2, r3
 8888 12ae 0BD1     		bne	.L318
1170:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8889              		.loc 1 1170 0
 8890 12b0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8891 12b4 07F15C02 		add	r2, r7, #92
 8892 12b8 0121     		movs	r1, #1
 8893 12ba D154     		strb	r1, [r2, r3]
1171:..\src/command_processing.c ****             j++;
 8894              		.loc 1 1171 0
 8895 12bc 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8896 12c0 0133     		adds	r3, r3, #1
 8897 12c2 87F88635 		strb	r3, [r7, #1414]
 8898 12c6 05E0     		b	.L319
 8899              	.L318:
1172:..\src/command_processing.c ****         }
1173:..\src/command_processing.c ****         else {
1174:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8900              		.loc 1 1174 0
 8901 12c8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8902 12cc 07F15C02 		add	r2, r7, #92
 8903 12d0 0021     		movs	r1, #0
 8904 12d2 D154     		strb	r1, [r2, r3]
 8905              	.L319:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 206


1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8906              		.loc 1 1168 0 discriminator 2
 8907 12d4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8908 12d8 0133     		adds	r3, r3, #1
 8909 12da 87F88735 		strb	r3, [r7, #1415]
 8910              	.L317:
1168:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8911              		.loc 1 1168 0 is_stmt 0 discriminator 1
 8912 12de 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8913 12e2 522B     		cmp	r3, #82
 8914 12e4 D9D9     		bls	.L320
1175:..\src/command_processing.c ****         }
1176:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1177:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1178:..\src/command_processing.c ****     j = 0;
 8915              		.loc 1 1178 0 is_stmt 1
 8916 12e6 0023     		movs	r3, #0
 8917 12e8 87F88635 		strb	r3, [r7, #1414]
1179:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8918              		.loc 1 1179 0
 8919 12ec 0023     		movs	r3, #0
 8920 12ee 87F88735 		strb	r3, [r7, #1415]
 8921 12f2 21E0     		b	.L321
 8922              	.L324:
1180:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8923              		.loc 1 1180 0
 8924 12f4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8925 12f8 07F1B002 		add	r2, r7, #176
 8926 12fc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8927 12fe 1A46     		mov	r2, r3
 8928 1300 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8929 1304 0133     		adds	r3, r3, #1
 8930 1306 9A42     		cmp	r2, r3
 8931 1308 0BD1     		bne	.L322
1181:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8932              		.loc 1 1181 0
 8933 130a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8934 130e 07F10802 		add	r2, r7, #8
 8935 1312 0121     		movs	r1, #1
 8936 1314 D154     		strb	r1, [r2, r3]
1182:..\src/command_processing.c ****             j++;
 8937              		.loc 1 1182 0
 8938 1316 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8939 131a 0133     		adds	r3, r3, #1
 8940 131c 87F88635 		strb	r3, [r7, #1414]
 8941 1320 05E0     		b	.L323
 8942              	.L322:
1183:..\src/command_processing.c ****         }
1184:..\src/command_processing.c ****         else {
1185:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8943              		.loc 1 1185 0
 8944 1322 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8945 1326 07F10802 		add	r2, r7, #8
 8946 132a 0021     		movs	r1, #0
 8947 132c D154     		strb	r1, [r2, r3]
 8948              	.L323:
1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 207


 8949              		.loc 1 1179 0 discriminator 2
 8950 132e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8951 1332 0133     		adds	r3, r3, #1
 8952 1334 87F88735 		strb	r3, [r7, #1415]
 8953              	.L321:
1179:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8954              		.loc 1 1179 0 is_stmt 0 discriminator 1
 8955 1338 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8956 133c 522B     		cmp	r3, #82
 8957 133e D9D9     		bls	.L324
1186:..\src/command_processing.c ****         }
1187:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1188:..\src/command_processing.c ****         
1189:..\src/command_processing.c ****     if (!index) {
 8958              		.loc 1 1189 0 is_stmt 1
 8959 1340 BB1D     		adds	r3, r7, #6
 8960 1342 1B88     		ldrh	r3, [r3]
 8961 1344 002B     		cmp	r3, #0
 8962 1346 17D1     		bne	.L325
1190:..\src/command_processing.c ****         // Get parameters list with relative types
1191:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8963              		.loc 1 1191 0
 8964 1348 07F54874 		add	r4, r7, #800
 8965 134c 07F55D72 		add	r2, r7, #884
 8966 1350 07F57271 		add	r1, r7, #968
 8967 1354 07F21C40 		addw	r0, r7, #1052
 8968 1358 07F1F403 		add	r3, r7, #244
 8969 135c 0393     		str	r3, [sp, #12]
 8970 135e 07F15C03 		add	r3, r7, #92
 8971 1362 0293     		str	r3, [sp, #8]
 8972 1364 07F5EA73 		add	r3, r7, #468
 8973 1368 0193     		str	r3, [sp, #4]
 8974 136a 07F1D003 		add	r3, r7, #208
 8975 136e 0093     		str	r3, [sp]
 8976 1370 2346     		mov	r3, r4
 8977 1372 FFF7FEFF 		bl	get_param_list
1192:..\src/command_processing.c ****     }
1193:..\src/command_processing.c ****     else {
1194:..\src/command_processing.c ****         // Set specific parameter        
1195:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1196:..\src/command_processing.c ****         
1197:..\src/command_processing.c ****         // Find size of data
1198:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1199:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1200:..\src/command_processing.c ****                 sod = 1; break;
1201:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1202:..\src/command_processing.c ****                 sod = 2; break;
1203:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1204:..\src/command_processing.c ****                 sod = 4; break;
1205:..\src/command_processing.c ****         }   
1206:..\src/command_processing.c ****             
1207:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1208:..\src/command_processing.c ****             // Use default specifications for param setting
1209:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1210:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1211:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1212:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 208


1213:..\src/command_processing.c ****                     }
1214:..\src/command_processing.c ****                     break;                
1215:..\src/command_processing.c ****                 case TYPE_STRING:
1216:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1217:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1220:..\src/command_processing.c ****                 break; 
1221:..\src/command_processing.c ****                 case TYPE_INT8:
1222:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1223:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1224:..\src/command_processing.c ****                     }
1225:..\src/command_processing.c ****                     break;                    
1226:..\src/command_processing.c ****                 case TYPE_INT16:
1227:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1228:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1229:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1230:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1231:..\src/command_processing.c ****                         }
1232:..\src/command_processing.c ****                     }                   
1233:..\src/command_processing.c ****                     break;
1234:..\src/command_processing.c ****                 case TYPE_UINT16:
1235:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1236:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1237:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1238:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1239:..\src/command_processing.c ****                         }
1240:..\src/command_processing.c ****                     }
1241:..\src/command_processing.c ****                     break;
1242:..\src/command_processing.c ****                 case TYPE_INT32:
1243:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1244:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1245:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1246:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1247:..\src/command_processing.c ****                         }
1248:..\src/command_processing.c ****                     }
1249:..\src/command_processing.c ****                     break;
1250:..\src/command_processing.c ****                 case TYPE_UINT32:
1251:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1252:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1253:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1254:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1255:..\src/command_processing.c ****                         }
1256:..\src/command_processing.c ****                     }
1257:..\src/command_processing.c ****                     break;
1258:..\src/command_processing.c ****                 case TYPE_FLOAT:
1259:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1260:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1261:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1262:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1263:..\src/command_processing.c ****                         }
1264:..\src/command_processing.c ****                     }
1265:..\src/command_processing.c ****                     break;
1266:..\src/command_processing.c ****                 default:
1267:..\src/command_processing.c ****                     break;
1268:..\src/command_processing.c ****             }
1269:..\src/command_processing.c ****         }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 209


1270:..\src/command_processing.c ****         else {  
1271:..\src/command_processing.c ****             // Use custom specifications for param setting
1272:..\src/command_processing.c ****             set_custom_param(index);
1273:..\src/command_processing.c ****         }
1274:..\src/command_processing.c ****         
1275:..\src/command_processing.c ****         // Store param also in user_emg structure
1276:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1277:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1278:..\src/command_processing.c ****         }
1279:..\src/command_processing.c ****         
1280:..\src/command_processing.c ****         // Perform chip reset if needed
1281:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1282:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1283:..\src/command_processing.c ****             do {
1284:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1285:..\src/command_processing.c ****                 idx++;
1286:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1287:..\src/command_processing.c ****             
1288:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1289:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1290:..\src/command_processing.c ****             }   
1291:..\src/command_processing.c ****         }
1292:..\src/command_processing.c ****     }
1293:..\src/command_processing.c **** } 
 8978              		.loc 1 1293 0
 8979 1376 DFE2     		b	.L376
 8980              	.L325:
1195:..\src/command_processing.c ****         
 8981              		.loc 1 1195 0
 8982 1378 BB1D     		adds	r3, r7, #6
 8983 137a 1B88     		ldrh	r3, [r3]	@ movhi
 8984 137c DBB2     		uxtb	r3, r3
 8985 137e 013B     		subs	r3, r3, #1
 8986 1380 87F87A35 		strb	r3, [r7, #1402]
1198:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8987              		.loc 1 1198 0
 8988 1384 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8989 1388 07F57272 		add	r2, r7, #968
 8990 138c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8991 138e 092B     		cmp	r3, #9
 8992 1390 22D8     		bhi	.L327
 8993 1392 01A2     		adr	r2, .L329
 8994 1394 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8995              		.p2align 2
 8996              	.L329:
 8997 1398 C1130000 		.word	.L328+1
 8998 139c C1130000 		.word	.L328+1
 8999 13a0 C1130000 		.word	.L328+1
 9000 13a4 C9130000 		.word	.L330+1
 9001 13a8 C9130000 		.word	.L330+1
 9002 13ac D1130000 		.word	.L331+1
 9003 13b0 D1130000 		.word	.L331+1
 9004 13b4 D1130000 		.word	.L331+1
 9005 13b8 D9130000 		.word	.L327+1
 9006 13bc C1130000 		.word	.L328+1
 9007              		.p2align 1
 9008              	.L328:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 210


1200:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 9009              		.loc 1 1200 0
 9010 13c0 0123     		movs	r3, #1
 9011 13c2 87F88535 		strb	r3, [r7, #1413]
 9012 13c6 07E0     		b	.L327
 9013              	.L330:
1202:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 9014              		.loc 1 1202 0
 9015 13c8 0223     		movs	r3, #2
 9016 13ca 87F88535 		strb	r3, [r7, #1413]
 9017 13ce 03E0     		b	.L327
 9018              	.L331:
1204:..\src/command_processing.c ****         }   
 9019              		.loc 1 1204 0
 9020 13d0 0423     		movs	r3, #4
 9021 13d2 87F88535 		strb	r3, [r7, #1413]
 9022 13d6 00BF     		nop
 9023              	.L327:
1207:..\src/command_processing.c ****             // Use default specifications for param setting
 9024              		.loc 1 1207 0
 9025 13d8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9026 13dc 07F10802 		add	r2, r7, #8
 9027 13e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9028 13e2 002B     		cmp	r3, #0
 9029 13e4 40F03B82 		bne	.L332
1209:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 9030              		.loc 1 1209 0
 9031 13e8 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9032 13ec 07F57272 		add	r2, r7, #968
 9033 13f0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9034 13f2 092B     		cmp	r3, #9
 9035 13f4 00F23C82 		bhi	.L375
 9036 13f8 01A2     		adr	r2, .L335
 9037 13fa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9038 13fe 00BF     		.p2align 2
 9039              	.L335:
 9040 1400 29140000 		.word	.L334+1
 9041 1404 27150000 		.word	.L336+1
 9042 1408 29140000 		.word	.L334+1
 9043 140c 79150000 		.word	.L337+1
 9044 1410 0F160000 		.word	.L338+1
 9045 1414 A3160000 		.word	.L339+1
 9046 1418 37170000 		.word	.L340+1
 9047 141c CB170000 		.word	.L341+1
 9048 1420 71180000 		.word	.L375+1
 9049 1424 75140000 		.word	.L342+1
 9050              		.p2align 1
 9051              	.L334:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9052              		.loc 1 1211 0
 9053 1428 0023     		movs	r3, #0
 9054 142a 87F88735 		strb	r3, [r7, #1415]
 9055 142e 17E0     		b	.L343
 9056              	.L344:
1212:..\src/command_processing.c ****                     }
 9057              		.loc 1 1212 0 discriminator 3
 9058 1430 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 211


 9059 1434 07F21C43 		addw	r3, r7, #1052
 9060 1438 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9061 143c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9062 1440 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9063 1444 01FB02F2 		mul	r2, r1, r2
 9064 1448 1344     		add	r3, r3, r2
 9065 144a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9066 144e 0332     		adds	r2, r2, #3
 9067 1450 1B49     		ldr	r1, .L383+68
 9068 1452 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9069 1454 1A70     		strb	r2, [r3]
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9070              		.loc 1 1211 0 discriminator 3
 9071 1456 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9072 145a 0133     		adds	r3, r3, #1
 9073 145c 87F88735 		strb	r3, [r7, #1415]
 9074              	.L343:
1211:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9075              		.loc 1 1211 0 is_stmt 0 discriminator 1
 9076 1460 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9077 1464 07F55D72 		add	r2, r7, #884
 9078 1468 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9079 146a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9080 146e 9A42     		cmp	r2, r3
 9081 1470 DED3     		bcc	.L344
1214:..\src/command_processing.c ****                 case TYPE_STRING:
 9082              		.loc 1 1214 0 is_stmt 1
 9083 1472 FEE1     		b	.L370
 9084              	.L342:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9085              		.loc 1 1216 0
 9086 1474 0023     		movs	r3, #0
 9087 1476 87F88735 		strb	r3, [r7, #1415]
 9088 147a 3BE0     		b	.L346
 9089              	.L384:
 9090              		.align	2
 9091              	.L383:
 9092 147c 280F0000 		.word	.LC129
 9093 1480 88020000 		.word	.LC130
 9094 1484 FC020000 		.word	.LC131
 9095 1488 34030000 		.word	.LC132
 9096 148c 6C030000 		.word	.LC133
 9097 1490 F8030000 		.word	.LC134
 9098 1494 38040000 		.word	.LC135
 9099 1498 64040000 		.word	.LC136
 9100 149c 7C040000 		.word	.LC137
 9101 14a0 A4040000 		.word	.LC138
 9102 14a4 00050000 		.word	.LC139
 9103 14a8 3C050000 		.word	.LC140
 9104 14ac 9C050000 		.word	.LC141
 9105 14b0 18060000 		.word	.LC142
 9106 14b4 74100000 		.word	.LC85
 9107 14b8 98100000 		.word	.LC86
 9108 14bc A4100000 		.word	.LC87
 9109 14c0 00000000 		.word	g_rx
 9110              	.L347:
1217:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 212


 9111              		.loc 1 1217 0 discriminator 3
 9112 14c4 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9113 14c8 07F21C43 		addw	r3, r7, #1052
 9114 14cc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9115 14d0 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9116 14d4 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9117 14d8 01FB02F2 		mul	r2, r1, r2
 9118 14dc 1344     		add	r3, r3, r2
 9119 14de 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9120 14e2 0332     		adds	r2, r2, #3
 9121 14e4 E149     		ldr	r1, .L385
 9122 14e6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9123 14e8 1A70     		strb	r2, [r3]
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9124              		.loc 1 1216 0 discriminator 3
 9125 14ea 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9126 14ee 0133     		adds	r3, r3, #1
 9127 14f0 87F88735 		strb	r3, [r7, #1415]
 9128              	.L346:
1216:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 9129              		.loc 1 1216 0 is_stmt 0 discriminator 1
 9130 14f4 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9131 14f8 07F55D72 		add	r2, r7, #884
 9132 14fc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9133 14fe 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9134 1502 9A42     		cmp	r2, r3
 9135 1504 DED3     		bcc	.L347
1219:..\src/command_processing.c ****                 break; 
 9136              		.loc 1 1219 0 is_stmt 1
 9137 1506 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9138 150a 07F21C43 		addw	r3, r7, #1052
 9139 150e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9140 1512 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9141 1516 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9142 151a 01FB02F2 		mul	r2, r1, r2
 9143 151e 1344     		add	r3, r3, r2
 9144 1520 0022     		movs	r2, #0
 9145 1522 1A70     		strb	r2, [r3]
1220:..\src/command_processing.c ****                 case TYPE_INT8:
 9146              		.loc 1 1220 0
 9147 1524 A5E1     		b	.L370
 9148              	.L336:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9149              		.loc 1 1222 0
 9150 1526 0023     		movs	r3, #0
 9151 1528 87F88735 		strb	r3, [r7, #1415]
 9152 152c 1AE0     		b	.L348
 9153              	.L349:
1223:..\src/command_processing.c ****                     }
 9154              		.loc 1 1223 0 discriminator 3
 9155 152e 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9156 1532 07F21C43 		addw	r3, r7, #1052
 9157 1536 53F82230 		ldr	r3, [r3, r2, lsl #2]
 9158 153a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9159 153e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9160 1542 01FB02F2 		mul	r2, r1, r2
 9161 1546 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 213


 9162 1548 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9163 154c 0332     		adds	r2, r2, #3
 9164 154e C749     		ldr	r1, .L385
 9165 1550 0A44     		add	r2, r2, r1
 9166 1552 92F90020 		ldrsb	r2, [r2]
 9167 1556 D2B2     		uxtb	r2, r2
 9168 1558 1A70     		strb	r2, [r3]
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9169              		.loc 1 1222 0 discriminator 3
 9170 155a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9171 155e 0133     		adds	r3, r3, #1
 9172 1560 87F88735 		strb	r3, [r7, #1415]
 9173              	.L348:
1222:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 9174              		.loc 1 1222 0 is_stmt 0 discriminator 1
 9175 1564 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9176 1568 07F55D72 		add	r2, r7, #884
 9177 156c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9178 156e 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9179 1572 9A42     		cmp	r2, r3
 9180 1574 DBD3     		bcc	.L349
1225:..\src/command_processing.c ****                 case TYPE_INT16:
 9181              		.loc 1 1225 0 is_stmt 1
 9182 1576 7CE1     		b	.L370
 9183              	.L337:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9184              		.loc 1 1227 0
 9185 1578 0023     		movs	r3, #0
 9186 157a 87F88735 		strb	r3, [r7, #1415]
 9187 157e 3CE0     		b	.L350
 9188              	.L353:
1228:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9189              		.loc 1 1228 0
 9190 1580 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9191 1584 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9192 1588 02FB03F3 		mul	r3, r2, r3
 9193 158c 0333     		adds	r3, r3, #3
 9194 158e B74A     		ldr	r2, .L385
 9195 1590 1344     		add	r3, r3, r2
 9196 1592 B3F90030 		ldrsh	r3, [r3]
 9197 1596 A7F87835 		strh	r3, [r7, #1400]	@ movhi
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9198              		.loc 1 1229 0
 9199 159a 0023     		movs	r3, #0
 9200 159c 87F88635 		strb	r3, [r7, #1414]
 9201 15a0 20E0     		b	.L351
 9202              	.L352:
1230:..\src/command_processing.c ****                         }
 9203              		.loc 1 1230 0 discriminator 3
 9204 15a2 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9205 15a6 07F21C43 		addw	r3, r7, #1052
 9206 15aa 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9207 15ae 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9208 15b2 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9209 15b6 01FB03F3 		mul	r3, r1, r3
 9210 15ba 1846     		mov	r0, r3
 9211 15bc 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 214


 9212 15c0 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9213 15c4 CB1A     		subs	r3, r1, r3
 9214 15c6 0344     		add	r3, r3, r0
 9215 15c8 013B     		subs	r3, r3, #1
 9216 15ca 1344     		add	r3, r3, r2
 9217 15cc 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9218 15d0 07F5AF61 		add	r1, r7, #1400
 9219 15d4 0A44     		add	r2, r2, r1
 9220 15d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9221 15d8 1A70     		strb	r2, [r3]
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9222              		.loc 1 1229 0 discriminator 3
 9223 15da 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9224 15de 0133     		adds	r3, r3, #1
 9225 15e0 87F88635 		strb	r3, [r7, #1414]
 9226              	.L351:
1229:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9227              		.loc 1 1229 0 is_stmt 0 discriminator 1
 9228 15e4 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9229 15e8 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9230 15ec 9A42     		cmp	r2, r3
 9231 15ee D8D3     		bcc	.L352
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9232              		.loc 1 1227 0 is_stmt 1 discriminator 2
 9233 15f0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9234 15f4 0133     		adds	r3, r3, #1
 9235 15f6 87F88735 		strb	r3, [r7, #1415]
 9236              	.L350:
1227:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9237              		.loc 1 1227 0 is_stmt 0 discriminator 1
 9238 15fa 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9239 15fe 07F55D72 		add	r2, r7, #884
 9240 1602 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9241 1604 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9242 1608 9A42     		cmp	r2, r3
 9243 160a B9D3     		bcc	.L353
1233:..\src/command_processing.c ****                 case TYPE_UINT16:
 9244              		.loc 1 1233 0 is_stmt 1
 9245 160c 31E1     		b	.L370
 9246              	.L338:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9247              		.loc 1 1235 0
 9248 160e 0023     		movs	r3, #0
 9249 1610 87F88735 		strb	r3, [r7, #1415]
 9250 1614 3BE0     		b	.L354
 9251              	.L357:
1236:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9252              		.loc 1 1236 0
 9253 1616 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9254 161a 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9255 161e 02FB03F3 		mul	r3, r2, r3
 9256 1622 0333     		adds	r3, r3, #3
 9257 1624 914A     		ldr	r2, .L385
 9258 1626 1344     		add	r3, r3, r2
 9259 1628 1B88     		ldrh	r3, [r3]
 9260 162a A7F87635 		strh	r3, [r7, #1398]	@ movhi
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 215


 9261              		.loc 1 1237 0
 9262 162e 0023     		movs	r3, #0
 9263 1630 87F88635 		strb	r3, [r7, #1414]
 9264 1634 20E0     		b	.L355
 9265              	.L356:
1238:..\src/command_processing.c ****                         }
 9266              		.loc 1 1238 0 discriminator 3
 9267 1636 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9268 163a 07F21C43 		addw	r3, r7, #1052
 9269 163e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9270 1642 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9271 1646 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9272 164a 01FB03F3 		mul	r3, r1, r3
 9273 164e 1846     		mov	r0, r3
 9274 1650 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9275 1654 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9276 1658 CB1A     		subs	r3, r1, r3
 9277 165a 0344     		add	r3, r3, r0
 9278 165c 013B     		subs	r3, r3, #1
 9279 165e 1344     		add	r3, r3, r2
 9280 1660 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9281 1664 07F27651 		addw	r1, r7, #1398
 9282 1668 0A44     		add	r2, r2, r1
 9283 166a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9284 166c 1A70     		strb	r2, [r3]
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9285              		.loc 1 1237 0 discriminator 3
 9286 166e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9287 1672 0133     		adds	r3, r3, #1
 9288 1674 87F88635 		strb	r3, [r7, #1414]
 9289              	.L355:
1237:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9290              		.loc 1 1237 0 is_stmt 0 discriminator 1
 9291 1678 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9292 167c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9293 1680 9A42     		cmp	r2, r3
 9294 1682 D8D3     		bcc	.L356
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9295              		.loc 1 1235 0 is_stmt 1 discriminator 2
 9296 1684 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9297 1688 0133     		adds	r3, r3, #1
 9298 168a 87F88735 		strb	r3, [r7, #1415]
 9299              	.L354:
1235:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9300              		.loc 1 1235 0 is_stmt 0 discriminator 1
 9301 168e 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9302 1692 07F55D72 		add	r2, r7, #884
 9303 1696 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9304 1698 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9305 169c 9A42     		cmp	r2, r3
 9306 169e BAD3     		bcc	.L357
1241:..\src/command_processing.c ****                 case TYPE_INT32:
 9307              		.loc 1 1241 0 is_stmt 1
 9308 16a0 E7E0     		b	.L370
 9309              	.L339:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9310              		.loc 1 1243 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 216


 9311 16a2 0023     		movs	r3, #0
 9312 16a4 87F88735 		strb	r3, [r7, #1415]
 9313 16a8 3BE0     		b	.L358
 9314              	.L361:
1244:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9315              		.loc 1 1244 0
 9316 16aa 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9317 16ae 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9318 16b2 02FB03F3 		mul	r3, r2, r3
 9319 16b6 0333     		adds	r3, r3, #3
 9320 16b8 6C4A     		ldr	r2, .L385
 9321 16ba 1344     		add	r3, r3, r2
 9322 16bc 1B68     		ldr	r3, [r3]
 9323 16be C7F87035 		str	r3, [r7, #1392]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9324              		.loc 1 1245 0
 9325 16c2 0023     		movs	r3, #0
 9326 16c4 87F88635 		strb	r3, [r7, #1414]
 9327 16c8 20E0     		b	.L359
 9328              	.L360:
1246:..\src/command_processing.c ****                         }
 9329              		.loc 1 1246 0 discriminator 3
 9330 16ca 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9331 16ce 07F21C43 		addw	r3, r7, #1052
 9332 16d2 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9333 16d6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9334 16da 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9335 16de 01FB03F3 		mul	r3, r1, r3
 9336 16e2 1846     		mov	r0, r3
 9337 16e4 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9338 16e8 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9339 16ec CB1A     		subs	r3, r1, r3
 9340 16ee 0344     		add	r3, r3, r0
 9341 16f0 013B     		subs	r3, r3, #1
 9342 16f2 1344     		add	r3, r3, r2
 9343 16f4 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9344 16f8 07F5AE61 		add	r1, r7, #1392
 9345 16fc 0A44     		add	r2, r2, r1
 9346 16fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9347 1700 1A70     		strb	r2, [r3]
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9348              		.loc 1 1245 0 discriminator 3
 9349 1702 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9350 1706 0133     		adds	r3, r3, #1
 9351 1708 87F88635 		strb	r3, [r7, #1414]
 9352              	.L359:
1245:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9353              		.loc 1 1245 0 is_stmt 0 discriminator 1
 9354 170c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9355 1710 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9356 1714 9A42     		cmp	r2, r3
 9357 1716 D8D3     		bcc	.L360
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9358              		.loc 1 1243 0 is_stmt 1 discriminator 2
 9359 1718 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9360 171c 0133     		adds	r3, r3, #1
 9361 171e 87F88735 		strb	r3, [r7, #1415]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 217


 9362              	.L358:
1243:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9363              		.loc 1 1243 0 is_stmt 0 discriminator 1
 9364 1722 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9365 1726 07F55D72 		add	r2, r7, #884
 9366 172a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9367 172c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9368 1730 9A42     		cmp	r2, r3
 9369 1732 BAD3     		bcc	.L361
1249:..\src/command_processing.c ****                 case TYPE_UINT32:
 9370              		.loc 1 1249 0 is_stmt 1
 9371 1734 9DE0     		b	.L370
 9372              	.L340:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9373              		.loc 1 1251 0
 9374 1736 0023     		movs	r3, #0
 9375 1738 87F88735 		strb	r3, [r7, #1415]
 9376 173c 3BE0     		b	.L362
 9377              	.L365:
1252:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9378              		.loc 1 1252 0
 9379 173e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9380 1742 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9381 1746 02FB03F3 		mul	r3, r2, r3
 9382 174a 0333     		adds	r3, r3, #3
 9383 174c 474A     		ldr	r2, .L385
 9384 174e 1344     		add	r3, r3, r2
 9385 1750 1B68     		ldr	r3, [r3]
 9386 1752 C7F86C35 		str	r3, [r7, #1388]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9387              		.loc 1 1253 0
 9388 1756 0023     		movs	r3, #0
 9389 1758 87F88635 		strb	r3, [r7, #1414]
 9390 175c 20E0     		b	.L363
 9391              	.L364:
1254:..\src/command_processing.c ****                         }
 9392              		.loc 1 1254 0 discriminator 3
 9393 175e 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9394 1762 07F21C43 		addw	r3, r7, #1052
 9395 1766 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9396 176a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9397 176e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9398 1772 01FB03F3 		mul	r3, r1, r3
 9399 1776 1846     		mov	r0, r3
 9400 1778 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9401 177c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9402 1780 CB1A     		subs	r3, r1, r3
 9403 1782 0344     		add	r3, r3, r0
 9404 1784 013B     		subs	r3, r3, #1
 9405 1786 1344     		add	r3, r3, r2
 9406 1788 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9407 178c 07F26C51 		addw	r1, r7, #1388
 9408 1790 0A44     		add	r2, r2, r1
 9409 1792 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9410 1794 1A70     		strb	r2, [r3]
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9411              		.loc 1 1253 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 218


 9412 1796 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9413 179a 0133     		adds	r3, r3, #1
 9414 179c 87F88635 		strb	r3, [r7, #1414]
 9415              	.L363:
1253:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9416              		.loc 1 1253 0 is_stmt 0 discriminator 1
 9417 17a0 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9418 17a4 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9419 17a8 9A42     		cmp	r2, r3
 9420 17aa D8D3     		bcc	.L364
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9421              		.loc 1 1251 0 is_stmt 1 discriminator 2
 9422 17ac 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9423 17b0 0133     		adds	r3, r3, #1
 9424 17b2 87F88735 		strb	r3, [r7, #1415]
 9425              	.L362:
1251:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9426              		.loc 1 1251 0 is_stmt 0 discriminator 1
 9427 17b6 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9428 17ba 07F55D72 		add	r2, r7, #884
 9429 17be D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9430 17c0 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9431 17c4 9A42     		cmp	r2, r3
 9432 17c6 BAD3     		bcc	.L365
1257:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9433              		.loc 1 1257 0 is_stmt 1
 9434 17c8 53E0     		b	.L370
 9435              	.L341:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9436              		.loc 1 1259 0
 9437 17ca 0023     		movs	r3, #0
 9438 17cc 87F88735 		strb	r3, [r7, #1415]
 9439 17d0 3BE0     		b	.L366
 9440              	.L369:
1260:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9441              		.loc 1 1260 0
 9442 17d2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9443 17d6 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9444 17da 02FB03F3 		mul	r3, r2, r3
 9445 17de 0333     		adds	r3, r3, #3
 9446 17e0 224A     		ldr	r2, .L385
 9447 17e2 1344     		add	r3, r3, r2
 9448 17e4 1B68     		ldr	r3, [r3]	@ float
 9449 17e6 C7F86835 		str	r3, [r7, #1384]	@ float
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9450              		.loc 1 1261 0
 9451 17ea 0023     		movs	r3, #0
 9452 17ec 87F88635 		strb	r3, [r7, #1414]
 9453 17f0 20E0     		b	.L367
 9454              	.L368:
1262:..\src/command_processing.c ****                         }
 9455              		.loc 1 1262 0 discriminator 3
 9456 17f2 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9457 17f6 07F21C43 		addw	r3, r7, #1052
 9458 17fa 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9459 17fe 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9460 1802 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 219


 9461 1806 01FB03F3 		mul	r3, r1, r3
 9462 180a 1846     		mov	r0, r3
 9463 180c 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9464 1810 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9465 1814 CB1A     		subs	r3, r1, r3
 9466 1816 0344     		add	r3, r3, r0
 9467 1818 013B     		subs	r3, r3, #1
 9468 181a 1344     		add	r3, r3, r2
 9469 181c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9470 1820 07F5AD61 		add	r1, r7, #1384
 9471 1824 0A44     		add	r2, r2, r1
 9472 1826 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9473 1828 1A70     		strb	r2, [r3]
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9474              		.loc 1 1261 0 discriminator 3
 9475 182a 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9476 182e 0133     		adds	r3, r3, #1
 9477 1830 87F88635 		strb	r3, [r7, #1414]
 9478              	.L367:
1261:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9479              		.loc 1 1261 0 is_stmt 0 discriminator 1
 9480 1834 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9481 1838 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9482 183c 9A42     		cmp	r2, r3
 9483 183e D8D3     		bcc	.L368
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9484              		.loc 1 1259 0 is_stmt 1 discriminator 2
 9485 1840 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9486 1844 0133     		adds	r3, r3, #1
 9487 1846 87F88735 		strb	r3, [r7, #1415]
 9488              	.L366:
1259:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9489              		.loc 1 1259 0 is_stmt 0 discriminator 1
 9490 184a 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9491 184e 07F55D72 		add	r2, r7, #884
 9492 1852 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9493 1854 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9494 1858 9A42     		cmp	r2, r3
 9495 185a BAD3     		bcc	.L369
1265:..\src/command_processing.c ****                 default:
 9496              		.loc 1 1265 0 is_stmt 1
 9497 185c 09E0     		b	.L370
 9498              	.L332:
1272:..\src/command_processing.c ****         }
 9499              		.loc 1 1272 0
 9500 185e BB1D     		adds	r3, r7, #6
 9501 1860 1B88     		ldrh	r3, [r3]
 9502 1862 1846     		mov	r0, r3
 9503 1864 FFF7FEFF 		bl	set_custom_param
 9504 1868 03E0     		b	.L370
 9505              	.L386:
 9506 186a 00BF     		.align	2
 9507              	.L385:
 9508 186c 00000000 		.word	g_rx
 9509              	.L375:
1267:..\src/command_processing.c ****             }
 9510              		.loc 1 1267 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 220


 9511 1870 00BF     		nop
 9512              	.L370:
1276:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9513              		.loc 1 1276 0
 9514 1872 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9515 1876 9BB2     		uxth	r3, r3
 9516 1878 BA1D     		adds	r2, r7, #6
 9517 187a 1288     		ldrh	r2, [r2]
 9518 187c 9A42     		cmp	r2, r3
 9519 187e 11D0     		beq	.L371
1277:..\src/command_processing.c ****         }
 9520              		.loc 1 1277 0
 9521 1880 D7F88035 		ldr	r3, [r7, #1408]
 9522 1884 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9523 1888 5B01     		lsls	r3, r3, #5
 9524 188a 03F51273 		add	r3, r3, #584
 9525 188e D7F88025 		ldr	r2, [r7, #1408]
 9526 1892 D018     		adds	r0, r2, r3
 9527 1894 D7F88035 		ldr	r3, [r7, #1408]
 9528 1898 03F5F873 		add	r3, r3, #496
 9529 189c 1022     		movs	r2, #16
 9530 189e 1946     		mov	r1, r3
 9531 18a0 FFF7FEFF 		bl	memcpy
 9532              	.L371:
1281:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9533              		.loc 1 1281 0
 9534 18a4 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9535 18a8 07F57272 		add	r2, r7, #968
 9536 18ac D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9537 18ae 002B     		cmp	r3, #0
 9538 18b0 42D1     		bne	.L376
 9539              	.LBB22:
1282:..\src/command_processing.c ****             do {
 9540              		.loc 1 1282 0
 9541 18b2 0023     		movs	r3, #0
 9542 18b4 87F87F35 		strb	r3, [r7, #1407]
 9543 18b8 FF23     		movs	r3, #255
 9544 18ba 87F87E35 		strb	r3, [r7, #1406]
 9545              	.L373:
1284:..\src/command_processing.c ****                 idx++;
 9546              		.loc 1 1284 0
 9547 18be 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9548 18c2 07F57272 		add	r2, r7, #968
 9549 18c6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9550 18c8 002B     		cmp	r3, #0
 9551 18ca 04D1     		bne	.L372
1284:..\src/command_processing.c ****                 idx++;
 9552              		.loc 1 1284 0 is_stmt 0 discriminator 1
 9553 18cc 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9554 18d0 0133     		adds	r3, r3, #1
 9555 18d2 87F87E35 		strb	r3, [r7, #1406]
 9556              	.L372:
1285:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9557              		.loc 1 1285 0 is_stmt 1
 9558 18d6 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9559 18da 0133     		adds	r3, r3, #1
 9560 18dc 87F87F35 		strb	r3, [r7, #1407]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 221


1286:..\src/command_processing.c ****             
 9561              		.loc 1 1286 0
 9562 18e0 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9563 18e4 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9564 18e8 9A42     		cmp	r2, r3
 9565 18ea E8D9     		bls	.L373
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9566              		.loc 1 1288 0
 9567 18ec 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9568 18f0 07F1D002 		add	r2, r7, #208
 9569 18f4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9570 18f6 052B     		cmp	r3, #5
 9571 18f8 1BD0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9572              		.loc 1 1288 0 is_stmt 0 discriminator 1
 9573 18fa 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9574 18fe 07F1D002 		add	r2, r7, #208
 9575 1902 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9576 1904 062B     		cmp	r3, #6
 9577 1906 14D0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9578              		.loc 1 1288 0 discriminator 2
 9579 1908 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9580 190c 07F1D002 		add	r2, r7, #208
 9581 1910 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9582 1912 082B     		cmp	r3, #8
 9583 1914 0DD0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9584              		.loc 1 1288 0 discriminator 3
 9585 1916 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9586 191a 07F1D002 		add	r2, r7, #208
 9587 191e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9588 1920 092B     		cmp	r3, #9
 9589 1922 06D0     		beq	.L374
1288:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9590              		.loc 1 1288 0 discriminator 4
 9591 1924 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9592 1928 07F1D002 		add	r2, r7, #208
 9593 192c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9594 192e 0A2B     		cmp	r3, #10
 9595 1930 02D1     		bne	.L376
 9596              	.L374:
1289:..\src/command_processing.c ****             }   
 9597              		.loc 1 1289 0 is_stmt 1
 9598 1932 044B     		ldr	r3, .L387
 9599 1934 0122     		movs	r2, #1
 9600 1936 1A70     		strb	r2, [r3]
 9601              	.L376:
 9602              	.LBE22:
 9603              		.loc 1 1293 0
 9604 1938 00BF     		nop
 9605 193a 07F28C57 		addw	r7, r7, #1420
 9606              		.cfi_def_cfa_offset 20
 9607 193e BD46     		mov	sp, r7
 9608              		.cfi_def_cfa_register 13
 9609              		@ sp needed
 9610 1940 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 222


 9611              	.L388:
 9612 1942 00BF     		.align	2
 9613              	.L387:
 9614 1944 00000000 		.word	reset_PSoC_flag
 9615              		.cfi_endproc
 9616              	.LFE68:
 9617              		.size	manage_param_list, .-manage_param_list
 9618              		.global	__aeabi_fmul
 9619              		.global	__aeabi_f2iz
 9620              		.section	.text.set_custom_param,"ax",%progbits
 9621              		.align	2
 9622              		.global	set_custom_param
 9623              		.thumb
 9624              		.thumb_func
 9625              		.type	set_custom_param, %function
 9626              	set_custom_param:
 9627              	.LFB69:
1294:..\src/command_processing.c **** 
1295:..\src/command_processing.c **** //==============================================================================
1296:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1297:..\src/command_processing.c **** //==============================================================================
1298:..\src/command_processing.c **** 
1299:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9628              		.loc 1 1299 0
 9629              		.cfi_startproc
 9630              		@ args = 0, pretend = 0, frame = 24
 9631              		@ frame_needed = 1, uses_anonymous_args = 0
 9632 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9633              		.cfi_def_cfa_offset 20
 9634              		.cfi_offset 4, -20
 9635              		.cfi_offset 5, -16
 9636              		.cfi_offset 6, -12
 9637              		.cfi_offset 7, -8
 9638              		.cfi_offset 14, -4
 9639 0002 87B0     		sub	sp, sp, #28
 9640              		.cfi_def_cfa_offset 48
 9641 0004 00AF     		add	r7, sp, #0
 9642              		.cfi_def_cfa_register 7
 9643 0006 0346     		mov	r3, r0
 9644 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1300:..\src/command_processing.c **** 
1301:..\src/command_processing.c ****     uint8 CYDATA i, j;
1302:..\src/command_processing.c ****     uint8 aux_uchar;
1303:..\src/command_processing.c ****     float aux_float, aux_float2;
1304:..\src/command_processing.c **** 
1305:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9645              		.loc 1 1305 0
 9646 000a 0023     		movs	r3, #0
 9647 000c 3B75     		strb	r3, [r7, #20]
1306:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9648              		.loc 1 1306 0
 9649 000e 0123     		movs	r3, #1
 9650 0010 FB74     		strb	r3, [r7, #19]
1307:..\src/command_processing.c ****     
1308:..\src/command_processing.c ****     switch(index){
 9651              		.loc 1 1308 0
 9652 0012 FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 223


 9653 0014 023B     		subs	r3, r3, #2
 9654 0016 492B     		cmp	r3, #73
 9655 0018 01F24C82 		bhi	.L484
 9656 001c 01A2     		adr	r2, .L392
 9657 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9658 0022 00BF     		.p2align 2
 9659              	.L392:
 9660 0024 4D010000 		.word	.L391+1
 9661 0028 7F030000 		.word	.L393+1
 9662 002c B5140000 		.word	.L484+1
 9663 0030 C5050000 		.word	.L394+1
 9664 0034 B5140000 		.word	.L484+1
 9665 0038 B5140000 		.word	.L484+1
 9666 003c 0F060000 		.word	.L395+1
 9667 0040 B5140000 		.word	.L484+1
 9668 0044 B5140000 		.word	.L484+1
 9669 0048 49070000 		.word	.L396+1
 9670 004c B5140000 		.word	.L484+1
 9671 0050 B5140000 		.word	.L484+1
 9672 0054 B5140000 		.word	.L484+1
 9673 0058 B5140000 		.word	.L484+1
 9674 005c B5140000 		.word	.L484+1
 9675 0060 B5140000 		.word	.L484+1
 9676 0064 B5140000 		.word	.L484+1
 9677 0068 B5140000 		.word	.L484+1
 9678 006c B5140000 		.word	.L484+1
 9679 0070 B5140000 		.word	.L484+1
 9680 0074 B5140000 		.word	.L484+1
 9681 0078 49080000 		.word	.L397+1
 9682 007c A7080000 		.word	.L398+1
 9683 0080 B5140000 		.word	.L484+1
 9684 0084 B5140000 		.word	.L484+1
 9685 0088 B5140000 		.word	.L484+1
 9686 008c E1080000 		.word	.L399+1
 9687 0090 B5140000 		.word	.L484+1
 9688 0094 B5140000 		.word	.L484+1
 9689 0098 5D0A0000 		.word	.L400+1
 9690 009c 090B0000 		.word	.L401+1
 9691 00a0 B5140000 		.word	.L484+1
 9692 00a4 B5140000 		.word	.L484+1
 9693 00a8 B5140000 		.word	.L484+1
 9694 00ac B5140000 		.word	.L484+1
 9695 00b0 B5140000 		.word	.L484+1
 9696 00b4 430B0000 		.word	.L402+1
 9697 00b8 B5140000 		.word	.L484+1
 9698 00bc B5140000 		.word	.L484+1
 9699 00c0 B5140000 		.word	.L484+1
 9700 00c4 B5140000 		.word	.L484+1
 9701 00c8 B5140000 		.word	.L484+1
 9702 00cc 630B0000 		.word	.L403+1
 9703 00d0 AB0D0000 		.word	.L404+1
 9704 00d4 B5140000 		.word	.L484+1
 9705 00d8 D90F0000 		.word	.L405+1
 9706 00dc B5140000 		.word	.L484+1
 9707 00e0 B5140000 		.word	.L484+1
 9708 00e4 21100000 		.word	.L406+1
 9709 00e8 B5140000 		.word	.L484+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 224


 9710 00ec B5140000 		.word	.L484+1
 9711 00f0 59110000 		.word	.L407+1
 9712 00f4 B5140000 		.word	.L484+1
 9713 00f8 B5140000 		.word	.L484+1
 9714 00fc B5140000 		.word	.L484+1
 9715 0100 B5140000 		.word	.L484+1
 9716 0104 B5140000 		.word	.L484+1
 9717 0108 B5140000 		.word	.L484+1
 9718 010c B5140000 		.word	.L484+1
 9719 0110 57120000 		.word	.L408+1
 9720 0114 B5140000 		.word	.L484+1
 9721 0118 B5140000 		.word	.L484+1
 9722 011c B5140000 		.word	.L484+1
 9723 0120 B5140000 		.word	.L484+1
 9724 0124 B5140000 		.word	.L484+1
 9725 0128 B5140000 		.word	.L484+1
 9726 012c B5140000 		.word	.L484+1
 9727 0130 B5140000 		.word	.L484+1
 9728 0134 B5140000 		.word	.L484+1
 9729 0138 B5140000 		.word	.L484+1
 9730 013c B5140000 		.word	.L484+1
 9731 0140 B5140000 		.word	.L484+1
 9732 0144 B5140000 		.word	.L484+1
 9733 0148 85120000 		.word	.L409+1
 9734              		.p2align 1
 9735              	.L391:
1309:..\src/command_processing.c ****         case 2:         // Position PID
1310:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9736              		.loc 1 1310 0
 9737 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9738 014e AB49     		ldr	r1, .L490
 9739 0150 1346     		mov	r3, r2
 9740 0152 DB00     		lsls	r3, r3, #3
 9741 0154 9B1A     		subs	r3, r3, r2
 9742 0156 1B01     		lsls	r3, r3, #4
 9743 0158 0B44     		add	r3, r3, r1
 9744 015a 03F20F13 		addw	r3, r3, #271
 9745 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9746 0160 032B     		cmp	r3, #3
 9747 0162 00F08680 		beq	.L410
1311:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9748              		.loc 1 1311 0
 9749 0166 A64B     		ldr	r3, .L490+4
 9750 0168 1B68     		ldr	r3, [r3]	@ float
 9751 016a FB60     		str	r3, [r7, #12]	@ float
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9752              		.loc 1 1312 0
 9753 016c 0023     		movs	r3, #0
 9754 016e BB75     		strb	r3, [r7, #22]
 9755 0170 0EE0     		b	.L411
 9756              	.L412:
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9757              		.loc 1 1313 0 discriminator 3
 9758 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9759 0174 C3F10303 		rsb	r3, r3, #3
 9760 0178 07F10802 		add	r2, r7, #8
 9761 017c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 225


 9762 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9763 0180 07F10C01 		add	r1, r7, #12
 9764 0184 0A44     		add	r2, r2, r1
 9765 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9766 0188 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9767              		.loc 1 1312 0 discriminator 3
 9768 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9769 018c 0133     		adds	r3, r3, #1
 9770 018e BB75     		strb	r3, [r7, #22]
 9771              	.L411:
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9772              		.loc 1 1312 0 is_stmt 0 discriminator 1
 9773 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9774 0192 032B     		cmp	r3, #3
 9775 0194 EDD9     		bls	.L412
1314:..\src/command_processing.c ****                 }
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9776              		.loc 1 1315 0 is_stmt 1
 9777 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9778 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9779 019a 4FF08F41 		mov	r1, #1199570944
 9780 019e 1846     		mov	r0, r3
 9781 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9782 01a4 0346     		mov	r3, r0
 9783 01a6 1846     		mov	r0, r3
 9784 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9785 01ac 0146     		mov	r1, r0
 9786 01ae 954A     		ldr	r2, .L490+8
 9787 01b0 2346     		mov	r3, r4
 9788 01b2 DB00     		lsls	r3, r3, #3
 9789 01b4 1B1B     		subs	r3, r3, r4
 9790 01b6 1B01     		lsls	r3, r3, #4
 9791 01b8 1344     		add	r3, r3, r2
 9792 01ba B033     		adds	r3, r3, #176
 9793 01bc 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****                 
1317:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9794              		.loc 1 1317 0
 9795 01be 924B     		ldr	r3, .L490+12
 9796 01c0 1B68     		ldr	r3, [r3]	@ float
 9797 01c2 FB60     		str	r3, [r7, #12]	@ float
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9798              		.loc 1 1318 0
 9799 01c4 0023     		movs	r3, #0
 9800 01c6 BB75     		strb	r3, [r7, #22]
 9801 01c8 0EE0     		b	.L413
 9802              	.L414:
1319:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9803              		.loc 1 1319 0 discriminator 3
 9804 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9805 01cc C3F10303 		rsb	r3, r3, #3
 9806 01d0 07F10802 		add	r2, r7, #8
 9807 01d4 1344     		add	r3, r3, r2
 9808 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9809 01d8 07F10C01 		add	r1, r7, #12
 9810 01dc 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 226


 9811 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9812 01e0 1A70     		strb	r2, [r3]
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9813              		.loc 1 1318 0 discriminator 3
 9814 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9815 01e4 0133     		adds	r3, r3, #1
 9816 01e6 BB75     		strb	r3, [r7, #22]
 9817              	.L413:
1318:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9818              		.loc 1 1318 0 is_stmt 0 discriminator 1
 9819 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9820 01ea 032B     		cmp	r3, #3
 9821 01ec EDD9     		bls	.L414
1320:..\src/command_processing.c ****                 }
1321:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9822              		.loc 1 1321 0 is_stmt 1
 9823 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9824 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9825 01f2 4FF08F41 		mov	r1, #1199570944
 9826 01f6 1846     		mov	r0, r3
 9827 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9828 01fc 0346     		mov	r3, r0
 9829 01fe 1846     		mov	r0, r3
 9830 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9831 0204 0146     		mov	r1, r0
 9832 0206 7F4A     		ldr	r2, .L490+8
 9833 0208 2346     		mov	r3, r4
 9834 020a DB00     		lsls	r3, r3, #3
 9835 020c 1B1B     		subs	r3, r3, r4
 9836 020e 1B01     		lsls	r3, r3, #4
 9837 0210 1344     		add	r3, r3, r2
 9838 0212 B433     		adds	r3, r3, #180
 9839 0214 1960     		str	r1, [r3]
1322:..\src/command_processing.c ****                 
1323:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9840              		.loc 1 1323 0
 9841 0216 7D4B     		ldr	r3, .L490+16
 9842 0218 1B68     		ldr	r3, [r3]	@ float
 9843 021a FB60     		str	r3, [r7, #12]	@ float
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9844              		.loc 1 1324 0
 9845 021c 0023     		movs	r3, #0
 9846 021e BB75     		strb	r3, [r7, #22]
 9847 0220 0EE0     		b	.L415
 9848              	.L416:
1325:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9849              		.loc 1 1325 0 discriminator 3
 9850 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9851 0224 C3F10303 		rsb	r3, r3, #3
 9852 0228 07F10802 		add	r2, r7, #8
 9853 022c 1344     		add	r3, r3, r2
 9854 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9855 0230 07F10C01 		add	r1, r7, #12
 9856 0234 0A44     		add	r2, r2, r1
 9857 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9858 0238 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 227


 9859              		.loc 1 1324 0 discriminator 3
 9860 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9861 023c 0133     		adds	r3, r3, #1
 9862 023e BB75     		strb	r3, [r7, #22]
 9863              	.L415:
1324:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9864              		.loc 1 1324 0 is_stmt 0 discriminator 1
 9865 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9866 0242 032B     		cmp	r3, #3
 9867 0244 EDD9     		bls	.L416
1326:..\src/command_processing.c ****                 }
1327:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9868              		.loc 1 1327 0 is_stmt 1
 9869 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9870 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9871 024a 4FF08F41 		mov	r1, #1199570944
 9872 024e 1846     		mov	r0, r3
 9873 0250 FFF7FEFF 		bl	__aeabi_fmul
 9874 0254 0346     		mov	r3, r0
 9875 0256 1846     		mov	r0, r3
 9876 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9877 025c 0146     		mov	r1, r0
 9878 025e 694A     		ldr	r2, .L490+8
 9879 0260 2346     		mov	r3, r4
 9880 0262 DB00     		lsls	r3, r3, #3
 9881 0264 1B1B     		subs	r3, r3, r4
 9882 0266 1B01     		lsls	r3, r3, #4
 9883 0268 1344     		add	r3, r3, r2
 9884 026a B833     		adds	r3, r3, #184
 9885 026c 1960     		str	r1, [r3]
1328:..\src/command_processing.c ****             }
1329:..\src/command_processing.c ****             else {
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1335:..\src/command_processing.c ****                 
1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1341:..\src/command_processing.c ****                 
1342:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1345:..\src/command_processing.c ****                 }
1346:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1347:..\src/command_processing.c ****             }
1348:..\src/command_processing.c ****             break;
 9886              		.loc 1 1348 0
 9887 026e 01F02CB9 		b	.L424
 9888              	.L410:
1330:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9889              		.loc 1 1330 0
 9890 0272 634B     		ldr	r3, .L490+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 228


 9891 0274 1B68     		ldr	r3, [r3]	@ float
 9892 0276 FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9893              		.loc 1 1331 0
 9894 0278 0023     		movs	r3, #0
 9895 027a BB75     		strb	r3, [r7, #22]
 9896 027c 0EE0     		b	.L418
 9897              	.L419:
1332:..\src/command_processing.c ****                 }
 9898              		.loc 1 1332 0 discriminator 3
 9899 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9900 0280 C3F10303 		rsb	r3, r3, #3
 9901 0284 07F10802 		add	r2, r7, #8
 9902 0288 1344     		add	r3, r3, r2
 9903 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9904 028c 07F10C01 		add	r1, r7, #12
 9905 0290 0A44     		add	r2, r2, r1
 9906 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9907 0294 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9908              		.loc 1 1331 0 discriminator 3
 9909 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9910 0298 0133     		adds	r3, r3, #1
 9911 029a BB75     		strb	r3, [r7, #22]
 9912              	.L418:
1331:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9913              		.loc 1 1331 0 is_stmt 0 discriminator 1
 9914 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9915 029e 032B     		cmp	r3, #3
 9916 02a0 EDD9     		bls	.L419
1334:..\src/command_processing.c ****                 
 9917              		.loc 1 1334 0 is_stmt 1
 9918 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9919 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9920 02a6 4FF08F41 		mov	r1, #1199570944
 9921 02aa 1846     		mov	r0, r3
 9922 02ac FFF7FEFF 		bl	__aeabi_fmul
 9923 02b0 0346     		mov	r3, r0
 9924 02b2 1846     		mov	r0, r3
 9925 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9926 02b8 0146     		mov	r1, r0
 9927 02ba 524A     		ldr	r2, .L490+8
 9928 02bc 2346     		mov	r3, r4
 9929 02be DB00     		lsls	r3, r3, #3
 9930 02c0 1B1B     		subs	r3, r3, r4
 9931 02c2 1B01     		lsls	r3, r3, #4
 9932 02c4 1344     		add	r3, r3, r2
 9933 02c6 C833     		adds	r3, r3, #200
 9934 02c8 1960     		str	r1, [r3]
1336:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9935              		.loc 1 1336 0
 9936 02ca 4F4B     		ldr	r3, .L490+12
 9937 02cc 1B68     		ldr	r3, [r3]	@ float
 9938 02ce FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9939              		.loc 1 1337 0
 9940 02d0 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 229


 9941 02d2 BB75     		strb	r3, [r7, #22]
 9942 02d4 0EE0     		b	.L420
 9943              	.L421:
1338:..\src/command_processing.c ****                 }
 9944              		.loc 1 1338 0 discriminator 3
 9945 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9946 02d8 C3F10303 		rsb	r3, r3, #3
 9947 02dc 07F10802 		add	r2, r7, #8
 9948 02e0 1344     		add	r3, r3, r2
 9949 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9950 02e4 07F10C01 		add	r1, r7, #12
 9951 02e8 0A44     		add	r2, r2, r1
 9952 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9953 02ec 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9954              		.loc 1 1337 0 discriminator 3
 9955 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9956 02f0 0133     		adds	r3, r3, #1
 9957 02f2 BB75     		strb	r3, [r7, #22]
 9958              	.L420:
1337:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9959              		.loc 1 1337 0 is_stmt 0 discriminator 1
 9960 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9961 02f6 032B     		cmp	r3, #3
 9962 02f8 EDD9     		bls	.L421
1340:..\src/command_processing.c ****                 
 9963              		.loc 1 1340 0 is_stmt 1
 9964 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9965 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9966 02fe 4FF08F41 		mov	r1, #1199570944
 9967 0302 1846     		mov	r0, r3
 9968 0304 FFF7FEFF 		bl	__aeabi_fmul
 9969 0308 0346     		mov	r3, r0
 9970 030a 1846     		mov	r0, r3
 9971 030c FFF7FEFF 		bl	__aeabi_f2iz
 9972 0310 0146     		mov	r1, r0
 9973 0312 3C4A     		ldr	r2, .L490+8
 9974 0314 2346     		mov	r3, r4
 9975 0316 DB00     		lsls	r3, r3, #3
 9976 0318 1B1B     		subs	r3, r3, r4
 9977 031a 1B01     		lsls	r3, r3, #4
 9978 031c 1344     		add	r3, r3, r2
 9979 031e CC33     		adds	r3, r3, #204
 9980 0320 1960     		str	r1, [r3]
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9981              		.loc 1 1342 0
 9982 0322 3A4B     		ldr	r3, .L490+16
 9983 0324 1B68     		ldr	r3, [r3]	@ float
 9984 0326 FB60     		str	r3, [r7, #12]	@ float
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9985              		.loc 1 1343 0
 9986 0328 0023     		movs	r3, #0
 9987 032a BB75     		strb	r3, [r7, #22]
 9988 032c 0EE0     		b	.L422
 9989              	.L423:
1344:..\src/command_processing.c ****                 }
 9990              		.loc 1 1344 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 230


 9991 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9992 0330 C3F10303 		rsb	r3, r3, #3
 9993 0334 07F10802 		add	r2, r7, #8
 9994 0338 1344     		add	r3, r3, r2
 9995 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9996 033c 07F10C01 		add	r1, r7, #12
 9997 0340 0A44     		add	r2, r2, r1
 9998 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9999 0344 1A70     		strb	r2, [r3]
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10000              		.loc 1 1343 0 discriminator 3
 10001 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10002 0348 0133     		adds	r3, r3, #1
 10003 034a BB75     		strb	r3, [r7, #22]
 10004              	.L422:
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10005              		.loc 1 1343 0 is_stmt 0 discriminator 1
 10006 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10007 034e 032B     		cmp	r3, #3
 10008 0350 EDD9     		bls	.L423
1346:..\src/command_processing.c ****             }
 10009              		.loc 1 1346 0 is_stmt 1
 10010 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10011 0354 BB68     		ldr	r3, [r7, #8]	@ float
 10012 0356 4FF08F41 		mov	r1, #1199570944
 10013 035a 1846     		mov	r0, r3
 10014 035c FFF7FEFF 		bl	__aeabi_fmul
 10015 0360 0346     		mov	r3, r0
 10016 0362 1846     		mov	r0, r3
 10017 0364 FFF7FEFF 		bl	__aeabi_f2iz
 10018 0368 0146     		mov	r1, r0
 10019 036a 264A     		ldr	r2, .L490+8
 10020 036c 2346     		mov	r3, r4
 10021 036e DB00     		lsls	r3, r3, #3
 10022 0370 1B1B     		subs	r3, r3, r4
 10023 0372 1B01     		lsls	r3, r3, #4
 10024 0374 1344     		add	r3, r3, r2
 10025 0376 D033     		adds	r3, r3, #208
 10026 0378 1960     		str	r1, [r3]
 10027              		.loc 1 1348 0
 10028 037a 01F0A6B8 		b	.L424
 10029              	.L393:
1349:..\src/command_processing.c ****             
1350:..\src/command_processing.c ****         case 3:         //Current PID
1351:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10030              		.loc 1 1351 0
 10031 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10032 0380 1E49     		ldr	r1, .L490
 10033 0382 1346     		mov	r3, r2
 10034 0384 DB00     		lsls	r3, r3, #3
 10035 0386 9B1A     		subs	r3, r3, r2
 10036 0388 1B01     		lsls	r3, r3, #4
 10037 038a 0B44     		add	r3, r3, r1
 10038 038c 03F20F13 		addw	r3, r3, #271
 10039 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10040 0392 032B     		cmp	r3, #3
 10041 0394 00F09080 		beq	.L425
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 231


1352:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10042              		.loc 1 1352 0
 10043 0398 194B     		ldr	r3, .L490+4
 10044 039a 1B68     		ldr	r3, [r3]	@ float
 10045 039c FB60     		str	r3, [r7, #12]	@ float
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10046              		.loc 1 1353 0
 10047 039e 0023     		movs	r3, #0
 10048 03a0 BB75     		strb	r3, [r7, #22]
 10049 03a2 0EE0     		b	.L426
 10050              	.L427:
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10051              		.loc 1 1354 0 discriminator 3
 10052 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10053 03a6 C3F10303 		rsb	r3, r3, #3
 10054 03aa 07F10802 		add	r2, r7, #8
 10055 03ae 1344     		add	r3, r3, r2
 10056 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10057 03b2 07F10C01 		add	r1, r7, #12
 10058 03b6 0A44     		add	r2, r2, r1
 10059 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10060 03ba 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10061              		.loc 1 1353 0 discriminator 3
 10062 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10063 03be 0133     		adds	r3, r3, #1
 10064 03c0 BB75     		strb	r3, [r7, #22]
 10065              	.L426:
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10066              		.loc 1 1353 0 is_stmt 0 discriminator 1
 10067 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10068 03c4 032B     		cmp	r3, #3
 10069 03c6 EDD9     		bls	.L427
1355:..\src/command_processing.c ****                 }
1356:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10070              		.loc 1 1356 0 is_stmt 1
 10071 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10072 03ca BB68     		ldr	r3, [r7, #8]	@ float
 10073 03cc 4FF08F41 		mov	r1, #1199570944
 10074 03d0 1846     		mov	r0, r3
 10075 03d2 FFF7FEFF 		bl	__aeabi_fmul
 10076 03d6 0346     		mov	r3, r0
 10077 03d8 1846     		mov	r0, r3
 10078 03da FFF7FEFF 		bl	__aeabi_f2iz
 10079 03de 0146     		mov	r1, r0
 10080 03e0 084A     		ldr	r2, .L490+8
 10081 03e2 2346     		mov	r3, r4
 10082 03e4 DB00     		lsls	r3, r3, #3
 10083 03e6 1B1B     		subs	r3, r3, r4
 10084 03e8 1B01     		lsls	r3, r3, #4
 10085 03ea 1344     		add	r3, r3, r2
 10086 03ec BC33     		adds	r3, r3, #188
 10087 03ee 1960     		str	r1, [r3]
1357:..\src/command_processing.c ****                 
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10088              		.loc 1 1358 0
 10089 03f0 054B     		ldr	r3, .L490+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 232


 10090 03f2 1B68     		ldr	r3, [r3]	@ float
 10091 03f4 FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10092              		.loc 1 1359 0
 10093 03f6 0023     		movs	r3, #0
 10094 03f8 BB75     		strb	r3, [r7, #22]
 10095 03fa 18E0     		b	.L428
 10096              	.L491:
 10097              		.align	2
 10098              	.L490:
 10099 03fc 00000000 		.word	c_mem
 10100 0400 03000000 		.word	g_rx+3
 10101 0404 00000000 		.word	g_mem
 10102 0408 07000000 		.word	g_rx+7
 10103 040c 0B000000 		.word	g_rx+11
 10104              	.L429:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10105              		.loc 1 1360 0 discriminator 3
 10106 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10107 0412 C3F10303 		rsb	r3, r3, #3
 10108 0416 07F10802 		add	r2, r7, #8
 10109 041a 1344     		add	r3, r3, r2
 10110 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10111 041e 07F10C01 		add	r1, r7, #12
 10112 0422 0A44     		add	r2, r2, r1
 10113 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10114 0426 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10115              		.loc 1 1359 0 discriminator 3
 10116 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10117 042a 0133     		adds	r3, r3, #1
 10118 042c BB75     		strb	r3, [r7, #22]
 10119              	.L428:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10120              		.loc 1 1359 0 is_stmt 0 discriminator 1
 10121 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10122 0430 032B     		cmp	r3, #3
 10123 0432 EDD9     		bls	.L429
1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10124              		.loc 1 1362 0 is_stmt 1
 10125 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10126 0436 BB68     		ldr	r3, [r7, #8]	@ float
 10127 0438 4FF08F41 		mov	r1, #1199570944
 10128 043c 1846     		mov	r0, r3
 10129 043e FFF7FEFF 		bl	__aeabi_fmul
 10130 0442 0346     		mov	r3, r0
 10131 0444 1846     		mov	r0, r3
 10132 0446 FFF7FEFF 		bl	__aeabi_f2iz
 10133 044a 0146     		mov	r1, r0
 10134 044c B64A     		ldr	r2, .L492
 10135 044e 2346     		mov	r3, r4
 10136 0450 DB00     		lsls	r3, r3, #3
 10137 0452 1B1B     		subs	r3, r3, r4
 10138 0454 1B01     		lsls	r3, r3, #4
 10139 0456 1344     		add	r3, r3, r2
 10140 0458 C033     		adds	r3, r3, #192
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 233


 10141 045a 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****                 
1364:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10142              		.loc 1 1364 0
 10143 045c B34B     		ldr	r3, .L492+4
 10144 045e 1B68     		ldr	r3, [r3]	@ float
 10145 0460 FB60     		str	r3, [r7, #12]	@ float
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10146              		.loc 1 1365 0
 10147 0462 0023     		movs	r3, #0
 10148 0464 BB75     		strb	r3, [r7, #22]
 10149 0466 0EE0     		b	.L430
 10150              	.L431:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10151              		.loc 1 1366 0 discriminator 3
 10152 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10153 046a C3F10303 		rsb	r3, r3, #3
 10154 046e 07F10802 		add	r2, r7, #8
 10155 0472 1344     		add	r3, r3, r2
 10156 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10157 0476 07F10C01 		add	r1, r7, #12
 10158 047a 0A44     		add	r2, r2, r1
 10159 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10160 047e 1A70     		strb	r2, [r3]
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10161              		.loc 1 1365 0 discriminator 3
 10162 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10163 0482 0133     		adds	r3, r3, #1
 10164 0484 BB75     		strb	r3, [r7, #22]
 10165              	.L430:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10166              		.loc 1 1365 0 is_stmt 0 discriminator 1
 10167 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10168 0488 032B     		cmp	r3, #3
 10169 048a EDD9     		bls	.L431
1367:..\src/command_processing.c ****                 }
1368:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10170              		.loc 1 1368 0 is_stmt 1
 10171 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10172 048e BB68     		ldr	r3, [r7, #8]	@ float
 10173 0490 4FF08F41 		mov	r1, #1199570944
 10174 0494 1846     		mov	r0, r3
 10175 0496 FFF7FEFF 		bl	__aeabi_fmul
 10176 049a 0346     		mov	r3, r0
 10177 049c 1846     		mov	r0, r3
 10178 049e FFF7FEFF 		bl	__aeabi_f2iz
 10179 04a2 0146     		mov	r1, r0
 10180 04a4 A04A     		ldr	r2, .L492
 10181 04a6 2346     		mov	r3, r4
 10182 04a8 DB00     		lsls	r3, r3, #3
 10183 04aa 1B1B     		subs	r3, r3, r4
 10184 04ac 1B01     		lsls	r3, r3, #4
 10185 04ae 1344     		add	r3, r3, r2
 10186 04b0 C433     		adds	r3, r3, #196
 10187 04b2 1960     		str	r1, [r3]
1369:..\src/command_processing.c ****             }
1370:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 234


1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1388:..\src/command_processing.c ****             }            
1389:..\src/command_processing.c ****             break;  
 10188              		.loc 1 1389 0
 10189 04b4 01F009B8 		b	.L424
 10190              	.L425:
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10191              		.loc 1 1371 0
 10192 04b8 9D4B     		ldr	r3, .L492+8
 10193 04ba 1B68     		ldr	r3, [r3]	@ float
 10194 04bc FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10195              		.loc 1 1372 0
 10196 04be 0023     		movs	r3, #0
 10197 04c0 BB75     		strb	r3, [r7, #22]
 10198 04c2 0EE0     		b	.L433
 10199              	.L434:
1373:..\src/command_processing.c ****                 }
 10200              		.loc 1 1373 0 discriminator 3
 10201 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10202 04c6 C3F10303 		rsb	r3, r3, #3
 10203 04ca 07F10802 		add	r2, r7, #8
 10204 04ce 1344     		add	r3, r3, r2
 10205 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10206 04d2 07F10C01 		add	r1, r7, #12
 10207 04d6 0A44     		add	r2, r2, r1
 10208 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10209 04da 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10210              		.loc 1 1372 0 discriminator 3
 10211 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10212 04de 0133     		adds	r3, r3, #1
 10213 04e0 BB75     		strb	r3, [r7, #22]
 10214              	.L433:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10215              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10216 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10217 04e4 032B     		cmp	r3, #3
 10218 04e6 EDD9     		bls	.L434
1375:..\src/command_processing.c ****                 
 10219              		.loc 1 1375 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 235


 10220 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10221 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10222 04ec 4FF08F41 		mov	r1, #1199570944
 10223 04f0 1846     		mov	r0, r3
 10224 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10225 04f6 0346     		mov	r3, r0
 10226 04f8 1846     		mov	r0, r3
 10227 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10228 04fe 0146     		mov	r1, r0
 10229 0500 894A     		ldr	r2, .L492
 10230 0502 2346     		mov	r3, r4
 10231 0504 DB00     		lsls	r3, r3, #3
 10232 0506 1B1B     		subs	r3, r3, r4
 10233 0508 1B01     		lsls	r3, r3, #4
 10234 050a 1344     		add	r3, r3, r2
 10235 050c D433     		adds	r3, r3, #212
 10236 050e 1960     		str	r1, [r3]
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10237              		.loc 1 1377 0
 10238 0510 884B     		ldr	r3, .L492+12
 10239 0512 1B68     		ldr	r3, [r3]	@ float
 10240 0514 FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10241              		.loc 1 1378 0
 10242 0516 0023     		movs	r3, #0
 10243 0518 BB75     		strb	r3, [r7, #22]
 10244 051a 0EE0     		b	.L435
 10245              	.L436:
1379:..\src/command_processing.c ****                 }
 10246              		.loc 1 1379 0 discriminator 3
 10247 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10248 051e C3F10303 		rsb	r3, r3, #3
 10249 0522 07F10802 		add	r2, r7, #8
 10250 0526 1344     		add	r3, r3, r2
 10251 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10252 052a 07F10C01 		add	r1, r7, #12
 10253 052e 0A44     		add	r2, r2, r1
 10254 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10255 0532 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10256              		.loc 1 1378 0 discriminator 3
 10257 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10258 0536 0133     		adds	r3, r3, #1
 10259 0538 BB75     		strb	r3, [r7, #22]
 10260              	.L435:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10261              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10262 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10263 053c 032B     		cmp	r3, #3
 10264 053e EDD9     		bls	.L436
1381:..\src/command_processing.c ****                 
 10265              		.loc 1 1381 0 is_stmt 1
 10266 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10267 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10268 0544 4FF08F41 		mov	r1, #1199570944
 10269 0548 1846     		mov	r0, r3
 10270 054a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 236


 10271 054e 0346     		mov	r3, r0
 10272 0550 1846     		mov	r0, r3
 10273 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10274 0556 0146     		mov	r1, r0
 10275 0558 734A     		ldr	r2, .L492
 10276 055a 2346     		mov	r3, r4
 10277 055c DB00     		lsls	r3, r3, #3
 10278 055e 1B1B     		subs	r3, r3, r4
 10279 0560 1B01     		lsls	r3, r3, #4
 10280 0562 1344     		add	r3, r3, r2
 10281 0564 D833     		adds	r3, r3, #216
 10282 0566 1960     		str	r1, [r3]
1383:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10283              		.loc 1 1383 0
 10284 0568 704B     		ldr	r3, .L492+4
 10285 056a 1B68     		ldr	r3, [r3]	@ float
 10286 056c FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10287              		.loc 1 1384 0
 10288 056e 0023     		movs	r3, #0
 10289 0570 BB75     		strb	r3, [r7, #22]
 10290 0572 0EE0     		b	.L437
 10291              	.L438:
1385:..\src/command_processing.c ****                 }
 10292              		.loc 1 1385 0 discriminator 3
 10293 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10294 0576 C3F10303 		rsb	r3, r3, #3
 10295 057a 07F10802 		add	r2, r7, #8
 10296 057e 1344     		add	r3, r3, r2
 10297 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10298 0582 07F10C01 		add	r1, r7, #12
 10299 0586 0A44     		add	r2, r2, r1
 10300 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10301 058a 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10302              		.loc 1 1384 0 discriminator 3
 10303 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10304 058e 0133     		adds	r3, r3, #1
 10305 0590 BB75     		strb	r3, [r7, #22]
 10306              	.L437:
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10307              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10308 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10309 0594 032B     		cmp	r3, #3
 10310 0596 EDD9     		bls	.L438
1387:..\src/command_processing.c ****             }            
 10311              		.loc 1 1387 0 is_stmt 1
 10312 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10313 059a BB68     		ldr	r3, [r7, #8]	@ float
 10314 059c 4FF08F41 		mov	r1, #1199570944
 10315 05a0 1846     		mov	r0, r3
 10316 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10317 05a6 0346     		mov	r3, r0
 10318 05a8 1846     		mov	r0, r3
 10319 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10320 05ae 0146     		mov	r1, r0
 10321 05b0 5D4A     		ldr	r2, .L492
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 237


 10322 05b2 2346     		mov	r3, r4
 10323 05b4 DB00     		lsls	r3, r3, #3
 10324 05b6 1B1B     		subs	r3, r3, r4
 10325 05b8 1B01     		lsls	r3, r3, #4
 10326 05ba 1344     		add	r3, r3, r2
 10327 05bc DC33     		adds	r3, r3, #220
 10328 05be 1960     		str	r1, [r3]
 10329              		.loc 1 1389 0
 10330 05c0 00F083BF 		b	.L424
 10331              	.L394:
1390:..\src/command_processing.c ****             
1391:..\src/command_processing.c ****         case 5:         //Input mode
1392:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10332              		.loc 1 1392 0
 10333 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10334 05c6 5C4B     		ldr	r3, .L492+16
 10335 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10336 05ca 5749     		ldr	r1, .L492
 10337 05cc 1346     		mov	r3, r2
 10338 05ce DB00     		lsls	r3, r3, #3
 10339 05d0 9B1A     		subs	r3, r3, r2
 10340 05d2 1B01     		lsls	r3, r3, #4
 10341 05d4 0B44     		add	r3, r3, r1
 10342 05d6 03F58773 		add	r3, r3, #270
 10343 05da 0246     		mov	r2, r0
 10344 05dc 1A70     		strb	r2, [r3]
1393:..\src/command_processing.c ****             
1394:..\src/command_processing.c ****             // Hold the actual position
1395:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10345              		.loc 1 1395 0
 10346 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10347 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10348 05e2 5148     		ldr	r0, .L492
 10349 05e4 1346     		mov	r3, r2
 10350 05e6 DB00     		lsls	r3, r3, #3
 10351 05e8 9B1A     		subs	r3, r3, r2
 10352 05ea 1B01     		lsls	r3, r3, #4
 10353 05ec 0344     		add	r3, r3, r0
 10354 05ee 03F58873 		add	r3, r3, #272
 10355 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10356 05f4 1846     		mov	r0, r3
 10357 05f6 514A     		ldr	r2, .L492+20
 10358 05f8 3423     		movs	r3, #52
 10359 05fa 03FB00F3 		mul	r3, r3, r0
 10360 05fe 1344     		add	r3, r3, r2
 10361 0600 1A68     		ldr	r2, [r3]
 10362 0602 4F48     		ldr	r0, .L492+24
 10363 0604 0B01     		lsls	r3, r1, #4
 10364 0606 0344     		add	r3, r3, r0
 10365 0608 1A60     		str	r2, [r3]
1396:..\src/command_processing.c ****             break;   
 10366              		.loc 1 1396 0
 10367 060a 00F05EBF 		b	.L424
 10368              	.L395:
1397:..\src/command_processing.c **** 
1398:..\src/command_processing.c ****         case 8:         //Measurement Offset
1399:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 238


 10369              		.loc 1 1399 0
 10370 060e 0023     		movs	r3, #0
 10371 0610 FB75     		strb	r3, [r7, #23]
 10372 0612 7EE0     		b	.L439
 10373              	.L440:
1400:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10374              		.loc 1 1400 0 discriminator 3
 10375 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10376 0616 4449     		ldr	r1, .L492
 10377 0618 1346     		mov	r3, r2
 10378 061a DB00     		lsls	r3, r3, #3
 10379 061c 9B1A     		subs	r3, r3, r2
 10380 061e 1B01     		lsls	r3, r3, #4
 10381 0620 0B44     		add	r3, r3, r1
 10382 0622 03F58873 		add	r3, r3, #272
 10383 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10384 0628 1C46     		mov	r4, r3
 10385 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10386 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10387 062e 5B00     		lsls	r3, r3, #1
 10388 0630 0333     		adds	r3, r3, #3
 10389 0632 4149     		ldr	r1, .L492+16
 10390 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10391 0636 1B02     		lsls	r3, r3, #8
 10392 0638 19B2     		sxth	r1, r3
 10393 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10394 063c 0233     		adds	r3, r3, #2
 10395 063e 5B00     		lsls	r3, r3, #1
 10396 0640 3D48     		ldr	r0, .L492+16
 10397 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10398 0644 1BB2     		sxth	r3, r3
 10399 0646 0B43     		orrs	r3, r3, r1
 10400 0648 1BB2     		sxth	r3, r3
 10401 064a 1846     		mov	r0, r3
 10402 064c 3649     		ldr	r1, .L492
 10403 064e 2346     		mov	r3, r4
 10404 0650 5B00     		lsls	r3, r3, #1
 10405 0652 2344     		add	r3, r3, r4
 10406 0654 9B00     		lsls	r3, r3, #2
 10407 0656 1344     		add	r3, r3, r2
 10408 0658 6633     		adds	r3, r3, #102
 10409 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1401:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10410              		.loc 1 1401 0 discriminator 3
 10411 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10412 0660 3149     		ldr	r1, .L492
 10413 0662 1346     		mov	r3, r2
 10414 0664 DB00     		lsls	r3, r3, #3
 10415 0666 9B1A     		subs	r3, r3, r2
 10416 0668 1B01     		lsls	r3, r3, #4
 10417 066a 0B44     		add	r3, r3, r1
 10418 066c 03F58873 		add	r3, r3, #272
 10419 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10420 0672 1D46     		mov	r5, r3
 10421 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10422 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10423 0678 2B48     		ldr	r0, .L492
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 239


 10424 067a 1346     		mov	r3, r2
 10425 067c DB00     		lsls	r3, r3, #3
 10426 067e 9B1A     		subs	r3, r3, r2
 10427 0680 1B01     		lsls	r3, r3, #4
 10428 0682 0344     		add	r3, r3, r0
 10429 0684 03F58873 		add	r3, r3, #272
 10430 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10431 068a 1C46     		mov	r4, r3
 10432 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10433 068e 2648     		ldr	r0, .L492
 10434 0690 2346     		mov	r3, r4
 10435 0692 5B00     		lsls	r3, r3, #1
 10436 0694 2344     		add	r3, r3, r4
 10437 0696 9B00     		lsls	r3, r3, #2
 10438 0698 1344     		add	r3, r3, r2
 10439 069a 6633     		adds	r3, r3, #102
 10440 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10441 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10442 06a2 214C     		ldr	r4, .L492
 10443 06a4 1346     		mov	r3, r2
 10444 06a6 DB00     		lsls	r3, r3, #3
 10445 06a8 9B1A     		subs	r3, r3, r2
 10446 06aa 1B01     		lsls	r3, r3, #4
 10447 06ac 2344     		add	r3, r3, r4
 10448 06ae 03F58873 		add	r3, r3, #272
 10449 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10450 06b4 1E46     		mov	r6, r3
 10451 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10452 06b8 1B4C     		ldr	r4, .L492
 10453 06ba 3346     		mov	r3, r6
 10454 06bc 5B00     		lsls	r3, r3, #1
 10455 06be 3344     		add	r3, r3, r6
 10456 06c0 1B01     		lsls	r3, r3, #4
 10457 06c2 2344     		add	r3, r3, r4
 10458 06c4 1344     		add	r3, r3, r2
 10459 06c6 03F29513 		addw	r3, r3, #405
 10460 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10461 06cc 00FA03F2 		lsl	r2, r0, r3
 10462 06d0 1548     		ldr	r0, .L492
 10463 06d2 2B46     		mov	r3, r5
 10464 06d4 5B00     		lsls	r3, r3, #1
 10465 06d6 2B44     		add	r3, r3, r5
 10466 06d8 9B00     		lsls	r3, r3, #2
 10467 06da 0B44     		add	r3, r3, r1
 10468 06dc 6633     		adds	r3, r3, #102
 10469 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1402:..\src/command_processing.c **** 
1403:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10470              		.loc 1 1403 0 discriminator 3
 10471 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10472 06e4 1049     		ldr	r1, .L492
 10473 06e6 1346     		mov	r3, r2
 10474 06e8 DB00     		lsls	r3, r3, #3
 10475 06ea 9B1A     		subs	r3, r3, r2
 10476 06ec 1B01     		lsls	r3, r3, #4
 10477 06ee 0B44     		add	r3, r3, r1
 10478 06f0 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 240


 10479 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10480 06f6 1846     		mov	r0, r3
 10481 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10482 06fa 1049     		ldr	r1, .L492+20
 10483 06fc 3422     		movs	r2, #52
 10484 06fe 02FB00F2 		mul	r2, r2, r0
 10485 0702 0A44     		add	r2, r2, r1
 10486 0704 1344     		add	r3, r3, r2
 10487 0706 1833     		adds	r3, r3, #24
 10488 0708 0022     		movs	r2, #0
 10489 070a 1A70     		strb	r2, [r3]
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10490              		.loc 1 1399 0 discriminator 3
 10491 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10492 070e 0133     		adds	r3, r3, #1
 10493 0710 FB75     		strb	r3, [r7, #23]
 10494              	.L439:
1399:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10495              		.loc 1 1399 0 is_stmt 0 discriminator 1
 10496 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10497 0714 022B     		cmp	r3, #2
 10498 0716 7FF67DAF 		bls	.L440
1404:..\src/command_processing.c ****             }
1405:..\src/command_processing.c ****             reset_last_value_flag[MOTOR_IDX] = 1;
 10499              		.loc 1 1405 0 is_stmt 1
 10500 071a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10501 071c 094A     		ldr	r2, .L492+28
 10502 071e 0121     		movs	r1, #1
 10503 0720 D154     		strb	r1, [r2, r3]
1406:..\src/command_processing.c ****             break;
 10504              		.loc 1 1406 0
 10505 0722 00F0D2BE 		b	.L424
 10506              	.L493:
 10507 0726 00BF     		.align	2
 10508              	.L492:
 10509 0728 00000000 		.word	g_mem
 10510 072c 0B000000 		.word	g_rx+11
 10511 0730 03000000 		.word	g_rx+3
 10512 0734 07000000 		.word	g_rx+7
 10513 0738 00000000 		.word	g_rx
 10514 073c 00000000 		.word	g_meas
 10515 0740 00000000 		.word	g_refNew
 10516 0744 00000000 		.word	reset_last_value_flag
 10517              	.L396:
1407:..\src/command_processing.c ****     
1408:..\src/command_processing.c ****         case 11:        //Position limits
1409:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10518              		.loc 1 1409 0
 10519 0748 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10520 074a C14B     		ldr	r3, .L494
 10521 074c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10522 074e 1906     		lsls	r1, r3, #24
 10523 0750 BF4B     		ldr	r3, .L494
 10524 0752 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10525 0754 1B04     		lsls	r3, r3, #16
 10526 0756 1943     		orrs	r1, r1, r3
 10527 0758 BD4B     		ldr	r3, .L494
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 241


 10528 075a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10529 075c 1B02     		lsls	r3, r3, #8
 10530 075e 0B43     		orrs	r3, r3, r1
 10531 0760 BB49     		ldr	r1, .L494
 10532 0762 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10533 0764 1943     		orrs	r1, r1, r3
 10534 0766 BB48     		ldr	r0, .L494+4
 10535 0768 1346     		mov	r3, r2
 10536 076a DB00     		lsls	r3, r3, #3
 10537 076c 9B1A     		subs	r3, r3, r2
 10538 076e 1B01     		lsls	r3, r3, #4
 10539 0770 0344     		add	r3, r3, r0
 10540 0772 E433     		adds	r3, r3, #228
 10541 0774 1960     		str	r1, [r3]
1410:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10542              		.loc 1 1410 0
 10543 0776 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10544 0778 B54B     		ldr	r3, .L494
 10545 077a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10546 077c 1906     		lsls	r1, r3, #24
 10547 077e B44B     		ldr	r3, .L494
 10548 0780 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10549 0782 1B04     		lsls	r3, r3, #16
 10550 0784 1943     		orrs	r1, r1, r3
 10551 0786 B24B     		ldr	r3, .L494
 10552 0788 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10553 078a 1B02     		lsls	r3, r3, #8
 10554 078c 0B43     		orrs	r3, r3, r1
 10555 078e B049     		ldr	r1, .L494
 10556 0790 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10557 0792 1943     		orrs	r1, r1, r3
 10558 0794 AF48     		ldr	r0, .L494+4
 10559 0796 1346     		mov	r3, r2
 10560 0798 DB00     		lsls	r3, r3, #3
 10561 079a 9B1A     		subs	r3, r3, r2
 10562 079c 1B01     		lsls	r3, r3, #4
 10563 079e 0344     		add	r3, r3, r0
 10564 07a0 E833     		adds	r3, r3, #232
 10565 07a2 1960     		str	r1, [r3]
1411:..\src/command_processing.c **** 
1412:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10566              		.loc 1 1412 0
 10567 07a4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10568 07a6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10569 07a8 AA48     		ldr	r0, .L494+4
 10570 07aa 0B46     		mov	r3, r1
 10571 07ac DB00     		lsls	r3, r3, #3
 10572 07ae 5B1A     		subs	r3, r3, r1
 10573 07b0 1B01     		lsls	r3, r3, #4
 10574 07b2 0344     		add	r3, r3, r0
 10575 07b4 E433     		adds	r3, r3, #228
 10576 07b6 1868     		ldr	r0, [r3]
 10577 07b8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10578 07ba A64C     		ldr	r4, .L494+4
 10579 07bc 0B46     		mov	r3, r1
 10580 07be DB00     		lsls	r3, r3, #3
 10581 07c0 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 242


 10582 07c2 1B01     		lsls	r3, r3, #4
 10583 07c4 2344     		add	r3, r3, r4
 10584 07c6 03F58873 		add	r3, r3, #272
 10585 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10586 07cc 1C46     		mov	r4, r3
 10587 07ce A149     		ldr	r1, .L494+4
 10588 07d0 2346     		mov	r3, r4
 10589 07d2 5B00     		lsls	r3, r3, #1
 10590 07d4 2344     		add	r3, r3, r4
 10591 07d6 1B01     		lsls	r3, r3, #4
 10592 07d8 0B44     		add	r3, r3, r1
 10593 07da 03F29513 		addw	r3, r3, #405
 10594 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10595 07e0 00FA03F1 		lsl	r1, r0, r3
 10596 07e4 9B48     		ldr	r0, .L494+4
 10597 07e6 1346     		mov	r3, r2
 10598 07e8 DB00     		lsls	r3, r3, #3
 10599 07ea 9B1A     		subs	r3, r3, r2
 10600 07ec 1B01     		lsls	r3, r3, #4
 10601 07ee 0344     		add	r3, r3, r0
 10602 07f0 E433     		adds	r3, r3, #228
 10603 07f2 1960     		str	r1, [r3]
1413:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10604              		.loc 1 1413 0
 10605 07f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10606 07f6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10607 07f8 9648     		ldr	r0, .L494+4
 10608 07fa 0B46     		mov	r3, r1
 10609 07fc DB00     		lsls	r3, r3, #3
 10610 07fe 5B1A     		subs	r3, r3, r1
 10611 0800 1B01     		lsls	r3, r3, #4
 10612 0802 0344     		add	r3, r3, r0
 10613 0804 E833     		adds	r3, r3, #232
 10614 0806 1868     		ldr	r0, [r3]
 10615 0808 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10616 080a 924C     		ldr	r4, .L494+4
 10617 080c 0B46     		mov	r3, r1
 10618 080e DB00     		lsls	r3, r3, #3
 10619 0810 5B1A     		subs	r3, r3, r1
 10620 0812 1B01     		lsls	r3, r3, #4
 10621 0814 2344     		add	r3, r3, r4
 10622 0816 03F58873 		add	r3, r3, #272
 10623 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10624 081c 1C46     		mov	r4, r3
 10625 081e 8D49     		ldr	r1, .L494+4
 10626 0820 2346     		mov	r3, r4
 10627 0822 5B00     		lsls	r3, r3, #1
 10628 0824 2344     		add	r3, r3, r4
 10629 0826 1B01     		lsls	r3, r3, #4
 10630 0828 0B44     		add	r3, r3, r1
 10631 082a 03F29513 		addw	r3, r3, #405
 10632 082e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10633 0830 00FA03F1 		lsl	r1, r0, r3
 10634 0834 8748     		ldr	r0, .L494+4
 10635 0836 1346     		mov	r3, r2
 10636 0838 DB00     		lsls	r3, r3, #3
 10637 083a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 243


 10638 083c 1B01     		lsls	r3, r3, #4
 10639 083e 0344     		add	r3, r3, r0
 10640 0840 E833     		adds	r3, r3, #232
 10641 0842 1960     		str	r1, [r3]
1414:..\src/command_processing.c ****             break;            
 10642              		.loc 1 1414 0
 10643 0844 00F041BE 		b	.L424
 10644              	.L397:
1415:..\src/command_processing.c **** 
1416:..\src/command_processing.c ****         case 23:        //Rest Position
1417:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10645              		.loc 1 1417 0
 10646 0848 814B     		ldr	r3, .L494
 10647 084a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10648 084c 1A06     		lsls	r2, r3, #24
 10649 084e 804B     		ldr	r3, .L494
 10650 0850 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10651 0852 1B04     		lsls	r3, r3, #16
 10652 0854 1A43     		orrs	r2, r2, r3
 10653 0856 7E4B     		ldr	r3, .L494
 10654 0858 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10655 085a 1B02     		lsls	r3, r3, #8
 10656 085c 1343     		orrs	r3, r3, r2
 10657 085e 7C4A     		ldr	r2, .L494
 10658 0860 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10659 0862 1343     		orrs	r3, r3, r2
 10660 0864 7B4A     		ldr	r2, .L494+4
 10661 0866 C2F8A032 		str	r3, [r2, #672]
1418:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10662              		.loc 1 1418 0
 10663 086a 7A4B     		ldr	r3, .L494+4
 10664 086c D3F8A012 		ldr	r1, [r3, #672]
 10665 0870 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10666 0872 7848     		ldr	r0, .L494+4
 10667 0874 1346     		mov	r3, r2
 10668 0876 DB00     		lsls	r3, r3, #3
 10669 0878 9B1A     		subs	r3, r3, r2
 10670 087a 1B01     		lsls	r3, r3, #4
 10671 087c 0344     		add	r3, r3, r0
 10672 087e 03F58873 		add	r3, r3, #272
 10673 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10674 0884 1846     		mov	r0, r3
 10675 0886 734A     		ldr	r2, .L494+4
 10676 0888 0346     		mov	r3, r0
 10677 088a 5B00     		lsls	r3, r3, #1
 10678 088c 0344     		add	r3, r3, r0
 10679 088e 1B01     		lsls	r3, r3, #4
 10680 0890 1344     		add	r3, r3, r2
 10681 0892 03F29513 		addw	r3, r3, #405
 10682 0896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10683 0898 01FA03F3 		lsl	r3, r1, r3
 10684 089c 6D4A     		ldr	r2, .L494+4
 10685 089e C2F8A032 		str	r3, [r2, #672]
1419:..\src/command_processing.c ****             break; 
 10686              		.loc 1 1419 0
 10687 08a2 00F012BE 		b	.L424
 10688              	.L398:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 244


1420:..\src/command_processing.c ****             
1421:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1422:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10689              		.loc 1 1422 0
 10690 08a6 6A4B     		ldr	r3, .L494
 10691 08a8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10692 08aa 1A06     		lsls	r2, r3, #24
 10693 08ac 684B     		ldr	r3, .L494
 10694 08ae 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10695 08b0 1B04     		lsls	r3, r3, #16
 10696 08b2 1A43     		orrs	r2, r2, r3
 10697 08b4 664B     		ldr	r3, .L494
 10698 08b6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10699 08b8 1B02     		lsls	r3, r3, #8
 10700 08ba 1343     		orrs	r3, r3, r2
 10701 08bc 644A     		ldr	r2, .L494
 10702 08be 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10703 08c0 1343     		orrs	r3, r3, r2
 10704 08c2 644A     		ldr	r2, .L494+4
 10705 08c4 C2F8A432 		str	r3, [r2, #676]
1423:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10706              		.loc 1 1423 0
 10707 08c8 624B     		ldr	r3, .L494+4
 10708 08ca D3F8A432 		ldr	r3, [r3, #676]
 10709 08ce 092B     		cmp	r3, #9
 10710 08d0 00F3F285 		bgt	.L485
 10711              		.loc 1 1423 0 is_stmt 0 discriminator 1
 10712 08d4 5F4B     		ldr	r3, .L494+4
 10713 08d6 0A22     		movs	r2, #10
 10714 08d8 C3F8A422 		str	r2, [r3, #676]
1424:..\src/command_processing.c ****            break; 
 10715              		.loc 1 1424 0 is_stmt 1 discriminator 1
 10716 08dc 00F0ECBD 		b	.L485
 10717              	.L399:
1425:..\src/command_processing.c ****             
1426:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1427:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10718              		.loc 1 1427 0
 10719 08e0 5B4B     		ldr	r3, .L494
 10720 08e2 DB78     		ldrb	r3, [r3, #3]
 10721 08e4 BB74     		strb	r3, [r7, #18]
1428:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10722              		.loc 1 1428 0
 10723 08e6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10724 08e8 002B     		cmp	r3, #0
 10725 08ea 04D0     		beq	.L442
1429:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10726              		.loc 1 1429 0
 10727 08ec 594B     		ldr	r3, .L494+4
 10728 08ee 0122     		movs	r2, #1
 10729 08f0 83F8A720 		strb	r2, [r3, #167]
 10730 08f4 03E0     		b	.L443
 10731              	.L442:
1430:..\src/command_processing.c ****             } else {            // 0
1431:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10732              		.loc 1 1431 0
 10733 08f6 574B     		ldr	r3, .L494+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 245


 10734 08f8 0022     		movs	r2, #0
 10735 08fa 83F8A720 		strb	r2, [r3, #167]
 10736              	.L443:
1432:..\src/command_processing.c ****             }
1433:..\src/command_processing.c **** 			reset_last_value_flag[MOTOR_IDX] = 1;
 10737              		.loc 1 1433 0
 10738 08fe 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 10739 0900 554A     		ldr	r2, .L494+8
 10740 0902 0121     		movs	r1, #1
 10741 0904 D154     		strb	r1, [r2, r3]
1434:..\src/command_processing.c **** 
1435:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10742              		.loc 1 1435 0
 10743 0906 534B     		ldr	r3, .L494+4
 10744 0908 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10745 090c 002B     		cmp	r3, #0
 10746 090e 40F0D585 		bne	.L486
1436:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1437:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10747              		.loc 1 1437 0
 10748 0912 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10749 0914 4F4B     		ldr	r3, .L494+4
 10750 0916 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10751 091a 4E49     		ldr	r1, .L494+4
 10752 091c 1346     		mov	r3, r2
 10753 091e DB00     		lsls	r3, r3, #3
 10754 0920 9B1A     		subs	r3, r3, r2
 10755 0922 1B01     		lsls	r3, r3, #4
 10756 0924 0B44     		add	r3, r3, r1
 10757 0926 03F58873 		add	r3, r3, #272
 10758 092a 0246     		mov	r2, r0
 10759 092c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                 
1439:..\src/command_processing.c ****                 // Change also gears parameters
1440:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10760              		.loc 1 1440 0
 10761 092e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10762 0930 4849     		ldr	r1, .L494+4
 10763 0932 1346     		mov	r3, r2
 10764 0934 DB00     		lsls	r3, r3, #3
 10765 0936 9B1A     		subs	r3, r3, r2
 10766 0938 1B01     		lsls	r3, r3, #4
 10767 093a 0B44     		add	r3, r3, r1
 10768 093c 03F58873 		add	r3, r3, #272
 10769 0940 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10770 0942 1946     		mov	r1, r3
 10771 0944 434A     		ldr	r2, .L494+4
 10772 0946 0B46     		mov	r3, r1
 10773 0948 5B00     		lsls	r3, r3, #1
 10774 094a 0B44     		add	r3, r3, r1
 10775 094c 1B01     		lsls	r3, r3, #4
 10776 094e 1344     		add	r3, r3, r2
 10777 0950 03F5D873 		add	r3, r3, #432
 10778 0954 0122     		movs	r2, #1
 10779 0956 1A70     		strb	r2, [r3]
1441:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10780              		.loc 1 1441 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 246


 10781 0958 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10782 095a 3E49     		ldr	r1, .L494+4
 10783 095c 1346     		mov	r3, r2
 10784 095e DB00     		lsls	r3, r3, #3
 10785 0960 9B1A     		subs	r3, r3, r2
 10786 0962 1B01     		lsls	r3, r3, #4
 10787 0964 0B44     		add	r3, r3, r1
 10788 0966 03F58873 		add	r3, r3, #272
 10789 096a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10790 096c 1946     		mov	r1, r3
 10791 096e 394A     		ldr	r2, .L494+4
 10792 0970 0B46     		mov	r3, r1
 10793 0972 5B00     		lsls	r3, r3, #1
 10794 0974 0B44     		add	r3, r3, r1
 10795 0976 1B01     		lsls	r3, r3, #4
 10796 0978 1344     		add	r3, r3, r2
 10797 097a 03F2B513 		addw	r3, r3, #437
 10798 097e 2322     		movs	r2, #35
 10799 0980 1A70     		strb	r2, [r3]
1442:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10800              		.loc 1 1442 0
 10801 0982 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10802 0984 3349     		ldr	r1, .L494+4
 10803 0986 1346     		mov	r3, r2
 10804 0988 DB00     		lsls	r3, r3, #3
 10805 098a 9B1A     		subs	r3, r3, r2
 10806 098c 1B01     		lsls	r3, r3, #4
 10807 098e 0B44     		add	r3, r3, r1
 10808 0990 03F58873 		add	r3, r3, #272
 10809 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10810 0996 1946     		mov	r1, r3
 10811 0998 2E4A     		ldr	r2, .L494+4
 10812 099a 0B46     		mov	r3, r1
 10813 099c 5B00     		lsls	r3, r3, #1
 10814 099e 0B44     		add	r3, r3, r1
 10815 09a0 1B01     		lsls	r3, r3, #4
 10816 09a2 1344     		add	r3, r3, r2
 10817 09a4 03F5DB73 		add	r3, r3, #438
 10818 09a8 0322     		movs	r2, #3
 10819 09aa 1A70     		strb	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10820              		.loc 1 1443 0
 10821 09ac 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10822 09ae 2949     		ldr	r1, .L494+4
 10823 09b0 1346     		mov	r3, r2
 10824 09b2 DB00     		lsls	r3, r3, #3
 10825 09b4 9B1A     		subs	r3, r3, r2
 10826 09b6 1B01     		lsls	r3, r3, #4
 10827 09b8 0B44     		add	r3, r3, r1
 10828 09ba 03F58873 		add	r3, r3, #272
 10829 09be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10830 09c0 1946     		mov	r1, r3
 10831 09c2 244A     		ldr	r2, .L494+4
 10832 09c4 0B46     		mov	r3, r1
 10833 09c6 5B00     		lsls	r3, r3, #1
 10834 09c8 0B44     		add	r3, r3, r1
 10835 09ca 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 247


 10836 09cc 1344     		add	r3, r3, r2
 10837 09ce 03F2B713 		addw	r3, r3, #439
 10838 09d2 FF22     		movs	r2, #255
 10839 09d4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                 
1445:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1446:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10840              		.loc 1 1446 0
 10841 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10842 09d8 1E49     		ldr	r1, .L494+4
 10843 09da 1346     		mov	r3, r2
 10844 09dc DB00     		lsls	r3, r3, #3
 10845 09de 9B1A     		subs	r3, r3, r2
 10846 09e0 1B01     		lsls	r3, r3, #4
 10847 09e2 0B44     		add	r3, r3, r1
 10848 09e4 03F21113 		addw	r3, r3, #273
 10849 09e8 0122     		movs	r2, #1
 10850 09ea 1A70     		strb	r2, [r3]
1447:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10851              		.loc 1 1447 0
 10852 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10853 09ee 1949     		ldr	r1, .L494+4
 10854 09f0 1346     		mov	r3, r2
 10855 09f2 DB00     		lsls	r3, r3, #3
 10856 09f4 9B1A     		subs	r3, r3, r2
 10857 09f6 1B01     		lsls	r3, r3, #4
 10858 09f8 0B44     		add	r3, r3, r1
 10859 09fa 03F58973 		add	r3, r3, #274
 10860 09fe 0122     		movs	r2, #1
 10861 0a00 1A70     		strb	r2, [r3]
1448:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10862              		.loc 1 1448 0
 10863 0a02 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10864 0a04 1349     		ldr	r1, .L494+4
 10865 0a06 1346     		mov	r3, r2
 10866 0a08 DB00     		lsls	r3, r3, #3
 10867 0a0a 9B1A     		subs	r3, r3, r2
 10868 0a0c 1B01     		lsls	r3, r3, #4
 10869 0a0e 0B44     		add	r3, r3, r1
 10870 0a10 E433     		adds	r3, r3, #228
 10871 0a12 0022     		movs	r2, #0
 10872 0a14 1A60     		str	r2, [r3]
1449:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10873              		.loc 1 1449 0
 10874 0a16 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10875 0a18 0E4B     		ldr	r3, .L494+4
 10876 0a1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10877 0a1e 1846     		mov	r0, r3
 10878 0a20 0C49     		ldr	r1, .L494+4
 10879 0a22 0346     		mov	r3, r0
 10880 0a24 5B00     		lsls	r3, r3, #1
 10881 0a26 0344     		add	r3, r3, r0
 10882 0a28 1B01     		lsls	r3, r3, #4
 10883 0a2a 0B44     		add	r3, r3, r1
 10884 0a2c 03F29513 		addw	r3, r3, #405
 10885 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10886 0a32 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 248


 10887 0a34 4FF47A53 		mov	r3, #16000
 10888 0a38 03FA01F1 		lsl	r1, r3, r1
 10889 0a3c 0548     		ldr	r0, .L494+4
 10890 0a3e 1346     		mov	r3, r2
 10891 0a40 DB00     		lsls	r3, r3, #3
 10892 0a42 9B1A     		subs	r3, r3, r2
 10893 0a44 1B01     		lsls	r3, r3, #4
 10894 0a46 0344     		add	r3, r3, r0
 10895 0a48 E833     		adds	r3, r3, #232
 10896 0a4a 1960     		str	r1, [r3]
1450:..\src/command_processing.c ****             }    
1451:..\src/command_processing.c **** 
1452:..\src/command_processing.c ****             break; 
 10897              		.loc 1 1452 0
 10898 0a4c 00F036BD 		b	.L486
 10899              	.L495:
 10900              		.align	2
 10901              	.L494:
 10902 0a50 00000000 		.word	g_rx
 10903 0a54 00000000 		.word	g_mem
 10904 0a58 00000000 		.word	reset_last_value_flag
 10905              	.L400:
1453:..\src/command_processing.c **** 
1454:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1455:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10906              		.loc 1 1455 0
 10907 0a5c B94B     		ldr	r3, .L496
 10908 0a5e DB78     		ldrb	r3, [r3, #3]
 10909 0a60 BB74     		strb	r3, [r7, #18]
1456:..\src/command_processing.c ****             if (aux_uchar) {
 10910              		.loc 1 1456 0
 10911 0a62 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10912 0a64 002B     		cmp	r3, #0
 10913 0a66 05D0     		beq	.L445
1457:..\src/command_processing.c ****                 reset_counters();
 10914              		.loc 1 1457 0
 10915 0a68 FFF7FEFF 		bl	reset_counters
1458:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10916              		.loc 1 1458 0
 10917 0a6c B64B     		ldr	r3, .L496+4
 10918 0a6e 0022     		movs	r2, #0
 10919 0a70 83F8A820 		strb	r2, [r3, #168]
 10920              	.L445:
1459:..\src/command_processing.c ****             }
1460:..\src/command_processing.c ****             
1461:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10921              		.loc 1 1461 0
 10922 0a74 B54B     		ldr	r3, .L496+8
 10923 0a76 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10924 0a7a 012B     		cmp	r3, #1
 10925 0a7c 40F02085 		bne	.L487
1462:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1463:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10926              		.loc 1 1463 0
 10927 0a80 8720     		movs	r0, #135
 10928 0a82 FFF7FEFF 		bl	DS1302_read
 10929 0a86 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 249


 10930 0a88 BB74     		strb	r3, [r7, #18]
1464:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10931              		.loc 1 1464 0
 10932 0a8a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10933 0a8c 1B09     		lsrs	r3, r3, #4
 10934 0a8e DBB2     		uxtb	r3, r3
 10935 0a90 1A46     		mov	r2, r3
 10936 0a92 9200     		lsls	r2, r2, #2
 10937 0a94 1344     		add	r3, r3, r2
 10938 0a96 5B00     		lsls	r3, r3, #1
 10939 0a98 DAB2     		uxtb	r2, r3
 10940 0a9a BB7C     		ldrb	r3, [r7, #18]
 10941 0a9c 03F00F03 		and	r3, r3, #15
 10942 0aa0 DBB2     		uxtb	r3, r3
 10943 0aa2 1344     		add	r3, r3, r2
 10944 0aa4 DAB2     		uxtb	r2, r3
 10945 0aa6 A84B     		ldr	r3, .L496+4
 10946 0aa8 83F8A420 		strb	r2, [r3, #164]
1465:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10947              		.loc 1 1465 0
 10948 0aac 8920     		movs	r0, #137
 10949 0aae FFF7FEFF 		bl	DS1302_read
 10950 0ab2 0346     		mov	r3, r0
 10951 0ab4 BB74     		strb	r3, [r7, #18]
1466:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10952              		.loc 1 1466 0
 10953 0ab6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10954 0ab8 1B09     		lsrs	r3, r3, #4
 10955 0aba DBB2     		uxtb	r3, r3
 10956 0abc 1A46     		mov	r2, r3
 10957 0abe 9200     		lsls	r2, r2, #2
 10958 0ac0 1344     		add	r3, r3, r2
 10959 0ac2 5B00     		lsls	r3, r3, #1
 10960 0ac4 DAB2     		uxtb	r2, r3
 10961 0ac6 BB7C     		ldrb	r3, [r7, #18]
 10962 0ac8 03F00F03 		and	r3, r3, #15
 10963 0acc DBB2     		uxtb	r3, r3
 10964 0ace 1344     		add	r3, r3, r2
 10965 0ad0 DAB2     		uxtb	r2, r3
 10966 0ad2 9D4B     		ldr	r3, .L496+4
 10967 0ad4 83F8A520 		strb	r2, [r3, #165]
1467:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10968              		.loc 1 1467 0
 10969 0ad8 8D20     		movs	r0, #141
 10970 0ada FFF7FEFF 		bl	DS1302_read
 10971 0ade 0346     		mov	r3, r0
 10972 0ae0 BB74     		strb	r3, [r7, #18]
1468:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10973              		.loc 1 1468 0
 10974 0ae2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10975 0ae4 1B09     		lsrs	r3, r3, #4
 10976 0ae6 DBB2     		uxtb	r3, r3
 10977 0ae8 1A46     		mov	r2, r3
 10978 0aea 9200     		lsls	r2, r2, #2
 10979 0aec 1344     		add	r3, r3, r2
 10980 0aee 5B00     		lsls	r3, r3, #1
 10981 0af0 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 250


 10982 0af2 BB7C     		ldrb	r3, [r7, #18]
 10983 0af4 03F00F03 		and	r3, r3, #15
 10984 0af8 DBB2     		uxtb	r3, r3
 10985 0afa 1344     		add	r3, r3, r2
 10986 0afc DAB2     		uxtb	r2, r3
 10987 0afe 924B     		ldr	r3, .L496+4
 10988 0b00 83F8A620 		strb	r2, [r3, #166]
1469:..\src/command_processing.c ****             }
1470:..\src/command_processing.c ****             break;             
 10989              		.loc 1 1470 0
 10990 0b04 00F0DCBC 		b	.L487
 10991              	.L401:
 10992              	.LBB23:
1471:..\src/command_processing.c ****             
1472:..\src/command_processing.c ****         case 32:         //Current Time
1473:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10993              		.loc 1 1473 0
 10994 0b08 0023     		movs	r3, #0
 10995 0b0a 7B75     		strb	r3, [r7, #21]
 10996 0b0c 0CE0     		b	.L447
 10997              	.L448:
1474:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10998              		.loc 1 1474 0 discriminator 3
 10999 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11000 0b10 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 11001 0b12 0332     		adds	r2, r2, #3
 11002 0b14 8B49     		ldr	r1, .L496
 11003 0b16 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11004 0b18 8B4A     		ldr	r2, .L496+4
 11005 0b1a 1344     		add	r3, r3, r2
 11006 0b1c 0A46     		mov	r2, r1
 11007 0b1e 83F82022 		strb	r2, [r3, #544]
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 11008              		.loc 1 1473 0 discriminator 3
 11009 0b22 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11010 0b24 0133     		adds	r3, r3, #1
 11011 0b26 7B75     		strb	r3, [r7, #21]
 11012              	.L447:
1473:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 11013              		.loc 1 1473 0 is_stmt 0 discriminator 1
 11014 0b28 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 11015 0b2a 052B     		cmp	r3, #5
 11016 0b2c EFD9     		bls	.L448
 11017              	.LBE23:
1475:..\src/command_processing.c ****             }
1476:..\src/command_processing.c ****             
1477:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 11018              		.loc 1 1477 0 is_stmt 1
 11019 0b2e 864B     		ldr	r3, .L496+4
 11020 0b30 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 11021 0b34 012B     		cmp	r3, #1
 11022 0b36 40F0C584 		bne	.L488
1478:..\src/command_processing.c ****                 set_RTC_time();
 11023              		.loc 1 1478 0
 11024 0b3a FFF7FEFF 		bl	set_RTC_time
1479:..\src/command_processing.c ****             }
1480:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 251


 11025              		.loc 1 1480 0
 11026 0b3e 00F0C1BC 		b	.L488
 11027              	.L402:
1481:..\src/command_processing.c ****            
1482:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1483:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11028              		.loc 1 1483 0
 11029 0b42 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11030 0b44 7F4B     		ldr	r3, .L496
 11031 0b46 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11032 0b48 7F49     		ldr	r1, .L496+4
 11033 0b4a 1346     		mov	r3, r2
 11034 0b4c DB00     		lsls	r3, r3, #3
 11035 0b4e 9B1A     		subs	r3, r3, r2
 11036 0b50 1B01     		lsls	r3, r3, #4
 11037 0b52 0B44     		add	r3, r3, r1
 11038 0b54 E233     		adds	r3, r3, #226
 11039 0b56 0246     		mov	r2, r0
 11040 0b58 1A70     		strb	r2, [r3]
1484:..\src/command_processing.c ****             set_motor_driver_type();            
 11041              		.loc 1 1484 0
 11042 0b5a FFF7FEFF 		bl	set_motor_driver_type
1485:..\src/command_processing.c ****             break;
 11043              		.loc 1 1485 0
 11044 0b5e 00F0B4BC 		b	.L424
 11045              	.L403:
1486:..\src/command_processing.c ****             
1487:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1488:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11046              		.loc 1 1488 0
 11047 0b62 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11048 0b64 7949     		ldr	r1, .L496+8
 11049 0b66 1346     		mov	r3, r2
 11050 0b68 DB00     		lsls	r3, r3, #3
 11051 0b6a 9B1A     		subs	r3, r3, r2
 11052 0b6c 1B01     		lsls	r3, r3, #4
 11053 0b6e 0B44     		add	r3, r3, r1
 11054 0b70 03F20F13 		addw	r3, r3, #271
 11055 0b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11056 0b76 032B     		cmp	r3, #3
 11057 0b78 00F08680 		beq	.L450
1489:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11058              		.loc 1 1489 0
 11059 0b7c 744B     		ldr	r3, .L496+12
 11060 0b7e 1B68     		ldr	r3, [r3]	@ float
 11061 0b80 FB60     		str	r3, [r7, #12]	@ float
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11062              		.loc 1 1490 0
 11063 0b82 0023     		movs	r3, #0
 11064 0b84 BB75     		strb	r3, [r7, #22]
 11065 0b86 0EE0     		b	.L451
 11066              	.L452:
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11067              		.loc 1 1491 0 discriminator 3
 11068 0b88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11069 0b8a C3F10303 		rsb	r3, r3, #3
 11070 0b8e 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 252


 11071 0b92 1344     		add	r3, r3, r2
 11072 0b94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11073 0b96 07F10C01 		add	r1, r7, #12
 11074 0b9a 0A44     		add	r2, r2, r1
 11075 0b9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11076 0b9e 1A70     		strb	r2, [r3]
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11077              		.loc 1 1490 0 discriminator 3
 11078 0ba0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11079 0ba2 0133     		adds	r3, r3, #1
 11080 0ba4 BB75     		strb	r3, [r7, #22]
 11081              	.L451:
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11082              		.loc 1 1490 0 is_stmt 0 discriminator 1
 11083 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11084 0ba8 032B     		cmp	r3, #3
 11085 0baa EDD9     		bls	.L452
1492:..\src/command_processing.c ****                 }
1493:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 11086              		.loc 1 1493 0 is_stmt 1
 11087 0bac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11088 0bae BB68     		ldr	r3, [r7, #8]	@ float
 11089 0bb0 4FF08F41 		mov	r1, #1199570944
 11090 0bb4 1846     		mov	r0, r3
 11091 0bb6 FFF7FEFF 		bl	__aeabi_fmul
 11092 0bba 0346     		mov	r3, r0
 11093 0bbc 1846     		mov	r0, r3
 11094 0bbe FFF7FEFF 		bl	__aeabi_f2iz
 11095 0bc2 0146     		mov	r1, r0
 11096 0bc4 604A     		ldr	r2, .L496+4
 11097 0bc6 2346     		mov	r3, r4
 11098 0bc8 DB00     		lsls	r3, r3, #3
 11099 0bca 1B1B     		subs	r3, r3, r4
 11100 0bcc 1B01     		lsls	r3, r3, #4
 11101 0bce 1344     		add	r3, r3, r2
 11102 0bd0 B033     		adds	r3, r3, #176
 11103 0bd2 1960     		str	r1, [r3]
1494:..\src/command_processing.c ****                 
1495:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11104              		.loc 1 1495 0
 11105 0bd4 5F4B     		ldr	r3, .L496+16
 11106 0bd6 1B68     		ldr	r3, [r3]	@ float
 11107 0bd8 FB60     		str	r3, [r7, #12]	@ float
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11108              		.loc 1 1496 0
 11109 0bda 0023     		movs	r3, #0
 11110 0bdc BB75     		strb	r3, [r7, #22]
 11111 0bde 0EE0     		b	.L453
 11112              	.L454:
1497:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11113              		.loc 1 1497 0 discriminator 3
 11114 0be0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11115 0be2 C3F10303 		rsb	r3, r3, #3
 11116 0be6 07F10802 		add	r2, r7, #8
 11117 0bea 1344     		add	r3, r3, r2
 11118 0bec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11119 0bee 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 253


 11120 0bf2 0A44     		add	r2, r2, r1
 11121 0bf4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11122 0bf6 1A70     		strb	r2, [r3]
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11123              		.loc 1 1496 0 discriminator 3
 11124 0bf8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11125 0bfa 0133     		adds	r3, r3, #1
 11126 0bfc BB75     		strb	r3, [r7, #22]
 11127              	.L453:
1496:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11128              		.loc 1 1496 0 is_stmt 0 discriminator 1
 11129 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11130 0c00 032B     		cmp	r3, #3
 11131 0c02 EDD9     		bls	.L454
1498:..\src/command_processing.c ****                 }
1499:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 11132              		.loc 1 1499 0 is_stmt 1
 11133 0c04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11134 0c06 BB68     		ldr	r3, [r7, #8]	@ float
 11135 0c08 4FF08F41 		mov	r1, #1199570944
 11136 0c0c 1846     		mov	r0, r3
 11137 0c0e FFF7FEFF 		bl	__aeabi_fmul
 11138 0c12 0346     		mov	r3, r0
 11139 0c14 1846     		mov	r0, r3
 11140 0c16 FFF7FEFF 		bl	__aeabi_f2iz
 11141 0c1a 0146     		mov	r1, r0
 11142 0c1c 4A4A     		ldr	r2, .L496+4
 11143 0c1e 2346     		mov	r3, r4
 11144 0c20 DB00     		lsls	r3, r3, #3
 11145 0c22 1B1B     		subs	r3, r3, r4
 11146 0c24 1B01     		lsls	r3, r3, #4
 11147 0c26 1344     		add	r3, r3, r2
 11148 0c28 B433     		adds	r3, r3, #180
 11149 0c2a 1960     		str	r1, [r3]
1500:..\src/command_processing.c ****                 
1501:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11150              		.loc 1 1501 0
 11151 0c2c 4A4B     		ldr	r3, .L496+20
 11152 0c2e 1B68     		ldr	r3, [r3]	@ float
 11153 0c30 FB60     		str	r3, [r7, #12]	@ float
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11154              		.loc 1 1502 0
 11155 0c32 0023     		movs	r3, #0
 11156 0c34 BB75     		strb	r3, [r7, #22]
 11157 0c36 0EE0     		b	.L455
 11158              	.L456:
1503:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11159              		.loc 1 1503 0 discriminator 3
 11160 0c38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11161 0c3a C3F10303 		rsb	r3, r3, #3
 11162 0c3e 07F10802 		add	r2, r7, #8
 11163 0c42 1344     		add	r3, r3, r2
 11164 0c44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11165 0c46 07F10C01 		add	r1, r7, #12
 11166 0c4a 0A44     		add	r2, r2, r1
 11167 0c4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11168 0c4e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 254


1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11169              		.loc 1 1502 0 discriminator 3
 11170 0c50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11171 0c52 0133     		adds	r3, r3, #1
 11172 0c54 BB75     		strb	r3, [r7, #22]
 11173              	.L455:
1502:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11174              		.loc 1 1502 0 is_stmt 0 discriminator 1
 11175 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11176 0c58 032B     		cmp	r3, #3
 11177 0c5a EDD9     		bls	.L456
1504:..\src/command_processing.c ****                 }
1505:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 11178              		.loc 1 1505 0 is_stmt 1
 11179 0c5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11180 0c5e BB68     		ldr	r3, [r7, #8]	@ float
 11181 0c60 4FF08F41 		mov	r1, #1199570944
 11182 0c64 1846     		mov	r0, r3
 11183 0c66 FFF7FEFF 		bl	__aeabi_fmul
 11184 0c6a 0346     		mov	r3, r0
 11185 0c6c 1846     		mov	r0, r3
 11186 0c6e FFF7FEFF 		bl	__aeabi_f2iz
 11187 0c72 0146     		mov	r1, r0
 11188 0c74 344A     		ldr	r2, .L496+4
 11189 0c76 2346     		mov	r3, r4
 11190 0c78 DB00     		lsls	r3, r3, #3
 11191 0c7a 1B1B     		subs	r3, r3, r4
 11192 0c7c 1B01     		lsls	r3, r3, #4
 11193 0c7e 1344     		add	r3, r3, r2
 11194 0c80 B833     		adds	r3, r3, #184
 11195 0c82 1960     		str	r1, [r3]
1506:..\src/command_processing.c ****             }
1507:..\src/command_processing.c ****             else {
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1519:..\src/command_processing.c ****                 
1520:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1523:..\src/command_processing.c ****                 }
1524:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1525:..\src/command_processing.c ****             }
1526:..\src/command_processing.c ****             break;
 11196              		.loc 1 1526 0
 11197 0c84 00F021BC 		b	.L424
 11198              	.L450:
1508:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11199              		.loc 1 1508 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 255


 11200 0c88 314B     		ldr	r3, .L496+12
 11201 0c8a 1B68     		ldr	r3, [r3]	@ float
 11202 0c8c FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11203              		.loc 1 1509 0
 11204 0c8e 0023     		movs	r3, #0
 11205 0c90 BB75     		strb	r3, [r7, #22]
 11206 0c92 0EE0     		b	.L458
 11207              	.L459:
1510:..\src/command_processing.c ****                 }
 11208              		.loc 1 1510 0 discriminator 3
 11209 0c94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11210 0c96 C3F10303 		rsb	r3, r3, #3
 11211 0c9a 07F10802 		add	r2, r7, #8
 11212 0c9e 1344     		add	r3, r3, r2
 11213 0ca0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11214 0ca2 07F10C01 		add	r1, r7, #12
 11215 0ca6 0A44     		add	r2, r2, r1
 11216 0ca8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11217 0caa 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11218              		.loc 1 1509 0 discriminator 3
 11219 0cac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11220 0cae 0133     		adds	r3, r3, #1
 11221 0cb0 BB75     		strb	r3, [r7, #22]
 11222              	.L458:
1509:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11223              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11224 0cb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11225 0cb4 032B     		cmp	r3, #3
 11226 0cb6 EDD9     		bls	.L459
1512:..\src/command_processing.c ****                 
 11227              		.loc 1 1512 0 is_stmt 1
 11228 0cb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11229 0cba BB68     		ldr	r3, [r7, #8]	@ float
 11230 0cbc 4FF08F41 		mov	r1, #1199570944
 11231 0cc0 1846     		mov	r0, r3
 11232 0cc2 FFF7FEFF 		bl	__aeabi_fmul
 11233 0cc6 0346     		mov	r3, r0
 11234 0cc8 1846     		mov	r0, r3
 11235 0cca FFF7FEFF 		bl	__aeabi_f2iz
 11236 0cce 0146     		mov	r1, r0
 11237 0cd0 1D4A     		ldr	r2, .L496+4
 11238 0cd2 2346     		mov	r3, r4
 11239 0cd4 DB00     		lsls	r3, r3, #3
 11240 0cd6 1B1B     		subs	r3, r3, r4
 11241 0cd8 1B01     		lsls	r3, r3, #4
 11242 0cda 1344     		add	r3, r3, r2
 11243 0cdc C833     		adds	r3, r3, #200
 11244 0cde 1960     		str	r1, [r3]
1514:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11245              		.loc 1 1514 0
 11246 0ce0 1C4B     		ldr	r3, .L496+16
 11247 0ce2 1B68     		ldr	r3, [r3]	@ float
 11248 0ce4 FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11249              		.loc 1 1515 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 256


 11250 0ce6 0023     		movs	r3, #0
 11251 0ce8 BB75     		strb	r3, [r7, #22]
 11252 0cea 0EE0     		b	.L460
 11253              	.L461:
1516:..\src/command_processing.c ****                 }
 11254              		.loc 1 1516 0 discriminator 3
 11255 0cec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11256 0cee C3F10303 		rsb	r3, r3, #3
 11257 0cf2 07F10802 		add	r2, r7, #8
 11258 0cf6 1344     		add	r3, r3, r2
 11259 0cf8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11260 0cfa 07F10C01 		add	r1, r7, #12
 11261 0cfe 0A44     		add	r2, r2, r1
 11262 0d00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11263 0d02 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11264              		.loc 1 1515 0 discriminator 3
 11265 0d04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11266 0d06 0133     		adds	r3, r3, #1
 11267 0d08 BB75     		strb	r3, [r7, #22]
 11268              	.L460:
1515:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11269              		.loc 1 1515 0 is_stmt 0 discriminator 1
 11270 0d0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11271 0d0c 032B     		cmp	r3, #3
 11272 0d0e EDD9     		bls	.L461
1518:..\src/command_processing.c ****                 
 11273              		.loc 1 1518 0 is_stmt 1
 11274 0d10 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11275 0d12 BB68     		ldr	r3, [r7, #8]	@ float
 11276 0d14 4FF08F41 		mov	r1, #1199570944
 11277 0d18 1846     		mov	r0, r3
 11278 0d1a FFF7FEFF 		bl	__aeabi_fmul
 11279 0d1e 0346     		mov	r3, r0
 11280 0d20 1846     		mov	r0, r3
 11281 0d22 FFF7FEFF 		bl	__aeabi_f2iz
 11282 0d26 0146     		mov	r1, r0
 11283 0d28 074A     		ldr	r2, .L496+4
 11284 0d2a 2346     		mov	r3, r4
 11285 0d2c DB00     		lsls	r3, r3, #3
 11286 0d2e 1B1B     		subs	r3, r3, r4
 11287 0d30 1B01     		lsls	r3, r3, #4
 11288 0d32 1344     		add	r3, r3, r2
 11289 0d34 CC33     		adds	r3, r3, #204
 11290 0d36 1960     		str	r1, [r3]
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11291              		.loc 1 1520 0
 11292 0d38 074B     		ldr	r3, .L496+20
 11293 0d3a 1B68     		ldr	r3, [r3]	@ float
 11294 0d3c FB60     		str	r3, [r7, #12]	@ float
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11295              		.loc 1 1521 0
 11296 0d3e 0023     		movs	r3, #0
 11297 0d40 BB75     		strb	r3, [r7, #22]
 11298 0d42 1AE0     		b	.L462
 11299              	.L497:
 11300              		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 257


 11301              	.L496:
 11302 0d44 00000000 		.word	g_rx
 11303 0d48 00000000 		.word	g_mem
 11304 0d4c 00000000 		.word	c_mem
 11305 0d50 03000000 		.word	g_rx+3
 11306 0d54 07000000 		.word	g_rx+7
 11307 0d58 0B000000 		.word	g_rx+11
 11308              	.L463:
1522:..\src/command_processing.c ****                 }
 11309              		.loc 1 1522 0 discriminator 3
 11310 0d5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11311 0d5e C3F10303 		rsb	r3, r3, #3
 11312 0d62 07F10802 		add	r2, r7, #8
 11313 0d66 1344     		add	r3, r3, r2
 11314 0d68 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11315 0d6a 07F10C01 		add	r1, r7, #12
 11316 0d6e 0A44     		add	r2, r2, r1
 11317 0d70 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11318 0d72 1A70     		strb	r2, [r3]
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11319              		.loc 1 1521 0 discriminator 3
 11320 0d74 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11321 0d76 0133     		adds	r3, r3, #1
 11322 0d78 BB75     		strb	r3, [r7, #22]
 11323              	.L462:
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11324              		.loc 1 1521 0 is_stmt 0 discriminator 1
 11325 0d7a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11326 0d7c 032B     		cmp	r3, #3
 11327 0d7e EDD9     		bls	.L463
1524:..\src/command_processing.c ****             }
 11328              		.loc 1 1524 0 is_stmt 1
 11329 0d80 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11330 0d82 BB68     		ldr	r3, [r7, #8]	@ float
 11331 0d84 4FF08F41 		mov	r1, #1199570944
 11332 0d88 1846     		mov	r0, r3
 11333 0d8a FFF7FEFF 		bl	__aeabi_fmul
 11334 0d8e 0346     		mov	r3, r0
 11335 0d90 1846     		mov	r0, r3
 11336 0d92 FFF7FEFF 		bl	__aeabi_f2iz
 11337 0d96 0146     		mov	r1, r0
 11338 0d98 A34A     		ldr	r2, .L498
 11339 0d9a 2346     		mov	r3, r4
 11340 0d9c DB00     		lsls	r3, r3, #3
 11341 0d9e 1B1B     		subs	r3, r3, r4
 11342 0da0 1B01     		lsls	r3, r3, #4
 11343 0da2 1344     		add	r3, r3, r2
 11344 0da4 D033     		adds	r3, r3, #208
 11345 0da6 1960     		str	r1, [r3]
 11346              		.loc 1 1526 0
 11347 0da8 8FE3     		b	.L424
 11348              	.L404:
1527:..\src/command_processing.c ****             
1528:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1529:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11349              		.loc 1 1529 0
 11350 0daa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 258


 11351 0dac 9F49     		ldr	r1, .L498+4
 11352 0dae 1346     		mov	r3, r2
 11353 0db0 DB00     		lsls	r3, r3, #3
 11354 0db2 9B1A     		subs	r3, r3, r2
 11355 0db4 1B01     		lsls	r3, r3, #4
 11356 0db6 0B44     		add	r3, r3, r1
 11357 0db8 03F20F13 		addw	r3, r3, #271
 11358 0dbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11359 0dbe 032B     		cmp	r3, #3
 11360 0dc0 00F08580 		beq	.L464
1530:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11361              		.loc 1 1530 0
 11362 0dc4 9A4B     		ldr	r3, .L498+8
 11363 0dc6 1B68     		ldr	r3, [r3]	@ float
 11364 0dc8 FB60     		str	r3, [r7, #12]	@ float
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11365              		.loc 1 1531 0
 11366 0dca 0023     		movs	r3, #0
 11367 0dcc BB75     		strb	r3, [r7, #22]
 11368 0dce 0EE0     		b	.L465
 11369              	.L466:
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11370              		.loc 1 1532 0 discriminator 3
 11371 0dd0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11372 0dd2 C3F10303 		rsb	r3, r3, #3
 11373 0dd6 07F10802 		add	r2, r7, #8
 11374 0dda 1344     		add	r3, r3, r2
 11375 0ddc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11376 0dde 07F10C01 		add	r1, r7, #12
 11377 0de2 0A44     		add	r2, r2, r1
 11378 0de4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11379 0de6 1A70     		strb	r2, [r3]
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11380              		.loc 1 1531 0 discriminator 3
 11381 0de8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11382 0dea 0133     		adds	r3, r3, #1
 11383 0dec BB75     		strb	r3, [r7, #22]
 11384              	.L465:
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11385              		.loc 1 1531 0 is_stmt 0 discriminator 1
 11386 0dee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11387 0df0 032B     		cmp	r3, #3
 11388 0df2 EDD9     		bls	.L466
1533:..\src/command_processing.c ****                 }
1534:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11389              		.loc 1 1534 0 is_stmt 1
 11390 0df4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11391 0df6 BB68     		ldr	r3, [r7, #8]	@ float
 11392 0df8 4FF08F41 		mov	r1, #1199570944
 11393 0dfc 1846     		mov	r0, r3
 11394 0dfe FFF7FEFF 		bl	__aeabi_fmul
 11395 0e02 0346     		mov	r3, r0
 11396 0e04 1846     		mov	r0, r3
 11397 0e06 FFF7FEFF 		bl	__aeabi_f2iz
 11398 0e0a 0146     		mov	r1, r0
 11399 0e0c 864A     		ldr	r2, .L498
 11400 0e0e 2346     		mov	r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 259


 11401 0e10 DB00     		lsls	r3, r3, #3
 11402 0e12 1B1B     		subs	r3, r3, r4
 11403 0e14 1B01     		lsls	r3, r3, #4
 11404 0e16 1344     		add	r3, r3, r2
 11405 0e18 BC33     		adds	r3, r3, #188
 11406 0e1a 1960     		str	r1, [r3]
1535:..\src/command_processing.c ****                 
1536:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11407              		.loc 1 1536 0
 11408 0e1c 854B     		ldr	r3, .L498+12
 11409 0e1e 1B68     		ldr	r3, [r3]	@ float
 11410 0e20 FB60     		str	r3, [r7, #12]	@ float
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11411              		.loc 1 1537 0
 11412 0e22 0023     		movs	r3, #0
 11413 0e24 BB75     		strb	r3, [r7, #22]
 11414 0e26 0EE0     		b	.L467
 11415              	.L468:
1538:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11416              		.loc 1 1538 0 discriminator 3
 11417 0e28 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11418 0e2a C3F10303 		rsb	r3, r3, #3
 11419 0e2e 07F10802 		add	r2, r7, #8
 11420 0e32 1344     		add	r3, r3, r2
 11421 0e34 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11422 0e36 07F10C01 		add	r1, r7, #12
 11423 0e3a 0A44     		add	r2, r2, r1
 11424 0e3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11425 0e3e 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11426              		.loc 1 1537 0 discriminator 3
 11427 0e40 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11428 0e42 0133     		adds	r3, r3, #1
 11429 0e44 BB75     		strb	r3, [r7, #22]
 11430              	.L467:
1537:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11431              		.loc 1 1537 0 is_stmt 0 discriminator 1
 11432 0e46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11433 0e48 032B     		cmp	r3, #3
 11434 0e4a EDD9     		bls	.L468
1539:..\src/command_processing.c ****                 }
1540:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11435              		.loc 1 1540 0 is_stmt 1
 11436 0e4c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11437 0e4e BB68     		ldr	r3, [r7, #8]	@ float
 11438 0e50 4FF08F41 		mov	r1, #1199570944
 11439 0e54 1846     		mov	r0, r3
 11440 0e56 FFF7FEFF 		bl	__aeabi_fmul
 11441 0e5a 0346     		mov	r3, r0
 11442 0e5c 1846     		mov	r0, r3
 11443 0e5e FFF7FEFF 		bl	__aeabi_f2iz
 11444 0e62 0146     		mov	r1, r0
 11445 0e64 704A     		ldr	r2, .L498
 11446 0e66 2346     		mov	r3, r4
 11447 0e68 DB00     		lsls	r3, r3, #3
 11448 0e6a 1B1B     		subs	r3, r3, r4
 11449 0e6c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 260


 11450 0e6e 1344     		add	r3, r3, r2
 11451 0e70 C033     		adds	r3, r3, #192
 11452 0e72 1960     		str	r1, [r3]
1541:..\src/command_processing.c ****                 
1542:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11453              		.loc 1 1542 0
 11454 0e74 704B     		ldr	r3, .L498+16
 11455 0e76 1B68     		ldr	r3, [r3]	@ float
 11456 0e78 FB60     		str	r3, [r7, #12]	@ float
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11457              		.loc 1 1543 0
 11458 0e7a 0023     		movs	r3, #0
 11459 0e7c BB75     		strb	r3, [r7, #22]
 11460 0e7e 0EE0     		b	.L469
 11461              	.L470:
1544:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11462              		.loc 1 1544 0 discriminator 3
 11463 0e80 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11464 0e82 C3F10303 		rsb	r3, r3, #3
 11465 0e86 07F10802 		add	r2, r7, #8
 11466 0e8a 1344     		add	r3, r3, r2
 11467 0e8c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11468 0e8e 07F10C01 		add	r1, r7, #12
 11469 0e92 0A44     		add	r2, r2, r1
 11470 0e94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11471 0e96 1A70     		strb	r2, [r3]
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11472              		.loc 1 1543 0 discriminator 3
 11473 0e98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11474 0e9a 0133     		adds	r3, r3, #1
 11475 0e9c BB75     		strb	r3, [r7, #22]
 11476              	.L469:
1543:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11477              		.loc 1 1543 0 is_stmt 0 discriminator 1
 11478 0e9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11479 0ea0 032B     		cmp	r3, #3
 11480 0ea2 EDD9     		bls	.L470
1545:..\src/command_processing.c ****                 }
1546:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11481              		.loc 1 1546 0 is_stmt 1
 11482 0ea4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11483 0ea6 BB68     		ldr	r3, [r7, #8]	@ float
 11484 0ea8 4FF08F41 		mov	r1, #1199570944
 11485 0eac 1846     		mov	r0, r3
 11486 0eae FFF7FEFF 		bl	__aeabi_fmul
 11487 0eb2 0346     		mov	r3, r0
 11488 0eb4 1846     		mov	r0, r3
 11489 0eb6 FFF7FEFF 		bl	__aeabi_f2iz
 11490 0eba 0146     		mov	r1, r0
 11491 0ebc 5A4A     		ldr	r2, .L498
 11492 0ebe 2346     		mov	r3, r4
 11493 0ec0 DB00     		lsls	r3, r3, #3
 11494 0ec2 1B1B     		subs	r3, r3, r4
 11495 0ec4 1B01     		lsls	r3, r3, #4
 11496 0ec6 1344     		add	r3, r3, r2
 11497 0ec8 C433     		adds	r3, r3, #196
 11498 0eca 1960     		str	r1, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 261


1547:..\src/command_processing.c ****             }
1548:..\src/command_processing.c ****             else {
1549:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1550:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1551:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1552:..\src/command_processing.c ****                 }
1553:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1554:..\src/command_processing.c ****                 
1555:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1556:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1557:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1558:..\src/command_processing.c ****                 }
1559:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1560:..\src/command_processing.c ****                 
1561:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1562:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1563:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1564:..\src/command_processing.c ****                 }
1565:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1566:..\src/command_processing.c ****             }            
1567:..\src/command_processing.c ****             break;  
 11499              		.loc 1 1567 0
 11500 0ecc FDE2     		b	.L424
 11501              	.L464:
1549:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11502              		.loc 1 1549 0
 11503 0ece 584B     		ldr	r3, .L498+8
 11504 0ed0 1B68     		ldr	r3, [r3]	@ float
 11505 0ed2 FB60     		str	r3, [r7, #12]	@ float
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11506              		.loc 1 1550 0
 11507 0ed4 0023     		movs	r3, #0
 11508 0ed6 BB75     		strb	r3, [r7, #22]
 11509 0ed8 0EE0     		b	.L472
 11510              	.L473:
1551:..\src/command_processing.c ****                 }
 11511              		.loc 1 1551 0 discriminator 3
 11512 0eda BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11513 0edc C3F10303 		rsb	r3, r3, #3
 11514 0ee0 07F10802 		add	r2, r7, #8
 11515 0ee4 1344     		add	r3, r3, r2
 11516 0ee6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11517 0ee8 07F10C01 		add	r1, r7, #12
 11518 0eec 0A44     		add	r2, r2, r1
 11519 0eee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11520 0ef0 1A70     		strb	r2, [r3]
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11521              		.loc 1 1550 0 discriminator 3
 11522 0ef2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11523 0ef4 0133     		adds	r3, r3, #1
 11524 0ef6 BB75     		strb	r3, [r7, #22]
 11525              	.L472:
1550:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11526              		.loc 1 1550 0 is_stmt 0 discriminator 1
 11527 0ef8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11528 0efa 032B     		cmp	r3, #3
 11529 0efc EDD9     		bls	.L473
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 262


1553:..\src/command_processing.c ****                 
 11530              		.loc 1 1553 0 is_stmt 1
 11531 0efe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11532 0f00 BB68     		ldr	r3, [r7, #8]	@ float
 11533 0f02 4FF08F41 		mov	r1, #1199570944
 11534 0f06 1846     		mov	r0, r3
 11535 0f08 FFF7FEFF 		bl	__aeabi_fmul
 11536 0f0c 0346     		mov	r3, r0
 11537 0f0e 1846     		mov	r0, r3
 11538 0f10 FFF7FEFF 		bl	__aeabi_f2iz
 11539 0f14 0146     		mov	r1, r0
 11540 0f16 444A     		ldr	r2, .L498
 11541 0f18 2346     		mov	r3, r4
 11542 0f1a DB00     		lsls	r3, r3, #3
 11543 0f1c 1B1B     		subs	r3, r3, r4
 11544 0f1e 1B01     		lsls	r3, r3, #4
 11545 0f20 1344     		add	r3, r3, r2
 11546 0f22 D433     		adds	r3, r3, #212
 11547 0f24 1960     		str	r1, [r3]
1555:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11548              		.loc 1 1555 0
 11549 0f26 434B     		ldr	r3, .L498+12
 11550 0f28 1B68     		ldr	r3, [r3]	@ float
 11551 0f2a FB60     		str	r3, [r7, #12]	@ float
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11552              		.loc 1 1556 0
 11553 0f2c 0023     		movs	r3, #0
 11554 0f2e BB75     		strb	r3, [r7, #22]
 11555 0f30 0EE0     		b	.L474
 11556              	.L475:
1557:..\src/command_processing.c ****                 }
 11557              		.loc 1 1557 0 discriminator 3
 11558 0f32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11559 0f34 C3F10303 		rsb	r3, r3, #3
 11560 0f38 07F10802 		add	r2, r7, #8
 11561 0f3c 1344     		add	r3, r3, r2
 11562 0f3e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11563 0f40 07F10C01 		add	r1, r7, #12
 11564 0f44 0A44     		add	r2, r2, r1
 11565 0f46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11566 0f48 1A70     		strb	r2, [r3]
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11567              		.loc 1 1556 0 discriminator 3
 11568 0f4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11569 0f4c 0133     		adds	r3, r3, #1
 11570 0f4e BB75     		strb	r3, [r7, #22]
 11571              	.L474:
1556:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11572              		.loc 1 1556 0 is_stmt 0 discriminator 1
 11573 0f50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11574 0f52 032B     		cmp	r3, #3
 11575 0f54 EDD9     		bls	.L475
1559:..\src/command_processing.c ****                 
 11576              		.loc 1 1559 0 is_stmt 1
 11577 0f56 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11578 0f58 BB68     		ldr	r3, [r7, #8]	@ float
 11579 0f5a 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 263


 11580 0f5e 1846     		mov	r0, r3
 11581 0f60 FFF7FEFF 		bl	__aeabi_fmul
 11582 0f64 0346     		mov	r3, r0
 11583 0f66 1846     		mov	r0, r3
 11584 0f68 FFF7FEFF 		bl	__aeabi_f2iz
 11585 0f6c 0146     		mov	r1, r0
 11586 0f6e 2E4A     		ldr	r2, .L498
 11587 0f70 2346     		mov	r3, r4
 11588 0f72 DB00     		lsls	r3, r3, #3
 11589 0f74 1B1B     		subs	r3, r3, r4
 11590 0f76 1B01     		lsls	r3, r3, #4
 11591 0f78 1344     		add	r3, r3, r2
 11592 0f7a D833     		adds	r3, r3, #216
 11593 0f7c 1960     		str	r1, [r3]
1561:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11594              		.loc 1 1561 0
 11595 0f7e 2E4B     		ldr	r3, .L498+16
 11596 0f80 1B68     		ldr	r3, [r3]	@ float
 11597 0f82 FB60     		str	r3, [r7, #12]	@ float
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11598              		.loc 1 1562 0
 11599 0f84 0023     		movs	r3, #0
 11600 0f86 BB75     		strb	r3, [r7, #22]
 11601 0f88 0EE0     		b	.L476
 11602              	.L477:
1563:..\src/command_processing.c ****                 }
 11603              		.loc 1 1563 0 discriminator 3
 11604 0f8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11605 0f8c C3F10303 		rsb	r3, r3, #3
 11606 0f90 07F10802 		add	r2, r7, #8
 11607 0f94 1344     		add	r3, r3, r2
 11608 0f96 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11609 0f98 07F10C01 		add	r1, r7, #12
 11610 0f9c 0A44     		add	r2, r2, r1
 11611 0f9e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11612 0fa0 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11613              		.loc 1 1562 0 discriminator 3
 11614 0fa2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11615 0fa4 0133     		adds	r3, r3, #1
 11616 0fa6 BB75     		strb	r3, [r7, #22]
 11617              	.L476:
1562:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11618              		.loc 1 1562 0 is_stmt 0 discriminator 1
 11619 0fa8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11620 0faa 032B     		cmp	r3, #3
 11621 0fac EDD9     		bls	.L477
1565:..\src/command_processing.c ****             }            
 11622              		.loc 1 1565 0 is_stmt 1
 11623 0fae FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11624 0fb0 BB68     		ldr	r3, [r7, #8]	@ float
 11625 0fb2 4FF08F41 		mov	r1, #1199570944
 11626 0fb6 1846     		mov	r0, r3
 11627 0fb8 FFF7FEFF 		bl	__aeabi_fmul
 11628 0fbc 0346     		mov	r3, r0
 11629 0fbe 1846     		mov	r0, r3
 11630 0fc0 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 264


 11631 0fc4 0146     		mov	r1, r0
 11632 0fc6 184A     		ldr	r2, .L498
 11633 0fc8 2346     		mov	r3, r4
 11634 0fca DB00     		lsls	r3, r3, #3
 11635 0fcc 1B1B     		subs	r3, r3, r4
 11636 0fce 1B01     		lsls	r3, r3, #4
 11637 0fd0 1344     		add	r3, r3, r2
 11638 0fd2 DC33     		adds	r3, r3, #220
 11639 0fd4 1960     		str	r1, [r3]
 11640              		.loc 1 1567 0
 11641 0fd6 78E2     		b	.L424
 11642              	.L405:
1568:..\src/command_processing.c ****             
1569:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1570:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11643              		.loc 1 1570 0
 11644 0fd8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11645 0fda 184B     		ldr	r3, .L498+20
 11646 0fdc D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11647 0fde 1249     		ldr	r1, .L498
 11648 0fe0 1346     		mov	r3, r2
 11649 0fe2 DB00     		lsls	r3, r3, #3
 11650 0fe4 9B1A     		subs	r3, r3, r2
 11651 0fe6 1B01     		lsls	r3, r3, #4
 11652 0fe8 0B44     		add	r3, r3, r1
 11653 0fea 03F58773 		add	r3, r3, #270
 11654 0fee 0246     		mov	r2, r0
 11655 0ff0 1A70     		strb	r2, [r3]
1571:..\src/command_processing.c ****             
1572:..\src/command_processing.c ****             // Hold the actual position
1573:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11656              		.loc 1 1573 0
 11657 0ff2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11658 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11659 0ff6 0C48     		ldr	r0, .L498
 11660 0ff8 1346     		mov	r3, r2
 11661 0ffa DB00     		lsls	r3, r3, #3
 11662 0ffc 9B1A     		subs	r3, r3, r2
 11663 0ffe 1B01     		lsls	r3, r3, #4
 11664 1000 0344     		add	r3, r3, r0
 11665 1002 03F58873 		add	r3, r3, #272
 11666 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11667 1008 1846     		mov	r0, r3
 11668 100a 0D4A     		ldr	r2, .L498+24
 11669 100c 3423     		movs	r3, #52
 11670 100e 03FB00F3 		mul	r3, r3, r0
 11671 1012 1344     		add	r3, r3, r2
 11672 1014 1A68     		ldr	r2, [r3]
 11673 1016 0B48     		ldr	r0, .L498+28
 11674 1018 0B01     		lsls	r3, r1, #4
 11675 101a 0344     		add	r3, r3, r0
 11676 101c 1A60     		str	r2, [r3]
1574:..\src/command_processing.c ****             break;   
 11677              		.loc 1 1574 0
 11678 101e 54E2     		b	.L424
 11679              	.L406:
1575:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 265


1576:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1577:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11680              		.loc 1 1577 0
 11681 1020 0023     		movs	r3, #0
 11682 1022 FB75     		strb	r3, [r7, #23]
 11683 1024 8FE0     		b	.L478
 11684              	.L499:
 11685 1026 00BF     		.align	2
 11686              	.L498:
 11687 1028 00000000 		.word	g_mem
 11688 102c 00000000 		.word	c_mem
 11689 1030 03000000 		.word	g_rx+3
 11690 1034 07000000 		.word	g_rx+7
 11691 1038 0B000000 		.word	g_rx+11
 11692 103c 00000000 		.word	g_rx
 11693 1040 00000000 		.word	g_meas
 11694 1044 00000000 		.word	g_refNew
 11695              	.L479:
1578:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11696              		.loc 1 1578 0 discriminator 3
 11697 1048 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11698 104a 8A49     		ldr	r1, .L500
 11699 104c 1346     		mov	r3, r2
 11700 104e DB00     		lsls	r3, r3, #3
 11701 1050 9B1A     		subs	r3, r3, r2
 11702 1052 1B01     		lsls	r3, r3, #4
 11703 1054 0B44     		add	r3, r3, r1
 11704 1056 03F58873 		add	r3, r3, #272
 11705 105a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11706 105c 1C46     		mov	r4, r3
 11707 105e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11708 1060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11709 1062 5B00     		lsls	r3, r3, #1
 11710 1064 0333     		adds	r3, r3, #3
 11711 1066 8449     		ldr	r1, .L500+4
 11712 1068 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11713 106a 1B02     		lsls	r3, r3, #8
 11714 106c 19B2     		sxth	r1, r3
 11715 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11716 1070 0233     		adds	r3, r3, #2
 11717 1072 5B00     		lsls	r3, r3, #1
 11718 1074 8048     		ldr	r0, .L500+4
 11719 1076 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11720 1078 1BB2     		sxth	r3, r3
 11721 107a 0B43     		orrs	r3, r3, r1
 11722 107c 1BB2     		sxth	r3, r3
 11723 107e 1846     		mov	r0, r3
 11724 1080 7C49     		ldr	r1, .L500
 11725 1082 2346     		mov	r3, r4
 11726 1084 5B00     		lsls	r3, r3, #1
 11727 1086 2344     		add	r3, r3, r4
 11728 1088 9B00     		lsls	r3, r3, #2
 11729 108a 1344     		add	r3, r3, r2
 11730 108c 6633     		adds	r3, r3, #102
 11731 108e 41F82300 		str	r0, [r1, r3, lsl #2]
1579:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11732              		.loc 1 1579 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 266


 11733 1092 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11734 1094 7749     		ldr	r1, .L500
 11735 1096 1346     		mov	r3, r2
 11736 1098 DB00     		lsls	r3, r3, #3
 11737 109a 9B1A     		subs	r3, r3, r2
 11738 109c 1B01     		lsls	r3, r3, #4
 11739 109e 0B44     		add	r3, r3, r1
 11740 10a0 03F58873 		add	r3, r3, #272
 11741 10a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11742 10a6 1D46     		mov	r5, r3
 11743 10a8 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11744 10aa FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11745 10ac 7148     		ldr	r0, .L500
 11746 10ae 1346     		mov	r3, r2
 11747 10b0 DB00     		lsls	r3, r3, #3
 11748 10b2 9B1A     		subs	r3, r3, r2
 11749 10b4 1B01     		lsls	r3, r3, #4
 11750 10b6 0344     		add	r3, r3, r0
 11751 10b8 03F58873 		add	r3, r3, #272
 11752 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11753 10be 1C46     		mov	r4, r3
 11754 10c0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11755 10c2 6C48     		ldr	r0, .L500
 11756 10c4 2346     		mov	r3, r4
 11757 10c6 5B00     		lsls	r3, r3, #1
 11758 10c8 2344     		add	r3, r3, r4
 11759 10ca 9B00     		lsls	r3, r3, #2
 11760 10cc 1344     		add	r3, r3, r2
 11761 10ce 6633     		adds	r3, r3, #102
 11762 10d0 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11763 10d4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11764 10d6 674C     		ldr	r4, .L500
 11765 10d8 1346     		mov	r3, r2
 11766 10da DB00     		lsls	r3, r3, #3
 11767 10dc 9B1A     		subs	r3, r3, r2
 11768 10de 1B01     		lsls	r3, r3, #4
 11769 10e0 2344     		add	r3, r3, r4
 11770 10e2 03F58873 		add	r3, r3, #272
 11771 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11772 10e8 1E46     		mov	r6, r3
 11773 10ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11774 10ec 614C     		ldr	r4, .L500
 11775 10ee 3346     		mov	r3, r6
 11776 10f0 5B00     		lsls	r3, r3, #1
 11777 10f2 3344     		add	r3, r3, r6
 11778 10f4 1B01     		lsls	r3, r3, #4
 11779 10f6 2344     		add	r3, r3, r4
 11780 10f8 1344     		add	r3, r3, r2
 11781 10fa 03F29513 		addw	r3, r3, #405
 11782 10fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11783 1100 00FA03F2 		lsl	r2, r0, r3
 11784 1104 5B48     		ldr	r0, .L500
 11785 1106 2B46     		mov	r3, r5
 11786 1108 5B00     		lsls	r3, r3, #1
 11787 110a 2B44     		add	r3, r3, r5
 11788 110c 9B00     		lsls	r3, r3, #2
 11789 110e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 267


 11790 1110 6633     		adds	r3, r3, #102
 11791 1112 40F82320 		str	r2, [r0, r3, lsl #2]
1580:..\src/command_processing.c **** 
1581:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11792              		.loc 1 1581 0 discriminator 3
 11793 1116 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11794 1118 5649     		ldr	r1, .L500
 11795 111a 1346     		mov	r3, r2
 11796 111c DB00     		lsls	r3, r3, #3
 11797 111e 9B1A     		subs	r3, r3, r2
 11798 1120 1B01     		lsls	r3, r3, #4
 11799 1122 0B44     		add	r3, r3, r1
 11800 1124 03F58873 		add	r3, r3, #272
 11801 1128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11802 112a 1846     		mov	r0, r3
 11803 112c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11804 112e 5349     		ldr	r1, .L500+8
 11805 1130 3422     		movs	r2, #52
 11806 1132 02FB00F2 		mul	r2, r2, r0
 11807 1136 0A44     		add	r2, r2, r1
 11808 1138 1344     		add	r3, r3, r2
 11809 113a 1833     		adds	r3, r3, #24
 11810 113c 0022     		movs	r2, #0
 11811 113e 1A70     		strb	r2, [r3]
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11812              		.loc 1 1577 0 discriminator 3
 11813 1140 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11814 1142 0133     		adds	r3, r3, #1
 11815 1144 FB75     		strb	r3, [r7, #23]
 11816              	.L478:
1577:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11817              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11818 1146 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11819 1148 022B     		cmp	r3, #2
 11820 114a 7FF67DAF 		bls	.L479
1582:..\src/command_processing.c ****             }
1583:..\src/command_processing.c ****             reset_last_value_flag[SECOND_MOTOR_IDX] = 1;
 11821              		.loc 1 1583 0 is_stmt 1
 11822 114e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 11823 1150 4B4A     		ldr	r2, .L500+12
 11824 1152 0121     		movs	r1, #1
 11825 1154 D154     		strb	r1, [r2, r3]
1584:..\src/command_processing.c ****             break;
 11826              		.loc 1 1584 0
 11827 1156 B8E1     		b	.L424
 11828              	.L407:
1585:..\src/command_processing.c ****     
1586:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1587:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11829              		.loc 1 1587 0
 11830 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11831 115a 474B     		ldr	r3, .L500+4
 11832 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11833 115e 1906     		lsls	r1, r3, #24
 11834 1160 454B     		ldr	r3, .L500+4
 11835 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11836 1164 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 268


 11837 1166 1943     		orrs	r1, r1, r3
 11838 1168 434B     		ldr	r3, .L500+4
 11839 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11840 116c 1B02     		lsls	r3, r3, #8
 11841 116e 0B43     		orrs	r3, r3, r1
 11842 1170 4149     		ldr	r1, .L500+4
 11843 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11844 1174 1943     		orrs	r1, r1, r3
 11845 1176 3F48     		ldr	r0, .L500
 11846 1178 1346     		mov	r3, r2
 11847 117a DB00     		lsls	r3, r3, #3
 11848 117c 9B1A     		subs	r3, r3, r2
 11849 117e 1B01     		lsls	r3, r3, #4
 11850 1180 0344     		add	r3, r3, r0
 11851 1182 E433     		adds	r3, r3, #228
 11852 1184 1960     		str	r1, [r3]
1588:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11853              		.loc 1 1588 0
 11854 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11855 1188 3B4B     		ldr	r3, .L500+4
 11856 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11857 118c 1906     		lsls	r1, r3, #24
 11858 118e 3A4B     		ldr	r3, .L500+4
 11859 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11860 1192 1B04     		lsls	r3, r3, #16
 11861 1194 1943     		orrs	r1, r1, r3
 11862 1196 384B     		ldr	r3, .L500+4
 11863 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11864 119a 1B02     		lsls	r3, r3, #8
 11865 119c 0B43     		orrs	r3, r3, r1
 11866 119e 3649     		ldr	r1, .L500+4
 11867 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11868 11a2 1943     		orrs	r1, r1, r3
 11869 11a4 3348     		ldr	r0, .L500
 11870 11a6 1346     		mov	r3, r2
 11871 11a8 DB00     		lsls	r3, r3, #3
 11872 11aa 9B1A     		subs	r3, r3, r2
 11873 11ac 1B01     		lsls	r3, r3, #4
 11874 11ae 0344     		add	r3, r3, r0
 11875 11b0 E833     		adds	r3, r3, #232
 11876 11b2 1960     		str	r1, [r3]
1589:..\src/command_processing.c **** 
1590:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11877              		.loc 1 1590 0
 11878 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11879 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11880 11b8 2E48     		ldr	r0, .L500
 11881 11ba 0B46     		mov	r3, r1
 11882 11bc DB00     		lsls	r3, r3, #3
 11883 11be 5B1A     		subs	r3, r3, r1
 11884 11c0 1B01     		lsls	r3, r3, #4
 11885 11c2 0344     		add	r3, r3, r0
 11886 11c4 E433     		adds	r3, r3, #228
 11887 11c6 1868     		ldr	r0, [r3]
 11888 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11889 11ca 2A4C     		ldr	r4, .L500
 11890 11cc 0B46     		mov	r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 269


 11891 11ce DB00     		lsls	r3, r3, #3
 11892 11d0 5B1A     		subs	r3, r3, r1
 11893 11d2 1B01     		lsls	r3, r3, #4
 11894 11d4 2344     		add	r3, r3, r4
 11895 11d6 03F58873 		add	r3, r3, #272
 11896 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11897 11dc 1C46     		mov	r4, r3
 11898 11de 2549     		ldr	r1, .L500
 11899 11e0 2346     		mov	r3, r4
 11900 11e2 5B00     		lsls	r3, r3, #1
 11901 11e4 2344     		add	r3, r3, r4
 11902 11e6 1B01     		lsls	r3, r3, #4
 11903 11e8 0B44     		add	r3, r3, r1
 11904 11ea 03F29513 		addw	r3, r3, #405
 11905 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11906 11f0 00FA03F1 		lsl	r1, r0, r3
 11907 11f4 1F48     		ldr	r0, .L500
 11908 11f6 1346     		mov	r3, r2
 11909 11f8 DB00     		lsls	r3, r3, #3
 11910 11fa 9B1A     		subs	r3, r3, r2
 11911 11fc 1B01     		lsls	r3, r3, #4
 11912 11fe 0344     		add	r3, r3, r0
 11913 1200 E433     		adds	r3, r3, #228
 11914 1202 1960     		str	r1, [r3]
1591:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11915              		.loc 1 1591 0
 11916 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11917 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11918 1208 1A48     		ldr	r0, .L500
 11919 120a 0B46     		mov	r3, r1
 11920 120c DB00     		lsls	r3, r3, #3
 11921 120e 5B1A     		subs	r3, r3, r1
 11922 1210 1B01     		lsls	r3, r3, #4
 11923 1212 0344     		add	r3, r3, r0
 11924 1214 E833     		adds	r3, r3, #232
 11925 1216 1868     		ldr	r0, [r3]
 11926 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11927 121a 164C     		ldr	r4, .L500
 11928 121c 0B46     		mov	r3, r1
 11929 121e DB00     		lsls	r3, r3, #3
 11930 1220 5B1A     		subs	r3, r3, r1
 11931 1222 1B01     		lsls	r3, r3, #4
 11932 1224 2344     		add	r3, r3, r4
 11933 1226 03F58873 		add	r3, r3, #272
 11934 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11935 122c 1C46     		mov	r4, r3
 11936 122e 1149     		ldr	r1, .L500
 11937 1230 2346     		mov	r3, r4
 11938 1232 5B00     		lsls	r3, r3, #1
 11939 1234 2344     		add	r3, r3, r4
 11940 1236 1B01     		lsls	r3, r3, #4
 11941 1238 0B44     		add	r3, r3, r1
 11942 123a 03F29513 		addw	r3, r3, #405
 11943 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11944 1240 00FA03F1 		lsl	r1, r0, r3
 11945 1244 0B48     		ldr	r0, .L500
 11946 1246 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 270


 11947 1248 DB00     		lsls	r3, r3, #3
 11948 124a 9B1A     		subs	r3, r3, r2
 11949 124c 1B01     		lsls	r3, r3, #4
 11950 124e 0344     		add	r3, r3, r0
 11951 1250 E833     		adds	r3, r3, #232
 11952 1252 1960     		str	r1, [r3]
1592:..\src/command_processing.c ****             break;
 11953              		.loc 1 1592 0
 11954 1254 39E1     		b	.L424
 11955              	.L408:
1593:..\src/command_processing.c ****             
1594:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1595:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11956              		.loc 1 1595 0
 11957 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11958 1258 074B     		ldr	r3, .L500+4
 11959 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11960 125c 0549     		ldr	r1, .L500
 11961 125e 1346     		mov	r3, r2
 11962 1260 DB00     		lsls	r3, r3, #3
 11963 1262 9B1A     		subs	r3, r3, r2
 11964 1264 1B01     		lsls	r3, r3, #4
 11965 1266 0B44     		add	r3, r3, r1
 11966 1268 E233     		adds	r3, r3, #226
 11967 126a 0246     		mov	r2, r0
 11968 126c 1A70     		strb	r2, [r3]
1596:..\src/command_processing.c ****             set_motor_driver_type();
 11969              		.loc 1 1596 0
 11970 126e FFF7FEFF 		bl	set_motor_driver_type
1597:..\src/command_processing.c ****             break;
 11971              		.loc 1 1597 0
 11972 1272 2AE1     		b	.L424
 11973              	.L501:
 11974              		.align	2
 11975              	.L500:
 11976 1274 00000000 		.word	g_mem
 11977 1278 00000000 		.word	g_rx
 11978 127c 00000000 		.word	g_meas
 11979 1280 00000000 		.word	reset_last_value_flag
 11980              	.L409:
1598:..\src/command_processing.c **** 
1599:..\src/command_processing.c ****         case 75:        // Device type
1600:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11981              		.loc 1 1600 0
 11982 1284 934B     		ldr	r3, .L502
 11983 1286 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11984 1288 934B     		ldr	r3, .L502+4
 11985 128a 83F8AC20 		strb	r2, [r3, #172]
1601:..\src/command_processing.c ****             
1602:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11986              		.loc 1 1602 0
 11987 128e 924B     		ldr	r3, .L502+4
 11988 1290 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11989 1294 002B     		cmp	r3, #0
 11990 1296 40F0A480 		bne	.L480
1603:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11991              		.loc 1 1603 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 271


 11992 129a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11993 129c 8E49     		ldr	r1, .L502+4
 11994 129e 1346     		mov	r3, r2
 11995 12a0 DB00     		lsls	r3, r3, #3
 11996 12a2 9B1A     		subs	r3, r3, r2
 11997 12a4 1B01     		lsls	r3, r3, #4
 11998 12a6 0B44     		add	r3, r3, r1
 11999 12a8 03F58873 		add	r3, r3, #272
 12000 12ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12001 12ae 1946     		mov	r1, r3
 12002 12b0 894A     		ldr	r2, .L502+4
 12003 12b2 0B46     		mov	r3, r1
 12004 12b4 5B00     		lsls	r3, r3, #1
 12005 12b6 0B44     		add	r3, r3, r1
 12006 12b8 1B01     		lsls	r3, r3, #4
 12007 12ba 1344     		add	r3, r3, r2
 12008 12bc 03F5D873 		add	r3, r3, #432
 12009 12c0 0122     		movs	r2, #1
 12010 12c2 1A70     		strb	r2, [r3]
1604:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 12011              		.loc 1 1604 0
 12012 12c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12013 12c6 8449     		ldr	r1, .L502+4
 12014 12c8 1346     		mov	r3, r2
 12015 12ca DB00     		lsls	r3, r3, #3
 12016 12cc 9B1A     		subs	r3, r3, r2
 12017 12ce 1B01     		lsls	r3, r3, #4
 12018 12d0 0B44     		add	r3, r3, r1
 12019 12d2 03F58873 		add	r3, r3, #272
 12020 12d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12021 12d8 1946     		mov	r1, r3
 12022 12da 7F4A     		ldr	r2, .L502+4
 12023 12dc 0B46     		mov	r3, r1
 12024 12de 5B00     		lsls	r3, r3, #1
 12025 12e0 0B44     		add	r3, r3, r1
 12026 12e2 1B01     		lsls	r3, r3, #4
 12027 12e4 1344     		add	r3, r3, r2
 12028 12e6 03F2B513 		addw	r3, r3, #437
 12029 12ea 2322     		movs	r2, #35
 12030 12ec 1A70     		strb	r2, [r3]
1605:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 12031              		.loc 1 1605 0
 12032 12ee 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12033 12f0 7949     		ldr	r1, .L502+4
 12034 12f2 1346     		mov	r3, r2
 12035 12f4 DB00     		lsls	r3, r3, #3
 12036 12f6 9B1A     		subs	r3, r3, r2
 12037 12f8 1B01     		lsls	r3, r3, #4
 12038 12fa 0B44     		add	r3, r3, r1
 12039 12fc 03F58873 		add	r3, r3, #272
 12040 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12041 1302 1946     		mov	r1, r3
 12042 1304 744A     		ldr	r2, .L502+4
 12043 1306 0B46     		mov	r3, r1
 12044 1308 5B00     		lsls	r3, r3, #1
 12045 130a 0B44     		add	r3, r3, r1
 12046 130c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 272


 12047 130e 1344     		add	r3, r3, r2
 12048 1310 03F5DB73 		add	r3, r3, #438
 12049 1314 0322     		movs	r2, #3
 12050 1316 1A70     		strb	r2, [r3]
1606:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 12051              		.loc 1 1606 0
 12052 1318 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12053 131a 6F49     		ldr	r1, .L502+4
 12054 131c 1346     		mov	r3, r2
 12055 131e DB00     		lsls	r3, r3, #3
 12056 1320 9B1A     		subs	r3, r3, r2
 12057 1322 1B01     		lsls	r3, r3, #4
 12058 1324 0B44     		add	r3, r3, r1
 12059 1326 03F58873 		add	r3, r3, #272
 12060 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12061 132c 1946     		mov	r1, r3
 12062 132e 6A4A     		ldr	r2, .L502+4
 12063 1330 0B46     		mov	r3, r1
 12064 1332 5B00     		lsls	r3, r3, #1
 12065 1334 0B44     		add	r3, r3, r1
 12066 1336 1B01     		lsls	r3, r3, #4
 12067 1338 1344     		add	r3, r3, r2
 12068 133a 03F2B713 		addw	r3, r3, #439
 12069 133e FF22     		movs	r2, #255
 12070 1340 1A70     		strb	r2, [r3]
1607:..\src/command_processing.c ****                 
1608:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1609:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 12071              		.loc 1 1609 0
 12072 1342 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12073 1344 644B     		ldr	r3, .L502+4
 12074 1346 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 12075 134a 6349     		ldr	r1, .L502+4
 12076 134c 1346     		mov	r3, r2
 12077 134e DB00     		lsls	r3, r3, #3
 12078 1350 9B1A     		subs	r3, r3, r2
 12079 1352 1B01     		lsls	r3, r3, #4
 12080 1354 0B44     		add	r3, r3, r1
 12081 1356 03F58873 		add	r3, r3, #272
 12082 135a 0246     		mov	r2, r0
 12083 135c 1A70     		strb	r2, [r3]
1610:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 12084              		.loc 1 1610 0
 12085 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12086 1360 5D49     		ldr	r1, .L502+4
 12087 1362 1346     		mov	r3, r2
 12088 1364 DB00     		lsls	r3, r3, #3
 12089 1366 9B1A     		subs	r3, r3, r2
 12090 1368 1B01     		lsls	r3, r3, #4
 12091 136a 0B44     		add	r3, r3, r1
 12092 136c 03F21113 		addw	r3, r3, #273
 12093 1370 0122     		movs	r2, #1
 12094 1372 1A70     		strb	r2, [r3]
1611:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 12095              		.loc 1 1611 0
 12096 1374 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12097 1376 5849     		ldr	r1, .L502+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 273


 12098 1378 1346     		mov	r3, r2
 12099 137a DB00     		lsls	r3, r3, #3
 12100 137c 9B1A     		subs	r3, r3, r2
 12101 137e 1B01     		lsls	r3, r3, #4
 12102 1380 0B44     		add	r3, r3, r1
 12103 1382 03F58973 		add	r3, r3, #274
 12104 1386 0122     		movs	r2, #1
 12105 1388 1A70     		strb	r2, [r3]
1612:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 12106              		.loc 1 1612 0
 12107 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12108 138c 5249     		ldr	r1, .L502+4
 12109 138e 1346     		mov	r3, r2
 12110 1390 DB00     		lsls	r3, r3, #3
 12111 1392 9B1A     		subs	r3, r3, r2
 12112 1394 1B01     		lsls	r3, r3, #4
 12113 1396 0B44     		add	r3, r3, r1
 12114 1398 E433     		adds	r3, r3, #228
 12115 139a 0022     		movs	r2, #0
 12116 139c 1A60     		str	r2, [r3]
1613:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_ID
 12117              		.loc 1 1613 0
 12118 139e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12119 13a0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 12120 13a2 4D48     		ldr	r0, .L502+4
 12121 13a4 0B46     		mov	r3, r1
 12122 13a6 DB00     		lsls	r3, r3, #3
 12123 13a8 5B1A     		subs	r3, r3, r1
 12124 13aa 1B01     		lsls	r3, r3, #4
 12125 13ac 0344     		add	r3, r3, r0
 12126 13ae 03F58873 		add	r3, r3, #272
 12127 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12128 13b4 1846     		mov	r0, r3
 12129 13b6 4849     		ldr	r1, .L502+4
 12130 13b8 0346     		mov	r3, r0
 12131 13ba 5B00     		lsls	r3, r3, #1
 12132 13bc 0344     		add	r3, r3, r0
 12133 13be 1B01     		lsls	r3, r3, #4
 12134 13c0 0B44     		add	r3, r3, r1
 12135 13c2 03F29513 		addw	r3, r3, #405
 12136 13c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12137 13c8 1946     		mov	r1, r3
 12138 13ca 4FF47A53 		mov	r3, #16000
 12139 13ce 03FA01F1 		lsl	r1, r3, r1
 12140 13d2 4148     		ldr	r0, .L502+4
 12141 13d4 1346     		mov	r3, r2
 12142 13d6 DB00     		lsls	r3, r3, #3
 12143 13d8 9B1A     		subs	r3, r3, r2
 12144 13da 1B01     		lsls	r3, r3, #4
 12145 13dc 0344     		add	r3, r3, r0
 12146 13de E833     		adds	r3, r3, #232
 12147 13e0 1960     		str	r1, [r3]
 12148              	.L480:
1614:..\src/command_processing.c ****             }      
1615:..\src/command_processing.c ****             
1616:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 12149              		.loc 1 1616 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 274


 12150 13e2 3D4B     		ldr	r3, .L502+4
 12151 13e4 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12152 13e8 042B     		cmp	r3, #4
 12153 13ea 6DD1     		bne	.L489
1617:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 12154              		.loc 1 1617 0
 12155 13ec 3A4B     		ldr	r3, .L502+4
 12156 13ee 0122     		movs	r2, #1
 12157 13f0 83F8A920 		strb	r2, [r3, #169]
1618:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12158              		.loc 1 1618 0
 12159 13f4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 12160 13f6 3849     		ldr	r1, .L502+4
 12161 13f8 1346     		mov	r3, r2
 12162 13fa DB00     		lsls	r3, r3, #3
 12163 13fc 9B1A     		subs	r3, r3, r2
 12164 13fe 1B01     		lsls	r3, r3, #4
 12165 1400 0B44     		add	r3, r3, r1
 12166 1402 03F58873 		add	r3, r3, #272
 12167 1406 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12168 1408 1946     		mov	r1, r3
 12169 140a 334A     		ldr	r2, .L502+4
 12170 140c 0B46     		mov	r3, r1
 12171 140e 5B00     		lsls	r3, r3, #1
 12172 1410 0B44     		add	r3, r3, r1
 12173 1412 1B01     		lsls	r3, r3, #4
 12174 1414 1344     		add	r3, r3, r2
 12175 1416 03F5D873 		add	r3, r3, #432
 12176 141a 0122     		movs	r2, #1
 12177 141c 1A70     		strb	r2, [r3]
1619:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 12178              		.loc 1 1619 0
 12179 141e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 12180 1420 2D49     		ldr	r1, .L502+4
 12181 1422 1346     		mov	r3, r2
 12182 1424 DB00     		lsls	r3, r3, #3
 12183 1426 9B1A     		subs	r3, r3, r2
 12184 1428 1B01     		lsls	r3, r3, #4
 12185 142a 0B44     		add	r3, r3, r1
 12186 142c 03F58873 		add	r3, r3, #272
 12187 1430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12188 1432 1946     		mov	r1, r3
 12189 1434 284A     		ldr	r2, .L502+4
 12190 1436 0B46     		mov	r3, r1
 12191 1438 5B00     		lsls	r3, r3, #1
 12192 143a 0B44     		add	r3, r3, r1
 12193 143c 1B01     		lsls	r3, r3, #4
 12194 143e 1344     		add	r3, r3, r2
 12195 1440 03F5D873 		add	r3, r3, #432
 12196 1444 0122     		movs	r2, #1
 12197 1446 1A70     		strb	r2, [r3]
1620:..\src/command_processing.c ****             /*    
1621:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
1622:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)18000 << g_mem.enc[g_mem.motor[MOTOR_ID
1623:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = ((int32)(-25000)) << g_mem.enc[g_mem.mo
1624:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = 0;
1625:..\src/command_processing.c ****             */    
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 275


1626:..\src/command_processing.c ****                 for (i=0; i< NUM_OF_MOTORS; i++) {                     // Maxon DCX16S
 12198              		.loc 1 1626 0
 12199 1448 0023     		movs	r3, #0
 12200 144a FB75     		strb	r3, [r7, #23]
 12201 144c 2EE0     		b	.L482
 12202              	.L483:
1627:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12203              		.loc 1 1627 0 discriminator 3
 12204 144e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12205 1450 2149     		ldr	r1, .L502+4
 12206 1452 1346     		mov	r3, r2
 12207 1454 DB00     		lsls	r3, r3, #3
 12208 1456 9B1A     		subs	r3, r3, r2
 12209 1458 1B01     		lsls	r3, r3, #4
 12210 145a 0B44     		add	r3, r3, r1
 12211 145c 03F58673 		add	r3, r3, #268
 12212 1460 4FF44872 		mov	r2, #800
 12213 1464 1A80     		strh	r2, [r3]	@ movhi
1628:..\src/command_processing.c ****                     g_mem.motor[i].k_p           = 0.12 * 65536;
 12214              		.loc 1 1628 0 discriminator 3
 12215 1466 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12216 1468 1B49     		ldr	r1, .L502+4
 12217 146a 1346     		mov	r3, r2
 12218 146c DB00     		lsls	r3, r3, #3
 12219 146e 9B1A     		subs	r3, r3, r2
 12220 1470 1B01     		lsls	r3, r3, #4
 12221 1472 0B44     		add	r3, r3, r1
 12222 1474 B033     		adds	r3, r3, #176
 12223 1476 41F6B862 		movw	r2, #7864
 12224 147a 1A60     		str	r2, [r3]
1629:..\src/command_processing.c ****                     g_mem.motor[i].k_i           =    0 * 65536;
 12225              		.loc 1 1629 0 discriminator 3
 12226 147c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12227 147e 1649     		ldr	r1, .L502+4
 12228 1480 1346     		mov	r3, r2
 12229 1482 DB00     		lsls	r3, r3, #3
 12230 1484 9B1A     		subs	r3, r3, r2
 12231 1486 1B01     		lsls	r3, r3, #4
 12232 1488 0B44     		add	r3, r3, r1
 12233 148a B433     		adds	r3, r3, #180
 12234 148c 0022     		movs	r2, #0
 12235 148e 1A60     		str	r2, [r3]
1630:..\src/command_processing.c ****                     g_mem.motor[i].k_d           = 0.05 * 65536;
 12236              		.loc 1 1630 0 discriminator 3
 12237 1490 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 12238 1492 1149     		ldr	r1, .L502+4
 12239 1494 1346     		mov	r3, r2
 12240 1496 DB00     		lsls	r3, r3, #3
 12241 1498 9B1A     		subs	r3, r3, r2
 12242 149a 1B01     		lsls	r3, r3, #4
 12243 149c 0B44     		add	r3, r3, r1
 12244 149e B833     		adds	r3, r3, #184
 12245 14a0 40F6CC42 		movw	r2, #3276
 12246 14a4 1A60     		str	r2, [r3]
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12247              		.loc 1 1626 0 discriminator 3
 12248 14a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 276


 12249 14a8 0133     		adds	r3, r3, #1
 12250 14aa FB75     		strb	r3, [r7, #23]
 12251              	.L482:
1626:..\src/command_processing.c ****                     g_mem.motor[i].current_limit = 800;                // [mA]
 12252              		.loc 1 1626 0 is_stmt 0 discriminator 1
 12253 14ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 12254 14ae 012B     		cmp	r3, #1
 12255 14b0 CDD9     		bls	.L483
1631:..\src/command_processing.c ****                 }
1632:..\src/command_processing.c ****             }      
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             break;
 12256              		.loc 1 1634 0 is_stmt 1
 12257 14b2 09E0     		b	.L489
 12258              	.L484:
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****         default:
1637:..\src/command_processing.c ****             break;
 12259              		.loc 1 1637 0
 12260 14b4 00BF     		nop
 12261 14b6 08E0     		b	.L424
 12262              	.L485:
1424:..\src/command_processing.c ****             
 12263              		.loc 1 1424 0
 12264 14b8 00BF     		nop
 12265 14ba 06E0     		b	.L424
 12266              	.L486:
1452:..\src/command_processing.c **** 
 12267              		.loc 1 1452 0
 12268 14bc 00BF     		nop
 12269 14be 04E0     		b	.L424
 12270              	.L487:
1470:..\src/command_processing.c ****             
 12271              		.loc 1 1470 0
 12272 14c0 00BF     		nop
 12273 14c2 02E0     		b	.L424
 12274              	.L488:
1480:..\src/command_processing.c ****            
 12275              		.loc 1 1480 0
 12276 14c4 00BF     		nop
 12277 14c6 00E0     		b	.L424
 12278              	.L489:
1634:..\src/command_processing.c ****             
 12279              		.loc 1 1634 0
 12280 14c8 00BF     		nop
 12281              	.L424:
1638:..\src/command_processing.c ****     }
1639:..\src/command_processing.c **** }
 12282              		.loc 1 1639 0 discriminator 1
 12283 14ca 00BF     		nop
 12284 14cc 1C37     		adds	r7, r7, #28
 12285              		.cfi_def_cfa_offset 20
 12286 14ce BD46     		mov	sp, r7
 12287              		.cfi_def_cfa_register 13
 12288              		@ sp needed
 12289 14d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 12290              	.L503:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 277


 12291 14d2 00BF     		.align	2
 12292              	.L502:
 12293 14d4 00000000 		.word	g_rx
 12294 14d8 00000000 		.word	g_mem
 12295              		.cfi_endproc
 12296              	.LFE69:
 12297              		.size	set_custom_param, .-set_custom_param
 12298              		.section	.rodata
 12299 10b6 0000     		.align	2
 12300              	.LC145:
 12301 10b8 506F7274 		.ascii	"Port %u ID:\000"
 12301      20257520 
 12301      49443A00 
 12302              		.align	2
 12303              	.LC146:
 12304 10c4 2575202D 		.ascii	"%u - Device ID:\000"
 12304      20446576 
 12304      69636520 
 12304      49443A00 
 12305              		.align	2
 12306              	.LC147:
 12307 10d4 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12307      20494D55 
 12307      20256420 
 12307      636F6E66 
 12307      69677572 
 12308 10ef 00       		.align	2
 12309              	.LC148:
 12310 10f0 2575202D 		.ascii	"%u - SPI read delay:\000"
 12310      20535049 
 12310      20726561 
 12310      64206465 
 12310      6C61793A 
 12311 1105 000000   		.align	2
 12312              	.LC149:
 12313 1108 204E6F6E 		.ascii	" None\000"
 12313      6500
 12314 110e 0000     		.align	2
 12315              	.LC150:
 12316 1110 204C6F77 		.ascii	" Low\000"
 12316      00
 12317 1115 000000   		.align	2
 12318              	.LC151:
 12319 1118 20486967 		.ascii	" High\000"
 12319      6800
 12320 111e 0000     		.align	2
 12321              	.LC143:
 12322 1120 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12322      6572206F 
 12322      6620636F 
 12322      6E6E6563 
 12322      74656420 
 12323 113a 0000     		.align	2
 12324              	.LC144:
 12325 113c 4D616720 		.ascii	"Mag cal parameters:\000"
 12325      63616C20 
 12325      70617261 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 278


 12325      6D657465 
 12325      72733A00 
 12326              		.section	.text.get_IMU_param_list,"ax",%progbits
 12327              		.align	2
 12328              		.global	get_IMU_param_list
 12329              		.thumb
 12330              		.thumb_func
 12331              		.type	get_IMU_param_list, %function
 12332              	get_IMU_param_list:
 12333              	.LFB70:
1640:..\src/command_processing.c **** 
1641:..\src/command_processing.c **** //==============================================================================
1642:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1643:..\src/command_processing.c **** //==============================================================================
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1646:..\src/command_processing.c **** {
 12334              		.loc 1 1646 0
 12335              		.cfi_startproc
 12336              		@ args = 0, pretend = 0, frame = 1704
 12337              		@ frame_needed = 1, uses_anonymous_args = 0
 12338 0000 B0B5     		push	{r4, r5, r7, lr}
 12339              		.cfi_def_cfa_offset 16
 12340              		.cfi_offset 4, -16
 12341              		.cfi_offset 5, -12
 12342              		.cfi_offset 7, -8
 12343              		.cfi_offset 14, -4
 12344 0002 ADF5D56D 		sub	sp, sp, #1704
 12345              		.cfi_def_cfa_offset 1720
 12346 0006 00AF     		add	r7, sp, #0
 12347              		.cfi_def_cfa_register 7
 12348 0008 0246     		mov	r2, r0
 12349 000a BB1D     		adds	r3, r7, #6
 12350 000c 1A80     		strh	r2, [r3]	@ movhi
1647:..\src/command_processing.c ****     //Package to be sent variables
1648:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12351              		.loc 1 1648 0
 12352 000e 07F58A73 		add	r3, r7, #276
 12353 0012 0022     		movs	r2, #0
 12354 0014 1A60     		str	r2, [r3]
 12355 0016 0433     		adds	r3, r3, #4
 12356 0018 40F27552 		movw	r2, #1397
 12357 001c 0021     		movs	r1, #0
 12358 001e 1846     		mov	r0, r3
 12359 0020 FFF7FEFF 		bl	memset
1649:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1650:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1651:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1652:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1653:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1654:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1655:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12360              		.loc 1 1655 0
 12361 0024 0723     		movs	r3, #7
 12362 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1656:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12363              		.loc 1 1656 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 279


 12364 002a 0023     		movs	r3, #0
 12365 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1657:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12366              		.loc 1 1657 0
 12367 0030 0223     		movs	r3, #2
 12368 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12369              		.loc 1 1658 0
 12370 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12371 003a 5A1C     		adds	r2, r3, #1
1659:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12372              		.loc 1 1659 0
 12373 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12374 0040 1344     		add	r3, r3, r2
1660:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12375              		.loc 1 1660 0
 12376 0042 0133     		adds	r3, r3, #1
1658:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12377              		.loc 1 1658 0
 12378 0044 9AB2     		uxth	r2, r3
 12379 0046 D24B     		ldr	r3, .L550
 12380 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12381 004a 9BB2     		uxth	r3, r3
 12382 004c 1344     		add	r3, r3, r2
 12383 004e 9BB2     		uxth	r3, r3
 12384 0050 1A46     		mov	r2, r3	@ movhi
 12385 0052 9200     		lsls	r2, r2, #2
 12386 0054 1344     		add	r3, r3, r2
 12387 0056 1A46     		mov	r2, r3	@ movhi
 12388 0058 9100     		lsls	r1, r2, #2
 12389 005a 1A46     		mov	r2, r3	@ movhi
 12390 005c 0B46     		mov	r3, r1	@ movhi
 12391 005e 1344     		add	r3, r3, r2
 12392 0060 5B00     		lsls	r3, r3, #1
 12393 0062 9BB2     		uxth	r3, r3
 12394 0064 FB33     		adds	r3, r3, #251
 12395 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1661:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1662:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1663:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1664:..\src/command_processing.c **** 
1665:..\src/command_processing.c ****     //Auxiliary variables
1666:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1667:..\src/command_processing.c ****     uint16 start_byte = 0;
 12396              		.loc 1 1667 0
 12397 006a 0023     		movs	r3, #0
 12398 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1668:..\src/command_processing.c **** 
1669:..\src/command_processing.c ****     //Parameters menu string definitions
1670:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12399              		.loc 1 1670 0
 12400 0070 07F1F803 		add	r3, r7, #248
 12401 0074 C74A     		ldr	r2, .L550+4
 12402 0076 1C46     		mov	r4, r3
 12403 0078 1546     		mov	r5, r2
 12404 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12405 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 280


 12406 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12407 0082 03C4     		stmia	r4!, {r0, r1}
 12408 0084 2280     		strh	r2, [r4]	@ movhi
1671:..\src/command_processing.c ****     char ids_str[11]            = "";
 12409              		.loc 1 1671 0
 12410 0086 07F1EC03 		add	r3, r7, #236
 12411 008a 0022     		movs	r2, #0
 12412 008c 1A60     		str	r2, [r3]
 12413 008e 0433     		adds	r3, r3, #4
 12414 0090 0022     		movs	r2, #0
 12415 0092 1A60     		str	r2, [r3]
 12416 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1672:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12417              		.loc 1 1672 0
 12418 0098 07F1D803 		add	r3, r7, #216
 12419 009c BE4A     		ldr	r2, .L550+8
 12420 009e 1C46     		mov	r4, r3
 12421 00a0 1546     		mov	r5, r2
 12422 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12423 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12424 00a6 2B68     		ldr	r3, [r5]
 12425 00a8 2360     		str	r3, [r4]
1673:..\src/command_processing.c ****     char id_str[16]             = "";
 12426              		.loc 1 1673 0
 12427 00aa 07F1C803 		add	r3, r7, #200
 12428 00ae 0022     		movs	r2, #0
 12429 00b0 1A60     		str	r2, [r3]
 12430 00b2 0433     		adds	r3, r3, #4
 12431 00b4 0022     		movs	r2, #0
 12432 00b6 1A60     		str	r2, [r3]
 12433 00b8 5A60     		str	r2, [r3, #4]
 12434 00ba 9A60     		str	r2, [r3, #8]
1674:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12435              		.loc 1 1674 0
 12436 00bc 07F19C03 		add	r3, r7, #156
 12437 00c0 0022     		movs	r2, #0
 12438 00c2 1A60     		str	r2, [r3]
 12439 00c4 0433     		adds	r3, r3, #4
 12440 00c6 2622     		movs	r2, #38
 12441 00c8 0021     		movs	r1, #0
 12442 00ca 1846     		mov	r0, r3
 12443 00cc FFF7FEFF 		bl	memset
1675:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12444              		.loc 1 1675 0
 12445 00d0 07F18003 		add	r3, r7, #128
 12446 00d4 0022     		movs	r2, #0
 12447 00d6 1A60     		str	r2, [r3]
 12448 00d8 0433     		adds	r3, r3, #4
 12449 00da 0022     		movs	r2, #0
 12450 00dc 1A60     		str	r2, [r3]
 12451 00de 5A60     		str	r2, [r3, #4]
 12452 00e0 9A60     		str	r2, [r3, #8]
 12453 00e2 DA60     		str	r2, [r3, #12]
 12454 00e4 1A61     		str	r2, [r3, #16]
 12455 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1676:..\src/command_processing.c ****     
1677:..\src/command_processing.c ****     //Strings lengths
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 281


1678:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12456              		.loc 1 1678 0
 12457 00e8 07F1C803 		add	r3, r7, #200
 12458 00ec 1846     		mov	r0, r3
 12459 00ee FFF7FEFF 		bl	strlen
 12460 00f2 0346     		mov	r3, r0
 12461 00f4 87F89336 		strb	r3, [r7, #1683]
1679:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12462              		.loc 1 1679 0
 12463 00f8 07F1F803 		add	r3, r7, #248
 12464 00fc 1846     		mov	r0, r3
 12465 00fe FFF7FEFF 		bl	strlen
 12466 0102 0346     		mov	r3, r0
 12467 0104 87F89236 		strb	r3, [r7, #1682]
1680:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12468              		.loc 1 1680 0
 12469 0108 07F1EC03 		add	r3, r7, #236
 12470 010c 1846     		mov	r0, r3
 12471 010e FFF7FEFF 		bl	strlen
 12472 0112 0346     		mov	r3, r0
 12473 0114 87F89136 		strb	r3, [r7, #1681]
1681:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12474              		.loc 1 1681 0
 12475 0118 07F1D803 		add	r3, r7, #216
 12476 011c 1846     		mov	r0, r3
 12477 011e FFF7FEFF 		bl	strlen
 12478 0122 0346     		mov	r3, r0
 12479 0124 87F89036 		strb	r3, [r7, #1680]
1682:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12480              		.loc 1 1682 0
 12481 0128 07F19C03 		add	r3, r7, #156
 12482 012c 1846     		mov	r0, r3
 12483 012e FFF7FEFF 		bl	strlen
 12484 0132 0346     		mov	r3, r0
 12485 0134 87F88F36 		strb	r3, [r7, #1679]
1683:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12486              		.loc 1 1683 0
 12487 0138 07F18003 		add	r3, r7, #128
 12488 013c 1846     		mov	r0, r3
 12489 013e FFF7FEFF 		bl	strlen
 12490 0142 0346     		mov	r3, r0
 12491 0144 87F89D36 		strb	r3, [r7, #1693]
1684:..\src/command_processing.c ****     
1685:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12492              		.loc 1 1685 0
 12493 0148 07F10803 		add	r3, r7, #8
 12494 014c 0022     		movs	r2, #0
 12495 014e 1A60     		str	r2, [r3]
 12496 0150 0433     		adds	r3, r3, #4
 12497 0152 7222     		movs	r2, #114
 12498 0154 0021     		movs	r1, #0
 12499 0156 1846     		mov	r0, r3
 12500 0158 FFF7FEFF 		bl	memset
1686:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1687:..\src/command_processing.c ****  
1688:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12501              		.loc 1 1688 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 282


 12502 015c 07F10800 		add	r0, r7, #8
 12503 0160 6423     		movs	r3, #100
 12504 0162 0A22     		movs	r2, #10
 12505 0164 8D49     		ldr	r1, .L550+12
 12506 0166 FFF7FEFF 		bl	sprintf
1689:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12507              		.loc 1 1689 0
 12508 016a 07F10803 		add	r3, r7, #8
 12509 016e 1846     		mov	r0, r3
 12510 0170 FFF7FEFF 		bl	strlen
 12511 0174 0346     		mov	r3, r0
 12512 0176 87F88E36 		strb	r3, [r7, #1678]
1690:..\src/command_processing.c **** 
1691:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1692:..\src/command_processing.c ****     // update packet_length
1693:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12513              		.loc 1 1693 0
 12514 017a 854B     		ldr	r3, .L550
 12515 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12516 017e 5B08     		lsrs	r3, r3, #1
 12517 0180 DBB2     		uxtb	r3, r3
 12518 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1694:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12519              		.loc 1 1694 0
 12520 0186 824B     		ldr	r3, .L550
 12521 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12522 018a 1A46     		mov	r2, r3
 12523 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12524 0190 5B00     		lsls	r3, r3, #1
 12525 0192 D31A     		subs	r3, r2, r3
 12526 0194 002B     		cmp	r3, #0
 12527 0196 04DD     		ble	.L505
 12528              		.loc 1 1694 0 is_stmt 0 discriminator 1
 12529 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12530 019c 0133     		adds	r3, r3, #1
 12531 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12532              	.L505:
1695:..\src/command_processing.c ****     
1696:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12533              		.loc 1 1696 0 is_stmt 1
 12534 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12535 01a6 5A1C     		adds	r2, r3, #1
1697:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12536              		.loc 1 1697 0
 12537 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12538 01ac 1344     		add	r3, r3, r2
1698:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12539              		.loc 1 1698 0
 12540 01ae 0133     		adds	r3, r3, #1
1696:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12541              		.loc 1 1696 0
 12542 01b0 9AB2     		uxth	r2, r3
 12543 01b2 774B     		ldr	r3, .L550
 12544 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12545 01b6 9BB2     		uxth	r3, r3
 12546 01b8 1344     		add	r3, r3, r2
 12547 01ba 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 283


 12548 01bc 1A46     		mov	r2, r3	@ movhi
 12549 01be 9200     		lsls	r2, r2, #2
 12550 01c0 1344     		add	r3, r3, r2
 12551 01c2 1A46     		mov	r2, r3	@ movhi
 12552 01c4 9100     		lsls	r1, r2, #2
 12553 01c6 1A46     		mov	r2, r3	@ movhi
 12554 01c8 0B46     		mov	r3, r1	@ movhi
 12555 01ca 1344     		add	r3, r3, r2
 12556 01cc 5B00     		lsls	r3, r3, #1
 12557 01ce 9BB2     		uxth	r3, r3
 12558 01d0 C933     		adds	r3, r3, #201
 12559 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1699:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1700:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1701:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1702:..\src/command_processing.c **** 
1703:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12560              		.loc 1 1703 0
 12561 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12562 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12563 01de 1344     		add	r3, r3, r2
 12564 01e0 9BB2     		uxth	r3, r3
 12565 01e2 0333     		adds	r3, r3, #3
 12566 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1704:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12567              		.loc 1 1704 0
 12568 01e8 07F58A73 		add	r3, r7, #276
 12569 01ec A222     		movs	r2, #162
 12570 01ee 1A70     		strb	r2, [r3]
1705:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12571              		.loc 1 1705 0
 12572 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12573 01f4 DAB2     		uxtb	r2, r3
 12574 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12575 01fa DBB2     		uxtb	r3, r3
 12576 01fc 1344     		add	r3, r3, r2
 12577 01fe DAB2     		uxtb	r2, r3
 12578 0200 634B     		ldr	r3, .L550
 12579 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12580 0204 1344     		add	r3, r3, r2
 12581 0206 DBB2     		uxtb	r3, r3
 12582 0208 0333     		adds	r3, r3, #3
 12583 020a DAB2     		uxtb	r2, r3
 12584 020c 07F58A73 		add	r3, r7, #276
 12585 0210 5A70     		strb	r2, [r3, #1]
1706:..\src/command_processing.c **** 
1707:..\src/command_processing.c ****     switch(index) {
 12586              		.loc 1 1707 0
 12587 0212 BB1D     		adds	r3, r7, #6
 12588 0214 1B88     		ldrh	r3, [r3]
 12589 0216 002B     		cmp	r3, #0
 12590 0218 40F0D084 		bne	.L548
1708:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1709:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1710:..\src/command_processing.c ****             start_byte = 0;
 12591              		.loc 1 1710 0
 12592 021c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 284


 12593 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1711:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12594              		.loc 1 1711 0
 12595 0222 07F58A73 		add	r3, r7, #276
 12596 0226 0222     		movs	r2, #2
 12597 0228 9A70     		strb	r2, [r3, #2]
1712:..\src/command_processing.c ****             packet_data[3] = 1;
 12598              		.loc 1 1712 0
 12599 022a 07F58A73 		add	r3, r7, #276
 12600 022e 0122     		movs	r2, #1
 12601 0230 DA70     		strb	r2, [r3, #3]
1713:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12602              		.loc 1 1713 0
 12603 0232 574B     		ldr	r3, .L550
 12604 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12605 0236 07F58A73 		add	r3, r7, #276
 12606 023a 1A71     		strb	r2, [r3, #4]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12607              		.loc 1 1714 0
 12608 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12609 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12610 0244 15E0     		b	.L508
 12611              	.L509:
1715:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12612              		.loc 1 1715 0 discriminator 3
 12613 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12614 024a 5A1D     		adds	r2, r3, #5
 12615 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12616 0250 D31A     		subs	r3, r2, r3
 12617 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12618 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12619 025a 8A1A     		subs	r2, r1, r2
 12620 025c 07F1F801 		add	r1, r7, #248
 12621 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12622 0262 07F58A72 		add	r2, r7, #276
 12623 0266 D154     		strb	r1, [r2, r3]
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12624              		.loc 1 1714 0 discriminator 3
 12625 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12626 026c 013B     		subs	r3, r3, #1
 12627 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12628              	.L508:
1714:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12629              		.loc 1 1714 0 is_stmt 0 discriminator 1
 12630 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12631 0276 002B     		cmp	r3, #0
 12632 0278 E5D1     		bne	.L509
1716:..\src/command_processing.c ****                 
1717:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1718:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12633              		.loc 1 1718 0 is_stmt 1
 12634 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12635 027e 3233     		adds	r3, r3, #50
 12636 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1719:..\src/command_processing.c ****             i = 0;
 12637              		.loc 1 1719 0
 12638 0284 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 285


 12639 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1720:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12640              		.loc 1 1720 0
 12641 028a 0023     		movs	r3, #0
 12642 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12643 0290 B2E0     		b	.L510
 12644              	.L517:
1721:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12645              		.loc 1 1721 0
 12646 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12647 0296 07F1EC03 		add	r3, r7, #236
 12648 029a 4149     		ldr	r1, .L550+16
 12649 029c 1846     		mov	r0, r3
 12650 029e FFF7FEFF 		bl	sprintf
1722:..\src/command_processing.c ****                 h = 4;
 12651              		.loc 1 1722 0
 12652 02a2 0423     		movs	r3, #4
 12653 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1723:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12654              		.loc 1 1723 0
 12655 02a8 07F1EC03 		add	r3, r7, #236
 12656 02ac 1846     		mov	r0, r3
 12657 02ae FFF7FEFF 		bl	strlen
 12658 02b2 0346     		mov	r3, r0
 12659 02b4 87F89136 		strb	r3, [r7, #1681]
1724:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12660              		.loc 1 1724 0
 12661 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12662 02bc 9A1C     		adds	r2, r3, #2
 12663 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12664 02c2 3221     		movs	r1, #50
 12665 02c4 01FB03F3 		mul	r3, r1, r3
 12666 02c8 1344     		add	r3, r3, r2
 12667 02ca 07F58A72 		add	r2, r7, #276
 12668 02ce 0221     		movs	r1, #2
 12669 02d0 D154     		strb	r1, [r2, r3]
1725:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12670              		.loc 1 1725 0
 12671 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12672 02d6 DA1C     		adds	r2, r3, #3
 12673 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12674 02dc 3221     		movs	r1, #50
 12675 02de 01FB03F3 		mul	r3, r1, r3
 12676 02e2 1344     		add	r3, r3, r2
 12677 02e4 07F58A72 		add	r2, r7, #276
 12678 02e8 0321     		movs	r1, #3
 12679 02ea D154     		strb	r1, [r2, r3]
1726:..\src/command_processing.c ****                 
1727:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12680              		.loc 1 1727 0
 12681 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12682 02f0 1A46     		mov	r2, r3	@ movhi
 12683 02f2 5200     		lsls	r2, r2, #1
 12684 02f4 1344     		add	r3, r3, r2
 12685 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12686 02fa 39E0     		b	.L511
 12687              	.L514:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 286


1728:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12688              		.loc 1 1728 0
 12689 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12690 0300 284A     		ldr	r2, .L550+20
 12691 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12692 0304 9BB2     		uxth	r3, r3
 12693 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12694 030a 9A42     		cmp	r2, r3
 12695 030c 17D1     		bne	.L512
1729:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12696              		.loc 1 1729 0
 12697 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12698 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12699 0316 1A44     		add	r2, r2, r3
 12700 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12701 031c 3221     		movs	r1, #50
 12702 031e 01FB03F3 		mul	r3, r1, r3
 12703 0322 1344     		add	r3, r3, r2
 12704 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12705 0328 1E49     		ldr	r1, .L550+20
 12706 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12707 032c 07F58A72 		add	r2, r7, #276
 12708 0330 D154     		strb	r1, [r2, r3]
1730:..\src/command_processing.c ****                         i++;
 12709              		.loc 1 1730 0
 12710 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12711 0336 0133     		adds	r3, r3, #1
 12712 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12713 033c 0EE0     		b	.L513
 12714              	.L512:
1731:..\src/command_processing.c ****                     } 
1732:..\src/command_processing.c ****                     else {
1733:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12715              		.loc 1 1733 0
 12716 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12717 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12718 0346 1A44     		add	r2, r2, r3
 12719 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12720 034c 3221     		movs	r1, #50
 12721 034e 01FB03F3 		mul	r3, r1, r3
 12722 0352 1344     		add	r3, r3, r2
 12723 0354 07F58A72 		add	r2, r7, #276
 12724 0358 FF21     		movs	r1, #255
 12725 035a D154     		strb	r1, [r2, r3]
 12726              	.L513:
1734:..\src/command_processing.c ****                     }
1735:..\src/command_processing.c ****                     h++;
 12727              		.loc 1 1735 0 discriminator 2
 12728 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12729 0360 0133     		adds	r3, r3, #1
 12730 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12731              		.loc 1 1727 0 discriminator 2
 12732 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12733 036a 0133     		adds	r3, r3, #1
 12734 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12735              	.L511:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 287


1727:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12736              		.loc 1 1727 0 is_stmt 0 discriminator 1
 12737 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12738 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12739 0378 1346     		mov	r3, r2
 12740 037a 5B00     		lsls	r3, r3, #1
 12741 037c 1344     		add	r3, r3, r2
 12742 037e 0233     		adds	r3, r3, #2
 12743 0380 9942     		cmp	r1, r3
 12744 0382 BBDD     		ble	.L514
1736:..\src/command_processing.c ****                 }
1737:..\src/command_processing.c **** 
1738:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1739:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12745              		.loc 1 1739 0 is_stmt 1
 12746 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12747 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12748 038c 2BE0     		b	.L515
 12749              	.L551:
 12750 038e 00BF     		.align	2
 12751              	.L550:
 12752 0390 00000000 		.word	N_IMU_Connected
 12753 0394 20110000 		.word	.LC143
 12754 0398 3C110000 		.word	.LC144
 12755 039c 88020000 		.word	.LC130
 12756 03a0 B8100000 		.word	.LC145
 12757 03a4 00000000 		.word	IMU_connected
 12758              	.L516:
1740:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12759              		.loc 1 1740 0 discriminator 3
 12760 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12761 03ac DA1D     		adds	r2, r3, #7
 12762 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12763 03b2 3221     		movs	r1, #50
 12764 03b4 01FB03F3 		mul	r3, r1, r3
 12765 03b8 1A44     		add	r2, r2, r3
 12766 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12767 03be 1A44     		add	r2, r2, r3
 12768 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12769 03c4 D31A     		subs	r3, r2, r3
 12770 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12771 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12772 03ce 8A1A     		subs	r2, r1, r2
 12773 03d0 07F1EC01 		add	r1, r7, #236
 12774 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12775 03d6 07F58A72 		add	r2, r7, #276
 12776 03da D154     		strb	r1, [r2, r3]
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12777              		.loc 1 1739 0 discriminator 3
 12778 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12779 03e0 013B     		subs	r3, r3, #1
 12780 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12781              	.L515:
1739:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12782              		.loc 1 1739 0 is_stmt 0 discriminator 1
 12783 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12784 03ea 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 288


 12785 03ec DCD1     		bne	.L516
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12786              		.loc 1 1720 0 is_stmt 1 discriminator 2
 12787 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12788 03f2 0133     		adds	r3, r3, #1
 12789 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12790              	.L510:
1720:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12791              		.loc 1 1720 0 is_stmt 0 discriminator 1
 12792 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12793 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12794 0400 9A42     		cmp	r2, r3
 12795 0402 FFF446AF 		bcc	.L517
1741:..\src/command_processing.c ****             }
1742:..\src/command_processing.c ****             
1743:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1744:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12796              		.loc 1 1744 0 is_stmt 1
 12797 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12798 040a 1A46     		mov	r2, r3	@ movhi
 12799 040c 9200     		lsls	r2, r2, #2
 12800 040e 1344     		add	r3, r3, r2
 12801 0410 1A46     		mov	r2, r3	@ movhi
 12802 0412 9100     		lsls	r1, r2, #2
 12803 0414 1A46     		mov	r2, r3	@ movhi
 12804 0416 0B46     		mov	r3, r1	@ movhi
 12805 0418 1344     		add	r3, r3, r2
 12806 041a 5B00     		lsls	r3, r3, #1
 12807 041c 9AB2     		uxth	r2, r3
 12808 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12809 0422 1344     		add	r3, r3, r2
 12810 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1745:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12811              		.loc 1 1745 0
 12812 0428 0023     		movs	r3, #0
 12813 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12814 042e 1FE1     		b	.L518
 12815              	.L525:
1746:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12816              		.loc 1 1746 0
 12817 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12818 0434 9A1C     		adds	r2, r3, #2
 12819 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12820 043a 3221     		movs	r1, #50
 12821 043c 01FB03F3 		mul	r3, r1, r3
 12822 0440 1344     		add	r3, r3, r2
 12823 0442 07F58A72 		add	r2, r7, #276
 12824 0446 0221     		movs	r1, #2
 12825 0448 D154     		strb	r1, [r2, r3]
1747:..\src/command_processing.c ****                 
1748:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12826              		.loc 1 1748 0
 12827 044a B7F89436 		ldrh	r3, [r7, #1684]
 12828 044e DA1C     		adds	r2, r3, #3
 12829 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12830 0454 3221     		movs	r1, #50
 12831 0456 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 289


 12832 045a 1344     		add	r3, r3, r2
 12833 045c 07F58A72 		add	r2, r7, #276
 12834 0460 0321     		movs	r1, #3
 12835 0462 D154     		strb	r1, [r2, r3]
1749:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12836              		.loc 1 1749 0
 12837 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12838 0468 1A1D     		adds	r2, r3, #4
 12839 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12840 046e 3221     		movs	r1, #50
 12841 0470 01FB03F3 		mul	r3, r1, r3
 12842 0474 1A44     		add	r2, r2, r3
 12843 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12844 047a 5B00     		lsls	r3, r3, #1
 12845 047c B249     		ldr	r1, .L552
 12846 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12847 0480 1846     		mov	r0, r3
 12848 0482 B249     		ldr	r1, .L552+4
 12849 0484 0346     		mov	r3, r0
 12850 0486 5B00     		lsls	r3, r3, #1
 12851 0488 0344     		add	r3, r3, r0
 12852 048a 0B44     		add	r3, r3, r1
 12853 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12854 048e 07F58A73 		add	r3, r7, #276
 12855 0492 9954     		strb	r1, [r3, r2]
1750:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12856              		.loc 1 1750 0
 12857 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12858 0498 5A1D     		adds	r2, r3, #5
 12859 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12860 049e 3221     		movs	r1, #50
 12861 04a0 01FB03F3 		mul	r3, r1, r3
 12862 04a4 1A44     		add	r2, r2, r3
 12863 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12864 04aa 5B00     		lsls	r3, r3, #1
 12865 04ac A649     		ldr	r1, .L552
 12866 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12867 04b0 1846     		mov	r0, r3
 12868 04b2 A649     		ldr	r1, .L552+4
 12869 04b4 0346     		mov	r3, r0
 12870 04b6 5B00     		lsls	r3, r3, #1
 12871 04b8 0344     		add	r3, r3, r0
 12872 04ba 0B44     		add	r3, r3, r1
 12873 04bc 0133     		adds	r3, r3, #1
 12874 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12875 04c0 07F58A73 		add	r3, r7, #276
 12876 04c4 9954     		strb	r1, [r3, r2]
1751:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12877              		.loc 1 1751 0
 12878 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12879 04ca 9A1D     		adds	r2, r3, #6
 12880 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12881 04d0 3221     		movs	r1, #50
 12882 04d2 01FB03F3 		mul	r3, r1, r3
 12883 04d6 1A44     		add	r2, r2, r3
 12884 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12885 04dc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 290


 12886 04de 9A49     		ldr	r1, .L552
 12887 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12888 04e2 1846     		mov	r0, r3
 12889 04e4 9949     		ldr	r1, .L552+4
 12890 04e6 0346     		mov	r3, r0
 12891 04e8 5B00     		lsls	r3, r3, #1
 12892 04ea 0344     		add	r3, r3, r0
 12893 04ec 0B44     		add	r3, r3, r1
 12894 04ee 0233     		adds	r3, r3, #2
 12895 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12896 04f2 07F58A73 		add	r3, r7, #276
 12897 04f6 9954     		strb	r1, [r3, r2]
1752:..\src/command_processing.c ****                 
1753:..\src/command_processing.c ****                 // check if there is a second value
1754:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12898              		.loc 1 1754 0
 12899 04f8 954B     		ldr	r3, .L552+8
 12900 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12901 04fc 1A46     		mov	r2, r3
 12902 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12903 0502 0133     		adds	r3, r3, #1
 12904 0504 5B00     		lsls	r3, r3, #1
 12905 0506 9A42     		cmp	r2, r3
 12906 0508 28DA     		bge	.L519
1755:..\src/command_processing.c ****                     // there is only one value
1756:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12907              		.loc 1 1756 0
 12908 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12909 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12910 0512 1EE0     		b	.L520
 12911              	.L521:
1757:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12912              		.loc 1 1757 0 discriminator 3
 12913 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12914 0518 DA1D     		adds	r2, r3, #7
 12915 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12916 051e 3221     		movs	r1, #50
 12917 0520 01FB03F3 		mul	r3, r1, r3
 12918 0524 1A44     		add	r2, r2, r3
 12919 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12920 052a 1A44     		add	r2, r2, r3
 12921 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12922 0530 D31A     		subs	r3, r2, r3
 12923 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12924 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12925 053a 8A1A     		subs	r2, r1, r2
 12926 053c 07F1D801 		add	r1, r7, #216
 12927 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12928 0542 07F58A72 		add	r2, r7, #276
 12929 0546 D154     		strb	r1, [r2, r3]
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12930              		.loc 1 1756 0 discriminator 3
 12931 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12932 054c 013B     		subs	r3, r3, #1
 12933 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12934              	.L520:
1756:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 291


 12935              		.loc 1 1756 0 is_stmt 0 discriminator 1
 12936 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12937 0556 002B     		cmp	r3, #0
 12938 0558 DCD1     		bne	.L521
 12939 055a 84E0     		b	.L522
 12940              	.L519:
1758:..\src/command_processing.c ****                 }
1759:..\src/command_processing.c ****                 else {
1760:..\src/command_processing.c ****                     // fill the second value
1761:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12941              		.loc 1 1761 0 is_stmt 1
 12942 055c B7F89436 		ldrh	r3, [r7, #1684]
 12943 0560 DA1C     		adds	r2, r3, #3
 12944 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12945 0566 3221     		movs	r1, #50
 12946 0568 01FB03F3 		mul	r3, r1, r3
 12947 056c 1344     		add	r3, r3, r2
 12948 056e 07F58A72 		add	r2, r7, #276
 12949 0572 0621     		movs	r1, #6
 12950 0574 D154     		strb	r1, [r2, r3]
1762:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12951              		.loc 1 1762 0
 12952 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12953 057a DA1D     		adds	r2, r3, #7
 12954 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12955 0580 3221     		movs	r1, #50
 12956 0582 01FB03F3 		mul	r3, r1, r3
 12957 0586 1A44     		add	r2, r2, r3
 12958 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12959 058c 5B00     		lsls	r3, r3, #1
 12960 058e 0133     		adds	r3, r3, #1
 12961 0590 6D49     		ldr	r1, .L552
 12962 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12963 0594 1846     		mov	r0, r3
 12964 0596 6D49     		ldr	r1, .L552+4
 12965 0598 0346     		mov	r3, r0
 12966 059a 5B00     		lsls	r3, r3, #1
 12967 059c 0344     		add	r3, r3, r0
 12968 059e 0B44     		add	r3, r3, r1
 12969 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12970 05a2 07F58A73 		add	r3, r7, #276
 12971 05a6 9954     		strb	r1, [r3, r2]
1763:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12972              		.loc 1 1763 0
 12973 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12974 05ac 03F10802 		add	r2, r3, #8
 12975 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12976 05b4 3221     		movs	r1, #50
 12977 05b6 01FB03F3 		mul	r3, r1, r3
 12978 05ba 1A44     		add	r2, r2, r3
 12979 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12980 05c0 5B00     		lsls	r3, r3, #1
 12981 05c2 0133     		adds	r3, r3, #1
 12982 05c4 6049     		ldr	r1, .L552
 12983 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12984 05c8 1846     		mov	r0, r3
 12985 05ca 6049     		ldr	r1, .L552+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 292


 12986 05cc 0346     		mov	r3, r0
 12987 05ce 5B00     		lsls	r3, r3, #1
 12988 05d0 0344     		add	r3, r3, r0
 12989 05d2 0B44     		add	r3, r3, r1
 12990 05d4 0133     		adds	r3, r3, #1
 12991 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12992 05d8 07F58A73 		add	r3, r7, #276
 12993 05dc 9954     		strb	r1, [r3, r2]
1764:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12994              		.loc 1 1764 0
 12995 05de B7F89436 		ldrh	r3, [r7, #1684]
 12996 05e2 03F10902 		add	r2, r3, #9
 12997 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12998 05ea 3221     		movs	r1, #50
 12999 05ec 01FB03F3 		mul	r3, r1, r3
 13000 05f0 1A44     		add	r2, r2, r3
 13001 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 13002 05f6 5B00     		lsls	r3, r3, #1
 13003 05f8 0133     		adds	r3, r3, #1
 13004 05fa 5349     		ldr	r1, .L552
 13005 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13006 05fe 1846     		mov	r0, r3
 13007 0600 5249     		ldr	r1, .L552+4
 13008 0602 0346     		mov	r3, r0
 13009 0604 5B00     		lsls	r3, r3, #1
 13010 0606 0344     		add	r3, r3, r0
 13011 0608 0B44     		add	r3, r3, r1
 13012 060a 0233     		adds	r3, r3, #2
 13013 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13014 060e 07F58A73 		add	r3, r7, #276
 13015 0612 9954     		strb	r1, [r3, r2]
1765:..\src/command_processing.c ****                 
1766:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 13016              		.loc 1 1766 0
 13017 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 13018 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13019 061c 1FE0     		b	.L523
 13020              	.L524:
1767:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13021              		.loc 1 1767 0 discriminator 3
 13022 061e B7F89436 		ldrh	r3, [r7, #1684]
 13023 0622 03F10A02 		add	r2, r3, #10
 13024 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 13025 062a 3221     		movs	r1, #50
 13026 062c 01FB03F3 		mul	r3, r1, r3
 13027 0630 1A44     		add	r2, r2, r3
 13028 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 13029 0636 1A44     		add	r2, r2, r3
 13030 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 13031 063c D31A     		subs	r3, r2, r3
 13032 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 13033 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 13034 0646 8A1A     		subs	r2, r1, r2
 13035 0648 07F1D801 		add	r1, r7, #216
 13036 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13037 064e 07F58A72 		add	r2, r7, #276
 13038 0652 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 293


1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13039              		.loc 1 1766 0 discriminator 3
 13040 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 13041 0658 013B     		subs	r3, r3, #1
 13042 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13043              	.L523:
1766:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 13044              		.loc 1 1766 0 is_stmt 0 discriminator 1
 13045 065e B7F8A236 		ldrh	r3, [r7, #1698]
 13046 0662 002B     		cmp	r3, #0
 13047 0664 DBD1     		bne	.L524
 13048              	.L522:
1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 13049              		.loc 1 1745 0 is_stmt 1 discriminator 2
 13050 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 13051 066a 0133     		adds	r3, r3, #1
 13052 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 13053              	.L518:
1745:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 13054              		.loc 1 1745 0 is_stmt 0 discriminator 1
 13055 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 13056 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 13057 0678 9A42     		cmp	r2, r3
 13058 067a FFF4D9AE 		bcc	.L525
1768:..\src/command_processing.c ****                 }
1769:..\src/command_processing.c ****             }
1770:..\src/command_processing.c ****             
1771:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1772:..\src/command_processing.c ****             
1773:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 13059              		.loc 1 1773 0 is_stmt 1
 13060 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 13061 0682 1A46     		mov	r2, r3	@ movhi
 13062 0684 9200     		lsls	r2, r2, #2
 13063 0686 1344     		add	r3, r3, r2
 13064 0688 1A46     		mov	r2, r3	@ movhi
 13065 068a 9100     		lsls	r1, r2, #2
 13066 068c 1A46     		mov	r2, r3	@ movhi
 13067 068e 0B46     		mov	r3, r1	@ movhi
 13068 0690 1344     		add	r3, r3, r2
 13069 0692 5B00     		lsls	r3, r3, #1
 13070 0694 9AB2     		uxth	r2, r3
 13071 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13072 069a 1344     		add	r3, r3, r2
 13073 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1774:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 13074              		.loc 1 1774 0
 13075 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 13076 06a4 5A1E     		subs	r2, r3, #1
 13077 06a6 07F1C803 		add	r3, r7, #200
 13078 06aa 2A49     		ldr	r1, .L552+12
 13079 06ac 1846     		mov	r0, r3
 13080 06ae FFF7FEFF 		bl	sprintf
1775:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 13081              		.loc 1 1775 0
 13082 06b2 07F1C803 		add	r3, r7, #200
 13083 06b6 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 294


 13084 06b8 FFF7FEFF 		bl	strlen
 13085 06bc 0346     		mov	r3, r0
 13086 06be 87F89336 		strb	r3, [r7, #1683]
1776:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 13087              		.loc 1 1776 0
 13088 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 13089 06c6 0233     		adds	r3, r3, #2
 13090 06c8 07F58A72 		add	r2, r7, #276
 13091 06cc 0221     		movs	r1, #2
 13092 06ce D154     		strb	r1, [r2, r3]
1777:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13093              		.loc 1 1777 0
 13094 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 13095 06d4 0333     		adds	r3, r3, #3
 13096 06d6 07F58A72 		add	r2, r7, #276
 13097 06da 0121     		movs	r1, #1
 13098 06dc D154     		strb	r1, [r2, r3]
1778:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 13099              		.loc 1 1778 0
 13100 06de B7F89436 		ldrh	r3, [r7, #1684]
 13101 06e2 0433     		adds	r3, r3, #4
 13102 06e4 1C4A     		ldr	r2, .L552+16
 13103 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 13104 06ea 07F58A72 		add	r2, r7, #276
 13105 06ee D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13106              		.loc 1 1779 0
 13107 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13108 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13109 06f8 18E0     		b	.L526
 13110              	.L527:
1780:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 13111              		.loc 1 1780 0 discriminator 3
 13112 06fa B7F89436 		ldrh	r3, [r7, #1684]
 13113 06fe 5A1D     		adds	r2, r3, #5
 13114 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 13115 0704 1A44     		add	r2, r2, r3
 13116 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 13117 070a D31A     		subs	r3, r2, r3
 13118 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 13119 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 13120 0714 8A1A     		subs	r2, r1, r2
 13121 0716 07F1C801 		add	r1, r7, #200
 13122 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13123 071c 07F58A72 		add	r2, r7, #276
 13124 0720 D154     		strb	r1, [r2, r3]
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13125              		.loc 1 1779 0 discriminator 3
 13126 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 13127 0726 013B     		subs	r3, r3, #1
 13128 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13129              	.L526:
1779:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 13130              		.loc 1 1779 0 is_stmt 0 discriminator 1
 13131 072c B7F8A436 		ldrh	r3, [r7, #1700]
 13132 0730 002B     		cmp	r3, #0
 13133 0732 E2D1     		bne	.L527
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 295


1781:..\src/command_processing.c ****                 
1782:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1783:..\src/command_processing.c ****             
1784:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13134              		.loc 1 1784 0 is_stmt 1
 13135 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13136 0738 3233     		adds	r3, r3, #50
 13137 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1785:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 13138              		.loc 1 1785 0
 13139 073e 0023     		movs	r3, #0
 13140 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13141 0744 38E1     		b	.L528
 13142              	.L553:
 13143 0746 00BF     		.align	2
 13144              	.L552:
 13145 0748 00000000 		.word	IMU_connected
 13146 074c 00000000 		.word	MagCal
 13147 0750 00000000 		.word	N_IMU_Connected
 13148 0754 C4100000 		.word	.LC146
 13149 0758 00000000 		.word	c_mem
 13150              	.L531:
1786:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13151              		.loc 1 1786 0
 13152 075c B7F89826 		ldrh	r2, [r7, #1688]
 13153 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 13154 0764 D118     		adds	r1, r2, r3
 13155 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 13156 076a D54A     		ldr	r2, .L554
 13157 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13158 076e 07F19C00 		add	r0, r7, #156
 13159 0772 0A46     		mov	r2, r1
 13160 0774 D349     		ldr	r1, .L554+4
 13161 0776 FFF7FEFF 		bl	sprintf
1787:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 13162              		.loc 1 1787 0
 13163 077a 07F19C03 		add	r3, r7, #156
 13164 077e 1846     		mov	r0, r3
 13165 0780 FFF7FEFF 		bl	strlen
 13166 0784 0346     		mov	r3, r0
 13167 0786 87F88F36 		strb	r3, [r7, #1679]
1788:..\src/command_processing.c ****             
1789:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 13168              		.loc 1 1789 0
 13169 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13170 078e 1A46     		mov	r2, r3	@ movhi
 13171 0790 9200     		lsls	r2, r2, #2
 13172 0792 1344     		add	r3, r3, r2
 13173 0794 1A46     		mov	r2, r3	@ movhi
 13174 0796 9100     		lsls	r1, r2, #2
 13175 0798 1A46     		mov	r2, r3	@ movhi
 13176 079a 0B46     		mov	r3, r1	@ movhi
 13177 079c 1344     		add	r3, r3, r2
 13178 079e 5B00     		lsls	r3, r3, #1
 13179 07a0 9AB2     		uxth	r2, r3
 13180 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13181 07a6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 296


 13182 07a8 9BB2     		uxth	r3, r3
 13183 07aa 0233     		adds	r3, r3, #2
 13184 07ac 9BB2     		uxth	r3, r3
 13185 07ae 1A46     		mov	r2, r3
 13186 07b0 07F58A73 		add	r3, r7, #276
 13187 07b4 0221     		movs	r1, #2
 13188 07b6 9954     		strb	r1, [r3, r2]
1790:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 13189              		.loc 1 1790 0
 13190 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13191 07bc 1A46     		mov	r2, r3	@ movhi
 13192 07be 9200     		lsls	r2, r2, #2
 13193 07c0 1344     		add	r3, r3, r2
 13194 07c2 1A46     		mov	r2, r3	@ movhi
 13195 07c4 9100     		lsls	r1, r2, #2
 13196 07c6 1A46     		mov	r2, r3	@ movhi
 13197 07c8 0B46     		mov	r3, r1	@ movhi
 13198 07ca 1344     		add	r3, r3, r2
 13199 07cc 5B00     		lsls	r3, r3, #1
 13200 07ce 9AB2     		uxth	r2, r3
 13201 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13202 07d4 1344     		add	r3, r3, r2
 13203 07d6 9BB2     		uxth	r3, r3
 13204 07d8 0333     		adds	r3, r3, #3
 13205 07da 9BB2     		uxth	r3, r3
 13206 07dc 1A46     		mov	r2, r3
 13207 07de 07F58A73 		add	r3, r7, #276
 13208 07e2 0521     		movs	r1, #5
 13209 07e4 9954     		strb	r1, [r3, r2]
1791:..\src/command_processing.c ****                 
1792:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13210              		.loc 1 1792 0
 13211 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13212 07ea 1A46     		mov	r2, r3	@ movhi
 13213 07ec 9200     		lsls	r2, r2, #2
 13214 07ee 1344     		add	r3, r3, r2
 13215 07f0 1A46     		mov	r2, r3	@ movhi
 13216 07f2 9100     		lsls	r1, r2, #2
 13217 07f4 1A46     		mov	r2, r3	@ movhi
 13218 07f6 0B46     		mov	r3, r1	@ movhi
 13219 07f8 1344     		add	r3, r3, r2
 13220 07fa 5B00     		lsls	r3, r3, #1
 13221 07fc 9AB2     		uxth	r2, r3
 13222 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13223 0802 1344     		add	r3, r3, r2
 13224 0804 9BB2     		uxth	r3, r3
 13225 0806 0433     		adds	r3, r3, #4
 13226 0808 9BB2     		uxth	r3, r3
 13227 080a 1846     		mov	r0, r3
 13228 080c B7F8A436 		ldrh	r3, [r7, #1700]
 13229 0810 AB4A     		ldr	r2, .L554
 13230 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13231 0814 1946     		mov	r1, r3
 13232 0816 AC4A     		ldr	r2, .L554+8
 13233 0818 0B46     		mov	r3, r1
 13234 081a 9B00     		lsls	r3, r3, #2
 13235 081c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 297


 13236 081e 1344     		add	r3, r3, r2
 13237 0820 03F20223 		addw	r3, r3, #514
 13238 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13239 0826 07F58A73 		add	r3, r7, #276
 13240 082a 1A54     		strb	r2, [r3, r0]
1793:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13241              		.loc 1 1793 0
 13242 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13243 0830 1A46     		mov	r2, r3	@ movhi
 13244 0832 9200     		lsls	r2, r2, #2
 13245 0834 1344     		add	r3, r3, r2
 13246 0836 1A46     		mov	r2, r3	@ movhi
 13247 0838 9100     		lsls	r1, r2, #2
 13248 083a 1A46     		mov	r2, r3	@ movhi
 13249 083c 0B46     		mov	r3, r1	@ movhi
 13250 083e 1344     		add	r3, r3, r2
 13251 0840 5B00     		lsls	r3, r3, #1
 13252 0842 9AB2     		uxth	r2, r3
 13253 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13254 0848 1344     		add	r3, r3, r2
 13255 084a 9BB2     		uxth	r3, r3
 13256 084c 0533     		adds	r3, r3, #5
 13257 084e 9BB2     		uxth	r3, r3
 13258 0850 1846     		mov	r0, r3
 13259 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13260 0856 9A4A     		ldr	r2, .L554
 13261 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13262 085a 1946     		mov	r1, r3
 13263 085c 9A4A     		ldr	r2, .L554+8
 13264 085e 0B46     		mov	r3, r1
 13265 0860 9B00     		lsls	r3, r3, #2
 13266 0862 0B44     		add	r3, r3, r1
 13267 0864 1344     		add	r3, r3, r2
 13268 0866 03F20323 		addw	r3, r3, #515
 13269 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13270 086c 07F58A73 		add	r3, r7, #276
 13271 0870 1A54     		strb	r2, [r3, r0]
1794:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13272              		.loc 1 1794 0
 13273 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13274 0876 1A46     		mov	r2, r3	@ movhi
 13275 0878 9200     		lsls	r2, r2, #2
 13276 087a 1344     		add	r3, r3, r2
 13277 087c 1A46     		mov	r2, r3	@ movhi
 13278 087e 9100     		lsls	r1, r2, #2
 13279 0880 1A46     		mov	r2, r3	@ movhi
 13280 0882 0B46     		mov	r3, r1	@ movhi
 13281 0884 1344     		add	r3, r3, r2
 13282 0886 5B00     		lsls	r3, r3, #1
 13283 0888 9AB2     		uxth	r2, r3
 13284 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13285 088e 1344     		add	r3, r3, r2
 13286 0890 9BB2     		uxth	r3, r3
 13287 0892 0633     		adds	r3, r3, #6
 13288 0894 9BB2     		uxth	r3, r3
 13289 0896 1846     		mov	r0, r3
 13290 0898 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 298


 13291 089c 884A     		ldr	r2, .L554
 13292 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13293 08a0 1946     		mov	r1, r3
 13294 08a2 894A     		ldr	r2, .L554+8
 13295 08a4 0B46     		mov	r3, r1
 13296 08a6 9B00     		lsls	r3, r3, #2
 13297 08a8 0B44     		add	r3, r3, r1
 13298 08aa 1344     		add	r3, r3, r2
 13299 08ac 03F50173 		add	r3, r3, #516
 13300 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13301 08b2 07F58A73 		add	r3, r7, #276
 13302 08b6 1A54     		strb	r2, [r3, r0]
1795:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13303              		.loc 1 1795 0
 13304 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13305 08bc 1A46     		mov	r2, r3	@ movhi
 13306 08be 9200     		lsls	r2, r2, #2
 13307 08c0 1344     		add	r3, r3, r2
 13308 08c2 1A46     		mov	r2, r3	@ movhi
 13309 08c4 9100     		lsls	r1, r2, #2
 13310 08c6 1A46     		mov	r2, r3	@ movhi
 13311 08c8 0B46     		mov	r3, r1	@ movhi
 13312 08ca 1344     		add	r3, r3, r2
 13313 08cc 5B00     		lsls	r3, r3, #1
 13314 08ce 9AB2     		uxth	r2, r3
 13315 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13316 08d4 1344     		add	r3, r3, r2
 13317 08d6 9BB2     		uxth	r3, r3
 13318 08d8 0733     		adds	r3, r3, #7
 13319 08da 9BB2     		uxth	r3, r3
 13320 08dc 1846     		mov	r0, r3
 13321 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13322 08e2 774A     		ldr	r2, .L554
 13323 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13324 08e6 1946     		mov	r1, r3
 13325 08e8 774A     		ldr	r2, .L554+8
 13326 08ea 0B46     		mov	r3, r1
 13327 08ec 9B00     		lsls	r3, r3, #2
 13328 08ee 0B44     		add	r3, r3, r1
 13329 08f0 1344     		add	r3, r3, r2
 13330 08f2 03F20523 		addw	r3, r3, #517
 13331 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13332 08f8 07F58A73 		add	r3, r7, #276
 13333 08fc 1A54     		strb	r2, [r3, r0]
1796:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13334              		.loc 1 1796 0
 13335 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13336 0902 1A46     		mov	r2, r3	@ movhi
 13337 0904 9200     		lsls	r2, r2, #2
 13338 0906 1344     		add	r3, r3, r2
 13339 0908 1A46     		mov	r2, r3	@ movhi
 13340 090a 9100     		lsls	r1, r2, #2
 13341 090c 1A46     		mov	r2, r3	@ movhi
 13342 090e 0B46     		mov	r3, r1	@ movhi
 13343 0910 1344     		add	r3, r3, r2
 13344 0912 5B00     		lsls	r3, r3, #1
 13345 0914 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 299


 13346 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13347 091a 1344     		add	r3, r3, r2
 13348 091c 9BB2     		uxth	r3, r3
 13349 091e 0833     		adds	r3, r3, #8
 13350 0920 9BB2     		uxth	r3, r3
 13351 0922 1846     		mov	r0, r3
 13352 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13353 0928 654A     		ldr	r2, .L554
 13354 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13355 092c 1946     		mov	r1, r3
 13356 092e 664A     		ldr	r2, .L554+8
 13357 0930 0B46     		mov	r3, r1
 13358 0932 9B00     		lsls	r3, r3, #2
 13359 0934 0B44     		add	r3, r3, r1
 13360 0936 1344     		add	r3, r3, r2
 13361 0938 03F20623 		addw	r3, r3, #518
 13362 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13363 093e 07F58A73 		add	r3, r7, #276
 13364 0942 1A54     		strb	r2, [r3, r0]
1797:..\src/command_processing.c **** 
1798:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13365              		.loc 1 1798 0
 13366 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13367 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13368 094c 2BE0     		b	.L529
 13369              	.L530:
1799:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13370              		.loc 1 1799 0 discriminator 3
 13371 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13372 0952 1A46     		mov	r2, r3	@ movhi
 13373 0954 9200     		lsls	r2, r2, #2
 13374 0956 1344     		add	r3, r3, r2
 13375 0958 1A46     		mov	r2, r3	@ movhi
 13376 095a 9100     		lsls	r1, r2, #2
 13377 095c 1A46     		mov	r2, r3	@ movhi
 13378 095e 0B46     		mov	r3, r1	@ movhi
 13379 0960 1344     		add	r3, r3, r2
 13380 0962 5B00     		lsls	r3, r3, #1
 13381 0964 9AB2     		uxth	r2, r3
 13382 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13383 096a 1344     		add	r3, r3, r2
 13384 096c 9AB2     		uxth	r2, r3
 13385 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13386 0972 9BB2     		uxth	r3, r3
 13387 0974 1344     		add	r3, r3, r2
 13388 0976 9AB2     		uxth	r2, r3
 13389 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13390 097c D31A     		subs	r3, r2, r3
 13391 097e 9BB2     		uxth	r3, r3
 13392 0980 0933     		adds	r3, r3, #9
 13393 0982 9BB2     		uxth	r3, r3
 13394 0984 1946     		mov	r1, r3
 13395 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13396 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13397 098e D31A     		subs	r3, r2, r3
 13398 0990 07F19C02 		add	r2, r7, #156
 13399 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 300


 13400 0996 07F58A73 		add	r3, r7, #276
 13401 099a 5A54     		strb	r2, [r3, r1]
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13402              		.loc 1 1798 0 discriminator 3
 13403 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13404 09a0 013B     		subs	r3, r3, #1
 13405 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13406              	.L529:
1798:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13407              		.loc 1 1798 0 is_stmt 0 discriminator 1
 13408 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13409 09aa 002B     		cmp	r3, #0
 13410 09ac CFD1     		bne	.L530
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13411              		.loc 1 1785 0 is_stmt 1 discriminator 2
 13412 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13413 09b2 0133     		adds	r3, r3, #1
 13414 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13415              	.L528:
1785:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13416              		.loc 1 1785 0 is_stmt 0 discriminator 1
 13417 09b8 444B     		ldr	r3, .L554+12
 13418 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13419 09bc 9BB2     		uxth	r3, r3
 13420 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13421 09c2 9A42     		cmp	r2, r3
 13422 09c4 FFF4CAAE 		bcc	.L531
1800:..\src/command_processing.c ****             }  
1801:..\src/command_processing.c ****           
1802:..\src/command_processing.c **** 
1803:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1804:..\src/command_processing.c ****             
1805:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13423              		.loc 1 1805 0 is_stmt 1
 13424 09c8 404B     		ldr	r3, .L554+12
 13425 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13426 09cc 9BB2     		uxth	r3, r3
 13427 09ce 1A46     		mov	r2, r3	@ movhi
 13428 09d0 9200     		lsls	r2, r2, #2
 13429 09d2 1344     		add	r3, r3, r2
 13430 09d4 1A46     		mov	r2, r3	@ movhi
 13431 09d6 9100     		lsls	r1, r2, #2
 13432 09d8 1A46     		mov	r2, r3	@ movhi
 13433 09da 0B46     		mov	r3, r1	@ movhi
 13434 09dc 1344     		add	r3, r3, r2
 13435 09de 5B00     		lsls	r3, r3, #1
 13436 09e0 9AB2     		uxth	r2, r3
 13437 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13438 09e6 1344     		add	r3, r3, r2
 13439 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1806:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13440              		.loc 1 1806 0
 13441 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13442 09f0 364A     		ldr	r2, .L554+12
 13443 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13444 09f4 1A44     		add	r2, r2, r3
 13445 09f6 07F18003 		add	r3, r7, #128
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 301


 13446 09fa 3549     		ldr	r1, .L554+16
 13447 09fc 1846     		mov	r0, r3
 13448 09fe FFF7FEFF 		bl	sprintf
1807:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13449              		.loc 1 1807 0
 13450 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13451 0a06 0233     		adds	r3, r3, #2
 13452 0a08 07F58A72 		add	r2, r7, #276
 13453 0a0c 0021     		movs	r1, #0
 13454 0a0e D154     		strb	r1, [r2, r3]
1808:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13455              		.loc 1 1808 0
 13456 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13457 0a14 0333     		adds	r3, r3, #3
 13458 0a16 07F58A72 		add	r2, r7, #276
 13459 0a1a 0121     		movs	r1, #1
 13460 0a1c D154     		strb	r1, [r2, r3]
1809:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13461              		.loc 1 1809 0
 13462 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13463 0a22 0433     		adds	r3, r3, #4
 13464 0a24 284A     		ldr	r2, .L554+8
 13465 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13466 0a2a 07F58A72 		add	r2, r7, #276
 13467 0a2e D154     		strb	r1, [r2, r3]
1810:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13468              		.loc 1 1810 0
 13469 0a30 254B     		ldr	r3, .L554+8
 13470 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13471 0a36 012B     		cmp	r3, #1
 13472 0a38 17D0     		beq	.L533
 13473 0a3a 022B     		cmp	r3, #2
 13474 0a3c 28D0     		beq	.L534
 13475 0a3e 002B     		cmp	r3, #0
 13476 0a40 00D0     		beq	.L535
1811:..\src/command_processing.c ****                 case 0: 
1812:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1813:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1814:..\src/command_processing.c ****                     break;
1815:..\src/command_processing.c ****                 case 1: 
1816:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1817:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1818:..\src/command_processing.c ****                     break;
1819:..\src/command_processing.c ****                 case 2: 
1820:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1821:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1822:..\src/command_processing.c ****                     break;
1823:..\src/command_processing.c ****                 default:
1824:..\src/command_processing.c ****                     break;
 13477              		.loc 1 1824 0
 13478 0a42 38E0     		b	.L536
 13479              	.L535:
1812:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13480              		.loc 1 1812 0
 13481 0a44 07F18003 		add	r3, r7, #128
 13482 0a48 1846     		mov	r0, r3
 13483 0a4a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 302


 13484 0a4e 0346     		mov	r3, r0
 13485 0a50 1A46     		mov	r2, r3
 13486 0a52 07F18003 		add	r3, r7, #128
 13487 0a56 1344     		add	r3, r3, r2
 13488 0a58 1E4A     		ldr	r2, .L554+20
 13489 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13490 0a5c 1860     		str	r0, [r3]	@ unaligned
 13491 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13492 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1813:..\src/command_processing.c ****                     break;
 13493              		.loc 1 1813 0
 13494 0a62 1A23     		movs	r3, #26
 13495 0a64 87F89D36 		strb	r3, [r7, #1693]
1814:..\src/command_processing.c ****                 case 1: 
 13496              		.loc 1 1814 0
 13497 0a68 25E0     		b	.L536
 13498              	.L533:
1816:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13499              		.loc 1 1816 0
 13500 0a6a 07F18003 		add	r3, r7, #128
 13501 0a6e 1846     		mov	r0, r3
 13502 0a70 FFF7FEFF 		bl	strlen
 13503 0a74 0346     		mov	r3, r0
 13504 0a76 1A46     		mov	r2, r3
 13505 0a78 07F18003 		add	r3, r7, #128
 13506 0a7c 1344     		add	r3, r3, r2
 13507 0a7e 164A     		ldr	r2, .L554+24
 13508 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13509 0a82 1860     		str	r0, [r3]	@ unaligned
 13510 0a84 1279     		ldrb	r2, [r2, #4]
 13511 0a86 1A71     		strb	r2, [r3, #4]
1817:..\src/command_processing.c ****                     break;
 13512              		.loc 1 1817 0
 13513 0a88 1923     		movs	r3, #25
 13514 0a8a 87F89D36 		strb	r3, [r7, #1693]
1818:..\src/command_processing.c ****                 case 2: 
 13515              		.loc 1 1818 0
 13516 0a8e 12E0     		b	.L536
 13517              	.L534:
1820:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13518              		.loc 1 1820 0
 13519 0a90 07F18003 		add	r3, r7, #128
 13520 0a94 1846     		mov	r0, r3
 13521 0a96 FFF7FEFF 		bl	strlen
 13522 0a9a 0346     		mov	r3, r0
 13523 0a9c 1A46     		mov	r2, r3
 13524 0a9e 07F18003 		add	r3, r7, #128
 13525 0aa2 1344     		add	r3, r3, r2
 13526 0aa4 0D4A     		ldr	r2, .L554+28
 13527 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13528 0aa8 1860     		str	r0, [r3]	@ unaligned
 13529 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13530 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1821:..\src/command_processing.c ****                     break;
 13531              		.loc 1 1821 0
 13532 0aae 1A23     		movs	r3, #26
 13533 0ab0 87F89D36 		strb	r3, [r7, #1693]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 303


1822:..\src/command_processing.c ****                 default:
 13534              		.loc 1 1822 0
 13535 0ab4 00BF     		nop
 13536              	.L536:
1825:..\src/command_processing.c ****             }            
1826:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13537              		.loc 1 1826 0
 13538 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13539 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13540 0abe 28E0     		b	.L537
 13541              	.L555:
 13542              		.align	2
 13543              	.L554:
 13544 0ac0 00000000 		.word	IMU_connected
 13545 0ac4 D4100000 		.word	.LC147
 13546 0ac8 00000000 		.word	c_mem
 13547 0acc 00000000 		.word	N_IMU_Connected
 13548 0ad0 F0100000 		.word	.LC148
 13549 0ad4 08110000 		.word	.LC149
 13550 0ad8 10110000 		.word	.LC150
 13551 0adc 18110000 		.word	.LC151
 13552              	.L538:
1827:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13553              		.loc 1 1827 0 discriminator 3
 13554 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13555 0ae4 5A1D     		adds	r2, r3, #5
 13556 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13557 0aea 1A44     		add	r2, r2, r3
 13558 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13559 0af0 D31A     		subs	r3, r2, r3
 13560 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13561 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13562 0afa 8A1A     		subs	r2, r1, r2
 13563 0afc 07F18001 		add	r1, r7, #128
 13564 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13565 0b02 07F58A72 		add	r2, r7, #276
 13566 0b06 D154     		strb	r1, [r2, r3]
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13567              		.loc 1 1826 0 discriminator 3
 13568 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13569 0b0c 013B     		subs	r3, r3, #1
 13570 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13571              	.L537:
1826:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13572              		.loc 1 1826 0 is_stmt 0 discriminator 1
 13573 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13574 0b16 002B     		cmp	r3, #0
 13575 0b18 E2D1     		bne	.L538
1828:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1829:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13576              		.loc 1 1829 0 is_stmt 1
 13577 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13578 0b1e 5A1D     		adds	r2, r3, #5
 13579 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13580 0b24 1344     		add	r3, r3, r2
 13581 0b26 07F58A72 		add	r2, r7, #276
 13582 0b2a 0121     		movs	r1, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 304


 13583 0b2c D154     		strb	r1, [r2, r3]
1830:..\src/command_processing.c ****                   
1831:..\src/command_processing.c ****             
1832:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1833:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13584              		.loc 1 1833 0
 13585 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13586 0b32 3233     		adds	r3, r3, #50
 13587 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13588              		.loc 1 1834 0
 13589 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13590 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13591 0b40 1AE0     		b	.L539
 13592              	.L540:
1835:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13593              		.loc 1 1835 0 discriminator 3
 13594 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13595 0b46 0233     		adds	r3, r3, #2
 13596 0b48 9BB2     		uxth	r3, r3
 13597 0b4a 1A46     		mov	r2, r3
 13598 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13599 0b50 1A44     		add	r2, r2, r3
 13600 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13601 0b56 D31A     		subs	r3, r2, r3
 13602 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13603 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13604 0b60 8A1A     		subs	r2, r1, r2
 13605 0b62 07F10801 		add	r1, r7, #8
 13606 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13607 0b68 07F58A72 		add	r2, r7, #276
 13608 0b6c D154     		strb	r1, [r2, r3]
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13609              		.loc 1 1834 0 discriminator 3
 13610 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13611 0b72 013B     		subs	r3, r3, #1
 13612 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13613              	.L539:
1834:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13614              		.loc 1 1834 0 is_stmt 0 discriminator 1
 13615 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13616 0b7c 002B     		cmp	r3, #0
 13617 0b7e E0D1     		bne	.L540
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13618              		.loc 1 1837 0 is_stmt 1
 13619 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13620 0b84 5C1E     		subs	r4, r3, #1
 13621 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13622 0b8a DBB2     		uxtb	r3, r3
 13623 0b8c 013B     		subs	r3, r3, #1
 13624 0b8e DAB2     		uxtb	r2, r3
 13625 0b90 07F58A73 		add	r3, r7, #276
 13626 0b94 1146     		mov	r1, r2
 13627 0b96 1846     		mov	r0, r3
 13628 0b98 FFF7FEFF 		bl	LCRChecksum
 13629 0b9c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 305


 13630 0b9e 1A46     		mov	r2, r3
 13631 0ba0 07F58A73 		add	r3, r7, #276
 13632 0ba4 1A55     		strb	r2, [r3, r4]
1838:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13633              		.loc 1 1838 0
 13634 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13635 0baa 07F58A73 		add	r3, r7, #276
 13636 0bae 1146     		mov	r1, r2
 13637 0bb0 1846     		mov	r0, r3
 13638 0bb2 FFF7FEFF 		bl	commWrite
1839:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13639              		.loc 1 1839 0
 13640 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1840:..\src/command_processing.c ****         break;
 13641              		.loc 1 1840 0
 13642 0bba 09E1     		b	.L541
 13643              	.L548:
1841:..\src/command_processing.c **** 
1842:..\src/command_processing.c **** //=========================================================     other_params
1843:..\src/command_processing.c ****         default: 
1844:..\src/command_processing.c ****             
1845:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13644              		.loc 1 1845 0
 13645 0bbc BB1D     		adds	r3, r7, #6
 13646 0bbe 1A88     		ldrh	r2, [r3]
 13647 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13648 0bc4 013B     		subs	r3, r3, #1
 13649 0bc6 9A42     		cmp	r2, r3
 13650 0bc8 C0F20181 		blt	.L549
1846:..\src/command_processing.c ****                 break;
1847:..\src/command_processing.c ****             
1848:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13651              		.loc 1 1848 0
 13652 0bcc BB1D     		adds	r3, r7, #6
 13653 0bce 1A88     		ldrh	r2, [r3]
 13654 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13655 0bd4 8149     		ldr	r1, .L556
 13656 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13657 0bd8 0B44     		add	r3, r3, r1
 13658 0bda 9A42     		cmp	r2, r3
 13659 0bdc 05D1     		bne	.L543
1849:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13660              		.loc 1 1849 0
 13661 0bde 804B     		ldr	r3, .L556+4
 13662 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13663 0be2 804B     		ldr	r3, .L556+8
 13664 0be4 83F80122 		strb	r2, [r3, #513]
1850:..\src/command_processing.c ****                 break;
 13665              		.loc 1 1850 0
 13666 0be8 F2E0     		b	.L541
 13667              	.L543:
1851:..\src/command_processing.c ****             }
1852:..\src/command_processing.c ****             
1853:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13668              		.loc 1 1853 0
 13669 0bea BB1D     		adds	r3, r7, #6
 13670 0bec 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 306


 13671 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13672 0bf2 013B     		subs	r3, r3, #1
 13673 0bf4 9A42     		cmp	r2, r3
 13674 0bf6 05D1     		bne	.L544
1854:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13675              		.loc 1 1854 0
 13676 0bf8 794B     		ldr	r3, .L556+4
 13677 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13678 0bfc 794B     		ldr	r3, .L556+8
 13679 0bfe 83F8A020 		strb	r2, [r3, #160]
1855:..\src/command_processing.c ****             }
1856:..\src/command_processing.c ****             else {
1857:..\src/command_processing.c ****             
1858:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1863:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1864:..\src/command_processing.c ****                 
1865:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1866:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1867:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1868:..\src/command_processing.c ****                 {
1869:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1870:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1871:..\src/command_processing.c ****                 }
1872:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1873:..\src/command_processing.c ****             
1874:..\src/command_processing.c ****             }
1875:..\src/command_processing.c ****             
1876:..\src/command_processing.c ****         break;
 13680              		.loc 1 1876 0
 13681 0c02 E5E0     		b	.L541
 13682              	.L544:
1859:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13683              		.loc 1 1859 0
 13684 0c04 BB1D     		adds	r3, r7, #6
 13685 0c06 1A88     		ldrh	r2, [r3]
 13686 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13687 0c0c D31A     		subs	r3, r2, r3
 13688 0c0e 764A     		ldr	r2, .L556+12
 13689 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13690 0c12 1946     		mov	r1, r3
 13691 0c14 724B     		ldr	r3, .L556+4
 13692 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13693 0c18 724A     		ldr	r2, .L556+8
 13694 0c1a 0B46     		mov	r3, r1
 13695 0c1c 9B00     		lsls	r3, r3, #2
 13696 0c1e 0B44     		add	r3, r3, r1
 13697 0c20 1344     		add	r3, r3, r2
 13698 0c22 03F20223 		addw	r3, r3, #514
 13699 0c26 0246     		mov	r2, r0
 13700 0c28 1A70     		strb	r2, [r3]
1860:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13701              		.loc 1 1860 0
 13702 0c2a BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 307


 13703 0c2c 1A88     		ldrh	r2, [r3]
 13704 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13705 0c32 D31A     		subs	r3, r2, r3
 13706 0c34 6C4A     		ldr	r2, .L556+12
 13707 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13708 0c38 1946     		mov	r1, r3
 13709 0c3a 694B     		ldr	r3, .L556+4
 13710 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13711 0c3e 694A     		ldr	r2, .L556+8
 13712 0c40 0B46     		mov	r3, r1
 13713 0c42 9B00     		lsls	r3, r3, #2
 13714 0c44 0B44     		add	r3, r3, r1
 13715 0c46 1344     		add	r3, r3, r2
 13716 0c48 03F20323 		addw	r3, r3, #515
 13717 0c4c 0246     		mov	r2, r0
 13718 0c4e 1A70     		strb	r2, [r3]
1861:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13719              		.loc 1 1861 0
 13720 0c50 BB1D     		adds	r3, r7, #6
 13721 0c52 1A88     		ldrh	r2, [r3]
 13722 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13723 0c58 D31A     		subs	r3, r2, r3
 13724 0c5a 634A     		ldr	r2, .L556+12
 13725 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13726 0c5e 1946     		mov	r1, r3
 13727 0c60 5F4B     		ldr	r3, .L556+4
 13728 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13729 0c64 5F4A     		ldr	r2, .L556+8
 13730 0c66 0B46     		mov	r3, r1
 13731 0c68 9B00     		lsls	r3, r3, #2
 13732 0c6a 0B44     		add	r3, r3, r1
 13733 0c6c 1344     		add	r3, r3, r2
 13734 0c6e 03F50173 		add	r3, r3, #516
 13735 0c72 0246     		mov	r2, r0
 13736 0c74 1A70     		strb	r2, [r3]
1862:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13737              		.loc 1 1862 0
 13738 0c76 BB1D     		adds	r3, r7, #6
 13739 0c78 1A88     		ldrh	r2, [r3]
 13740 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13741 0c7e D31A     		subs	r3, r2, r3
 13742 0c80 594A     		ldr	r2, .L556+12
 13743 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13744 0c84 1946     		mov	r1, r3
 13745 0c86 564B     		ldr	r3, .L556+4
 13746 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13747 0c8a 564A     		ldr	r2, .L556+8
 13748 0c8c 0B46     		mov	r3, r1
 13749 0c8e 9B00     		lsls	r3, r3, #2
 13750 0c90 0B44     		add	r3, r3, r1
 13751 0c92 1344     		add	r3, r3, r2
 13752 0c94 03F20523 		addw	r3, r3, #517
 13753 0c98 0246     		mov	r2, r0
 13754 0c9a 1A70     		strb	r2, [r3]
1863:..\src/command_processing.c ****                 
 13755              		.loc 1 1863 0
 13756 0c9c BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 308


 13757 0c9e 1A88     		ldrh	r2, [r3]
 13758 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13759 0ca4 D31A     		subs	r3, r2, r3
 13760 0ca6 504A     		ldr	r2, .L556+12
 13761 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13762 0caa 1946     		mov	r1, r3
 13763 0cac 4C4B     		ldr	r3, .L556+4
 13764 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13765 0cb0 4C4A     		ldr	r2, .L556+8
 13766 0cb2 0B46     		mov	r3, r1
 13767 0cb4 9B00     		lsls	r3, r3, #2
 13768 0cb6 0B44     		add	r3, r3, r1
 13769 0cb8 1344     		add	r3, r3, r2
 13770 0cba 03F20623 		addw	r3, r3, #518
 13771 0cbe 0246     		mov	r2, r0
 13772 0cc0 1A70     		strb	r2, [r3]
1866:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13773              		.loc 1 1866 0
 13774 0cc2 4A4B     		ldr	r3, .L556+16
 13775 0cc4 0122     		movs	r2, #1
 13776 0cc6 1A60     		str	r2, [r3]
1867:..\src/command_processing.c ****                 {
 13777              		.loc 1 1867 0
 13778 0cc8 0023     		movs	r3, #0
 13779 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13780 0cce 71E0     		b	.L546
 13781              	.L547:
1869:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13782              		.loc 1 1869 0 discriminator 3
 13783 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13784 0cd4 444A     		ldr	r2, .L556+12
 13785 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13786 0cd8 1C46     		mov	r4, r3
 13787 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13788 0cde 424A     		ldr	r2, .L556+12
 13789 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13790 0ce2 1946     		mov	r1, r3
 13791 0ce4 3F4A     		ldr	r2, .L556+8
 13792 0ce6 0B46     		mov	r3, r1
 13793 0ce8 9B00     		lsls	r3, r3, #2
 13794 0cea 0B44     		add	r3, r3, r1
 13795 0cec 1344     		add	r3, r3, r2
 13796 0cee 03F20223 		addw	r3, r3, #514
 13797 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13798 0cf4 1A46     		mov	r2, r3
 13799 0cf6 1346     		mov	r3, r2
 13800 0cf8 5B00     		lsls	r3, r3, #1
 13801 0cfa 1344     		add	r3, r3, r2
 13802 0cfc 5B00     		lsls	r3, r3, #1
 13803 0cfe 5A1C     		adds	r2, r3, #1
 13804 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13805 0d04 3849     		ldr	r1, .L556+12
 13806 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13807 0d08 1846     		mov	r0, r3
 13808 0d0a 3649     		ldr	r1, .L556+8
 13809 0d0c 0346     		mov	r3, r0
 13810 0d0e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 309


 13811 0d10 0344     		add	r3, r3, r0
 13812 0d12 0B44     		add	r3, r3, r1
 13813 0d14 03F20323 		addw	r3, r3, #515
 13814 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13815 0d1a 1946     		mov	r1, r3
 13816 0d1c 0B46     		mov	r3, r1
 13817 0d1e 5B00     		lsls	r3, r3, #1
 13818 0d20 0B44     		add	r3, r3, r1
 13819 0d22 5B00     		lsls	r3, r3, #1
 13820 0d24 1A44     		add	r2, r2, r3
 13821 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13822 0d2a 2F49     		ldr	r1, .L556+12
 13823 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13824 0d2e 1846     		mov	r0, r3
 13825 0d30 2C49     		ldr	r1, .L556+8
 13826 0d32 0346     		mov	r3, r0
 13827 0d34 9B00     		lsls	r3, r3, #2
 13828 0d36 0344     		add	r3, r3, r0
 13829 0d38 0B44     		add	r3, r3, r1
 13830 0d3a 03F50173 		add	r3, r3, #516
 13831 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13832 0d40 1946     		mov	r1, r3
 13833 0d42 0B46     		mov	r3, r1
 13834 0d44 5B00     		lsls	r3, r3, #1
 13835 0d46 0B44     		add	r3, r3, r1
 13836 0d48 5B00     		lsls	r3, r3, #1
 13837 0d4a 1A44     		add	r2, r2, r3
 13838 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13839 0d50 2549     		ldr	r1, .L556+12
 13840 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13841 0d54 1846     		mov	r0, r3
 13842 0d56 2349     		ldr	r1, .L556+8
 13843 0d58 0346     		mov	r3, r0
 13844 0d5a 9B00     		lsls	r3, r3, #2
 13845 0d5c 0344     		add	r3, r3, r0
 13846 0d5e 0B44     		add	r3, r3, r1
 13847 0d60 03F20523 		addw	r3, r3, #517
 13848 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13849 0d66 1B01     		lsls	r3, r3, #4
 13850 0d68 1A44     		add	r2, r2, r3
 13851 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13852 0d6e 1E49     		ldr	r1, .L556+12
 13853 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13854 0d72 1846     		mov	r0, r3
 13855 0d74 1B49     		ldr	r1, .L556+8
 13856 0d76 0346     		mov	r3, r0
 13857 0d78 9B00     		lsls	r3, r3, #2
 13858 0d7a 0344     		add	r3, r3, r0
 13859 0d7c 0B44     		add	r3, r3, r1
 13860 0d7e 03F20623 		addw	r3, r3, #518
 13861 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13862 0d84 5B00     		lsls	r3, r3, #1
 13863 0d86 1344     		add	r3, r3, r2
 13864 0d88 0133     		adds	r3, r3, #1
 13865 0d8a 194A     		ldr	r2, .L556+20
 13866 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1870:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 310


 13867              		.loc 1 1870 0 discriminator 3
 13868 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13869 0d94 144A     		ldr	r2, .L556+12
 13870 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13871 0d98 1A46     		mov	r2, r3
 13872 0d9a 154B     		ldr	r3, .L556+20
 13873 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13874 0da0 124B     		ldr	r3, .L556+16
 13875 0da2 1B68     		ldr	r3, [r3]
 13876 0da4 1344     		add	r3, r3, r2
 13877 0da6 114A     		ldr	r2, .L556+16
 13878 0da8 1360     		str	r3, [r2]
1867:..\src/command_processing.c ****                 {
 13879              		.loc 1 1867 0 discriminator 3
 13880 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13881 0dae 0133     		adds	r3, r3, #1
 13882 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13883              	.L546:
1867:..\src/command_processing.c ****                 {
 13884              		.loc 1 1867 0 is_stmt 0 discriminator 1
 13885 0db4 094B     		ldr	r3, .L556
 13886 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13887 0db8 9BB2     		uxth	r3, r3
 13888 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13889 0dbe 9A42     		cmp	r2, r3
 13890 0dc0 86D3     		bcc	.L547
1872:..\src/command_processing.c ****             
 13891              		.loc 1 1872 0 is_stmt 1
 13892 0dc2 0A4B     		ldr	r3, .L556+16
 13893 0dc4 1B68     		ldr	r3, [r3]
 13894 0dc6 0133     		adds	r3, r3, #1
 13895 0dc8 084A     		ldr	r2, .L556+16
 13896 0dca 1360     		str	r3, [r2]
 13897              		.loc 1 1876 0
 13898 0dcc 00E0     		b	.L541
 13899              	.L549:
1846:..\src/command_processing.c ****             
 13900              		.loc 1 1846 0
 13901 0dce 00BF     		nop
 13902              	.L541:
1877:..\src/command_processing.c ****     }
1878:..\src/command_processing.c **** }
 13903              		.loc 1 1878 0 discriminator 1
 13904 0dd0 00BF     		nop
 13905 0dd2 07F5D567 		add	r7, r7, #1704
 13906              		.cfi_def_cfa_offset 16
 13907 0dd6 BD46     		mov	sp, r7
 13908              		.cfi_def_cfa_register 13
 13909              		@ sp needed
 13910 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13911              	.L557:
 13912 0dda 00BF     		.align	2
 13913              	.L556:
 13914 0ddc 00000000 		.word	N_IMU_Connected
 13915 0de0 00000000 		.word	g_rx
 13916 0de4 00000000 		.word	g_mem
 13917 0de8 00000000 		.word	IMU_connected
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 311


 13918 0dec 00000000 		.word	imus_data_size
 13919 0df0 00000000 		.word	single_imu_size
 13920              		.cfi_endproc
 13921              	.LFE70:
 13922              		.size	get_IMU_param_list, .-get_IMU_param_list
 13923              		.section	.text.setZeros,"ax",%progbits
 13924              		.align	2
 13925              		.global	setZeros
 13926              		.thumb
 13927              		.thumb_func
 13928              		.type	setZeros, %function
 13929              	setZeros:
 13930              	.LFB71:
1879:..\src/command_processing.c **** 
1880:..\src/command_processing.c **** //==============================================================================
1881:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1882:..\src/command_processing.c **** //==============================================================================
1883:..\src/command_processing.c **** 
1884:..\src/command_processing.c **** void setZeros()
1885:..\src/command_processing.c **** {
 13931              		.loc 1 1885 0
 13932              		.cfi_startproc
 13933              		@ args = 0, pretend = 0, frame = 8
 13934              		@ frame_needed = 1, uses_anonymous_args = 0
 13935 0000 B0B5     		push	{r4, r5, r7, lr}
 13936              		.cfi_def_cfa_offset 16
 13937              		.cfi_offset 4, -16
 13938              		.cfi_offset 5, -12
 13939              		.cfi_offset 7, -8
 13940              		.cfi_offset 14, -4
 13941 0002 82B0     		sub	sp, sp, #8
 13942              		.cfi_def_cfa_offset 24
 13943 0004 00AF     		add	r7, sp, #0
 13944              		.cfi_def_cfa_register 7
1886:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1887:..\src/command_processing.c ****     
1888:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13945              		.loc 1 1888 0
 13946 0006 0023     		movs	r3, #0
 13947 0008 BB71     		strb	r3, [r7, #6]
 13948 000a 2FE0     		b	.L559
 13949              	.L562:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13950              		.loc 1 1889 0
 13951 000c 0023     		movs	r3, #0
 13952 000e FB71     		strb	r3, [r7, #7]
 13953 0010 22E0     		b	.L560
 13954              	.L561:
1890:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = (int32)(data_encoder_raw[j][i]);
 13955              		.loc 1 1890 0 discriminator 3
 13956 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13957 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13958 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13959 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13960 001a 194D     		ldr	r5, .L563
 13961 001c 0B46     		mov	r3, r1
 13962 001e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 312


 13963 0020 0B44     		add	r3, r3, r1
 13964 0022 2344     		add	r3, r3, r4
 13965 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13966 0028 1C46     		mov	r4, r3
 13967 002a 1649     		ldr	r1, .L563+4
 13968 002c 1346     		mov	r3, r2
 13969 002e 5B00     		lsls	r3, r3, #1
 13970 0030 1344     		add	r3, r3, r2
 13971 0032 9B00     		lsls	r3, r3, #2
 13972 0034 0344     		add	r3, r3, r0
 13973 0036 6633     		adds	r3, r3, #102
 13974 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1891:..\src/command_processing.c ****             g_meas[j].rot[i] = (int8)0;
 13975              		.loc 1 1891 0 discriminator 3
 13976 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13977 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13978 0040 1149     		ldr	r1, .L563+8
 13979 0042 3420     		movs	r0, #52
 13980 0044 00FB02F2 		mul	r2, r0, r2
 13981 0048 0A44     		add	r2, r2, r1
 13982 004a 1344     		add	r3, r3, r2
 13983 004c 1833     		adds	r3, r3, #24
 13984 004e 0022     		movs	r2, #0
 13985 0050 1A70     		strb	r2, [r3]
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13986              		.loc 1 1889 0 discriminator 3
 13987 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13988 0054 0133     		adds	r3, r3, #1
 13989 0056 FB71     		strb	r3, [r7, #7]
 13990              	.L560:
1889:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13991              		.loc 1 1889 0 is_stmt 0 discriminator 1
 13992 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13993 005a 022B     		cmp	r3, #2
 13994 005c D9D9     		bls	.L561
1892:..\src/command_processing.c ****         }
1893:..\src/command_processing.c ****         reset_last_value_flag[j] = 1;
 13995              		.loc 1 1893 0 is_stmt 1 discriminator 2
 13996 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13997 0060 0A4A     		ldr	r2, .L563+12
 13998 0062 0121     		movs	r1, #1
 13999 0064 D154     		strb	r1, [r2, r3]
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 14000              		.loc 1 1888 0 discriminator 2
 14001 0066 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 14002 0068 0133     		adds	r3, r3, #1
 14003 006a BB71     		strb	r3, [r7, #6]
 14004              	.L559:
1888:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 14005              		.loc 1 1888 0 is_stmt 0 discriminator 1
 14006 006c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 14007 006e 012B     		cmp	r3, #1
 14008 0070 CCD9     		bls	.L562
1894:..\src/command_processing.c ****     }
1895:..\src/command_processing.c **** 
1896:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 14009              		.loc 1 1896 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 313


 14010 0072 0120     		movs	r0, #1
 14011 0074 FFF7FEFF 		bl	sendAcknowledgment
1897:..\src/command_processing.c **** }
 14012              		.loc 1 1897 0
 14013 0078 00BF     		nop
 14014 007a 0837     		adds	r7, r7, #8
 14015              		.cfi_def_cfa_offset 16
 14016 007c BD46     		mov	sp, r7
 14017              		.cfi_def_cfa_register 13
 14018              		@ sp needed
 14019 007e B0BD     		pop	{r4, r5, r7, pc}
 14020              	.L564:
 14021              		.align	2
 14022              	.L563:
 14023 0080 00000000 		.word	data_encoder_raw
 14024 0084 00000000 		.word	g_mem
 14025 0088 00000000 		.word	g_meas
 14026 008c 00000000 		.word	reset_last_value_flag
 14027              		.cfi_endproc
 14028              	.LFE71:
 14029              		.size	setZeros, .-setZeros
 14030              		.section	.rodata
 14031              		.align	2
 14032              	.LC152:
 14033 1150 0D0A00   		.ascii	"\015\012\000"
 14034 1153 00       		.align	2
 14035              	.LC153:
 14036 1154 4669726D 		.ascii	"Firmware version: \000"
 14036      77617265 
 14036      20766572 
 14036      73696F6E 
 14036      3A2000
 14037 1167 00       		.align	2
 14038              	.LC154:
 14039 1168 50554C53 		.ascii	"PULSE_socket: updated 27/11/24\000"
 14039      455F736F 
 14039      636B6574 
 14039      3A207570 
 14039      64617465 
 14040 1187 00       		.align	2
 14041              	.LC155:
 14042 1188 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 14042      0A00
 14043 118e 0000     		.align	2
 14044              	.LC156:
 14045 1190 44455649 		.ascii	"DEVICE INFO\015\012\000"
 14045      43452049 
 14045      4E464F0D 
 14045      0A00
 14046 119e 0000     		.align	2
 14047              	.LC157:
 14048 11a0 49443A20 		.ascii	"ID: %d\015\012\000"
 14048      25640D0A 
 14048      00
 14049 11a9 000000   		.align	2
 14050              	.LC158:
 14051 11ac 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 314


 14051      63653A20 
 14051      534F4654 
 14051      48414E44 
 14051      2050524F 
 14052 11c3 00       		.align	2
 14053              	.LC159:
 14054 11c4 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 14054      63653A20 
 14054      47454E45 
 14054      52494320 
 14054      32204D4F 
 14055 11df 00       		.align	2
 14056              	.LC160:
 14057 11e0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 14057      63653A20 
 14057      41495220 
 14057      4348414D 
 14057      42455253 
 14058 1207 00       		.align	2
 14059              	.LC161:
 14060 1208 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 14060      63653A20 
 14060      4F54544F 
 14060      424F434B 
 14060      20367620 
 14061 1232 0000     		.align	2
 14062              	.LC162:
 14063 1234 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 14063      63653A20 
 14063      534F4654 
 14063      48414E44 
 14063      2032204D 
 14064              		.align	2
 14065              	.LC163:
 14066 1250 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 14066      20736964 
 14066      653A2052 
 14066      49474854 
 14066      0D0A00
 14067 1263 00       		.align	2
 14068              	.LC164:
 14069 1264 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 14069      20736964 
 14069      653A204C 
 14069      4546540D 
 14069      0A00
 14070 1276 0000     		.align	2
 14071              	.LC165:
 14072 1278 55736572 		.ascii	"User: MARIA\015\012\000"
 14072      3A204D41 
 14072      5249410D 
 14072      0A00
 14073 1286 0000     		.align	2
 14074              	.LC166:
 14075 1288 55736572 		.ascii	"User: R01\015\012\000"
 14075      3A205230 
 14075      310D0A00 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 315


 14076              		.align	2
 14077              	.LC167:
 14078 1294 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 14078      3A204745 
 14078      4E455249 
 14078      43205553 
 14078      45520D0A 
 14079 12a9 000000   		.align	2
 14080              	.LC168:
 14081 12ac 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 14081      52202564 
 14081      20494E46 
 14081      4F0D0A00 
 14082              		.align	2
 14083              	.LC169:
 14084 12bc 4D6F746F 		.ascii	"Motor reference\000"
 14084      72207265 
 14084      66657265 
 14084      6E636500 
 14085              		.align	2
 14086              	.LC170:
 14087 12cc 202D2043 		.ascii	" - Currents: \000"
 14087      75727265 
 14087      6E74733A 
 14087      2000
 14088 12da 0000     		.align	2
 14089              	.LC171:
 14090 12dc 202D2050 		.ascii	" - Pwm: \000"
 14090      776D3A20 
 14090      00
 14091 12e5 000000   		.align	2
 14092              	.LC172:
 14093 12e8 202D2050 		.ascii	" - Position: \000"
 14093      6F736974 
 14093      696F6E3A 
 14093      2000
 14094 12f6 0000     		.align	2
 14095              	.LC173:
 14096 12f8 25642000 		.ascii	"%d \000"
 14097              		.align	2
 14098              	.LC174:
 14099 12fc 4D6F746F 		.ascii	"Motor enabled: \000"
 14099      7220656E 
 14099      61626C65 
 14099      643A2000 
 14100              		.align	2
 14101              	.LC175:
 14102 130c 5945530D 		.ascii	"YES\015\012\000"
 14102      0A00
 14103 1312 0000     		.align	2
 14104              	.LC176:
 14105 1314 4E4F0D0A 		.ascii	"NO\015\012\000"
 14105      00
 14106 1319 000000   		.align	2
 14107              	.LC177:
 14108 131c 50574D20 		.ascii	"PWM rescaling activation: \000"
 14108      72657363 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 316


 14108      616C696E 
 14108      67206163 
 14108      74697661 
 14109 1337 00       		.align	2
 14110              	.LC178:
 14111 1338 5945530A 		.ascii	"YES\012\000"
 14111      00
 14112 133d 000000   		.align	2
 14113              	.LC179:
 14114 1340 4E4F0A00 		.ascii	"NO\012\000"
 14115              		.align	2
 14116              	.LC180:
 14117 1344 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 14117      4C696D69 
 14117      743A2025 
 14117      640D0A00 
 14118              		.align	2
 14119              	.LC181:
 14120 1354 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 14120      41535552 
 14120      454D454E 
 14120      54532049 
 14120      4E464F0D 
 14121 136a 0000     		.align	2
 14122              	.LC182:
 14123 136c 53656E73 		.ascii	"Sensor value: \000"
 14123      6F722076 
 14123      616C7565 
 14123      3A2000
 14124 137b 00       		.align	2
 14125              	.LC183:
 14126 137c 256400   		.ascii	"%d\000"
 14127 137f 00       		.align	2
 14128              	.LC184:
 14129 1380 2C2000   		.ascii	", \000"
 14130 1383 00       		.align	2
 14131              	.LC185:
 14132 1384 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 14132      7469636B 
 14132      206D6561 
 14132      73757265 
 14132      6D656E74 
 14133 13a2 0000     		.align	2
 14134              	.LC186:
 14135 13a4 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 14135      65727920 
 14135      25642056 
 14135      6F6C7461 
 14135      67652028 
 14136 13c1 000000   		.align	2
 14137              	.LC187:
 14138 13c4 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 14138      20636861 
 14138      72676520 
 14138      706F7765 
 14138      72207465 
 14139 13eb 00       		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 317


 14140              	.LC188:
 14141 13ec 43757272 		.ascii	"Current %d (mA): %ld\000"
 14141      656E7420 
 14141      25642028 
 14141      6D41293A 
 14141      20256C64 
 14142 1401 000000   		.align	2
 14143              	.LC189:
 14144 1404 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 14144      20477261 
 14144      73702048 
 14144      6F6C6420 
 14144      43757272 
 14145 1429 000000   		.align	2
 14146              	.LC190:
 14147 142c 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 14147      544F5220 
 14147      25642043 
 14147      4F4E4649 
 14147      47555241 
 14148 1447 00       		.align	2
 14149              	.LC191:
 14150 1448 50494420 		.ascii	"PID Controller: \000"
 14150      436F6E74 
 14150      726F6C6C 
 14150      65723A20 
 14150      00
 14151              		.global	__aeabi_i2d
 14152              		.global	__aeabi_ddiv
 14153 1459 000000   		.align	2
 14154              	.LC192:
 14155 145c 50202D3E 		.ascii	"P -> %f  \000"
 14155      20256620 
 14155      2000
 14156 1466 0000     		.align	2
 14157              	.LC193:
 14158 1468 49202D3E 		.ascii	"I -> %f  \000"
 14158      20256620 
 14158      2000
 14159 1472 0000     		.align	2
 14160              	.LC194:
 14161 1474 44202D3E 		.ascii	"D -> %f\015\012\000"
 14161      2025660D 
 14161      0A00
 14162 147e 0000     		.align	2
 14163              	.LC195:
 14164 1480 43757272 		.ascii	"Current PID Controller: \000"
 14164      656E7420 
 14164      50494420 
 14164      436F6E74 
 14164      726F6C6C 
 14165 1499 000000   		.align	2
 14166              	.LC196:
 14167 149c 53746172 		.ascii	"Startup activation: YES\015\012\000"
 14167      74757020 
 14167      61637469 
 14167      76617469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 318


 14167      6F6E3A20 
 14168 14b6 0000     		.align	2
 14169              	.LC197:
 14170 14b8 53746172 		.ascii	"Startup activation: NO\015\012\000"
 14170      74757020 
 14170      61637469 
 14170      76617469 
 14170      6F6E3A20 
 14171 14d1 000000   		.align	2
 14172              	.LC198:
 14173 14d4 496E7075 		.ascii	"Input mode: USB\015\012\000"
 14173      74206D6F 
 14173      64653A20 
 14173      5553420D 
 14173      0A00
 14174 14e6 0000     		.align	2
 14175              	.LC199:
 14176 14e8 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 14176      74206D6F 
 14176      64653A20 
 14176      48616E64 
 14176      6C650D0A 
 14177 14fd 000000   		.align	2
 14178              	.LC200:
 14179 1500 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 14179      74206D6F 
 14179      64653A20 
 14179      454D4720 
 14179      70726F70 
 14180 151f 00       		.align	2
 14181              	.LC201:
 14182 1520 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 14182      74206D6F 
 14182      64653A20 
 14182      454D4720 
 14182      696E7465 
 14183 153b 00       		.align	2
 14184              	.LC202:
 14185 153c 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 14185      74206D6F 
 14185      64653A20 
 14185      454D4720 
 14185      46434653 
 14186 1553 00       		.align	2
 14187              	.LC203:
 14188 1554 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 14188      74206D6F 
 14188      64653A20 
 14188      454D4720 
 14188      46434653 
 14189 156f 00       		.align	2
 14190              	.LC204:
 14191 1570 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 14191      74206D6F 
 14191      64653A20 
 14191      4A6F7973 
 14191      7469636B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 319


 14192 1587 00       		.align	2
 14193              	.LC205:
 14194 1588 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 14194      74206D6F 
 14194      64653A20 
 14194      454D4720 
 14194      70726F70 
 14195 15b6 00       		.ascii	"\000"
 14196 15b7 00       		.align	2
 14197              	.LC206:
 14198 15b8 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 14198      726F6C20 
 14198      6D6F6465 
 14198      3A20506F 
 14198      73697469 
 14199 15d1 000000   		.align	2
 14200              	.LC207:
 14201 15d4 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 14201      726F6C20 
 14201      6D6F6465 
 14201      3A205057 
 14201      4D0D0A00 
 14202              		.align	2
 14203              	.LC208:
 14204 15e8 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 14204      726F6C20 
 14204      6D6F6465 
 14204      3A204375 
 14204      7272656E 
 14205              		.align	2
 14206              	.LC209:
 14207 1600 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 14207      726F6C20 
 14207      6D6F6465 
 14207      3A20506F 
 14207      73697469 
 14208 1625 000000   		.align	2
 14209              	.LC210:
 14210 1628 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 14210      6C757465 
 14210      20656E63 
 14210      6F646572 
 14210      20706F73 
 14211 1649 000000   		.align	2
 14212              	.LC211:
 14213 164c 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 14213      6C757465 
 14213      20656E63 
 14213      6F646572 
 14213      20706F73 
 14214              		.align	2
 14215              	.LC212:
 14216 166c 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 14216      722D4861 
 14216      6E646C65 
 14216      20526174 
 14216      696F3A20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 320


 14217 1685 000000   		.align	2
 14218              	.LC213:
 14219 1688 53656E73 		.ascii	"Sensor resolution: \000"
 14219      6F722072 
 14219      65736F6C 
 14219      7574696F 
 14219      6E3A2000 
 14220              		.align	2
 14221              	.LC214:
 14222 169c 4D656173 		.ascii	"Measurement Offset: \000"
 14222      7572656D 
 14222      656E7420 
 14222      4F666673 
 14222      65743A20 
 14223 16b1 000000   		.align	2
 14224              	.LC215:
 14225 16b4 256C6400 		.ascii	"%ld\000"
 14226              		.align	2
 14227              	.LC216:
 14228 16b8 4D656173 		.ascii	"Measurement Multiplier: \000"
 14228      7572656D 
 14228      656E7420 
 14228      4D756C74 
 14228      69706C69 
 14229              		.global	__aeabi_f2d
 14230 16d1 000000   		.align	2
 14231              	.LC217:
 14232 16d4 256600   		.ascii	"%f\000"
 14233 16d7 00       		.align	2
 14234              	.LC218:
 14235 16d8 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 14235      656E7420 
 14235      6C6F6F6B 
 14235      75702074 
 14235      61626C65 
 14236 1706 00       		.ascii	"\000"
 14237 1707 00       		.align	2
 14238              	.LC219:
 14239 1708 506F7369 		.ascii	"Position limit active: %d\000"
 14239      74696F6E 
 14239      206C696D 
 14239      69742061 
 14239      63746976 
 14240 1722 0000     		.align	2
 14241              	.LC220:
 14242 1724 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14242      74696F6E 
 14242      206C696D 
 14242      6974206D 
 14242      6F746F72 
 14243 1747 00       		.align	2
 14244              	.LC221:
 14245 1748 73757020 		.ascii	"sup -> %ld\015\012\000"
 14245      2D3E2025 
 14245      6C640D0A 
 14245      00
 14246 1755 000000   		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 321


 14247              	.LC222:
 14248 1758 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14248      73746570 
 14248      20706F73 
 14248      20616E64 
 14248      206E6567 
 14249              		.align	2
 14250              	.LC223:
 14251 1774 43757272 		.ascii	"Current limit: %d\015\012\000"
 14251      656E7420 
 14251      6C696D69 
 14251      743A2025 
 14251      640D0A00 
 14252              		.align	2
 14253              	.LC224:
 14254 1788 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14254      434F4E46 
 14254      49475552 
 14254      4154494F 
 14254      4E0D0A00 
 14255              		.align	2
 14256              	.LC225:
 14257 179c 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14257      74687265 
 14257      73686F6C 
 14257      6473205B 
 14257      30202D20 
 14258 17be 0000     		.align	2
 14259              	.LC226:
 14260 17c0 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14260      6D617820 
 14260      76616C75 
 14260      6573205B 
 14260      30202D20 
 14261              		.align	2
 14262              	.LC227:
 14263 17e4 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14263      696E7665 
 14263      7273696F 
 14263      6E3A2059 
 14263      45530D0A 
 14264 17f9 000000   		.align	2
 14265              	.LC228:
 14266 17fc 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14266      696E7665 
 14266      7273696F 
 14266      6E3A204E 
 14266      4F0D0A00 
 14267              		.align	2
 14268              	.LC229:
 14269 1810 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14269      62726174 
 14269      696F6E20 
 14269      656E6162 
 14269      6C65643A 
 14270 182b 00       		.align	2
 14271              	.LC230:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 322


 14272 182c 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14272      62726174 
 14272      696F6E20 
 14272      656E6162 
 14272      6C65643A 
 14273 1846 0000     		.align	2
 14274              	.LC231:
 14275 1848 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14275      6D617820 
 14275      73706565 
 14275      643A2025 
 14275      64202564 
 14276 185d 000000   		.align	2
 14277              	.LC232:
 14278 1860 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14278      74696F6E 
 14278      616C2041 
 14278      44432073 
 14278      656E736F 
 14279              		.align	2
 14280              	.LC233:
 14281 1880 41444320 		.ascii	"ADC %d -> %d\000"
 14281      2564202D 
 14281      3E202564 
 14281      00
 14282 188d 000000   		.align	2
 14283              	.LC234:
 14284 1890 454D4720 		.ascii	"EMG input %d -> %d\000"
 14284      696E7075 
 14284      74202564 
 14284      202D3E20 
 14284      256400
 14285 18a3 00       		.align	2
 14286              	.LC235:
 14287 18a4 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14287      2074696D 
 14287      65206465 
 14287      6C617920 
 14287      286D7329 
 14288 18bd 000000   		.align	2
 14289              	.LC236:
 14290 18c0 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14290      2076656C 
 14290      6F636974 
 14290      7920636C 
 14290      6F737572 
 14291 18e6 0000     		.align	2
 14292              	.LC237:
 14293 18e8 52657374 		.ascii	"Rest position: %d\000"
 14293      20706F73 
 14293      6974696F 
 14293      6E3A2025 
 14293      6400
 14294 18fa 0000     		.align	2
 14295              	.LC238:
 14296 18fc 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14296      436F6E6E 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 323


 14296      65637465 
 14296      643A2025 
 14296      640D0A00 
 14297              		.align	2
 14298              	.LC239:
 14299 1910 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14299      20434F4E 
 14299      46494755 
 14299      52415449 
 14299      4F4E0D0A 
 14300 1925 000000   		.align	2
 14301              	.LC240:
 14302 1928 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14302      2564200D 
 14302      0A094944 
 14302      3A202564 
 14302      0D0A00
 14303 193b 00       		.align	2
 14304              	.LC241:
 14305 193c 09416363 		.ascii	"\011Accelerometers: \000"
 14305      656C6572 
 14305      6F6D6574 
 14305      6572733A 
 14305      2000
 14306 194e 0000     		.align	2
 14307              	.LC242:
 14308 1950 09477972 		.ascii	"\011Gyroscopes: \000"
 14308      6F73636F 
 14308      7065733A 
 14308      2000
 14309 195e 0000     		.align	2
 14310              	.LC243:
 14311 1960 094D6167 		.ascii	"\011Magnetometers: \000"
 14311      6E65746F 
 14311      6D657465 
 14311      72733A20 
 14311      00
 14312 1971 000000   		.align	2
 14313              	.LC244:
 14314 1974 09517561 		.ascii	"\011Quaternion: \000"
 14314      7465726E 
 14314      696F6E3A 
 14314      2000
 14315 1982 0000     		.align	2
 14316              	.LC245:
 14317 1984 0954656D 		.ascii	"\011Temperature: \000"
 14317      70657261 
 14317      74757265 
 14317      3A2000
 14318 1993 00       		.align	2
 14319              	.LC246:
 14320 1994 4D617374 		.ascii	"Master Mode active: YES\015\012\000"
 14320      6572204D 
 14320      6F646520 
 14320      61637469 
 14320      76653A20 
 14321 19ae 0000     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 324


 14322              	.LC247:
 14323 19b0 4D617374 		.ascii	"Master Mode active: NO\015\012\000"
 14323      6572204D 
 14323      6F646520 
 14323      61637469 
 14323      76653A20 
 14324 19c9 000000   		.align	2
 14325              	.LC248:
 14326 19cc 536C6176 		.ascii	"Slave ID: %d\015\012\000"
 14326      65204944 
 14326      3A202564 
 14326      0D0A00
 14327 19db 00       		.align	2
 14328              	.LC249:
 14329 19dc 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14329      20465720 
 14329      6379636C 
 14329      65207469 
 14329      6D653A20 
 14330              		.align	2
 14331              	.LC250:
 14332 19f8 0D0A0000 		.ascii	"\015\012\000\000"
 14333              		.section	.text.prepare_generic_info,"ax",%progbits
 14334              		.align	2
 14335              		.global	prepare_generic_info
 14336              		.thumb
 14337              		.thumb_func
 14338              		.type	prepare_generic_info, %function
 14339              	prepare_generic_info:
 14340              	.LFB72:
1898:..\src/command_processing.c **** 
1899:..\src/command_processing.c **** //==============================================================================
1900:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1901:..\src/command_processing.c **** //==============================================================================
1902:..\src/command_processing.c **** 
1903:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1904:..\src/command_processing.c **** {
 14341              		.loc 1 1904 0
 14342              		.cfi_startproc
 14343              		@ args = 0, pretend = 0, frame = 152
 14344              		@ frame_needed = 1, uses_anonymous_args = 0
 14345 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14346              		.cfi_def_cfa_offset 36
 14347              		.cfi_offset 4, -36
 14348              		.cfi_offset 5, -32
 14349              		.cfi_offset 6, -28
 14350              		.cfi_offset 7, -24
 14351              		.cfi_offset 8, -20
 14352              		.cfi_offset 9, -16
 14353              		.cfi_offset 10, -12
 14354              		.cfi_offset 11, -8
 14355              		.cfi_offset 14, -4
 14356 0004 B1B0     		sub	sp, sp, #196
 14357              		.cfi_def_cfa_offset 232
 14358 0006 0AAF     		add	r7, sp, #40
 14359              		.cfi_def_cfa 7, 192
 14360 0008 7861     		str	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 325


1905:..\src/command_processing.c ****     int i;
1906:..\src/command_processing.c **** 
1907:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14361              		.loc 1 1907 0
 14362 000a C44B     		ldr	r3, .L667
 14363 000c C7F88C30 		str	r3, [r7, #140]
1908:..\src/command_processing.c ****     
1909:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14364              		.loc 1 1909 0
 14365 0010 C24B     		ldr	r3, .L667
 14366 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14367 0016 FA2B     		cmp	r3, #250
 14368 0018 01F01586 		beq	.L664
 14369              	.LBB24:
1910:..\src/command_processing.c ****         char str[100];
1911:..\src/command_processing.c ****         strcpy(info_string, "");
 14370              		.loc 1 1911 0
 14371 001c 7B69     		ldr	r3, [r7, #20]
 14372 001e 0022     		movs	r2, #0
 14373 0020 1A70     		strb	r2, [r3]
1912:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14374              		.loc 1 1912 0
 14375 0022 7869     		ldr	r0, [r7, #20]
 14376 0024 FFF7FEFF 		bl	strlen
 14377 0028 0346     		mov	r3, r0
 14378 002a 1A46     		mov	r2, r3
 14379 002c 7B69     		ldr	r3, [r7, #20]
 14380 002e 1344     		add	r3, r3, r2
 14381 0030 BB4A     		ldr	r2, .L667+4
 14382 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14383 0034 9278     		ldrb	r2, [r2, #2]
 14384 0036 1980     		strh	r1, [r3]	@ unaligned
 14385 0038 9A70     		strb	r2, [r3, #2]
1913:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14386              		.loc 1 1913 0
 14387 003a 7869     		ldr	r0, [r7, #20]
 14388 003c FFF7FEFF 		bl	strlen
 14389 0040 0346     		mov	r3, r0
 14390 0042 1A46     		mov	r2, r3
 14391 0044 7B69     		ldr	r3, [r7, #20]
 14392 0046 1344     		add	r3, r3, r2
 14393 0048 B64A     		ldr	r2, .L667+8
 14394 004a 1D46     		mov	r5, r3
 14395 004c 1446     		mov	r4, r2
 14396 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14397 0050 2860     		str	r0, [r5]	@ unaligned
 14398 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14399 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14400 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14401 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14402 005a A278     		ldrb	r2, [r4, #2]
 14403 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14404 005e 1346     		mov	r3, r2
 14405 0060 AB74     		strb	r3, [r5, #18]
1914:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14406              		.loc 1 1914 0
 14407 0062 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 326


 14408 0064 FFF7FEFF 		bl	strlen
 14409 0068 0346     		mov	r3, r0
 14410 006a 1A46     		mov	r2, r3
 14411 006c 7B69     		ldr	r3, [r7, #20]
 14412 006e 1344     		add	r3, r3, r2
 14413 0070 AD4A     		ldr	r2, .L667+12
 14414 0072 1D46     		mov	r5, r3
 14415 0074 1446     		mov	r4, r2
 14416 0076 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14417 0078 2860     		str	r0, [r5]	@ unaligned
 14418 007a 6960     		str	r1, [r5, #4]	@ unaligned
 14419 007c AA60     		str	r2, [r5, #8]	@ unaligned
 14420 007e EB60     		str	r3, [r5, #12]	@ unaligned
 14421 0080 07CC     		ldmia	r4!, {r0, r1, r2}
 14422 0082 2861     		str	r0, [r5, #16]	@ unaligned
 14423 0084 6961     		str	r1, [r5, #20]	@ unaligned
 14424 0086 AA61     		str	r2, [r5, #24]	@ unaligned
 14425 0088 2388     		ldrh	r3, [r4]	@ unaligned
 14426 008a A278     		ldrb	r2, [r4, #2]
 14427 008c AB83     		strh	r3, [r5, #28]	@ unaligned
 14428 008e 1346     		mov	r3, r2
 14429 0090 AB77     		strb	r3, [r5, #30]
1915:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14430              		.loc 1 1915 0
 14431 0092 7869     		ldr	r0, [r7, #20]
 14432 0094 FFF7FEFF 		bl	strlen
 14433 0098 0346     		mov	r3, r0
 14434 009a 1A46     		mov	r2, r3
 14435 009c 7B69     		ldr	r3, [r7, #20]
 14436 009e 1344     		add	r3, r3, r2
 14437 00a0 A24A     		ldr	r2, .L667+16
 14438 00a2 1068     		ldr	r0, [r2]	@ unaligned
 14439 00a4 1860     		str	r0, [r3]	@ unaligned
 14440 00a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14441 00a8 9A80     		strh	r2, [r3, #4]	@ unaligned
1916:..\src/command_processing.c **** 
1917:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14442              		.loc 1 1917 0
 14443 00aa 7869     		ldr	r0, [r7, #20]
 14444 00ac FFF7FEFF 		bl	strlen
 14445 00b0 0346     		mov	r3, r0
 14446 00b2 1A46     		mov	r2, r3
 14447 00b4 7B69     		ldr	r3, [r7, #20]
 14448 00b6 1344     		add	r3, r3, r2
 14449 00b8 9D4A     		ldr	r2, .L667+20
 14450 00ba 1C46     		mov	r4, r3
 14451 00bc 1346     		mov	r3, r2
 14452 00be 07CB     		ldmia	r3!, {r0, r1, r2}
 14453 00c0 2060     		str	r0, [r4]	@ unaligned
 14454 00c2 6160     		str	r1, [r4, #4]	@ unaligned
 14455 00c4 A260     		str	r2, [r4, #8]	@ unaligned
 14456 00c6 1B88     		ldrh	r3, [r3]	@ unaligned
 14457 00c8 A381     		strh	r3, [r4, #12]	@ unaligned
1918:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14458              		.loc 1 1918 0
 14459 00ca D7F88C30 		ldr	r3, [r7, #140]
 14460 00ce 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 327


 14461 00d2 1A46     		mov	r2, r3
 14462 00d4 07F11C03 		add	r3, r7, #28
 14463 00d8 9649     		ldr	r1, .L667+24
 14464 00da 1846     		mov	r0, r3
 14465 00dc FFF7FEFF 		bl	sprintf
1919:..\src/command_processing.c ****         strcat(info_string, str);
 14466              		.loc 1 1919 0
 14467 00e0 07F11C03 		add	r3, r7, #28
 14468 00e4 1946     		mov	r1, r3
 14469 00e6 7869     		ldr	r0, [r7, #20]
 14470 00e8 FFF7FEFF 		bl	strcat
1920:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14471              		.loc 1 1920 0
 14472 00ec D7F88C30 		ldr	r3, [r7, #140]
 14473 00f0 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14474 00f4 042B     		cmp	r3, #4
 14475 00f6 00F29180 		bhi	.L665
 14476 00fa 01A2     		adr	r2, .L569
 14477 00fc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14478              		.p2align 2
 14479              	.L569:
 14480 0100 15010000 		.word	.L568+1
 14481 0104 43010000 		.word	.L570+1
 14482 0108 73010000 		.word	.L571+1
 14483 010c B5010000 		.word	.L572+1
 14484 0110 F5010000 		.word	.L573+1
 14485              		.p2align 1
 14486              	.L568:
1921:..\src/command_processing.c ****             case SOFTHAND_PRO:
1922:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14487              		.loc 1 1922 0
 14488 0114 7869     		ldr	r0, [r7, #20]
 14489 0116 FFF7FEFF 		bl	strlen
 14490 011a 0346     		mov	r3, r0
 14491 011c 1A46     		mov	r2, r3
 14492 011e 7B69     		ldr	r3, [r7, #20]
 14493 0120 1344     		add	r3, r3, r2
 14494 0122 854A     		ldr	r2, .L667+28
 14495 0124 1C46     		mov	r4, r3
 14496 0126 1546     		mov	r5, r2
 14497 0128 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14498 012a 2060     		str	r0, [r4]	@ unaligned
 14499 012c 6160     		str	r1, [r4, #4]	@ unaligned
 14500 012e A260     		str	r2, [r4, #8]	@ unaligned
 14501 0130 E360     		str	r3, [r4, #12]	@ unaligned
 14502 0132 2868     		ldr	r0, [r5]	@ unaligned
 14503 0134 2061     		str	r0, [r4, #16]	@ unaligned
 14504 0136 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14505 0138 AA79     		ldrb	r2, [r5, #6]
 14506 013a A382     		strh	r3, [r4, #20]	@ unaligned
 14507 013c 1346     		mov	r3, r2
 14508 013e A375     		strb	r3, [r4, #22]
1923:..\src/command_processing.c ****                 break;
 14509              		.loc 1 1923 0
 14510 0140 6DE0     		b	.L574
 14511              	.L570:
1924:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 328


1925:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14512              		.loc 1 1925 0
 14513 0142 7869     		ldr	r0, [r7, #20]
 14514 0144 FFF7FEFF 		bl	strlen
 14515 0148 0346     		mov	r3, r0
 14516 014a 1A46     		mov	r2, r3
 14517 014c 7B69     		ldr	r3, [r7, #20]
 14518 014e 1344     		add	r3, r3, r2
 14519 0150 7A4A     		ldr	r2, .L667+32
 14520 0152 1D46     		mov	r5, r3
 14521 0154 1446     		mov	r4, r2
 14522 0156 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14523 0158 2860     		str	r0, [r5]	@ unaligned
 14524 015a 6960     		str	r1, [r5, #4]	@ unaligned
 14525 015c AA60     		str	r2, [r5, #8]	@ unaligned
 14526 015e EB60     		str	r3, [r5, #12]	@ unaligned
 14527 0160 03CC     		ldmia	r4!, {r0, r1}
 14528 0162 2861     		str	r0, [r5, #16]	@ unaligned
 14529 0164 6961     		str	r1, [r5, #20]	@ unaligned
 14530 0166 2388     		ldrh	r3, [r4]	@ unaligned
 14531 0168 A278     		ldrb	r2, [r4, #2]
 14532 016a 2B83     		strh	r3, [r5, #24]	@ unaligned
 14533 016c 1346     		mov	r3, r2
 14534 016e AB76     		strb	r3, [r5, #26]
1926:..\src/command_processing.c ****                 break;
 14535              		.loc 1 1926 0
 14536 0170 55E0     		b	.L574
 14537              	.L571:
1927:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1928:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14538              		.loc 1 1928 0
 14539 0172 7869     		ldr	r0, [r7, #20]
 14540 0174 FFF7FEFF 		bl	strlen
 14541 0178 0346     		mov	r3, r0
 14542 017a 1A46     		mov	r2, r3
 14543 017c 7B69     		ldr	r3, [r7, #20]
 14544 017e 1344     		add	r3, r3, r2
 14545 0180 6F4A     		ldr	r2, .L667+36
 14546 0182 1446     		mov	r4, r2
 14547 0184 9E46     		mov	lr, r3
 14548 0186 04F1200C 		add	ip, r4, #32
 14549              	.L575:
 14550 018a 7546     		mov	r5, lr
 14551 018c 2646     		mov	r6, r4
 14552 018e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14553 0190 2860     		str	r0, [r5]	@ unaligned
 14554 0192 6960     		str	r1, [r5, #4]	@ unaligned
 14555 0194 AA60     		str	r2, [r5, #8]	@ unaligned
 14556 0196 EB60     		str	r3, [r5, #12]	@ unaligned
 14557 0198 1034     		adds	r4, r4, #16
 14558 019a 0EF1100E 		add	lr, lr, #16
 14559 019e 6445     		cmp	r4, ip
 14560 01a0 F3D1     		bne	.L575
 14561 01a2 7346     		mov	r3, lr
 14562 01a4 2246     		mov	r2, r4
 14563 01a6 1068     		ldr	r0, [r2]	@ unaligned
 14564 01a8 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 329


 14565 01aa 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14566 01ac 9279     		ldrb	r2, [r2, #6]
 14567 01ae 9980     		strh	r1, [r3, #4]	@ unaligned
 14568 01b0 9A71     		strb	r2, [r3, #6]
1929:..\src/command_processing.c ****                 break;
 14569              		.loc 1 1929 0
 14570 01b2 34E0     		b	.L574
 14571              	.L572:
1930:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1931:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14572              		.loc 1 1931 0
 14573 01b4 7869     		ldr	r0, [r7, #20]
 14574 01b6 FFF7FEFF 		bl	strlen
 14575 01ba 0346     		mov	r3, r0
 14576 01bc 1A46     		mov	r2, r3
 14577 01be 7B69     		ldr	r3, [r7, #20]
 14578 01c0 1344     		add	r3, r3, r2
 14579 01c2 604A     		ldr	r2, .L667+40
 14580 01c4 1446     		mov	r4, r2
 14581 01c6 9E46     		mov	lr, r3
 14582 01c8 04F1200C 		add	ip, r4, #32
 14583              	.L576:
 14584 01cc 7546     		mov	r5, lr
 14585 01ce 2646     		mov	r6, r4
 14586 01d0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14587 01d2 2860     		str	r0, [r5]	@ unaligned
 14588 01d4 6960     		str	r1, [r5, #4]	@ unaligned
 14589 01d6 AA60     		str	r2, [r5, #8]	@ unaligned
 14590 01d8 EB60     		str	r3, [r5, #12]	@ unaligned
 14591 01da 1034     		adds	r4, r4, #16
 14592 01dc 0EF1100E 		add	lr, lr, #16
 14593 01e0 6445     		cmp	r4, ip
 14594 01e2 F3D1     		bne	.L576
 14595 01e4 7246     		mov	r2, lr
 14596 01e6 2346     		mov	r3, r4
 14597 01e8 03CB     		ldmia	r3!, {r0, r1}
 14598 01ea 1060     		str	r0, [r2]	@ unaligned
 14599 01ec 5160     		str	r1, [r2, #4]	@ unaligned
 14600 01ee 1B88     		ldrh	r3, [r3]	@ unaligned
 14601 01f0 1381     		strh	r3, [r2, #8]	@ unaligned
1932:..\src/command_processing.c ****                 break;
 14602              		.loc 1 1932 0
 14603 01f2 14E0     		b	.L574
 14604              	.L573:
1933:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1934:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14605              		.loc 1 1934 0
 14606 01f4 7869     		ldr	r0, [r7, #20]
 14607 01f6 FFF7FEFF 		bl	strlen
 14608 01fa 0346     		mov	r3, r0
 14609 01fc 1A46     		mov	r2, r3
 14610 01fe 7B69     		ldr	r3, [r7, #20]
 14611 0200 1344     		add	r3, r3, r2
 14612 0202 514A     		ldr	r2, .L667+44
 14613 0204 1D46     		mov	r5, r3
 14614 0206 1446     		mov	r4, r2
 14615 0208 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 330


 14616 020a 2860     		str	r0, [r5]	@ unaligned
 14617 020c 6960     		str	r1, [r5, #4]	@ unaligned
 14618 020e AA60     		str	r2, [r5, #8]	@ unaligned
 14619 0210 EB60     		str	r3, [r5, #12]	@ unaligned
 14620 0212 07CC     		ldmia	r4!, {r0, r1, r2}
 14621 0214 2861     		str	r0, [r5, #16]	@ unaligned
 14622 0216 6961     		str	r1, [r5, #20]	@ unaligned
 14623 0218 AA61     		str	r2, [r5, #24]	@ unaligned
1935:..\src/command_processing.c ****                 break;
 14624              		.loc 1 1935 0
 14625 021a 00E0     		b	.L574
 14626              	.L665:
1936:..\src/command_processing.c ****             default:
1937:..\src/command_processing.c ****                 break;
 14627              		.loc 1 1937 0
 14628 021c 00BF     		nop
 14629              	.L574:
1938:..\src/command_processing.c ****         }
1939:..\src/command_processing.c ****         
1940:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14630              		.loc 1 1940 0
 14631 021e D7F88C30 		ldr	r3, [r7, #140]
 14632 0222 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14633 0226 002B     		cmp	r3, #0
 14634 0228 02D0     		beq	.L578
 14635 022a 012B     		cmp	r3, #1
 14636 022c 15D0     		beq	.L579
 14637 022e 26E0     		b	.L577
 14638              	.L578:
1941:..\src/command_processing.c ****             case RIGHT_HAND:
1942:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14639              		.loc 1 1942 0
 14640 0230 7869     		ldr	r0, [r7, #20]
 14641 0232 FFF7FEFF 		bl	strlen
 14642 0236 0346     		mov	r3, r0
 14643 0238 1A46     		mov	r2, r3
 14644 023a 7B69     		ldr	r3, [r7, #20]
 14645 023c 1344     		add	r3, r3, r2
 14646 023e 434A     		ldr	r2, .L667+48
 14647 0240 1D46     		mov	r5, r3
 14648 0242 1446     		mov	r4, r2
 14649 0244 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14650 0246 2860     		str	r0, [r5]	@ unaligned
 14651 0248 6960     		str	r1, [r5, #4]	@ unaligned
 14652 024a AA60     		str	r2, [r5, #8]	@ unaligned
 14653 024c EB60     		str	r3, [r5, #12]	@ unaligned
 14654 024e 2388     		ldrh	r3, [r4]	@ unaligned
 14655 0250 A278     		ldrb	r2, [r4, #2]
 14656 0252 2B82     		strh	r3, [r5, #16]	@ unaligned
 14657 0254 1346     		mov	r3, r2
 14658 0256 AB74     		strb	r3, [r5, #18]
1943:..\src/command_processing.c ****                 break;
 14659              		.loc 1 1943 0
 14660 0258 11E0     		b	.L577
 14661              	.L579:
1944:..\src/command_processing.c ****             case LEFT_HAND:
1945:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 331


 14662              		.loc 1 1945 0
 14663 025a 7869     		ldr	r0, [r7, #20]
 14664 025c FFF7FEFF 		bl	strlen
 14665 0260 0346     		mov	r3, r0
 14666 0262 1A46     		mov	r2, r3
 14667 0264 7B69     		ldr	r3, [r7, #20]
 14668 0266 1344     		add	r3, r3, r2
 14669 0268 394A     		ldr	r2, .L667+52
 14670 026a 1D46     		mov	r5, r3
 14671 026c 1446     		mov	r4, r2
 14672 026e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14673 0270 2860     		str	r0, [r5]	@ unaligned
 14674 0272 6960     		str	r1, [r5, #4]	@ unaligned
 14675 0274 AA60     		str	r2, [r5, #8]	@ unaligned
 14676 0276 EB60     		str	r3, [r5, #12]	@ unaligned
 14677 0278 2388     		ldrh	r3, [r4]	@ unaligned
 14678 027a 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                 break;
 14679              		.loc 1 1946 0
 14680 027c 00BF     		nop
 14681              	.L577:
1947:..\src/command_processing.c ****         }
1948:..\src/command_processing.c **** 
1949:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14682              		.loc 1 1949 0
 14683 027e D7F88C30 		ldr	r3, [r7, #140]
 14684 0282 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14685 0286 012B     		cmp	r3, #1
 14686 0288 02D0     		beq	.L581
 14687 028a 022B     		cmp	r3, #2
 14688 028c 11D0     		beq	.L582
 14689 028e 1FE0     		b	.L663
 14690              	.L581:
1950:..\src/command_processing.c ****             case MARIA:
1951:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14691              		.loc 1 1951 0
 14692 0290 7869     		ldr	r0, [r7, #20]
 14693 0292 FFF7FEFF 		bl	strlen
 14694 0296 0346     		mov	r3, r0
 14695 0298 1A46     		mov	r2, r3
 14696 029a 7B69     		ldr	r3, [r7, #20]
 14697 029c 1344     		add	r3, r3, r2
 14698 029e 2D4A     		ldr	r2, .L667+56
 14699 02a0 1C46     		mov	r4, r3
 14700 02a2 1346     		mov	r3, r2
 14701 02a4 07CB     		ldmia	r3!, {r0, r1, r2}
 14702 02a6 2060     		str	r0, [r4]	@ unaligned
 14703 02a8 6160     		str	r1, [r4, #4]	@ unaligned
 14704 02aa A260     		str	r2, [r4, #8]	@ unaligned
 14705 02ac 1B88     		ldrh	r3, [r3]	@ unaligned
 14706 02ae A381     		strh	r3, [r4, #12]	@ unaligned
1952:..\src/command_processing.c ****                 break;
 14707              		.loc 1 1952 0
 14708 02b0 22E0     		b	.L583
 14709              	.L582:
1953:..\src/command_processing.c ****             case R01:
1954:..\src/command_processing.c ****                 strcat(info_string, "User: R01\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 332


 14710              		.loc 1 1954 0
 14711 02b2 7869     		ldr	r0, [r7, #20]
 14712 02b4 FFF7FEFF 		bl	strlen
 14713 02b8 0346     		mov	r3, r0
 14714 02ba 1A46     		mov	r2, r3
 14715 02bc 7B69     		ldr	r3, [r7, #20]
 14716 02be 1344     		add	r3, r3, r2
 14717 02c0 254A     		ldr	r2, .L667+60
 14718 02c2 1C46     		mov	r4, r3
 14719 02c4 1346     		mov	r3, r2
 14720 02c6 07CB     		ldmia	r3!, {r0, r1, r2}
 14721 02c8 2060     		str	r0, [r4]	@ unaligned
 14722 02ca 6160     		str	r1, [r4, #4]	@ unaligned
 14723 02cc A260     		str	r2, [r4, #8]	@ unaligned
1955:..\src/command_processing.c ****                 break;
 14724              		.loc 1 1955 0
 14725 02ce 13E0     		b	.L583
 14726              	.L663:
1956:..\src/command_processing.c ****             default:
1957:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14727              		.loc 1 1957 0
 14728 02d0 7869     		ldr	r0, [r7, #20]
 14729 02d2 FFF7FEFF 		bl	strlen
 14730 02d6 0346     		mov	r3, r0
 14731 02d8 1A46     		mov	r2, r3
 14732 02da 7B69     		ldr	r3, [r7, #20]
 14733 02dc 1344     		add	r3, r3, r2
 14734 02de 1F4A     		ldr	r2, .L667+64
 14735 02e0 1D46     		mov	r5, r3
 14736 02e2 1446     		mov	r4, r2
 14737 02e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14738 02e6 2860     		str	r0, [r5]	@ unaligned
 14739 02e8 6960     		str	r1, [r5, #4]	@ unaligned
 14740 02ea AA60     		str	r2, [r5, #8]	@ unaligned
 14741 02ec EB60     		str	r3, [r5, #12]	@ unaligned
 14742 02ee 2068     		ldr	r0, [r4]	@ unaligned
 14743 02f0 2861     		str	r0, [r5, #16]	@ unaligned
 14744 02f2 2379     		ldrb	r3, [r4, #4]
 14745 02f4 2B75     		strb	r3, [r5, #20]
1958:..\src/command_processing.c ****                 break;
 14746              		.loc 1 1958 0
 14747 02f6 00BF     		nop
 14748              	.L583:
1959:..\src/command_processing.c ****         }
1960:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14749              		.loc 1 1960 0
 14750 02f8 7869     		ldr	r0, [r7, #20]
 14751 02fa FFF7FEFF 		bl	strlen
 14752 02fe 0346     		mov	r3, r0
 14753 0300 1A46     		mov	r2, r3
 14754 0302 7B69     		ldr	r3, [r7, #20]
 14755 0304 1344     		add	r3, r3, r2
 14756 0306 064A     		ldr	r2, .L667+4
 14757 0308 1188     		ldrh	r1, [r2]	@ unaligned
 14758 030a 9278     		ldrb	r2, [r2, #2]
 14759 030c 1980     		strh	r1, [r3]	@ unaligned
 14760 030e 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 333


 14761              	.LBB25:
1961:..\src/command_processing.c ****         
1962:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14762              		.loc 1 1962 0
 14763 0310 0023     		movs	r3, #0
 14764 0312 87F89330 		strb	r3, [r7, #147]
 14765 0316 01F070B8 		b	.L584
 14766              	.L668:
 14767 031a 00BF     		.align	2
 14768              	.L667:
 14769 031c 00000000 		.word	c_mem
 14770 0320 50110000 		.word	.LC152
 14771 0324 54110000 		.word	.LC153
 14772 0328 68110000 		.word	.LC154
 14773 032c 88110000 		.word	.LC155
 14774 0330 90110000 		.word	.LC156
 14775 0334 A0110000 		.word	.LC157
 14776 0338 AC110000 		.word	.LC158
 14777 033c C4110000 		.word	.LC159
 14778 0340 E0110000 		.word	.LC160
 14779 0344 08120000 		.word	.LC161
 14780 0348 34120000 		.word	.LC162
 14781 034c 50120000 		.word	.LC163
 14782 0350 64120000 		.word	.LC164
 14783 0354 78120000 		.word	.LC165
 14784 0358 88120000 		.word	.LC166
 14785 035c 94120000 		.word	.LC167
 14786              	.L637:
 14787              	.LBB26:
1963:..\src/command_processing.c ****             
1964:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14788              		.loc 1 1964 0
 14789 0360 97F89330 		ldrb	r3, [r7, #147]
 14790 0364 87F88B30 		strb	r3, [r7, #139]
1965:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14791              		.loc 1 1965 0
 14792 0368 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 14793 036c 1346     		mov	r3, r2
 14794 036e DB00     		lsls	r3, r3, #3
 14795 0370 9B1A     		subs	r3, r3, r2
 14796 0372 1B01     		lsls	r3, r3, #4
 14797 0374 B033     		adds	r3, r3, #176
 14798 0376 D7F88C20 		ldr	r2, [r7, #140]
 14799 037a 1344     		add	r3, r3, r2
 14800 037c C7F88430 		str	r3, [r7, #132]
1966:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14801              		.loc 1 1966 0
 14802 0380 D7F88430 		ldr	r3, [r7, #132]
 14803 0384 93F86030 		ldrb	r3, [r3, #96]
 14804 0388 87F88330 		strb	r3, [r7, #131]
1967:..\src/command_processing.c ****                   
1968:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14805              		.loc 1 1968 0
 14806 038c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14807 0390 5A1C     		adds	r2, r3, #1
 14808 0392 07F11C03 		add	r3, r7, #28
 14809 0396 AE49     		ldr	r1, .L669
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 334


 14810 0398 1846     		mov	r0, r3
 14811 039a FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****             strcat(info_string, str);
 14812              		.loc 1 1969 0
 14813 039e 07F11C03 		add	r3, r7, #28
 14814 03a2 1946     		mov	r1, r3
 14815 03a4 7869     		ldr	r0, [r7, #20]
 14816 03a6 FFF7FEFF 		bl	strcat
1970:..\src/command_processing.c ****                         
1971:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14817              		.loc 1 1971 0
 14818 03aa 7869     		ldr	r0, [r7, #20]
 14819 03ac FFF7FEFF 		bl	strlen
 14820 03b0 0346     		mov	r3, r0
 14821 03b2 1A46     		mov	r2, r3
 14822 03b4 7B69     		ldr	r3, [r7, #20]
 14823 03b6 1344     		add	r3, r3, r2
 14824 03b8 A64A     		ldr	r2, .L669+4
 14825 03ba 1C46     		mov	r4, r3
 14826 03bc 1546     		mov	r5, r2
 14827 03be 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14828 03c0 2060     		str	r0, [r4]	@ unaligned
 14829 03c2 6160     		str	r1, [r4, #4]	@ unaligned
 14830 03c4 A260     		str	r2, [r4, #8]	@ unaligned
 14831 03c6 E360     		str	r3, [r4, #12]	@ unaligned
1972:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14832              		.loc 1 1972 0
 14833 03c8 D7F88430 		ldr	r3, [r7, #132]
 14834 03cc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14835 03d0 022B     		cmp	r3, #2
 14836 03d2 10D1     		bne	.L585
1973:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14837              		.loc 1 1973 0
 14838 03d4 7869     		ldr	r0, [r7, #20]
 14839 03d6 FFF7FEFF 		bl	strlen
 14840 03da 0346     		mov	r3, r0
 14841 03dc 1A46     		mov	r2, r3
 14842 03de 7B69     		ldr	r3, [r7, #20]
 14843 03e0 1344     		add	r3, r3, r2
 14844 03e2 9D4A     		ldr	r2, .L669+8
 14845 03e4 1C46     		mov	r4, r3
 14846 03e6 1346     		mov	r3, r2
 14847 03e8 07CB     		ldmia	r3!, {r0, r1, r2}
 14848 03ea 2060     		str	r0, [r4]	@ unaligned
 14849 03ec 6160     		str	r1, [r4, #4]	@ unaligned
 14850 03ee A260     		str	r2, [r4, #8]	@ unaligned
 14851 03f0 1B88     		ldrh	r3, [r3]	@ unaligned
 14852 03f2 A381     		strh	r3, [r4, #12]	@ unaligned
 14853 03f4 25E0     		b	.L586
 14854              	.L585:
1974:..\src/command_processing.c ****             else {
1975:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14855              		.loc 1 1975 0
 14856 03f6 D7F88430 		ldr	r3, [r7, #132]
 14857 03fa 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14858 03fe 012B     		cmp	r3, #1
 14859 0400 0FD1     		bne	.L587
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 335


1976:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14860              		.loc 1 1976 0
 14861 0402 7869     		ldr	r0, [r7, #20]
 14862 0404 FFF7FEFF 		bl	strlen
 14863 0408 0346     		mov	r3, r0
 14864 040a 1A46     		mov	r2, r3
 14865 040c 7B69     		ldr	r3, [r7, #20]
 14866 040e 1344     		add	r3, r3, r2
 14867 0410 9249     		ldr	r1, .L669+12
 14868 0412 1A46     		mov	r2, r3
 14869 0414 0B46     		mov	r3, r1
 14870 0416 03CB     		ldmia	r3!, {r0, r1}
 14871 0418 1060     		str	r0, [r2]	@ unaligned
 14872 041a 5160     		str	r1, [r2, #4]	@ unaligned
 14873 041c 1B78     		ldrb	r3, [r3]
 14874 041e 1372     		strb	r3, [r2, #8]
 14875 0420 0FE0     		b	.L586
 14876              	.L587:
1977:..\src/command_processing.c ****                 else
1978:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14877              		.loc 1 1978 0
 14878 0422 7869     		ldr	r0, [r7, #20]
 14879 0424 FFF7FEFF 		bl	strlen
 14880 0428 0346     		mov	r3, r0
 14881 042a 1A46     		mov	r2, r3
 14882 042c 7B69     		ldr	r3, [r7, #20]
 14883 042e 1344     		add	r3, r3, r2
 14884 0430 8B4A     		ldr	r2, .L669+16
 14885 0432 1C46     		mov	r4, r3
 14886 0434 1346     		mov	r3, r2
 14887 0436 07CB     		ldmia	r3!, {r0, r1, r2}
 14888 0438 2060     		str	r0, [r4]	@ unaligned
 14889 043a 6160     		str	r1, [r4, #4]	@ unaligned
 14890 043c A260     		str	r2, [r4, #8]	@ unaligned
 14891 043e 1B88     		ldrh	r3, [r3]	@ unaligned
 14892 0440 A381     		strh	r3, [r4, #12]	@ unaligned
 14893              	.L586:
1979:..\src/command_processing.c ****             }
1980:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14894              		.loc 1 1980 0
 14895 0442 D7F88430 		ldr	r3, [r7, #132]
 14896 0446 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14897 044a 022B     		cmp	r3, #2
 14898 044c 13D1     		bne	.L588
1981:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14899              		.loc 1 1981 0
 14900 044e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14901 0452 844A     		ldr	r2, .L669+20
 14902 0454 1B01     		lsls	r3, r3, #4
 14903 0456 1344     		add	r3, r3, r2
 14904 0458 0433     		adds	r3, r3, #4
 14905 045a 1A68     		ldr	r2, [r3]
 14906 045c 07F11C03 		add	r3, r7, #28
 14907 0460 8149     		ldr	r1, .L669+24
 14908 0462 1846     		mov	r0, r3
 14909 0464 FFF7FEFF 		bl	sprintf
1982:..\src/command_processing.c ****                 strcat(info_string,str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 336


 14910              		.loc 1 1982 0
 14911 0468 07F11C03 		add	r3, r7, #28
 14912 046c 1946     		mov	r1, r3
 14913 046e 7869     		ldr	r0, [r7, #20]
 14914 0470 FFF7FEFF 		bl	strcat
 14915 0474 39E0     		b	.L589
 14916              	.L588:
1983:..\src/command_processing.c ****             }
1984:..\src/command_processing.c ****             else {
1985:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14917              		.loc 1 1985 0
 14918 0476 D7F88430 		ldr	r3, [r7, #132]
 14919 047a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14920 047e 012B     		cmp	r3, #1
 14921 0480 13D1     		bne	.L590
1986:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14922              		.loc 1 1986 0
 14923 0482 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14924 0486 774A     		ldr	r2, .L669+20
 14925 0488 1B01     		lsls	r3, r3, #4
 14926 048a 1344     		add	r3, r3, r2
 14927 048c 0833     		adds	r3, r3, #8
 14928 048e 1A68     		ldr	r2, [r3]
 14929 0490 07F11C03 		add	r3, r7, #28
 14930 0494 7449     		ldr	r1, .L669+24
 14931 0496 1846     		mov	r0, r3
 14932 0498 FFF7FEFF 		bl	sprintf
1987:..\src/command_processing.c ****                     strcat(info_string,str);
 14933              		.loc 1 1987 0
 14934 049c 07F11C03 		add	r3, r7, #28
 14935 04a0 1946     		mov	r1, r3
 14936 04a2 7869     		ldr	r0, [r7, #20]
 14937 04a4 FFF7FEFF 		bl	strcat
 14938 04a8 1FE0     		b	.L589
 14939              	.L590:
1988:..\src/command_processing.c ****                 }
1989:..\src/command_processing.c ****                 else {
1990:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14940              		.loc 1 1990 0
 14941 04aa 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14942 04ae 6D4A     		ldr	r2, .L669+20
 14943 04b0 1B01     		lsls	r3, r3, #4
 14944 04b2 1344     		add	r3, r3, r2
 14945 04b4 1968     		ldr	r1, [r3]
 14946 04b6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14947 04ba D7F88C00 		ldr	r0, [r7, #140]
 14948 04be 1346     		mov	r3, r2
 14949 04c0 5B00     		lsls	r3, r3, #1
 14950 04c2 1344     		add	r3, r3, r2
 14951 04c4 1B01     		lsls	r3, r3, #4
 14952 04c6 0344     		add	r3, r3, r0
 14953 04c8 03F29513 		addw	r3, r3, #405
 14954 04cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14955 04ce 41FA03F2 		asr	r2, r1, r3
 14956 04d2 07F11C03 		add	r3, r7, #28
 14957 04d6 6449     		ldr	r1, .L669+24
 14958 04d8 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 337


 14959 04da FFF7FEFF 		bl	sprintf
1991:..\src/command_processing.c ****                     strcat(info_string,str);
 14960              		.loc 1 1991 0
 14961 04de 07F11C03 		add	r3, r7, #28
 14962 04e2 1946     		mov	r1, r3
 14963 04e4 7869     		ldr	r0, [r7, #20]
 14964 04e6 FFF7FEFF 		bl	strcat
 14965              	.L589:
1992:..\src/command_processing.c ****                 }
1993:..\src/command_processing.c ****             }
1994:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14966              		.loc 1 1994 0
 14967 04ea 7869     		ldr	r0, [r7, #20]
 14968 04ec FFF7FEFF 		bl	strlen
 14969 04f0 0346     		mov	r3, r0
 14970 04f2 1A46     		mov	r2, r3
 14971 04f4 7B69     		ldr	r3, [r7, #20]
 14972 04f6 1344     		add	r3, r3, r2
 14973 04f8 5C4A     		ldr	r2, .L669+28
 14974 04fa 1188     		ldrh	r1, [r2]	@ unaligned
 14975 04fc 9278     		ldrb	r2, [r2, #2]
 14976 04fe 1980     		strh	r1, [r3]	@ unaligned
 14977 0500 9A70     		strb	r2, [r3, #2]
1995:..\src/command_processing.c **** 
1996:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14978              		.loc 1 1996 0
 14979 0502 07F11C03 		add	r3, r7, #28
 14980 0506 5A4A     		ldr	r2, .L669+32
 14981 0508 1C46     		mov	r4, r3
 14982 050a 1346     		mov	r3, r2
 14983 050c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14984 050e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1997:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14985              		.loc 1 1997 0
 14986 0512 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 14987 0516 574A     		ldr	r2, .L669+36
 14988 0518 1B01     		lsls	r3, r3, #4
 14989 051a 1344     		add	r3, r3, r2
 14990 051c 0C33     		adds	r3, r3, #12
 14991 051e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14992 0520 03F00103 		and	r3, r3, #1
 14993 0524 002B     		cmp	r3, #0
 14994 0526 0FD0     		beq	.L591
1998:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14995              		.loc 1 1998 0
 14996 0528 07F11C03 		add	r3, r7, #28
 14997 052c 1846     		mov	r0, r3
 14998 052e FFF7FEFF 		bl	strlen
 14999 0532 0346     		mov	r3, r0
 15000 0534 1A46     		mov	r2, r3
 15001 0536 07F11C03 		add	r3, r7, #28
 15002 053a 1344     		add	r3, r3, r2
 15003 053c 4E4A     		ldr	r2, .L669+40
 15004 053e 1068     		ldr	r0, [r2]	@ unaligned
 15005 0540 1860     		str	r0, [r3]	@ unaligned
 15006 0542 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15007 0544 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 338


 15008 0546 0EE0     		b	.L592
 15009              	.L591:
1999:..\src/command_processing.c ****             } else {
2000:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 15010              		.loc 1 2000 0
 15011 0548 07F11C03 		add	r3, r7, #28
 15012 054c 1846     		mov	r0, r3
 15013 054e FFF7FEFF 		bl	strlen
 15014 0552 0346     		mov	r3, r0
 15015 0554 1A46     		mov	r2, r3
 15016 0556 07F11C03 		add	r3, r7, #28
 15017 055a 1344     		add	r3, r3, r2
 15018 055c 474A     		ldr	r2, .L669+44
 15019 055e 1068     		ldr	r0, [r2]	@ unaligned
 15020 0560 1860     		str	r0, [r3]	@ unaligned
 15021 0562 1279     		ldrb	r2, [r2, #4]
 15022 0564 1A71     		strb	r2, [r3, #4]
 15023              	.L592:
2001:..\src/command_processing.c ****             }
2002:..\src/command_processing.c ****             strcat(info_string, str);
 15024              		.loc 1 2002 0
 15025 0566 07F11C03 		add	r3, r7, #28
 15026 056a 1946     		mov	r1, r3
 15027 056c 7869     		ldr	r0, [r7, #20]
 15028 056e FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****                         
2004:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 15029              		.loc 1 2004 0
 15030 0572 7869     		ldr	r0, [r7, #20]
 15031 0574 FFF7FEFF 		bl	strlen
 15032 0578 0346     		mov	r3, r0
 15033 057a 1A46     		mov	r2, r3
 15034 057c 7B69     		ldr	r3, [r7, #20]
 15035 057e 1344     		add	r3, r3, r2
 15036 0580 3F4A     		ldr	r2, .L669+48
 15037 0582 1D46     		mov	r5, r3
 15038 0584 1446     		mov	r4, r2
 15039 0586 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15040 0588 2860     		str	r0, [r5]	@ unaligned
 15041 058a 6960     		str	r1, [r5, #4]	@ unaligned
 15042 058c AA60     		str	r2, [r5, #8]	@ unaligned
 15043 058e EB60     		str	r3, [r5, #12]	@ unaligned
 15044 0590 03CC     		ldmia	r4!, {r0, r1}
 15045 0592 2861     		str	r0, [r5, #16]	@ unaligned
 15046 0594 6961     		str	r1, [r5, #20]	@ unaligned
 15047 0596 2388     		ldrh	r3, [r4]	@ unaligned
 15048 0598 A278     		ldrb	r2, [r4, #2]
 15049 059a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15050 059c 1346     		mov	r3, r2
 15051 059e AB76     		strb	r3, [r5, #26]
2005:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 15052              		.loc 1 2005 0
 15053 05a0 D7F88430 		ldr	r3, [r7, #132]
 15054 05a4 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 15055 05a8 012B     		cmp	r3, #1
 15056 05aa 0CD1     		bne	.L593
2006:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 339


 15057              		.loc 1 2006 0
 15058 05ac 7869     		ldr	r0, [r7, #20]
 15059 05ae FFF7FEFF 		bl	strlen
 15060 05b2 0346     		mov	r3, r0
 15061 05b4 1A46     		mov	r2, r3
 15062 05b6 7B69     		ldr	r3, [r7, #20]
 15063 05b8 1344     		add	r3, r3, r2
 15064 05ba 324A     		ldr	r2, .L669+52
 15065 05bc 1068     		ldr	r0, [r2]	@ unaligned
 15066 05be 1860     		str	r0, [r3]	@ unaligned
 15067 05c0 1279     		ldrb	r2, [r2, #4]
 15068 05c2 1A71     		strb	r2, [r3, #4]
 15069 05c4 09E0     		b	.L594
 15070              	.L593:
2007:..\src/command_processing.c ****             else
2008:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 15071              		.loc 1 2008 0
 15072 05c6 7869     		ldr	r0, [r7, #20]
 15073 05c8 FFF7FEFF 		bl	strlen
 15074 05cc 0346     		mov	r3, r0
 15075 05ce 1A46     		mov	r2, r3
 15076 05d0 7B69     		ldr	r3, [r7, #20]
 15077 05d2 1344     		add	r3, r3, r2
 15078 05d4 2C4A     		ldr	r2, .L669+56
 15079 05d6 1068     		ldr	r0, [r2]	@ unaligned
 15080 05d8 1860     		str	r0, [r3]	@ unaligned
 15081              	.L594:
2009:..\src/command_processing.c ****             
2010:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15082              		.loc 1 2010 0
 15083 05da 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15084 05de 2B4A     		ldr	r2, .L669+60
 15085 05e0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 15086 05e4 1A46     		mov	r2, r3
 15087 05e6 07F11C03 		add	r3, r7, #28
 15088 05ea 2949     		ldr	r1, .L669+64
 15089 05ec 1846     		mov	r0, r3
 15090 05ee FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****             strcat(info_string, str);
 15091              		.loc 1 2011 0
 15092 05f2 07F11C03 		add	r3, r7, #28
 15093 05f6 1946     		mov	r1, r3
 15094 05f8 7869     		ldr	r0, [r7, #20]
 15095 05fa FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c **** 
2013:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 15096              		.loc 1 2013 0
 15097 05fe 7869     		ldr	r0, [r7, #20]
 15098 0600 FFF7FEFF 		bl	strlen
 15099 0604 0346     		mov	r3, r0
 15100 0606 1A46     		mov	r2, r3
 15101 0608 7B69     		ldr	r3, [r7, #20]
 15102 060a 1344     		add	r3, r3, r2
 15103 060c 214A     		ldr	r2, .L669+68
 15104 060e 1D46     		mov	r5, r3
 15105 0610 1446     		mov	r4, r2
 15106 0612 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 340


 15107 0614 2860     		str	r0, [r5]	@ unaligned
 15108 0616 6960     		str	r1, [r5, #4]	@ unaligned
 15109 0618 AA60     		str	r2, [r5, #8]	@ unaligned
 15110 061a EB60     		str	r3, [r5, #12]	@ unaligned
 15111 061c 2068     		ldr	r0, [r4]	@ unaligned
 15112 061e 2861     		str	r0, [r5, #16]	@ unaligned
 15113 0620 A388     		ldrh	r3, [r4, #4]	@ unaligned
 15114 0622 AB82     		strh	r3, [r5, #20]	@ unaligned
2014:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 15115              		.loc 1 2014 0
 15116 0624 7869     		ldr	r0, [r7, #20]
 15117 0626 FFF7FEFF 		bl	strlen
 15118 062a 0346     		mov	r3, r0
 15119 062c 1A46     		mov	r2, r3
 15120 062e 7B69     		ldr	r3, [r7, #20]
 15121 0630 1344     		add	r3, r3, r2
 15122 0632 194A     		ldr	r2, .L669+72
 15123 0634 1C46     		mov	r4, r3
 15124 0636 1346     		mov	r3, r2
 15125 0638 07CB     		ldmia	r3!, {r0, r1, r2}
 15126 063a 2060     		str	r0, [r4]	@ unaligned
 15127 063c 6160     		str	r1, [r4, #4]	@ unaligned
 15128 063e A260     		str	r2, [r4, #8]	@ unaligned
 15129 0640 1A88     		ldrh	r2, [r3]	@ unaligned
 15130 0642 9B78     		ldrb	r3, [r3, #2]
 15131 0644 A281     		strh	r2, [r4, #12]	@ unaligned
 15132 0646 A373     		strb	r3, [r4, #14]
2015:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 15133              		.loc 1 2015 0
 15134 0648 0023     		movs	r3, #0
 15135 064a C7F89430 		str	r3, [r7, #148]
 15136 064e 64E0     		b	.L595
 15137              	.L670:
 15138              		.align	2
 15139              	.L669:
 15140 0650 AC120000 		.word	.LC168
 15141 0654 BC120000 		.word	.LC169
 15142 0658 CC120000 		.word	.LC170
 15143 065c DC120000 		.word	.LC171
 15144 0660 E8120000 		.word	.LC172
 15145 0664 00000000 		.word	g_refOld
 15146 0668 F8120000 		.word	.LC173
 15147 066c 50110000 		.word	.LC152
 15148 0670 FC120000 		.word	.LC174
 15149 0674 00000000 		.word	g_ref
 15150 0678 0C130000 		.word	.LC175
 15151 067c 14130000 		.word	.LC176
 15152 0680 1C130000 		.word	.LC177
 15153 0684 38130000 		.word	.LC178
 15154 0688 40130000 		.word	.LC179
 15155 068c 00000000 		.word	dev_pwm_limit
 15156 0690 44130000 		.word	.LC180
 15157 0694 54130000 		.word	.LC181
 15158 0698 6C130000 		.word	.LC182
 15159              	.L597:
2016:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15160              		.loc 1 2016 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 341


 15161 069c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15162 06a0 B849     		ldr	r1, .L671
 15163 06a2 1346     		mov	r3, r2
 15164 06a4 5B00     		lsls	r3, r3, #1
 15165 06a6 1344     		add	r3, r3, r2
 15166 06a8 9B00     		lsls	r3, r3, #2
 15167 06aa 1344     		add	r3, r3, r2
 15168 06ac D7F89420 		ldr	r2, [r7, #148]
 15169 06b0 1344     		add	r3, r3, r2
 15170 06b2 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15171 06b6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 15172 06ba D7F88C00 		ldr	r0, [r7, #140]
 15173 06be 1346     		mov	r3, r2
 15174 06c0 5B00     		lsls	r3, r3, #1
 15175 06c2 1344     		add	r3, r3, r2
 15176 06c4 1B01     		lsls	r3, r3, #4
 15177 06c6 C218     		adds	r2, r0, r3
 15178 06c8 D7F89430 		ldr	r3, [r7, #148]
 15179 06cc 1344     		add	r3, r3, r2
 15180 06ce 03F29513 		addw	r3, r3, #405
 15181 06d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15182 06d4 41FA03F2 		asr	r2, r1, r3
 15183 06d8 07F11C03 		add	r3, r7, #28
 15184 06dc AA49     		ldr	r1, .L671+4
 15185 06de 1846     		mov	r0, r3
 15186 06e0 FFF7FEFF 		bl	sprintf
2017:..\src/command_processing.c ****                 strcat(info_string, str);
 15187              		.loc 1 2017 0
 15188 06e4 07F11C03 		add	r3, r7, #28
 15189 06e8 1946     		mov	r1, r3
 15190 06ea 7869     		ldr	r0, [r7, #20]
 15191 06ec FFF7FEFF 		bl	strcat
2018:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15192              		.loc 1 2018 0
 15193 06f0 D7F89430 		ldr	r3, [r7, #148]
 15194 06f4 022B     		cmp	r3, #2
 15195 06f6 0BD0     		beq	.L596
2019:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15196              		.loc 1 2019 0
 15197 06f8 7869     		ldr	r0, [r7, #20]
 15198 06fa FFF7FEFF 		bl	strlen
 15199 06fe 0346     		mov	r3, r0
 15200 0700 1A46     		mov	r2, r3
 15201 0702 7B69     		ldr	r3, [r7, #20]
 15202 0704 1344     		add	r3, r3, r2
 15203 0706 A14A     		ldr	r2, .L671+8
 15204 0708 1188     		ldrh	r1, [r2]	@ unaligned
 15205 070a 9278     		ldrb	r2, [r2, #2]
 15206 070c 1980     		strh	r1, [r3]	@ unaligned
 15207 070e 9A70     		strb	r2, [r3, #2]
 15208              	.L596:
2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15209              		.loc 1 2015 0 discriminator 2
 15210 0710 D7F89430 		ldr	r3, [r7, #148]
 15211 0714 0133     		adds	r3, r3, #1
 15212 0716 C7F89430 		str	r3, [r7, #148]
 15213              	.L595:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 342


2015:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15214              		.loc 1 2015 0 is_stmt 0 discriminator 1
 15215 071a D7F89430 		ldr	r3, [r7, #148]
 15216 071e 022B     		cmp	r3, #2
 15217 0720 BCDD     		ble	.L597
2020:..\src/command_processing.c ****                 }                
2021:..\src/command_processing.c ****             }
2022:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15218              		.loc 1 2022 0 is_stmt 1
 15219 0722 7869     		ldr	r0, [r7, #20]
 15220 0724 FFF7FEFF 		bl	strlen
 15221 0728 0346     		mov	r3, r0
 15222 072a 1A46     		mov	r2, r3
 15223 072c 7B69     		ldr	r3, [r7, #20]
 15224 072e 1344     		add	r3, r3, r2
 15225 0730 974A     		ldr	r2, .L671+12
 15226 0732 1188     		ldrh	r1, [r2]	@ unaligned
 15227 0734 9278     		ldrb	r2, [r2, #2]
 15228 0736 1980     		strh	r1, [r3]	@ unaligned
 15229 0738 9A70     		strb	r2, [r3, #2]
2023:..\src/command_processing.c ****             
2024:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15230              		.loc 1 2024 0
 15231 073a D7F88430 		ldr	r3, [r7, #132]
 15232 073e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15233 0742 062B     		cmp	r3, #6
 15234 0744 1AD1     		bne	.L598
2025:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15235              		.loc 1 2025 0
 15236 0746 934B     		ldr	r3, .L671+16
 15237 0748 1A6A     		ldr	r2, [r3, #32]
 15238 074a 924B     		ldr	r3, .L671+16
 15239 074c 5B6A     		ldr	r3, [r3, #36]
 15240 074e 07F11C00 		add	r0, r7, #28
 15241 0752 9149     		ldr	r1, .L671+20
 15242 0754 FFF7FEFF 		bl	sprintf
2026:..\src/command_processing.c ****                 strcat(info_string, str);
 15243              		.loc 1 2026 0
 15244 0758 07F11C03 		add	r3, r7, #28
 15245 075c 1946     		mov	r1, r3
 15246 075e 7869     		ldr	r0, [r7, #20]
 15247 0760 FFF7FEFF 		bl	strcat
2027:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15248              		.loc 1 2027 0
 15249 0764 7869     		ldr	r0, [r7, #20]
 15250 0766 FFF7FEFF 		bl	strlen
 15251 076a 0346     		mov	r3, r0
 15252 076c 1A46     		mov	r2, r3
 15253 076e 7B69     		ldr	r3, [r7, #20]
 15254 0770 1344     		add	r3, r3, r2
 15255 0772 874A     		ldr	r2, .L671+12
 15256 0774 1188     		ldrh	r1, [r2]	@ unaligned
 15257 0776 9278     		ldrb	r2, [r2, #2]
 15258 0778 1980     		strh	r1, [r3]	@ unaligned
 15259 077a 9A70     		strb	r2, [r3, #2]
 15260              	.L598:
2028:..\src/command_processing.c ****             }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 343


2029:..\src/command_processing.c **** 
2030:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15261              		.loc 1 2030 0
 15262 077c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15263 0780 591C     		adds	r1, r3, #1
 15264 0782 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15265 0786 854A     		ldr	r2, .L671+24
 15266 0788 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15267 078c 07F11C00 		add	r0, r7, #28
 15268 0790 0A46     		mov	r2, r1
 15269 0792 8349     		ldr	r1, .L671+28
 15270 0794 FFF7FEFF 		bl	sprintf
2031:..\src/command_processing.c ****             strcat(info_string, str);
 15271              		.loc 1 2031 0
 15272 0798 07F11C03 		add	r3, r7, #28
 15273 079c 1946     		mov	r1, r3
 15274 079e 7869     		ldr	r0, [r7, #20]
 15275 07a0 FFF7FEFF 		bl	strcat
2032:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15276              		.loc 1 2032 0
 15277 07a4 7869     		ldr	r0, [r7, #20]
 15278 07a6 FFF7FEFF 		bl	strlen
 15279 07aa 0346     		mov	r3, r0
 15280 07ac 1A46     		mov	r2, r3
 15281 07ae 7B69     		ldr	r3, [r7, #20]
 15282 07b0 1344     		add	r3, r3, r2
 15283 07b2 774A     		ldr	r2, .L671+12
 15284 07b4 1188     		ldrh	r1, [r2]	@ unaligned
 15285 07b6 9278     		ldrb	r2, [r2, #2]
 15286 07b8 1980     		strh	r1, [r3]	@ unaligned
 15287 07ba 9A70     		strb	r2, [r3, #2]
2033:..\src/command_processing.c ****             
2034:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15288              		.loc 1 2034 0
 15289 07bc 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15290 07c0 591C     		adds	r1, r3, #1
 15291 07c2 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15292 07c6 774A     		ldr	r2, .L671+32
 15293 07c8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15294 07cc 07F11C00 		add	r0, r7, #28
 15295 07d0 0A46     		mov	r2, r1
 15296 07d2 7549     		ldr	r1, .L671+36
 15297 07d4 FFF7FEFF 		bl	sprintf
2035:..\src/command_processing.c ****             strcat(info_string, str);
 15298              		.loc 1 2035 0
 15299 07d8 07F11C03 		add	r3, r7, #28
 15300 07dc 1946     		mov	r1, r3
 15301 07de 7869     		ldr	r0, [r7, #20]
 15302 07e0 FFF7FEFF 		bl	strcat
2036:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15303              		.loc 1 2036 0
 15304 07e4 7869     		ldr	r0, [r7, #20]
 15305 07e6 FFF7FEFF 		bl	strlen
 15306 07ea 0346     		mov	r3, r0
 15307 07ec 1A46     		mov	r2, r3
 15308 07ee 7B69     		ldr	r3, [r7, #20]
 15309 07f0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 344


 15310 07f2 674A     		ldr	r2, .L671+12
 15311 07f4 1188     		ldrh	r1, [r2]	@ unaligned
 15312 07f6 9278     		ldrb	r2, [r2, #2]
 15313 07f8 1980     		strh	r1, [r3]	@ unaligned
 15314 07fa 9A70     		strb	r2, [r3, #2]
2037:..\src/command_processing.c **** 
2038:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15315              		.loc 1 2038 0
 15316 07fc 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15317 0800 5C1C     		adds	r4, r3, #1
 15318 0802 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15319 0806 5F4A     		ldr	r2, .L671
 15320 0808 3421     		movs	r1, #52
 15321 080a 01FB03F3 		mul	r3, r1, r3
 15322 080e 1344     		add	r3, r3, r2
 15323 0810 0C33     		adds	r3, r3, #12
 15324 0812 1B68     		ldr	r3, [r3]
 15325 0814 07F11C00 		add	r0, r7, #28
 15326 0818 2246     		mov	r2, r4
 15327 081a 6449     		ldr	r1, .L671+40
 15328 081c FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****             strcat(info_string, str);
 15329              		.loc 1 2039 0
 15330 0820 07F11C03 		add	r3, r7, #28
 15331 0824 1946     		mov	r1, r3
 15332 0826 7869     		ldr	r0, [r7, #20]
 15333 0828 FFF7FEFF 		bl	strcat
2040:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15334              		.loc 1 2040 0
 15335 082c 7869     		ldr	r0, [r7, #20]
 15336 082e FFF7FEFF 		bl	strlen
 15337 0832 0346     		mov	r3, r0
 15338 0834 1A46     		mov	r2, r3
 15339 0836 7B69     		ldr	r3, [r7, #20]
 15340 0838 1344     		add	r3, r3, r2
 15341 083a 554A     		ldr	r2, .L671+12
 15342 083c 1188     		ldrh	r1, [r2]	@ unaligned
 15343 083e 9278     		ldrb	r2, [r2, #2]
 15344 0840 1980     		strh	r1, [r3]	@ unaligned
 15345 0842 9A70     		strb	r2, [r3, #2]
2041:..\src/command_processing.c ****             
2042:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15346              		.loc 1 2042 0
 15347 0844 D7F88430 		ldr	r3, [r7, #132]
 15348 0848 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15349 084c 012B     		cmp	r3, #1
 15350 084e 23D1     		bne	.L599
2043:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15351              		.loc 1 2043 0
 15352 0850 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15353 0854 5C1C     		adds	r4, r3, #1
 15354 0856 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 15355 085a 4A4A     		ldr	r2, .L671
 15356 085c 3421     		movs	r1, #52
 15357 085e 01FB03F3 		mul	r3, r1, r3
 15358 0862 1344     		add	r3, r3, r2
 15359 0864 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 345


 15360 0866 1B68     		ldr	r3, [r3]
 15361 0868 07F11C00 		add	r0, r7, #28
 15362 086c 2246     		mov	r2, r4
 15363 086e 5049     		ldr	r1, .L671+44
 15364 0870 FFF7FEFF 		bl	sprintf
2044:..\src/command_processing.c ****                 strcat(info_string, str);
 15365              		.loc 1 2044 0
 15366 0874 07F11C03 		add	r3, r7, #28
 15367 0878 1946     		mov	r1, r3
 15368 087a 7869     		ldr	r0, [r7, #20]
 15369 087c FFF7FEFF 		bl	strcat
2045:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15370              		.loc 1 2045 0
 15371 0880 7869     		ldr	r0, [r7, #20]
 15372 0882 FFF7FEFF 		bl	strlen
 15373 0886 0346     		mov	r3, r0
 15374 0888 1A46     		mov	r2, r3
 15375 088a 7B69     		ldr	r3, [r7, #20]
 15376 088c 1344     		add	r3, r3, r2
 15377 088e 404A     		ldr	r2, .L671+12
 15378 0890 1188     		ldrh	r1, [r2]	@ unaligned
 15379 0892 9278     		ldrb	r2, [r2, #2]
 15380 0894 1980     		strh	r1, [r3]	@ unaligned
 15381 0896 9A70     		strb	r2, [r3, #2]
 15382              	.L599:
2046:..\src/command_processing.c ****             }
2047:..\src/command_processing.c ****             
2048:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15383              		.loc 1 2048 0
 15384 0898 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15385 089c 5A1C     		adds	r2, r3, #1
 15386 089e 07F11C03 		add	r3, r7, #28
 15387 08a2 4449     		ldr	r1, .L671+48
 15388 08a4 1846     		mov	r0, r3
 15389 08a6 FFF7FEFF 		bl	sprintf
2049:..\src/command_processing.c ****             strcat(info_string, str);
 15390              		.loc 1 2049 0
 15391 08aa 07F11C03 		add	r3, r7, #28
 15392 08ae 1946     		mov	r1, r3
 15393 08b0 7869     		ldr	r0, [r7, #20]
 15394 08b2 FFF7FEFF 		bl	strcat
2050:..\src/command_processing.c **** 
2051:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15395              		.loc 1 2051 0
 15396 08b6 7869     		ldr	r0, [r7, #20]
 15397 08b8 FFF7FEFF 		bl	strlen
 15398 08bc 0346     		mov	r3, r0
 15399 08be 1A46     		mov	r2, r3
 15400 08c0 7B69     		ldr	r3, [r7, #20]
 15401 08c2 1344     		add	r3, r3, r2
 15402 08c4 3C4A     		ldr	r2, .L671+52
 15403 08c6 1D46     		mov	r5, r3
 15404 08c8 1446     		mov	r4, r2
 15405 08ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15406 08cc 2860     		str	r0, [r5]	@ unaligned
 15407 08ce 6960     		str	r1, [r5, #4]	@ unaligned
 15408 08d0 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 346


 15409 08d2 EB60     		str	r3, [r5, #12]	@ unaligned
 15410 08d4 2378     		ldrb	r3, [r4]
 15411 08d6 2B74     		strb	r3, [r5, #16]
2052:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15412              		.loc 1 2052 0
 15413 08d8 D7F88430 		ldr	r3, [r7, #132]
 15414 08dc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15415 08e0 032B     		cmp	r3, #3
 15416 08e2 73D0     		beq	.L600
2053:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15417              		.loc 1 2053 0
 15418 08e4 D7F88430 		ldr	r3, [r7, #132]
 15419 08e8 1B68     		ldr	r3, [r3]
 15420 08ea 1846     		mov	r0, r3
 15421 08ec FFF7FEFF 		bl	__aeabi_i2d
 15422 08f0 4FF00002 		mov	r2, #0
 15423 08f4 314B     		ldr	r3, .L671+56
 15424 08f6 FFF7FEFF 		bl	__aeabi_ddiv
 15425 08fa 0346     		mov	r3, r0
 15426 08fc 0C46     		mov	r4, r1
 15427 08fe 07F11C00 		add	r0, r7, #28
 15428 0902 1A46     		mov	r2, r3
 15429 0904 2346     		mov	r3, r4
 15430 0906 2E49     		ldr	r1, .L671+60
 15431 0908 FFF7FEFF 		bl	sprintf
2054:..\src/command_processing.c ****                 strcat(info_string, str);
 15432              		.loc 1 2054 0
 15433 090c 07F11C03 		add	r3, r7, #28
 15434 0910 1946     		mov	r1, r3
 15435 0912 7869     		ldr	r0, [r7, #20]
 15436 0914 FFF7FEFF 		bl	strcat
2055:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15437              		.loc 1 2055 0
 15438 0918 D7F88430 		ldr	r3, [r7, #132]
 15439 091c 5B68     		ldr	r3, [r3, #4]
 15440 091e 1846     		mov	r0, r3
 15441 0920 FFF7FEFF 		bl	__aeabi_i2d
 15442 0924 4FF00002 		mov	r2, #0
 15443 0928 244B     		ldr	r3, .L671+56
 15444 092a FFF7FEFF 		bl	__aeabi_ddiv
 15445 092e 0346     		mov	r3, r0
 15446 0930 0C46     		mov	r4, r1
 15447 0932 07F11C00 		add	r0, r7, #28
 15448 0936 1A46     		mov	r2, r3
 15449 0938 2346     		mov	r3, r4
 15450 093a 2249     		ldr	r1, .L671+64
 15451 093c FFF7FEFF 		bl	sprintf
2056:..\src/command_processing.c ****                 strcat(info_string, str);
 15452              		.loc 1 2056 0
 15453 0940 07F11C03 		add	r3, r7, #28
 15454 0944 1946     		mov	r1, r3
 15455 0946 7869     		ldr	r0, [r7, #20]
 15456 0948 FFF7FEFF 		bl	strcat
2057:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15457              		.loc 1 2057 0
 15458 094c D7F88430 		ldr	r3, [r7, #132]
 15459 0950 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 347


 15460 0952 1846     		mov	r0, r3
 15461 0954 FFF7FEFF 		bl	__aeabi_i2d
 15462 0958 4FF00002 		mov	r2, #0
 15463 095c 174B     		ldr	r3, .L671+56
 15464 095e FFF7FEFF 		bl	__aeabi_ddiv
 15465 0962 0346     		mov	r3, r0
 15466 0964 0C46     		mov	r4, r1
 15467 0966 07F11C00 		add	r0, r7, #28
 15468 096a 1A46     		mov	r2, r3
 15469 096c 2346     		mov	r3, r4
 15470 096e 1649     		ldr	r1, .L671+68
 15471 0970 FFF7FEFF 		bl	sprintf
2058:..\src/command_processing.c ****                 strcat(info_string, str);
 15472              		.loc 1 2058 0
 15473 0974 07F11C03 		add	r3, r7, #28
 15474 0978 1946     		mov	r1, r3
 15475 097a 7869     		ldr	r0, [r7, #20]
 15476 097c FFF7FEFF 		bl	strcat
 15477 0980 72E0     		b	.L601
 15478              	.L672:
 15479 0982 00BF     		.align	2
 15480              	.L671:
 15481 0984 00000000 		.word	g_meas
 15482 0988 7C130000 		.word	.LC183
 15483 098c 80130000 		.word	.LC184
 15484 0990 50110000 		.word	.LC152
 15485 0994 00000000 		.word	g_adc_measOld
 15486 0998 84130000 		.word	.LC185
 15487 099c 00000000 		.word	dev_tension
 15488 09a0 A4130000 		.word	.LC186
 15489 09a4 00000000 		.word	pow_tension
 15490 09a8 C4130000 		.word	.LC187
 15491 09ac EC130000 		.word	.LC188
 15492 09b0 04140000 		.word	.LC189
 15493 09b4 2C140000 		.word	.LC190
 15494 09b8 48140000 		.word	.LC191
 15495 09bc 0000F040 		.word	1089470464
 15496 09c0 5C140000 		.word	.LC192
 15497 09c4 68140000 		.word	.LC193
 15498 09c8 74140000 		.word	.LC194
 15499              	.L600:
2059:..\src/command_processing.c ****             }
2060:..\src/command_processing.c ****             else { 
2061:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15500              		.loc 1 2061 0
 15501 09cc D7F88430 		ldr	r3, [r7, #132]
 15502 09d0 9B69     		ldr	r3, [r3, #24]
 15503 09d2 1846     		mov	r0, r3
 15504 09d4 FFF7FEFF 		bl	__aeabi_i2d
 15505 09d8 4FF00002 		mov	r2, #0
 15506 09dc CE4B     		ldr	r3, .L673
 15507 09de FFF7FEFF 		bl	__aeabi_ddiv
 15508 09e2 0346     		mov	r3, r0
 15509 09e4 0C46     		mov	r4, r1
 15510 09e6 07F11C00 		add	r0, r7, #28
 15511 09ea 1A46     		mov	r2, r3
 15512 09ec 2346     		mov	r3, r4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 348


 15513 09ee CB49     		ldr	r1, .L673+4
 15514 09f0 FFF7FEFF 		bl	sprintf
2062:..\src/command_processing.c ****                 strcat(info_string, str);
 15515              		.loc 1 2062 0
 15516 09f4 07F11C03 		add	r3, r7, #28
 15517 09f8 1946     		mov	r1, r3
 15518 09fa 7869     		ldr	r0, [r7, #20]
 15519 09fc FFF7FEFF 		bl	strcat
2063:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15520              		.loc 1 2063 0
 15521 0a00 D7F88430 		ldr	r3, [r7, #132]
 15522 0a04 DB69     		ldr	r3, [r3, #28]
 15523 0a06 1846     		mov	r0, r3
 15524 0a08 FFF7FEFF 		bl	__aeabi_i2d
 15525 0a0c 4FF00002 		mov	r2, #0
 15526 0a10 C14B     		ldr	r3, .L673
 15527 0a12 FFF7FEFF 		bl	__aeabi_ddiv
 15528 0a16 0346     		mov	r3, r0
 15529 0a18 0C46     		mov	r4, r1
 15530 0a1a 07F11C00 		add	r0, r7, #28
 15531 0a1e 1A46     		mov	r2, r3
 15532 0a20 2346     		mov	r3, r4
 15533 0a22 BF49     		ldr	r1, .L673+8
 15534 0a24 FFF7FEFF 		bl	sprintf
2064:..\src/command_processing.c ****                 strcat(info_string, str);
 15535              		.loc 1 2064 0
 15536 0a28 07F11C03 		add	r3, r7, #28
 15537 0a2c 1946     		mov	r1, r3
 15538 0a2e 7869     		ldr	r0, [r7, #20]
 15539 0a30 FFF7FEFF 		bl	strcat
2065:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15540              		.loc 1 2065 0
 15541 0a34 D7F88430 		ldr	r3, [r7, #132]
 15542 0a38 1B6A     		ldr	r3, [r3, #32]
 15543 0a3a 1846     		mov	r0, r3
 15544 0a3c FFF7FEFF 		bl	__aeabi_i2d
 15545 0a40 4FF00002 		mov	r2, #0
 15546 0a44 B44B     		ldr	r3, .L673
 15547 0a46 FFF7FEFF 		bl	__aeabi_ddiv
 15548 0a4a 0346     		mov	r3, r0
 15549 0a4c 0C46     		mov	r4, r1
 15550 0a4e 07F11C00 		add	r0, r7, #28
 15551 0a52 1A46     		mov	r2, r3
 15552 0a54 2346     		mov	r3, r4
 15553 0a56 B349     		ldr	r1, .L673+12
 15554 0a58 FFF7FEFF 		bl	sprintf
2066:..\src/command_processing.c ****                 strcat(info_string, str);
 15555              		.loc 1 2066 0
 15556 0a5c 07F11C03 		add	r3, r7, #28
 15557 0a60 1946     		mov	r1, r3
 15558 0a62 7869     		ldr	r0, [r7, #20]
 15559 0a64 FFF7FEFF 		bl	strcat
 15560              	.L601:
2067:..\src/command_processing.c ****             }
2068:..\src/command_processing.c **** 
2069:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15561              		.loc 1 2069 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 349


 15562 0a68 7869     		ldr	r0, [r7, #20]
 15563 0a6a FFF7FEFF 		bl	strlen
 15564 0a6e 0346     		mov	r3, r0
 15565 0a70 1A46     		mov	r2, r3
 15566 0a72 7B69     		ldr	r3, [r7, #20]
 15567 0a74 1344     		add	r3, r3, r2
 15568 0a76 AC4A     		ldr	r2, .L673+16
 15569 0a78 1D46     		mov	r5, r3
 15570 0a7a 1446     		mov	r4, r2
 15571 0a7c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15572 0a7e 2860     		str	r0, [r5]	@ unaligned
 15573 0a80 6960     		str	r1, [r5, #4]	@ unaligned
 15574 0a82 AA60     		str	r2, [r5, #8]	@ unaligned
 15575 0a84 EB60     		str	r3, [r5, #12]	@ unaligned
 15576 0a86 03CC     		ldmia	r4!, {r0, r1}
 15577 0a88 2861     		str	r0, [r5, #16]	@ unaligned
 15578 0a8a 6961     		str	r1, [r5, #20]	@ unaligned
 15579 0a8c 2378     		ldrb	r3, [r4]
 15580 0a8e 2B76     		strb	r3, [r5, #24]
2070:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15581              		.loc 1 2070 0
 15582 0a90 D7F88430 		ldr	r3, [r7, #132]
 15583 0a94 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15584 0a98 032B     		cmp	r3, #3
 15585 0a9a 4ED0     		beq	.L602
2071:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15586              		.loc 1 2071 0
 15587 0a9c D7F88430 		ldr	r3, [r7, #132]
 15588 0aa0 DB68     		ldr	r3, [r3, #12]
 15589 0aa2 1846     		mov	r0, r3
 15590 0aa4 FFF7FEFF 		bl	__aeabi_i2d
 15591 0aa8 4FF00002 		mov	r2, #0
 15592 0aac 9A4B     		ldr	r3, .L673
 15593 0aae FFF7FEFF 		bl	__aeabi_ddiv
 15594 0ab2 0346     		mov	r3, r0
 15595 0ab4 0C46     		mov	r4, r1
 15596 0ab6 07F11C00 		add	r0, r7, #28
 15597 0aba 1A46     		mov	r2, r3
 15598 0abc 2346     		mov	r3, r4
 15599 0abe 9749     		ldr	r1, .L673+4
 15600 0ac0 FFF7FEFF 		bl	sprintf
2072:..\src/command_processing.c ****                 strcat(info_string, str);
 15601              		.loc 1 2072 0
 15602 0ac4 07F11C03 		add	r3, r7, #28
 15603 0ac8 1946     		mov	r1, r3
 15604 0aca 7869     		ldr	r0, [r7, #20]
 15605 0acc FFF7FEFF 		bl	strcat
2073:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15606              		.loc 1 2073 0
 15607 0ad0 D7F88430 		ldr	r3, [r7, #132]
 15608 0ad4 1B69     		ldr	r3, [r3, #16]
 15609 0ad6 1846     		mov	r0, r3
 15610 0ad8 FFF7FEFF 		bl	__aeabi_i2d
 15611 0adc 4FF00002 		mov	r2, #0
 15612 0ae0 8D4B     		ldr	r3, .L673
 15613 0ae2 FFF7FEFF 		bl	__aeabi_ddiv
 15614 0ae6 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 350


 15615 0ae8 0C46     		mov	r4, r1
 15616 0aea 07F11C00 		add	r0, r7, #28
 15617 0aee 1A46     		mov	r2, r3
 15618 0af0 2346     		mov	r3, r4
 15619 0af2 8B49     		ldr	r1, .L673+8
 15620 0af4 FFF7FEFF 		bl	sprintf
2074:..\src/command_processing.c ****                 strcat(info_string, str);
 15621              		.loc 1 2074 0
 15622 0af8 07F11C03 		add	r3, r7, #28
 15623 0afc 1946     		mov	r1, r3
 15624 0afe 7869     		ldr	r0, [r7, #20]
 15625 0b00 FFF7FEFF 		bl	strcat
2075:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15626              		.loc 1 2075 0
 15627 0b04 D7F88430 		ldr	r3, [r7, #132]
 15628 0b08 5B69     		ldr	r3, [r3, #20]
 15629 0b0a 1846     		mov	r0, r3
 15630 0b0c FFF7FEFF 		bl	__aeabi_i2d
 15631 0b10 4FF00002 		mov	r2, #0
 15632 0b14 804B     		ldr	r3, .L673
 15633 0b16 FFF7FEFF 		bl	__aeabi_ddiv
 15634 0b1a 0346     		mov	r3, r0
 15635 0b1c 0C46     		mov	r4, r1
 15636 0b1e 07F11C00 		add	r0, r7, #28
 15637 0b22 1A46     		mov	r2, r3
 15638 0b24 2346     		mov	r3, r4
 15639 0b26 7F49     		ldr	r1, .L673+12
 15640 0b28 FFF7FEFF 		bl	sprintf
2076:..\src/command_processing.c ****                 strcat(info_string, str);
 15641              		.loc 1 2076 0
 15642 0b2c 07F11C03 		add	r3, r7, #28
 15643 0b30 1946     		mov	r1, r3
 15644 0b32 7869     		ldr	r0, [r7, #20]
 15645 0b34 FFF7FEFF 		bl	strcat
 15646 0b38 4DE0     		b	.L603
 15647              	.L602:
2077:..\src/command_processing.c **** 
2078:..\src/command_processing.c ****             }
2079:..\src/command_processing.c ****             else {
2080:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15648              		.loc 1 2080 0
 15649 0b3a D7F88430 		ldr	r3, [r7, #132]
 15650 0b3e 5B6A     		ldr	r3, [r3, #36]
 15651 0b40 1846     		mov	r0, r3
 15652 0b42 FFF7FEFF 		bl	__aeabi_i2d
 15653 0b46 4FF00002 		mov	r2, #0
 15654 0b4a 734B     		ldr	r3, .L673
 15655 0b4c FFF7FEFF 		bl	__aeabi_ddiv
 15656 0b50 0346     		mov	r3, r0
 15657 0b52 0C46     		mov	r4, r1
 15658 0b54 07F11C00 		add	r0, r7, #28
 15659 0b58 1A46     		mov	r2, r3
 15660 0b5a 2346     		mov	r3, r4
 15661 0b5c 6F49     		ldr	r1, .L673+4
 15662 0b5e FFF7FEFF 		bl	sprintf
2081:..\src/command_processing.c ****                 strcat(info_string, str);
 15663              		.loc 1 2081 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 351


 15664 0b62 07F11C03 		add	r3, r7, #28
 15665 0b66 1946     		mov	r1, r3
 15666 0b68 7869     		ldr	r0, [r7, #20]
 15667 0b6a FFF7FEFF 		bl	strcat
2082:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15668              		.loc 1 2082 0
 15669 0b6e D7F88430 		ldr	r3, [r7, #132]
 15670 0b72 9B6A     		ldr	r3, [r3, #40]
 15671 0b74 1846     		mov	r0, r3
 15672 0b76 FFF7FEFF 		bl	__aeabi_i2d
 15673 0b7a 4FF00002 		mov	r2, #0
 15674 0b7e 664B     		ldr	r3, .L673
 15675 0b80 FFF7FEFF 		bl	__aeabi_ddiv
 15676 0b84 0346     		mov	r3, r0
 15677 0b86 0C46     		mov	r4, r1
 15678 0b88 07F11C00 		add	r0, r7, #28
 15679 0b8c 1A46     		mov	r2, r3
 15680 0b8e 2346     		mov	r3, r4
 15681 0b90 6349     		ldr	r1, .L673+8
 15682 0b92 FFF7FEFF 		bl	sprintf
2083:..\src/command_processing.c ****                 strcat(info_string, str);
 15683              		.loc 1 2083 0
 15684 0b96 07F11C03 		add	r3, r7, #28
 15685 0b9a 1946     		mov	r1, r3
 15686 0b9c 7869     		ldr	r0, [r7, #20]
 15687 0b9e FFF7FEFF 		bl	strcat
2084:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15688              		.loc 1 2084 0
 15689 0ba2 D7F88430 		ldr	r3, [r7, #132]
 15690 0ba6 DB6A     		ldr	r3, [r3, #44]
 15691 0ba8 1846     		mov	r0, r3
 15692 0baa FFF7FEFF 		bl	__aeabi_i2d
 15693 0bae 4FF00002 		mov	r2, #0
 15694 0bb2 594B     		ldr	r3, .L673
 15695 0bb4 FFF7FEFF 		bl	__aeabi_ddiv
 15696 0bb8 0346     		mov	r3, r0
 15697 0bba 0C46     		mov	r4, r1
 15698 0bbc 07F11C00 		add	r0, r7, #28
 15699 0bc0 1A46     		mov	r2, r3
 15700 0bc2 2346     		mov	r3, r4
 15701 0bc4 5749     		ldr	r1, .L673+12
 15702 0bc6 FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****                 strcat(info_string, str);
 15703              		.loc 1 2085 0
 15704 0bca 07F11C03 		add	r3, r7, #28
 15705 0bce 1946     		mov	r1, r3
 15706 0bd0 7869     		ldr	r0, [r7, #20]
 15707 0bd2 FFF7FEFF 		bl	strcat
 15708              	.L603:
2086:..\src/command_processing.c ****             }
2087:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15709              		.loc 1 2087 0
 15710 0bd6 D7F88430 		ldr	r3, [r7, #132]
 15711 0bda 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15712 0bde 012B     		cmp	r3, #1
 15713 0be0 14D1     		bne	.L604
2088:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 352


 15714              		.loc 1 2088 0
 15715 0be2 7869     		ldr	r0, [r7, #20]
 15716 0be4 FFF7FEFF 		bl	strlen
 15717 0be8 0346     		mov	r3, r0
 15718 0bea 1A46     		mov	r2, r3
 15719 0bec 7B69     		ldr	r3, [r7, #20]
 15720 0bee 1344     		add	r3, r3, r2
 15721 0bf0 4E4A     		ldr	r2, .L673+20
 15722 0bf2 1D46     		mov	r5, r3
 15723 0bf4 1446     		mov	r4, r2
 15724 0bf6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15725 0bf8 2860     		str	r0, [r5]	@ unaligned
 15726 0bfa 6960     		str	r1, [r5, #4]	@ unaligned
 15727 0bfc AA60     		str	r2, [r5, #8]	@ unaligned
 15728 0bfe EB60     		str	r3, [r5, #12]	@ unaligned
 15729 0c00 03CC     		ldmia	r4!, {r0, r1}
 15730 0c02 2861     		str	r0, [r5, #16]	@ unaligned
 15731 0c04 6961     		str	r1, [r5, #20]	@ unaligned
 15732 0c06 2388     		ldrh	r3, [r4]	@ unaligned
 15733 0c08 2B83     		strh	r3, [r5, #24]	@ unaligned
 15734 0c0a 13E0     		b	.L605
 15735              	.L604:
2089:..\src/command_processing.c ****             else
2090:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15736              		.loc 1 2090 0
 15737 0c0c 7869     		ldr	r0, [r7, #20]
 15738 0c0e FFF7FEFF 		bl	strlen
 15739 0c12 0346     		mov	r3, r0
 15740 0c14 1A46     		mov	r2, r3
 15741 0c16 7B69     		ldr	r3, [r7, #20]
 15742 0c18 1344     		add	r3, r3, r2
 15743 0c1a 454A     		ldr	r2, .L673+24
 15744 0c1c 1D46     		mov	r5, r3
 15745 0c1e 1446     		mov	r4, r2
 15746 0c20 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15747 0c22 2860     		str	r0, [r5]	@ unaligned
 15748 0c24 6960     		str	r1, [r5, #4]	@ unaligned
 15749 0c26 AA60     		str	r2, [r5, #8]	@ unaligned
 15750 0c28 EB60     		str	r3, [r5, #12]	@ unaligned
 15751 0c2a 03CC     		ldmia	r4!, {r0, r1}
 15752 0c2c 2861     		str	r0, [r5, #16]	@ unaligned
 15753 0c2e 6961     		str	r1, [r5, #20]	@ unaligned
 15754 0c30 2378     		ldrb	r3, [r4]
 15755 0c32 2B76     		strb	r3, [r5, #24]
 15756              	.L605:
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15757              		.loc 1 2092 0
 15758 0c34 D7F88430 		ldr	r3, [r7, #132]
 15759 0c38 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15760 0c3c 072B     		cmp	r3, #7
 15761 0c3e 00F2EA80 		bhi	.L606
 15762 0c42 01A2     		adr	r2, .L608
 15763 0c44 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15764              		.p2align 2
 15765              	.L608:
 15766 0c48 690C0000 		.word	.L607+1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 353


 15767 0c4c 8D0C0000 		.word	.L609+1
 15768 0c50 B50C0000 		.word	.L610+1
 15769 0c54 E70C0000 		.word	.L611+1
 15770 0c58 450D0000 		.word	.L612+1
 15771 0c5c 730D0000 		.word	.L613+1
 15772 0c60 A30D0000 		.word	.L614+1
 15773 0c64 D10D0000 		.word	.L615+1
 15774              		.p2align 1
 15775              	.L607:
2093:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2094:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15776              		.loc 1 2094 0
 15777 0c68 7869     		ldr	r0, [r7, #20]
 15778 0c6a FFF7FEFF 		bl	strlen
 15779 0c6e 0346     		mov	r3, r0
 15780 0c70 1A46     		mov	r2, r3
 15781 0c72 7B69     		ldr	r3, [r7, #20]
 15782 0c74 1344     		add	r3, r3, r2
 15783 0c76 2F4A     		ldr	r2, .L673+28
 15784 0c78 1D46     		mov	r5, r3
 15785 0c7a 1446     		mov	r4, r2
 15786 0c7c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15787 0c7e 2860     		str	r0, [r5]	@ unaligned
 15788 0c80 6960     		str	r1, [r5, #4]	@ unaligned
 15789 0c82 AA60     		str	r2, [r5, #8]	@ unaligned
 15790 0c84 EB60     		str	r3, [r5, #12]	@ unaligned
 15791 0c86 2388     		ldrh	r3, [r4]	@ unaligned
 15792 0c88 2B82     		strh	r3, [r5, #16]	@ unaligned
2095:..\src/command_processing.c ****                     break;
 15793              		.loc 1 2095 0
 15794 0c8a C4E0     		b	.L606
 15795              	.L609:
2096:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2097:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15796              		.loc 1 2097 0
 15797 0c8c 7869     		ldr	r0, [r7, #20]
 15798 0c8e FFF7FEFF 		bl	strlen
 15799 0c92 0346     		mov	r3, r0
 15800 0c94 1A46     		mov	r2, r3
 15801 0c96 7B69     		ldr	r3, [r7, #20]
 15802 0c98 1344     		add	r3, r3, r2
 15803 0c9a 274A     		ldr	r2, .L673+32
 15804 0c9c 1D46     		mov	r5, r3
 15805 0c9e 1446     		mov	r4, r2
 15806 0ca0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15807 0ca2 2860     		str	r0, [r5]	@ unaligned
 15808 0ca4 6960     		str	r1, [r5, #4]	@ unaligned
 15809 0ca6 AA60     		str	r2, [r5, #8]	@ unaligned
 15810 0ca8 EB60     		str	r3, [r5, #12]	@ unaligned
 15811 0caa 2068     		ldr	r0, [r4]	@ unaligned
 15812 0cac 2861     		str	r0, [r5, #16]	@ unaligned
 15813 0cae 2379     		ldrb	r3, [r4, #4]
 15814 0cb0 2B75     		strb	r3, [r5, #20]
2098:..\src/command_processing.c ****                     break;
 15815              		.loc 1 2098 0
 15816 0cb2 B0E0     		b	.L606
 15817              	.L610:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 354


2099:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2100:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15818              		.loc 1 2100 0
 15819 0cb4 7869     		ldr	r0, [r7, #20]
 15820 0cb6 FFF7FEFF 		bl	strlen
 15821 0cba 0346     		mov	r3, r0
 15822 0cbc 1A46     		mov	r2, r3
 15823 0cbe 7B69     		ldr	r3, [r7, #20]
 15824 0cc0 1344     		add	r3, r3, r2
 15825 0cc2 1E4A     		ldr	r2, .L673+36
 15826 0cc4 1D46     		mov	r5, r3
 15827 0cc6 1446     		mov	r4, r2
 15828 0cc8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15829 0cca 2860     		str	r0, [r5]	@ unaligned
 15830 0ccc 6960     		str	r1, [r5, #4]	@ unaligned
 15831 0cce AA60     		str	r2, [r5, #8]	@ unaligned
 15832 0cd0 EB60     		str	r3, [r5, #12]	@ unaligned
 15833 0cd2 07CC     		ldmia	r4!, {r0, r1, r2}
 15834 0cd4 2861     		str	r0, [r5, #16]	@ unaligned
 15835 0cd6 6961     		str	r1, [r5, #20]	@ unaligned
 15836 0cd8 AA61     		str	r2, [r5, #24]	@ unaligned
 15837 0cda 2388     		ldrh	r3, [r4]	@ unaligned
 15838 0cdc A278     		ldrb	r2, [r4, #2]
 15839 0cde AB83     		strh	r3, [r5, #28]	@ unaligned
 15840 0ce0 1346     		mov	r3, r2
 15841 0ce2 AB77     		strb	r3, [r5, #30]
2101:..\src/command_processing.c ****                     break;
 15842              		.loc 1 2101 0
 15843 0ce4 97E0     		b	.L606
 15844              	.L611:
2102:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2103:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15845              		.loc 1 2103 0
 15846 0ce6 7869     		ldr	r0, [r7, #20]
 15847 0ce8 FFF7FEFF 		bl	strlen
 15848 0cec 0346     		mov	r3, r0
 15849 0cee 1A46     		mov	r2, r3
 15850 0cf0 7B69     		ldr	r3, [r7, #20]
 15851 0cf2 1344     		add	r3, r3, r2
 15852 0cf4 124A     		ldr	r2, .L673+40
 15853 0cf6 1D46     		mov	r5, r3
 15854 0cf8 1446     		mov	r4, r2
 15855 0cfa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15856 0cfc 2860     		str	r0, [r5]	@ unaligned
 15857 0cfe 6960     		str	r1, [r5, #4]	@ unaligned
 15858 0d00 AA60     		str	r2, [r5, #8]	@ unaligned
 15859 0d02 EB60     		str	r3, [r5, #12]	@ unaligned
 15860 0d04 03CC     		ldmia	r4!, {r0, r1}
 15861 0d06 2861     		str	r0, [r5, #16]	@ unaligned
 15862 0d08 6961     		str	r1, [r5, #20]	@ unaligned
 15863 0d0a 2388     		ldrh	r3, [r4]	@ unaligned
 15864 0d0c A278     		ldrb	r2, [r4, #2]
 15865 0d0e 2B83     		strh	r3, [r5, #24]	@ unaligned
 15866 0d10 1346     		mov	r3, r2
 15867 0d12 AB76     		strb	r3, [r5, #26]
2104:..\src/command_processing.c ****                     break;
 15868              		.loc 1 2104 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 355


 15869 0d14 7FE0     		b	.L606
 15870              	.L674:
 15871 0d16 00BF     		.align	2
 15872              	.L673:
 15873 0d18 0000F040 		.word	1089470464
 15874 0d1c 5C140000 		.word	.LC192
 15875 0d20 68140000 		.word	.LC193
 15876 0d24 74140000 		.word	.LC194
 15877 0d28 80140000 		.word	.LC195
 15878 0d2c 9C140000 		.word	.LC196
 15879 0d30 B8140000 		.word	.LC197
 15880 0d34 D4140000 		.word	.LC198
 15881 0d38 E8140000 		.word	.LC199
 15882 0d3c 00150000 		.word	.LC200
 15883 0d40 20150000 		.word	.LC201
 15884              	.L612:
2105:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2106:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15885              		.loc 1 2106 0
 15886 0d44 7869     		ldr	r0, [r7, #20]
 15887 0d46 FFF7FEFF 		bl	strlen
 15888 0d4a 0346     		mov	r3, r0
 15889 0d4c 1A46     		mov	r2, r3
 15890 0d4e 7B69     		ldr	r3, [r7, #20]
 15891 0d50 1344     		add	r3, r3, r2
 15892 0d52 CF4A     		ldr	r2, .L675
 15893 0d54 1C46     		mov	r4, r3
 15894 0d56 1546     		mov	r5, r2
 15895 0d58 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15896 0d5a 2060     		str	r0, [r4]	@ unaligned
 15897 0d5c 6160     		str	r1, [r4, #4]	@ unaligned
 15898 0d5e A260     		str	r2, [r4, #8]	@ unaligned
 15899 0d60 E360     		str	r3, [r4, #12]	@ unaligned
 15900 0d62 2868     		ldr	r0, [r5]	@ unaligned
 15901 0d64 2061     		str	r0, [r4, #16]	@ unaligned
 15902 0d66 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15903 0d68 AA79     		ldrb	r2, [r5, #6]
 15904 0d6a A382     		strh	r3, [r4, #20]	@ unaligned
 15905 0d6c 1346     		mov	r3, r2
 15906 0d6e A375     		strb	r3, [r4, #22]
2107:..\src/command_processing.c ****                     break;
 15907              		.loc 1 2107 0
 15908 0d70 51E0     		b	.L606
 15909              	.L613:
2108:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2109:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15910              		.loc 1 2109 0
 15911 0d72 7869     		ldr	r0, [r7, #20]
 15912 0d74 FFF7FEFF 		bl	strlen
 15913 0d78 0346     		mov	r3, r0
 15914 0d7a 1A46     		mov	r2, r3
 15915 0d7c 7B69     		ldr	r3, [r7, #20]
 15916 0d7e 1344     		add	r3, r3, r2
 15917 0d80 C44A     		ldr	r2, .L675+4
 15918 0d82 1D46     		mov	r5, r3
 15919 0d84 1446     		mov	r4, r2
 15920 0d86 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 356


 15921 0d88 2860     		str	r0, [r5]	@ unaligned
 15922 0d8a 6960     		str	r1, [r5, #4]	@ unaligned
 15923 0d8c AA60     		str	r2, [r5, #8]	@ unaligned
 15924 0d8e EB60     		str	r3, [r5, #12]	@ unaligned
 15925 0d90 03CC     		ldmia	r4!, {r0, r1}
 15926 0d92 2861     		str	r0, [r5, #16]	@ unaligned
 15927 0d94 6961     		str	r1, [r5, #20]	@ unaligned
 15928 0d96 2388     		ldrh	r3, [r4]	@ unaligned
 15929 0d98 A278     		ldrb	r2, [r4, #2]
 15930 0d9a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15931 0d9c 1346     		mov	r3, r2
 15932 0d9e AB76     		strb	r3, [r5, #26]
2110:..\src/command_processing.c ****                     break;
 15933              		.loc 1 2110 0
 15934 0da0 39E0     		b	.L606
 15935              	.L614:
2111:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2112:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15936              		.loc 1 2112 0
 15937 0da2 7869     		ldr	r0, [r7, #20]
 15938 0da4 FFF7FEFF 		bl	strlen
 15939 0da8 0346     		mov	r3, r0
 15940 0daa 1A46     		mov	r2, r3
 15941 0dac 7B69     		ldr	r3, [r7, #20]
 15942 0dae 1344     		add	r3, r3, r2
 15943 0db0 B94A     		ldr	r2, .L675+8
 15944 0db2 1C46     		mov	r4, r3
 15945 0db4 1546     		mov	r5, r2
 15946 0db6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15947 0db8 2060     		str	r0, [r4]	@ unaligned
 15948 0dba 6160     		str	r1, [r4, #4]	@ unaligned
 15949 0dbc A260     		str	r2, [r4, #8]	@ unaligned
 15950 0dbe E360     		str	r3, [r4, #12]	@ unaligned
 15951 0dc0 2868     		ldr	r0, [r5]	@ unaligned
 15952 0dc2 2061     		str	r0, [r4, #16]	@ unaligned
 15953 0dc4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15954 0dc6 AA79     		ldrb	r2, [r5, #6]
 15955 0dc8 A382     		strh	r3, [r4, #20]	@ unaligned
 15956 0dca 1346     		mov	r3, r2
 15957 0dcc A375     		strb	r3, [r4, #22]
2113:..\src/command_processing.c ****                     break;
 15958              		.loc 1 2113 0
 15959 0dce 22E0     		b	.L606
 15960              	.L615:
2114:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2115:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15961              		.loc 1 2115 0
 15962 0dd0 7869     		ldr	r0, [r7, #20]
 15963 0dd2 FFF7FEFF 		bl	strlen
 15964 0dd6 0346     		mov	r3, r0
 15965 0dd8 1A46     		mov	r2, r3
 15966 0dda 7B69     		ldr	r3, [r7, #20]
 15967 0ddc 1344     		add	r3, r3, r2
 15968 0dde AF4A     		ldr	r2, .L675+12
 15969 0de0 1546     		mov	r5, r2
 15970 0de2 9E46     		mov	lr, r3
 15971 0de4 05F1200C 		add	ip, r5, #32
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 357


 15972              	.L616:
 15973 0de8 7446     		mov	r4, lr
 15974 0dea 2E46     		mov	r6, r5
 15975 0dec 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15976 0dee 2060     		str	r0, [r4]	@ unaligned
 15977 0df0 6160     		str	r1, [r4, #4]	@ unaligned
 15978 0df2 A260     		str	r2, [r4, #8]	@ unaligned
 15979 0df4 E360     		str	r3, [r4, #12]	@ unaligned
 15980 0df6 1035     		adds	r5, r5, #16
 15981 0df8 0EF1100E 		add	lr, lr, #16
 15982 0dfc 6545     		cmp	r5, ip
 15983 0dfe F3D1     		bne	.L616
 15984 0e00 7446     		mov	r4, lr
 15985 0e02 2B46     		mov	r3, r5
 15986 0e04 07CB     		ldmia	r3!, {r0, r1, r2}
 15987 0e06 2060     		str	r0, [r4]	@ unaligned
 15988 0e08 6160     		str	r1, [r4, #4]	@ unaligned
 15989 0e0a A260     		str	r2, [r4, #8]	@ unaligned
 15990 0e0c 1A88     		ldrh	r2, [r3]	@ unaligned
 15991 0e0e 9B78     		ldrb	r3, [r3, #2]
 15992 0e10 A281     		strh	r2, [r4, #12]	@ unaligned
 15993 0e12 A373     		strb	r3, [r4, #14]
2116:..\src/command_processing.c ****                     break;
 15994              		.loc 1 2116 0
 15995 0e14 00BF     		nop
 15996              	.L606:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c **** 
2119:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15997              		.loc 1 2119 0
 15998 0e16 D7F88430 		ldr	r3, [r7, #132]
 15999 0e1a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16000 0e1e 032B     		cmp	r3, #3
 16001 0e20 63D8     		bhi	.L666
 16002 0e22 01A2     		adr	r2, .L619
 16003 0e24 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16004              		.p2align 2
 16005              	.L619:
 16006 0e28 390E0000 		.word	.L618+1
 16007 0e2c 630E0000 		.word	.L620+1
 16008 0e30 870E0000 		.word	.L621+1
 16009 0e34 AD0E0000 		.word	.L622+1
 16010              		.p2align 1
 16011              	.L618:
2120:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2121:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 16012              		.loc 1 2121 0
 16013 0e38 7869     		ldr	r0, [r7, #20]
 16014 0e3a FFF7FEFF 		bl	strlen
 16015 0e3e 0346     		mov	r3, r0
 16016 0e40 1A46     		mov	r2, r3
 16017 0e42 7B69     		ldr	r3, [r7, #20]
 16018 0e44 1344     		add	r3, r3, r2
 16019 0e46 964A     		ldr	r2, .L675+16
 16020 0e48 1D46     		mov	r5, r3
 16021 0e4a 1446     		mov	r4, r2
 16022 0e4c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 358


 16023 0e4e 2860     		str	r0, [r5]	@ unaligned
 16024 0e50 6960     		str	r1, [r5, #4]	@ unaligned
 16025 0e52 AA60     		str	r2, [r5, #8]	@ unaligned
 16026 0e54 EB60     		str	r3, [r5, #12]	@ unaligned
 16027 0e56 03CC     		ldmia	r4!, {r0, r1}
 16028 0e58 2861     		str	r0, [r5, #16]	@ unaligned
 16029 0e5a 6961     		str	r1, [r5, #20]	@ unaligned
 16030 0e5c 2378     		ldrb	r3, [r4]
 16031 0e5e 2B76     		strb	r3, [r5, #24]
2122:..\src/command_processing.c ****                     break;
 16032              		.loc 1 2122 0
 16033 0e60 44E0     		b	.L623
 16034              	.L620:
2123:..\src/command_processing.c ****                 case CONTROL_PWM:
2124:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 16035              		.loc 1 2124 0
 16036 0e62 7869     		ldr	r0, [r7, #20]
 16037 0e64 FFF7FEFF 		bl	strlen
 16038 0e68 0346     		mov	r3, r0
 16039 0e6a 1A46     		mov	r2, r3
 16040 0e6c 7B69     		ldr	r3, [r7, #20]
 16041 0e6e 1344     		add	r3, r3, r2
 16042 0e70 8C4A     		ldr	r2, .L675+20
 16043 0e72 1D46     		mov	r5, r3
 16044 0e74 1446     		mov	r4, r2
 16045 0e76 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16046 0e78 2860     		str	r0, [r5]	@ unaligned
 16047 0e7a 6960     		str	r1, [r5, #4]	@ unaligned
 16048 0e7c AA60     		str	r2, [r5, #8]	@ unaligned
 16049 0e7e EB60     		str	r3, [r5, #12]	@ unaligned
 16050 0e80 2068     		ldr	r0, [r4]	@ unaligned
 16051 0e82 2861     		str	r0, [r5, #16]	@ unaligned
2125:..\src/command_processing.c ****                     break;
 16052              		.loc 1 2125 0
 16053 0e84 32E0     		b	.L623
 16054              	.L621:
2126:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2127:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 16055              		.loc 1 2127 0
 16056 0e86 7869     		ldr	r0, [r7, #20]
 16057 0e88 FFF7FEFF 		bl	strlen
 16058 0e8c 0346     		mov	r3, r0
 16059 0e8e 1A46     		mov	r2, r3
 16060 0e90 7B69     		ldr	r3, [r7, #20]
 16061 0e92 1344     		add	r3, r3, r2
 16062 0e94 844A     		ldr	r2, .L675+24
 16063 0e96 1D46     		mov	r5, r3
 16064 0e98 1446     		mov	r4, r2
 16065 0e9a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16066 0e9c 2860     		str	r0, [r5]	@ unaligned
 16067 0e9e 6960     		str	r1, [r5, #4]	@ unaligned
 16068 0ea0 AA60     		str	r2, [r5, #8]	@ unaligned
 16069 0ea2 EB60     		str	r3, [r5, #12]	@ unaligned
 16070 0ea4 03CC     		ldmia	r4!, {r0, r1}
 16071 0ea6 2861     		str	r0, [r5, #16]	@ unaligned
 16072 0ea8 6961     		str	r1, [r5, #20]	@ unaligned
2128:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 359


 16073              		.loc 1 2128 0
 16074 0eaa 1FE0     		b	.L623
 16075              	.L622:
2129:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2130:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 16076              		.loc 1 2130 0
 16077 0eac 7869     		ldr	r0, [r7, #20]
 16078 0eae FFF7FEFF 		bl	strlen
 16079 0eb2 0346     		mov	r3, r0
 16080 0eb4 1A46     		mov	r2, r3
 16081 0eb6 7B69     		ldr	r3, [r7, #20]
 16082 0eb8 1344     		add	r3, r3, r2
 16083 0eba 7C4A     		ldr	r2, .L675+28
 16084 0ebc 1446     		mov	r4, r2
 16085 0ebe 9E46     		mov	lr, r3
 16086 0ec0 04F1200C 		add	ip, r4, #32
 16087              	.L624:
 16088 0ec4 7546     		mov	r5, lr
 16089 0ec6 2646     		mov	r6, r4
 16090 0ec8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16091 0eca 2860     		str	r0, [r5]	@ unaligned
 16092 0ecc 6960     		str	r1, [r5, #4]	@ unaligned
 16093 0ece AA60     		str	r2, [r5, #8]	@ unaligned
 16094 0ed0 EB60     		str	r3, [r5, #12]	@ unaligned
 16095 0ed2 1034     		adds	r4, r4, #16
 16096 0ed4 0EF1100E 		add	lr, lr, #16
 16097 0ed8 6445     		cmp	r4, ip
 16098 0eda F3D1     		bne	.L624
 16099 0edc 7346     		mov	r3, lr
 16100 0ede 2246     		mov	r2, r4
 16101 0ee0 1068     		ldr	r0, [r2]	@ unaligned
 16102 0ee2 1860     		str	r0, [r3]	@ unaligned
 16103 0ee4 1279     		ldrb	r2, [r2, #4]
 16104 0ee6 1A71     		strb	r2, [r3, #4]
2131:..\src/command_processing.c ****                     break;
 16105              		.loc 1 2131 0
 16106 0ee8 00E0     		b	.L623
 16107              	.L666:
2132:..\src/command_processing.c ****                 default:
2133:..\src/command_processing.c ****                     break;
 16108              		.loc 1 2133 0
 16109 0eea 00BF     		nop
 16110              	.L623:
2134:..\src/command_processing.c ****             }
2135:..\src/command_processing.c **** 
2136:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16111              		.loc 1 2136 0
 16112 0eec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16113 0ef0 D7F88C10 		ldr	r1, [r7, #140]
 16114 0ef4 1346     		mov	r3, r2
 16115 0ef6 5B00     		lsls	r3, r3, #1
 16116 0ef8 1344     		add	r3, r3, r2
 16117 0efa 1B01     		lsls	r3, r3, #4
 16118 0efc 0B44     		add	r3, r3, r1
 16119 0efe 03F5D873 		add	r3, r3, #432
 16120 0f02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16121 0f04 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 360


 16122 0f06 1CD0     		beq	.L625
2137:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 16123              		.loc 1 2137 0
 16124 0f08 7869     		ldr	r0, [r7, #20]
 16125 0f0a FFF7FEFF 		bl	strlen
 16126 0f0e 0346     		mov	r3, r0
 16127 0f10 1A46     		mov	r2, r3
 16128 0f12 7B69     		ldr	r3, [r7, #20]
 16129 0f14 1344     		add	r3, r3, r2
 16130 0f16 664A     		ldr	r2, .L675+32
 16131 0f18 1446     		mov	r4, r2
 16132 0f1a 9E46     		mov	lr, r3
 16133 0f1c 04F1200C 		add	ip, r4, #32
 16134              	.L626:
 16135 0f20 7546     		mov	r5, lr
 16136 0f22 2646     		mov	r6, r4
 16137 0f24 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16138 0f26 2860     		str	r0, [r5]	@ unaligned
 16139 0f28 6960     		str	r1, [r5, #4]	@ unaligned
 16140 0f2a AA60     		str	r2, [r5, #8]	@ unaligned
 16141 0f2c EB60     		str	r3, [r5, #12]	@ unaligned
 16142 0f2e 1034     		adds	r4, r4, #16
 16143 0f30 0EF1100E 		add	lr, lr, #16
 16144 0f34 6445     		cmp	r4, ip
 16145 0f36 F3D1     		bne	.L626
 16146 0f38 7346     		mov	r3, lr
 16147 0f3a 2246     		mov	r2, r4
 16148 0f3c 1278     		ldrb	r2, [r2]
 16149 0f3e 1A70     		strb	r2, [r3]
 16150 0f40 13E0     		b	.L627
 16151              	.L625:
2138:..\src/command_processing.c ****             else
2139:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 16152              		.loc 1 2139 0
 16153 0f42 7869     		ldr	r0, [r7, #20]
 16154 0f44 FFF7FEFF 		bl	strlen
 16155 0f48 0346     		mov	r3, r0
 16156 0f4a 1A46     		mov	r2, r3
 16157 0f4c 7B69     		ldr	r3, [r7, #20]
 16158 0f4e 1344     		add	r3, r3, r2
 16159 0f50 584A     		ldr	r2, .L675+36
 16160 0f52 1C46     		mov	r4, r3
 16161 0f54 1546     		mov	r5, r2
 16162 0f56 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16163 0f58 2060     		str	r0, [r4]	@ unaligned
 16164 0f5a 6160     		str	r1, [r4, #4]	@ unaligned
 16165 0f5c A260     		str	r2, [r4, #8]	@ unaligned
 16166 0f5e E360     		str	r3, [r4, #12]	@ unaligned
 16167 0f60 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16168 0f62 2061     		str	r0, [r4, #16]	@ unaligned
 16169 0f64 6161     		str	r1, [r4, #20]	@ unaligned
 16170 0f66 A261     		str	r2, [r4, #24]	@ unaligned
 16171 0f68 E361     		str	r3, [r4, #28]	@ unaligned
 16172              	.L627:
2140:..\src/command_processing.c **** 
2141:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 16173              		.loc 1 2141 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 361


 16174 0f6a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16175 0f6e D7F88C10 		ldr	r1, [r7, #140]
 16176 0f72 1346     		mov	r3, r2
 16177 0f74 5B00     		lsls	r3, r3, #1
 16178 0f76 1344     		add	r3, r3, r2
 16179 0f78 1B01     		lsls	r3, r3, #4
 16180 0f7a 0B44     		add	r3, r3, r1
 16181 0f7c 03F5DA73 		add	r3, r3, #436
 16182 0f80 93F90030 		ldrsb	r3, [r3]
 16183 0f84 1A46     		mov	r2, r3
 16184 0f86 07F11C03 		add	r3, r7, #28
 16185 0f8a 4B49     		ldr	r1, .L675+40
 16186 0f8c 1846     		mov	r0, r3
 16187 0f8e FFF7FEFF 		bl	sprintf
2142:..\src/command_processing.c ****             strcat(info_string, str);
 16188              		.loc 1 2142 0
 16189 0f92 07F11C03 		add	r3, r7, #28
 16190 0f96 1946     		mov	r1, r3
 16191 0f98 7869     		ldr	r0, [r7, #20]
 16192 0f9a FFF7FEFF 		bl	strcat
2143:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2144:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
2145:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
2146:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
2147:..\src/command_processing.c ****                 strcat(info_string, str);
2148:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
2149:..\src/command_processing.c ****                     strcat(info_string, ", ");
2150:..\src/command_processing.c ****                 }                
2151:..\src/command_processing.c ****             }
2152:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2153:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2154:..\src/command_processing.c ****             strcat(info_string, str);
2155:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2156:..\src/command_processing.c ****             strcat(info_string, str);
2157:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2158:..\src/command_processing.c ****             strcat(info_string, str);
2159:..\src/command_processing.c **** #endif            
2160:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16193              		.loc 1 2160 0
 16194 0f9e 7869     		ldr	r0, [r7, #20]
 16195 0fa0 FFF7FEFF 		bl	strlen
 16196 0fa4 0346     		mov	r3, r0
 16197 0fa6 1A46     		mov	r2, r3
 16198 0fa8 7B69     		ldr	r3, [r7, #20]
 16199 0faa 1344     		add	r3, r3, r2
 16200 0fac 434A     		ldr	r2, .L675+44
 16201 0fae 1188     		ldrh	r1, [r2]	@ unaligned
 16202 0fb0 9278     		ldrb	r2, [r2, #2]
 16203 0fb2 1980     		strh	r1, [r3]	@ unaligned
 16204 0fb4 9A70     		strb	r2, [r3, #2]
2161:..\src/command_processing.c **** 
2162:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16205              		.loc 1 2162 0
 16206 0fb6 7869     		ldr	r0, [r7, #20]
 16207 0fb8 FFF7FEFF 		bl	strlen
 16208 0fbc 0346     		mov	r3, r0
 16209 0fbe 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 362


 16210 0fc0 7B69     		ldr	r3, [r7, #20]
 16211 0fc2 1344     		add	r3, r3, r2
 16212 0fc4 3E4A     		ldr	r2, .L675+48
 16213 0fc6 1D46     		mov	r5, r3
 16214 0fc8 1446     		mov	r4, r2
 16215 0fca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16216 0fcc 2860     		str	r0, [r5]	@ unaligned
 16217 0fce 6960     		str	r1, [r5, #4]	@ unaligned
 16218 0fd0 AA60     		str	r2, [r5, #8]	@ unaligned
 16219 0fd2 EB60     		str	r3, [r5, #12]	@ unaligned
 16220 0fd4 2068     		ldr	r0, [r4]	@ unaligned
 16221 0fd6 2861     		str	r0, [r5, #16]	@ unaligned
2163:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16222              		.loc 1 2163 0
 16223 0fd8 0023     		movs	r3, #0
 16224 0fda C7F89430 		str	r3, [r7, #148]
 16225 0fde 30E0     		b	.L628
 16226              	.L630:
2164:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16227              		.loc 1 2164 0
 16228 0fe0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16229 0fe4 D7F88C10 		ldr	r1, [r7, #140]
 16230 0fe8 1346     		mov	r3, r2
 16231 0fea 5B00     		lsls	r3, r3, #1
 16232 0fec 1344     		add	r3, r3, r2
 16233 0fee 1B01     		lsls	r3, r3, #4
 16234 0ff0 CA18     		adds	r2, r1, r3
 16235 0ff2 D7F89430 		ldr	r3, [r7, #148]
 16236 0ff6 1344     		add	r3, r3, r2
 16237 0ff8 03F29513 		addw	r3, r3, #405
 16238 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16239 0ffe 1A46     		mov	r2, r3
 16240 1000 07F11C03 		add	r3, r7, #28
 16241 1004 2F49     		ldr	r1, .L675+52
 16242 1006 1846     		mov	r0, r3
 16243 1008 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****                 strcat(info_string, str);
 16244              		.loc 1 2165 0
 16245 100c 07F11C03 		add	r3, r7, #28
 16246 1010 1946     		mov	r1, r3
 16247 1012 7869     		ldr	r0, [r7, #20]
 16248 1014 FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16249              		.loc 1 2166 0
 16250 1018 D7F89430 		ldr	r3, [r7, #148]
 16251 101c 022B     		cmp	r3, #2
 16252 101e 0BD0     		beq	.L629
2167:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16253              		.loc 1 2167 0
 16254 1020 7869     		ldr	r0, [r7, #20]
 16255 1022 FFF7FEFF 		bl	strlen
 16256 1026 0346     		mov	r3, r0
 16257 1028 1A46     		mov	r2, r3
 16258 102a 7B69     		ldr	r3, [r7, #20]
 16259 102c 1344     		add	r3, r3, r2
 16260 102e 264A     		ldr	r2, .L675+56
 16261 1030 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 363


 16262 1032 9278     		ldrb	r2, [r2, #2]
 16263 1034 1980     		strh	r1, [r3]	@ unaligned
 16264 1036 9A70     		strb	r2, [r3, #2]
 16265              	.L629:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16266              		.loc 1 2163 0 discriminator 2
 16267 1038 D7F89430 		ldr	r3, [r7, #148]
 16268 103c 0133     		adds	r3, r3, #1
 16269 103e C7F89430 		str	r3, [r7, #148]
 16270              	.L628:
2163:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16271              		.loc 1 2163 0 is_stmt 0 discriminator 1
 16272 1042 D7F89430 		ldr	r3, [r7, #148]
 16273 1046 022B     		cmp	r3, #2
 16274 1048 CADD     		ble	.L630
2168:..\src/command_processing.c ****                 }                
2169:..\src/command_processing.c ****             }
2170:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16275              		.loc 1 2170 0 is_stmt 1
 16276 104a 7869     		ldr	r0, [r7, #20]
 16277 104c FFF7FEFF 		bl	strlen
 16278 1050 0346     		mov	r3, r0
 16279 1052 1A46     		mov	r2, r3
 16280 1054 7B69     		ldr	r3, [r7, #20]
 16281 1056 1344     		add	r3, r3, r2
 16282 1058 184A     		ldr	r2, .L675+44
 16283 105a 1188     		ldrh	r1, [r2]	@ unaligned
 16284 105c 9278     		ldrb	r2, [r2, #2]
 16285 105e 1980     		strh	r1, [r3]	@ unaligned
 16286 1060 9A70     		strb	r2, [r3, #2]
2171:..\src/command_processing.c **** 
2172:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16287              		.loc 1 2172 0
 16288 1062 7869     		ldr	r0, [r7, #20]
 16289 1064 FFF7FEFF 		bl	strlen
 16290 1068 0346     		mov	r3, r0
 16291 106a 1A46     		mov	r2, r3
 16292 106c 7B69     		ldr	r3, [r7, #20]
 16293 106e 1344     		add	r3, r3, r2
 16294 1070 164A     		ldr	r2, .L675+60
 16295 1072 1D46     		mov	r5, r3
 16296 1074 1446     		mov	r4, r2
 16297 1076 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16298 1078 2860     		str	r0, [r5]	@ unaligned
 16299 107a 6960     		str	r1, [r5, #4]	@ unaligned
 16300 107c AA60     		str	r2, [r5, #8]	@ unaligned
 16301 107e EB60     		str	r3, [r5, #12]	@ unaligned
 16302 1080 2068     		ldr	r0, [r4]	@ unaligned
 16303 1082 2861     		str	r0, [r5, #16]	@ unaligned
 16304 1084 2379     		ldrb	r3, [r4, #4]
 16305 1086 2B75     		strb	r3, [r5, #20]
2173:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16306              		.loc 1 2173 0
 16307 1088 0023     		movs	r3, #0
 16308 108a C7F89430 		str	r3, [r7, #148]
 16309 108e 5FE0     		b	.L631
 16310              	.L676:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 364


 16311              		.align	2
 16312              	.L675:
 16313 1090 3C150000 		.word	.LC202
 16314 1094 54150000 		.word	.LC203
 16315 1098 70150000 		.word	.LC204
 16316 109c 88150000 		.word	.LC205
 16317 10a0 B8150000 		.word	.LC206
 16318 10a4 D4150000 		.word	.LC207
 16319 10a8 E8150000 		.word	.LC208
 16320 10ac 00160000 		.word	.LC209
 16321 10b0 28160000 		.word	.LC210
 16322 10b4 4C160000 		.word	.LC211
 16323 10b8 6C160000 		.word	.LC212
 16324 10bc 50110000 		.word	.LC152
 16325 10c0 88160000 		.word	.LC213
 16326 10c4 7C130000 		.word	.LC183
 16327 10c8 80130000 		.word	.LC184
 16328 10cc 9C160000 		.word	.LC214
 16329              	.L633:
2174:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16330              		.loc 1 2174 0
 16331 10d0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16332 10d4 D7F88C10 		ldr	r1, [r7, #140]
 16333 10d8 1346     		mov	r3, r2
 16334 10da 5B00     		lsls	r3, r3, #1
 16335 10dc 1344     		add	r3, r3, r2
 16336 10de 9B00     		lsls	r3, r3, #2
 16337 10e0 D7F89420 		ldr	r2, [r7, #148]
 16338 10e4 1344     		add	r3, r3, r2
 16339 10e6 6633     		adds	r3, r3, #102
 16340 10e8 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16341 10ec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16342 10f0 D7F88C00 		ldr	r0, [r7, #140]
 16343 10f4 1346     		mov	r3, r2
 16344 10f6 5B00     		lsls	r3, r3, #1
 16345 10f8 1344     		add	r3, r3, r2
 16346 10fa 1B01     		lsls	r3, r3, #4
 16347 10fc C218     		adds	r2, r0, r3
 16348 10fe D7F89430 		ldr	r3, [r7, #148]
 16349 1102 1344     		add	r3, r3, r2
 16350 1104 03F29513 		addw	r3, r3, #405
 16351 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16352 110a 41FA03F2 		asr	r2, r1, r3
 16353 110e 07F11C03 		add	r3, r7, #28
 16354 1112 2349     		ldr	r1, .L677
 16355 1114 1846     		mov	r0, r3
 16356 1116 FFF7FEFF 		bl	sprintf
2175:..\src/command_processing.c ****                 strcat(info_string, str);
 16357              		.loc 1 2175 0
 16358 111a 07F11C03 		add	r3, r7, #28
 16359 111e 1946     		mov	r1, r3
 16360 1120 7869     		ldr	r0, [r7, #20]
 16361 1122 FFF7FEFF 		bl	strcat
2176:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16362              		.loc 1 2176 0
 16363 1126 D7F89430 		ldr	r3, [r7, #148]
 16364 112a 022B     		cmp	r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 365


 16365 112c 0BD0     		beq	.L632
2177:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16366              		.loc 1 2177 0
 16367 112e 7869     		ldr	r0, [r7, #20]
 16368 1130 FFF7FEFF 		bl	strlen
 16369 1134 0346     		mov	r3, r0
 16370 1136 1A46     		mov	r2, r3
 16371 1138 7B69     		ldr	r3, [r7, #20]
 16372 113a 1344     		add	r3, r3, r2
 16373 113c 194A     		ldr	r2, .L677+4
 16374 113e 1188     		ldrh	r1, [r2]	@ unaligned
 16375 1140 9278     		ldrb	r2, [r2, #2]
 16376 1142 1980     		strh	r1, [r3]	@ unaligned
 16377 1144 9A70     		strb	r2, [r3, #2]
 16378              	.L632:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16379              		.loc 1 2173 0 discriminator 2
 16380 1146 D7F89430 		ldr	r3, [r7, #148]
 16381 114a 0133     		adds	r3, r3, #1
 16382 114c C7F89430 		str	r3, [r7, #148]
 16383              	.L631:
2173:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16384              		.loc 1 2173 0 is_stmt 0 discriminator 1
 16385 1150 D7F89430 		ldr	r3, [r7, #148]
 16386 1154 022B     		cmp	r3, #2
 16387 1156 BBDD     		ble	.L633
2178:..\src/command_processing.c ****                 }
2179:..\src/command_processing.c ****             }
2180:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16388              		.loc 1 2180 0 is_stmt 1
 16389 1158 7869     		ldr	r0, [r7, #20]
 16390 115a FFF7FEFF 		bl	strlen
 16391 115e 0346     		mov	r3, r0
 16392 1160 1A46     		mov	r2, r3
 16393 1162 7B69     		ldr	r3, [r7, #20]
 16394 1164 1344     		add	r3, r3, r2
 16395 1166 104A     		ldr	r2, .L677+8
 16396 1168 1188     		ldrh	r1, [r2]	@ unaligned
 16397 116a 9278     		ldrb	r2, [r2, #2]
 16398 116c 1980     		strh	r1, [r3]	@ unaligned
 16399 116e 9A70     		strb	r2, [r3, #2]
2181:..\src/command_processing.c ****                 
2182:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16400              		.loc 1 2182 0
 16401 1170 7869     		ldr	r0, [r7, #20]
 16402 1172 FFF7FEFF 		bl	strlen
 16403 1176 0346     		mov	r3, r0
 16404 1178 1A46     		mov	r2, r3
 16405 117a 7B69     		ldr	r3, [r7, #20]
 16406 117c 1344     		add	r3, r3, r2
 16407 117e 0B4A     		ldr	r2, .L677+12
 16408 1180 1D46     		mov	r5, r3
 16409 1182 1446     		mov	r4, r2
 16410 1184 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16411 1186 2860     		str	r0, [r5]	@ unaligned
 16412 1188 6960     		str	r1, [r5, #4]	@ unaligned
 16413 118a AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 366


 16414 118c EB60     		str	r3, [r5, #12]	@ unaligned
 16415 118e 03CC     		ldmia	r4!, {r0, r1}
 16416 1190 2861     		str	r0, [r5, #16]	@ unaligned
 16417 1192 6961     		str	r1, [r5, #20]	@ unaligned
 16418 1194 2378     		ldrb	r3, [r4]
 16419 1196 2B76     		strb	r3, [r5, #24]
2183:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16420              		.loc 1 2183 0
 16421 1198 0023     		movs	r3, #0
 16422 119a C7F89430 		str	r3, [r7, #148]
 16423 119e 3DE0     		b	.L634
 16424              	.L678:
 16425              		.align	2
 16426              	.L677:
 16427 11a0 B4160000 		.word	.LC215
 16428 11a4 80130000 		.word	.LC184
 16429 11a8 50110000 		.word	.LC152
 16430 11ac B8160000 		.word	.LC216
 16431              	.L636:
2184:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16432              		.loc 1 2184 0
 16433 11b0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16434 11b4 D7F88C10 		ldr	r1, [r7, #140]
 16435 11b8 1346     		mov	r3, r2
 16436 11ba 5B00     		lsls	r3, r3, #1
 16437 11bc 1344     		add	r3, r3, r2
 16438 11be 9B00     		lsls	r3, r3, #2
 16439 11c0 D7F89420 		ldr	r2, [r7, #148]
 16440 11c4 1344     		add	r3, r3, r2
 16441 11c6 6833     		adds	r3, r3, #104
 16442 11c8 9B00     		lsls	r3, r3, #2
 16443 11ca 0B44     		add	r3, r3, r1
 16444 11cc 5B68     		ldr	r3, [r3, #4]	@ float
 16445 11ce 1846     		mov	r0, r3
 16446 11d0 FFF7FEFF 		bl	__aeabi_f2d
 16447 11d4 0346     		mov	r3, r0
 16448 11d6 0C46     		mov	r4, r1
 16449 11d8 07F11C00 		add	r0, r7, #28
 16450 11dc 1A46     		mov	r2, r3
 16451 11de 2346     		mov	r3, r4
 16452 11e0 BF49     		ldr	r1, .L679
 16453 11e2 FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****                 strcat(info_string, str);
 16454              		.loc 1 2185 0
 16455 11e6 07F11C03 		add	r3, r7, #28
 16456 11ea 1946     		mov	r1, r3
 16457 11ec 7869     		ldr	r0, [r7, #20]
 16458 11ee FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16459              		.loc 1 2186 0
 16460 11f2 D7F89430 		ldr	r3, [r7, #148]
 16461 11f6 022B     		cmp	r3, #2
 16462 11f8 0BD0     		beq	.L635
2187:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16463              		.loc 1 2187 0
 16464 11fa 7869     		ldr	r0, [r7, #20]
 16465 11fc FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 367


 16466 1200 0346     		mov	r3, r0
 16467 1202 1A46     		mov	r2, r3
 16468 1204 7B69     		ldr	r3, [r7, #20]
 16469 1206 1344     		add	r3, r3, r2
 16470 1208 B64A     		ldr	r2, .L679+4
 16471 120a 1188     		ldrh	r1, [r2]	@ unaligned
 16472 120c 9278     		ldrb	r2, [r2, #2]
 16473 120e 1980     		strh	r1, [r3]	@ unaligned
 16474 1210 9A70     		strb	r2, [r3, #2]
 16475              	.L635:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16476              		.loc 1 2183 0 discriminator 2
 16477 1212 D7F89430 		ldr	r3, [r7, #148]
 16478 1216 0133     		adds	r3, r3, #1
 16479 1218 C7F89430 		str	r3, [r7, #148]
 16480              	.L634:
2183:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16481              		.loc 1 2183 0 is_stmt 0 discriminator 1
 16482 121c D7F89430 		ldr	r3, [r7, #148]
 16483 1220 022B     		cmp	r3, #2
 16484 1222 C5DD     		ble	.L636
2188:..\src/command_processing.c ****                 }
2189:..\src/command_processing.c ****             }
2190:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16485              		.loc 1 2190 0 is_stmt 1 discriminator 2
 16486 1224 7869     		ldr	r0, [r7, #20]
 16487 1226 FFF7FEFF 		bl	strlen
 16488 122a 0346     		mov	r3, r0
 16489 122c 1A46     		mov	r2, r3
 16490 122e 7B69     		ldr	r3, [r7, #20]
 16491 1230 1344     		add	r3, r3, r2
 16492 1232 AD4A     		ldr	r2, .L679+8
 16493 1234 1188     		ldrh	r1, [r2]	@ unaligned
 16494 1236 9278     		ldrb	r2, [r2, #2]
 16495 1238 1980     		strh	r1, [r3]	@ unaligned
 16496 123a 9A70     		strb	r2, [r3, #2]
2191:..\src/command_processing.c ****             
2192:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2193:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16497              		.loc 1 2193 0 discriminator 2
 16498 123c D7F88430 		ldr	r3, [r7, #132]
 16499 1240 5B6C     		ldr	r3, [r3, #68]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16500              		.loc 1 2192 0 discriminator 2
 16501 1242 1846     		mov	r0, r3
 16502 1244 FFF7FEFF 		bl	__aeabi_f2d
 16503 1248 C7E90201 		strd	r0, [r7, #8]
 16504              		.loc 1 2193 0 discriminator 2
 16505 124c D7F88430 		ldr	r3, [r7, #132]
 16506 1250 9B6C     		ldr	r3, [r3, #72]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16507              		.loc 1 2192 0 discriminator 2
 16508 1252 1846     		mov	r0, r3
 16509 1254 FFF7FEFF 		bl	__aeabi_f2d
 16510 1258 0446     		mov	r4, r0
 16511 125a 0D46     		mov	r5, r1
 16512              		.loc 1 2193 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 368


 16513 125c D7F88430 		ldr	r3, [r7, #132]
 16514 1260 DB6C     		ldr	r3, [r3, #76]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16515              		.loc 1 2192 0 discriminator 2
 16516 1262 1846     		mov	r0, r3
 16517 1264 FFF7FEFF 		bl	__aeabi_f2d
 16518 1268 8046     		mov	r8, r0
 16519 126a 8946     		mov	r9, r1
2194:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16520              		.loc 1 2194 0 discriminator 2
 16521 126c D7F88430 		ldr	r3, [r7, #132]
 16522 1270 1B6D     		ldr	r3, [r3, #80]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16523              		.loc 1 2192 0 discriminator 2
 16524 1272 1846     		mov	r0, r3
 16525 1274 FFF7FEFF 		bl	__aeabi_f2d
 16526 1278 8246     		mov	r10, r0
 16527 127a 8B46     		mov	fp, r1
 16528              		.loc 1 2194 0 discriminator 2
 16529 127c D7F88430 		ldr	r3, [r7, #132]
 16530 1280 5B6D     		ldr	r3, [r3, #84]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16531              		.loc 1 2192 0 discriminator 2
 16532 1282 1846     		mov	r0, r3
 16533 1284 FFF7FEFF 		bl	__aeabi_f2d
 16534 1288 C7E90001 		strd	r0, [r7]
 16535              		.loc 1 2194 0 discriminator 2
 16536 128c D7F88430 		ldr	r3, [r7, #132]
 16537 1290 9B6D     		ldr	r3, [r3, #88]	@ float
2192:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16538              		.loc 1 2192 0 discriminator 2
 16539 1292 1846     		mov	r0, r3
 16540 1294 FFF7FEFF 		bl	__aeabi_f2d
 16541 1298 0246     		mov	r2, r0
 16542 129a 0B46     		mov	r3, r1
 16543 129c 07F11C00 		add	r0, r7, #28
 16544 12a0 CDE90823 		strd	r2, [sp, #32]
 16545 12a4 D7E90012 		ldrd	r1, [r7]
 16546 12a8 CDE90612 		strd	r1, [sp, #24]
 16547 12ac CDE904AB 		strd	r10, [sp, #16]
 16548 12b0 CDE90289 		strd	r8, [sp, #8]
 16549 12b4 CDE90045 		strd	r4, [sp]
 16550 12b8 D7E90223 		ldrd	r2, [r7, #8]
 16551 12bc 8B49     		ldr	r1, .L679+12
 16552 12be FFF7FEFF 		bl	sprintf
2195:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16553              		.loc 1 2195 0 discriminator 2
 16554 12c2 07F11C03 		add	r3, r7, #28
 16555 12c6 1946     		mov	r1, r3
 16556 12c8 7869     		ldr	r0, [r7, #20]
 16557 12ca FFF7FEFF 		bl	strcat
2196:..\src/command_processing.c **** 
2197:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16558              		.loc 1 2197 0 discriminator 2
 16559 12ce D7F88430 		ldr	r3, [r7, #132]
 16560 12d2 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16561 12d6 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 369


 16562 12d8 07F11C03 		add	r3, r7, #28
 16563 12dc 8449     		ldr	r1, .L679+16
 16564 12de 1846     		mov	r0, r3
 16565 12e0 FFF7FEFF 		bl	sprintf
2198:..\src/command_processing.c ****             strcat(info_string, str);
 16566              		.loc 1 2198 0 discriminator 2
 16567 12e4 07F11C03 		add	r3, r7, #28
 16568 12e8 1946     		mov	r1, r3
 16569 12ea 7869     		ldr	r0, [r7, #20]
 16570 12ec FFF7FEFF 		bl	strcat
2199:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16571              		.loc 1 2199 0 discriminator 2
 16572 12f0 7869     		ldr	r0, [r7, #20]
 16573 12f2 FFF7FEFF 		bl	strlen
 16574 12f6 0346     		mov	r3, r0
 16575 12f8 1A46     		mov	r2, r3
 16576 12fa 7B69     		ldr	r3, [r7, #20]
 16577 12fc 1344     		add	r3, r3, r2
 16578 12fe 7A4A     		ldr	r2, .L679+8
 16579 1300 1188     		ldrh	r1, [r2]	@ unaligned
 16580 1302 9278     		ldrb	r2, [r2, #2]
 16581 1304 1980     		strh	r1, [r3]	@ unaligned
 16582 1306 9A70     		strb	r2, [r3, #2]
2200:..\src/command_processing.c **** 
2201:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16583              		.loc 1 2201 0 discriminator 2
 16584 1308 D7F88430 		ldr	r3, [r7, #132]
 16585 130c 596B     		ldr	r1, [r3, #52]
 16586 130e 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16587 1312 D7F88C00 		ldr	r0, [r7, #140]
 16588 1316 1346     		mov	r3, r2
 16589 1318 5B00     		lsls	r3, r3, #1
 16590 131a 1344     		add	r3, r3, r2
 16591 131c 1B01     		lsls	r3, r3, #4
 16592 131e 0344     		add	r3, r3, r0
 16593 1320 03F29513 		addw	r3, r3, #405
 16594 1324 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16595 1326 41FA03F2 		asr	r2, r1, r3
 16596 132a 07F11C03 		add	r3, r7, #28
 16597 132e 7149     		ldr	r1, .L679+20
 16598 1330 1846     		mov	r0, r3
 16599 1332 FFF7FEFF 		bl	sprintf
2202:..\src/command_processing.c ****             strcat(info_string, str);
 16600              		.loc 1 2202 0 discriminator 2
 16601 1336 07F11C03 		add	r3, r7, #28
 16602 133a 1946     		mov	r1, r3
 16603 133c 7869     		ldr	r0, [r7, #20]
 16604 133e FFF7FEFF 		bl	strcat
2203:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16605              		.loc 1 2203 0 discriminator 2
 16606 1342 D7F88430 		ldr	r3, [r7, #132]
 16607 1346 996B     		ldr	r1, [r3, #56]
 16608 1348 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16609 134c D7F88C00 		ldr	r0, [r7, #140]
 16610 1350 1346     		mov	r3, r2
 16611 1352 5B00     		lsls	r3, r3, #1
 16612 1354 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 370


 16613 1356 1B01     		lsls	r3, r3, #4
 16614 1358 0344     		add	r3, r3, r0
 16615 135a 03F29513 		addw	r3, r3, #405
 16616 135e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16617 1360 41FA03F2 		asr	r2, r1, r3
 16618 1364 07F11C03 		add	r3, r7, #28
 16619 1368 6349     		ldr	r1, .L679+24
 16620 136a 1846     		mov	r0, r3
 16621 136c FFF7FEFF 		bl	sprintf
2204:..\src/command_processing.c ****             strcat(info_string, str);
 16622              		.loc 1 2204 0 discriminator 2
 16623 1370 07F11C03 		add	r3, r7, #28
 16624 1374 1946     		mov	r1, r3
 16625 1376 7869     		ldr	r0, [r7, #20]
 16626 1378 FFF7FEFF 		bl	strcat
2205:..\src/command_processing.c **** 
2206:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16627              		.loc 1 2206 0 discriminator 2
 16628 137c D7F88430 		ldr	r3, [r7, #132]
 16629 1380 1A6C     		ldr	r2, [r3, #64]
 16630 1382 D7F88430 		ldr	r3, [r7, #132]
 16631 1386 DB6B     		ldr	r3, [r3, #60]
 16632 1388 07F11C00 		add	r0, r7, #28
 16633 138c 5B49     		ldr	r1, .L679+28
 16634 138e FFF7FEFF 		bl	sprintf
2207:..\src/command_processing.c ****             strcat(info_string, str);
 16635              		.loc 1 2207 0 discriminator 2
 16636 1392 07F11C03 		add	r3, r7, #28
 16637 1396 1946     		mov	r1, r3
 16638 1398 7869     		ldr	r0, [r7, #20]
 16639 139a FFF7FEFF 		bl	strcat
2208:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16640              		.loc 1 2208 0 discriminator 2
 16641 139e 7869     		ldr	r0, [r7, #20]
 16642 13a0 FFF7FEFF 		bl	strlen
 16643 13a4 0346     		mov	r3, r0
 16644 13a6 1A46     		mov	r2, r3
 16645 13a8 7B69     		ldr	r3, [r7, #20]
 16646 13aa 1344     		add	r3, r3, r2
 16647 13ac 4E4A     		ldr	r2, .L679+8
 16648 13ae 1188     		ldrh	r1, [r2]	@ unaligned
 16649 13b0 9278     		ldrb	r2, [r2, #2]
 16650 13b2 1980     		strh	r1, [r3]	@ unaligned
 16651 13b4 9A70     		strb	r2, [r3, #2]
2209:..\src/command_processing.c **** 
2210:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16652              		.loc 1 2210 0 discriminator 2
 16653 13b6 D7F88430 		ldr	r3, [r7, #132]
 16654 13ba B3F95C30 		ldrsh	r3, [r3, #92]
 16655 13be 1A46     		mov	r2, r3
 16656 13c0 07F11C03 		add	r3, r7, #28
 16657 13c4 4E49     		ldr	r1, .L679+32
 16658 13c6 1846     		mov	r0, r3
 16659 13c8 FFF7FEFF 		bl	sprintf
2211:..\src/command_processing.c ****             strcat(info_string, str);
 16660              		.loc 1 2211 0 discriminator 2
 16661 13cc 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 371


 16662 13d0 1946     		mov	r1, r3
 16663 13d2 7869     		ldr	r0, [r7, #20]
 16664 13d4 FFF7FEFF 		bl	strcat
2212:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2213:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2214:..\src/command_processing.c ****             strcat(info_string, str);
2215:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2216:..\src/command_processing.c ****                 case DRIVER_MC33887:
2217:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2218:..\src/command_processing.c ****                     break;
2219:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2220:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2221:..\src/command_processing.c ****                     break;
2222:..\src/command_processing.c ****                 case DRIVER_BRUSHLESS:
2223:..\src/command_processing.c ****                     strcat(info_string, "Driver type: ESC (Brushless)\r\n");
2224:..\src/command_processing.c ****                     break;
2225:..\src/command_processing.c ****                 default:
2226:..\src/command_processing.c ****                     break;
2227:..\src/command_processing.c ****             }
2228:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2229:..\src/command_processing.c ****             strcat(info_string, str);
2230:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2231:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2232:..\src/command_processing.c ****             else
2233:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2234:..\src/command_processing.c **** #endif                
2235:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16665              		.loc 1 2235 0 discriminator 2
 16666 13d8 7869     		ldr	r0, [r7, #20]
 16667 13da FFF7FEFF 		bl	strlen
 16668 13de 0346     		mov	r3, r0
 16669 13e0 1A46     		mov	r2, r3
 16670 13e2 7B69     		ldr	r3, [r7, #20]
 16671 13e4 1344     		add	r3, r3, r2
 16672 13e6 404A     		ldr	r2, .L679+8
 16673 13e8 1188     		ldrh	r1, [r2]	@ unaligned
 16674 13ea 9278     		ldrb	r2, [r2, #2]
 16675 13ec 1980     		strh	r1, [r3]	@ unaligned
 16676 13ee 9A70     		strb	r2, [r3, #2]
 16677              	.LBE26:
1962:..\src/command_processing.c ****             
 16678              		.loc 1 1962 0 discriminator 2
 16679 13f0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16680 13f4 0133     		adds	r3, r3, #1
 16681 13f6 87F89330 		strb	r3, [r7, #147]
 16682              	.L584:
1962:..\src/command_processing.c ****             
 16683              		.loc 1 1962 0 is_stmt 0 discriminator 1
 16684 13fa D7F88C30 		ldr	r3, [r7, #140]
 16685 13fe 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16686 1402 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16687 1406 9A42     		cmp	r2, r3
 16688 1408 7EF6AAAF 		bls	.L637
 16689              	.LBE25:
2236:..\src/command_processing.c ****         }
2237:..\src/command_processing.c ****       
2238:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 372


 16690              		.loc 1 2238 0 is_stmt 1
 16691 140c 7869     		ldr	r0, [r7, #20]
 16692 140e FFF7FEFF 		bl	strlen
 16693 1412 0346     		mov	r3, r0
 16694 1414 1A46     		mov	r2, r3
 16695 1416 7B69     		ldr	r3, [r7, #20]
 16696 1418 1344     		add	r3, r3, r2
 16697 141a 3A4A     		ldr	r2, .L679+36
 16698 141c 1D46     		mov	r5, r3
 16699 141e 1446     		mov	r4, r2
 16700 1420 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16701 1422 2860     		str	r0, [r5]	@ unaligned
 16702 1424 6960     		str	r1, [r5, #4]	@ unaligned
 16703 1426 AA60     		str	r2, [r5, #8]	@ unaligned
 16704 1428 EB60     		str	r3, [r5, #12]	@ unaligned
 16705 142a 2068     		ldr	r0, [r4]	@ unaligned
 16706 142c 2861     		str	r0, [r5, #16]	@ unaligned
2239:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16707              		.loc 1 2239 0
 16708 142e D7F88C30 		ldr	r3, [r7, #140]
 16709 1432 B3F8F031 		ldrh	r3, [r3, #496]
 16710 1436 1A46     		mov	r2, r3
 16711 1438 D7F88C30 		ldr	r3, [r7, #140]
 16712 143c B3F8F231 		ldrh	r3, [r3, #498]
 16713 1440 07F11C00 		add	r0, r7, #28
 16714 1444 3049     		ldr	r1, .L679+40
 16715 1446 FFF7FEFF 		bl	sprintf
2240:..\src/command_processing.c ****         strcat(info_string, str);
 16716              		.loc 1 2240 0
 16717 144a 07F11C03 		add	r3, r7, #28
 16718 144e 1946     		mov	r1, r3
 16719 1450 7869     		ldr	r0, [r7, #20]
 16720 1452 FFF7FEFF 		bl	strcat
2241:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16721              		.loc 1 2241 0
 16722 1456 7869     		ldr	r0, [r7, #20]
 16723 1458 FFF7FEFF 		bl	strlen
 16724 145c 0346     		mov	r3, r0
 16725 145e 1A46     		mov	r2, r3
 16726 1460 7B69     		ldr	r3, [r7, #20]
 16727 1462 1344     		add	r3, r3, r2
 16728 1464 204A     		ldr	r2, .L679+8
 16729 1466 1188     		ldrh	r1, [r2]	@ unaligned
 16730 1468 9278     		ldrb	r2, [r2, #2]
 16731 146a 1980     		strh	r1, [r3]	@ unaligned
 16732 146c 9A70     		strb	r2, [r3, #2]
2242:..\src/command_processing.c **** 
2243:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16733              		.loc 1 2243 0
 16734 146e D7F88C30 		ldr	r3, [r7, #140]
 16735 1472 D3F8F421 		ldr	r2, [r3, #500]
 16736 1476 D7F88C30 		ldr	r3, [r7, #140]
 16737 147a D3F8F831 		ldr	r3, [r3, #504]
 16738 147e 07F11C00 		add	r0, r7, #28
 16739 1482 2249     		ldr	r1, .L679+44
 16740 1484 FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 373


 16741              		.loc 1 2244 0
 16742 1488 07F11C03 		add	r3, r7, #28
 16743 148c 1946     		mov	r1, r3
 16744 148e 7869     		ldr	r0, [r7, #20]
 16745 1490 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16746              		.loc 1 2245 0
 16747 1494 7869     		ldr	r0, [r7, #20]
 16748 1496 FFF7FEFF 		bl	strlen
 16749 149a 0346     		mov	r3, r0
 16750 149c 1A46     		mov	r2, r3
 16751 149e 7B69     		ldr	r3, [r7, #20]
 16752 14a0 1344     		add	r3, r3, r2
 16753 14a2 114A     		ldr	r2, .L679+8
 16754 14a4 1188     		ldrh	r1, [r2]	@ unaligned
 16755 14a6 9278     		ldrb	r2, [r2, #2]
 16756 14a8 1980     		strh	r1, [r3]	@ unaligned
 16757 14aa 9A70     		strb	r2, [r3, #2]
2246:..\src/command_processing.c **** 
2247:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16758              		.loc 1 2247 0
 16759 14ac D7F88C30 		ldr	r3, [r7, #140]
 16760 14b0 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16761 14b4 002B     		cmp	r3, #0
 16762 14b6 2DD0     		beq	.L638
2248:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16763              		.loc 1 2248 0
 16764 14b8 7869     		ldr	r0, [r7, #20]
 16765 14ba FFF7FEFF 		bl	strlen
 16766 14be 0346     		mov	r3, r0
 16767 14c0 1A46     		mov	r2, r3
 16768 14c2 7B69     		ldr	r3, [r7, #20]
 16769 14c4 1344     		add	r3, r3, r2
 16770 14c6 124A     		ldr	r2, .L679+48
 16771 14c8 1D46     		mov	r5, r3
 16772 14ca 1446     		mov	r4, r2
 16773 14cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16774 14ce 2860     		str	r0, [r5]	@ unaligned
 16775 14d0 6960     		str	r1, [r5, #4]	@ unaligned
 16776 14d2 AA60     		str	r2, [r5, #8]	@ unaligned
 16777 14d4 EB60     		str	r3, [r5, #12]	@ unaligned
 16778 14d6 2068     		ldr	r0, [r4]	@ unaligned
 16779 14d8 2861     		str	r0, [r5, #16]	@ unaligned
 16780 14da 2379     		ldrb	r3, [r4, #4]
 16781 14dc 2B75     		strb	r3, [r5, #20]
 16782 14de 2AE0     		b	.L639
 16783              	.L680:
 16784              		.align	2
 16785              	.L679:
 16786 14e0 D4160000 		.word	.LC217
 16787 14e4 80130000 		.word	.LC184
 16788 14e8 50110000 		.word	.LC152
 16789 14ec D8160000 		.word	.LC218
 16790 14f0 08170000 		.word	.LC219
 16791 14f4 24170000 		.word	.LC220
 16792 14f8 48170000 		.word	.LC221
 16793 14fc 58170000 		.word	.LC222
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 374


 16794 1500 74170000 		.word	.LC223
 16795 1504 88170000 		.word	.LC224
 16796 1508 9C170000 		.word	.LC225
 16797 150c C0170000 		.word	.LC226
 16798 1510 E4170000 		.word	.LC227
 16799              	.L638:
2249:..\src/command_processing.c ****         else
2250:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16800              		.loc 1 2250 0
 16801 1514 7869     		ldr	r0, [r7, #20]
 16802 1516 FFF7FEFF 		bl	strlen
 16803 151a 0346     		mov	r3, r0
 16804 151c 1A46     		mov	r2, r3
 16805 151e 7B69     		ldr	r3, [r7, #20]
 16806 1520 1344     		add	r3, r3, r2
 16807 1522 BA4A     		ldr	r2, .L681
 16808 1524 1D46     		mov	r5, r3
 16809 1526 1446     		mov	r4, r2
 16810 1528 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16811 152a 2860     		str	r0, [r5]	@ unaligned
 16812 152c 6960     		str	r1, [r5, #4]	@ unaligned
 16813 152e AA60     		str	r2, [r5, #8]	@ unaligned
 16814 1530 EB60     		str	r3, [r5, #12]	@ unaligned
 16815 1532 2068     		ldr	r0, [r4]	@ unaligned
 16816 1534 2861     		str	r0, [r5, #16]	@ unaligned
 16817              	.L639:
2251:..\src/command_processing.c ****             
2252:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16818              		.loc 1 2252 0
 16819 1536 D7F88C30 		ldr	r3, [r7, #140]
 16820 153a 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16821 153e 002B     		cmp	r3, #0
 16822 1540 17D0     		beq	.L640
2253:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16823              		.loc 1 2253 0
 16824 1542 7869     		ldr	r0, [r7, #20]
 16825 1544 FFF7FEFF 		bl	strlen
 16826 1548 0346     		mov	r3, r0
 16827 154a 1A46     		mov	r2, r3
 16828 154c 7B69     		ldr	r3, [r7, #20]
 16829 154e 1344     		add	r3, r3, r2
 16830 1550 AF4A     		ldr	r2, .L681+4
 16831 1552 1D46     		mov	r5, r3
 16832 1554 1446     		mov	r4, r2
 16833 1556 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16834 1558 2860     		str	r0, [r5]	@ unaligned
 16835 155a 6960     		str	r1, [r5, #4]	@ unaligned
 16836 155c AA60     		str	r2, [r5, #8]	@ unaligned
 16837 155e EB60     		str	r3, [r5, #12]	@ unaligned
 16838 1560 03CC     		ldmia	r4!, {r0, r1}
 16839 1562 2861     		str	r0, [r5, #16]	@ unaligned
 16840 1564 6961     		str	r1, [r5, #20]	@ unaligned
 16841 1566 2388     		ldrh	r3, [r4]	@ unaligned
 16842 1568 A278     		ldrb	r2, [r4, #2]
 16843 156a 2B83     		strh	r3, [r5, #24]	@ unaligned
 16844 156c 1346     		mov	r3, r2
 16845 156e AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 375


 16846 1570 13E0     		b	.L641
 16847              	.L640:
2254:..\src/command_processing.c ****         else
2255:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16848              		.loc 1 2255 0
 16849 1572 7869     		ldr	r0, [r7, #20]
 16850 1574 FFF7FEFF 		bl	strlen
 16851 1578 0346     		mov	r3, r0
 16852 157a 1A46     		mov	r2, r3
 16853 157c 7B69     		ldr	r3, [r7, #20]
 16854 157e 1344     		add	r3, r3, r2
 16855 1580 A44A     		ldr	r2, .L681+8
 16856 1582 1D46     		mov	r5, r3
 16857 1584 1446     		mov	r4, r2
 16858 1586 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16859 1588 2860     		str	r0, [r5]	@ unaligned
 16860 158a 6960     		str	r1, [r5, #4]	@ unaligned
 16861 158c AA60     		str	r2, [r5, #8]	@ unaligned
 16862 158e EB60     		str	r3, [r5, #12]	@ unaligned
 16863 1590 03CC     		ldmia	r4!, {r0, r1}
 16864 1592 2861     		str	r0, [r5, #16]	@ unaligned
 16865 1594 6961     		str	r1, [r5, #20]	@ unaligned
 16866 1596 2388     		ldrh	r3, [r4]	@ unaligned
 16867 1598 2B83     		strh	r3, [r5, #24]	@ unaligned
 16868              	.L641:
2256:..\src/command_processing.c **** 
2257:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16869              		.loc 1 2257 0
 16870 159a D7F88C30 		ldr	r3, [r7, #140]
 16871 159e 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16872 15a2 1A46     		mov	r2, r3
 16873 15a4 D7F88C30 		ldr	r3, [r7, #140]
 16874 15a8 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16875 15ac 07F11C00 		add	r0, r7, #28
 16876 15b0 9949     		ldr	r1, .L681+12
 16877 15b2 FFF7FEFF 		bl	sprintf
2258:..\src/command_processing.c ****         strcat(info_string, str);
 16878              		.loc 1 2258 0
 16879 15b6 07F11C03 		add	r3, r7, #28
 16880 15ba 1946     		mov	r1, r3
 16881 15bc 7869     		ldr	r0, [r7, #20]
 16882 15be FFF7FEFF 		bl	strcat
2259:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16883              		.loc 1 2259 0
 16884 15c2 7869     		ldr	r0, [r7, #20]
 16885 15c4 FFF7FEFF 		bl	strlen
 16886 15c8 0346     		mov	r3, r0
 16887 15ca 1A46     		mov	r2, r3
 16888 15cc 7B69     		ldr	r3, [r7, #20]
 16889 15ce 1344     		add	r3, r3, r2
 16890 15d0 924A     		ldr	r2, .L681+16
 16891 15d2 1188     		ldrh	r1, [r2]	@ unaligned
 16892 15d4 9278     		ldrb	r2, [r2, #2]
 16893 15d6 1980     		strh	r1, [r3]	@ unaligned
 16894 15d8 9A70     		strb	r2, [r3, #2]
2260:..\src/command_processing.c **** 
2261:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 376


 16895              		.loc 1 2261 0
 16896 15da D7F88C30 		ldr	r3, [r7, #140]
 16897 15de 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16898 15e2 012B     		cmp	r3, #1
 16899 15e4 6ED1     		bne	.L642
2262:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16900              		.loc 1 2262 0
 16901 15e6 7869     		ldr	r0, [r7, #20]
 16902 15e8 FFF7FEFF 		bl	strlen
 16903 15ec 0346     		mov	r3, r0
 16904 15ee 1A46     		mov	r2, r3
 16905 15f0 7B69     		ldr	r3, [r7, #20]
 16906 15f2 1344     		add	r3, r3, r2
 16907 15f4 8A4A     		ldr	r2, .L681+20
 16908 15f6 1C46     		mov	r4, r3
 16909 15f8 1546     		mov	r5, r2
 16910 15fa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16911 15fc 2060     		str	r0, [r4]	@ unaligned
 16912 15fe 6160     		str	r1, [r4, #4]	@ unaligned
 16913 1600 A260     		str	r2, [r4, #8]	@ unaligned
 16914 1602 E360     		str	r3, [r4, #12]	@ unaligned
 16915 1604 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16916 1606 2061     		str	r0, [r4, #16]	@ unaligned
 16917 1608 6161     		str	r1, [r4, #20]	@ unaligned
 16918 160a A261     		str	r2, [r4, #24]	@ unaligned
 16919 160c E361     		str	r3, [r4, #28]	@ unaligned
2263:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16920              		.loc 1 2263 0
 16921 160e 0023     		movs	r3, #0
 16922 1610 C7F89430 		str	r3, [r7, #148]
 16923 1614 25E0     		b	.L643
 16924              	.L644:
2264:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16925              		.loc 1 2264 0 discriminator 3
 16926 1616 D7F89430 		ldr	r3, [r7, #148]
 16927 161a 591C     		adds	r1, r3, #1
 16928 161c 814A     		ldr	r2, .L681+24
 16929 161e D7F89430 		ldr	r3, [r7, #148]
 16930 1622 0233     		adds	r3, r3, #2
 16931 1624 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16932 1628 07F11C00 		add	r0, r7, #28
 16933 162c 0A46     		mov	r2, r1
 16934 162e 7E49     		ldr	r1, .L681+28
 16935 1630 FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****                 strcat(info_string, str);
 16936              		.loc 1 2265 0 discriminator 3
 16937 1634 07F11C03 		add	r3, r7, #28
 16938 1638 1946     		mov	r1, r3
 16939 163a 7869     		ldr	r0, [r7, #20]
 16940 163c FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16941              		.loc 1 2266 0 discriminator 3
 16942 1640 7869     		ldr	r0, [r7, #20]
 16943 1642 FFF7FEFF 		bl	strlen
 16944 1646 0346     		mov	r3, r0
 16945 1648 1A46     		mov	r2, r3
 16946 164a 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 377


 16947 164c 1344     		add	r3, r3, r2
 16948 164e 734A     		ldr	r2, .L681+16
 16949 1650 1188     		ldrh	r1, [r2]	@ unaligned
 16950 1652 9278     		ldrb	r2, [r2, #2]
 16951 1654 1980     		strh	r1, [r3]	@ unaligned
 16952 1656 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16953              		.loc 1 2263 0 discriminator 3
 16954 1658 D7F89430 		ldr	r3, [r7, #148]
 16955 165c 0133     		adds	r3, r3, #1
 16956 165e C7F89430 		str	r3, [r7, #148]
 16957              	.L643:
2263:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 16958              		.loc 1 2263 0 is_stmt 0 discriminator 1
 16959 1662 D7F89430 		ldr	r3, [r7, #148]
 16960 1666 052B     		cmp	r3, #5
 16961 1668 D5DD     		ble	.L644
2267:..\src/command_processing.c ****             }
2268:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 16962              		.loc 1 2268 0 is_stmt 1
 16963 166a 0023     		movs	r3, #0
 16964 166c C7F89430 		str	r3, [r7, #148]
 16965 1670 24E0     		b	.L645
 16966              	.L646:
2269:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16967              		.loc 1 2269 0 discriminator 3
 16968 1672 D7F89430 		ldr	r3, [r7, #148]
 16969 1676 591C     		adds	r1, r3, #1
 16970 1678 6A4A     		ldr	r2, .L681+24
 16971 167a D7F89430 		ldr	r3, [r7, #148]
 16972 167e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16973 1682 07F11C00 		add	r0, r7, #28
 16974 1686 0A46     		mov	r2, r1
 16975 1688 6849     		ldr	r1, .L681+32
 16976 168a FFF7FEFF 		bl	sprintf
2270:..\src/command_processing.c ****                 strcat(info_string, str);
 16977              		.loc 1 2270 0 discriminator 3
 16978 168e 07F11C03 		add	r3, r7, #28
 16979 1692 1946     		mov	r1, r3
 16980 1694 7869     		ldr	r0, [r7, #20]
 16981 1696 FFF7FEFF 		bl	strcat
2271:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16982              		.loc 1 2271 0 discriminator 3
 16983 169a 7869     		ldr	r0, [r7, #20]
 16984 169c FFF7FEFF 		bl	strlen
 16985 16a0 0346     		mov	r3, r0
 16986 16a2 1A46     		mov	r2, r3
 16987 16a4 7B69     		ldr	r3, [r7, #20]
 16988 16a6 1344     		add	r3, r3, r2
 16989 16a8 5C4A     		ldr	r2, .L681+16
 16990 16aa 1188     		ldrh	r1, [r2]	@ unaligned
 16991 16ac 9278     		ldrb	r2, [r2, #2]
 16992 16ae 1980     		strh	r1, [r3]	@ unaligned
 16993 16b0 9A70     		strb	r2, [r3, #2]
2268:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16994              		.loc 1 2268 0 discriminator 3
 16995 16b2 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 378


 16996 16b6 0133     		adds	r3, r3, #1
 16997 16b8 C7F89430 		str	r3, [r7, #148]
 16998              	.L645:
2268:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 16999              		.loc 1 2268 0 is_stmt 0 discriminator 1
 17000 16bc D7F89430 		ldr	r3, [r7, #148]
 17001 16c0 012B     		cmp	r3, #1
 17002 16c2 D6DD     		ble	.L646
 17003              	.L642:
2272:..\src/command_processing.c ****             }
2273:..\src/command_processing.c ****         }
2274:..\src/command_processing.c **** 
2275:..\src/command_processing.c **** #ifdef GENERIC_FW
2276:..\src/command_processing.c ****     
2277:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2278:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
2279:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
2280:..\src/command_processing.c ****         strcat(info_string, str);
2281:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2282:..\src/command_processing.c **** 
2283:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
2284:..\src/command_processing.c ****         strcat(info_string, str);
2285:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2286:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
2287:..\src/command_processing.c ****         strcat(info_string, str);
2288:..\src/command_processing.c ****         strcat(info_string, "\r\n");
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** #endif
2291:..\src/command_processing.c ****         
2292:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17004              		.loc 1 2292 0 is_stmt 1
 17005 16c4 D7F88C30 		ldr	r3, [r7, #140]
 17006 16c8 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17007 16cc 002B     		cmp	r3, #0
 17008 16ce 63D0     		beq	.L647
2293:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17009              		.loc 1 2293 0
 17010 16d0 D7F88C30 		ldr	r3, [r7, #140]
 17011 16d4 D3F8A422 		ldr	r2, [r3, #676]
 17012 16d8 07F11C03 		add	r3, r7, #28
 17013 16dc 5449     		ldr	r1, .L681+36
 17014 16de 1846     		mov	r0, r3
 17015 16e0 FFF7FEFF 		bl	sprintf
2294:..\src/command_processing.c ****             strcat(info_string, str);
 17016              		.loc 1 2294 0
 17017 16e4 07F11C03 		add	r3, r7, #28
 17018 16e8 1946     		mov	r1, r3
 17019 16ea 7869     		ldr	r0, [r7, #20]
 17020 16ec FFF7FEFF 		bl	strcat
2295:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17021              		.loc 1 2295 0
 17022 16f0 7869     		ldr	r0, [r7, #20]
 17023 16f2 FFF7FEFF 		bl	strlen
 17024 16f6 0346     		mov	r3, r0
 17025 16f8 1A46     		mov	r2, r3
 17026 16fa 7B69     		ldr	r3, [r7, #20]
 17027 16fc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 379


 17028 16fe 474A     		ldr	r2, .L681+16
 17029 1700 1188     		ldrh	r1, [r2]	@ unaligned
 17030 1702 9278     		ldrb	r2, [r2, #2]
 17031 1704 1980     		strh	r1, [r3]	@ unaligned
 17032 1706 9A70     		strb	r2, [r3, #2]
2296:..\src/command_processing.c ****             
2297:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17033              		.loc 1 2297 0
 17034 1708 D7F88C30 		ldr	r3, [r7, #140]
 17035 170c D3F8A822 		ldr	r2, [r3, #680]
 17036 1710 07F11C03 		add	r3, r7, #28
 17037 1714 4749     		ldr	r1, .L681+40
 17038 1716 1846     		mov	r0, r3
 17039 1718 FFF7FEFF 		bl	sprintf
2298:..\src/command_processing.c ****             strcat(info_string, str);
 17040              		.loc 1 2298 0
 17041 171c 07F11C03 		add	r3, r7, #28
 17042 1720 1946     		mov	r1, r3
 17043 1722 7869     		ldr	r0, [r7, #20]
 17044 1724 FFF7FEFF 		bl	strcat
2299:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17045              		.loc 1 2299 0
 17046 1728 7869     		ldr	r0, [r7, #20]
 17047 172a FFF7FEFF 		bl	strlen
 17048 172e 0346     		mov	r3, r0
 17049 1730 1A46     		mov	r2, r3
 17050 1732 7B69     		ldr	r3, [r7, #20]
 17051 1734 1344     		add	r3, r3, r2
 17052 1736 394A     		ldr	r2, .L681+16
 17053 1738 1188     		ldrh	r1, [r2]	@ unaligned
 17054 173a 9278     		ldrb	r2, [r2, #2]
 17055 173c 1980     		strh	r1, [r3]	@ unaligned
 17056 173e 9A70     		strb	r2, [r3, #2]
2300:..\src/command_processing.c ****             
2301:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17057              		.loc 1 2301 0
 17058 1740 D7F88C30 		ldr	r3, [r7, #140]
 17059 1744 D3F8A022 		ldr	r2, [r3, #672]
 17060 1748 D7F88C30 		ldr	r3, [r7, #140]
 17061 174c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17062 1750 1846     		mov	r0, r3
 17063 1752 D7F88C10 		ldr	r1, [r7, #140]
 17064 1756 0346     		mov	r3, r0
 17065 1758 5B00     		lsls	r3, r3, #1
 17066 175a 0344     		add	r3, r3, r0
 17067 175c 1B01     		lsls	r3, r3, #4
 17068 175e 0B44     		add	r3, r3, r1
 17069 1760 03F29513 		addw	r3, r3, #405
 17070 1764 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17071 1766 1A41     		asrs	r2, r2, r3
 17072 1768 07F11C03 		add	r3, r7, #28
 17073 176c 3249     		ldr	r1, .L681+44
 17074 176e 1846     		mov	r0, r3
 17075 1770 FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****             strcat(info_string, str);
 17076              		.loc 1 2302 0
 17077 1774 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 380


 17078 1778 1946     		mov	r1, r3
 17079 177a 7869     		ldr	r0, [r7, #20]
 17080 177c FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17081              		.loc 1 2303 0
 17082 1780 7869     		ldr	r0, [r7, #20]
 17083 1782 FFF7FEFF 		bl	strlen
 17084 1786 0346     		mov	r3, r0
 17085 1788 1A46     		mov	r2, r3
 17086 178a 7B69     		ldr	r3, [r7, #20]
 17087 178c 1344     		add	r3, r3, r2
 17088 178e 234A     		ldr	r2, .L681+16
 17089 1790 1188     		ldrh	r1, [r2]	@ unaligned
 17090 1792 9278     		ldrb	r2, [r2, #2]
 17091 1794 1980     		strh	r1, [r3]	@ unaligned
 17092 1796 9A70     		strb	r2, [r3, #2]
 17093              	.L647:
2304:..\src/command_processing.c ****         }
2305:..\src/command_processing.c **** 
2306:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17094              		.loc 1 2306 0
 17095 1798 D7F88C30 		ldr	r3, [r7, #140]
 17096 179c 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17097 17a0 002B     		cmp	r3, #0
 17098 17a2 00F0CD81 		beq	.L648
2307:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17099              		.loc 1 2307 0
 17100 17a6 254B     		ldr	r3, .L681+48
 17101 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17102 17aa 1A46     		mov	r2, r3
 17103 17ac 07F11C03 		add	r3, r7, #28
 17104 17b0 2349     		ldr	r1, .L681+52
 17105 17b2 1846     		mov	r0, r3
 17106 17b4 FFF7FEFF 		bl	sprintf
2308:..\src/command_processing.c ****             strcat(info_string, str);
 17107              		.loc 1 2308 0
 17108 17b8 07F11C03 		add	r3, r7, #28
 17109 17bc 1946     		mov	r1, r3
 17110 17be 7869     		ldr	r0, [r7, #20]
 17111 17c0 FFF7FEFF 		bl	strcat
2309:..\src/command_processing.c ****             
2310:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17112              		.loc 1 2310 0
 17113 17c4 7869     		ldr	r0, [r7, #20]
 17114 17c6 FFF7FEFF 		bl	strlen
 17115 17ca 0346     		mov	r3, r0
 17116 17cc 1A46     		mov	r2, r3
 17117 17ce 7B69     		ldr	r3, [r7, #20]
 17118 17d0 1344     		add	r3, r3, r2
 17119 17d2 124A     		ldr	r2, .L681+16
 17120 17d4 1188     		ldrh	r1, [r2]	@ unaligned
 17121 17d6 9278     		ldrb	r2, [r2, #2]
 17122 17d8 1980     		strh	r1, [r3]	@ unaligned
 17123 17da 9A70     		strb	r2, [r3, #2]
2311:..\src/command_processing.c ****             
2312:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17124              		.loc 1 2312 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 381


 17125 17dc 7869     		ldr	r0, [r7, #20]
 17126 17de FFF7FEFF 		bl	strlen
 17127 17e2 0346     		mov	r3, r0
 17128 17e4 1A46     		mov	r2, r3
 17129 17e6 7B69     		ldr	r3, [r7, #20]
 17130 17e8 1344     		add	r3, r3, r2
 17131 17ea 164A     		ldr	r2, .L681+56
 17132 17ec 1D46     		mov	r5, r3
 17133 17ee 1446     		mov	r4, r2
 17134 17f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17135 17f2 2860     		str	r0, [r5]	@ unaligned
 17136 17f4 6960     		str	r1, [r5, #4]	@ unaligned
 17137 17f6 AA60     		str	r2, [r5, #8]	@ unaligned
 17138 17f8 EB60     		str	r3, [r5, #12]	@ unaligned
 17139 17fa 2068     		ldr	r0, [r4]	@ unaligned
 17140 17fc 2861     		str	r0, [r5, #16]	@ unaligned
 17141 17fe 2379     		ldrb	r3, [r4, #4]
 17142 1800 2B75     		strb	r3, [r5, #20]
2313:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17143              		.loc 1 2313 0
 17144 1802 0023     		movs	r3, #0
 17145 1804 C7F89430 		str	r3, [r7, #148]
 17146 1808 83E1     		b	.L649
 17147              	.L682:
 17148 180a 00BF     		.align	2
 17149              	.L681:
 17150 180c FC170000 		.word	.LC228
 17151 1810 10180000 		.word	.LC229
 17152 1814 2C180000 		.word	.LC230
 17153 1818 48180000 		.word	.LC231
 17154 181c 50110000 		.word	.LC152
 17155 1820 60180000 		.word	.LC232
 17156 1824 00000000 		.word	g_adc_meas
 17157 1828 80180000 		.word	.LC233
 17158 182c 90180000 		.word	.LC234
 17159 1830 A4180000 		.word	.LC235
 17160 1834 C0180000 		.word	.LC236
 17161 1838 E8180000 		.word	.LC237
 17162 183c 00000000 		.word	N_IMU_Connected
 17163 1840 FC180000 		.word	.LC238
 17164 1844 10190000 		.word	.LC239
 17165              	.L660:
2314:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17166              		.loc 1 2314 0
 17167 1848 D14A     		ldr	r2, .L683
 17168 184a D7F89430 		ldr	r3, [r7, #148]
 17169 184e 1344     		add	r3, r3, r2
 17170 1850 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17171 1852 07F11C00 		add	r0, r7, #28
 17172 1856 D7F89420 		ldr	r2, [r7, #148]
 17173 185a CE49     		ldr	r1, .L683+4
 17174 185c FFF7FEFF 		bl	sprintf
2315:..\src/command_processing.c ****                 strcat(info_string, str);
 17175              		.loc 1 2315 0
 17176 1860 07F11C03 		add	r3, r7, #28
 17177 1864 1946     		mov	r1, r3
 17178 1866 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 382


 17179 1868 FFF7FEFF 		bl	strcat
2316:..\src/command_processing.c ****                 
2317:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17180              		.loc 1 2317 0
 17181 186c 07F11C03 		add	r3, r7, #28
 17182 1870 C94A     		ldr	r2, .L683+8
 17183 1872 1C46     		mov	r4, r3
 17184 1874 1546     		mov	r5, r2
 17185 1876 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17186 1878 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17187 187a 2B68     		ldr	r3, [r5]
 17188 187c 2380     		strh	r3, [r4]	@ movhi
2318:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17189              		.loc 1 2318 0
 17190 187e C44A     		ldr	r2, .L683
 17191 1880 D7F89430 		ldr	r3, [r7, #148]
 17192 1884 1344     		add	r3, r3, r2
 17193 1886 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17194 1888 1946     		mov	r1, r3
 17195 188a D7F88C20 		ldr	r2, [r7, #140]
 17196 188e 0B46     		mov	r3, r1
 17197 1890 9B00     		lsls	r3, r3, #2
 17198 1892 0B44     		add	r3, r3, r1
 17199 1894 1344     		add	r3, r3, r2
 17200 1896 03F20223 		addw	r3, r3, #514
 17201 189a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17202 189c 002B     		cmp	r3, #0
 17203 189e 0FD0     		beq	.L650
2319:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17204              		.loc 1 2319 0
 17205 18a0 07F11C03 		add	r3, r7, #28
 17206 18a4 1846     		mov	r0, r3
 17207 18a6 FFF7FEFF 		bl	strlen
 17208 18aa 0346     		mov	r3, r0
 17209 18ac 1A46     		mov	r2, r3
 17210 18ae 07F11C03 		add	r3, r7, #28
 17211 18b2 1344     		add	r3, r3, r2
 17212 18b4 B94A     		ldr	r2, .L683+12
 17213 18b6 1068     		ldr	r0, [r2]	@ unaligned
 17214 18b8 1860     		str	r0, [r3]	@ unaligned
 17215 18ba 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17216 18bc 9A80     		strh	r2, [r3, #4]	@ unaligned
 17217 18be 0EE0     		b	.L651
 17218              	.L650:
2320:..\src/command_processing.c ****                 else
2321:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17219              		.loc 1 2321 0
 17220 18c0 07F11C03 		add	r3, r7, #28
 17221 18c4 1846     		mov	r0, r3
 17222 18c6 FFF7FEFF 		bl	strlen
 17223 18ca 0346     		mov	r3, r0
 17224 18cc 1A46     		mov	r2, r3
 17225 18ce 07F11C03 		add	r3, r7, #28
 17226 18d2 1344     		add	r3, r3, r2
 17227 18d4 B24A     		ldr	r2, .L683+16
 17228 18d6 1068     		ldr	r0, [r2]	@ unaligned
 17229 18d8 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 383


 17230 18da 1279     		ldrb	r2, [r2, #4]
 17231 18dc 1A71     		strb	r2, [r3, #4]
 17232              	.L651:
2322:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17233              		.loc 1 2322 0
 17234 18de 07F11C03 		add	r3, r7, #28
 17235 18e2 1846     		mov	r0, r3
 17236 18e4 FFF7FEFF 		bl	strlen
 17237 18e8 0346     		mov	r3, r0
 17238 18ea 1A46     		mov	r2, r3
 17239 18ec 07F11C03 		add	r3, r7, #28
 17240 18f0 1344     		add	r3, r3, r2
 17241 18f2 AC4A     		ldr	r2, .L683+20
 17242 18f4 1C46     		mov	r4, r3
 17243 18f6 1346     		mov	r3, r2
 17244 18f8 07CB     		ldmia	r3!, {r0, r1, r2}
 17245 18fa 2060     		str	r0, [r4]	@ unaligned
 17246 18fc 6160     		str	r1, [r4, #4]	@ unaligned
 17247 18fe A260     		str	r2, [r4, #8]	@ unaligned
 17248 1900 1B88     		ldrh	r3, [r3]	@ unaligned
 17249 1902 A381     		strh	r3, [r4, #12]	@ unaligned
2323:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17250              		.loc 1 2323 0
 17251 1904 A24A     		ldr	r2, .L683
 17252 1906 D7F89430 		ldr	r3, [r7, #148]
 17253 190a 1344     		add	r3, r3, r2
 17254 190c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17255 190e 1946     		mov	r1, r3
 17256 1910 D7F88C20 		ldr	r2, [r7, #140]
 17257 1914 0B46     		mov	r3, r1
 17258 1916 9B00     		lsls	r3, r3, #2
 17259 1918 0B44     		add	r3, r3, r1
 17260 191a 1344     		add	r3, r3, r2
 17261 191c 03F20323 		addw	r3, r3, #515
 17262 1920 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17263 1922 002B     		cmp	r3, #0
 17264 1924 0FD0     		beq	.L652
2324:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17265              		.loc 1 2324 0
 17266 1926 07F11C03 		add	r3, r7, #28
 17267 192a 1846     		mov	r0, r3
 17268 192c FFF7FEFF 		bl	strlen
 17269 1930 0346     		mov	r3, r0
 17270 1932 1A46     		mov	r2, r3
 17271 1934 07F11C03 		add	r3, r7, #28
 17272 1938 1344     		add	r3, r3, r2
 17273 193a 984A     		ldr	r2, .L683+12
 17274 193c 1068     		ldr	r0, [r2]	@ unaligned
 17275 193e 1860     		str	r0, [r3]	@ unaligned
 17276 1940 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17277 1942 9A80     		strh	r2, [r3, #4]	@ unaligned
 17278 1944 0EE0     		b	.L653
 17279              	.L652:
2325:..\src/command_processing.c ****                 else
2326:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17280              		.loc 1 2326 0
 17281 1946 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 384


 17282 194a 1846     		mov	r0, r3
 17283 194c FFF7FEFF 		bl	strlen
 17284 1950 0346     		mov	r3, r0
 17285 1952 1A46     		mov	r2, r3
 17286 1954 07F11C03 		add	r3, r7, #28
 17287 1958 1344     		add	r3, r3, r2
 17288 195a 914A     		ldr	r2, .L683+16
 17289 195c 1068     		ldr	r0, [r2]	@ unaligned
 17290 195e 1860     		str	r0, [r3]	@ unaligned
 17291 1960 1279     		ldrb	r2, [r2, #4]
 17292 1962 1A71     		strb	r2, [r3, #4]
 17293              	.L653:
2327:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17294              		.loc 1 2327 0
 17295 1964 07F11C03 		add	r3, r7, #28
 17296 1968 1846     		mov	r0, r3
 17297 196a FFF7FEFF 		bl	strlen
 17298 196e 0346     		mov	r3, r0
 17299 1970 1A46     		mov	r2, r3
 17300 1972 07F11C03 		add	r3, r7, #28
 17301 1976 1344     		add	r3, r3, r2
 17302 1978 8B4A     		ldr	r2, .L683+24
 17303 197a 1D46     		mov	r5, r3
 17304 197c 1446     		mov	r4, r2
 17305 197e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17306 1980 2860     		str	r0, [r5]	@ unaligned
 17307 1982 6960     		str	r1, [r5, #4]	@ unaligned
 17308 1984 AA60     		str	r2, [r5, #8]	@ unaligned
 17309 1986 EB60     		str	r3, [r5, #12]	@ unaligned
 17310 1988 2378     		ldrb	r3, [r4]
 17311 198a 2B74     		strb	r3, [r5, #16]
2328:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17312              		.loc 1 2328 0
 17313 198c 804A     		ldr	r2, .L683
 17314 198e D7F89430 		ldr	r3, [r7, #148]
 17315 1992 1344     		add	r3, r3, r2
 17316 1994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17317 1996 1946     		mov	r1, r3
 17318 1998 D7F88C20 		ldr	r2, [r7, #140]
 17319 199c 0B46     		mov	r3, r1
 17320 199e 9B00     		lsls	r3, r3, #2
 17321 19a0 0B44     		add	r3, r3, r1
 17322 19a2 1344     		add	r3, r3, r2
 17323 19a4 03F50173 		add	r3, r3, #516
 17324 19a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17325 19aa 002B     		cmp	r3, #0
 17326 19ac 0FD0     		beq	.L654
2329:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17327              		.loc 1 2329 0
 17328 19ae 07F11C03 		add	r3, r7, #28
 17329 19b2 1846     		mov	r0, r3
 17330 19b4 FFF7FEFF 		bl	strlen
 17331 19b8 0346     		mov	r3, r0
 17332 19ba 1A46     		mov	r2, r3
 17333 19bc 07F11C03 		add	r3, r7, #28
 17334 19c0 1344     		add	r3, r3, r2
 17335 19c2 764A     		ldr	r2, .L683+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 385


 17336 19c4 1068     		ldr	r0, [r2]	@ unaligned
 17337 19c6 1860     		str	r0, [r3]	@ unaligned
 17338 19c8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17339 19ca 9A80     		strh	r2, [r3, #4]	@ unaligned
 17340 19cc 0EE0     		b	.L655
 17341              	.L654:
2330:..\src/command_processing.c ****                 else
2331:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17342              		.loc 1 2331 0
 17343 19ce 07F11C03 		add	r3, r7, #28
 17344 19d2 1846     		mov	r0, r3
 17345 19d4 FFF7FEFF 		bl	strlen
 17346 19d8 0346     		mov	r3, r0
 17347 19da 1A46     		mov	r2, r3
 17348 19dc 07F11C03 		add	r3, r7, #28
 17349 19e0 1344     		add	r3, r3, r2
 17350 19e2 6F4A     		ldr	r2, .L683+16
 17351 19e4 1068     		ldr	r0, [r2]	@ unaligned
 17352 19e6 1860     		str	r0, [r3]	@ unaligned
 17353 19e8 1279     		ldrb	r2, [r2, #4]
 17354 19ea 1A71     		strb	r2, [r3, #4]
 17355              	.L655:
2332:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17356              		.loc 1 2332 0
 17357 19ec 07F11C03 		add	r3, r7, #28
 17358 19f0 1846     		mov	r0, r3
 17359 19f2 FFF7FEFF 		bl	strlen
 17360 19f6 0346     		mov	r3, r0
 17361 19f8 1A46     		mov	r2, r3
 17362 19fa 07F11C03 		add	r3, r7, #28
 17363 19fe 1344     		add	r3, r3, r2
 17364 1a00 6A4A     		ldr	r2, .L683+28
 17365 1a02 1C46     		mov	r4, r3
 17366 1a04 1346     		mov	r3, r2
 17367 1a06 07CB     		ldmia	r3!, {r0, r1, r2}
 17368 1a08 2060     		str	r0, [r4]	@ unaligned
 17369 1a0a 6160     		str	r1, [r4, #4]	@ unaligned
 17370 1a0c A260     		str	r2, [r4, #8]	@ unaligned
 17371 1a0e 1B88     		ldrh	r3, [r3]	@ unaligned
 17372 1a10 A381     		strh	r3, [r4, #12]	@ unaligned
2333:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17373              		.loc 1 2333 0
 17374 1a12 5F4A     		ldr	r2, .L683
 17375 1a14 D7F89430 		ldr	r3, [r7, #148]
 17376 1a18 1344     		add	r3, r3, r2
 17377 1a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17378 1a1c 1946     		mov	r1, r3
 17379 1a1e D7F88C20 		ldr	r2, [r7, #140]
 17380 1a22 0B46     		mov	r3, r1
 17381 1a24 9B00     		lsls	r3, r3, #2
 17382 1a26 0B44     		add	r3, r3, r1
 17383 1a28 1344     		add	r3, r3, r2
 17384 1a2a 03F20523 		addw	r3, r3, #517
 17385 1a2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17386 1a30 002B     		cmp	r3, #0
 17387 1a32 0FD0     		beq	.L656
2334:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 386


 17388              		.loc 1 2334 0
 17389 1a34 07F11C03 		add	r3, r7, #28
 17390 1a38 1846     		mov	r0, r3
 17391 1a3a FFF7FEFF 		bl	strlen
 17392 1a3e 0346     		mov	r3, r0
 17393 1a40 1A46     		mov	r2, r3
 17394 1a42 07F11C03 		add	r3, r7, #28
 17395 1a46 1344     		add	r3, r3, r2
 17396 1a48 544A     		ldr	r2, .L683+12
 17397 1a4a 1068     		ldr	r0, [r2]	@ unaligned
 17398 1a4c 1860     		str	r0, [r3]	@ unaligned
 17399 1a4e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17400 1a50 9A80     		strh	r2, [r3, #4]	@ unaligned
 17401 1a52 0EE0     		b	.L657
 17402              	.L656:
2335:..\src/command_processing.c ****                 else
2336:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17403              		.loc 1 2336 0
 17404 1a54 07F11C03 		add	r3, r7, #28
 17405 1a58 1846     		mov	r0, r3
 17406 1a5a FFF7FEFF 		bl	strlen
 17407 1a5e 0346     		mov	r3, r0
 17408 1a60 1A46     		mov	r2, r3
 17409 1a62 07F11C03 		add	r3, r7, #28
 17410 1a66 1344     		add	r3, r3, r2
 17411 1a68 4D4A     		ldr	r2, .L683+16
 17412 1a6a 1068     		ldr	r0, [r2]	@ unaligned
 17413 1a6c 1860     		str	r0, [r3]	@ unaligned
 17414 1a6e 1279     		ldrb	r2, [r2, #4]
 17415 1a70 1A71     		strb	r2, [r3, #4]
 17416              	.L657:
2337:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17417              		.loc 1 2337 0
 17418 1a72 07F11C03 		add	r3, r7, #28
 17419 1a76 1846     		mov	r0, r3
 17420 1a78 FFF7FEFF 		bl	strlen
 17421 1a7c 0346     		mov	r3, r0
 17422 1a7e 1A46     		mov	r2, r3
 17423 1a80 07F11C03 		add	r3, r7, #28
 17424 1a84 1344     		add	r3, r3, r2
 17425 1a86 4A4A     		ldr	r2, .L683+32
 17426 1a88 1C46     		mov	r4, r3
 17427 1a8a 1346     		mov	r3, r2
 17428 1a8c 07CB     		ldmia	r3!, {r0, r1, r2}
 17429 1a8e 2060     		str	r0, [r4]	@ unaligned
 17430 1a90 6160     		str	r1, [r4, #4]	@ unaligned
 17431 1a92 A260     		str	r2, [r4, #8]	@ unaligned
 17432 1a94 1A88     		ldrh	r2, [r3]	@ unaligned
 17433 1a96 9B78     		ldrb	r3, [r3, #2]
 17434 1a98 A281     		strh	r2, [r4, #12]	@ unaligned
 17435 1a9a A373     		strb	r3, [r4, #14]
2338:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17436              		.loc 1 2338 0
 17437 1a9c 3C4A     		ldr	r2, .L683
 17438 1a9e D7F89430 		ldr	r3, [r7, #148]
 17439 1aa2 1344     		add	r3, r3, r2
 17440 1aa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 387


 17441 1aa6 1946     		mov	r1, r3
 17442 1aa8 D7F88C20 		ldr	r2, [r7, #140]
 17443 1aac 0B46     		mov	r3, r1
 17444 1aae 9B00     		lsls	r3, r3, #2
 17445 1ab0 0B44     		add	r3, r3, r1
 17446 1ab2 1344     		add	r3, r3, r2
 17447 1ab4 03F20623 		addw	r3, r3, #518
 17448 1ab8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17449 1aba 002B     		cmp	r3, #0
 17450 1abc 0FD0     		beq	.L658
2339:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17451              		.loc 1 2339 0
 17452 1abe 07F11C03 		add	r3, r7, #28
 17453 1ac2 1846     		mov	r0, r3
 17454 1ac4 FFF7FEFF 		bl	strlen
 17455 1ac8 0346     		mov	r3, r0
 17456 1aca 1A46     		mov	r2, r3
 17457 1acc 07F11C03 		add	r3, r7, #28
 17458 1ad0 1344     		add	r3, r3, r2
 17459 1ad2 324A     		ldr	r2, .L683+12
 17460 1ad4 1068     		ldr	r0, [r2]	@ unaligned
 17461 1ad6 1860     		str	r0, [r3]	@ unaligned
 17462 1ad8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17463 1ada 9A80     		strh	r2, [r3, #4]	@ unaligned
 17464 1adc 0EE0     		b	.L659
 17465              	.L658:
2340:..\src/command_processing.c ****                 else
2341:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17466              		.loc 1 2341 0
 17467 1ade 07F11C03 		add	r3, r7, #28
 17468 1ae2 1846     		mov	r0, r3
 17469 1ae4 FFF7FEFF 		bl	strlen
 17470 1ae8 0346     		mov	r3, r0
 17471 1aea 1A46     		mov	r2, r3
 17472 1aec 07F11C03 		add	r3, r7, #28
 17473 1af0 1344     		add	r3, r3, r2
 17474 1af2 2B4A     		ldr	r2, .L683+16
 17475 1af4 1068     		ldr	r0, [r2]	@ unaligned
 17476 1af6 1860     		str	r0, [r3]	@ unaligned
 17477 1af8 1279     		ldrb	r2, [r2, #4]
 17478 1afa 1A71     		strb	r2, [r3, #4]
 17479              	.L659:
2342:..\src/command_processing.c ****                      
2343:..\src/command_processing.c ****                 strcat(info_string, str);
 17480              		.loc 1 2343 0 discriminator 2
 17481 1afc 07F11C03 		add	r3, r7, #28
 17482 1b00 1946     		mov	r1, r3
 17483 1b02 7869     		ldr	r0, [r7, #20]
 17484 1b04 FFF7FEFF 		bl	strcat
2313:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17485              		.loc 1 2313 0 discriminator 2
 17486 1b08 D7F89430 		ldr	r3, [r7, #148]
 17487 1b0c 0133     		adds	r3, r3, #1
 17488 1b0e C7F89430 		str	r3, [r7, #148]
 17489              	.L649:
2313:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17490              		.loc 1 2313 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 388


 17491 1b12 284B     		ldr	r3, .L683+36
 17492 1b14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17493 1b16 1A46     		mov	r2, r3
 17494 1b18 D7F89430 		ldr	r3, [r7, #148]
 17495 1b1c 9A42     		cmp	r2, r3
 17496 1b1e 3FF793AE 		bgt	.L660
2344:..\src/command_processing.c ****             }       
2345:..\src/command_processing.c ****             
2346:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17497              		.loc 1 2346 0 is_stmt 1
 17498 1b22 7869     		ldr	r0, [r7, #20]
 17499 1b24 FFF7FEFF 		bl	strlen
 17500 1b28 0346     		mov	r3, r0
 17501 1b2a 1A46     		mov	r2, r3
 17502 1b2c 7B69     		ldr	r3, [r7, #20]
 17503 1b2e 1344     		add	r3, r3, r2
 17504 1b30 214A     		ldr	r2, .L683+40
 17505 1b32 1188     		ldrh	r1, [r2]	@ unaligned
 17506 1b34 9278     		ldrb	r2, [r2, #2]
 17507 1b36 1980     		strh	r1, [r3]	@ unaligned
 17508 1b38 9A70     		strb	r2, [r3, #2]
2347:..\src/command_processing.c ****           
2348:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17509              		.loc 1 2348 0
 17510 1b3a 7869     		ldr	r0, [r7, #20]
 17511 1b3c FFF7FEFF 		bl	IMU_reading_info
 17512              	.L648:
2349:..\src/command_processing.c ****         }
2350:..\src/command_processing.c ****         
2351:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17513              		.loc 1 2351 0
 17514 1b40 7869     		ldr	r0, [r7, #20]
 17515 1b42 FFF7FEFF 		bl	strlen
 17516 1b46 0346     		mov	r3, r0
 17517 1b48 1A46     		mov	r2, r3
 17518 1b4a 7B69     		ldr	r3, [r7, #20]
 17519 1b4c 1344     		add	r3, r3, r2
 17520 1b4e 1A4A     		ldr	r2, .L683+40
 17521 1b50 1188     		ldrh	r1, [r2]	@ unaligned
 17522 1b52 9278     		ldrb	r2, [r2, #2]
 17523 1b54 1980     		strh	r1, [r3]	@ unaligned
 17524 1b56 9A70     		strb	r2, [r3, #2]
2352:..\src/command_processing.c **** 
2353:..\src/command_processing.c **** #ifdef GENERIC_FW   
2354:..\src/command_processing.c ****         int j;
2355:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2356:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2357:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2358:..\src/command_processing.c ****             strcat(info_string, str);
2359:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2360:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2361:..\src/command_processing.c ****                 strcat(info_string, str);
2362:..\src/command_processing.c ****             }
2363:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2364:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2365:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2366:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 389


2367:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2368:..\src/command_processing.c ****                     strcat(info_string, str);
2369:..\src/command_processing.c ****                 }
2370:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2371:..\src/command_processing.c ****             }
2372:..\src/command_processing.c ****         }
2373:..\src/command_processing.c **** #endif   
2374:..\src/command_processing.c ****         
2375:..\src/command_processing.c **** #ifdef MASTER_FW
2376:..\src/command_processing.c ****         if (MEM_P->MS.master_mode_active)
 17525              		.loc 1 2376 0
 17526 1b58 D7F88C30 		ldr	r3, [r7, #140]
 17527 1b5c 93F8C032 		ldrb	r3, [r3, #704]	@ zero_extendqisi2
 17528 1b60 002B     		cmp	r3, #0
 17529 1b62 2DD0     		beq	.L661
2377:..\src/command_processing.c ****             strcat(info_string, "Master Mode active: YES\r\n");
 17530              		.loc 1 2377 0
 17531 1b64 7869     		ldr	r0, [r7, #20]
 17532 1b66 FFF7FEFF 		bl	strlen
 17533 1b6a 0346     		mov	r3, r0
 17534 1b6c 1A46     		mov	r2, r3
 17535 1b6e 7B69     		ldr	r3, [r7, #20]
 17536 1b70 1344     		add	r3, r3, r2
 17537 1b72 124A     		ldr	r2, .L683+44
 17538 1b74 1D46     		mov	r5, r3
 17539 1b76 1446     		mov	r4, r2
 17540 1b78 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17541 1b7a 2860     		str	r0, [r5]	@ unaligned
 17542 1b7c 6960     		str	r1, [r5, #4]	@ unaligned
 17543 1b7e AA60     		str	r2, [r5, #8]	@ unaligned
 17544 1b80 EB60     		str	r3, [r5, #12]	@ unaligned
 17545 1b82 03CC     		ldmia	r4!, {r0, r1}
 17546 1b84 2861     		str	r0, [r5, #16]	@ unaligned
 17547 1b86 6961     		str	r1, [r5, #20]	@ unaligned
 17548 1b88 2388     		ldrh	r3, [r4]	@ unaligned
 17549 1b8a 2B83     		strh	r3, [r5, #24]	@ unaligned
 17550 1b8c 2CE0     		b	.L662
 17551              	.L684:
 17552 1b8e 00BF     		.align	2
 17553              	.L683:
 17554 1b90 00000000 		.word	IMU_connected
 17555 1b94 28190000 		.word	.LC240
 17556 1b98 3C190000 		.word	.LC241
 17557 1b9c 0C130000 		.word	.LC175
 17558 1ba0 14130000 		.word	.LC176
 17559 1ba4 50190000 		.word	.LC242
 17560 1ba8 60190000 		.word	.LC243
 17561 1bac 74190000 		.word	.LC244
 17562 1bb0 84190000 		.word	.LC245
 17563 1bb4 00000000 		.word	N_IMU_Connected
 17564 1bb8 50110000 		.word	.LC152
 17565 1bbc 94190000 		.word	.LC246
 17566              	.L661:
2378:..\src/command_processing.c ****         else
2379:..\src/command_processing.c ****             strcat(info_string, "Master Mode active: NO\r\n");
 17567              		.loc 1 2379 0
 17568 1bc0 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 390


 17569 1bc2 FFF7FEFF 		bl	strlen
 17570 1bc6 0346     		mov	r3, r0
 17571 1bc8 1A46     		mov	r2, r3
 17572 1bca 7B69     		ldr	r3, [r7, #20]
 17573 1bcc 1344     		add	r3, r3, r2
 17574 1bce 204A     		ldr	r2, .L685
 17575 1bd0 1D46     		mov	r5, r3
 17576 1bd2 1446     		mov	r4, r2
 17577 1bd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17578 1bd6 2860     		str	r0, [r5]	@ unaligned
 17579 1bd8 6960     		str	r1, [r5, #4]	@ unaligned
 17580 1bda AA60     		str	r2, [r5, #8]	@ unaligned
 17581 1bdc EB60     		str	r3, [r5, #12]	@ unaligned
 17582 1bde 03CC     		ldmia	r4!, {r0, r1}
 17583 1be0 2861     		str	r0, [r5, #16]	@ unaligned
 17584 1be2 6961     		str	r1, [r5, #20]	@ unaligned
 17585 1be4 2378     		ldrb	r3, [r4]
 17586 1be6 2B76     		strb	r3, [r5, #24]
 17587              	.L662:
2380:..\src/command_processing.c **** 
2381:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
 17588              		.loc 1 2381 0
 17589 1be8 D7F88C30 		ldr	r3, [r7, #140]
 17590 1bec 93F8C132 		ldrb	r3, [r3, #705]	@ zero_extendqisi2
 17591 1bf0 1A46     		mov	r2, r3
 17592 1bf2 07F11C03 		add	r3, r7, #28
 17593 1bf6 1749     		ldr	r1, .L685+4
 17594 1bf8 1846     		mov	r0, r3
 17595 1bfa FFF7FEFF 		bl	sprintf
2382:..\src/command_processing.c ****         strcat(info_string, str);
 17596              		.loc 1 2382 0
 17597 1bfe 07F11C03 		add	r3, r7, #28
 17598 1c02 1946     		mov	r1, r3
 17599 1c04 7869     		ldr	r0, [r7, #20]
 17600 1c06 FFF7FEFF 		bl	strcat
2383:..\src/command_processing.c **** #endif
2384:..\src/command_processing.c **** 
2385:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17601              		.loc 1 2385 0
 17602 1c0a 134B     		ldr	r3, .L685+8
 17603 1c0c 1B88     		ldrh	r3, [r3]
 17604 1c0e 1A46     		mov	r2, r3
 17605 1c10 124B     		ldr	r3, .L685+12
 17606 1c12 1B88     		ldrh	r3, [r3]
 17607 1c14 D21A     		subs	r2, r2, r3
 17608 1c16 07F11C03 		add	r3, r7, #28
 17609 1c1a 1149     		ldr	r1, .L685+16
 17610 1c1c 1846     		mov	r0, r3
 17611 1c1e FFF7FEFF 		bl	sprintf
2386:..\src/command_processing.c ****         strcat(info_string, str);
 17612              		.loc 1 2386 0
 17613 1c22 07F11C03 		add	r3, r7, #28
 17614 1c26 1946     		mov	r1, r3
 17615 1c28 7869     		ldr	r0, [r7, #20]
 17616 1c2a FFF7FEFF 		bl	strcat
2387:..\src/command_processing.c ****   
2388:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 391


 17617              		.loc 1 2388 0
 17618 1c2e 7869     		ldr	r0, [r7, #20]
 17619 1c30 FFF7FEFF 		bl	strlen
 17620 1c34 0346     		mov	r3, r0
 17621 1c36 1A46     		mov	r2, r3
 17622 1c38 7B69     		ldr	r3, [r7, #20]
 17623 1c3a 1344     		add	r3, r3, r2
 17624 1c3c 094A     		ldr	r2, .L685+20
 17625 1c3e 1188     		ldrh	r1, [r2]	@ unaligned
 17626 1c40 9278     		ldrb	r2, [r2, #2]
 17627 1c42 1980     		strh	r1, [r3]	@ unaligned
 17628 1c44 9A70     		strb	r2, [r3, #2]
 17629              	.L664:
 17630              	.LBE24:
2389:..\src/command_processing.c ****     }
2390:..\src/command_processing.c **** }
 17631              		.loc 1 2390 0
 17632 1c46 00BF     		nop
 17633 1c48 9C37     		adds	r7, r7, #156
 17634              		.cfi_def_cfa_offset 36
 17635 1c4a BD46     		mov	sp, r7
 17636              		.cfi_def_cfa_register 13
 17637              		@ sp needed
 17638 1c4c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17639              	.L686:
 17640              		.align	2
 17641              	.L685:
 17642 1c50 B0190000 		.word	.LC247
 17643 1c54 CC190000 		.word	.LC248
 17644 1c58 00000000 		.word	timer_value0
 17645 1c5c 00000000 		.word	timer_value
 17646 1c60 DC190000 		.word	.LC249
 17647 1c64 F8190000 		.word	.LC250
 17648              		.cfi_endproc
 17649              	.LFE72:
 17650              		.size	prepare_generic_info, .-prepare_generic_info
 17651              		.section	.rodata
 17652              		.align	2
 17653              	.LC251:
 17654 19fc 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17654      41474520 
 17654      53544154 
 17654      49535449 
 17654      43530D0A 
 17655 1a11 000000   		.align	2
 17656              	.LC252:
 17657 1a14 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17657      206F6620 
 17657      4857206D 
 17657      61696E74 
 17657      656E616E 
 17658 1a3f 00       		.align	2
 17659              	.LC253:
 17660 1a40 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17660      206F6620 
 17660      75736167 
 17660      65207374 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 392


 17660      61747320 
 17661 1a73 0A00     		.ascii	"\012\000"
 17662 1a75 000000   		.align	2
 17663              	.LC254:
 17664 1a78 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17664      20636865 
 17664      636B6564 
 17664      2054696D 
 17664      653A2025 
 17665 1aab 0A00     		.ascii	"\012\000"
 17666 1aad 000000   		.align	2
 17667              	.LC255:
 17668 1ab0 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17668      74696F6E 
 17668      73206869 
 17668      73746F67 
 17668      72616D20 
 17669 1acf 00       		.align	2
 17670              	.LC256:
 17671 1ad0 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17671      2564205B 
 17671      25642D25 
 17671      645D3A20 
 17671      256C750D 
 17672 1ae6 0000     		.align	2
 17673              	.LC257:
 17674 1ae8 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17674      656E7420 
 17674      68697374 
 17674      6F677261 
 17674      6D20286D 
 17675 1b02 0000     		.align	2
 17676              	.LC258:
 17677 1b04 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17677      73686F6C 
 17677      64202564 
 17677      205B2564 
 17677      2D25645D 
 17678              		.align	2
 17679              	.LC259:
 17680 1b20 4D6F7469 		.ascii	"Motions through EMG counter: %lu, %lu\000"
 17680      6F6E7320 
 17680      7468726F 
 17680      75676820 
 17680      454D4720 
 17681 1b46 0000     		.align	2
 17682              	.LC260:
 17683 1b48 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17683      20706F73 
 17683      6974696F 
 17683      6E206F63 
 17683      63757272 
 17684 1b67 00       		.align	2
 17685              	.LC261:
 17686 1b68 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17686      6520746F 
 17686      74616C20 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 393


 17686      64697370 
 17686      6C616365 
 17687 1b8e 0000     		.align	2
 17688              	.LC262:
 17689 1b90 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17689      6C20706F 
 17689      77657220 
 17689      6F6E2074 
 17689      696D6520 
 17690 1baf 00       		.align	2
 17691              	.LC263:
 17692 1bb0 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17692      6C207265 
 17692      73742070 
 17692      6F736974 
 17692      696F6E20 
 17693              		.section	.text.prepare_counter_info,"ax",%progbits
 17694              		.align	2
 17695              		.global	prepare_counter_info
 17696              		.thumb
 17697              		.thumb_func
 17698              		.type	prepare_counter_info, %function
 17699              	prepare_counter_info:
 17700              	.LFB73:
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c **** //==============================================================================
2393:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2394:..\src/command_processing.c **** //==============================================================================
2395:..\src/command_processing.c **** 
2396:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2397:..\src/command_processing.c **** {
 17701              		.loc 1 2397 0
 17702              		.cfi_startproc
 17703              		@ args = 0, pretend = 0, frame = 432
 17704              		@ frame_needed = 1, uses_anonymous_args = 0
 17705 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17706              		.cfi_def_cfa_offset 20
 17707              		.cfi_offset 4, -20
 17708              		.cfi_offset 5, -16
 17709              		.cfi_offset 6, -12
 17710              		.cfi_offset 7, -8
 17711              		.cfi_offset 14, -4
 17712 0002 F1B0     		sub	sp, sp, #452
 17713              		.cfi_def_cfa_offset 472
 17714 0004 04AF     		add	r7, sp, #16
 17715              		.cfi_def_cfa 7, 456
 17716 0006 3B1D     		adds	r3, r7, #4
 17717 0008 1860     		str	r0, [r3]
2398:..\src/command_processing.c ****     char str[100];  
2399:..\src/command_processing.c ****     int i;
2400:..\src/command_processing.c ****     int step;
2401:..\src/command_processing.c **** 
2402:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17718              		.loc 1 2402 0
 17719 000a 964B     		ldr	r3, .L693
 17720 000c C7F8A831 		str	r3, [r7, #424]
2403:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 394


 17721              		.loc 1 2403 0
 17722 0010 D7F8A831 		ldr	r3, [r7, #424]
 17723 0014 B033     		adds	r3, r3, #176
 17724 0016 C7F8A431 		str	r3, [r7, #420]
2404:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 17725              		.loc 1 2404 0
 17726 001a D7F8A431 		ldr	r3, [r7, #420]
 17727 001e 93F86030 		ldrb	r3, [r3, #96]
 17728 0022 87F8A331 		strb	r3, [r7, #419]
2405:..\src/command_processing.c ****     
2406:..\src/command_processing.c ****     strcpy(info_string, "");
 17729              		.loc 1 2406 0
 17730 0026 3B1D     		adds	r3, r7, #4
 17731 0028 1B68     		ldr	r3, [r3]
 17732 002a 0022     		movs	r2, #0
 17733 002c 1A70     		strb	r2, [r3]
2407:..\src/command_processing.c ****     
2408:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17734              		.loc 1 2408 0
 17735 002e 3B1D     		adds	r3, r7, #4
 17736 0030 1868     		ldr	r0, [r3]
 17737 0032 FFF7FEFF 		bl	strlen
 17738 0036 0346     		mov	r3, r0
 17739 0038 1A46     		mov	r2, r3
 17740 003a 3B1D     		adds	r3, r7, #4
 17741 003c 1B68     		ldr	r3, [r3]
 17742 003e 1344     		add	r3, r3, r2
 17743 0040 894A     		ldr	r2, .L693+4
 17744 0042 1D46     		mov	r5, r3
 17745 0044 1446     		mov	r4, r2
 17746 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17747 0048 2860     		str	r0, [r5]	@ unaligned
 17748 004a 6960     		str	r1, [r5, #4]	@ unaligned
 17749 004c AA60     		str	r2, [r5, #8]	@ unaligned
 17750 004e EB60     		str	r3, [r5, #12]	@ unaligned
 17751 0050 2068     		ldr	r0, [r4]	@ unaligned
 17752 0052 2861     		str	r0, [r5, #16]	@ unaligned
 17753 0054 2379     		ldrb	r3, [r4, #4]
 17754 0056 2B75     		strb	r3, [r5, #20]
2409:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17755              		.loc 1 2409 0
 17756 0058 3B1D     		adds	r3, r7, #4
 17757 005a 1868     		ldr	r0, [r3]
 17758 005c FFF7FEFF 		bl	strlen
 17759 0060 0346     		mov	r3, r0
 17760 0062 1A46     		mov	r2, r3
 17761 0064 3B1D     		adds	r3, r7, #4
 17762 0066 1B68     		ldr	r3, [r3]
 17763 0068 1344     		add	r3, r3, r2
 17764 006a 804A     		ldr	r2, .L693+8
 17765 006c 1188     		ldrh	r1, [r2]	@ unaligned
 17766 006e 9278     		ldrb	r2, [r2, #2]
 17767 0070 1980     		strh	r1, [r3]	@ unaligned
 17768 0072 9A70     		strb	r2, [r3, #2]
2410:..\src/command_processing.c ****     
2411:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17769              		.loc 1 2411 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 395


 17770 0074 D7F8A831 		ldr	r3, [r7, #424]
 17771 0078 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17772 007c 1A46     		mov	r2, r3
 17773 007e D7F8A831 		ldr	r3, [r7, #424]
 17774 0082 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17775 0086 1946     		mov	r1, r3
 17776 0088 D7F8A831 		ldr	r3, [r7, #424]
 17777 008c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17778 0090 07F59C70 		add	r0, r7, #312
 17779 0094 0093     		str	r3, [sp]
 17780 0096 0B46     		mov	r3, r1
 17781 0098 7549     		ldr	r1, .L693+12
 17782 009a FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****     strcat(info_string, str);
 17783              		.loc 1 2412 0
 17784 009e 07F59C72 		add	r2, r7, #312
 17785 00a2 3B1D     		adds	r3, r7, #4
 17786 00a4 1146     		mov	r1, r2
 17787 00a6 1868     		ldr	r0, [r3]
 17788 00a8 FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****     
2414:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17789              		.loc 1 2414 0
 17790 00ac D7F8A831 		ldr	r3, [r7, #424]
 17791 00b0 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17792 00b4 1A46     		mov	r2, r3
 17793 00b6 D7F8A831 		ldr	r3, [r7, #424]
 17794 00ba 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17795 00be 1946     		mov	r1, r3
 17796 00c0 D7F8A831 		ldr	r3, [r7, #424]
 17797 00c4 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17798 00c8 07F59C70 		add	r0, r7, #312
 17799 00cc 0093     		str	r3, [sp]
 17800 00ce 0B46     		mov	r3, r1
 17801 00d0 6849     		ldr	r1, .L693+16
 17802 00d2 FFF7FEFF 		bl	sprintf
2415:..\src/command_processing.c ****     strcat(info_string, str);
 17803              		.loc 1 2415 0
 17804 00d6 07F59C72 		add	r2, r7, #312
 17805 00da 3B1D     		adds	r3, r7, #4
 17806 00dc 1146     		mov	r1, r2
 17807 00de 1868     		ldr	r0, [r3]
 17808 00e0 FFF7FEFF 		bl	strcat
2416:..\src/command_processing.c ****             
2417:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17809              		.loc 1 2417 0
 17810 00e4 D7F8A831 		ldr	r3, [r7, #424]
 17811 00e8 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17812 00ec 1D46     		mov	r5, r3
 17813 00ee D7F8A831 		ldr	r3, [r7, #424]
 17814 00f2 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17815 00f6 1E46     		mov	r6, r3
 17816 00f8 D7F8A831 		ldr	r3, [r7, #424]
 17817 00fc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 17818 0100 1A46     		mov	r2, r3
 17819 0102 D7F8A831 		ldr	r3, [r7, #424]
 17820 0106 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 396


 17821 010a 1946     		mov	r1, r3
 17822 010c D7F8A831 		ldr	r3, [r7, #424]
 17823 0110 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17824 0114 1C46     		mov	r4, r3
 17825 0116 D7F8A831 		ldr	r3, [r7, #424]
 17826 011a 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17827 011e 07F59C70 		add	r0, r7, #312
 17828 0122 0393     		str	r3, [sp, #12]
 17829 0124 0294     		str	r4, [sp, #8]
 17830 0126 0191     		str	r1, [sp, #4]
 17831 0128 0092     		str	r2, [sp]
 17832 012a 3346     		mov	r3, r6
 17833 012c 2A46     		mov	r2, r5
 17834 012e 5249     		ldr	r1, .L693+20
 17835 0130 FFF7FEFF 		bl	sprintf
2418:..\src/command_processing.c ****     strcat(info_string, str);
 17836              		.loc 1 2418 0
 17837 0134 07F59C72 		add	r2, r7, #312
 17838 0138 3B1D     		adds	r3, r7, #4
 17839 013a 1146     		mov	r1, r2
 17840 013c 1868     		ldr	r0, [r3]
 17841 013e FFF7FEFF 		bl	strcat
2419:..\src/command_processing.c ****     
2420:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17842              		.loc 1 2420 0
 17843 0142 07F59C73 		add	r3, r7, #312
 17844 0146 4D4A     		ldr	r2, .L693+24
 17845 0148 1C46     		mov	r4, r3
 17846 014a 1546     		mov	r5, r2
 17847 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17848 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17849 0150 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17850 0154 07C4     		stmia	r4!, {r0, r1, r2}
 17851 0156 2380     		strh	r3, [r4]	@ movhi
 17852 0158 0234     		adds	r4, r4, #2
 17853 015a 1B0C     		lsrs	r3, r3, #16
 17854 015c 2370     		strb	r3, [r4]
2421:..\src/command_processing.c ****     strcat(info_string, str);
 17855              		.loc 1 2421 0
 17856 015e 07F59C72 		add	r2, r7, #312
 17857 0162 3B1D     		adds	r3, r7, #4
 17858 0164 1146     		mov	r1, r2
 17859 0166 1868     		ldr	r0, [r3]
 17860 0168 FFF7FEFF 		bl	strcat
2422:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17861              		.loc 1 2422 0
 17862 016c D7F8A431 		ldr	r3, [r7, #420]
 17863 0170 996B     		ldr	r1, [r3, #56]
 17864 0172 97F8A321 		ldrb	r2, [r7, #419]	@ zero_extendqisi2
 17865 0176 D7F8A801 		ldr	r0, [r7, #424]
 17866 017a 1346     		mov	r3, r2
 17867 017c 5B00     		lsls	r3, r3, #1
 17868 017e 1344     		add	r3, r3, r2
 17869 0180 1B01     		lsls	r3, r3, #4
 17870 0182 0344     		add	r3, r3, r0
 17871 0184 03F29513 		addw	r3, r3, #405
 17872 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 397


 17873 018a 41FA03F3 		asr	r3, r1, r3
 17874 018e 3C4A     		ldr	r2, .L693+28
 17875 0190 82FB0312 		smull	r1, r2, r2, r3
 17876 0194 9210     		asrs	r2, r2, #2
 17877 0196 DB17     		asrs	r3, r3, #31
 17878 0198 D31A     		subs	r3, r2, r3
 17879 019a C7F89C31 		str	r3, [r7, #412]
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17880              		.loc 1 2423 0
 17881 019e 0123     		movs	r3, #1
 17882 01a0 C7F8AC31 		str	r3, [r7, #428]
 17883 01a4 2BE0     		b	.L688
 17884              	.L689:
2424:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17885              		.loc 1 2424 0 discriminator 3
 17886 01a6 D7F8AC31 		ldr	r3, [r7, #428]
 17887 01aa 013B     		subs	r3, r3, #1
 17888 01ac D7F89C21 		ldr	r2, [r7, #412]
 17889 01b0 02FB03F3 		mul	r3, r2, r3
 17890 01b4 5C1C     		adds	r4, r3, #1
 17891 01b6 D7F89C31 		ldr	r3, [r7, #412]
 17892 01ba D7F8AC21 		ldr	r2, [r7, #428]
 17893 01be 02FB03F3 		mul	r3, r2, r3
 17894 01c2 D7F8AC21 		ldr	r2, [r7, #428]
 17895 01c6 511E     		subs	r1, r2, #1
 17896 01c8 D7F8A821 		ldr	r2, [r7, #424]
 17897 01cc 0631     		adds	r1, r1, #6
 17898 01ce 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17899 01d2 07F59C70 		add	r0, r7, #312
 17900 01d6 0192     		str	r2, [sp, #4]
 17901 01d8 0093     		str	r3, [sp]
 17902 01da 2346     		mov	r3, r4
 17903 01dc D7F8AC21 		ldr	r2, [r7, #428]
 17904 01e0 2849     		ldr	r1, .L693+32
 17905 01e2 FFF7FEFF 		bl	sprintf
2425:..\src/command_processing.c ****         strcat(info_string, str);
 17906              		.loc 1 2425 0 discriminator 3
 17907 01e6 07F59C72 		add	r2, r7, #312
 17908 01ea 3B1D     		adds	r3, r7, #4
 17909 01ec 1146     		mov	r1, r2
 17910 01ee 1868     		ldr	r0, [r3]
 17911 01f0 FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17912              		.loc 1 2423 0 discriminator 3
 17913 01f4 D7F8AC31 		ldr	r3, [r7, #428]
 17914 01f8 0133     		adds	r3, r3, #1
 17915 01fa C7F8AC31 		str	r3, [r7, #428]
 17916              	.L688:
2423:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17917              		.loc 1 2423 0 is_stmt 0 discriminator 1
 17918 01fe D7F8AC31 		ldr	r3, [r7, #428]
 17919 0202 0A2B     		cmp	r3, #10
 17920 0204 CFDD     		ble	.L689
2426:..\src/command_processing.c ****     }
2427:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17921              		.loc 1 2427 0 is_stmt 1
 17922 0206 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 398


 17923 0208 1868     		ldr	r0, [r3]
 17924 020a FFF7FEFF 		bl	strlen
 17925 020e 0346     		mov	r3, r0
 17926 0210 1A46     		mov	r2, r3
 17927 0212 3B1D     		adds	r3, r7, #4
 17928 0214 1B68     		ldr	r3, [r3]
 17929 0216 1344     		add	r3, r3, r2
 17930 0218 144A     		ldr	r2, .L693+8
 17931 021a 1188     		ldrh	r1, [r2]	@ unaligned
 17932 021c 9278     		ldrb	r2, [r2, #2]
 17933 021e 1980     		strh	r1, [r3]	@ unaligned
 17934 0220 9A70     		strb	r2, [r3, #2]
2428:..\src/command_processing.c ****     
2429:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17935              		.loc 1 2429 0
 17936 0222 07F59C73 		add	r3, r7, #312
 17937 0226 184A     		ldr	r2, .L693+36
 17938 0228 1C46     		mov	r4, r3
 17939 022a 1546     		mov	r5, r2
 17940 022c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17941 022e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17942 0230 95E80700 		ldmia	r5, {r0, r1, r2}
 17943 0234 03C4     		stmia	r4!, {r0, r1}
 17944 0236 2280     		strh	r2, [r4]	@ movhi
2430:..\src/command_processing.c ****     strcat(info_string, str);
 17945              		.loc 1 2430 0
 17946 0238 07F59C72 		add	r2, r7, #312
 17947 023c 3B1D     		adds	r3, r7, #4
 17948 023e 1146     		mov	r1, r2
 17949 0240 1868     		ldr	r0, [r3]
 17950 0242 FFF7FEFF 		bl	strcat
2431:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17951              		.loc 1 2431 0
 17952 0246 D7F8A431 		ldr	r3, [r7, #420]
 17953 024a B3F95C30 		ldrsh	r3, [r3, #92]
 17954 024e 002B     		cmp	r3, #0
 17955 0250 00DA     		bge	.L690
 17956 0252 0333     		adds	r3, r3, #3
 17957              	.L690:
 17958 0254 9B10     		asrs	r3, r3, #2
 17959 0256 1BB2     		sxth	r3, r3
 17960 0258 C7F89C31 		str	r3, [r7, #412]
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17961              		.loc 1 2432 0
 17962 025c 0123     		movs	r3, #1
 17963 025e C7F8AC31 		str	r3, [r7, #428]
 17964 0262 3EE0     		b	.L691
 17965              	.L694:
 17966              		.align	2
 17967              	.L693:
 17968 0264 00000000 		.word	g_mem
 17969 0268 FC190000 		.word	.LC251
 17970 026c 50110000 		.word	.LC152
 17971 0270 141A0000 		.word	.LC252
 17972 0274 401A0000 		.word	.LC253
 17973 0278 781A0000 		.word	.LC254
 17974 027c B01A0000 		.word	.LC255
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 399


 17975 0280 67666666 		.word	1717986919
 17976 0284 D01A0000 		.word	.LC256
 17977 0288 E81A0000 		.word	.LC257
 17978              	.L692:
2433:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17979              		.loc 1 2433 0 discriminator 3
 17980 028c D7F8AC31 		ldr	r3, [r7, #428]
 17981 0290 013B     		subs	r3, r3, #1
 17982 0292 D7F89C21 		ldr	r2, [r7, #412]
 17983 0296 02FB03F4 		mul	r4, r2, r3
 17984 029a D7F89C31 		ldr	r3, [r7, #412]
 17985 029e D7F8AC21 		ldr	r2, [r7, #428]
 17986 02a2 02FB03F3 		mul	r3, r2, r3
 17987 02a6 D7F8AC21 		ldr	r2, [r7, #428]
 17988 02aa 511E     		subs	r1, r2, #1
 17989 02ac D7F8A821 		ldr	r2, [r7, #424]
 17990 02b0 1031     		adds	r1, r1, #16
 17991 02b2 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17992 02b6 07F59C70 		add	r0, r7, #312
 17993 02ba 0192     		str	r2, [sp, #4]
 17994 02bc 0093     		str	r3, [sp]
 17995 02be 2346     		mov	r3, r4
 17996 02c0 D7F8AC21 		ldr	r2, [r7, #428]
 17997 02c4 6B49     		ldr	r1, .L695
 17998 02c6 FFF7FEFF 		bl	sprintf
2434:..\src/command_processing.c ****         strcat(info_string, str);
 17999              		.loc 1 2434 0 discriminator 3
 18000 02ca 07F59C72 		add	r2, r7, #312
 18001 02ce 3B1D     		adds	r3, r7, #4
 18002 02d0 1146     		mov	r1, r2
 18003 02d2 1868     		ldr	r0, [r3]
 18004 02d4 FFF7FEFF 		bl	strcat
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18005              		.loc 1 2432 0 discriminator 3
 18006 02d8 D7F8AC31 		ldr	r3, [r7, #428]
 18007 02dc 0133     		adds	r3, r3, #1
 18008 02de C7F8AC31 		str	r3, [r7, #428]
 18009              	.L691:
2432:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18010              		.loc 1 2432 0 is_stmt 0 discriminator 1
 18011 02e2 D7F8AC31 		ldr	r3, [r7, #428]
 18012 02e6 042B     		cmp	r3, #4
 18013 02e8 D0DD     		ble	.L692
2435:..\src/command_processing.c ****     }
2436:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18014              		.loc 1 2436 0 is_stmt 1
 18015 02ea 3B1D     		adds	r3, r7, #4
 18016 02ec 1868     		ldr	r0, [r3]
 18017 02ee FFF7FEFF 		bl	strlen
 18018 02f2 0346     		mov	r3, r0
 18019 02f4 1A46     		mov	r2, r3
 18020 02f6 3B1D     		adds	r3, r7, #4
 18021 02f8 1B68     		ldr	r3, [r3]
 18022 02fa 1344     		add	r3, r3, r2
 18023 02fc 5E4A     		ldr	r2, .L695+4
 18024 02fe 1188     		ldrh	r1, [r2]	@ unaligned
 18025 0300 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 400


 18026 0302 1980     		strh	r1, [r3]	@ unaligned
 18027 0304 9A70     		strb	r2, [r3, #2]
2437:..\src/command_processing.c ****             
2438:..\src/command_processing.c ****     sprintf(str, "Motions through EMG counter: %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->cnt.
 18028              		.loc 1 2438 0
 18029 0306 D7F8A831 		ldr	r3, [r7, #424]
 18030 030a DA6E     		ldr	r2, [r3, #108]
 18031 030c D7F8A831 		ldr	r3, [r7, #424]
 18032 0310 1B6F     		ldr	r3, [r3, #112]
 18033 0312 07F59C70 		add	r0, r7, #312
 18034 0316 5949     		ldr	r1, .L695+8
 18035 0318 FFF7FEFF 		bl	sprintf
2439:..\src/command_processing.c ****     strcat(info_string, str);
 18036              		.loc 1 2439 0
 18037 031c 07F59C72 		add	r2, r7, #312
 18038 0320 3B1D     		adds	r3, r7, #4
 18039 0322 1146     		mov	r1, r2
 18040 0324 1868     		ldr	r0, [r3]
 18041 0326 FFF7FEFF 		bl	strcat
2440:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18042              		.loc 1 2440 0
 18043 032a 3B1D     		adds	r3, r7, #4
 18044 032c 1868     		ldr	r0, [r3]
 18045 032e FFF7FEFF 		bl	strlen
 18046 0332 0346     		mov	r3, r0
 18047 0334 1A46     		mov	r2, r3
 18048 0336 3B1D     		adds	r3, r7, #4
 18049 0338 1B68     		ldr	r3, [r3]
 18050 033a 1344     		add	r3, r3, r2
 18051 033c 4E4A     		ldr	r2, .L695+4
 18052 033e 1188     		ldrh	r1, [r2]	@ unaligned
 18053 0340 9278     		ldrb	r2, [r2, #2]
 18054 0342 1980     		strh	r1, [r3]	@ unaligned
 18055 0344 9A70     		strb	r2, [r3, #2]
2441:..\src/command_processing.c ****     
2442:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18056              		.loc 1 2442 0
 18057 0346 D7F8A831 		ldr	r3, [r7, #424]
 18058 034a 1A6D     		ldr	r2, [r3, #80]
 18059 034c 07F59C73 		add	r3, r7, #312
 18060 0350 4B49     		ldr	r1, .L695+12
 18061 0352 1846     		mov	r0, r3
 18062 0354 FFF7FEFF 		bl	sprintf
2443:..\src/command_processing.c ****     strcat(info_string, str);
 18063              		.loc 1 2443 0
 18064 0358 07F59C72 		add	r2, r7, #312
 18065 035c 3B1D     		adds	r3, r7, #4
 18066 035e 1146     		mov	r1, r2
 18067 0360 1868     		ldr	r0, [r3]
 18068 0362 FFF7FEFF 		bl	strcat
2444:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18069              		.loc 1 2444 0
 18070 0366 3B1D     		adds	r3, r7, #4
 18071 0368 1868     		ldr	r0, [r3]
 18072 036a FFF7FEFF 		bl	strlen
 18073 036e 0346     		mov	r3, r0
 18074 0370 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 401


 18075 0372 3B1D     		adds	r3, r7, #4
 18076 0374 1B68     		ldr	r3, [r3]
 18077 0376 1344     		add	r3, r3, r2
 18078 0378 3F4A     		ldr	r2, .L695+4
 18079 037a 1188     		ldrh	r1, [r2]	@ unaligned
 18080 037c 9278     		ldrb	r2, [r2, #2]
 18081 037e 1980     		strh	r1, [r3]	@ unaligned
 18082 0380 9A70     		strb	r2, [r3, #2]
2445:..\src/command_processing.c ****     
2446:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18083              		.loc 1 2446 0
 18084 0382 D7F8A831 		ldr	r3, [r7, #424]
 18085 0386 5A6D     		ldr	r2, [r3, #84]
 18086 0388 07F59C73 		add	r3, r7, #312
 18087 038c 3D49     		ldr	r1, .L695+16
 18088 038e 1846     		mov	r0, r3
 18089 0390 FFF7FEFF 		bl	sprintf
2447:..\src/command_processing.c ****     strcat(info_string, str);
 18090              		.loc 1 2447 0
 18091 0394 07F59C72 		add	r2, r7, #312
 18092 0398 3B1D     		adds	r3, r7, #4
 18093 039a 1146     		mov	r1, r2
 18094 039c 1868     		ldr	r0, [r3]
 18095 039e FFF7FEFF 		bl	strcat
2448:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18096              		.loc 1 2448 0
 18097 03a2 3B1D     		adds	r3, r7, #4
 18098 03a4 1868     		ldr	r0, [r3]
 18099 03a6 FFF7FEFF 		bl	strlen
 18100 03aa 0346     		mov	r3, r0
 18101 03ac 1A46     		mov	r2, r3
 18102 03ae 3B1D     		adds	r3, r7, #4
 18103 03b0 1B68     		ldr	r3, [r3]
 18104 03b2 1344     		add	r3, r3, r2
 18105 03b4 304A     		ldr	r2, .L695+4
 18106 03b6 1188     		ldrh	r1, [r2]	@ unaligned
 18107 03b8 9278     		ldrb	r2, [r2, #2]
 18108 03ba 1980     		strh	r1, [r3]	@ unaligned
 18109 03bc 9A70     		strb	r2, [r3, #2]
2449:..\src/command_processing.c ****     
2450:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_runtime);
 18110              		.loc 1 2450 0
 18111 03be D7F8A831 		ldr	r3, [r7, #424]
 18112 03c2 9A6D     		ldr	r2, [r3, #88]
 18113 03c4 07F59C73 		add	r3, r7, #312
 18114 03c8 2F49     		ldr	r1, .L695+20
 18115 03ca 1846     		mov	r0, r3
 18116 03cc FFF7FEFF 		bl	sprintf
2451:..\src/command_processing.c ****     strcat(info_string, str);
 18117              		.loc 1 2451 0
 18118 03d0 07F59C72 		add	r2, r7, #312
 18119 03d4 3B1D     		adds	r3, r7, #4
 18120 03d6 1146     		mov	r1, r2
 18121 03d8 1868     		ldr	r0, [r3]
 18122 03da FFF7FEFF 		bl	strcat
2452:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18123              		.loc 1 2452 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 402


 18124 03de 3B1D     		adds	r3, r7, #4
 18125 03e0 1868     		ldr	r0, [r3]
 18126 03e2 FFF7FEFF 		bl	strlen
 18127 03e6 0346     		mov	r3, r0
 18128 03e8 1A46     		mov	r2, r3
 18129 03ea 3B1D     		adds	r3, r7, #4
 18130 03ec 1B68     		ldr	r3, [r3]
 18131 03ee 1344     		add	r3, r3, r2
 18132 03f0 214A     		ldr	r2, .L695+4
 18133 03f2 1188     		ldrh	r1, [r2]	@ unaligned
 18134 03f4 9278     		ldrb	r2, [r2, #2]
 18135 03f6 1980     		strh	r1, [r3]	@ unaligned
 18136 03f8 9A70     		strb	r2, [r3, #2]
2453:..\src/command_processing.c ****     
2454:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18137              		.loc 1 2454 0
 18138 03fa D7F8A831 		ldr	r3, [r7, #424]
 18139 03fe DA6D     		ldr	r2, [r3, #92]
 18140 0400 07F59C73 		add	r3, r7, #312
 18141 0404 2149     		ldr	r1, .L695+24
 18142 0406 1846     		mov	r0, r3
 18143 0408 FFF7FEFF 		bl	sprintf
2455:..\src/command_processing.c ****     strcat(info_string, str);
 18144              		.loc 1 2455 0
 18145 040c 07F59C72 		add	r2, r7, #312
 18146 0410 3B1D     		adds	r3, r7, #4
 18147 0412 1146     		mov	r1, r2
 18148 0414 1868     		ldr	r0, [r3]
 18149 0416 FFF7FEFF 		bl	strcat
2456:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18150              		.loc 1 2456 0
 18151 041a 3B1D     		adds	r3, r7, #4
 18152 041c 1868     		ldr	r0, [r3]
 18153 041e FFF7FEFF 		bl	strlen
 18154 0422 0346     		mov	r3, r0
 18155 0424 1A46     		mov	r2, r3
 18156 0426 3B1D     		adds	r3, r7, #4
 18157 0428 1B68     		ldr	r3, [r3]
 18158 042a 1344     		add	r3, r3, r2
 18159 042c 124A     		ldr	r2, .L695+4
 18160 042e 1188     		ldrh	r1, [r2]	@ unaligned
 18161 0430 9278     		ldrb	r2, [r2, #2]
 18162 0432 1980     		strh	r1, [r3]	@ unaligned
 18163 0434 9A70     		strb	r2, [r3, #2]
2457:..\src/command_processing.c ****     
2458:..\src/command_processing.c ****     
2459:..\src/command_processing.c ****     // R01 Project statistics (some are duplicated)
2460:..\src/command_processing.c ****     char CYDATA R01_str[300];
2461:..\src/command_processing.c ****     prepare_R01_info(R01_str);
 18164              		.loc 1 2461 0
 18165 0436 07F10C03 		add	r3, r7, #12
 18166 043a 1846     		mov	r0, r3
 18167 043c FFF7FEFF 		bl	prepare_R01_info
2462:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18168              		.loc 1 2462 0
 18169 0440 3B1D     		adds	r3, r7, #4
 18170 0442 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 403


 18171 0444 FFF7FEFF 		bl	strlen
 18172 0448 0346     		mov	r3, r0
 18173 044a 1A46     		mov	r2, r3
 18174 044c 3B1D     		adds	r3, r7, #4
 18175 044e 1B68     		ldr	r3, [r3]
 18176 0450 1344     		add	r3, r3, r2
 18177 0452 094A     		ldr	r2, .L695+4
 18178 0454 1188     		ldrh	r1, [r2]	@ unaligned
 18179 0456 9278     		ldrb	r2, [r2, #2]
 18180 0458 1980     		strh	r1, [r3]	@ unaligned
 18181 045a 9A70     		strb	r2, [r3, #2]
2463:..\src/command_processing.c ****     strcat(info_string, R01_str);
 18182              		.loc 1 2463 0
 18183 045c 07F10C02 		add	r2, r7, #12
 18184 0460 3B1D     		adds	r3, r7, #4
 18185 0462 1146     		mov	r1, r2
 18186 0464 1868     		ldr	r0, [r3]
 18187 0466 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** }
 18188              		.loc 1 2464 0
 18189 046a 00BF     		nop
 18190 046c 07F5DA77 		add	r7, r7, #436
 18191              		.cfi_def_cfa_offset 20
 18192 0470 BD46     		mov	sp, r7
 18193              		.cfi_def_cfa_register 13
 18194              		@ sp needed
 18195 0472 F0BD     		pop	{r4, r5, r6, r7, pc}
 18196              	.L696:
 18197              		.align	2
 18198              	.L695:
 18199 0474 041B0000 		.word	.LC258
 18200 0478 50110000 		.word	.LC152
 18201 047c 201B0000 		.word	.LC259
 18202 0480 481B0000 		.word	.LC260
 18203 0484 681B0000 		.word	.LC261
 18204 0488 901B0000 		.word	.LC262
 18205 048c B01B0000 		.word	.LC263
 18206              		.cfi_endproc
 18207              	.LFE73:
 18208              		.size	prepare_counter_info, .-prepare_counter_info
 18209              		.section	.rodata
 18210              		.align	2
 18211              	.LC264:
 18212 1bd4 52303120 		.ascii	"R01 PROJECT STATISTICS\015\012\000"
 18212      50524F4A 
 18212      45435420 
 18212      53544154 
 18212      49535449 
 18213 1bed 000000   		.align	2
 18214              	.LC265:
 18215 1bf0 506F7765 		.ascii	"Power cycles: %lu\000"
 18215      72206379 
 18215      636C6573 
 18215      3A20256C 
 18215      7500
 18216 1c02 0000     		.align	2
 18217              	.LC266:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 404


 18218 1c04 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18218      61637469 
 18218      76617469 
 18218      6F6E7320 
 18218      636F756E 
 18219 1c26 0000     		.align	2
 18220              	.LC267:
 18221 1c28 4E756D62 		.ascii	"Number of motions (close/open): %lu, %lu\000"
 18221      6572206F 
 18221      66206D6F 
 18221      74696F6E 
 18221      73202863 
 18222 1c51 000000   		.align	2
 18223              	.LC268:
 18224 1c54 45786365 		.ascii	"Excessive signal activity (close/open): %lu, %lu\000"
 18224      73736976 
 18224      65207369 
 18224      676E616C 
 18224      20616374 
 18225 1c85 000000   		.align	2
 18226              	.LC269:
 18227 1c88 546F7461 		.ascii	"Total runtime (sec): %lu\000"
 18227      6C207275 
 18227      6E74696D 
 18227      65202873 
 18227      6563293A 
 18228              		.global	__aeabi_ui2f
 18229 1ca1 000000   		.align	2
 18230              	.LC270:
 18231 1ca4 41766572 		.ascii	"Average duration of a powered-on session (sec): %.4"
 18231      61676520 
 18231      64757261 
 18231      74696F6E 
 18231      206F6620 
 18232 1cd7 6600     		.ascii	"f\000"
 18233 1cd9 000000   		.align	2
 18234              	.LC271:
 18235 1cdc 46726571 		.ascii	"Frequency of motions: %.4f\000"
 18235      75656E63 
 18235      79206F66 
 18235      206D6F74 
 18235      696F6E73 
 18236              		.section	.text.prepare_R01_info,"ax",%progbits
 18237              		.align	2
 18238              		.global	prepare_R01_info
 18239              		.thumb
 18240              		.thumb_func
 18241              		.type	prepare_R01_info, %function
 18242              	prepare_R01_info:
 18243              	.LFB74:
2465:..\src/command_processing.c **** 
2466:..\src/command_processing.c **** //==============================================================================
2467:..\src/command_processing.c **** //                                                 PREPARE GENERIC COUNTERS INFO
2468:..\src/command_processing.c **** //==============================================================================
2469:..\src/command_processing.c **** 
2470:..\src/command_processing.c **** void prepare_R01_info(char *info_string)
2471:..\src/command_processing.c **** {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 405


 18244              		.loc 1 2471 0
 18245              		.cfi_startproc
 18246              		@ args = 0, pretend = 0, frame = 168
 18247              		@ frame_needed = 1, uses_anonymous_args = 0
 18248 0000 B0B5     		push	{r4, r5, r7, lr}
 18249              		.cfi_def_cfa_offset 16
 18250              		.cfi_offset 4, -16
 18251              		.cfi_offset 5, -12
 18252              		.cfi_offset 7, -8
 18253              		.cfi_offset 14, -4
 18254 0002 AAB0     		sub	sp, sp, #168
 18255              		.cfi_def_cfa_offset 184
 18256 0004 00AF     		add	r7, sp, #0
 18257              		.cfi_def_cfa_register 7
 18258 0006 7860     		str	r0, [r7, #4]
2472:..\src/command_processing.c ****     char str[150];  
2473:..\src/command_processing.c **** 
2474:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18259              		.loc 1 2474 0
 18260 0008 8A4B     		ldr	r3, .L698
 18261 000a C7F8A430 		str	r3, [r7, #164]
2475:..\src/command_processing.c **** 
2476:..\src/command_processing.c ****     strcpy(info_string, "");
 18262              		.loc 1 2476 0
 18263 000e 7B68     		ldr	r3, [r7, #4]
 18264 0010 0022     		movs	r2, #0
 18265 0012 1A70     		strb	r2, [r3]
2477:..\src/command_processing.c ****     
2478:..\src/command_processing.c ****     strcat(info_string, "R01 PROJECT STATISTICS\r\n");
 18266              		.loc 1 2478 0
 18267 0014 7868     		ldr	r0, [r7, #4]
 18268 0016 FFF7FEFF 		bl	strlen
 18269 001a 0346     		mov	r3, r0
 18270 001c 1A46     		mov	r2, r3
 18271 001e 7B68     		ldr	r3, [r7, #4]
 18272 0020 1344     		add	r3, r3, r2
 18273 0022 854A     		ldr	r2, .L698+4
 18274 0024 1D46     		mov	r5, r3
 18275 0026 1446     		mov	r4, r2
 18276 0028 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18277 002a 2860     		str	r0, [r5]	@ unaligned
 18278 002c 6960     		str	r1, [r5, #4]	@ unaligned
 18279 002e AA60     		str	r2, [r5, #8]	@ unaligned
 18280 0030 EB60     		str	r3, [r5, #12]	@ unaligned
 18281 0032 03CC     		ldmia	r4!, {r0, r1}
 18282 0034 2861     		str	r0, [r5, #16]	@ unaligned
 18283 0036 6961     		str	r1, [r5, #20]	@ unaligned
 18284 0038 2378     		ldrb	r3, [r4]
 18285 003a 2B76     		strb	r3, [r5, #24]
2479:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18286              		.loc 1 2479 0
 18287 003c 7868     		ldr	r0, [r7, #4]
 18288 003e FFF7FEFF 		bl	strlen
 18289 0042 0346     		mov	r3, r0
 18290 0044 1A46     		mov	r2, r3
 18291 0046 7B68     		ldr	r3, [r7, #4]
 18292 0048 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 406


 18293 004a 7C4A     		ldr	r2, .L698+8
 18294 004c 1188     		ldrh	r1, [r2]	@ unaligned
 18295 004e 9278     		ldrb	r2, [r2, #2]
 18296 0050 1980     		strh	r1, [r3]	@ unaligned
 18297 0052 9A70     		strb	r2, [r3, #2]
2480:..\src/command_processing.c ****     
2481:..\src/command_processing.c ****     sprintf(str, "Power cycles: %lu", MEM_P->cnt.power_cycles);
 18298              		.loc 1 2481 0
 18299 0054 D7F8A430 		ldr	r3, [r7, #164]
 18300 0058 1A6E     		ldr	r2, [r3, #96]
 18301 005a 07F10C03 		add	r3, r7, #12
 18302 005e 7849     		ldr	r1, .L698+12
 18303 0060 1846     		mov	r0, r3
 18304 0062 FFF7FEFF 		bl	sprintf
2482:..\src/command_processing.c ****     strcat(info_string, str);
 18305              		.loc 1 2482 0
 18306 0066 07F10C03 		add	r3, r7, #12
 18307 006a 1946     		mov	r1, r3
 18308 006c 7868     		ldr	r0, [r7, #4]
 18309 006e FFF7FEFF 		bl	strcat
2483:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18310              		.loc 1 2483 0
 18311 0072 7868     		ldr	r0, [r7, #4]
 18312 0074 FFF7FEFF 		bl	strlen
 18313 0078 0346     		mov	r3, r0
 18314 007a 1A46     		mov	r2, r3
 18315 007c 7B68     		ldr	r3, [r7, #4]
 18316 007e 1344     		add	r3, r3, r2
 18317 0080 6E4A     		ldr	r2, .L698+8
 18318 0082 1188     		ldrh	r1, [r2]	@ unaligned
 18319 0084 9278     		ldrb	r2, [r2, #2]
 18320 0086 1980     		strh	r1, [r3]	@ unaligned
 18321 0088 9A70     		strb	r2, [r3, #2]
2484:..\src/command_processing.c ****     
2485:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_act_counter[0], MEM_P->cnt.emg
 18322              		.loc 1 2485 0
 18323 008a D7F8A430 		ldr	r3, [r7, #164]
 18324 008e 1A69     		ldr	r2, [r3, #16]
 18325 0090 D7F8A430 		ldr	r3, [r7, #164]
 18326 0094 5B69     		ldr	r3, [r3, #20]
 18327 0096 07F10C00 		add	r0, r7, #12
 18328 009a 6A49     		ldr	r1, .L698+16
 18329 009c FFF7FEFF 		bl	sprintf
2486:..\src/command_processing.c ****     strcat(info_string, str);
 18330              		.loc 1 2486 0
 18331 00a0 07F10C03 		add	r3, r7, #12
 18332 00a4 1946     		mov	r1, r3
 18333 00a6 7868     		ldr	r0, [r7, #4]
 18334 00a8 FFF7FEFF 		bl	strcat
2487:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18335              		.loc 1 2487 0
 18336 00ac 7868     		ldr	r0, [r7, #4]
 18337 00ae FFF7FEFF 		bl	strlen
 18338 00b2 0346     		mov	r3, r0
 18339 00b4 1A46     		mov	r2, r3
 18340 00b6 7B68     		ldr	r3, [r7, #4]
 18341 00b8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 407


 18342 00ba 604A     		ldr	r2, .L698+8
 18343 00bc 1188     		ldrh	r1, [r2]	@ unaligned
 18344 00be 9278     		ldrb	r2, [r2, #2]
 18345 00c0 1980     		strh	r1, [r3]	@ unaligned
 18346 00c2 9A70     		strb	r2, [r3, #2]
2488:..\src/command_processing.c ****     
2489:..\src/command_processing.c ****     sprintf(str, "Number of motions (close/open): %lu, %lu", MEM_P->cnt.motion_counter[0], MEM_P->c
 18347              		.loc 1 2489 0
 18348 00c4 D7F8A430 		ldr	r3, [r7, #164]
 18349 00c8 DA6E     		ldr	r2, [r3, #108]
 18350 00ca D7F8A430 		ldr	r3, [r7, #164]
 18351 00ce 1B6F     		ldr	r3, [r3, #112]
 18352 00d0 07F10C00 		add	r0, r7, #12
 18353 00d4 5C49     		ldr	r1, .L698+20
 18354 00d6 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****     strcat(info_string, str);
 18355              		.loc 1 2490 0
 18356 00da 07F10C03 		add	r3, r7, #12
 18357 00de 1946     		mov	r1, r3
 18358 00e0 7868     		ldr	r0, [r7, #4]
 18359 00e2 FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18360              		.loc 1 2491 0
 18361 00e6 7868     		ldr	r0, [r7, #4]
 18362 00e8 FFF7FEFF 		bl	strlen
 18363 00ec 0346     		mov	r3, r0
 18364 00ee 1A46     		mov	r2, r3
 18365 00f0 7B68     		ldr	r3, [r7, #4]
 18366 00f2 1344     		add	r3, r3, r2
 18367 00f4 514A     		ldr	r2, .L698+8
 18368 00f6 1188     		ldrh	r1, [r2]	@ unaligned
 18369 00f8 9278     		ldrb	r2, [r2, #2]
 18370 00fa 1980     		strh	r1, [r3]	@ unaligned
 18371 00fc 9A70     		strb	r2, [r3, #2]
2492:..\src/command_processing.c ****     
2493:..\src/command_processing.c ****     sprintf(str, "Excessive signal activity (close/open): %lu, %lu", MEM_P->cnt.excessive_signal_ac
 18372              		.loc 1 2493 0
 18373 00fe D7F8A430 		ldr	r3, [r7, #164]
 18374 0102 5A6E     		ldr	r2, [r3, #100]
 18375 0104 D7F8A430 		ldr	r3, [r7, #164]
 18376 0108 9B6E     		ldr	r3, [r3, #104]
 18377 010a 07F10C00 		add	r0, r7, #12
 18378 010e 4F49     		ldr	r1, .L698+24
 18379 0110 FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****     strcat(info_string, str);
 18380              		.loc 1 2494 0
 18381 0114 07F10C03 		add	r3, r7, #12
 18382 0118 1946     		mov	r1, r3
 18383 011a 7868     		ldr	r0, [r7, #4]
 18384 011c FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18385              		.loc 1 2495 0
 18386 0120 7868     		ldr	r0, [r7, #4]
 18387 0122 FFF7FEFF 		bl	strlen
 18388 0126 0346     		mov	r3, r0
 18389 0128 1A46     		mov	r2, r3
 18390 012a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 408


 18391 012c 1344     		add	r3, r3, r2
 18392 012e 434A     		ldr	r2, .L698+8
 18393 0130 1188     		ldrh	r1, [r2]	@ unaligned
 18394 0132 9278     		ldrb	r2, [r2, #2]
 18395 0134 1980     		strh	r1, [r3]	@ unaligned
 18396 0136 9A70     		strb	r2, [r3, #2]
2496:..\src/command_processing.c ****     
2497:..\src/command_processing.c ****     sprintf(str, "Total runtime (sec): %lu", MEM_P->cnt.total_runtime);
 18397              		.loc 1 2497 0
 18398 0138 D7F8A430 		ldr	r3, [r7, #164]
 18399 013c 9A6D     		ldr	r2, [r3, #88]
 18400 013e 07F10C03 		add	r3, r7, #12
 18401 0142 4349     		ldr	r1, .L698+28
 18402 0144 1846     		mov	r0, r3
 18403 0146 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****     strcat(info_string, str);
 18404              		.loc 1 2498 0
 18405 014a 07F10C03 		add	r3, r7, #12
 18406 014e 1946     		mov	r1, r3
 18407 0150 7868     		ldr	r0, [r7, #4]
 18408 0152 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18409              		.loc 1 2499 0
 18410 0156 7868     		ldr	r0, [r7, #4]
 18411 0158 FFF7FEFF 		bl	strlen
 18412 015c 0346     		mov	r3, r0
 18413 015e 1A46     		mov	r2, r3
 18414 0160 7B68     		ldr	r3, [r7, #4]
 18415 0162 1344     		add	r3, r3, r2
 18416 0164 354A     		ldr	r2, .L698+8
 18417 0166 1188     		ldrh	r1, [r2]	@ unaligned
 18418 0168 9278     		ldrb	r2, [r2, #2]
 18419 016a 1980     		strh	r1, [r3]	@ unaligned
 18420 016c 9A70     		strb	r2, [r3, #2]
2500:..\src/command_processing.c ****     
2501:..\src/command_processing.c ****     sprintf(str, "Average duration of a powered-on session (sec): %.4f", (float)(MEM_P->cnt.total_r
 18421              		.loc 1 2501 0
 18422 016e D7F8A430 		ldr	r3, [r7, #164]
 18423 0172 9A6D     		ldr	r2, [r3, #88]
 18424 0174 D7F8A430 		ldr	r3, [r7, #164]
 18425 0178 1B6E     		ldr	r3, [r3, #96]
 18426 017a B2FBF3F3 		udiv	r3, r2, r3
 18427 017e 1846     		mov	r0, r3
 18428 0180 FFF7FEFF 		bl	__aeabi_ui2f
 18429 0184 0346     		mov	r3, r0
 18430 0186 1846     		mov	r0, r3
 18431 0188 FFF7FEFF 		bl	__aeabi_f2d
 18432 018c 0346     		mov	r3, r0
 18433 018e 0C46     		mov	r4, r1
 18434 0190 07F10C00 		add	r0, r7, #12
 18435 0194 1A46     		mov	r2, r3
 18436 0196 2346     		mov	r3, r4
 18437 0198 2E49     		ldr	r1, .L698+32
 18438 019a FFF7FEFF 		bl	sprintf
2502:..\src/command_processing.c ****     strcat(info_string, str);
 18439              		.loc 1 2502 0
 18440 019e 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 409


 18441 01a2 1946     		mov	r1, r3
 18442 01a4 7868     		ldr	r0, [r7, #4]
 18443 01a6 FFF7FEFF 		bl	strcat
2503:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18444              		.loc 1 2503 0
 18445 01aa 7868     		ldr	r0, [r7, #4]
 18446 01ac FFF7FEFF 		bl	strlen
 18447 01b0 0346     		mov	r3, r0
 18448 01b2 1A46     		mov	r2, r3
 18449 01b4 7B68     		ldr	r3, [r7, #4]
 18450 01b6 1344     		add	r3, r3, r2
 18451 01b8 204A     		ldr	r2, .L698+8
 18452 01ba 1188     		ldrh	r1, [r2]	@ unaligned
 18453 01bc 9278     		ldrb	r2, [r2, #2]
 18454 01be 1980     		strh	r1, [r3]	@ unaligned
 18455 01c0 9A70     		strb	r2, [r3, #2]
2504:..\src/command_processing.c ****     
2505:..\src/command_processing.c ****     sprintf(str, "Frequency of motions: %.4f", (float)((MEM_P->cnt.emg_act_counter[0] + MEM_P->cnt.
 18456              		.loc 1 2505 0
 18457 01c2 D7F8A430 		ldr	r3, [r7, #164]
 18458 01c6 1A69     		ldr	r2, [r3, #16]
 18459 01c8 D7F8A430 		ldr	r3, [r7, #164]
 18460 01cc 5B69     		ldr	r3, [r3, #20]
 18461 01ce 1344     		add	r3, r3, r2
 18462 01d0 1846     		mov	r0, r3
 18463 01d2 FFF7FEFF 		bl	__aeabi_ui2f
 18464 01d6 0446     		mov	r4, r0
 18465 01d8 D7F8A430 		ldr	r3, [r7, #164]
 18466 01dc 9B6D     		ldr	r3, [r3, #88]
 18467 01de 1846     		mov	r0, r3
 18468 01e0 FFF7FEFF 		bl	__aeabi_ui2f
 18469 01e4 0346     		mov	r3, r0
 18470 01e6 1946     		mov	r1, r3
 18471 01e8 2046     		mov	r0, r4
 18472 01ea FFF7FEFF 		bl	__aeabi_fdiv
 18473 01ee 0346     		mov	r3, r0
 18474 01f0 1846     		mov	r0, r3
 18475 01f2 FFF7FEFF 		bl	__aeabi_f2d
 18476 01f6 0346     		mov	r3, r0
 18477 01f8 0C46     		mov	r4, r1
 18478 01fa 07F10C00 		add	r0, r7, #12
 18479 01fe 1A46     		mov	r2, r3
 18480 0200 2346     		mov	r3, r4
 18481 0202 1549     		ldr	r1, .L698+36
 18482 0204 FFF7FEFF 		bl	sprintf
2506:..\src/command_processing.c ****     strcat(info_string, str);
 18483              		.loc 1 2506 0
 18484 0208 07F10C03 		add	r3, r7, #12
 18485 020c 1946     		mov	r1, r3
 18486 020e 7868     		ldr	r0, [r7, #4]
 18487 0210 FFF7FEFF 		bl	strcat
2507:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18488              		.loc 1 2507 0
 18489 0214 7868     		ldr	r0, [r7, #4]
 18490 0216 FFF7FEFF 		bl	strlen
 18491 021a 0346     		mov	r3, r0
 18492 021c 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 410


 18493 021e 7B68     		ldr	r3, [r7, #4]
 18494 0220 1344     		add	r3, r3, r2
 18495 0222 064A     		ldr	r2, .L698+8
 18496 0224 1188     		ldrh	r1, [r2]	@ unaligned
 18497 0226 9278     		ldrb	r2, [r2, #2]
 18498 0228 1980     		strh	r1, [r3]	@ unaligned
 18499 022a 9A70     		strb	r2, [r3, #2]
2508:..\src/command_processing.c **** 
2509:..\src/command_processing.c **** }
 18500              		.loc 1 2509 0
 18501 022c 00BF     		nop
 18502 022e A837     		adds	r7, r7, #168
 18503              		.cfi_def_cfa_offset 16
 18504 0230 BD46     		mov	sp, r7
 18505              		.cfi_def_cfa_register 13
 18506              		@ sp needed
 18507 0232 B0BD     		pop	{r4, r5, r7, pc}
 18508              	.L699:
 18509              		.align	2
 18510              	.L698:
 18511 0234 00000000 		.word	g_mem
 18512 0238 D41B0000 		.word	.LC264
 18513 023c 50110000 		.word	.LC152
 18514 0240 F01B0000 		.word	.LC265
 18515 0244 041C0000 		.word	.LC266
 18516 0248 281C0000 		.word	.LC267
 18517 024c 541C0000 		.word	.LC268
 18518 0250 881C0000 		.word	.LC269
 18519 0254 A41C0000 		.word	.LC270
 18520 0258 DC1C0000 		.word	.LC271
 18521              		.cfi_endproc
 18522              	.LFE74:
 18523              		.size	prepare_R01_info, .-prepare_R01_info
 18524              		.section	.rodata
 18525 1cf7 00       		.align	2
 18526              	.LC272:
 18527 1cf8 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18527      77617265 
 18527      20766572 
 18527      73696F6E 
 18527      3A202573 
 18528 1d0f 00       		.align	2
 18529              	.LC273:
 18530 1d10 506F7369 		.ascii	"Position PID: \000"
 18530      74696F6E 
 18530      20504944 
 18530      3A2000
 18531 1d1f 00       		.align	2
 18532              	.LC274:
 18533 1d20 43757272 		.ascii	"Current PID: \000"
 18533      656E7420 
 18533      5049443A 
 18533      2000
 18534 1d2e 0000     		.align	2
 18535              	.LC275:
 18536 1d30 5265736F 		.ascii	"Resolutions: \000"
 18536      6C757469 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 411


 18536      6F6E733A 
 18536      2000
 18537 1d3e 0000     		.align	2
 18538              	.LC276:
 18539 1d40 4F666673 		.ascii	"Offsets: \000"
 18539      6574733A 
 18539      2000
 18540 1d4a 0000     		.align	2
 18541              	.LC277:
 18542 1d4c 4D756C74 		.ascii	"Multipliers: \000"
 18542      69706C69 
 18542      6572733A 
 18542      2000
 18543 1d5a 0000     		.align	2
 18544              	.LC278:
 18545 1d5c 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18545      656E7420 
 18545      6C6F6F6B 
 18545      75702074 
 18545      61626C65 
 18546 1d8f 662C2025 		.ascii	"f, %f\015\012\000"
 18546      660D0A00 
 18547 1d97 00       		.align	2
 18548              	.LC279:
 18549 1d98 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18549      74696F6E 
 18549      206C696D 
 18549      69742061 
 18549      63746976 
 18550              		.align	2
 18551              	.LC280:
 18552 1db4 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18552      74696F6E 
 18552      206C696D 
 18552      6974733A 
 18552      20696E66 
 18553              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18554              		.align	2
 18555              		.global	prepare_SD_param_info
 18556              		.thumb
 18557              		.thumb_func
 18558              		.type	prepare_SD_param_info, %function
 18559              	prepare_SD_param_info:
 18560              	.LFB75:
2510:..\src/command_processing.c **** 
2511:..\src/command_processing.c **** //==============================================================================
2512:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2513:..\src/command_processing.c **** //==============================================================================
2514:..\src/command_processing.c **** 
2515:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2516:..\src/command_processing.c **** {
 18561              		.loc 1 2516 0
 18562              		.cfi_startproc
 18563              		@ args = 0, pretend = 0, frame = 152
 18564              		@ frame_needed = 1, uses_anonymous_args = 0
 18565 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18566              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 412


 18567              		.cfi_offset 4, -36
 18568              		.cfi_offset 5, -32
 18569              		.cfi_offset 6, -28
 18570              		.cfi_offset 7, -24
 18571              		.cfi_offset 8, -20
 18572              		.cfi_offset 9, -16
 18573              		.cfi_offset 10, -12
 18574              		.cfi_offset 11, -8
 18575              		.cfi_offset 14, -4
 18576 0004 B1B0     		sub	sp, sp, #196
 18577              		.cfi_def_cfa_offset 232
 18578 0006 0AAF     		add	r7, sp, #40
 18579              		.cfi_def_cfa 7, 192
 18580 0008 7861     		str	r0, [r7, #20]
2517:..\src/command_processing.c ****     char str[100];  
2518:..\src/command_processing.c ****     int i;
2519:..\src/command_processing.c ****            
2520:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2521:..\src/command_processing.c ****     
2522:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18581              		.loc 1 2522 0
 18582 000a AC4B     		ldr	r3, .L765
 18583 000c C7F88C30 		str	r3, [r7, #140]
2523:..\src/command_processing.c ****         
2524:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18584              		.loc 1 2524 0
 18585 0010 AB4A     		ldr	r2, .L765+4
 18586 0012 AC49     		ldr	r1, .L765+8
 18587 0014 7869     		ldr	r0, [r7, #20]
 18588 0016 FFF7FEFF 		bl	sprintf
2525:..\src/command_processing.c ****     
2526:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18589              		.loc 1 2526 0
 18590 001a D7F88C30 		ldr	r3, [r7, #140]
 18591 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18592 0022 1A46     		mov	r2, r3
 18593 0024 07F11C03 		add	r3, r7, #28
 18594 0028 A749     		ldr	r1, .L765+12
 18595 002a 1846     		mov	r0, r3
 18596 002c FFF7FEFF 		bl	sprintf
2527:..\src/command_processing.c ****     strcat(info_string, str);
 18597              		.loc 1 2527 0
 18598 0030 07F11C03 		add	r3, r7, #28
 18599 0034 1946     		mov	r1, r3
 18600 0036 7869     		ldr	r0, [r7, #20]
 18601 0038 FFF7FEFF 		bl	strcat
2528:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18602              		.loc 1 2528 0
 18603 003c D7F88C30 		ldr	r3, [r7, #140]
 18604 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18605 0044 002B     		cmp	r3, #0
 18606 0046 02D0     		beq	.L702
 18607 0048 012B     		cmp	r3, #1
 18608 004a 15D0     		beq	.L703
 18609 004c 26E0     		b	.L701
 18610              	.L702:
2529:..\src/command_processing.c ****         case RIGHT_HAND:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 413


2530:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18611              		.loc 1 2530 0
 18612 004e 7869     		ldr	r0, [r7, #20]
 18613 0050 FFF7FEFF 		bl	strlen
 18614 0054 0346     		mov	r3, r0
 18615 0056 1A46     		mov	r2, r3
 18616 0058 7B69     		ldr	r3, [r7, #20]
 18617 005a 1344     		add	r3, r3, r2
 18618 005c 9B4A     		ldr	r2, .L765+16
 18619 005e 1D46     		mov	r5, r3
 18620 0060 1446     		mov	r4, r2
 18621 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18622 0064 2860     		str	r0, [r5]	@ unaligned
 18623 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18624 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18625 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18626 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18627 006e A278     		ldrb	r2, [r4, #2]
 18628 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18629 0072 1346     		mov	r3, r2
 18630 0074 AB74     		strb	r3, [r5, #18]
2531:..\src/command_processing.c ****             break;
 18631              		.loc 1 2531 0
 18632 0076 11E0     		b	.L701
 18633              	.L703:
2532:..\src/command_processing.c ****         case LEFT_HAND:
2533:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18634              		.loc 1 2533 0
 18635 0078 7869     		ldr	r0, [r7, #20]
 18636 007a FFF7FEFF 		bl	strlen
 18637 007e 0346     		mov	r3, r0
 18638 0080 1A46     		mov	r2, r3
 18639 0082 7B69     		ldr	r3, [r7, #20]
 18640 0084 1344     		add	r3, r3, r2
 18641 0086 924A     		ldr	r2, .L765+20
 18642 0088 1D46     		mov	r5, r3
 18643 008a 1446     		mov	r4, r2
 18644 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18645 008e 2860     		str	r0, [r5]	@ unaligned
 18646 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18647 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18648 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18649 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18650 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2534:..\src/command_processing.c ****             break;
 18651              		.loc 1 2534 0
 18652 009a 00BF     		nop
 18653              	.L701:
2535:..\src/command_processing.c ****     }
2536:..\src/command_processing.c **** 
2537:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18654              		.loc 1 2537 0
 18655 009c D7F88C30 		ldr	r3, [r7, #140]
 18656 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18657 00a4 1A46     		mov	r2, r3
 18658 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18659 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 414


 18660 00ae 1946     		mov	r1, r3
 18661 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18662 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18663 00b8 07F11C00 		add	r0, r7, #28
 18664 00bc 0093     		str	r3, [sp]
 18665 00be 0B46     		mov	r3, r1
 18666 00c0 8449     		ldr	r1, .L765+24
 18667 00c2 FFF7FEFF 		bl	sprintf
2538:..\src/command_processing.c ****     strcat(info_string, str);
 18668              		.loc 1 2538 0
 18669 00c6 07F11C03 		add	r3, r7, #28
 18670 00ca 1946     		mov	r1, r3
 18671 00cc 7869     		ldr	r0, [r7, #20]
 18672 00ce FFF7FEFF 		bl	strcat
2539:..\src/command_processing.c ****     
2540:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18673              		.loc 1 2540 0
 18674 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18675 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18676 00da 1A46     		mov	r2, r3
 18677 00dc D7F88C30 		ldr	r3, [r7, #140]
 18678 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18679 00e4 1946     		mov	r1, r3
 18680 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18681 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18682 00ee 07F11C00 		add	r0, r7, #28
 18683 00f2 0093     		str	r3, [sp]
 18684 00f4 0B46     		mov	r3, r1
 18685 00f6 7849     		ldr	r1, .L765+28
 18686 00f8 FFF7FEFF 		bl	sprintf
2541:..\src/command_processing.c ****     strcat(info_string, str);
 18687              		.loc 1 2541 0
 18688 00fc 07F11C03 		add	r3, r7, #28
 18689 0100 1946     		mov	r1, r3
 18690 0102 7869     		ldr	r0, [r7, #20]
 18691 0104 FFF7FEFF 		bl	strcat
 18692              	.LBB27:
2542:..\src/command_processing.c ****     
2543:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18693              		.loc 1 2543 0
 18694 0108 0023     		movs	r3, #0
 18695 010a 87F89330 		strb	r3, [r7, #147]
 18696 010e 00F05EBE 		b	.L704
 18697              	.L748:
 18698              	.LBB28:
2544:..\src/command_processing.c ****             
2545:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18699              		.loc 1 2545 0
 18700 0112 97F89330 		ldrb	r3, [r7, #147]
 18701 0116 87F88B30 		strb	r3, [r7, #139]
2546:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18702              		.loc 1 2546 0
 18703 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18704 011e 1346     		mov	r3, r2
 18705 0120 DB00     		lsls	r3, r3, #3
 18706 0122 9B1A     		subs	r3, r3, r2
 18707 0124 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 415


 18708 0126 B033     		adds	r3, r3, #176
 18709 0128 D7F88C20 		ldr	r2, [r7, #140]
 18710 012c 1344     		add	r3, r3, r2
 18711 012e C7F88430 		str	r3, [r7, #132]
2547:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18712              		.loc 1 2547 0
 18713 0132 D7F88430 		ldr	r3, [r7, #132]
 18714 0136 93F86030 		ldrb	r3, [r3, #96]
 18715 013a 87F88330 		strb	r3, [r7, #131]
2548:..\src/command_processing.c ****               
2549:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18716              		.loc 1 2549 0
 18717 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18718 0142 5A1C     		adds	r2, r3, #1
 18719 0144 07F11C03 		add	r3, r7, #28
 18720 0148 6449     		ldr	r1, .L765+32
 18721 014a 1846     		mov	r0, r3
 18722 014c FFF7FEFF 		bl	sprintf
2550:..\src/command_processing.c ****         strcat(info_string, str);
 18723              		.loc 1 2550 0
 18724 0150 07F11C03 		add	r3, r7, #28
 18725 0154 1946     		mov	r1, r3
 18726 0156 7869     		ldr	r0, [r7, #20]
 18727 0158 FFF7FEFF 		bl	strcat
2551:..\src/command_processing.c ****                     
2552:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18728              		.loc 1 2552 0
 18729 015c 7869     		ldr	r0, [r7, #20]
 18730 015e FFF7FEFF 		bl	strlen
 18731 0162 0346     		mov	r3, r0
 18732 0164 1A46     		mov	r2, r3
 18733 0166 7B69     		ldr	r3, [r7, #20]
 18734 0168 1344     		add	r3, r3, r2
 18735 016a 5D4A     		ldr	r2, .L765+36
 18736 016c 1D46     		mov	r5, r3
 18737 016e 1446     		mov	r4, r2
 18738 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18739 0172 2860     		str	r0, [r5]	@ unaligned
 18740 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18741 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18742 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18743 017a 03CC     		ldmia	r4!, {r0, r1}
 18744 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18745 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18746 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18747 0182 A278     		ldrb	r2, [r4, #2]
 18748 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18749 0186 1346     		mov	r3, r2
 18750 0188 AB76     		strb	r3, [r5, #26]
2553:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18751              		.loc 1 2553 0
 18752 018a D7F88430 		ldr	r3, [r7, #132]
 18753 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18754 0192 012B     		cmp	r3, #1
 18755 0194 0CD1     		bne	.L705
2554:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18756              		.loc 1 2554 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 416


 18757 0196 7869     		ldr	r0, [r7, #20]
 18758 0198 FFF7FEFF 		bl	strlen
 18759 019c 0346     		mov	r3, r0
 18760 019e 1A46     		mov	r2, r3
 18761 01a0 7B69     		ldr	r3, [r7, #20]
 18762 01a2 1344     		add	r3, r3, r2
 18763 01a4 4F4A     		ldr	r2, .L765+40
 18764 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18765 01a8 1860     		str	r0, [r3]	@ unaligned
 18766 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18767 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18768 01ae 0BE0     		b	.L706
 18769              	.L705:
2555:..\src/command_processing.c ****         else
2556:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18770              		.loc 1 2556 0
 18771 01b0 7869     		ldr	r0, [r7, #20]
 18772 01b2 FFF7FEFF 		bl	strlen
 18773 01b6 0346     		mov	r3, r0
 18774 01b8 1A46     		mov	r2, r3
 18775 01ba 7B69     		ldr	r3, [r7, #20]
 18776 01bc 1344     		add	r3, r3, r2
 18777 01be 4A4A     		ldr	r2, .L765+44
 18778 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18779 01c2 1860     		str	r0, [r3]	@ unaligned
 18780 01c4 1279     		ldrb	r2, [r2, #4]
 18781 01c6 1A71     		strb	r2, [r3, #4]
 18782              	.L706:
2557:..\src/command_processing.c ****         
2558:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18783              		.loc 1 2558 0
 18784 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18785 01cc 474A     		ldr	r2, .L765+48
 18786 01ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 18787 01d2 1A46     		mov	r2, r3
 18788 01d4 07F11C03 		add	r3, r7, #28
 18789 01d8 4549     		ldr	r1, .L765+52
 18790 01da 1846     		mov	r0, r3
 18791 01dc FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****         strcat(info_string, str);
 18792              		.loc 1 2559 0
 18793 01e0 07F11C03 		add	r3, r7, #28
 18794 01e4 1946     		mov	r1, r3
 18795 01e6 7869     		ldr	r0, [r7, #20]
 18796 01e8 FFF7FEFF 		bl	strcat
2560:..\src/command_processing.c **** 
2561:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18797              		.loc 1 2561 0
 18798 01ec 7869     		ldr	r0, [r7, #20]
 18799 01ee FFF7FEFF 		bl	strlen
 18800 01f2 0346     		mov	r3, r0
 18801 01f4 1A46     		mov	r2, r3
 18802 01f6 7B69     		ldr	r3, [r7, #20]
 18803 01f8 1344     		add	r3, r3, r2
 18804 01fa 3E4A     		ldr	r2, .L765+56
 18805 01fc 1C46     		mov	r4, r3
 18806 01fe 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 417


 18807 0200 07CB     		ldmia	r3!, {r0, r1, r2}
 18808 0202 2060     		str	r0, [r4]	@ unaligned
 18809 0204 6160     		str	r1, [r4, #4]	@ unaligned
 18810 0206 A260     		str	r2, [r4, #8]	@ unaligned
 18811 0208 1A88     		ldrh	r2, [r3]	@ unaligned
 18812 020a 9B78     		ldrb	r3, [r3, #2]
 18813 020c A281     		strh	r2, [r4, #12]	@ unaligned
 18814 020e A373     		strb	r3, [r4, #14]
2562:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18815              		.loc 1 2562 0
 18816 0210 D7F88430 		ldr	r3, [r7, #132]
 18817 0214 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18818 0218 032B     		cmp	r3, #3
 18819 021a 75D0     		beq	.L707
2563:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18820              		.loc 1 2563 0
 18821 021c D7F88430 		ldr	r3, [r7, #132]
 18822 0220 1B68     		ldr	r3, [r3]
 18823 0222 1846     		mov	r0, r3
 18824 0224 FFF7FEFF 		bl	__aeabi_i2d
 18825 0228 4FF00002 		mov	r2, #0
 18826 022c 324B     		ldr	r3, .L765+60
 18827 022e FFF7FEFF 		bl	__aeabi_ddiv
 18828 0232 0346     		mov	r3, r0
 18829 0234 0C46     		mov	r4, r1
 18830 0236 07F11C00 		add	r0, r7, #28
 18831 023a 1A46     		mov	r2, r3
 18832 023c 2346     		mov	r3, r4
 18833 023e 2F49     		ldr	r1, .L765+64
 18834 0240 FFF7FEFF 		bl	sprintf
2564:..\src/command_processing.c ****             strcat(info_string, str);
 18835              		.loc 1 2564 0
 18836 0244 07F11C03 		add	r3, r7, #28
 18837 0248 1946     		mov	r1, r3
 18838 024a 7869     		ldr	r0, [r7, #20]
 18839 024c FFF7FEFF 		bl	strcat
2565:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18840              		.loc 1 2565 0
 18841 0250 D7F88430 		ldr	r3, [r7, #132]
 18842 0254 5B68     		ldr	r3, [r3, #4]
 18843 0256 1846     		mov	r0, r3
 18844 0258 FFF7FEFF 		bl	__aeabi_i2d
 18845 025c 4FF00002 		mov	r2, #0
 18846 0260 254B     		ldr	r3, .L765+60
 18847 0262 FFF7FEFF 		bl	__aeabi_ddiv
 18848 0266 0346     		mov	r3, r0
 18849 0268 0C46     		mov	r4, r1
 18850 026a 07F11C00 		add	r0, r7, #28
 18851 026e 1A46     		mov	r2, r3
 18852 0270 2346     		mov	r3, r4
 18853 0272 2349     		ldr	r1, .L765+68
 18854 0274 FFF7FEFF 		bl	sprintf
2566:..\src/command_processing.c ****             strcat(info_string, str);
 18855              		.loc 1 2566 0
 18856 0278 07F11C03 		add	r3, r7, #28
 18857 027c 1946     		mov	r1, r3
 18858 027e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 418


 18859 0280 FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18860              		.loc 1 2567 0
 18861 0284 D7F88430 		ldr	r3, [r7, #132]
 18862 0288 9B68     		ldr	r3, [r3, #8]
 18863 028a 1846     		mov	r0, r3
 18864 028c FFF7FEFF 		bl	__aeabi_i2d
 18865 0290 4FF00002 		mov	r2, #0
 18866 0294 184B     		ldr	r3, .L765+60
 18867 0296 FFF7FEFF 		bl	__aeabi_ddiv
 18868 029a 0346     		mov	r3, r0
 18869 029c 0C46     		mov	r4, r1
 18870 029e 07F11C00 		add	r0, r7, #28
 18871 02a2 1A46     		mov	r2, r3
 18872 02a4 2346     		mov	r3, r4
 18873 02a6 1749     		ldr	r1, .L765+72
 18874 02a8 FFF7FEFF 		bl	sprintf
2568:..\src/command_processing.c ****             strcat(info_string, str);
 18875              		.loc 1 2568 0
 18876 02ac 07F11C03 		add	r3, r7, #28
 18877 02b0 1946     		mov	r1, r3
 18878 02b2 7869     		ldr	r0, [r7, #20]
 18879 02b4 FFF7FEFF 		bl	strcat
 18880 02b8 74E0     		b	.L708
 18881              	.L766:
 18882 02ba 00BF     		.align	2
 18883              	.L765:
 18884 02bc 00000000 		.word	g_mem
 18885 02c0 68110000 		.word	.LC154
 18886 02c4 F81C0000 		.word	.LC272
 18887 02c8 A0110000 		.word	.LC157
 18888 02cc 50120000 		.word	.LC163
 18889 02d0 64120000 		.word	.LC164
 18890 02d4 141A0000 		.word	.LC252
 18891 02d8 401A0000 		.word	.LC253
 18892 02dc AC120000 		.word	.LC168
 18893 02e0 1C130000 		.word	.LC177
 18894 02e4 0C130000 		.word	.LC175
 18895 02e8 14130000 		.word	.LC176
 18896 02ec 00000000 		.word	dev_pwm_limit
 18897 02f0 44130000 		.word	.LC180
 18898 02f4 101D0000 		.word	.LC273
 18899 02f8 0000F040 		.word	1089470464
 18900 02fc 5C140000 		.word	.LC192
 18901 0300 68140000 		.word	.LC193
 18902 0304 74140000 		.word	.LC194
 18903              	.L707:
2569:..\src/command_processing.c ****         }
2570:..\src/command_processing.c ****         else { 
2571:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18904              		.loc 1 2571 0
 18905 0308 D7F88430 		ldr	r3, [r7, #132]
 18906 030c 9B69     		ldr	r3, [r3, #24]
 18907 030e 1846     		mov	r0, r3
 18908 0310 FFF7FEFF 		bl	__aeabi_i2d
 18909 0314 4FF00002 		mov	r2, #0
 18910 0318 CC4B     		ldr	r3, .L767
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 419


 18911 031a FFF7FEFF 		bl	__aeabi_ddiv
 18912 031e 0346     		mov	r3, r0
 18913 0320 0C46     		mov	r4, r1
 18914 0322 07F11C00 		add	r0, r7, #28
 18915 0326 1A46     		mov	r2, r3
 18916 0328 2346     		mov	r3, r4
 18917 032a C949     		ldr	r1, .L767+4
 18918 032c FFF7FEFF 		bl	sprintf
2572:..\src/command_processing.c ****             strcat(info_string, str);
 18919              		.loc 1 2572 0
 18920 0330 07F11C03 		add	r3, r7, #28
 18921 0334 1946     		mov	r1, r3
 18922 0336 7869     		ldr	r0, [r7, #20]
 18923 0338 FFF7FEFF 		bl	strcat
2573:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18924              		.loc 1 2573 0
 18925 033c D7F88430 		ldr	r3, [r7, #132]
 18926 0340 DB69     		ldr	r3, [r3, #28]
 18927 0342 1846     		mov	r0, r3
 18928 0344 FFF7FEFF 		bl	__aeabi_i2d
 18929 0348 4FF00002 		mov	r2, #0
 18930 034c BF4B     		ldr	r3, .L767
 18931 034e FFF7FEFF 		bl	__aeabi_ddiv
 18932 0352 0346     		mov	r3, r0
 18933 0354 0C46     		mov	r4, r1
 18934 0356 07F11C00 		add	r0, r7, #28
 18935 035a 1A46     		mov	r2, r3
 18936 035c 2346     		mov	r3, r4
 18937 035e BD49     		ldr	r1, .L767+8
 18938 0360 FFF7FEFF 		bl	sprintf
2574:..\src/command_processing.c ****             strcat(info_string, str);
 18939              		.loc 1 2574 0
 18940 0364 07F11C03 		add	r3, r7, #28
 18941 0368 1946     		mov	r1, r3
 18942 036a 7869     		ldr	r0, [r7, #20]
 18943 036c FFF7FEFF 		bl	strcat
2575:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18944              		.loc 1 2575 0
 18945 0370 D7F88430 		ldr	r3, [r7, #132]
 18946 0374 1B6A     		ldr	r3, [r3, #32]
 18947 0376 1846     		mov	r0, r3
 18948 0378 FFF7FEFF 		bl	__aeabi_i2d
 18949 037c 4FF00002 		mov	r2, #0
 18950 0380 B24B     		ldr	r3, .L767
 18951 0382 FFF7FEFF 		bl	__aeabi_ddiv
 18952 0386 0346     		mov	r3, r0
 18953 0388 0C46     		mov	r4, r1
 18954 038a 07F11C00 		add	r0, r7, #28
 18955 038e 1A46     		mov	r2, r3
 18956 0390 2346     		mov	r3, r4
 18957 0392 B149     		ldr	r1, .L767+12
 18958 0394 FFF7FEFF 		bl	sprintf
2576:..\src/command_processing.c ****             strcat(info_string, str);
 18959              		.loc 1 2576 0
 18960 0398 07F11C03 		add	r3, r7, #28
 18961 039c 1946     		mov	r1, r3
 18962 039e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 420


 18963 03a0 FFF7FEFF 		bl	strcat
 18964              	.L708:
2577:..\src/command_processing.c ****         }
2578:..\src/command_processing.c **** 
2579:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18965              		.loc 1 2579 0
 18966 03a4 7869     		ldr	r0, [r7, #20]
 18967 03a6 FFF7FEFF 		bl	strlen
 18968 03aa 0346     		mov	r3, r0
 18969 03ac 1A46     		mov	r2, r3
 18970 03ae 7B69     		ldr	r3, [r7, #20]
 18971 03b0 1344     		add	r3, r3, r2
 18972 03b2 AA4A     		ldr	r2, .L767+16
 18973 03b4 1C46     		mov	r4, r3
 18974 03b6 1346     		mov	r3, r2
 18975 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 18976 03ba 2060     		str	r0, [r4]	@ unaligned
 18977 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 18978 03be A260     		str	r2, [r4, #8]	@ unaligned
 18979 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 18980 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
2580:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18981              		.loc 1 2580 0
 18982 03c4 D7F88430 		ldr	r3, [r7, #132]
 18983 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18984 03cc 032B     		cmp	r3, #3
 18985 03ce 4ED0     		beq	.L709
2581:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18986              		.loc 1 2581 0
 18987 03d0 D7F88430 		ldr	r3, [r7, #132]
 18988 03d4 DB68     		ldr	r3, [r3, #12]
 18989 03d6 1846     		mov	r0, r3
 18990 03d8 FFF7FEFF 		bl	__aeabi_i2d
 18991 03dc 4FF00002 		mov	r2, #0
 18992 03e0 9A4B     		ldr	r3, .L767
 18993 03e2 FFF7FEFF 		bl	__aeabi_ddiv
 18994 03e6 0346     		mov	r3, r0
 18995 03e8 0C46     		mov	r4, r1
 18996 03ea 07F11C00 		add	r0, r7, #28
 18997 03ee 1A46     		mov	r2, r3
 18998 03f0 2346     		mov	r3, r4
 18999 03f2 9749     		ldr	r1, .L767+4
 19000 03f4 FFF7FEFF 		bl	sprintf
2582:..\src/command_processing.c ****             strcat(info_string, str);
 19001              		.loc 1 2582 0
 19002 03f8 07F11C03 		add	r3, r7, #28
 19003 03fc 1946     		mov	r1, r3
 19004 03fe 7869     		ldr	r0, [r7, #20]
 19005 0400 FFF7FEFF 		bl	strcat
2583:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19006              		.loc 1 2583 0
 19007 0404 D7F88430 		ldr	r3, [r7, #132]
 19008 0408 1B69     		ldr	r3, [r3, #16]
 19009 040a 1846     		mov	r0, r3
 19010 040c FFF7FEFF 		bl	__aeabi_i2d
 19011 0410 4FF00002 		mov	r2, #0
 19012 0414 8D4B     		ldr	r3, .L767
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 421


 19013 0416 FFF7FEFF 		bl	__aeabi_ddiv
 19014 041a 0346     		mov	r3, r0
 19015 041c 0C46     		mov	r4, r1
 19016 041e 07F11C00 		add	r0, r7, #28
 19017 0422 1A46     		mov	r2, r3
 19018 0424 2346     		mov	r3, r4
 19019 0426 8B49     		ldr	r1, .L767+8
 19020 0428 FFF7FEFF 		bl	sprintf
2584:..\src/command_processing.c ****             strcat(info_string, str);
 19021              		.loc 1 2584 0
 19022 042c 07F11C03 		add	r3, r7, #28
 19023 0430 1946     		mov	r1, r3
 19024 0432 7869     		ldr	r0, [r7, #20]
 19025 0434 FFF7FEFF 		bl	strcat
2585:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19026              		.loc 1 2585 0
 19027 0438 D7F88430 		ldr	r3, [r7, #132]
 19028 043c 5B69     		ldr	r3, [r3, #20]
 19029 043e 1846     		mov	r0, r3
 19030 0440 FFF7FEFF 		bl	__aeabi_i2d
 19031 0444 4FF00002 		mov	r2, #0
 19032 0448 804B     		ldr	r3, .L767
 19033 044a FFF7FEFF 		bl	__aeabi_ddiv
 19034 044e 0346     		mov	r3, r0
 19035 0450 0C46     		mov	r4, r1
 19036 0452 07F11C00 		add	r0, r7, #28
 19037 0456 1A46     		mov	r2, r3
 19038 0458 2346     		mov	r3, r4
 19039 045a 7F49     		ldr	r1, .L767+12
 19040 045c FFF7FEFF 		bl	sprintf
2586:..\src/command_processing.c ****             strcat(info_string, str);
 19041              		.loc 1 2586 0
 19042 0460 07F11C03 		add	r3, r7, #28
 19043 0464 1946     		mov	r1, r3
 19044 0466 7869     		ldr	r0, [r7, #20]
 19045 0468 FFF7FEFF 		bl	strcat
 19046 046c 4DE0     		b	.L710
 19047              	.L709:
2587:..\src/command_processing.c **** 
2588:..\src/command_processing.c ****         }
2589:..\src/command_processing.c ****         else {
2590:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19048              		.loc 1 2590 0
 19049 046e D7F88430 		ldr	r3, [r7, #132]
 19050 0472 5B6A     		ldr	r3, [r3, #36]
 19051 0474 1846     		mov	r0, r3
 19052 0476 FFF7FEFF 		bl	__aeabi_i2d
 19053 047a 4FF00002 		mov	r2, #0
 19054 047e 734B     		ldr	r3, .L767
 19055 0480 FFF7FEFF 		bl	__aeabi_ddiv
 19056 0484 0346     		mov	r3, r0
 19057 0486 0C46     		mov	r4, r1
 19058 0488 07F11C00 		add	r0, r7, #28
 19059 048c 1A46     		mov	r2, r3
 19060 048e 2346     		mov	r3, r4
 19061 0490 6F49     		ldr	r1, .L767+4
 19062 0492 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 422


2591:..\src/command_processing.c ****             strcat(info_string, str);
 19063              		.loc 1 2591 0
 19064 0496 07F11C03 		add	r3, r7, #28
 19065 049a 1946     		mov	r1, r3
 19066 049c 7869     		ldr	r0, [r7, #20]
 19067 049e FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19068              		.loc 1 2592 0
 19069 04a2 D7F88430 		ldr	r3, [r7, #132]
 19070 04a6 9B6A     		ldr	r3, [r3, #40]
 19071 04a8 1846     		mov	r0, r3
 19072 04aa FFF7FEFF 		bl	__aeabi_i2d
 19073 04ae 4FF00002 		mov	r2, #0
 19074 04b2 664B     		ldr	r3, .L767
 19075 04b4 FFF7FEFF 		bl	__aeabi_ddiv
 19076 04b8 0346     		mov	r3, r0
 19077 04ba 0C46     		mov	r4, r1
 19078 04bc 07F11C00 		add	r0, r7, #28
 19079 04c0 1A46     		mov	r2, r3
 19080 04c2 2346     		mov	r3, r4
 19081 04c4 6349     		ldr	r1, .L767+8
 19082 04c6 FFF7FEFF 		bl	sprintf
2593:..\src/command_processing.c ****             strcat(info_string, str);
 19083              		.loc 1 2593 0
 19084 04ca 07F11C03 		add	r3, r7, #28
 19085 04ce 1946     		mov	r1, r3
 19086 04d0 7869     		ldr	r0, [r7, #20]
 19087 04d2 FFF7FEFF 		bl	strcat
2594:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19088              		.loc 1 2594 0
 19089 04d6 D7F88430 		ldr	r3, [r7, #132]
 19090 04da DB6A     		ldr	r3, [r3, #44]
 19091 04dc 1846     		mov	r0, r3
 19092 04de FFF7FEFF 		bl	__aeabi_i2d
 19093 04e2 4FF00002 		mov	r2, #0
 19094 04e6 594B     		ldr	r3, .L767
 19095 04e8 FFF7FEFF 		bl	__aeabi_ddiv
 19096 04ec 0346     		mov	r3, r0
 19097 04ee 0C46     		mov	r4, r1
 19098 04f0 07F11C00 		add	r0, r7, #28
 19099 04f4 1A46     		mov	r2, r3
 19100 04f6 2346     		mov	r3, r4
 19101 04f8 5749     		ldr	r1, .L767+12
 19102 04fa FFF7FEFF 		bl	sprintf
2595:..\src/command_processing.c ****             strcat(info_string, str);
 19103              		.loc 1 2595 0
 19104 04fe 07F11C03 		add	r3, r7, #28
 19105 0502 1946     		mov	r1, r3
 19106 0504 7869     		ldr	r0, [r7, #20]
 19107 0506 FFF7FEFF 		bl	strcat
 19108              	.L710:
2596:..\src/command_processing.c ****         }
2597:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19109              		.loc 1 2597 0
 19110 050a D7F88430 		ldr	r3, [r7, #132]
 19111 050e 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19112 0512 012B     		cmp	r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 423


 19113 0514 14D1     		bne	.L711
2598:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19114              		.loc 1 2598 0
 19115 0516 7869     		ldr	r0, [r7, #20]
 19116 0518 FFF7FEFF 		bl	strlen
 19117 051c 0346     		mov	r3, r0
 19118 051e 1A46     		mov	r2, r3
 19119 0520 7B69     		ldr	r3, [r7, #20]
 19120 0522 1344     		add	r3, r3, r2
 19121 0524 4E4A     		ldr	r2, .L767+20
 19122 0526 1D46     		mov	r5, r3
 19123 0528 1446     		mov	r4, r2
 19124 052a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19125 052c 2860     		str	r0, [r5]	@ unaligned
 19126 052e 6960     		str	r1, [r5, #4]	@ unaligned
 19127 0530 AA60     		str	r2, [r5, #8]	@ unaligned
 19128 0532 EB60     		str	r3, [r5, #12]	@ unaligned
 19129 0534 03CC     		ldmia	r4!, {r0, r1}
 19130 0536 2861     		str	r0, [r5, #16]	@ unaligned
 19131 0538 6961     		str	r1, [r5, #20]	@ unaligned
 19132 053a 2388     		ldrh	r3, [r4]	@ unaligned
 19133 053c 2B83     		strh	r3, [r5, #24]	@ unaligned
 19134 053e 13E0     		b	.L712
 19135              	.L711:
2599:..\src/command_processing.c ****         else
2600:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19136              		.loc 1 2600 0
 19137 0540 7869     		ldr	r0, [r7, #20]
 19138 0542 FFF7FEFF 		bl	strlen
 19139 0546 0346     		mov	r3, r0
 19140 0548 1A46     		mov	r2, r3
 19141 054a 7B69     		ldr	r3, [r7, #20]
 19142 054c 1344     		add	r3, r3, r2
 19143 054e 454A     		ldr	r2, .L767+24
 19144 0550 1D46     		mov	r5, r3
 19145 0552 1446     		mov	r4, r2
 19146 0554 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19147 0556 2860     		str	r0, [r5]	@ unaligned
 19148 0558 6960     		str	r1, [r5, #4]	@ unaligned
 19149 055a AA60     		str	r2, [r5, #8]	@ unaligned
 19150 055c EB60     		str	r3, [r5, #12]	@ unaligned
 19151 055e 03CC     		ldmia	r4!, {r0, r1}
 19152 0560 2861     		str	r0, [r5, #16]	@ unaligned
 19153 0562 6961     		str	r1, [r5, #20]	@ unaligned
 19154 0564 2378     		ldrb	r3, [r4]
 19155 0566 2B76     		strb	r3, [r5, #24]
 19156              	.L712:
2601:..\src/command_processing.c **** 
2602:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19157              		.loc 1 2602 0
 19158 0568 D7F88430 		ldr	r3, [r7, #132]
 19159 056c 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19160 0570 072B     		cmp	r3, #7
 19161 0572 00F2EA80 		bhi	.L713
 19162 0576 01A2     		adr	r2, .L715
 19163 0578 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19164              		.p2align 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 424


 19165              	.L715:
 19166 057c 9D050000 		.word	.L714+1
 19167 0580 C1050000 		.word	.L716+1
 19168 0584 E9050000 		.word	.L717+1
 19169 0588 1B060000 		.word	.L718+1
 19170 058c 79060000 		.word	.L719+1
 19171 0590 A7060000 		.word	.L720+1
 19172 0594 D7060000 		.word	.L721+1
 19173 0598 05070000 		.word	.L722+1
 19174              		.p2align 1
 19175              	.L714:
2603:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2604:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19176              		.loc 1 2604 0
 19177 059c 7869     		ldr	r0, [r7, #20]
 19178 059e FFF7FEFF 		bl	strlen
 19179 05a2 0346     		mov	r3, r0
 19180 05a4 1A46     		mov	r2, r3
 19181 05a6 7B69     		ldr	r3, [r7, #20]
 19182 05a8 1344     		add	r3, r3, r2
 19183 05aa 2F4A     		ldr	r2, .L767+28
 19184 05ac 1D46     		mov	r5, r3
 19185 05ae 1446     		mov	r4, r2
 19186 05b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19187 05b2 2860     		str	r0, [r5]	@ unaligned
 19188 05b4 6960     		str	r1, [r5, #4]	@ unaligned
 19189 05b6 AA60     		str	r2, [r5, #8]	@ unaligned
 19190 05b8 EB60     		str	r3, [r5, #12]	@ unaligned
 19191 05ba 2388     		ldrh	r3, [r4]	@ unaligned
 19192 05bc 2B82     		strh	r3, [r5, #16]	@ unaligned
2605:..\src/command_processing.c ****                 break;
 19193              		.loc 1 2605 0
 19194 05be C4E0     		b	.L713
 19195              	.L716:
2606:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2607:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19196              		.loc 1 2607 0
 19197 05c0 7869     		ldr	r0, [r7, #20]
 19198 05c2 FFF7FEFF 		bl	strlen
 19199 05c6 0346     		mov	r3, r0
 19200 05c8 1A46     		mov	r2, r3
 19201 05ca 7B69     		ldr	r3, [r7, #20]
 19202 05cc 1344     		add	r3, r3, r2
 19203 05ce 274A     		ldr	r2, .L767+32
 19204 05d0 1D46     		mov	r5, r3
 19205 05d2 1446     		mov	r4, r2
 19206 05d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19207 05d6 2860     		str	r0, [r5]	@ unaligned
 19208 05d8 6960     		str	r1, [r5, #4]	@ unaligned
 19209 05da AA60     		str	r2, [r5, #8]	@ unaligned
 19210 05dc EB60     		str	r3, [r5, #12]	@ unaligned
 19211 05de 2068     		ldr	r0, [r4]	@ unaligned
 19212 05e0 2861     		str	r0, [r5, #16]	@ unaligned
 19213 05e2 2379     		ldrb	r3, [r4, #4]
 19214 05e4 2B75     		strb	r3, [r5, #20]
2608:..\src/command_processing.c ****                 break;
 19215              		.loc 1 2608 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 425


 19216 05e6 B0E0     		b	.L713
 19217              	.L717:
2609:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2610:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19218              		.loc 1 2610 0
 19219 05e8 7869     		ldr	r0, [r7, #20]
 19220 05ea FFF7FEFF 		bl	strlen
 19221 05ee 0346     		mov	r3, r0
 19222 05f0 1A46     		mov	r2, r3
 19223 05f2 7B69     		ldr	r3, [r7, #20]
 19224 05f4 1344     		add	r3, r3, r2
 19225 05f6 1E4A     		ldr	r2, .L767+36
 19226 05f8 1D46     		mov	r5, r3
 19227 05fa 1446     		mov	r4, r2
 19228 05fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19229 05fe 2860     		str	r0, [r5]	@ unaligned
 19230 0600 6960     		str	r1, [r5, #4]	@ unaligned
 19231 0602 AA60     		str	r2, [r5, #8]	@ unaligned
 19232 0604 EB60     		str	r3, [r5, #12]	@ unaligned
 19233 0606 07CC     		ldmia	r4!, {r0, r1, r2}
 19234 0608 2861     		str	r0, [r5, #16]	@ unaligned
 19235 060a 6961     		str	r1, [r5, #20]	@ unaligned
 19236 060c AA61     		str	r2, [r5, #24]	@ unaligned
 19237 060e 2388     		ldrh	r3, [r4]	@ unaligned
 19238 0610 A278     		ldrb	r2, [r4, #2]
 19239 0612 AB83     		strh	r3, [r5, #28]	@ unaligned
 19240 0614 1346     		mov	r3, r2
 19241 0616 AB77     		strb	r3, [r5, #30]
2611:..\src/command_processing.c ****                 break;
 19242              		.loc 1 2611 0
 19243 0618 97E0     		b	.L713
 19244              	.L718:
2612:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2613:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19245              		.loc 1 2613 0
 19246 061a 7869     		ldr	r0, [r7, #20]
 19247 061c FFF7FEFF 		bl	strlen
 19248 0620 0346     		mov	r3, r0
 19249 0622 1A46     		mov	r2, r3
 19250 0624 7B69     		ldr	r3, [r7, #20]
 19251 0626 1344     		add	r3, r3, r2
 19252 0628 124A     		ldr	r2, .L767+40
 19253 062a 1D46     		mov	r5, r3
 19254 062c 1446     		mov	r4, r2
 19255 062e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19256 0630 2860     		str	r0, [r5]	@ unaligned
 19257 0632 6960     		str	r1, [r5, #4]	@ unaligned
 19258 0634 AA60     		str	r2, [r5, #8]	@ unaligned
 19259 0636 EB60     		str	r3, [r5, #12]	@ unaligned
 19260 0638 03CC     		ldmia	r4!, {r0, r1}
 19261 063a 2861     		str	r0, [r5, #16]	@ unaligned
 19262 063c 6961     		str	r1, [r5, #20]	@ unaligned
 19263 063e 2388     		ldrh	r3, [r4]	@ unaligned
 19264 0640 A278     		ldrb	r2, [r4, #2]
 19265 0642 2B83     		strh	r3, [r5, #24]	@ unaligned
 19266 0644 1346     		mov	r3, r2
 19267 0646 AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 426


2614:..\src/command_processing.c ****                 break;
 19268              		.loc 1 2614 0
 19269 0648 7FE0     		b	.L713
 19270              	.L768:
 19271 064a 00BF     		.align	2
 19272              	.L767:
 19273 064c 0000F040 		.word	1089470464
 19274 0650 5C140000 		.word	.LC192
 19275 0654 68140000 		.word	.LC193
 19276 0658 74140000 		.word	.LC194
 19277 065c 201D0000 		.word	.LC274
 19278 0660 9C140000 		.word	.LC196
 19279 0664 B8140000 		.word	.LC197
 19280 0668 D4140000 		.word	.LC198
 19281 066c E8140000 		.word	.LC199
 19282 0670 00150000 		.word	.LC200
 19283 0674 20150000 		.word	.LC201
 19284              	.L719:
2615:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2616:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19285              		.loc 1 2616 0
 19286 0678 7869     		ldr	r0, [r7, #20]
 19287 067a FFF7FEFF 		bl	strlen
 19288 067e 0346     		mov	r3, r0
 19289 0680 1A46     		mov	r2, r3
 19290 0682 7B69     		ldr	r3, [r7, #20]
 19291 0684 1344     		add	r3, r3, r2
 19292 0686 BA4A     		ldr	r2, .L769
 19293 0688 1C46     		mov	r4, r3
 19294 068a 1546     		mov	r5, r2
 19295 068c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19296 068e 2060     		str	r0, [r4]	@ unaligned
 19297 0690 6160     		str	r1, [r4, #4]	@ unaligned
 19298 0692 A260     		str	r2, [r4, #8]	@ unaligned
 19299 0694 E360     		str	r3, [r4, #12]	@ unaligned
 19300 0696 2868     		ldr	r0, [r5]	@ unaligned
 19301 0698 2061     		str	r0, [r4, #16]	@ unaligned
 19302 069a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19303 069c AA79     		ldrb	r2, [r5, #6]
 19304 069e A382     		strh	r3, [r4, #20]	@ unaligned
 19305 06a0 1346     		mov	r3, r2
 19306 06a2 A375     		strb	r3, [r4, #22]
2617:..\src/command_processing.c ****                 break;
 19307              		.loc 1 2617 0
 19308 06a4 51E0     		b	.L713
 19309              	.L720:
2618:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2619:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19310              		.loc 1 2619 0
 19311 06a6 7869     		ldr	r0, [r7, #20]
 19312 06a8 FFF7FEFF 		bl	strlen
 19313 06ac 0346     		mov	r3, r0
 19314 06ae 1A46     		mov	r2, r3
 19315 06b0 7B69     		ldr	r3, [r7, #20]
 19316 06b2 1344     		add	r3, r3, r2
 19317 06b4 AF4A     		ldr	r2, .L769+4
 19318 06b6 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 427


 19319 06b8 1446     		mov	r4, r2
 19320 06ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19321 06bc 2860     		str	r0, [r5]	@ unaligned
 19322 06be 6960     		str	r1, [r5, #4]	@ unaligned
 19323 06c0 AA60     		str	r2, [r5, #8]	@ unaligned
 19324 06c2 EB60     		str	r3, [r5, #12]	@ unaligned
 19325 06c4 03CC     		ldmia	r4!, {r0, r1}
 19326 06c6 2861     		str	r0, [r5, #16]	@ unaligned
 19327 06c8 6961     		str	r1, [r5, #20]	@ unaligned
 19328 06ca 2388     		ldrh	r3, [r4]	@ unaligned
 19329 06cc A278     		ldrb	r2, [r4, #2]
 19330 06ce 2B83     		strh	r3, [r5, #24]	@ unaligned
 19331 06d0 1346     		mov	r3, r2
 19332 06d2 AB76     		strb	r3, [r5, #26]
2620:..\src/command_processing.c ****                 break;
 19333              		.loc 1 2620 0
 19334 06d4 39E0     		b	.L713
 19335              	.L721:
2621:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2622:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19336              		.loc 1 2622 0
 19337 06d6 7869     		ldr	r0, [r7, #20]
 19338 06d8 FFF7FEFF 		bl	strlen
 19339 06dc 0346     		mov	r3, r0
 19340 06de 1A46     		mov	r2, r3
 19341 06e0 7B69     		ldr	r3, [r7, #20]
 19342 06e2 1344     		add	r3, r3, r2
 19343 06e4 A44A     		ldr	r2, .L769+8
 19344 06e6 1C46     		mov	r4, r3
 19345 06e8 1546     		mov	r5, r2
 19346 06ea 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19347 06ec 2060     		str	r0, [r4]	@ unaligned
 19348 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 19349 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 19350 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 19351 06f4 2868     		ldr	r0, [r5]	@ unaligned
 19352 06f6 2061     		str	r0, [r4, #16]	@ unaligned
 19353 06f8 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19354 06fa AA79     		ldrb	r2, [r5, #6]
 19355 06fc A382     		strh	r3, [r4, #20]	@ unaligned
 19356 06fe 1346     		mov	r3, r2
 19357 0700 A375     		strb	r3, [r4, #22]
2623:..\src/command_processing.c ****                 break;
 19358              		.loc 1 2623 0
 19359 0702 22E0     		b	.L713
 19360              	.L722:
2624:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2625:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19361              		.loc 1 2625 0
 19362 0704 7869     		ldr	r0, [r7, #20]
 19363 0706 FFF7FEFF 		bl	strlen
 19364 070a 0346     		mov	r3, r0
 19365 070c 1A46     		mov	r2, r3
 19366 070e 7B69     		ldr	r3, [r7, #20]
 19367 0710 1344     		add	r3, r3, r2
 19368 0712 9A4A     		ldr	r2, .L769+12
 19369 0714 1546     		mov	r5, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 428


 19370 0716 9E46     		mov	lr, r3
 19371 0718 05F1200C 		add	ip, r5, #32
 19372              	.L723:
 19373 071c 7446     		mov	r4, lr
 19374 071e 2E46     		mov	r6, r5
 19375 0720 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19376 0722 2060     		str	r0, [r4]	@ unaligned
 19377 0724 6160     		str	r1, [r4, #4]	@ unaligned
 19378 0726 A260     		str	r2, [r4, #8]	@ unaligned
 19379 0728 E360     		str	r3, [r4, #12]	@ unaligned
 19380 072a 1035     		adds	r5, r5, #16
 19381 072c 0EF1100E 		add	lr, lr, #16
 19382 0730 6545     		cmp	r5, ip
 19383 0732 F3D1     		bne	.L723
 19384 0734 7446     		mov	r4, lr
 19385 0736 2B46     		mov	r3, r5
 19386 0738 07CB     		ldmia	r3!, {r0, r1, r2}
 19387 073a 2060     		str	r0, [r4]	@ unaligned
 19388 073c 6160     		str	r1, [r4, #4]	@ unaligned
 19389 073e A260     		str	r2, [r4, #8]	@ unaligned
 19390 0740 1A88     		ldrh	r2, [r3]	@ unaligned
 19391 0742 9B78     		ldrb	r3, [r3, #2]
 19392 0744 A281     		strh	r2, [r4, #12]	@ unaligned
 19393 0746 A373     		strb	r3, [r4, #14]
2626:..\src/command_processing.c ****                 break;
 19394              		.loc 1 2626 0
 19395 0748 00BF     		nop
 19396              	.L713:
2627:..\src/command_processing.c ****         }
2628:..\src/command_processing.c **** 
2629:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19397              		.loc 1 2629 0
 19398 074a D7F88430 		ldr	r3, [r7, #132]
 19399 074e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19400 0752 032B     		cmp	r3, #3
 19401 0754 63D8     		bhi	.L763
 19402 0756 01A2     		adr	r2, .L726
 19403 0758 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19404              		.p2align 2
 19405              	.L726:
 19406 075c 6D070000 		.word	.L725+1
 19407 0760 97070000 		.word	.L727+1
 19408 0764 BB070000 		.word	.L728+1
 19409 0768 E1070000 		.word	.L729+1
 19410              		.p2align 1
 19411              	.L725:
2630:..\src/command_processing.c ****             case CONTROL_ANGLE:
2631:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19412              		.loc 1 2631 0
 19413 076c 7869     		ldr	r0, [r7, #20]
 19414 076e FFF7FEFF 		bl	strlen
 19415 0772 0346     		mov	r3, r0
 19416 0774 1A46     		mov	r2, r3
 19417 0776 7B69     		ldr	r3, [r7, #20]
 19418 0778 1344     		add	r3, r3, r2
 19419 077a 814A     		ldr	r2, .L769+16
 19420 077c 1D46     		mov	r5, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 429


 19421 077e 1446     		mov	r4, r2
 19422 0780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19423 0782 2860     		str	r0, [r5]	@ unaligned
 19424 0784 6960     		str	r1, [r5, #4]	@ unaligned
 19425 0786 AA60     		str	r2, [r5, #8]	@ unaligned
 19426 0788 EB60     		str	r3, [r5, #12]	@ unaligned
 19427 078a 03CC     		ldmia	r4!, {r0, r1}
 19428 078c 2861     		str	r0, [r5, #16]	@ unaligned
 19429 078e 6961     		str	r1, [r5, #20]	@ unaligned
 19430 0790 2378     		ldrb	r3, [r4]
 19431 0792 2B76     		strb	r3, [r5, #24]
2632:..\src/command_processing.c ****                 break;
 19432              		.loc 1 2632 0
 19433 0794 44E0     		b	.L730
 19434              	.L727:
2633:..\src/command_processing.c ****             case CONTROL_PWM:
2634:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19435              		.loc 1 2634 0
 19436 0796 7869     		ldr	r0, [r7, #20]
 19437 0798 FFF7FEFF 		bl	strlen
 19438 079c 0346     		mov	r3, r0
 19439 079e 1A46     		mov	r2, r3
 19440 07a0 7B69     		ldr	r3, [r7, #20]
 19441 07a2 1344     		add	r3, r3, r2
 19442 07a4 774A     		ldr	r2, .L769+20
 19443 07a6 1D46     		mov	r5, r3
 19444 07a8 1446     		mov	r4, r2
 19445 07aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19446 07ac 2860     		str	r0, [r5]	@ unaligned
 19447 07ae 6960     		str	r1, [r5, #4]	@ unaligned
 19448 07b0 AA60     		str	r2, [r5, #8]	@ unaligned
 19449 07b2 EB60     		str	r3, [r5, #12]	@ unaligned
 19450 07b4 2068     		ldr	r0, [r4]	@ unaligned
 19451 07b6 2861     		str	r0, [r5, #16]	@ unaligned
2635:..\src/command_processing.c ****                 break;
 19452              		.loc 1 2635 0
 19453 07b8 32E0     		b	.L730
 19454              	.L728:
2636:..\src/command_processing.c ****             case CONTROL_CURRENT:
2637:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19455              		.loc 1 2637 0
 19456 07ba 7869     		ldr	r0, [r7, #20]
 19457 07bc FFF7FEFF 		bl	strlen
 19458 07c0 0346     		mov	r3, r0
 19459 07c2 1A46     		mov	r2, r3
 19460 07c4 7B69     		ldr	r3, [r7, #20]
 19461 07c6 1344     		add	r3, r3, r2
 19462 07c8 6F4A     		ldr	r2, .L769+24
 19463 07ca 1D46     		mov	r5, r3
 19464 07cc 1446     		mov	r4, r2
 19465 07ce 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19466 07d0 2860     		str	r0, [r5]	@ unaligned
 19467 07d2 6960     		str	r1, [r5, #4]	@ unaligned
 19468 07d4 AA60     		str	r2, [r5, #8]	@ unaligned
 19469 07d6 EB60     		str	r3, [r5, #12]	@ unaligned
 19470 07d8 03CC     		ldmia	r4!, {r0, r1}
 19471 07da 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 430


 19472 07dc 6961     		str	r1, [r5, #20]	@ unaligned
2638:..\src/command_processing.c ****                 break;
 19473              		.loc 1 2638 0
 19474 07de 1FE0     		b	.L730
 19475              	.L729:
2639:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2640:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19476              		.loc 1 2640 0
 19477 07e0 7869     		ldr	r0, [r7, #20]
 19478 07e2 FFF7FEFF 		bl	strlen
 19479 07e6 0346     		mov	r3, r0
 19480 07e8 1A46     		mov	r2, r3
 19481 07ea 7B69     		ldr	r3, [r7, #20]
 19482 07ec 1344     		add	r3, r3, r2
 19483 07ee 674A     		ldr	r2, .L769+28
 19484 07f0 1446     		mov	r4, r2
 19485 07f2 9E46     		mov	lr, r3
 19486 07f4 04F1200C 		add	ip, r4, #32
 19487              	.L731:
 19488 07f8 7546     		mov	r5, lr
 19489 07fa 2646     		mov	r6, r4
 19490 07fc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19491 07fe 2860     		str	r0, [r5]	@ unaligned
 19492 0800 6960     		str	r1, [r5, #4]	@ unaligned
 19493 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 19494 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 19495 0806 1034     		adds	r4, r4, #16
 19496 0808 0EF1100E 		add	lr, lr, #16
 19497 080c 6445     		cmp	r4, ip
 19498 080e F3D1     		bne	.L731
 19499 0810 7346     		mov	r3, lr
 19500 0812 2246     		mov	r2, r4
 19501 0814 1068     		ldr	r0, [r2]	@ unaligned
 19502 0816 1860     		str	r0, [r3]	@ unaligned
 19503 0818 1279     		ldrb	r2, [r2, #4]
 19504 081a 1A71     		strb	r2, [r3, #4]
2641:..\src/command_processing.c ****                 break;
 19505              		.loc 1 2641 0
 19506 081c 00E0     		b	.L730
 19507              	.L763:
2642:..\src/command_processing.c ****             default:
2643:..\src/command_processing.c ****                 break;
 19508              		.loc 1 2643 0
 19509 081e 00BF     		nop
 19510              	.L730:
2644:..\src/command_processing.c ****         }
2645:..\src/command_processing.c **** 
2646:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19511              		.loc 1 2646 0
 19512 0820 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19513 0824 D7F88C10 		ldr	r1, [r7, #140]
 19514 0828 1346     		mov	r3, r2
 19515 082a 5B00     		lsls	r3, r3, #1
 19516 082c 1344     		add	r3, r3, r2
 19517 082e 1B01     		lsls	r3, r3, #4
 19518 0830 0B44     		add	r3, r3, r1
 19519 0832 03F5D873 		add	r3, r3, #432
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 431


 19520 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19521 0838 002B     		cmp	r3, #0
 19522 083a 1CD0     		beq	.L732
2647:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19523              		.loc 1 2647 0
 19524 083c 7869     		ldr	r0, [r7, #20]
 19525 083e FFF7FEFF 		bl	strlen
 19526 0842 0346     		mov	r3, r0
 19527 0844 1A46     		mov	r2, r3
 19528 0846 7B69     		ldr	r3, [r7, #20]
 19529 0848 1344     		add	r3, r3, r2
 19530 084a 514A     		ldr	r2, .L769+32
 19531 084c 1446     		mov	r4, r2
 19532 084e 9E46     		mov	lr, r3
 19533 0850 04F1200C 		add	ip, r4, #32
 19534              	.L733:
 19535 0854 7546     		mov	r5, lr
 19536 0856 2646     		mov	r6, r4
 19537 0858 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19538 085a 2860     		str	r0, [r5]	@ unaligned
 19539 085c 6960     		str	r1, [r5, #4]	@ unaligned
 19540 085e AA60     		str	r2, [r5, #8]	@ unaligned
 19541 0860 EB60     		str	r3, [r5, #12]	@ unaligned
 19542 0862 1034     		adds	r4, r4, #16
 19543 0864 0EF1100E 		add	lr, lr, #16
 19544 0868 6445     		cmp	r4, ip
 19545 086a F3D1     		bne	.L733
 19546 086c 7346     		mov	r3, lr
 19547 086e 2246     		mov	r2, r4
 19548 0870 1278     		ldrb	r2, [r2]
 19549 0872 1A70     		strb	r2, [r3]
 19550 0874 13E0     		b	.L734
 19551              	.L732:
2648:..\src/command_processing.c ****         else
2649:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19552              		.loc 1 2649 0
 19553 0876 7869     		ldr	r0, [r7, #20]
 19554 0878 FFF7FEFF 		bl	strlen
 19555 087c 0346     		mov	r3, r0
 19556 087e 1A46     		mov	r2, r3
 19557 0880 7B69     		ldr	r3, [r7, #20]
 19558 0882 1344     		add	r3, r3, r2
 19559 0884 434A     		ldr	r2, .L769+36
 19560 0886 1C46     		mov	r4, r3
 19561 0888 1546     		mov	r5, r2
 19562 088a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19563 088c 2060     		str	r0, [r4]	@ unaligned
 19564 088e 6160     		str	r1, [r4, #4]	@ unaligned
 19565 0890 A260     		str	r2, [r4, #8]	@ unaligned
 19566 0892 E360     		str	r3, [r4, #12]	@ unaligned
 19567 0894 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19568 0896 2061     		str	r0, [r4, #16]	@ unaligned
 19569 0898 6161     		str	r1, [r4, #20]	@ unaligned
 19570 089a A261     		str	r2, [r4, #24]	@ unaligned
 19571 089c E361     		str	r3, [r4, #28]	@ unaligned
 19572              	.L734:
2650:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 432


2651:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19573              		.loc 1 2651 0
 19574 089e 7869     		ldr	r0, [r7, #20]
 19575 08a0 FFF7FEFF 		bl	strlen
 19576 08a4 0346     		mov	r3, r0
 19577 08a6 1A46     		mov	r2, r3
 19578 08a8 7B69     		ldr	r3, [r7, #20]
 19579 08aa 1344     		add	r3, r3, r2
 19580 08ac 3A4A     		ldr	r2, .L769+40
 19581 08ae 1C46     		mov	r4, r3
 19582 08b0 1346     		mov	r3, r2
 19583 08b2 07CB     		ldmia	r3!, {r0, r1, r2}
 19584 08b4 2060     		str	r0, [r4]	@ unaligned
 19585 08b6 6160     		str	r1, [r4, #4]	@ unaligned
 19586 08b8 A260     		str	r2, [r4, #8]	@ unaligned
 19587 08ba 1B88     		ldrh	r3, [r3]	@ unaligned
 19588 08bc A381     		strh	r3, [r4, #12]	@ unaligned
2652:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19589              		.loc 1 2652 0
 19590 08be 0023     		movs	r3, #0
 19591 08c0 C7F89430 		str	r3, [r7, #148]
 19592 08c4 30E0     		b	.L735
 19593              	.L737:
2653:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19594              		.loc 1 2653 0
 19595 08c6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19596 08ca D7F88C10 		ldr	r1, [r7, #140]
 19597 08ce 1346     		mov	r3, r2
 19598 08d0 5B00     		lsls	r3, r3, #1
 19599 08d2 1344     		add	r3, r3, r2
 19600 08d4 1B01     		lsls	r3, r3, #4
 19601 08d6 CA18     		adds	r2, r1, r3
 19602 08d8 D7F89430 		ldr	r3, [r7, #148]
 19603 08dc 1344     		add	r3, r3, r2
 19604 08de 03F29513 		addw	r3, r3, #405
 19605 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19606 08e4 1A46     		mov	r2, r3
 19607 08e6 07F11C03 		add	r3, r7, #28
 19608 08ea 2C49     		ldr	r1, .L769+44
 19609 08ec 1846     		mov	r0, r3
 19610 08ee FFF7FEFF 		bl	sprintf
2654:..\src/command_processing.c ****             strcat(info_string, str);
 19611              		.loc 1 2654 0
 19612 08f2 07F11C03 		add	r3, r7, #28
 19613 08f6 1946     		mov	r1, r3
 19614 08f8 7869     		ldr	r0, [r7, #20]
 19615 08fa FFF7FEFF 		bl	strcat
2655:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19616              		.loc 1 2655 0
 19617 08fe D7F89430 		ldr	r3, [r7, #148]
 19618 0902 022B     		cmp	r3, #2
 19619 0904 0BD0     		beq	.L736
2656:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19620              		.loc 1 2656 0
 19621 0906 7869     		ldr	r0, [r7, #20]
 19622 0908 FFF7FEFF 		bl	strlen
 19623 090c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 433


 19624 090e 1A46     		mov	r2, r3
 19625 0910 7B69     		ldr	r3, [r7, #20]
 19626 0912 1344     		add	r3, r3, r2
 19627 0914 224A     		ldr	r2, .L769+48
 19628 0916 1188     		ldrh	r1, [r2]	@ unaligned
 19629 0918 9278     		ldrb	r2, [r2, #2]
 19630 091a 1980     		strh	r1, [r3]	@ unaligned
 19631 091c 9A70     		strb	r2, [r3, #2]
 19632              	.L736:
2652:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19633              		.loc 1 2652 0 discriminator 2
 19634 091e D7F89430 		ldr	r3, [r7, #148]
 19635 0922 0133     		adds	r3, r3, #1
 19636 0924 C7F89430 		str	r3, [r7, #148]
 19637              	.L735:
2652:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19638              		.loc 1 2652 0 is_stmt 0 discriminator 1
 19639 0928 D7F89430 		ldr	r3, [r7, #148]
 19640 092c 022B     		cmp	r3, #2
 19641 092e CADD     		ble	.L737
2657:..\src/command_processing.c ****             }                
2658:..\src/command_processing.c ****         }
2659:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19642              		.loc 1 2659 0 is_stmt 1
 19643 0930 7869     		ldr	r0, [r7, #20]
 19644 0932 FFF7FEFF 		bl	strlen
 19645 0936 0346     		mov	r3, r0
 19646 0938 1A46     		mov	r2, r3
 19647 093a 7B69     		ldr	r3, [r7, #20]
 19648 093c 1344     		add	r3, r3, r2
 19649 093e 194A     		ldr	r2, .L769+52
 19650 0940 1188     		ldrh	r1, [r2]	@ unaligned
 19651 0942 9278     		ldrb	r2, [r2, #2]
 19652 0944 1980     		strh	r1, [r3]	@ unaligned
 19653 0946 9A70     		strb	r2, [r3, #2]
2660:..\src/command_processing.c **** 
2661:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19654              		.loc 1 2661 0
 19655 0948 7869     		ldr	r0, [r7, #20]
 19656 094a FFF7FEFF 		bl	strlen
 19657 094e 0346     		mov	r3, r0
 19658 0950 1A46     		mov	r2, r3
 19659 0952 7B69     		ldr	r3, [r7, #20]
 19660 0954 1344     		add	r3, r3, r2
 19661 0956 1449     		ldr	r1, .L769+56
 19662 0958 1A46     		mov	r2, r3
 19663 095a 0B46     		mov	r3, r1
 19664 095c 03CB     		ldmia	r3!, {r0, r1}
 19665 095e 1060     		str	r0, [r2]	@ unaligned
 19666 0960 5160     		str	r1, [r2, #4]	@ unaligned
 19667 0962 1B88     		ldrh	r3, [r3]	@ unaligned
 19668 0964 1381     		strh	r3, [r2, #8]	@ unaligned
2662:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19669              		.loc 1 2662 0
 19670 0966 0023     		movs	r3, #0
 19671 0968 C7F89430 		str	r3, [r7, #148]
 19672 096c 5EE0     		b	.L738
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 434


 19673              	.L770:
 19674 096e 00BF     		.align	2
 19675              	.L769:
 19676 0970 3C150000 		.word	.LC202
 19677 0974 54150000 		.word	.LC203
 19678 0978 70150000 		.word	.LC204
 19679 097c 88150000 		.word	.LC205
 19680 0980 B8150000 		.word	.LC206
 19681 0984 D4150000 		.word	.LC207
 19682 0988 E8150000 		.word	.LC208
 19683 098c 00160000 		.word	.LC209
 19684 0990 28160000 		.word	.LC210
 19685 0994 4C160000 		.word	.LC211
 19686 0998 301D0000 		.word	.LC275
 19687 099c 7C130000 		.word	.LC183
 19688 09a0 80130000 		.word	.LC184
 19689 09a4 50110000 		.word	.LC152
 19690 09a8 401D0000 		.word	.LC276
 19691              	.L740:
2663:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19692              		.loc 1 2663 0
 19693 09ac 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19694 09b0 D7F88C10 		ldr	r1, [r7, #140]
 19695 09b4 1346     		mov	r3, r2
 19696 09b6 5B00     		lsls	r3, r3, #1
 19697 09b8 1344     		add	r3, r3, r2
 19698 09ba 9B00     		lsls	r3, r3, #2
 19699 09bc D7F89420 		ldr	r2, [r7, #148]
 19700 09c0 1344     		add	r3, r3, r2
 19701 09c2 6633     		adds	r3, r3, #102
 19702 09c4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19703 09c8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19704 09cc D7F88C00 		ldr	r0, [r7, #140]
 19705 09d0 1346     		mov	r3, r2
 19706 09d2 5B00     		lsls	r3, r3, #1
 19707 09d4 1344     		add	r3, r3, r2
 19708 09d6 1B01     		lsls	r3, r3, #4
 19709 09d8 C218     		adds	r2, r0, r3
 19710 09da D7F89430 		ldr	r3, [r7, #148]
 19711 09de 1344     		add	r3, r3, r2
 19712 09e0 03F29513 		addw	r3, r3, #405
 19713 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19714 09e6 41FA03F2 		asr	r2, r1, r3
 19715 09ea 07F11C03 		add	r3, r7, #28
 19716 09ee CF49     		ldr	r1, .L771
 19717 09f0 1846     		mov	r0, r3
 19718 09f2 FFF7FEFF 		bl	sprintf
2664:..\src/command_processing.c ****             strcat(info_string, str);
 19719              		.loc 1 2664 0
 19720 09f6 07F11C03 		add	r3, r7, #28
 19721 09fa 1946     		mov	r1, r3
 19722 09fc 7869     		ldr	r0, [r7, #20]
 19723 09fe FFF7FEFF 		bl	strcat
2665:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19724              		.loc 1 2665 0
 19725 0a02 D7F89430 		ldr	r3, [r7, #148]
 19726 0a06 022B     		cmp	r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 435


 19727 0a08 0BD0     		beq	.L739
2666:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19728              		.loc 1 2666 0
 19729 0a0a 7869     		ldr	r0, [r7, #20]
 19730 0a0c FFF7FEFF 		bl	strlen
 19731 0a10 0346     		mov	r3, r0
 19732 0a12 1A46     		mov	r2, r3
 19733 0a14 7B69     		ldr	r3, [r7, #20]
 19734 0a16 1344     		add	r3, r3, r2
 19735 0a18 C54A     		ldr	r2, .L771+4
 19736 0a1a 1188     		ldrh	r1, [r2]	@ unaligned
 19737 0a1c 9278     		ldrb	r2, [r2, #2]
 19738 0a1e 1980     		strh	r1, [r3]	@ unaligned
 19739 0a20 9A70     		strb	r2, [r3, #2]
 19740              	.L739:
2662:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19741              		.loc 1 2662 0 discriminator 2
 19742 0a22 D7F89430 		ldr	r3, [r7, #148]
 19743 0a26 0133     		adds	r3, r3, #1
 19744 0a28 C7F89430 		str	r3, [r7, #148]
 19745              	.L738:
2662:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19746              		.loc 1 2662 0 is_stmt 0 discriminator 1
 19747 0a2c D7F89430 		ldr	r3, [r7, #148]
 19748 0a30 022B     		cmp	r3, #2
 19749 0a32 BBDD     		ble	.L740
2667:..\src/command_processing.c ****             }
2668:..\src/command_processing.c ****         }
2669:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19750              		.loc 1 2669 0 is_stmt 1
 19751 0a34 7869     		ldr	r0, [r7, #20]
 19752 0a36 FFF7FEFF 		bl	strlen
 19753 0a3a 0346     		mov	r3, r0
 19754 0a3c 1A46     		mov	r2, r3
 19755 0a3e 7B69     		ldr	r3, [r7, #20]
 19756 0a40 1344     		add	r3, r3, r2
 19757 0a42 BC4A     		ldr	r2, .L771+8
 19758 0a44 1188     		ldrh	r1, [r2]	@ unaligned
 19759 0a46 9278     		ldrb	r2, [r2, #2]
 19760 0a48 1980     		strh	r1, [r3]	@ unaligned
 19761 0a4a 9A70     		strb	r2, [r3, #2]
2670:..\src/command_processing.c ****             
2671:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19762              		.loc 1 2671 0
 19763 0a4c 7869     		ldr	r0, [r7, #20]
 19764 0a4e FFF7FEFF 		bl	strlen
 19765 0a52 0346     		mov	r3, r0
 19766 0a54 1A46     		mov	r2, r3
 19767 0a56 7B69     		ldr	r3, [r7, #20]
 19768 0a58 1344     		add	r3, r3, r2
 19769 0a5a B74A     		ldr	r2, .L771+12
 19770 0a5c 1C46     		mov	r4, r3
 19771 0a5e 1346     		mov	r3, r2
 19772 0a60 07CB     		ldmia	r3!, {r0, r1, r2}
 19773 0a62 2060     		str	r0, [r4]	@ unaligned
 19774 0a64 6160     		str	r1, [r4, #4]	@ unaligned
 19775 0a66 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 436


 19776 0a68 1B88     		ldrh	r3, [r3]	@ unaligned
 19777 0a6a A381     		strh	r3, [r4, #12]	@ unaligned
2672:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19778              		.loc 1 2672 0
 19779 0a6c 0023     		movs	r3, #0
 19780 0a6e C7F89430 		str	r3, [r7, #148]
 19781 0a72 35E0     		b	.L741
 19782              	.L743:
2673:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19783              		.loc 1 2673 0
 19784 0a74 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19785 0a78 D7F88C10 		ldr	r1, [r7, #140]
 19786 0a7c 1346     		mov	r3, r2
 19787 0a7e 5B00     		lsls	r3, r3, #1
 19788 0a80 1344     		add	r3, r3, r2
 19789 0a82 9B00     		lsls	r3, r3, #2
 19790 0a84 D7F89420 		ldr	r2, [r7, #148]
 19791 0a88 1344     		add	r3, r3, r2
 19792 0a8a 6833     		adds	r3, r3, #104
 19793 0a8c 9B00     		lsls	r3, r3, #2
 19794 0a8e 0B44     		add	r3, r3, r1
 19795 0a90 5B68     		ldr	r3, [r3, #4]	@ float
 19796 0a92 1846     		mov	r0, r3
 19797 0a94 FFF7FEFF 		bl	__aeabi_f2d
 19798 0a98 0346     		mov	r3, r0
 19799 0a9a 0C46     		mov	r4, r1
 19800 0a9c 07F11C00 		add	r0, r7, #28
 19801 0aa0 1A46     		mov	r2, r3
 19802 0aa2 2346     		mov	r3, r4
 19803 0aa4 A549     		ldr	r1, .L771+16
 19804 0aa6 FFF7FEFF 		bl	sprintf
2674:..\src/command_processing.c ****             strcat(info_string, str);
 19805              		.loc 1 2674 0
 19806 0aaa 07F11C03 		add	r3, r7, #28
 19807 0aae 1946     		mov	r1, r3
 19808 0ab0 7869     		ldr	r0, [r7, #20]
 19809 0ab2 FFF7FEFF 		bl	strcat
2675:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19810              		.loc 1 2675 0
 19811 0ab6 D7F89430 		ldr	r3, [r7, #148]
 19812 0aba 022B     		cmp	r3, #2
 19813 0abc 0BD0     		beq	.L742
2676:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19814              		.loc 1 2676 0
 19815 0abe 7869     		ldr	r0, [r7, #20]
 19816 0ac0 FFF7FEFF 		bl	strlen
 19817 0ac4 0346     		mov	r3, r0
 19818 0ac6 1A46     		mov	r2, r3
 19819 0ac8 7B69     		ldr	r3, [r7, #20]
 19820 0aca 1344     		add	r3, r3, r2
 19821 0acc 984A     		ldr	r2, .L771+4
 19822 0ace 1188     		ldrh	r1, [r2]	@ unaligned
 19823 0ad0 9278     		ldrb	r2, [r2, #2]
 19824 0ad2 1980     		strh	r1, [r3]	@ unaligned
 19825 0ad4 9A70     		strb	r2, [r3, #2]
 19826              	.L742:
2672:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 437


 19827              		.loc 1 2672 0 discriminator 2
 19828 0ad6 D7F89430 		ldr	r3, [r7, #148]
 19829 0ada 0133     		adds	r3, r3, #1
 19830 0adc C7F89430 		str	r3, [r7, #148]
 19831              	.L741:
2672:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19832              		.loc 1 2672 0 is_stmt 0 discriminator 1
 19833 0ae0 D7F89430 		ldr	r3, [r7, #148]
 19834 0ae4 022B     		cmp	r3, #2
 19835 0ae6 C5DD     		ble	.L743
2677:..\src/command_processing.c ****             }
2678:..\src/command_processing.c ****         }
2679:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19836              		.loc 1 2679 0 is_stmt 1
 19837 0ae8 7869     		ldr	r0, [r7, #20]
 19838 0aea FFF7FEFF 		bl	strlen
 19839 0aee 0346     		mov	r3, r0
 19840 0af0 1A46     		mov	r2, r3
 19841 0af2 7B69     		ldr	r3, [r7, #20]
 19842 0af4 1344     		add	r3, r3, r2
 19843 0af6 8F4A     		ldr	r2, .L771+8
 19844 0af8 1188     		ldrh	r1, [r2]	@ unaligned
 19845 0afa 9278     		ldrb	r2, [r2, #2]
 19846 0afc 1980     		strh	r1, [r3]	@ unaligned
 19847 0afe 9A70     		strb	r2, [r3, #2]
2680:..\src/command_processing.c **** 
2681:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19848              		.loc 1 2681 0
 19849 0b00 D7F88430 		ldr	r3, [r7, #132]
 19850 0b04 5B6C     		ldr	r3, [r3, #68]	@ float
 19851 0b06 1846     		mov	r0, r3
 19852 0b08 FFF7FEFF 		bl	__aeabi_f2d
 19853 0b0c C7E90201 		strd	r0, [r7, #8]
 19854 0b10 D7F88430 		ldr	r3, [r7, #132]
 19855 0b14 9B6C     		ldr	r3, [r3, #72]	@ float
 19856 0b16 1846     		mov	r0, r3
 19857 0b18 FFF7FEFF 		bl	__aeabi_f2d
 19858 0b1c 0446     		mov	r4, r0
 19859 0b1e 0D46     		mov	r5, r1
 19860 0b20 D7F88430 		ldr	r3, [r7, #132]
 19861 0b24 DB6C     		ldr	r3, [r3, #76]	@ float
 19862 0b26 1846     		mov	r0, r3
 19863 0b28 FFF7FEFF 		bl	__aeabi_f2d
 19864 0b2c 8046     		mov	r8, r0
 19865 0b2e 8946     		mov	r9, r1
 19866 0b30 D7F88430 		ldr	r3, [r7, #132]
 19867 0b34 1B6D     		ldr	r3, [r3, #80]	@ float
 19868 0b36 1846     		mov	r0, r3
 19869 0b38 FFF7FEFF 		bl	__aeabi_f2d
 19870 0b3c 8246     		mov	r10, r0
 19871 0b3e 8B46     		mov	fp, r1
 19872 0b40 D7F88430 		ldr	r3, [r7, #132]
 19873 0b44 5B6D     		ldr	r3, [r3, #84]	@ float
 19874 0b46 1846     		mov	r0, r3
 19875 0b48 FFF7FEFF 		bl	__aeabi_f2d
 19876 0b4c C7E90001 		strd	r0, [r7]
 19877 0b50 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 438


 19878 0b54 9B6D     		ldr	r3, [r3, #88]	@ float
 19879 0b56 1846     		mov	r0, r3
 19880 0b58 FFF7FEFF 		bl	__aeabi_f2d
 19881 0b5c 0246     		mov	r2, r0
 19882 0b5e 0B46     		mov	r3, r1
 19883 0b60 07F11C00 		add	r0, r7, #28
 19884 0b64 CDE90823 		strd	r2, [sp, #32]
 19885 0b68 D7E90012 		ldrd	r1, [r7]
 19886 0b6c CDE90612 		strd	r1, [sp, #24]
 19887 0b70 CDE904AB 		strd	r10, [sp, #16]
 19888 0b74 CDE90289 		strd	r8, [sp, #8]
 19889 0b78 CDE90045 		strd	r4, [sp]
 19890 0b7c D7E90223 		ldrd	r2, [r7, #8]
 19891 0b80 6F49     		ldr	r1, .L771+20
 19892 0b82 FFF7FEFF 		bl	sprintf
2682:..\src/command_processing.c **** 		strcat(info_string, str);
 19893              		.loc 1 2682 0
 19894 0b86 07F11C03 		add	r3, r7, #28
 19895 0b8a 1946     		mov	r1, r3
 19896 0b8c 7869     		ldr	r0, [r7, #20]
 19897 0b8e FFF7FEFF 		bl	strcat
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19898              		.loc 1 2684 0
 19899 0b92 D7F88430 		ldr	r3, [r7, #132]
 19900 0b96 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19901 0b9a 1A46     		mov	r2, r3
 19902 0b9c 07F11C03 		add	r3, r7, #28
 19903 0ba0 6849     		ldr	r1, .L771+24
 19904 0ba2 1846     		mov	r0, r3
 19905 0ba4 FFF7FEFF 		bl	sprintf
2685:..\src/command_processing.c **** 		strcat(info_string, str);
 19906              		.loc 1 2685 0
 19907 0ba8 07F11C03 		add	r3, r7, #28
 19908 0bac 1946     		mov	r1, r3
 19909 0bae 7869     		ldr	r0, [r7, #20]
 19910 0bb0 FFF7FEFF 		bl	strcat
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19911              		.loc 1 2687 0
 19912 0bb4 D7F88430 		ldr	r3, [r7, #132]
 19913 0bb8 596B     		ldr	r1, [r3, #52]
 19914 0bba 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19915 0bbe D7F88C00 		ldr	r0, [r7, #140]
 19916 0bc2 1346     		mov	r3, r2
 19917 0bc4 5B00     		lsls	r3, r3, #1
 19918 0bc6 1344     		add	r3, r3, r2
 19919 0bc8 1B01     		lsls	r3, r3, #4
 19920 0bca 0344     		add	r3, r3, r0
 19921 0bcc 03F29513 		addw	r3, r3, #405
 19922 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19923 0bd2 41FA03F4 		asr	r4, r1, r3
 19924 0bd6 D7F88430 		ldr	r3, [r7, #132]
 19925 0bda 996B     		ldr	r1, [r3, #56]
 19926 0bdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19927 0be0 D7F88C00 		ldr	r0, [r7, #140]
 19928 0be4 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 439


 19929 0be6 5B00     		lsls	r3, r3, #1
 19930 0be8 1344     		add	r3, r3, r2
 19931 0bea 1B01     		lsls	r3, r3, #4
 19932 0bec 0344     		add	r3, r3, r0
 19933 0bee 03F29513 		addw	r3, r3, #405
 19934 0bf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19935 0bf4 41FA03F3 		asr	r3, r1, r3
 19936 0bf8 07F11C00 		add	r0, r7, #28
 19937 0bfc 2246     		mov	r2, r4
 19938 0bfe 5249     		ldr	r1, .L771+28
 19939 0c00 FFF7FEFF 		bl	sprintf
2688:..\src/command_processing.c **** 		strcat(info_string, str);
 19940              		.loc 1 2688 0
 19941 0c04 07F11C03 		add	r3, r7, #28
 19942 0c08 1946     		mov	r1, r3
 19943 0c0a 7869     		ldr	r0, [r7, #20]
 19944 0c0c FFF7FEFF 		bl	strcat
2689:..\src/command_processing.c **** 
2690:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19945              		.loc 1 2690 0
 19946 0c10 D7F88430 		ldr	r3, [r7, #132]
 19947 0c14 B3F95C30 		ldrsh	r3, [r3, #92]
 19948 0c18 1A46     		mov	r2, r3
 19949 0c1a 07F11C03 		add	r3, r7, #28
 19950 0c1e 4B49     		ldr	r1, .L771+32
 19951 0c20 1846     		mov	r0, r3
 19952 0c22 FFF7FEFF 		bl	sprintf
2691:..\src/command_processing.c **** 		strcat(info_string, str);
 19953              		.loc 1 2691 0
 19954 0c26 07F11C03 		add	r3, r7, #28
 19955 0c2a 1946     		mov	r1, r3
 19956 0c2c 7869     		ldr	r0, [r7, #20]
 19957 0c2e FFF7FEFF 		bl	strcat
2692:..\src/command_processing.c **** 
2693:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 19958              		.loc 1 2693 0
 19959 0c32 D7F88430 		ldr	r3, [r7, #132]
 19960 0c36 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19961 0c3a 022B     		cmp	r3, #2
 19962 0c3c 18D0     		beq	.L744
2694:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19963              		.loc 1 2694 0 discriminator 1
 19964 0c3e D7F88430 		ldr	r3, [r7, #132]
 19965 0c42 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2693:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19966              		.loc 1 2693 0 discriminator 1
 19967 0c46 032B     		cmp	r3, #3
 19968 0c48 12D0     		beq	.L744
2695:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19969              		.loc 1 2695 0
 19970 0c4a D7F88430 		ldr	r3, [r7, #132]
 19971 0c4e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2694:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19972              		.loc 1 2694 0
 19973 0c52 042B     		cmp	r3, #4
 19974 0c54 0CD0     		beq	.L744
2696:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 440


 19975              		.loc 1 2696 0
 19976 0c56 D7F88430 		ldr	r3, [r7, #132]
 19977 0c5a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2695:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19978              		.loc 1 2695 0
 19979 0c5e 052B     		cmp	r3, #5
 19980 0c60 06D0     		beq	.L744
2697:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 19981              		.loc 1 2697 0
 19982 0c62 D7F88430 		ldr	r3, [r7, #132]
 19983 0c66 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2696:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19984              		.loc 1 2696 0
 19985 0c6a 072B     		cmp	r3, #7
 19986 0c6c 40F0AA80 		bne	.L745
 19987              	.L744:
2698:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19988              		.loc 1 2698 0
 19989 0c70 D7F88C30 		ldr	r3, [r7, #140]
 19990 0c74 B3F8F031 		ldrh	r3, [r3, #496]
 19991 0c78 1A46     		mov	r2, r3
 19992 0c7a D7F88C30 		ldr	r3, [r7, #140]
 19993 0c7e B3F8F231 		ldrh	r3, [r3, #498]
 19994 0c82 07F11C00 		add	r0, r7, #28
 19995 0c86 3249     		ldr	r1, .L771+36
 19996 0c88 FFF7FEFF 		bl	sprintf
2699:..\src/command_processing.c **** 			strcat(info_string, str);
 19997              		.loc 1 2699 0
 19998 0c8c 07F11C03 		add	r3, r7, #28
 19999 0c90 1946     		mov	r1, r3
 20000 0c92 7869     		ldr	r0, [r7, #20]
 20001 0c94 FFF7FEFF 		bl	strcat
2700:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20002              		.loc 1 2700 0
 20003 0c98 7869     		ldr	r0, [r7, #20]
 20004 0c9a FFF7FEFF 		bl	strlen
 20005 0c9e 0346     		mov	r3, r0
 20006 0ca0 1A46     		mov	r2, r3
 20007 0ca2 7B69     		ldr	r3, [r7, #20]
 20008 0ca4 1344     		add	r3, r3, r2
 20009 0ca6 234A     		ldr	r2, .L771+8
 20010 0ca8 1188     		ldrh	r1, [r2]	@ unaligned
 20011 0caa 9278     		ldrb	r2, [r2, #2]
 20012 0cac 1980     		strh	r1, [r3]	@ unaligned
 20013 0cae 9A70     		strb	r2, [r3, #2]
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20014              		.loc 1 2702 0
 20015 0cb0 D7F88C30 		ldr	r3, [r7, #140]
 20016 0cb4 D3F8F421 		ldr	r2, [r3, #500]
 20017 0cb8 D7F88C30 		ldr	r3, [r7, #140]
 20018 0cbc D3F8F831 		ldr	r3, [r3, #504]
 20019 0cc0 07F11C00 		add	r0, r7, #28
 20020 0cc4 2349     		ldr	r1, .L771+40
 20021 0cc6 FFF7FEFF 		bl	sprintf
2703:..\src/command_processing.c **** 			strcat(info_string, str);
 20022              		.loc 1 2703 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 441


 20023 0cca 07F11C03 		add	r3, r7, #28
 20024 0cce 1946     		mov	r1, r3
 20025 0cd0 7869     		ldr	r0, [r7, #20]
 20026 0cd2 FFF7FEFF 		bl	strcat
2704:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20027              		.loc 1 2704 0
 20028 0cd6 7869     		ldr	r0, [r7, #20]
 20029 0cd8 FFF7FEFF 		bl	strlen
 20030 0cdc 0346     		mov	r3, r0
 20031 0cde 1A46     		mov	r2, r3
 20032 0ce0 7B69     		ldr	r3, [r7, #20]
 20033 0ce2 1344     		add	r3, r3, r2
 20034 0ce4 134A     		ldr	r2, .L771+8
 20035 0ce6 1188     		ldrh	r1, [r2]	@ unaligned
 20036 0ce8 9278     		ldrb	r2, [r2, #2]
 20037 0cea 1980     		strh	r1, [r3]	@ unaligned
 20038 0cec 9A70     		strb	r2, [r3, #2]
2705:..\src/command_processing.c **** 
2706:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20039              		.loc 1 2706 0
 20040 0cee D7F88C30 		ldr	r3, [r7, #140]
 20041 0cf2 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20042 0cf6 002B     		cmp	r3, #0
 20043 0cf8 30D0     		beq	.L746
2707:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20044              		.loc 1 2707 0
 20045 0cfa 7869     		ldr	r0, [r7, #20]
 20046 0cfc FFF7FEFF 		bl	strlen
 20047 0d00 0346     		mov	r3, r0
 20048 0d02 1A46     		mov	r2, r3
 20049 0d04 7B69     		ldr	r3, [r7, #20]
 20050 0d06 1344     		add	r3, r3, r2
 20051 0d08 134A     		ldr	r2, .L771+44
 20052 0d0a 1D46     		mov	r5, r3
 20053 0d0c 1446     		mov	r4, r2
 20054 0d0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20055 0d10 2860     		str	r0, [r5]	@ unaligned
 20056 0d12 6960     		str	r1, [r5, #4]	@ unaligned
 20057 0d14 AA60     		str	r2, [r5, #8]	@ unaligned
 20058 0d16 EB60     		str	r3, [r5, #12]	@ unaligned
 20059 0d18 03CC     		ldmia	r4!, {r0, r1}
 20060 0d1a 2861     		str	r0, [r5, #16]	@ unaligned
 20061 0d1c 6961     		str	r1, [r5, #20]	@ unaligned
 20062 0d1e 2388     		ldrh	r3, [r4]	@ unaligned
 20063 0d20 A278     		ldrb	r2, [r4, #2]
 20064 0d22 2B83     		strh	r3, [r5, #24]	@ unaligned
 20065 0d24 1346     		mov	r3, r2
 20066 0d26 AB76     		strb	r3, [r5, #26]
 20067 0d28 2CE0     		b	.L747
 20068              	.L772:
 20069 0d2a 00BF     		.align	2
 20070              	.L771:
 20071 0d2c B4160000 		.word	.LC215
 20072 0d30 80130000 		.word	.LC184
 20073 0d34 50110000 		.word	.LC152
 20074 0d38 4C1D0000 		.word	.LC277
 20075 0d3c D4160000 		.word	.LC217
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 442


 20076 0d40 5C1D0000 		.word	.LC278
 20077 0d44 981D0000 		.word	.LC279
 20078 0d48 B41D0000 		.word	.LC280
 20079 0d4c 74170000 		.word	.LC223
 20080 0d50 9C170000 		.word	.LC225
 20081 0d54 C0170000 		.word	.LC226
 20082 0d58 10180000 		.word	.LC229
 20083              	.L746:
2708:..\src/command_processing.c **** 			else
2709:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20084              		.loc 1 2709 0
 20085 0d5c 7869     		ldr	r0, [r7, #20]
 20086 0d5e FFF7FEFF 		bl	strlen
 20087 0d62 0346     		mov	r3, r0
 20088 0d64 1A46     		mov	r2, r3
 20089 0d66 7B69     		ldr	r3, [r7, #20]
 20090 0d68 1344     		add	r3, r3, r2
 20091 0d6a D04A     		ldr	r2, .L773
 20092 0d6c 1D46     		mov	r5, r3
 20093 0d6e 1446     		mov	r4, r2
 20094 0d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20095 0d72 2860     		str	r0, [r5]	@ unaligned
 20096 0d74 6960     		str	r1, [r5, #4]	@ unaligned
 20097 0d76 AA60     		str	r2, [r5, #8]	@ unaligned
 20098 0d78 EB60     		str	r3, [r5, #12]	@ unaligned
 20099 0d7a 03CC     		ldmia	r4!, {r0, r1}
 20100 0d7c 2861     		str	r0, [r5, #16]	@ unaligned
 20101 0d7e 6961     		str	r1, [r5, #20]	@ unaligned
 20102 0d80 2388     		ldrh	r3, [r4]	@ unaligned
 20103 0d82 2B83     		strh	r3, [r5, #24]	@ unaligned
 20104              	.L747:
2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20105              		.loc 1 2711 0
 20106 0d84 D7F88C30 		ldr	r3, [r7, #140]
 20107 0d88 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20108 0d8c 1A46     		mov	r2, r3
 20109 0d8e D7F88C30 		ldr	r3, [r7, #140]
 20110 0d92 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20111 0d96 07F11C00 		add	r0, r7, #28
 20112 0d9a C549     		ldr	r1, .L773+4
 20113 0d9c FFF7FEFF 		bl	sprintf
2712:..\src/command_processing.c **** 			strcat(info_string, str);
 20114              		.loc 1 2712 0
 20115 0da0 07F11C03 		add	r3, r7, #28
 20116 0da4 1946     		mov	r1, r3
 20117 0da6 7869     		ldr	r0, [r7, #20]
 20118 0da8 FFF7FEFF 		bl	strcat
2713:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20119              		.loc 1 2713 0
 20120 0dac 7869     		ldr	r0, [r7, #20]
 20121 0dae FFF7FEFF 		bl	strlen
 20122 0db2 0346     		mov	r3, r0
 20123 0db4 1A46     		mov	r2, r3
 20124 0db6 7B69     		ldr	r3, [r7, #20]
 20125 0db8 1344     		add	r3, r3, r2
 20126 0dba BE4A     		ldr	r2, .L773+8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 443


 20127 0dbc 1188     		ldrh	r1, [r2]	@ unaligned
 20128 0dbe 9278     		ldrb	r2, [r2, #2]
 20129 0dc0 1980     		strh	r1, [r3]	@ unaligned
 20130 0dc2 9A70     		strb	r2, [r3, #2]
 20131              	.L745:
 20132              	.LBE28:
2543:..\src/command_processing.c ****             
 20133              		.loc 1 2543 0 discriminator 2
 20134 0dc4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20135 0dc8 0133     		adds	r3, r3, #1
 20136 0dca 87F89330 		strb	r3, [r7, #147]
 20137              	.L704:
2543:..\src/command_processing.c ****             
 20138              		.loc 1 2543 0 is_stmt 0 discriminator 1
 20139 0dce D7F88C30 		ldr	r3, [r7, #140]
 20140 0dd2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20141 0dd6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20142 0dda 9A42     		cmp	r2, r3
 20143 0ddc 7FF699A9 		bls	.L748
 20144              	.LBE27:
2714:..\src/command_processing.c **** 		}
2715:..\src/command_processing.c **** 	}
2716:..\src/command_processing.c **** 	 
2717:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20145              		.loc 1 2717 0 is_stmt 1
 20146 0de0 D7F88C30 		ldr	r3, [r7, #140]
 20147 0de4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20148 0de8 002B     		cmp	r3, #0
 20149 0dea 63D0     		beq	.L749
2718:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20150              		.loc 1 2718 0
 20151 0dec D7F88C30 		ldr	r3, [r7, #140]
 20152 0df0 D3F8A422 		ldr	r2, [r3, #676]
 20153 0df4 07F11C03 		add	r3, r7, #28
 20154 0df8 AF49     		ldr	r1, .L773+12
 20155 0dfa 1846     		mov	r0, r3
 20156 0dfc FFF7FEFF 		bl	sprintf
2719:..\src/command_processing.c ****         strcat(info_string, str);
 20157              		.loc 1 2719 0
 20158 0e00 07F11C03 		add	r3, r7, #28
 20159 0e04 1946     		mov	r1, r3
 20160 0e06 7869     		ldr	r0, [r7, #20]
 20161 0e08 FFF7FEFF 		bl	strcat
2720:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20162              		.loc 1 2720 0
 20163 0e0c 7869     		ldr	r0, [r7, #20]
 20164 0e0e FFF7FEFF 		bl	strlen
 20165 0e12 0346     		mov	r3, r0
 20166 0e14 1A46     		mov	r2, r3
 20167 0e16 7B69     		ldr	r3, [r7, #20]
 20168 0e18 1344     		add	r3, r3, r2
 20169 0e1a A64A     		ldr	r2, .L773+8
 20170 0e1c 1188     		ldrh	r1, [r2]	@ unaligned
 20171 0e1e 9278     		ldrb	r2, [r2, #2]
 20172 0e20 1980     		strh	r1, [r3]	@ unaligned
 20173 0e22 9A70     		strb	r2, [r3, #2]
2721:..\src/command_processing.c ****         
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 444


2722:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20174              		.loc 1 2722 0
 20175 0e24 D7F88C30 		ldr	r3, [r7, #140]
 20176 0e28 D3F8A822 		ldr	r2, [r3, #680]
 20177 0e2c 07F11C03 		add	r3, r7, #28
 20178 0e30 A249     		ldr	r1, .L773+16
 20179 0e32 1846     		mov	r0, r3
 20180 0e34 FFF7FEFF 		bl	sprintf
2723:..\src/command_processing.c ****         strcat(info_string, str);
 20181              		.loc 1 2723 0
 20182 0e38 07F11C03 		add	r3, r7, #28
 20183 0e3c 1946     		mov	r1, r3
 20184 0e3e 7869     		ldr	r0, [r7, #20]
 20185 0e40 FFF7FEFF 		bl	strcat
2724:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20186              		.loc 1 2724 0
 20187 0e44 7869     		ldr	r0, [r7, #20]
 20188 0e46 FFF7FEFF 		bl	strlen
 20189 0e4a 0346     		mov	r3, r0
 20190 0e4c 1A46     		mov	r2, r3
 20191 0e4e 7B69     		ldr	r3, [r7, #20]
 20192 0e50 1344     		add	r3, r3, r2
 20193 0e52 984A     		ldr	r2, .L773+8
 20194 0e54 1188     		ldrh	r1, [r2]	@ unaligned
 20195 0e56 9278     		ldrb	r2, [r2, #2]
 20196 0e58 1980     		strh	r1, [r3]	@ unaligned
 20197 0e5a 9A70     		strb	r2, [r3, #2]
2725:..\src/command_processing.c ****         
2726:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20198              		.loc 1 2726 0
 20199 0e5c D7F88C30 		ldr	r3, [r7, #140]
 20200 0e60 D3F8A022 		ldr	r2, [r3, #672]
 20201 0e64 D7F88C30 		ldr	r3, [r7, #140]
 20202 0e68 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20203 0e6c 1846     		mov	r0, r3
 20204 0e6e D7F88C10 		ldr	r1, [r7, #140]
 20205 0e72 0346     		mov	r3, r0
 20206 0e74 5B00     		lsls	r3, r3, #1
 20207 0e76 0344     		add	r3, r3, r0
 20208 0e78 1B01     		lsls	r3, r3, #4
 20209 0e7a 0B44     		add	r3, r3, r1
 20210 0e7c 03F29513 		addw	r3, r3, #405
 20211 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20212 0e82 1A41     		asrs	r2, r2, r3
 20213 0e84 07F11C03 		add	r3, r7, #28
 20214 0e88 8D49     		ldr	r1, .L773+20
 20215 0e8a 1846     		mov	r0, r3
 20216 0e8c FFF7FEFF 		bl	sprintf
2727:..\src/command_processing.c ****         strcat(info_string, str);
 20217              		.loc 1 2727 0
 20218 0e90 07F11C03 		add	r3, r7, #28
 20219 0e94 1946     		mov	r1, r3
 20220 0e96 7869     		ldr	r0, [r7, #20]
 20221 0e98 FFF7FEFF 		bl	strcat
2728:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20222              		.loc 1 2728 0
 20223 0e9c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 445


 20224 0e9e FFF7FEFF 		bl	strlen
 20225 0ea2 0346     		mov	r3, r0
 20226 0ea4 1A46     		mov	r2, r3
 20227 0ea6 7B69     		ldr	r3, [r7, #20]
 20228 0ea8 1344     		add	r3, r3, r2
 20229 0eaa 824A     		ldr	r2, .L773+8
 20230 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 20231 0eae 9278     		ldrb	r2, [r2, #2]
 20232 0eb0 1980     		strh	r1, [r3]	@ unaligned
 20233 0eb2 9A70     		strb	r2, [r3, #2]
 20234              	.L749:
2729:..\src/command_processing.c ****     }
2730:..\src/command_processing.c **** 	
2731:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20235              		.loc 1 2731 0
 20236 0eb4 D7F88C30 		ldr	r3, [r7, #140]
 20237 0eb8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20238 0ebc 002B     		cmp	r3, #0
 20239 0ebe 00F0CB81 		beq	.L764
2732:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20240              		.loc 1 2732 0
 20241 0ec2 804B     		ldr	r3, .L773+24
 20242 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20243 0ec6 1A46     		mov	r2, r3
 20244 0ec8 07F11C03 		add	r3, r7, #28
 20245 0ecc 7E49     		ldr	r1, .L773+28
 20246 0ece 1846     		mov	r0, r3
 20247 0ed0 FFF7FEFF 		bl	sprintf
2733:..\src/command_processing.c **** 		strcat(info_string, str);
 20248              		.loc 1 2733 0
 20249 0ed4 07F11C03 		add	r3, r7, #28
 20250 0ed8 1946     		mov	r1, r3
 20251 0eda 7869     		ldr	r0, [r7, #20]
 20252 0edc FFF7FEFF 		bl	strcat
2734:..\src/command_processing.c **** 		
2735:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20253              		.loc 1 2735 0
 20254 0ee0 7869     		ldr	r0, [r7, #20]
 20255 0ee2 FFF7FEFF 		bl	strlen
 20256 0ee6 0346     		mov	r3, r0
 20257 0ee8 1A46     		mov	r2, r3
 20258 0eea 7B69     		ldr	r3, [r7, #20]
 20259 0eec 1344     		add	r3, r3, r2
 20260 0eee 714A     		ldr	r2, .L773+8
 20261 0ef0 1188     		ldrh	r1, [r2]	@ unaligned
 20262 0ef2 9278     		ldrb	r2, [r2, #2]
 20263 0ef4 1980     		strh	r1, [r3]	@ unaligned
 20264 0ef6 9A70     		strb	r2, [r3, #2]
2736:..\src/command_processing.c **** 		
2737:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20265              		.loc 1 2737 0
 20266 0ef8 7869     		ldr	r0, [r7, #20]
 20267 0efa FFF7FEFF 		bl	strlen
 20268 0efe 0346     		mov	r3, r0
 20269 0f00 1A46     		mov	r2, r3
 20270 0f02 7B69     		ldr	r3, [r7, #20]
 20271 0f04 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 446


 20272 0f06 714A     		ldr	r2, .L773+32
 20273 0f08 1D46     		mov	r5, r3
 20274 0f0a 1446     		mov	r4, r2
 20275 0f0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20276 0f0e 2860     		str	r0, [r5]	@ unaligned
 20277 0f10 6960     		str	r1, [r5, #4]	@ unaligned
 20278 0f12 AA60     		str	r2, [r5, #8]	@ unaligned
 20279 0f14 EB60     		str	r3, [r5, #12]	@ unaligned
 20280 0f16 2068     		ldr	r0, [r4]	@ unaligned
 20281 0f18 2861     		str	r0, [r5, #16]	@ unaligned
 20282 0f1a 2379     		ldrb	r3, [r4, #4]
 20283 0f1c 2B75     		strb	r3, [r5, #20]
2738:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20284              		.loc 1 2738 0
 20285 0f1e 0023     		movs	r3, #0
 20286 0f20 C7F89430 		str	r3, [r7, #148]
 20287 0f24 84E1     		b	.L751
 20288              	.L762:
2739:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20289              		.loc 1 2739 0
 20290 0f26 6A4A     		ldr	r2, .L773+36
 20291 0f28 D7F89430 		ldr	r3, [r7, #148]
 20292 0f2c 1344     		add	r3, r3, r2
 20293 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20294 0f30 07F11C00 		add	r0, r7, #28
 20295 0f34 D7F89420 		ldr	r2, [r7, #148]
 20296 0f38 6649     		ldr	r1, .L773+40
 20297 0f3a FFF7FEFF 		bl	sprintf
2740:..\src/command_processing.c **** 			strcat(info_string, str);
 20298              		.loc 1 2740 0
 20299 0f3e 07F11C03 		add	r3, r7, #28
 20300 0f42 1946     		mov	r1, r3
 20301 0f44 7869     		ldr	r0, [r7, #20]
 20302 0f46 FFF7FEFF 		bl	strcat
2741:..\src/command_processing.c **** 			
2742:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20303              		.loc 1 2742 0
 20304 0f4a 07F11C03 		add	r3, r7, #28
 20305 0f4e 624A     		ldr	r2, .L773+44
 20306 0f50 1C46     		mov	r4, r3
 20307 0f52 1546     		mov	r5, r2
 20308 0f54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20309 0f56 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20310 0f58 2B68     		ldr	r3, [r5]
 20311 0f5a 2380     		strh	r3, [r4]	@ movhi
2743:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20312              		.loc 1 2743 0
 20313 0f5c 5C4A     		ldr	r2, .L773+36
 20314 0f5e D7F89430 		ldr	r3, [r7, #148]
 20315 0f62 1344     		add	r3, r3, r2
 20316 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20317 0f66 1946     		mov	r1, r3
 20318 0f68 D7F88C20 		ldr	r2, [r7, #140]
 20319 0f6c 0B46     		mov	r3, r1
 20320 0f6e 9B00     		lsls	r3, r3, #2
 20321 0f70 0B44     		add	r3, r3, r1
 20322 0f72 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 447


 20323 0f74 03F20223 		addw	r3, r3, #514
 20324 0f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20325 0f7a 002B     		cmp	r3, #0
 20326 0f7c 0FD0     		beq	.L752
2744:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20327              		.loc 1 2744 0
 20328 0f7e 07F11C03 		add	r3, r7, #28
 20329 0f82 1846     		mov	r0, r3
 20330 0f84 FFF7FEFF 		bl	strlen
 20331 0f88 0346     		mov	r3, r0
 20332 0f8a 1A46     		mov	r2, r3
 20333 0f8c 07F11C03 		add	r3, r7, #28
 20334 0f90 1344     		add	r3, r3, r2
 20335 0f92 524A     		ldr	r2, .L773+48
 20336 0f94 1068     		ldr	r0, [r2]	@ unaligned
 20337 0f96 1860     		str	r0, [r3]	@ unaligned
 20338 0f98 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20339 0f9a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20340 0f9c 0EE0     		b	.L753
 20341              	.L752:
2745:..\src/command_processing.c **** 			else
2746:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20342              		.loc 1 2746 0
 20343 0f9e 07F11C03 		add	r3, r7, #28
 20344 0fa2 1846     		mov	r0, r3
 20345 0fa4 FFF7FEFF 		bl	strlen
 20346 0fa8 0346     		mov	r3, r0
 20347 0faa 1A46     		mov	r2, r3
 20348 0fac 07F11C03 		add	r3, r7, #28
 20349 0fb0 1344     		add	r3, r3, r2
 20350 0fb2 4B4A     		ldr	r2, .L773+52
 20351 0fb4 1068     		ldr	r0, [r2]	@ unaligned
 20352 0fb6 1860     		str	r0, [r3]	@ unaligned
 20353 0fb8 1279     		ldrb	r2, [r2, #4]
 20354 0fba 1A71     		strb	r2, [r3, #4]
 20355              	.L753:
2747:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20356              		.loc 1 2747 0
 20357 0fbc 07F11C03 		add	r3, r7, #28
 20358 0fc0 1846     		mov	r0, r3
 20359 0fc2 FFF7FEFF 		bl	strlen
 20360 0fc6 0346     		mov	r3, r0
 20361 0fc8 1A46     		mov	r2, r3
 20362 0fca 07F11C03 		add	r3, r7, #28
 20363 0fce 1344     		add	r3, r3, r2
 20364 0fd0 444A     		ldr	r2, .L773+56
 20365 0fd2 1C46     		mov	r4, r3
 20366 0fd4 1346     		mov	r3, r2
 20367 0fd6 07CB     		ldmia	r3!, {r0, r1, r2}
 20368 0fd8 2060     		str	r0, [r4]	@ unaligned
 20369 0fda 6160     		str	r1, [r4, #4]	@ unaligned
 20370 0fdc A260     		str	r2, [r4, #8]	@ unaligned
 20371 0fde 1B88     		ldrh	r3, [r3]	@ unaligned
 20372 0fe0 A381     		strh	r3, [r4, #12]	@ unaligned
2748:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20373              		.loc 1 2748 0
 20374 0fe2 3B4A     		ldr	r2, .L773+36
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 448


 20375 0fe4 D7F89430 		ldr	r3, [r7, #148]
 20376 0fe8 1344     		add	r3, r3, r2
 20377 0fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20378 0fec 1946     		mov	r1, r3
 20379 0fee D7F88C20 		ldr	r2, [r7, #140]
 20380 0ff2 0B46     		mov	r3, r1
 20381 0ff4 9B00     		lsls	r3, r3, #2
 20382 0ff6 0B44     		add	r3, r3, r1
 20383 0ff8 1344     		add	r3, r3, r2
 20384 0ffa 03F20323 		addw	r3, r3, #515
 20385 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20386 1000 002B     		cmp	r3, #0
 20387 1002 0FD0     		beq	.L754
2749:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20388              		.loc 1 2749 0
 20389 1004 07F11C03 		add	r3, r7, #28
 20390 1008 1846     		mov	r0, r3
 20391 100a FFF7FEFF 		bl	strlen
 20392 100e 0346     		mov	r3, r0
 20393 1010 1A46     		mov	r2, r3
 20394 1012 07F11C03 		add	r3, r7, #28
 20395 1016 1344     		add	r3, r3, r2
 20396 1018 304A     		ldr	r2, .L773+48
 20397 101a 1068     		ldr	r0, [r2]	@ unaligned
 20398 101c 1860     		str	r0, [r3]	@ unaligned
 20399 101e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20400 1020 9A80     		strh	r2, [r3, #4]	@ unaligned
 20401 1022 0EE0     		b	.L755
 20402              	.L754:
2750:..\src/command_processing.c **** 			else
2751:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20403              		.loc 1 2751 0
 20404 1024 07F11C03 		add	r3, r7, #28
 20405 1028 1846     		mov	r0, r3
 20406 102a FFF7FEFF 		bl	strlen
 20407 102e 0346     		mov	r3, r0
 20408 1030 1A46     		mov	r2, r3
 20409 1032 07F11C03 		add	r3, r7, #28
 20410 1036 1344     		add	r3, r3, r2
 20411 1038 294A     		ldr	r2, .L773+52
 20412 103a 1068     		ldr	r0, [r2]	@ unaligned
 20413 103c 1860     		str	r0, [r3]	@ unaligned
 20414 103e 1279     		ldrb	r2, [r2, #4]
 20415 1040 1A71     		strb	r2, [r3, #4]
 20416              	.L755:
2752:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20417              		.loc 1 2752 0
 20418 1042 07F11C03 		add	r3, r7, #28
 20419 1046 1846     		mov	r0, r3
 20420 1048 FFF7FEFF 		bl	strlen
 20421 104c 0346     		mov	r3, r0
 20422 104e 1A46     		mov	r2, r3
 20423 1050 07F11C03 		add	r3, r7, #28
 20424 1054 1344     		add	r3, r3, r2
 20425 1056 244A     		ldr	r2, .L773+60
 20426 1058 1D46     		mov	r5, r3
 20427 105a 1446     		mov	r4, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 449


 20428 105c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20429 105e 2860     		str	r0, [r5]	@ unaligned
 20430 1060 6960     		str	r1, [r5, #4]	@ unaligned
 20431 1062 AA60     		str	r2, [r5, #8]	@ unaligned
 20432 1064 EB60     		str	r3, [r5, #12]	@ unaligned
 20433 1066 2378     		ldrb	r3, [r4]
 20434 1068 2B74     		strb	r3, [r5, #16]
2753:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20435              		.loc 1 2753 0
 20436 106a 194A     		ldr	r2, .L773+36
 20437 106c D7F89430 		ldr	r3, [r7, #148]
 20438 1070 1344     		add	r3, r3, r2
 20439 1072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20440 1074 1946     		mov	r1, r3
 20441 1076 D7F88C20 		ldr	r2, [r7, #140]
 20442 107a 0B46     		mov	r3, r1
 20443 107c 9B00     		lsls	r3, r3, #2
 20444 107e 0B44     		add	r3, r3, r1
 20445 1080 1344     		add	r3, r3, r2
 20446 1082 03F50173 		add	r3, r3, #516
 20447 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20448 1088 002B     		cmp	r3, #0
 20449 108a 2FD0     		beq	.L756
2754:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20450              		.loc 1 2754 0
 20451 108c 07F11C03 		add	r3, r7, #28
 20452 1090 1846     		mov	r0, r3
 20453 1092 FFF7FEFF 		bl	strlen
 20454 1096 0346     		mov	r3, r0
 20455 1098 1A46     		mov	r2, r3
 20456 109a 07F11C03 		add	r3, r7, #28
 20457 109e 1344     		add	r3, r3, r2
 20458 10a0 0E4A     		ldr	r2, .L773+48
 20459 10a2 1068     		ldr	r0, [r2]	@ unaligned
 20460 10a4 1860     		str	r0, [r3]	@ unaligned
 20461 10a6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20462 10a8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20463 10aa 2EE0     		b	.L757
 20464              	.L774:
 20465              		.align	2
 20466              	.L773:
 20467 10ac 2C180000 		.word	.LC230
 20468 10b0 48180000 		.word	.LC231
 20469 10b4 50110000 		.word	.LC152
 20470 10b8 A4180000 		.word	.LC235
 20471 10bc C0180000 		.word	.LC236
 20472 10c0 E8180000 		.word	.LC237
 20473 10c4 00000000 		.word	N_IMU_Connected
 20474 10c8 FC180000 		.word	.LC238
 20475 10cc 10190000 		.word	.LC239
 20476 10d0 00000000 		.word	IMU_connected
 20477 10d4 28190000 		.word	.LC240
 20478 10d8 3C190000 		.word	.LC241
 20479 10dc 0C130000 		.word	.LC175
 20480 10e0 14130000 		.word	.LC176
 20481 10e4 50190000 		.word	.LC242
 20482 10e8 60190000 		.word	.LC243
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 450


 20483              	.L756:
2755:..\src/command_processing.c **** 			else
2756:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20484              		.loc 1 2756 0
 20485 10ec 07F11C03 		add	r3, r7, #28
 20486 10f0 1846     		mov	r0, r3
 20487 10f2 FFF7FEFF 		bl	strlen
 20488 10f6 0346     		mov	r3, r0
 20489 10f8 1A46     		mov	r2, r3
 20490 10fa 07F11C03 		add	r3, r7, #28
 20491 10fe 1344     		add	r3, r3, r2
 20492 1100 584A     		ldr	r2, .L775
 20493 1102 1068     		ldr	r0, [r2]	@ unaligned
 20494 1104 1860     		str	r0, [r3]	@ unaligned
 20495 1106 1279     		ldrb	r2, [r2, #4]
 20496 1108 1A71     		strb	r2, [r3, #4]
 20497              	.L757:
2757:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20498              		.loc 1 2757 0
 20499 110a 07F11C03 		add	r3, r7, #28
 20500 110e 1846     		mov	r0, r3
 20501 1110 FFF7FEFF 		bl	strlen
 20502 1114 0346     		mov	r3, r0
 20503 1116 1A46     		mov	r2, r3
 20504 1118 07F11C03 		add	r3, r7, #28
 20505 111c 1344     		add	r3, r3, r2
 20506 111e 524A     		ldr	r2, .L775+4
 20507 1120 1C46     		mov	r4, r3
 20508 1122 1346     		mov	r3, r2
 20509 1124 07CB     		ldmia	r3!, {r0, r1, r2}
 20510 1126 2060     		str	r0, [r4]	@ unaligned
 20511 1128 6160     		str	r1, [r4, #4]	@ unaligned
 20512 112a A260     		str	r2, [r4, #8]	@ unaligned
 20513 112c 1B88     		ldrh	r3, [r3]	@ unaligned
 20514 112e A381     		strh	r3, [r4, #12]	@ unaligned
2758:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20515              		.loc 1 2758 0
 20516 1130 4E4A     		ldr	r2, .L775+8
 20517 1132 D7F89430 		ldr	r3, [r7, #148]
 20518 1136 1344     		add	r3, r3, r2
 20519 1138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20520 113a 1946     		mov	r1, r3
 20521 113c D7F88C20 		ldr	r2, [r7, #140]
 20522 1140 0B46     		mov	r3, r1
 20523 1142 9B00     		lsls	r3, r3, #2
 20524 1144 0B44     		add	r3, r3, r1
 20525 1146 1344     		add	r3, r3, r2
 20526 1148 03F20523 		addw	r3, r3, #517
 20527 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20528 114e 002B     		cmp	r3, #0
 20529 1150 0FD0     		beq	.L758
2759:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20530              		.loc 1 2759 0
 20531 1152 07F11C03 		add	r3, r7, #28
 20532 1156 1846     		mov	r0, r3
 20533 1158 FFF7FEFF 		bl	strlen
 20534 115c 0346     		mov	r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 451


 20535 115e 1A46     		mov	r2, r3
 20536 1160 07F11C03 		add	r3, r7, #28
 20537 1164 1344     		add	r3, r3, r2
 20538 1166 424A     		ldr	r2, .L775+12
 20539 1168 1068     		ldr	r0, [r2]	@ unaligned
 20540 116a 1860     		str	r0, [r3]	@ unaligned
 20541 116c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20542 116e 9A80     		strh	r2, [r3, #4]	@ unaligned
 20543 1170 0EE0     		b	.L759
 20544              	.L758:
2760:..\src/command_processing.c **** 			else
2761:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20545              		.loc 1 2761 0
 20546 1172 07F11C03 		add	r3, r7, #28
 20547 1176 1846     		mov	r0, r3
 20548 1178 FFF7FEFF 		bl	strlen
 20549 117c 0346     		mov	r3, r0
 20550 117e 1A46     		mov	r2, r3
 20551 1180 07F11C03 		add	r3, r7, #28
 20552 1184 1344     		add	r3, r3, r2
 20553 1186 374A     		ldr	r2, .L775
 20554 1188 1068     		ldr	r0, [r2]	@ unaligned
 20555 118a 1860     		str	r0, [r3]	@ unaligned
 20556 118c 1279     		ldrb	r2, [r2, #4]
 20557 118e 1A71     		strb	r2, [r3, #4]
 20558              	.L759:
2762:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20559              		.loc 1 2762 0
 20560 1190 07F11C03 		add	r3, r7, #28
 20561 1194 1846     		mov	r0, r3
 20562 1196 FFF7FEFF 		bl	strlen
 20563 119a 0346     		mov	r3, r0
 20564 119c 1A46     		mov	r2, r3
 20565 119e 07F11C03 		add	r3, r7, #28
 20566 11a2 1344     		add	r3, r3, r2
 20567 11a4 334A     		ldr	r2, .L775+16
 20568 11a6 1C46     		mov	r4, r3
 20569 11a8 1346     		mov	r3, r2
 20570 11aa 07CB     		ldmia	r3!, {r0, r1, r2}
 20571 11ac 2060     		str	r0, [r4]	@ unaligned
 20572 11ae 6160     		str	r1, [r4, #4]	@ unaligned
 20573 11b0 A260     		str	r2, [r4, #8]	@ unaligned
 20574 11b2 1A88     		ldrh	r2, [r3]	@ unaligned
 20575 11b4 9B78     		ldrb	r3, [r3, #2]
 20576 11b6 A281     		strh	r2, [r4, #12]	@ unaligned
 20577 11b8 A373     		strb	r3, [r4, #14]
2763:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20578              		.loc 1 2763 0
 20579 11ba 2C4A     		ldr	r2, .L775+8
 20580 11bc D7F89430 		ldr	r3, [r7, #148]
 20581 11c0 1344     		add	r3, r3, r2
 20582 11c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20583 11c4 1946     		mov	r1, r3
 20584 11c6 D7F88C20 		ldr	r2, [r7, #140]
 20585 11ca 0B46     		mov	r3, r1
 20586 11cc 9B00     		lsls	r3, r3, #2
 20587 11ce 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 452


 20588 11d0 1344     		add	r3, r3, r2
 20589 11d2 03F20623 		addw	r3, r3, #518
 20590 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20591 11d8 002B     		cmp	r3, #0
 20592 11da 0FD0     		beq	.L760
2764:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20593              		.loc 1 2764 0
 20594 11dc 07F11C03 		add	r3, r7, #28
 20595 11e0 1846     		mov	r0, r3
 20596 11e2 FFF7FEFF 		bl	strlen
 20597 11e6 0346     		mov	r3, r0
 20598 11e8 1A46     		mov	r2, r3
 20599 11ea 07F11C03 		add	r3, r7, #28
 20600 11ee 1344     		add	r3, r3, r2
 20601 11f0 1F4A     		ldr	r2, .L775+12
 20602 11f2 1068     		ldr	r0, [r2]	@ unaligned
 20603 11f4 1860     		str	r0, [r3]	@ unaligned
 20604 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20605 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 20606 11fa 0EE0     		b	.L761
 20607              	.L760:
2765:..\src/command_processing.c **** 			else
2766:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20608              		.loc 1 2766 0
 20609 11fc 07F11C03 		add	r3, r7, #28
 20610 1200 1846     		mov	r0, r3
 20611 1202 FFF7FEFF 		bl	strlen
 20612 1206 0346     		mov	r3, r0
 20613 1208 1A46     		mov	r2, r3
 20614 120a 07F11C03 		add	r3, r7, #28
 20615 120e 1344     		add	r3, r3, r2
 20616 1210 144A     		ldr	r2, .L775
 20617 1212 1068     		ldr	r0, [r2]	@ unaligned
 20618 1214 1860     		str	r0, [r3]	@ unaligned
 20619 1216 1279     		ldrb	r2, [r2, #4]
 20620 1218 1A71     		strb	r2, [r3, #4]
 20621              	.L761:
2767:..\src/command_processing.c **** 				 
2768:..\src/command_processing.c **** 			strcat(info_string, str);
 20622              		.loc 1 2768 0 discriminator 2
 20623 121a 07F11C03 		add	r3, r7, #28
 20624 121e 1946     		mov	r1, r3
 20625 1220 7869     		ldr	r0, [r7, #20]
 20626 1222 FFF7FEFF 		bl	strcat
2738:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20627              		.loc 1 2738 0 discriminator 2
 20628 1226 D7F89430 		ldr	r3, [r7, #148]
 20629 122a 0133     		adds	r3, r3, #1
 20630 122c C7F89430 		str	r3, [r7, #148]
 20631              	.L751:
2738:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20632              		.loc 1 2738 0 is_stmt 0 discriminator 1
 20633 1230 114B     		ldr	r3, .L775+20
 20634 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20635 1234 1A46     		mov	r2, r3
 20636 1236 D7F89430 		ldr	r3, [r7, #148]
 20637 123a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 453


 20638 123c 3FF773AE 		bgt	.L762
2769:..\src/command_processing.c **** 		}       
2770:..\src/command_processing.c **** 		
2771:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20639              		.loc 1 2771 0 is_stmt 1
 20640 1240 7869     		ldr	r0, [r7, #20]
 20641 1242 FFF7FEFF 		bl	strlen
 20642 1246 0346     		mov	r3, r0
 20643 1248 1A46     		mov	r2, r3
 20644 124a 7B69     		ldr	r3, [r7, #20]
 20645 124c 1344     		add	r3, r3, r2
 20646 124e 0B4A     		ldr	r2, .L775+24
 20647 1250 1188     		ldrh	r1, [r2]	@ unaligned
 20648 1252 9278     		ldrb	r2, [r2, #2]
 20649 1254 1980     		strh	r1, [r3]	@ unaligned
 20650 1256 9A70     		strb	r2, [r3, #2]
 20651              	.L764:
2772:..\src/command_processing.c **** 	}
2773:..\src/command_processing.c **** }
 20652              		.loc 1 2773 0
 20653 1258 00BF     		nop
 20654 125a 9C37     		adds	r7, r7, #156
 20655              		.cfi_def_cfa_offset 36
 20656 125c BD46     		mov	sp, r7
 20657              		.cfi_def_cfa_register 13
 20658              		@ sp needed
 20659 125e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20660              	.L776:
 20661 1262 00BF     		.align	2
 20662              	.L775:
 20663 1264 14130000 		.word	.LC176
 20664 1268 74190000 		.word	.LC244
 20665 126c 00000000 		.word	IMU_connected
 20666 1270 0C130000 		.word	.LC175
 20667 1274 84190000 		.word	.LC245
 20668 1278 00000000 		.word	N_IMU_Connected
 20669 127c 50110000 		.word	.LC152
 20670              		.cfi_endproc
 20671              	.LFE75:
 20672              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20673              		.section	.rodata
 20674 1dde 0000     		.align	2
 20675              	.LC281:
 20676 1de0 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20676      2C4D696E 
 20676      2C536563 
 20676      2C00
 20677 1dee 0000     		.align	2
 20678              	.LC282:
 20679 1df0 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20679      25645F50 
 20679      6F732C00 
 20680              		.align	2
 20681              	.LC283:
 20682 1dfc 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20682      25645F43 
 20682      7572722C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 454


 20682      00
 20683 1e09 000000   		.align	2
 20684              	.LC284:
 20685 1e0c 52657374 		.ascii	"Rest_times,Wire_disp,Total_rest_time,Power_cycles,E"
 20685      5F74696D 
 20685      65732C57 
 20685      6972655F 
 20685      64697370 
 20686 1e3f 4D475F31 		.ascii	"MG_1_act,EMG_2_act,EMG_1_excess,EMG_2_excess,Motion"
 20686      5F616374 
 20686      2C454D47 
 20686      5F325F61 
 20686      63742C45 
 20687 1e72 5F312C4D 		.ascii	"_1,Motion_2,Total_runtime\000"
 20687      6F74696F 
 20687      6E5F322C 
 20687      546F7461 
 20687      6C5F7275 
 20688              		.section	.text.prepare_SD_legend,"ax",%progbits
 20689              		.align	2
 20690              		.global	prepare_SD_legend
 20691              		.thumb
 20692              		.thumb_func
 20693              		.type	prepare_SD_legend, %function
 20694              	prepare_SD_legend:
 20695              	.LFB76:
2774:..\src/command_processing.c **** 
2775:..\src/command_processing.c **** 
2776:..\src/command_processing.c **** //==============================================================================
2777:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2778:..\src/command_processing.c **** //==============================================================================
2779:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2780:..\src/command_processing.c **** {
 20696              		.loc 1 2780 0
 20697              		.cfi_startproc
 20698              		@ args = 0, pretend = 0, frame = 152
 20699              		@ frame_needed = 1, uses_anonymous_args = 0
 20700 0000 90B5     		push	{r4, r7, lr}
 20701              		.cfi_def_cfa_offset 12
 20702              		.cfi_offset 4, -12
 20703              		.cfi_offset 7, -8
 20704              		.cfi_offset 14, -4
 20705 0002 A7B0     		sub	sp, sp, #156
 20706              		.cfi_def_cfa_offset 168
 20707 0004 00AF     		add	r7, sp, #0
 20708              		.cfi_def_cfa_register 7
 20709 0006 7860     		str	r0, [r7, #4]
2781:..\src/command_processing.c ****     char str[140];  
2782:..\src/command_processing.c ****     int i;
2783:..\src/command_processing.c ****         
2784:..\src/command_processing.c ****     // Legend
2785:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20710              		.loc 1 2785 0
 20711 0008 7B68     		ldr	r3, [r7, #4]
 20712 000a 2F4A     		ldr	r2, .L782
 20713 000c 1C46     		mov	r4, r3
 20714 000e 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 455


 20715 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20716 0012 2060     		str	r0, [r4]	@ unaligned
 20717 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20718 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20719 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20720 001a A381     		strh	r3, [r4, #12]	@ unaligned
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20721              		.loc 1 2786 0
 20722 001c 0123     		movs	r3, #1
 20723 001e C7F89430 		str	r3, [r7, #148]
 20724 0022 12E0     		b	.L778
 20725              	.L779:
2787:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20726              		.loc 1 2787 0 discriminator 3
 20727 0024 07F10803 		add	r3, r7, #8
 20728 0028 D7F89420 		ldr	r2, [r7, #148]
 20729 002c 2749     		ldr	r1, .L782+4
 20730 002e 1846     		mov	r0, r3
 20731 0030 FFF7FEFF 		bl	sprintf
2788:..\src/command_processing.c ****         strcat(info_string, str);
 20732              		.loc 1 2788 0 discriminator 3
 20733 0034 07F10803 		add	r3, r7, #8
 20734 0038 1946     		mov	r1, r3
 20735 003a 7868     		ldr	r0, [r7, #4]
 20736 003c FFF7FEFF 		bl	strcat
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20737              		.loc 1 2786 0 discriminator 3
 20738 0040 D7F89430 		ldr	r3, [r7, #148]
 20739 0044 0133     		adds	r3, r3, #1
 20740 0046 C7F89430 		str	r3, [r7, #148]
 20741              	.L778:
2786:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20742              		.loc 1 2786 0 is_stmt 0 discriminator 1
 20743 004a D7F89430 		ldr	r3, [r7, #148]
 20744 004e 0A2B     		cmp	r3, #10
 20745 0050 E8DD     		ble	.L779
2789:..\src/command_processing.c ****     }
2790:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20746              		.loc 1 2790 0 is_stmt 1
 20747 0052 0123     		movs	r3, #1
 20748 0054 C7F89430 		str	r3, [r7, #148]
 20749 0058 12E0     		b	.L780
 20750              	.L781:
2791:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20751              		.loc 1 2791 0 discriminator 3
 20752 005a 07F10803 		add	r3, r7, #8
 20753 005e D7F89420 		ldr	r2, [r7, #148]
 20754 0062 1B49     		ldr	r1, .L782+8
 20755 0064 1846     		mov	r0, r3
 20756 0066 FFF7FEFF 		bl	sprintf
2792:..\src/command_processing.c ****         strcat(info_string, str);
 20757              		.loc 1 2792 0 discriminator 3
 20758 006a 07F10803 		add	r3, r7, #8
 20759 006e 1946     		mov	r1, r3
 20760 0070 7868     		ldr	r0, [r7, #4]
 20761 0072 FFF7FEFF 		bl	strcat
2790:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 456


 20762              		.loc 1 2790 0 discriminator 3
 20763 0076 D7F89430 		ldr	r3, [r7, #148]
 20764 007a 0133     		adds	r3, r3, #1
 20765 007c C7F89430 		str	r3, [r7, #148]
 20766              	.L780:
2790:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20767              		.loc 1 2790 0 is_stmt 0 discriminator 1
 20768 0080 D7F89430 		ldr	r3, [r7, #148]
 20769 0084 042B     		cmp	r3, #4
 20770 0086 E8DD     		ble	.L781
2793:..\src/command_processing.c ****     }
2794:..\src/command_processing.c ****     sprintf(str, "Rest_times,Wire_disp,Total_rest_time,Power_cycles,EMG_1_act,EMG_2_act,EMG_1_exces
 20771              		.loc 1 2794 0 is_stmt 1
 20772 0088 07F10803 		add	r3, r7, #8
 20773 008c 114A     		ldr	r2, .L782+12
 20774 008e 1846     		mov	r0, r3
 20775 0090 1146     		mov	r1, r2
 20776 0092 8023     		movs	r3, #128
 20777 0094 1A46     		mov	r2, r3
 20778 0096 FFF7FEFF 		bl	memcpy
2795:..\src/command_processing.c ****     strcat(info_string, str);
 20779              		.loc 1 2795 0
 20780 009a 07F10803 		add	r3, r7, #8
 20781 009e 1946     		mov	r1, r3
 20782 00a0 7868     		ldr	r0, [r7, #4]
 20783 00a2 FFF7FEFF 		bl	strcat
2796:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20784              		.loc 1 2796 0
 20785 00a6 7868     		ldr	r0, [r7, #4]
 20786 00a8 FFF7FEFF 		bl	strlen
 20787 00ac 0346     		mov	r3, r0
 20788 00ae 1A46     		mov	r2, r3
 20789 00b0 7B68     		ldr	r3, [r7, #4]
 20790 00b2 1344     		add	r3, r3, r2
 20791 00b4 084A     		ldr	r2, .L782+16
 20792 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 20793 00b8 9278     		ldrb	r2, [r2, #2]
 20794 00ba 1980     		strh	r1, [r3]	@ unaligned
 20795 00bc 9A70     		strb	r2, [r3, #2]
2797:..\src/command_processing.c **** }
 20796              		.loc 1 2797 0
 20797 00be 00BF     		nop
 20798 00c0 9C37     		adds	r7, r7, #156
 20799              		.cfi_def_cfa_offset 12
 20800 00c2 BD46     		mov	sp, r7
 20801              		.cfi_def_cfa_register 13
 20802              		@ sp needed
 20803 00c4 90BD     		pop	{r4, r7, pc}
 20804              	.L783:
 20805 00c6 00BF     		.align	2
 20806              	.L782:
 20807 00c8 E01D0000 		.word	.LC281
 20808 00cc F01D0000 		.word	.LC282
 20809 00d0 FC1D0000 		.word	.LC283
 20810 00d4 0C1E0000 		.word	.LC284
 20811 00d8 50110000 		.word	.LC152
 20812              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 457


 20813              	.LFE76:
 20814              		.size	prepare_SD_legend, .-prepare_SD_legend
 20815              		.section	.rodata
 20816              		.align	2
 20817              	.LC285:
 20818 1e8c 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20818      2C253032 
 20818      642C2530 
 20818      32642C00 
 20819              		.align	2
 20820              	.LC286:
 20821 1e9c 256C752C 		.ascii	"%lu,\000"
 20821      00
 20822 1ea1 000000   		.align	2
 20823              	.LC287:
 20824 1ea4 256C752C 		.ascii	"%lu,%lu,%lu,%lu,\000"
 20824      256C752C 
 20824      256C752C 
 20824      256C752C 
 20824      00
 20825 1eb5 000000   		.align	2
 20826              	.LC288:
 20827 1eb8 256C752C 		.ascii	"%lu,%lu,%lu,%lu,%lu,%lu,\000"
 20827      256C752C 
 20827      256C752C 
 20827      256C752C 
 20827      256C752C 
 20828 1ed1 000000   		.align	2
 20829              	.LC289:
 20830 1ed4 256C7500 		.ascii	"%lu\000"
 20831              		.section	.text.prepare_SD_info,"ax",%progbits
 20832              		.align	2
 20833              		.global	prepare_SD_info
 20834              		.thumb
 20835              		.thumb_func
 20836              		.type	prepare_SD_info, %function
 20837              	prepare_SD_info:
 20838              	.LFB77:
2798:..\src/command_processing.c **** 
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c **** //==============================================================================
2801:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2802:..\src/command_processing.c **** //==============================================================================
2803:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2804:..\src/command_processing.c **** {
 20839              		.loc 1 2804 0
 20840              		.cfi_startproc
 20841              		@ args = 0, pretend = 0, frame = 136
 20842              		@ frame_needed = 1, uses_anonymous_args = 0
 20843 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 20844              		.cfi_def_cfa_offset 20
 20845              		.cfi_offset 4, -20
 20846              		.cfi_offset 5, -16
 20847              		.cfi_offset 6, -12
 20848              		.cfi_offset 7, -8
 20849              		.cfi_offset 14, -4
 20850 0002 A7B0     		sub	sp, sp, #156
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 458


 20851              		.cfi_def_cfa_offset 176
 20852 0004 04AF     		add	r7, sp, #16
 20853              		.cfi_def_cfa 7, 160
 20854 0006 7860     		str	r0, [r7, #4]
2805:..\src/command_processing.c ****     char str[120];  
2806:..\src/command_processing.c ****     int i;
2807:..\src/command_processing.c ****             
2808:..\src/command_processing.c ****     strcpy(info_string, "");
 20855              		.loc 1 2808 0
 20856 0008 7B68     		ldr	r3, [r7, #4]
 20857 000a 0022     		movs	r2, #0
 20858 000c 1A70     		strb	r2, [r3]
2809:..\src/command_processing.c ****     
2810:..\src/command_processing.c ****     // Time
2811:..\src/command_processing.c ****     strcat(info_string, "");
2812:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20859              		.loc 1 2812 0
 20860 000e 554B     		ldr	r3, .L789
 20861 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20862 0014 1A46     		mov	r2, r3
 20863 0016 534B     		ldr	r3, .L789
 20864 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20865 001c 1946     		mov	r1, r3
 20866 001e 514B     		ldr	r3, .L789
 20867 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20868 0024 07F10C00 		add	r0, r7, #12
 20869 0028 0093     		str	r3, [sp]
 20870 002a 0B46     		mov	r3, r1
 20871 002c 4E49     		ldr	r1, .L789+4
 20872 002e FFF7FEFF 		bl	sprintf
2813:..\src/command_processing.c ****     strcat(info_string, str);
 20873              		.loc 1 2813 0
 20874 0032 07F10C03 		add	r3, r7, #12
 20875 0036 1946     		mov	r1, r3
 20876 0038 7868     		ldr	r0, [r7, #4]
 20877 003a FFF7FEFF 		bl	strcat
2814:..\src/command_processing.c **** 
2815:..\src/command_processing.c ****     // Pos_Bin
2816:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20878              		.loc 1 2816 0
 20879 003e 0123     		movs	r3, #1
 20880 0040 C7F88430 		str	r3, [r7, #132]
 20881 0044 17E0     		b	.L785
 20882              	.L786:
2817:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20883              		.loc 1 2817 0 discriminator 3
 20884 0046 D7F88430 		ldr	r3, [r7, #132]
 20885 004a 013B     		subs	r3, r3, #1
 20886 004c 454A     		ldr	r2, .L789
 20887 004e 0633     		adds	r3, r3, #6
 20888 0050 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20889 0054 07F10C03 		add	r3, r7, #12
 20890 0058 4449     		ldr	r1, .L789+8
 20891 005a 1846     		mov	r0, r3
 20892 005c FFF7FEFF 		bl	sprintf
2818:..\src/command_processing.c ****         strcat(info_string, str);
 20893              		.loc 1 2818 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 459


 20894 0060 07F10C03 		add	r3, r7, #12
 20895 0064 1946     		mov	r1, r3
 20896 0066 7868     		ldr	r0, [r7, #4]
 20897 0068 FFF7FEFF 		bl	strcat
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20898              		.loc 1 2816 0 discriminator 3
 20899 006c D7F88430 		ldr	r3, [r7, #132]
 20900 0070 0133     		adds	r3, r3, #1
 20901 0072 C7F88430 		str	r3, [r7, #132]
 20902              	.L785:
2816:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20903              		.loc 1 2816 0 is_stmt 0 discriminator 1
 20904 0076 D7F88430 		ldr	r3, [r7, #132]
 20905 007a 0A2B     		cmp	r3, #10
 20906 007c E3DD     		ble	.L786
2819:..\src/command_processing.c ****     }
2820:..\src/command_processing.c ****     
2821:..\src/command_processing.c ****     // Curr_Bin
2822:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20907              		.loc 1 2822 0 is_stmt 1
 20908 007e 0123     		movs	r3, #1
 20909 0080 C7F88430 		str	r3, [r7, #132]
 20910 0084 17E0     		b	.L787
 20911              	.L788:
2823:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20912              		.loc 1 2823 0 discriminator 3
 20913 0086 D7F88430 		ldr	r3, [r7, #132]
 20914 008a 013B     		subs	r3, r3, #1
 20915 008c 354A     		ldr	r2, .L789
 20916 008e 1033     		adds	r3, r3, #16
 20917 0090 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20918 0094 07F10C03 		add	r3, r7, #12
 20919 0098 3449     		ldr	r1, .L789+8
 20920 009a 1846     		mov	r0, r3
 20921 009c FFF7FEFF 		bl	sprintf
2824:..\src/command_processing.c ****         strcat(info_string, str);
 20922              		.loc 1 2824 0 discriminator 3
 20923 00a0 07F10C03 		add	r3, r7, #12
 20924 00a4 1946     		mov	r1, r3
 20925 00a6 7868     		ldr	r0, [r7, #4]
 20926 00a8 FFF7FEFF 		bl	strcat
2822:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20927              		.loc 1 2822 0 discriminator 3
 20928 00ac D7F88430 		ldr	r3, [r7, #132]
 20929 00b0 0133     		adds	r3, r3, #1
 20930 00b2 C7F88430 		str	r3, [r7, #132]
 20931              	.L787:
2822:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20932              		.loc 1 2822 0 is_stmt 0 discriminator 1
 20933 00b6 D7F88430 		ldr	r3, [r7, #132]
 20934 00ba 042B     		cmp	r3, #4
 20935 00bc E3DD     		ble	.L788
2825:..\src/command_processing.c ****     }
2826:..\src/command_processing.c **** 
2827:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_time_rest, Power_cycles
2828:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_t
 20936              		.loc 1 2828 0 is_stmt 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 460


 20937 00be 294B     		ldr	r3, .L789
 20938 00c0 196D     		ldr	r1, [r3, #80]
 20939 00c2 284B     		ldr	r3, .L789
 20940 00c4 5C6D     		ldr	r4, [r3, #84]
 20941 00c6 274B     		ldr	r3, .L789
 20942 00c8 DB6D     		ldr	r3, [r3, #92]
 20943 00ca 264A     		ldr	r2, .L789
 20944 00cc 126E     		ldr	r2, [r2, #96]
 20945 00ce 07F10C00 		add	r0, r7, #12
 20946 00d2 0192     		str	r2, [sp, #4]
 20947 00d4 0093     		str	r3, [sp]
 20948 00d6 2346     		mov	r3, r4
 20949 00d8 0A46     		mov	r2, r1
 20950 00da 2549     		ldr	r1, .L789+12
 20951 00dc FFF7FEFF 		bl	sprintf
2829:..\src/command_processing.c ****     strcat(info_string, str);
 20952              		.loc 1 2829 0
 20953 00e0 07F10C03 		add	r3, r7, #12
 20954 00e4 1946     		mov	r1, r3
 20955 00e6 7868     		ldr	r0, [r7, #4]
 20956 00e8 FFF7FEFF 		bl	strcat
2830:..\src/command_processing.c ****     
2831:..\src/command_processing.c ****     // EMG_1_act, EMG_2_act, EMG_1_excess, EMG_2_excess, Motion_1, Motion_2
2832:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu,%lu,%lu,", g_mem.cnt.emg_act_counter[0], g_mem.cnt.emg_act_counte
 20957              		.loc 1 2832 0
 20958 00ec 1D4B     		ldr	r3, .L789
 20959 00ee 1D69     		ldr	r5, [r3, #16]
 20960 00f0 1C4B     		ldr	r3, .L789
 20961 00f2 5E69     		ldr	r6, [r3, #20]
 20962 00f4 1B4B     		ldr	r3, .L789
 20963 00f6 5B6E     		ldr	r3, [r3, #100]
 20964 00f8 1A4A     		ldr	r2, .L789
 20965 00fa 926E     		ldr	r2, [r2, #104]
 20966 00fc 1949     		ldr	r1, .L789
 20967 00fe C96E     		ldr	r1, [r1, #108]
 20968 0100 1848     		ldr	r0, .L789
 20969 0102 006F     		ldr	r0, [r0, #112]
 20970 0104 07F10C04 		add	r4, r7, #12
 20971 0108 0390     		str	r0, [sp, #12]
 20972 010a 0291     		str	r1, [sp, #8]
 20973 010c 0192     		str	r2, [sp, #4]
 20974 010e 0093     		str	r3, [sp]
 20975 0110 3346     		mov	r3, r6
 20976 0112 2A46     		mov	r2, r5
 20977 0114 1749     		ldr	r1, .L789+16
 20978 0116 2046     		mov	r0, r4
 20979 0118 FFF7FEFF 		bl	sprintf
2833:..\src/command_processing.c ****                                     g_mem.cnt.excessive_signal_activity[0], g_mem.cnt.excessive_sig
2834:..\src/command_processing.c ****                                     g_mem.cnt.motion_counter[0], g_mem.cnt.motion_counter[1]);
2835:..\src/command_processing.c ****     strcat(info_string, str);
 20980              		.loc 1 2835 0
 20981 011c 07F10C03 		add	r3, r7, #12
 20982 0120 1946     		mov	r1, r3
 20983 0122 7868     		ldr	r0, [r7, #4]
 20984 0124 FFF7FEFF 		bl	strcat
2836:..\src/command_processing.c ****     
2837:..\src/command_processing.c ****     // Total_runtime
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 461


2838:..\src/command_processing.c ****     sprintf(str, "%lu", g_mem.cnt.total_runtime);
 20985              		.loc 1 2838 0
 20986 0128 0E4B     		ldr	r3, .L789
 20987 012a 9A6D     		ldr	r2, [r3, #88]
 20988 012c 07F10C03 		add	r3, r7, #12
 20989 0130 1149     		ldr	r1, .L789+20
 20990 0132 1846     		mov	r0, r3
 20991 0134 FFF7FEFF 		bl	sprintf
2839:..\src/command_processing.c ****     strcat(info_string, str);
 20992              		.loc 1 2839 0
 20993 0138 07F10C03 		add	r3, r7, #12
 20994 013c 1946     		mov	r1, r3
 20995 013e 7868     		ldr	r0, [r7, #4]
 20996 0140 FFF7FEFF 		bl	strcat
2840:..\src/command_processing.c ****     
2841:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20997              		.loc 1 2841 0
 20998 0144 7868     		ldr	r0, [r7, #4]
 20999 0146 FFF7FEFF 		bl	strlen
 21000 014a 0346     		mov	r3, r0
 21001 014c 1A46     		mov	r2, r3
 21002 014e 7B68     		ldr	r3, [r7, #4]
 21003 0150 1344     		add	r3, r3, r2
 21004 0152 0A4A     		ldr	r2, .L789+24
 21005 0154 1188     		ldrh	r1, [r2]	@ unaligned
 21006 0156 9278     		ldrb	r2, [r2, #2]
 21007 0158 1980     		strh	r1, [r3]	@ unaligned
 21008 015a 9A70     		strb	r2, [r3, #2]
2842:..\src/command_processing.c **** }
 21009              		.loc 1 2842 0
 21010 015c 00BF     		nop
 21011 015e 8C37     		adds	r7, r7, #140
 21012              		.cfi_def_cfa_offset 20
 21013 0160 BD46     		mov	sp, r7
 21014              		.cfi_def_cfa_register 13
 21015              		@ sp needed
 21016 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 21017              	.L790:
 21018              		.align	2
 21019              	.L789:
 21020 0164 00000000 		.word	g_mem
 21021 0168 8C1E0000 		.word	.LC285
 21022 016c 9C1E0000 		.word	.LC286
 21023 0170 A41E0000 		.word	.LC287
 21024 0174 B81E0000 		.word	.LC288
 21025 0178 D41E0000 		.word	.LC289
 21026 017c 50110000 		.word	.LC152
 21027              		.cfi_endproc
 21028              	.LFE77:
 21029              		.size	prepare_SD_info, .-prepare_SD_info
 21030              		.section	.rodata
 21031              		.align	2
 21032              	.LC290:
 21033 1ed8 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21033      2C454D47 
 21033      312C454D 
 21033      47320A00 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 462


 21034              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21035              		.align	2
 21036              		.global	prepare_SD_EMG_History_legend
 21037              		.thumb
 21038              		.thumb_func
 21039              		.type	prepare_SD_EMG_History_legend, %function
 21040              	prepare_SD_EMG_History_legend:
 21041              	.LFB78:
2843:..\src/command_processing.c **** 
2844:..\src/command_processing.c **** //==============================================================================
2845:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2846:..\src/command_processing.c **** //==============================================================================
2847:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2848:..\src/command_processing.c **** {
 21042              		.loc 1 2848 0
 21043              		.cfi_startproc
 21044              		@ args = 0, pretend = 0, frame = 8
 21045              		@ frame_needed = 1, uses_anonymous_args = 0
 21046              		@ link register save eliminated.
 21047 0000 B0B4     		push	{r4, r5, r7}
 21048              		.cfi_def_cfa_offset 12
 21049              		.cfi_offset 4, -12
 21050              		.cfi_offset 5, -8
 21051              		.cfi_offset 7, -4
 21052 0002 83B0     		sub	sp, sp, #12
 21053              		.cfi_def_cfa_offset 24
 21054 0004 00AF     		add	r7, sp, #0
 21055              		.cfi_def_cfa_register 7
 21056 0006 7860     		str	r0, [r7, #4]
2849:..\src/command_processing.c ****         
2850:..\src/command_processing.c ****     // Legend
2851:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21057              		.loc 1 2851 0
 21058 0008 7B68     		ldr	r3, [r7, #4]
 21059 000a 064A     		ldr	r2, .L792
 21060 000c 1C46     		mov	r4, r3
 21061 000e 1546     		mov	r5, r2
 21062 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21063 0012 2060     		str	r0, [r4]	@ unaligned
 21064 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21065 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21066 0018 E360     		str	r3, [r4, #12]	@ unaligned
2852:..\src/command_processing.c ****     
2853:..\src/command_processing.c **** }
 21067              		.loc 1 2853 0
 21068 001a 00BF     		nop
 21069 001c 0C37     		adds	r7, r7, #12
 21070              		.cfi_def_cfa_offset 12
 21071 001e BD46     		mov	sp, r7
 21072              		.cfi_def_cfa_register 13
 21073              		@ sp needed
 21074 0020 B0BC     		pop	{r4, r5, r7}
 21075              		.cfi_restore 7
 21076              		.cfi_restore 5
 21077              		.cfi_restore 4
 21078              		.cfi_def_cfa_offset 0
 21079 0022 7047     		bx	lr
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 463


 21080              	.L793:
 21081              		.align	2
 21082              	.L792:
 21083 0024 D81E0000 		.word	.LC290
 21084              		.cfi_endproc
 21085              	.LFE78:
 21086              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21087              		.section	.rodata
 21088              		.align	2
 21089              	.LC291:
 21090 1ee8 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21090      2C25752C 
 21090      25750A00 
 21091              		.global	__aeabi_dadd
 21092              		.global	__aeabi_d2f
 21093              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21094              		.align	2
 21095              		.global	prepare_SD_EMG_history
 21096              		.thumb
 21097              		.thumb_func
 21098              		.type	prepare_SD_EMG_history, %function
 21099              	prepare_SD_EMG_history:
 21100              	.LFB79:
2854:..\src/command_processing.c **** 
2855:..\src/command_processing.c **** //==============================================================================
2856:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2857:..\src/command_processing.c **** //==============================================================================
2858:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2859:..\src/command_processing.c **** {
 21101              		.loc 1 2859 0
 21102              		.cfi_startproc
 21103              		@ args = 0, pretend = 0, frame = 120
 21104              		@ frame_needed = 1, uses_anonymous_args = 0
 21105 0000 B0B5     		push	{r4, r5, r7, lr}
 21106              		.cfi_def_cfa_offset 16
 21107              		.cfi_offset 4, -16
 21108              		.cfi_offset 5, -12
 21109              		.cfi_offset 7, -8
 21110              		.cfi_offset 14, -4
 21111 0002 A0B0     		sub	sp, sp, #128
 21112              		.cfi_def_cfa_offset 144
 21113 0004 02AF     		add	r7, sp, #8
 21114              		.cfi_def_cfa 7, 136
 21115 0006 7860     		str	r0, [r7, #4]
2860:..\src/command_processing.c ****     char str_data[100] = "";
 21116              		.loc 1 2860 0
 21117 0008 0023     		movs	r3, #0
 21118 000a FB60     		str	r3, [r7, #12]
 21119 000c 07F11003 		add	r3, r7, #16
 21120 0010 6022     		movs	r2, #96
 21121 0012 0021     		movs	r1, #0
 21122 0014 1846     		mov	r0, r3
 21123 0016 FFF7FEFF 		bl	memset
2861:..\src/command_processing.c ****     uint16 v_idx = 0;
 21124              		.loc 1 2861 0
 21125 001a 0023     		movs	r3, #0
 21126 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 464


2862:..\src/command_processing.c ****     static float h_time = 0.0;
2863:..\src/command_processing.c ****                 
2864:..\src/command_processing.c ****     strcpy(info_string, "");
 21127              		.loc 1 2864 0
 21128 0020 7B68     		ldr	r3, [r7, #4]
 21129 0022 0022     		movs	r2, #0
 21130 0024 1A70     		strb	r2, [r3]
 21131              	.LBB29:
2865:..\src/command_processing.c ****     
2866:..\src/command_processing.c ****     // Oldest samples of the vector
2867:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21132              		.loc 1 2867 0
 21133 0026 0023     		movs	r3, #0
 21134 0028 3B67     		str	r3, [r7, #112]
 21135 002a 4AE0     		b	.L795
 21136              	.L797:
2868:..\src/command_processing.c ****               
2869:..\src/command_processing.c ****         // Send line per line all the history vector
2870:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2871:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21137              		.loc 1 2871 0
 21138 002c 2C4B     		ldr	r3, .L798+8
 21139 002e 1B68     		ldr	r3, [r3]
 21140 0030 9AB2     		uxth	r2, r3
 21141 0032 3B6F     		ldr	r3, [r7, #112]
 21142 0034 9BB2     		uxth	r3, r3
 21143 0036 1344     		add	r3, r3, r2
 21144 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2872:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21145              		.loc 1 2872 0
 21146 003c B7F87630 		ldrh	r3, [r7, #118]
 21147 0040 B3F5167F 		cmp	r3, #600
 21148 0044 05D9     		bls	.L796
2873:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21149              		.loc 1 2873 0
 21150 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21151 004a A3F51673 		sub	r3, r3, #600
 21152 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21153              	.L796:
2874:..\src/command_processing.c ****         }
2875:..\src/command_processing.c ****         
2876:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2877:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21154              		.loc 1 2877 0 discriminator 2
 21155 0052 244B     		ldr	r3, .L798+12
 21156 0054 1B68     		ldr	r3, [r3]	@ float
 21157 0056 1846     		mov	r0, r3
 21158 0058 FFF7FEFF 		bl	__aeabi_f2d
 21159 005c 0446     		mov	r4, r0
 21160 005e 0D46     		mov	r5, r1
 21161 0060 B7F87630 		ldrh	r3, [r7, #118]
 21162 0064 204A     		ldr	r2, .L798+16
 21163 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21164 006a 1946     		mov	r1, r3
 21165 006c B7F87630 		ldrh	r3, [r7, #118]
 21166 0070 1D4A     		ldr	r2, .L798+16
 21167 0072 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 465


 21168 0074 1344     		add	r3, r3, r2
 21169 0076 5B88     		ldrh	r3, [r3, #2]
 21170 0078 07F10C00 		add	r0, r7, #12
 21171 007c 0193     		str	r3, [sp, #4]
 21172 007e 0091     		str	r1, [sp]
 21173 0080 2246     		mov	r2, r4
 21174 0082 2B46     		mov	r3, r5
 21175 0084 1949     		ldr	r1, .L798+20
 21176 0086 FFF7FEFF 		bl	sprintf
2878:..\src/command_processing.c ****         
2879:..\src/command_processing.c ****         strcat(info_string, str_data);
 21177              		.loc 1 2879 0 discriminator 2
 21178 008a 07F10C03 		add	r3, r7, #12
 21179 008e 1946     		mov	r1, r3
 21180 0090 7868     		ldr	r0, [r7, #4]
 21181 0092 FFF7FEFF 		bl	strcat
2880:..\src/command_processing.c ****         
2881:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21182              		.loc 1 2881 0 discriminator 2
 21183 0096 134B     		ldr	r3, .L798+12
 21184 0098 1B68     		ldr	r3, [r3]	@ float
 21185 009a 1846     		mov	r0, r3
 21186 009c FFF7FEFF 		bl	__aeabi_f2d
 21187 00a0 0DA3     		adr	r3, .L798
 21188 00a2 D3E90023 		ldrd	r2, [r3]
 21189 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21190 00aa 0346     		mov	r3, r0
 21191 00ac 0C46     		mov	r4, r1
 21192 00ae 1846     		mov	r0, r3
 21193 00b0 2146     		mov	r1, r4
 21194 00b2 FFF7FEFF 		bl	__aeabi_d2f
 21195 00b6 0246     		mov	r2, r0
 21196 00b8 0A4B     		ldr	r3, .L798+12
 21197 00ba 1A60     		str	r2, [r3]	@ float
2867:..\src/command_processing.c ****               
 21198              		.loc 1 2867 0 discriminator 2
 21199 00bc 3B6F     		ldr	r3, [r7, #112]
 21200 00be 0133     		adds	r3, r3, #1
 21201 00c0 3B67     		str	r3, [r7, #112]
 21202              	.L795:
2867:..\src/command_processing.c ****               
 21203              		.loc 1 2867 0 is_stmt 0 discriminator 1
 21204 00c2 3B6F     		ldr	r3, [r7, #112]
 21205 00c4 B3F5167F 		cmp	r3, #600
 21206 00c8 B0DB     		blt	.L797
 21207              	.LBE29:
2882:..\src/command_processing.c **** 
2883:..\src/command_processing.c ****     }
2884:..\src/command_processing.c ****     
2885:..\src/command_processing.c **** }
 21208              		.loc 1 2885 0 is_stmt 1
 21209 00ca 00BF     		nop
 21210 00cc 7837     		adds	r7, r7, #120
 21211              		.cfi_def_cfa_offset 16
 21212 00ce BD46     		mov	sp, r7
 21213              		.cfi_def_cfa_register 13
 21214              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 466


 21215 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21216              	.L799:
 21217 00d2 00BFAFF3 		.align	3
 21217      0080
 21218              	.L798:
 21219 00d8 9A999999 		.word	-1717986918
 21220 00dc 9999C93F 		.word	1070176665
 21221 00e0 00000000 		.word	emg_history_next_idx
 21222 00e4 00000000 		.word	h_time.10994
 21223 00e8 00000000 		.word	emg_history
 21224 00ec E81E0000 		.word	.LC291
 21225              		.cfi_endproc
 21226              	.LFE79:
 21227              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21228              		.section	.rodata
 21229              		.align	2
 21230              	.LC292:
 21231 1ef4 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21231      4F525320 
 21231      494E464F 
 21231      0D0A00
 21232 1f03 00       		.align	2
 21233              	.LC293:
 21234 1f04 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21234      3A202564 
 21234      09256409 
 21234      25640D0A 
 21234      00
 21235 1f15 000000   		.align	2
 21236              	.LC294:
 21237 1f18 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 21237      6F3A2025 
 21237      64092564 
 21237      0925640D 
 21237      0A00
 21238 1f2a 0000     		.align	2
 21239              	.LC295:
 21240 1f2c 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21240      3A202564 
 21240      09256409 
 21240      25640D0A 
 21240      00
 21241 1f3d 000000   		.align	2
 21242              	.LC296:
 21243 1f40 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21243      743A2025 
 21243      2E336609 
 21243      252E3366 
 21243      09252E33 
 21244 1f5d 000000   		.align	2
 21245              	.LC297:
 21246 1f60 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21246      70657261 
 21246      74757265 
 21246      3A202564 
 21246      0D0A00
 21247              		.section	.text.IMU_reading_info,"ax",%progbits
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 467


 21248              		.align	2
 21249              		.global	IMU_reading_info
 21250              		.thumb
 21251              		.thumb_func
 21252              		.type	IMU_reading_info, %function
 21253              	IMU_reading_info:
 21254              	.LFB80:
2886:..\src/command_processing.c **** 
2887:..\src/command_processing.c **** //==============================================================================
2888:..\src/command_processing.c **** //                                                              IMU READING INFO
2889:..\src/command_processing.c **** //==============================================================================
2890:..\src/command_processing.c **** 
2891:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2892:..\src/command_processing.c **** {
 21255              		.loc 1 2892 0
 21256              		.cfi_startproc
 21257              		@ args = 0, pretend = 0, frame = 312
 21258              		@ frame_needed = 1, uses_anonymous_args = 0
 21259 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21260              		.cfi_def_cfa_offset 32
 21261              		.cfi_offset 4, -32
 21262              		.cfi_offset 5, -28
 21263              		.cfi_offset 7, -24
 21264              		.cfi_offset 8, -20
 21265              		.cfi_offset 9, -16
 21266              		.cfi_offset 10, -12
 21267              		.cfi_offset 11, -8
 21268              		.cfi_offset 14, -4
 21269 0004 D4B0     		sub	sp, sp, #336
 21270              		.cfi_def_cfa_offset 368
 21271 0006 06AF     		add	r7, sp, #24
 21272              		.cfi_def_cfa 7, 344
 21273 0008 3B1D     		adds	r3, r7, #4
 21274 000a 1860     		str	r0, [r3]
2893:..\src/command_processing.c ****     char str[300];  
2894:..\src/command_processing.c ****     int i;
2895:..\src/command_processing.c ****                  
2896:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21275              		.loc 1 2896 0
 21276 000c 3B1D     		adds	r3, r7, #4
 21277 000e 1868     		ldr	r0, [r3]
 21278 0010 FFF7FEFF 		bl	strlen
 21279 0014 0346     		mov	r3, r0
 21280 0016 1A46     		mov	r2, r3
 21281 0018 3B1D     		adds	r3, r7, #4
 21282 001a 1B68     		ldr	r3, [r3]
 21283 001c 1344     		add	r3, r3, r2
 21284 001e C94A     		ldr	r2, .L808
 21285 0020 1C46     		mov	r4, r3
 21286 0022 1346     		mov	r3, r2
 21287 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21288 0026 2060     		str	r0, [r4]	@ unaligned
 21289 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21290 002a A260     		str	r2, [r4, #8]	@ unaligned
 21291 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21292 002e 9B78     		ldrb	r3, [r3, #2]
 21293 0030 A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 468


 21294 0032 A373     		strb	r3, [r4, #14]
2897:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21295              		.loc 1 2897 0
 21296 0034 0023     		movs	r3, #0
 21297 0036 C7F83431 		str	r3, [r7, #308]
 21298 003a 66E1     		b	.L801
 21299              	.L807:
2898:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21300              		.loc 1 2898 0
 21301 003c C24A     		ldr	r2, .L808+4
 21302 003e D7F83431 		ldr	r3, [r7, #308]
 21303 0042 1344     		add	r3, r3, r2
 21304 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21305 0046 07F10800 		add	r0, r7, #8
 21306 004a D7F83421 		ldr	r2, [r7, #308]
 21307 004e BF49     		ldr	r1, .L808+8
 21308 0050 FFF7FEFF 		bl	sprintf
2899:..\src/command_processing.c ****         strcat(info_string, str);
 21309              		.loc 1 2899 0
 21310 0054 07F10802 		add	r2, r7, #8
 21311 0058 3B1D     		adds	r3, r7, #4
 21312 005a 1146     		mov	r1, r2
 21313 005c 1868     		ldr	r0, [r3]
 21314 005e FFF7FEFF 		bl	strcat
2900:..\src/command_processing.c ****         
2901:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21315              		.loc 1 2901 0
 21316 0062 B94A     		ldr	r2, .L808+4
 21317 0064 D7F83431 		ldr	r3, [r7, #308]
 21318 0068 1344     		add	r3, r3, r2
 21319 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21320 006c 1946     		mov	r1, r3
 21321 006e B84A     		ldr	r2, .L808+12
 21322 0070 0B46     		mov	r3, r1
 21323 0072 9B00     		lsls	r3, r3, #2
 21324 0074 0B44     		add	r3, r3, r1
 21325 0076 1344     		add	r3, r3, r2
 21326 0078 03F20223 		addw	r3, r3, #514
 21327 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21328 007e 002B     		cmp	r3, #0
 21329 0080 31D0     		beq	.L802
2902:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21330              		.loc 1 2902 0
 21331 0082 B449     		ldr	r1, .L808+16
 21332 0084 D7F83421 		ldr	r2, [r7, #308]
 21333 0088 1346     		mov	r3, r2
 21334 008a 9B00     		lsls	r3, r3, #2
 21335 008c 1344     		add	r3, r3, r2
 21336 008e DB00     		lsls	r3, r3, #3
 21337 0090 0B44     		add	r3, r3, r1
 21338 0092 0233     		adds	r3, r3, #2
 21339 0094 B3F90030 		ldrsh	r3, [r3]
 21340 0098 1C46     		mov	r4, r3
 21341 009a AE49     		ldr	r1, .L808+16
 21342 009c D7F83421 		ldr	r2, [r7, #308]
 21343 00a0 1346     		mov	r3, r2
 21344 00a2 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 469


 21345 00a4 1344     		add	r3, r3, r2
 21346 00a6 DB00     		lsls	r3, r3, #3
 21347 00a8 0B44     		add	r3, r3, r1
 21348 00aa 0433     		adds	r3, r3, #4
 21349 00ac B3F90030 		ldrsh	r3, [r3]
 21350 00b0 1D46     		mov	r5, r3
 21351 00b2 A849     		ldr	r1, .L808+16
 21352 00b4 D7F83421 		ldr	r2, [r7, #308]
 21353 00b8 1346     		mov	r3, r2
 21354 00ba 9B00     		lsls	r3, r3, #2
 21355 00bc 1344     		add	r3, r3, r2
 21356 00be DB00     		lsls	r3, r3, #3
 21357 00c0 0B44     		add	r3, r3, r1
 21358 00c2 0633     		adds	r3, r3, #6
 21359 00c4 B3F90030 		ldrsh	r3, [r3]
 21360 00c8 07F10800 		add	r0, r7, #8
 21361 00cc 0093     		str	r3, [sp]
 21362 00ce 2B46     		mov	r3, r5
 21363 00d0 2246     		mov	r2, r4
 21364 00d2 A149     		ldr	r1, .L808+20
 21365 00d4 FFF7FEFF 		bl	sprintf
2903:..\src/command_processing.c ****             strcat(info_string, str);
 21366              		.loc 1 2903 0
 21367 00d8 07F10802 		add	r2, r7, #8
 21368 00dc 3B1D     		adds	r3, r7, #4
 21369 00de 1146     		mov	r1, r2
 21370 00e0 1868     		ldr	r0, [r3]
 21371 00e2 FFF7FEFF 		bl	strcat
 21372              	.L802:
2904:..\src/command_processing.c ****         }
2905:..\src/command_processing.c **** 
2906:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21373              		.loc 1 2906 0
 21374 00e6 984A     		ldr	r2, .L808+4
 21375 00e8 D7F83431 		ldr	r3, [r7, #308]
 21376 00ec 1344     		add	r3, r3, r2
 21377 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21378 00f0 1946     		mov	r1, r3
 21379 00f2 974A     		ldr	r2, .L808+12
 21380 00f4 0B46     		mov	r3, r1
 21381 00f6 9B00     		lsls	r3, r3, #2
 21382 00f8 0B44     		add	r3, r3, r1
 21383 00fa 1344     		add	r3, r3, r2
 21384 00fc 03F20323 		addw	r3, r3, #515
 21385 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21386 0102 002B     		cmp	r3, #0
 21387 0104 31D0     		beq	.L803
2907:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21388              		.loc 1 2907 0
 21389 0106 9349     		ldr	r1, .L808+16
 21390 0108 D7F83421 		ldr	r2, [r7, #308]
 21391 010c 1346     		mov	r3, r2
 21392 010e 9B00     		lsls	r3, r3, #2
 21393 0110 1344     		add	r3, r3, r2
 21394 0112 DB00     		lsls	r3, r3, #3
 21395 0114 0B44     		add	r3, r3, r1
 21396 0116 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 470


 21397 0118 B3F90030 		ldrsh	r3, [r3]
 21398 011c 1C46     		mov	r4, r3
 21399 011e 8D49     		ldr	r1, .L808+16
 21400 0120 D7F83421 		ldr	r2, [r7, #308]
 21401 0124 1346     		mov	r3, r2
 21402 0126 9B00     		lsls	r3, r3, #2
 21403 0128 1344     		add	r3, r3, r2
 21404 012a DB00     		lsls	r3, r3, #3
 21405 012c 0B44     		add	r3, r3, r1
 21406 012e 0A33     		adds	r3, r3, #10
 21407 0130 B3F90030 		ldrsh	r3, [r3]
 21408 0134 1D46     		mov	r5, r3
 21409 0136 8749     		ldr	r1, .L808+16
 21410 0138 D7F83421 		ldr	r2, [r7, #308]
 21411 013c 1346     		mov	r3, r2
 21412 013e 9B00     		lsls	r3, r3, #2
 21413 0140 1344     		add	r3, r3, r2
 21414 0142 DB00     		lsls	r3, r3, #3
 21415 0144 0B44     		add	r3, r3, r1
 21416 0146 0C33     		adds	r3, r3, #12
 21417 0148 B3F90030 		ldrsh	r3, [r3]
 21418 014c 07F10800 		add	r0, r7, #8
 21419 0150 0093     		str	r3, [sp]
 21420 0152 2B46     		mov	r3, r5
 21421 0154 2246     		mov	r2, r4
 21422 0156 8149     		ldr	r1, .L808+24
 21423 0158 FFF7FEFF 		bl	sprintf
2908:..\src/command_processing.c ****             strcat(info_string, str);
 21424              		.loc 1 2908 0
 21425 015c 07F10802 		add	r2, r7, #8
 21426 0160 3B1D     		adds	r3, r7, #4
 21427 0162 1146     		mov	r1, r2
 21428 0164 1868     		ldr	r0, [r3]
 21429 0166 FFF7FEFF 		bl	strcat
 21430              	.L803:
2909:..\src/command_processing.c ****         }
2910:..\src/command_processing.c **** 
2911:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21431              		.loc 1 2911 0
 21432 016a 774A     		ldr	r2, .L808+4
 21433 016c D7F83431 		ldr	r3, [r7, #308]
 21434 0170 1344     		add	r3, r3, r2
 21435 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21436 0174 1946     		mov	r1, r3
 21437 0176 764A     		ldr	r2, .L808+12
 21438 0178 0B46     		mov	r3, r1
 21439 017a 9B00     		lsls	r3, r3, #2
 21440 017c 0B44     		add	r3, r3, r1
 21441 017e 1344     		add	r3, r3, r2
 21442 0180 03F50173 		add	r3, r3, #516
 21443 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21444 0186 002B     		cmp	r3, #0
 21445 0188 31D0     		beq	.L804
2912:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21446              		.loc 1 2912 0
 21447 018a 7249     		ldr	r1, .L808+16
 21448 018c D7F83421 		ldr	r2, [r7, #308]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 471


 21449 0190 1346     		mov	r3, r2
 21450 0192 9B00     		lsls	r3, r3, #2
 21451 0194 1344     		add	r3, r3, r2
 21452 0196 DB00     		lsls	r3, r3, #3
 21453 0198 0B44     		add	r3, r3, r1
 21454 019a 0E33     		adds	r3, r3, #14
 21455 019c B3F90030 		ldrsh	r3, [r3]
 21456 01a0 1C46     		mov	r4, r3
 21457 01a2 6C49     		ldr	r1, .L808+16
 21458 01a4 D7F83421 		ldr	r2, [r7, #308]
 21459 01a8 1346     		mov	r3, r2
 21460 01aa 9B00     		lsls	r3, r3, #2
 21461 01ac 1344     		add	r3, r3, r2
 21462 01ae DB00     		lsls	r3, r3, #3
 21463 01b0 0B44     		add	r3, r3, r1
 21464 01b2 1033     		adds	r3, r3, #16
 21465 01b4 B3F90030 		ldrsh	r3, [r3]
 21466 01b8 1D46     		mov	r5, r3
 21467 01ba 6649     		ldr	r1, .L808+16
 21468 01bc D7F83421 		ldr	r2, [r7, #308]
 21469 01c0 1346     		mov	r3, r2
 21470 01c2 9B00     		lsls	r3, r3, #2
 21471 01c4 1344     		add	r3, r3, r2
 21472 01c6 DB00     		lsls	r3, r3, #3
 21473 01c8 0B44     		add	r3, r3, r1
 21474 01ca 1233     		adds	r3, r3, #18
 21475 01cc B3F90030 		ldrsh	r3, [r3]
 21476 01d0 07F10800 		add	r0, r7, #8
 21477 01d4 0093     		str	r3, [sp]
 21478 01d6 2B46     		mov	r3, r5
 21479 01d8 2246     		mov	r2, r4
 21480 01da 6149     		ldr	r1, .L808+28
 21481 01dc FFF7FEFF 		bl	sprintf
2913:..\src/command_processing.c ****             strcat(info_string, str);
 21482              		.loc 1 2913 0
 21483 01e0 07F10802 		add	r2, r7, #8
 21484 01e4 3B1D     		adds	r3, r7, #4
 21485 01e6 1146     		mov	r1, r2
 21486 01e8 1868     		ldr	r0, [r3]
 21487 01ea FFF7FEFF 		bl	strcat
 21488              	.L804:
2914:..\src/command_processing.c ****         }
2915:..\src/command_processing.c ****         
2916:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21489              		.loc 1 2916 0
 21490 01ee 564A     		ldr	r2, .L808+4
 21491 01f0 D7F83431 		ldr	r3, [r7, #308]
 21492 01f4 1344     		add	r3, r3, r2
 21493 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21494 01f8 1946     		mov	r1, r3
 21495 01fa 554A     		ldr	r2, .L808+12
 21496 01fc 0B46     		mov	r3, r1
 21497 01fe 9B00     		lsls	r3, r3, #2
 21498 0200 0B44     		add	r3, r3, r1
 21499 0202 1344     		add	r3, r3, r2
 21500 0204 03F20523 		addw	r3, r3, #517
 21501 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 472


 21502 020a 002B     		cmp	r3, #0
 21503 020c 4FD0     		beq	.L805
2917:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21504              		.loc 1 2917 0
 21505 020e 5149     		ldr	r1, .L808+16
 21506 0210 D7F83421 		ldr	r2, [r7, #308]
 21507 0214 1346     		mov	r3, r2
 21508 0216 9B00     		lsls	r3, r3, #2
 21509 0218 1344     		add	r3, r3, r2
 21510 021a DB00     		lsls	r3, r3, #3
 21511 021c 0B44     		add	r3, r3, r1
 21512 021e 1433     		adds	r3, r3, #20
 21513 0220 1B68     		ldr	r3, [r3]	@ float
 21514 0222 1846     		mov	r0, r3
 21515 0224 FFF7FEFF 		bl	__aeabi_f2d
 21516 0228 8246     		mov	r10, r0
 21517 022a 8B46     		mov	fp, r1
 21518 022c 4949     		ldr	r1, .L808+16
 21519 022e D7F83421 		ldr	r2, [r7, #308]
 21520 0232 1346     		mov	r3, r2
 21521 0234 9B00     		lsls	r3, r3, #2
 21522 0236 1344     		add	r3, r3, r2
 21523 0238 DB00     		lsls	r3, r3, #3
 21524 023a 0B44     		add	r3, r3, r1
 21525 023c 1833     		adds	r3, r3, #24
 21526 023e 1B68     		ldr	r3, [r3]	@ float
 21527 0240 1846     		mov	r0, r3
 21528 0242 FFF7FEFF 		bl	__aeabi_f2d
 21529 0246 0446     		mov	r4, r0
 21530 0248 0D46     		mov	r5, r1
 21531 024a 4249     		ldr	r1, .L808+16
 21532 024c D7F83421 		ldr	r2, [r7, #308]
 21533 0250 1346     		mov	r3, r2
 21534 0252 9B00     		lsls	r3, r3, #2
 21535 0254 1344     		add	r3, r3, r2
 21536 0256 DB00     		lsls	r3, r3, #3
 21537 0258 0B44     		add	r3, r3, r1
 21538 025a 1C33     		adds	r3, r3, #28
 21539 025c 1B68     		ldr	r3, [r3]	@ float
 21540 025e 1846     		mov	r0, r3
 21541 0260 FFF7FEFF 		bl	__aeabi_f2d
 21542 0264 8046     		mov	r8, r0
 21543 0266 8946     		mov	r9, r1
 21544 0268 3A49     		ldr	r1, .L808+16
 21545 026a D7F83421 		ldr	r2, [r7, #308]
 21546 026e 1346     		mov	r3, r2
 21547 0270 9B00     		lsls	r3, r3, #2
 21548 0272 1344     		add	r3, r3, r2
 21549 0274 DB00     		lsls	r3, r3, #3
 21550 0276 0B44     		add	r3, r3, r1
 21551 0278 2033     		adds	r3, r3, #32
 21552 027a 1B68     		ldr	r3, [r3]	@ float
 21553 027c 1846     		mov	r0, r3
 21554 027e FFF7FEFF 		bl	__aeabi_f2d
 21555 0282 0246     		mov	r2, r0
 21556 0284 0B46     		mov	r3, r1
 21557 0286 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 473


 21558 028a CDE90423 		strd	r2, [sp, #16]
 21559 028e CDE90289 		strd	r8, [sp, #8]
 21560 0292 CDE90045 		strd	r4, [sp]
 21561 0296 5246     		mov	r2, r10
 21562 0298 5B46     		mov	r3, fp
 21563 029a 3249     		ldr	r1, .L808+32
 21564 029c FFF7FEFF 		bl	sprintf
2918:..\src/command_processing.c ****             strcat(info_string, str);
 21565              		.loc 1 2918 0
 21566 02a0 07F10802 		add	r2, r7, #8
 21567 02a4 3B1D     		adds	r3, r7, #4
 21568 02a6 1146     		mov	r1, r2
 21569 02a8 1868     		ldr	r0, [r3]
 21570 02aa FFF7FEFF 		bl	strcat
 21571              	.L805:
2919:..\src/command_processing.c ****         }
2920:..\src/command_processing.c ****         
2921:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21572              		.loc 1 2921 0
 21573 02ae 264A     		ldr	r2, .L808+4
 21574 02b0 D7F83431 		ldr	r3, [r7, #308]
 21575 02b4 1344     		add	r3, r3, r2
 21576 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21577 02b8 1946     		mov	r1, r3
 21578 02ba 254A     		ldr	r2, .L808+12
 21579 02bc 0B46     		mov	r3, r1
 21580 02be 9B00     		lsls	r3, r3, #2
 21581 02c0 0B44     		add	r3, r3, r1
 21582 02c2 1344     		add	r3, r3, r2
 21583 02c4 03F20623 		addw	r3, r3, #518
 21584 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21585 02ca 002B     		cmp	r3, #0
 21586 02cc 18D0     		beq	.L806
2922:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21587              		.loc 1 2922 0
 21588 02ce 2149     		ldr	r1, .L808+16
 21589 02d0 D7F83421 		ldr	r2, [r7, #308]
 21590 02d4 1346     		mov	r3, r2
 21591 02d6 9B00     		lsls	r3, r3, #2
 21592 02d8 1344     		add	r3, r3, r2
 21593 02da DB00     		lsls	r3, r3, #3
 21594 02dc 0B44     		add	r3, r3, r1
 21595 02de 2433     		adds	r3, r3, #36
 21596 02e0 B3F90030 		ldrsh	r3, [r3]
 21597 02e4 1A46     		mov	r2, r3
 21598 02e6 07F10803 		add	r3, r7, #8
 21599 02ea 1F49     		ldr	r1, .L808+36
 21600 02ec 1846     		mov	r0, r3
 21601 02ee FFF7FEFF 		bl	sprintf
2923:..\src/command_processing.c ****             strcat(info_string, str);
 21602              		.loc 1 2923 0
 21603 02f2 07F10802 		add	r2, r7, #8
 21604 02f6 3B1D     		adds	r3, r7, #4
 21605 02f8 1146     		mov	r1, r2
 21606 02fa 1868     		ldr	r0, [r3]
 21607 02fc FFF7FEFF 		bl	strcat
 21608              	.L806:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 474


2897:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21609              		.loc 1 2897 0 discriminator 2
 21610 0300 D7F83431 		ldr	r3, [r7, #308]
 21611 0304 0133     		adds	r3, r3, #1
 21612 0306 C7F83431 		str	r3, [r7, #308]
 21613              	.L801:
2897:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21614              		.loc 1 2897 0 is_stmt 0 discriminator 1
 21615 030a 184B     		ldr	r3, .L808+40
 21616 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21617 030e 1A46     		mov	r2, r3
 21618 0310 D7F83431 		ldr	r3, [r7, #308]
 21619 0314 9A42     		cmp	r2, r3
 21620 0316 3FF791AE 		bgt	.L807
2924:..\src/command_processing.c ****         }
2925:..\src/command_processing.c ****         
2926:..\src/command_processing.c ****     }
2927:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21621              		.loc 1 2927 0 is_stmt 1
 21622 031a 3B1D     		adds	r3, r7, #4
 21623 031c 1868     		ldr	r0, [r3]
 21624 031e FFF7FEFF 		bl	strlen
 21625 0322 0346     		mov	r3, r0
 21626 0324 1A46     		mov	r2, r3
 21627 0326 3B1D     		adds	r3, r7, #4
 21628 0328 1B68     		ldr	r3, [r3]
 21629 032a 1344     		add	r3, r3, r2
 21630 032c 104A     		ldr	r2, .L808+44
 21631 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21632 0330 9278     		ldrb	r2, [r2, #2]
 21633 0332 1980     		strh	r1, [r3]	@ unaligned
 21634 0334 9A70     		strb	r2, [r3, #2]
2928:..\src/command_processing.c **** }
 21635              		.loc 1 2928 0
 21636 0336 00BF     		nop
 21637 0338 07F59C77 		add	r7, r7, #312
 21638              		.cfi_def_cfa_offset 32
 21639 033c BD46     		mov	sp, r7
 21640              		.cfi_def_cfa_register 13
 21641              		@ sp needed
 21642 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21643              	.L809:
 21644 0342 00BF     		.align	2
 21645              	.L808:
 21646 0344 F41E0000 		.word	.LC292
 21647 0348 00000000 		.word	IMU_connected
 21648 034c 28190000 		.word	.LC240
 21649 0350 00000000 		.word	c_mem
 21650 0354 00000000 		.word	g_imu
 21651 0358 041F0000 		.word	.LC293
 21652 035c 181F0000 		.word	.LC294
 21653 0360 2C1F0000 		.word	.LC295
 21654 0364 401F0000 		.word	.LC296
 21655 0368 601F0000 		.word	.LC297
 21656 036c 00000000 		.word	N_IMU_Connected
 21657 0370 50110000 		.word	.LC152
 21658              		.cfi_endproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 475


 21659              	.LFE80:
 21660              		.size	IMU_reading_info, .-IMU_reading_info
 21661              		.section	.text.commWrite_old_id,"ax",%progbits
 21662              		.align	2
 21663              		.global	commWrite_old_id
 21664              		.thumb
 21665              		.thumb_func
 21666              		.type	commWrite_old_id, %function
 21667              	commWrite_old_id:
 21668              	.LFB81:
2929:..\src/command_processing.c **** 
2930:..\src/command_processing.c **** //==============================================================================
2931:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2932:..\src/command_processing.c **** //==============================================================================
2933:..\src/command_processing.c **** 
2934:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_length, uint8 old_id)
2935:..\src/command_processing.c **** {
 21669              		.loc 1 2935 0
 21670              		.cfi_startproc
 21671              		@ args = 0, pretend = 0, frame = 16
 21672              		@ frame_needed = 1, uses_anonymous_args = 0
 21673 0000 80B5     		push	{r7, lr}
 21674              		.cfi_def_cfa_offset 8
 21675              		.cfi_offset 7, -8
 21676              		.cfi_offset 14, -4
 21677 0002 84B0     		sub	sp, sp, #16
 21678              		.cfi_def_cfa_offset 24
 21679 0004 00AF     		add	r7, sp, #0
 21680              		.cfi_def_cfa_register 7
 21681 0006 7860     		str	r0, [r7, #4]
 21682 0008 0B46     		mov	r3, r1
 21683 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21684 000c 1346     		mov	r3, r2
 21685 000e 7B70     		strb	r3, [r7, #1]
2936:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2937:..\src/command_processing.c **** 
2938:..\src/command_processing.c ****     // frame - start
2939:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21686              		.loc 1 2939 0
 21687 0010 3A20     		movs	r0, #58
 21688 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2940:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21689              		.loc 1 2940 0
 21690 0016 3A20     		movs	r0, #58
 21691 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2941:..\src/command_processing.c ****     // frame - ID
2942:..\src/command_processing.c ****     //if(old_id)
2943:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21692              		.loc 1 2943 0
 21693 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21694 001e 1846     		mov	r0, r3
 21695 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2944:..\src/command_processing.c ****     //else
2945:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2946:..\src/command_processing.c ****         
2947:..\src/command_processing.c ****     // frame - length
2948:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 476


 21696              		.loc 1 2948 0
 21697 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21698 0026 DBB2     		uxtb	r3, r3
 21699 0028 1846     		mov	r0, r3
 21700 002a FFF7FEFF 		bl	UART_RS485_PutChar
2949:..\src/command_processing.c ****     // frame - packet data
2950:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 21701              		.loc 1 2950 0
 21702 002e 0023     		movs	r3, #0
 21703 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21704 0032 09E0     		b	.L811
 21705              	.L812:
2951:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21706              		.loc 1 2951 0 discriminator 3
 21707 0034 FB89     		ldrh	r3, [r7, #14]
 21708 0036 7A68     		ldr	r2, [r7, #4]
 21709 0038 1344     		add	r3, r3, r2
 21710 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21711 003c 1846     		mov	r0, r3
 21712 003e FFF7FEFF 		bl	UART_RS485_PutChar
2950:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21713              		.loc 1 2950 0 discriminator 3
 21714 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21715 0044 0133     		adds	r3, r3, #1
 21716 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21717              	.L811:
2950:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21718              		.loc 1 2950 0 is_stmt 0 discriminator 1
 21719 0048 FA89     		ldrh	r2, [r7, #14]
 21720 004a 7B88     		ldrh	r3, [r7, #2]
 21721 004c 9A42     		cmp	r2, r3
 21722 004e F1D3     		bcc	.L812
2952:..\src/command_processing.c ****     }
2953:..\src/command_processing.c **** 
2954:..\src/command_processing.c ****     index = 0;
 21723              		.loc 1 2954 0 is_stmt 1
 21724 0050 0023     		movs	r3, #0
 21725 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21726              		.loc 1 2956 0
 21727 0054 00BF     		nop
 21728              	.L814:
 21729              		.loc 1 2956 0 is_stmt 0 discriminator 2
 21730 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21731 005a 0346     		mov	r3, r0
 21732 005c 03F00103 		and	r3, r3, #1
 21733 0060 002B     		cmp	r3, #0
 21734 0062 05D1     		bne	.L813
 21735              		.loc 1 2956 0 discriminator 1
 21736 0064 FB89     		ldrh	r3, [r7, #14]
 21737 0066 5A1C     		adds	r2, r3, #1
 21738 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21739 006a B3F57A7F 		cmp	r3, #1000
 21740 006e F2D9     		bls	.L814
 21741              	.L813:
2957:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 477


2958:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21742              		.loc 1 2958 0 is_stmt 1
 21743 0070 0120     		movs	r0, #1
 21744 0072 FFF7FEFF 		bl	RS485_CTS_Write
2959:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21745              		.loc 1 2959 0
 21746 0076 0020     		movs	r0, #0
 21747 0078 FFF7FEFF 		bl	RS485_CTS_Write
2960:..\src/command_processing.c **** }
 21748              		.loc 1 2960 0
 21749 007c 00BF     		nop
 21750 007e 1037     		adds	r7, r7, #16
 21751              		.cfi_def_cfa_offset 8
 21752 0080 BD46     		mov	sp, r7
 21753              		.cfi_def_cfa_register 13
 21754              		@ sp needed
 21755 0082 80BD     		pop	{r7, pc}
 21756              		.cfi_endproc
 21757              	.LFE81:
 21758              		.size	commWrite_old_id, .-commWrite_old_id
 21759              		.section	.text.commWrite,"ax",%progbits
 21760              		.align	2
 21761              		.global	commWrite
 21762              		.thumb
 21763              		.thumb_func
 21764              		.type	commWrite, %function
 21765              	commWrite:
 21766              	.LFB82:
2961:..\src/command_processing.c **** 
2962:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_length)
2963:..\src/command_processing.c **** {
 21767              		.loc 1 2963 0
 21768              		.cfi_startproc
 21769              		@ args = 0, pretend = 0, frame = 16
 21770              		@ frame_needed = 1, uses_anonymous_args = 0
 21771 0000 80B5     		push	{r7, lr}
 21772              		.cfi_def_cfa_offset 8
 21773              		.cfi_offset 7, -8
 21774              		.cfi_offset 14, -4
 21775 0002 84B0     		sub	sp, sp, #16
 21776              		.cfi_def_cfa_offset 24
 21777 0004 00AF     		add	r7, sp, #0
 21778              		.cfi_def_cfa_register 7
 21779 0006 7860     		str	r0, [r7, #4]
 21780 0008 0B46     		mov	r3, r1
 21781 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2964:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2965:..\src/command_processing.c **** 
2966:..\src/command_processing.c ****     // frame - start
2967:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21782              		.loc 1 2967 0
 21783 000c 3A20     		movs	r0, #58
 21784 000e FFF7FEFF 		bl	UART_RS485_PutChar
2968:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21785              		.loc 1 2968 0
 21786 0012 3A20     		movs	r0, #58
 21787 0014 FFF7FEFF 		bl	UART_RS485_PutChar
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 478


2969:..\src/command_processing.c ****     // frame - ID
2970:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21788              		.loc 1 2970 0
 21789 0018 1A4B     		ldr	r3, .L820
 21790 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21791 001e 1846     		mov	r0, r3
 21792 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2971:..\src/command_processing.c ****     // frame - length
2972:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 21793              		.loc 1 2972 0
 21794 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21795 0026 DBB2     		uxtb	r3, r3
 21796 0028 1846     		mov	r0, r3
 21797 002a FFF7FEFF 		bl	UART_RS485_PutChar
2973:..\src/command_processing.c ****     // frame - packet data
2974:..\src/command_processing.c ****     for(index = 0; index < packet_length; ++index) {
 21798              		.loc 1 2974 0
 21799 002e 0023     		movs	r3, #0
 21800 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21801 0032 09E0     		b	.L816
 21802              	.L817:
2975:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21803              		.loc 1 2975 0 discriminator 3
 21804 0034 FB89     		ldrh	r3, [r7, #14]
 21805 0036 7A68     		ldr	r2, [r7, #4]
 21806 0038 1344     		add	r3, r3, r2
 21807 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21808 003c 1846     		mov	r0, r3
 21809 003e FFF7FEFF 		bl	UART_RS485_PutChar
2974:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21810              		.loc 1 2974 0 discriminator 3
 21811 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21812 0044 0133     		adds	r3, r3, #1
 21813 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21814              	.L816:
2974:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21815              		.loc 1 2974 0 is_stmt 0 discriminator 1
 21816 0048 FA89     		ldrh	r2, [r7, #14]
 21817 004a 7B88     		ldrh	r3, [r7, #2]
 21818 004c 9A42     		cmp	r2, r3
 21819 004e F1D3     		bcc	.L817
2976:..\src/command_processing.c ****     }
2977:..\src/command_processing.c **** 
2978:..\src/command_processing.c ****     index = 0;
 21820              		.loc 1 2978 0 is_stmt 1
 21821 0050 0023     		movs	r3, #0
 21822 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2979:..\src/command_processing.c **** 
2980:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21823              		.loc 1 2980 0
 21824 0054 00BF     		nop
 21825              	.L819:
 21826              		.loc 1 2980 0 is_stmt 0 discriminator 2
 21827 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21828 005a 0346     		mov	r3, r0
 21829 005c 03F00103 		and	r3, r3, #1
 21830 0060 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 479


 21831 0062 05D1     		bne	.L818
 21832              		.loc 1 2980 0 discriminator 1
 21833 0064 FB89     		ldrh	r3, [r7, #14]
 21834 0066 5A1C     		adds	r2, r3, #1
 21835 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21836 006a B3F57A7F 		cmp	r3, #1000
 21837 006e F2D9     		bls	.L819
 21838              	.L818:
2981:..\src/command_processing.c **** 
2982:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21839              		.loc 1 2982 0 is_stmt 1
 21840 0070 0120     		movs	r0, #1
 21841 0072 FFF7FEFF 		bl	RS485_CTS_Write
2983:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21842              		.loc 1 2983 0
 21843 0076 0020     		movs	r0, #0
 21844 0078 FFF7FEFF 		bl	RS485_CTS_Write
2984:..\src/command_processing.c **** }
 21845              		.loc 1 2984 0
 21846 007c 00BF     		nop
 21847 007e 1037     		adds	r7, r7, #16
 21848              		.cfi_def_cfa_offset 8
 21849 0080 BD46     		mov	sp, r7
 21850              		.cfi_def_cfa_register 13
 21851              		@ sp needed
 21852 0082 80BD     		pop	{r7, pc}
 21853              	.L821:
 21854              		.align	2
 21855              	.L820:
 21856 0084 00000000 		.word	g_mem
 21857              		.cfi_endproc
 21858              	.LFE82:
 21859              		.size	commWrite, .-commWrite
 21860              		.section	.text.commWriteID,"ax",%progbits
 21861              		.align	2
 21862              		.global	commWriteID
 21863              		.thumb
 21864              		.thumb_func
 21865              		.type	commWriteID, %function
 21866              	commWriteID:
 21867              	.LFB83:
2985:..\src/command_processing.c **** 
2986:..\src/command_processing.c **** //==============================================================================
2987:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2988:..\src/command_processing.c **** //==============================================================================
2989:..\src/command_processing.c **** 
2990:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_length, uint8 id)
2991:..\src/command_processing.c **** {
 21868              		.loc 1 2991 0
 21869              		.cfi_startproc
 21870              		@ args = 0, pretend = 0, frame = 8
 21871              		@ frame_needed = 1, uses_anonymous_args = 0
 21872 0000 80B5     		push	{r7, lr}
 21873              		.cfi_def_cfa_offset 8
 21874              		.cfi_offset 7, -8
 21875              		.cfi_offset 14, -4
 21876 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 480


 21877              		.cfi_def_cfa_offset 16
 21878 0004 00AF     		add	r7, sp, #0
 21879              		.cfi_def_cfa_register 7
 21880 0006 7860     		str	r0, [r7, #4]
 21881 0008 0B46     		mov	r3, r1
 21882 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21883 000c 1346     		mov	r3, r2
 21884 000e 7B70     		strb	r3, [r7, #1]
2992:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2993:..\src/command_processing.c **** 
2994:..\src/command_processing.c ****     // frame - start
2995:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21885              		.loc 1 2995 0
 21886 0010 3A20     		movs	r0, #58
 21887 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2996:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21888              		.loc 1 2996 0
 21889 0016 3A20     		movs	r0, #58
 21890 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2997:..\src/command_processing.c ****     // frame - ID
2998:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21891              		.loc 1 2998 0
 21892 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21893 001e 1846     		mov	r0, r3
 21894 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2999:..\src/command_processing.c ****     // frame - length
3000:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_length);
 21895              		.loc 1 3000 0
 21896 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21897 0026 DBB2     		uxtb	r3, r3
 21898 0028 1846     		mov	r0, r3
 21899 002a FFF7FEFF 		bl	UART_RS485_PutChar
3001:..\src/command_processing.c ****     // frame - packet data
3002:..\src/command_processing.c ****     for(i = 0; i < packet_length; ++i) {
 21900              		.loc 1 3002 0
 21901 002e 1B4B     		ldr	r3, .L827
 21902 0030 0022     		movs	r2, #0
 21903 0032 1A80     		strh	r2, [r3]	@ movhi
 21904 0034 0EE0     		b	.L823
 21905              	.L824:
3003:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21906              		.loc 1 3003 0 discriminator 3
 21907 0036 194B     		ldr	r3, .L827
 21908 0038 1B88     		ldrh	r3, [r3]
 21909 003a 1A46     		mov	r2, r3
 21910 003c 7B68     		ldr	r3, [r7, #4]
 21911 003e 1344     		add	r3, r3, r2
 21912 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21913 0042 1846     		mov	r0, r3
 21914 0044 FFF7FEFF 		bl	UART_RS485_PutChar
3002:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21915              		.loc 1 3002 0 discriminator 3
 21916 0048 144B     		ldr	r3, .L827
 21917 004a 1B88     		ldrh	r3, [r3]
 21918 004c 0133     		adds	r3, r3, #1
 21919 004e 9AB2     		uxth	r2, r3
 21920 0050 124B     		ldr	r3, .L827
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 481


 21921 0052 1A80     		strh	r2, [r3]	@ movhi
 21922              	.L823:
3002:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21923              		.loc 1 3002 0 is_stmt 0 discriminator 1
 21924 0054 114B     		ldr	r3, .L827
 21925 0056 1B88     		ldrh	r3, [r3]
 21926 0058 7A88     		ldrh	r2, [r7, #2]
 21927 005a 9A42     		cmp	r2, r3
 21928 005c EBD8     		bhi	.L824
3004:..\src/command_processing.c ****     }
3005:..\src/command_processing.c **** 
3006:..\src/command_processing.c ****     i = 0;
 21929              		.loc 1 3006 0 is_stmt 1
 21930 005e 0F4B     		ldr	r3, .L827
 21931 0060 0022     		movs	r2, #0
 21932 0062 1A80     		strh	r2, [r3]	@ movhi
3007:..\src/command_processing.c **** 
3008:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 21933              		.loc 1 3008 0
 21934 0064 00BF     		nop
 21935              	.L826:
 21936              		.loc 1 3008 0 is_stmt 0 discriminator 2
 21937 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21938 006a 0346     		mov	r3, r0
 21939 006c 03F00103 		and	r3, r3, #1
 21940 0070 002B     		cmp	r3, #0
 21941 0072 08D1     		bne	.L825
 21942              		.loc 1 3008 0 discriminator 1
 21943 0074 094B     		ldr	r3, .L827
 21944 0076 1B88     		ldrh	r3, [r3]
 21945 0078 5A1C     		adds	r2, r3, #1
 21946 007a 91B2     		uxth	r1, r2
 21947 007c 074A     		ldr	r2, .L827
 21948 007e 1180     		strh	r1, [r2]	@ movhi
 21949 0080 B3F57A7F 		cmp	r3, #1000
 21950 0084 EFD9     		bls	.L826
 21951              	.L825:
3009:..\src/command_processing.c ****     
3010:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21952              		.loc 1 3010 0 is_stmt 1
 21953 0086 0120     		movs	r0, #1
 21954 0088 FFF7FEFF 		bl	RS485_CTS_Write
3011:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21955              		.loc 1 3011 0
 21956 008c 0020     		movs	r0, #0
 21957 008e FFF7FEFF 		bl	RS485_CTS_Write
3012:..\src/command_processing.c **** }
 21958              		.loc 1 3012 0
 21959 0092 00BF     		nop
 21960 0094 0837     		adds	r7, r7, #8
 21961              		.cfi_def_cfa_offset 8
 21962 0096 BD46     		mov	sp, r7
 21963              		.cfi_def_cfa_register 13
 21964              		@ sp needed
 21965 0098 80BD     		pop	{r7, pc}
 21966              	.L828:
 21967 009a 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 482


 21968              	.L827:
 21969 009c 04000000 		.word	i.11035
 21970              		.cfi_endproc
 21971              	.LFE83:
 21972              		.size	commWriteID, .-commWriteID
 21973              		.section	.text.LCRChecksum,"ax",%progbits
 21974              		.align	2
 21975              		.global	LCRChecksum
 21976              		.thumb
 21977              		.thumb_func
 21978              		.type	LCRChecksum, %function
 21979              	LCRChecksum:
 21980              	.LFB84:
3013:..\src/command_processing.c **** 
3014:..\src/command_processing.c **** //==============================================================================
3015:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
3016:..\src/command_processing.c **** //==============================================================================
3017:..\src/command_processing.c **** 
3018:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
3019:..\src/command_processing.c **** 
3020:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 21981              		.loc 1 3020 0
 21982              		.cfi_startproc
 21983              		@ args = 0, pretend = 0, frame = 16
 21984              		@ frame_needed = 1, uses_anonymous_args = 0
 21985              		@ link register save eliminated.
 21986 0000 80B4     		push	{r7}
 21987              		.cfi_def_cfa_offset 4
 21988              		.cfi_offset 7, -4
 21989 0002 85B0     		sub	sp, sp, #20
 21990              		.cfi_def_cfa_offset 24
 21991 0004 00AF     		add	r7, sp, #0
 21992              		.cfi_def_cfa_register 7
 21993 0006 7860     		str	r0, [r7, #4]
 21994 0008 0B46     		mov	r3, r1
 21995 000a FB70     		strb	r3, [r7, #3]
3021:..\src/command_processing.c ****     
3022:..\src/command_processing.c ****     uint8 CYDATA i;
3023:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 21996              		.loc 1 3023 0
 21997 000c 0023     		movs	r3, #0
 21998 000e BB73     		strb	r3, [r7, #14]
3024:..\src/command_processing.c ****     
3025:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 21999              		.loc 1 3025 0
 22000 0010 0023     		movs	r3, #0
 22001 0012 FB73     		strb	r3, [r7, #15]
 22002 0014 09E0     		b	.L830
 22003              	.L831:
3026:..\src/command_processing.c ****        checksum ^= data_array[i];
 22004              		.loc 1 3026 0 discriminator 3
 22005 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22006 0018 7A68     		ldr	r2, [r7, #4]
 22007 001a 1344     		add	r3, r3, r2
 22008 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22009 001e BB7B     		ldrb	r3, [r7, #14]
 22010 0020 5340     		eors	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 483


 22011 0022 BB73     		strb	r3, [r7, #14]
3025:..\src/command_processing.c ****        checksum ^= data_array[i];
 22012              		.loc 1 3025 0 discriminator 3
 22013 0024 FB7B     		ldrb	r3, [r7, #15]
 22014 0026 0133     		adds	r3, r3, #1
 22015 0028 FB73     		strb	r3, [r7, #15]
 22016              	.L830:
3025:..\src/command_processing.c ****        checksum ^= data_array[i];
 22017              		.loc 1 3025 0 is_stmt 0 discriminator 1
 22018 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22019 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22020 002e 9A42     		cmp	r2, r3
 22021 0030 F1D3     		bcc	.L831
3027:..\src/command_processing.c ****   
3028:..\src/command_processing.c ****     return checksum;
 22022              		.loc 1 3028 0 is_stmt 1
 22023 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
3029:..\src/command_processing.c **** }
 22024              		.loc 1 3029 0
 22025 0034 1846     		mov	r0, r3
 22026 0036 1437     		adds	r7, r7, #20
 22027              		.cfi_def_cfa_offset 4
 22028 0038 BD46     		mov	sp, r7
 22029              		.cfi_def_cfa_register 13
 22030              		@ sp needed
 22031 003a 80BC     		pop	{r7}
 22032              		.cfi_restore 7
 22033              		.cfi_def_cfa_offset 0
 22034 003c 7047     		bx	lr
 22035              		.cfi_endproc
 22036              	.LFE84:
 22037              		.size	LCRChecksum, .-LCRChecksum
 22038 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22039              		.align	2
 22040              		.global	sendAcknowledgment
 22041              		.thumb
 22042              		.thumb_func
 22043              		.type	sendAcknowledgment, %function
 22044              	sendAcknowledgment:
 22045              	.LFB85:
3030:..\src/command_processing.c **** 
3031:..\src/command_processing.c **** 
3032:..\src/command_processing.c **** //==============================================================================
3033:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
3034:..\src/command_processing.c **** //==============================================================================
3035:..\src/command_processing.c **** 
3036:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22046              		.loc 1 3036 0
 22047              		.cfi_startproc
 22048              		@ args = 0, pretend = 0, frame = 16
 22049              		@ frame_needed = 1, uses_anonymous_args = 0
 22050 0000 80B5     		push	{r7, lr}
 22051              		.cfi_def_cfa_offset 8
 22052              		.cfi_offset 7, -8
 22053              		.cfi_offset 14, -4
 22054 0002 84B0     		sub	sp, sp, #16
 22055              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 484


 22056 0004 00AF     		add	r7, sp, #0
 22057              		.cfi_def_cfa_register 7
 22058 0006 0346     		mov	r3, r0
 22059 0008 FB71     		strb	r3, [r7, #7]
3037:..\src/command_processing.c ****     int packet_length = 2;
 22060              		.loc 1 3037 0
 22061 000a 0223     		movs	r3, #2
 22062 000c FB60     		str	r3, [r7, #12]
3038:..\src/command_processing.c ****     uint8 packet_data[2];
3039:..\src/command_processing.c **** 
3040:..\src/command_processing.c ****     packet_data[0] = value;
 22063              		.loc 1 3040 0
 22064 000e FB79     		ldrb	r3, [r7, #7]
 22065 0010 3B72     		strb	r3, [r7, #8]
3041:..\src/command_processing.c ****     packet_data[1] = value;
 22066              		.loc 1 3041 0
 22067 0012 FB79     		ldrb	r3, [r7, #7]
 22068 0014 7B72     		strb	r3, [r7, #9]
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 22069              		.loc 1 3043 0
 22070 0016 FB68     		ldr	r3, [r7, #12]
 22071 0018 9AB2     		uxth	r2, r3
 22072 001a 07F10803 		add	r3, r7, #8
 22073 001e 1146     		mov	r1, r2
 22074 0020 1846     		mov	r0, r3
 22075 0022 FFF7FEFF 		bl	commWrite
3044:..\src/command_processing.c **** }
 22076              		.loc 1 3044 0
 22077 0026 00BF     		nop
 22078 0028 1037     		adds	r7, r7, #16
 22079              		.cfi_def_cfa_offset 8
 22080 002a BD46     		mov	sp, r7
 22081              		.cfi_def_cfa_register 13
 22082              		@ sp needed
 22083 002c 80BD     		pop	{r7, pc}
 22084              		.cfi_endproc
 22085              	.LFE85:
 22086              		.size	sendAcknowledgment, .-sendAcknowledgment
 22087 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22088              		.align	2
 22089              		.global	memStore
 22090              		.thumb
 22091              		.thumb_func
 22092              		.type	memStore, %function
 22093              	memStore:
 22094              	.LFB86:
3045:..\src/command_processing.c **** 
3046:..\src/command_processing.c **** //==============================================================================
3047:..\src/command_processing.c **** //                                                                  STORE MEMORY
3048:..\src/command_processing.c **** //==============================================================================
3049:..\src/command_processing.c **** 
3050:..\src/command_processing.c **** 
3051:..\src/command_processing.c **** uint8 memStore(int displacement)
3052:..\src/command_processing.c **** {
 22095              		.loc 1 3052 0
 22096              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 485


 22097              		@ args = 0, pretend = 0, frame = 24
 22098              		@ frame_needed = 1, uses_anonymous_args = 0
 22099 0000 80B5     		push	{r7, lr}
 22100              		.cfi_def_cfa_offset 8
 22101              		.cfi_offset 7, -8
 22102              		.cfi_offset 14, -4
 22103 0002 86B0     		sub	sp, sp, #24
 22104              		.cfi_def_cfa_offset 32
 22105 0004 00AF     		add	r7, sp, #0
 22106              		.cfi_def_cfa_register 7
 22107 0006 7860     		str	r0, [r7, #4]
3053:..\src/command_processing.c ****     int i;  // iterator
3054:..\src/command_processing.c ****     uint8 writeStatus;
3055:..\src/command_processing.c ****     int pages;
3056:..\src/command_processing.c ****     uint8 ret_val = 1;
 22108              		.loc 1 3056 0
 22109 0008 0123     		movs	r3, #1
 22110 000a FB74     		strb	r3, [r7, #19]
3057:..\src/command_processing.c **** 
3058:..\src/command_processing.c ****     // Disable Interrupt
3059:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22111              		.loc 1 3059 0
 22112 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c ****     // Stop motor
3062:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22113              		.loc 1 3062 0
 22114 0010 0020     		movs	r0, #0
 22115 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
3063:..\src/command_processing.c **** 
3064:..\src/command_processing.c ****     // Update temperature information for better writing performance
3065:..\src/command_processing.c ****     EEPROM_UpdateTemperature();
 22116              		.loc 1 3065 0
 22117 0016 FFF7FEFF 		bl	EEPROM_UpdateTemperature
3066:..\src/command_processing.c **** 
3067:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22118              		.loc 1 3067 0
 22119 001a 1D4A     		ldr	r2, .L840
 22120 001c 1D4B     		ldr	r3, .L840+4
 22121 001e 1046     		mov	r0, r2
 22122 0020 1946     		mov	r1, r3
 22123 0022 4FF43D73 		mov	r3, #756
 22124 0026 1A46     		mov	r2, r3
 22125 0028 FFF7FEFF 		bl	memcpy
3068:..\src/command_processing.c **** 
3069:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22126              		.loc 1 3069 0
 22127 002c 3023     		movs	r3, #48
 22128 002e FB60     		str	r3, [r7, #12]
3070:..\src/command_processing.c **** 
3071:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22129              		.loc 1 3071 0
 22130 0030 0023     		movs	r3, #0
 22131 0032 7B61     		str	r3, [r7, #20]
 22132 0034 18E0     		b	.L835
 22133              	.L838:
3072:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 486


 22134              		.loc 1 3072 0
 22135 0036 7B69     		ldr	r3, [r7, #20]
 22136 0038 1B01     		lsls	r3, r3, #4
 22137 003a 1A46     		mov	r2, r3
 22138 003c 154B     		ldr	r3, .L840+4
 22139 003e D018     		adds	r0, r2, r3
 22140 0040 7B69     		ldr	r3, [r7, #20]
 22141 0042 DAB2     		uxtb	r2, r3
 22142 0044 7B68     		ldr	r3, [r7, #4]
 22143 0046 DBB2     		uxtb	r3, r3
 22144 0048 1344     		add	r3, r3, r2
 22145 004a DBB2     		uxtb	r3, r3
 22146 004c 1946     		mov	r1, r3
 22147 004e FFF7FEFF 		bl	EEPROM_Write
 22148 0052 0346     		mov	r3, r0
 22149 0054 FB72     		strb	r3, [r7, #11]
3073:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22150              		.loc 1 3073 0
 22151 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22152 0058 002B     		cmp	r3, #0
 22153 005a 02D0     		beq	.L836
3074:..\src/command_processing.c ****             ret_val = 0;
 22154              		.loc 1 3074 0
 22155 005c 0023     		movs	r3, #0
 22156 005e FB74     		strb	r3, [r7, #19]
3075:..\src/command_processing.c ****             break;
 22157              		.loc 1 3075 0
 22158 0060 06E0     		b	.L837
 22159              	.L836:
3071:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22160              		.loc 1 3071 0 discriminator 2
 22161 0062 7B69     		ldr	r3, [r7, #20]
 22162 0064 0133     		adds	r3, r3, #1
 22163 0066 7B61     		str	r3, [r7, #20]
 22164              	.L835:
3071:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22165              		.loc 1 3071 0 is_stmt 0 discriminator 1
 22166 0068 7A69     		ldr	r2, [r7, #20]
 22167 006a FB68     		ldr	r3, [r7, #12]
 22168 006c 9A42     		cmp	r2, r3
 22169 006e E2DB     		blt	.L838
 22170              	.L837:
3076:..\src/command_processing.c ****         }
3077:..\src/command_processing.c ****     }
3078:..\src/command_processing.c **** 
3079:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22171              		.loc 1 3079 0 is_stmt 1
 22172 0070 084A     		ldr	r2, .L840+4
 22173 0072 074B     		ldr	r3, .L840
 22174 0074 1046     		mov	r0, r2
 22175 0076 1946     		mov	r1, r3
 22176 0078 4FF43D73 		mov	r3, #756
 22177 007c 1A46     		mov	r2, r3
 22178 007e FFF7FEFF 		bl	memcpy
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c ****     // Re-Enable Interrupt
3082:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 487


 22179              		.loc 1 3082 0
 22180 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
3083:..\src/command_processing.c **** 
3084:..\src/command_processing.c ****     return ret_val;
 22181              		.loc 1 3084 0
 22182 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
3085:..\src/command_processing.c **** }
 22183              		.loc 1 3085 0
 22184 0088 1846     		mov	r0, r3
 22185 008a 1837     		adds	r7, r7, #24
 22186              		.cfi_def_cfa_offset 8
 22187 008c BD46     		mov	sp, r7
 22188              		.cfi_def_cfa_register 13
 22189              		@ sp needed
 22190 008e 80BD     		pop	{r7, pc}
 22191              	.L841:
 22192              		.align	2
 22193              	.L840:
 22194 0090 00000000 		.word	c_mem
 22195 0094 00000000 		.word	g_mem
 22196              		.cfi_endproc
 22197              	.LFE86:
 22198              		.size	memStore, .-memStore
 22199              		.section	.text.memRecall,"ax",%progbits
 22200              		.align	2
 22201              		.global	memRecall
 22202              		.thumb
 22203              		.thumb_func
 22204              		.type	memRecall, %function
 22205              	memRecall:
 22206              	.LFB87:
3086:..\src/command_processing.c **** 
3087:..\src/command_processing.c **** 
3088:..\src/command_processing.c **** //==============================================================================
3089:..\src/command_processing.c **** //                                                                 RECALL MEMORY
3090:..\src/command_processing.c **** //==============================================================================
3091:..\src/command_processing.c **** 
3092:..\src/command_processing.c **** 
3093:..\src/command_processing.c **** void memRecall(void)
3094:..\src/command_processing.c **** {
 22207              		.loc 1 3094 0
 22208              		.cfi_startproc
 22209              		@ args = 0, pretend = 0, frame = 8
 22210              		@ frame_needed = 1, uses_anonymous_args = 0
 22211 0000 80B5     		push	{r7, lr}
 22212              		.cfi_def_cfa_offset 8
 22213              		.cfi_offset 7, -8
 22214              		.cfi_offset 14, -4
 22215 0002 82B0     		sub	sp, sp, #8
 22216              		.cfi_def_cfa_offset 16
 22217 0004 00AF     		add	r7, sp, #0
 22218              		.cfi_def_cfa_register 7
3095:..\src/command_processing.c ****     uint16 i;
3096:..\src/command_processing.c **** 
3097:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22219              		.loc 1 3097 0
 22220 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 488


 22221 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22222 000a 0CE0     		b	.L843
 22223              	.L844:
3098:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22224              		.loc 1 3098 0 discriminator 3
 22225 000c FB88     		ldrh	r3, [r7, #6]
 22226 000e 184A     		ldr	r2, .L848
 22227 0010 1344     		add	r3, r3, r2
 22228 0012 184A     		ldr	r2, .L848+4
 22229 0014 1168     		ldr	r1, [r2]
 22230 0016 FA88     		ldrh	r2, [r7, #6]
 22231 0018 0A44     		add	r2, r2, r1
 22232 001a 1278     		ldrb	r2, [r2]
 22233 001c D2B2     		uxtb	r2, r2
 22234 001e 1A70     		strb	r2, [r3]
3097:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22235              		.loc 1 3097 0 discriminator 3
 22236 0020 FB88     		ldrh	r3, [r7, #6]
 22237 0022 0133     		adds	r3, r3, #1
 22238 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22239              	.L843:
3097:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22240              		.loc 1 3097 0 is_stmt 0 discriminator 1
 22241 0026 FB88     		ldrh	r3, [r7, #6]
 22242 0028 B3F53D7F 		cmp	r3, #756
 22243 002c EED3     		bcc	.L844
3099:..\src/command_processing.c ****     }
3100:..\src/command_processing.c ****     
3101:..\src/command_processing.c ****     // Recall saved user_emg structure
3102:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22244              		.loc 1 3102 0 is_stmt 1
 22245 002e 104B     		ldr	r3, .L848
 22246 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22247 0034 5B01     		lsls	r3, r3, #5
 22248 0036 03F51273 		add	r3, r3, #584
 22249 003a 0D4A     		ldr	r2, .L848
 22250 003c 1344     		add	r3, r3, r2
 22251 003e 1022     		movs	r2, #16
 22252 0040 1946     		mov	r1, r3
 22253 0042 0D48     		ldr	r0, .L848+8
 22254 0044 FFF7FEFF 		bl	memcpy
3103:..\src/command_processing.c **** 
3104:..\src/command_processing.c ****     //check for initialization
3105:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22255              		.loc 1 3105 0
 22256 0048 094B     		ldr	r3, .L848
 22257 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22258 004c 002B     		cmp	r3, #0
 22259 004e 02D1     		bne	.L845
3106:..\src/command_processing.c ****         memRestore();
 22260              		.loc 1 3106 0
 22261 0050 FFF7FEFF 		bl	memRestore
3107:..\src/command_processing.c ****     } else {
3108:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3109:..\src/command_processing.c ****     }        
3110:..\src/command_processing.c **** }
 22262              		.loc 1 3110 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 489


 22263 0054 08E0     		b	.L847
 22264              	.L845:
3108:..\src/command_processing.c ****     }        
 22265              		.loc 1 3108 0
 22266 0056 094A     		ldr	r2, .L848+12
 22267 0058 054B     		ldr	r3, .L848
 22268 005a 1046     		mov	r0, r2
 22269 005c 1946     		mov	r1, r3
 22270 005e 4FF43D73 		mov	r3, #756
 22271 0062 1A46     		mov	r2, r3
 22272 0064 FFF7FEFF 		bl	memcpy
 22273              	.L847:
 22274              		.loc 1 3110 0
 22275 0068 00BF     		nop
 22276 006a 0837     		adds	r7, r7, #8
 22277              		.cfi_def_cfa_offset 8
 22278 006c BD46     		mov	sp, r7
 22279              		.cfi_def_cfa_register 13
 22280              		@ sp needed
 22281 006e 80BD     		pop	{r7, pc}
 22282              	.L849:
 22283              		.align	2
 22284              	.L848:
 22285 0070 00000000 		.word	g_mem
 22286 0074 00000000 		.word	EEPROM_ADDR
 22287 0078 F0010000 		.word	g_mem+496
 22288 007c 00000000 		.word	c_mem
 22289              		.cfi_endproc
 22290              	.LFE87:
 22291              		.size	memRecall, .-memRecall
 22292              		.section	.text.memRestore,"ax",%progbits
 22293              		.align	2
 22294              		.global	memRestore
 22295              		.thumb
 22296              		.thumb_func
 22297              		.type	memRestore, %function
 22298              	memRestore:
 22299              	.LFB88:
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c **** 
3113:..\src/command_processing.c **** //==============================================================================
3114:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3115:..\src/command_processing.c **** //==============================================================================
3116:..\src/command_processing.c **** 
3117:..\src/command_processing.c **** 
3118:..\src/command_processing.c **** uint8 memRestore(void) {
 22300              		.loc 1 3118 0
 22301              		.cfi_startproc
 22302              		@ args = 0, pretend = 0, frame = 8
 22303              		@ frame_needed = 1, uses_anonymous_args = 0
 22304 0000 80B5     		push	{r7, lr}
 22305              		.cfi_def_cfa_offset 8
 22306              		.cfi_offset 7, -8
 22307              		.cfi_offset 14, -4
 22308 0002 82B0     		sub	sp, sp, #8
 22309              		.cfi_def_cfa_offset 16
 22310 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 490


 22311              		.cfi_def_cfa_register 7
3119:..\src/command_processing.c ****     uint16 i;
3120:..\src/command_processing.c **** 
3121:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22312              		.loc 1 3121 0
 22313 0006 0023     		movs	r3, #0
 22314 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22315 000a 0EE0     		b	.L851
 22316              	.L852:
3122:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22317              		.loc 1 3122 0 discriminator 3
 22318 000c FB88     		ldrh	r3, [r7, #6]
 22319 000e 114A     		ldr	r2, .L855
 22320 0010 1344     		add	r3, r3, r2
 22321 0012 114A     		ldr	r2, .L855+4
 22322 0014 1168     		ldr	r1, [r2]
 22323 0016 FA88     		ldrh	r2, [r7, #6]
 22324 0018 02F54872 		add	r2, r2, #800
 22325 001c 0A44     		add	r2, r2, r1
 22326 001e 1278     		ldrb	r2, [r2]
 22327 0020 D2B2     		uxtb	r2, r2
 22328 0022 1A70     		strb	r2, [r3]
3121:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22329              		.loc 1 3121 0 discriminator 3
 22330 0024 FB88     		ldrh	r3, [r7, #6]
 22331 0026 0133     		adds	r3, r3, #1
 22332 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22333              	.L851:
3121:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22334              		.loc 1 3121 0 is_stmt 0 discriminator 1
 22335 002a FB88     		ldrh	r3, [r7, #6]
 22336 002c B3F53D7F 		cmp	r3, #756
 22337 0030 ECD3     		bcc	.L852
3123:..\src/command_processing.c ****     }
3124:..\src/command_processing.c **** 
3125:..\src/command_processing.c ****     //check for initialization
3126:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22338              		.loc 1 3126 0 is_stmt 1
 22339 0032 084B     		ldr	r3, .L855
 22340 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22341 0036 002B     		cmp	r3, #0
 22342 0038 03D1     		bne	.L853
3127:..\src/command_processing.c ****         return memInit();
 22343              		.loc 1 3127 0
 22344 003a FFF7FEFF 		bl	memInit
 22345 003e 0346     		mov	r3, r0
 22346 0040 03E0     		b	.L854
 22347              	.L853:
3128:..\src/command_processing.c ****     } else {
3129:..\src/command_processing.c ****         return memStore(0);
 22348              		.loc 1 3129 0
 22349 0042 0020     		movs	r0, #0
 22350 0044 FFF7FEFF 		bl	memStore
 22351 0048 0346     		mov	r3, r0
 22352              	.L854:
3130:..\src/command_processing.c ****     }  
3131:..\src/command_processing.c **** }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 491


 22353              		.loc 1 3131 0
 22354 004a 1846     		mov	r0, r3
 22355 004c 0837     		adds	r7, r7, #8
 22356              		.cfi_def_cfa_offset 8
 22357 004e BD46     		mov	sp, r7
 22358              		.cfi_def_cfa_register 13
 22359              		@ sp needed
 22360 0050 80BD     		pop	{r7, pc}
 22361              	.L856:
 22362 0052 00BF     		.align	2
 22363              	.L855:
 22364 0054 00000000 		.word	g_mem
 22365 0058 00000000 		.word	EEPROM_ADDR
 22366              		.cfi_endproc
 22367              	.LFE88:
 22368              		.size	memRestore, .-memRestore
 22369              		.section	.rodata
 22370 1f73 00       		.align	2
 22371              	.LC298:
 22372 1f74 47454E30 		.ascii	"GEN001\000"
 22372      303100
 22373              		.section	.text.memInit,"ax",%progbits
 22374              		.align	2
 22375              		.global	memInit
 22376              		.thumb
 22377              		.thumb_func
 22378              		.type	memInit, %function
 22379              	memInit:
 22380              	.LFB89:
3132:..\src/command_processing.c **** 
3133:..\src/command_processing.c **** //==============================================================================
3134:..\src/command_processing.c **** //                                                                   MEMORY INIT
3135:..\src/command_processing.c **** //==============================================================================
3136:..\src/command_processing.c **** 
3137:..\src/command_processing.c **** uint8 memInit(void)
3138:..\src/command_processing.c **** {
 22381              		.loc 1 3138 0
 22382              		.cfi_startproc
 22383              		@ args = 0, pretend = 0, frame = 8
 22384              		@ frame_needed = 1, uses_anonymous_args = 0
 22385 0000 80B5     		push	{r7, lr}
 22386              		.cfi_def_cfa_offset 8
 22387              		.cfi_offset 7, -8
 22388              		.cfi_offset 14, -4
 22389 0002 82B0     		sub	sp, sp, #8
 22390              		.cfi_def_cfa_offset 16
 22391 0004 00AF     		add	r7, sp, #0
 22392              		.cfi_def_cfa_register 7
3139:..\src/command_processing.c ****     uint8 i, j;
3140:..\src/command_processing.c **** 
3141:..\src/command_processing.c ****     //initialize memory settings
3142:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22393              		.loc 1 3142 0
 22394 0006 0023     		movs	r3, #0
 22395 0008 FB71     		strb	r3, [r7, #7]
 22396 000a 07E0     		b	.L858
 22397              	.L859:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 492


3143:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22398              		.loc 1 3143 0 discriminator 3
 22399 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22400 000e B44A     		ldr	r2, .L884
 22401 0010 1344     		add	r3, r3, r2
 22402 0012 0022     		movs	r2, #0
 22403 0014 5A70     		strb	r2, [r3, #1]
3142:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22404              		.loc 1 3142 0 discriminator 3
 22405 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22406 0018 0133     		adds	r3, r3, #1
 22407 001a FB71     		strb	r3, [r7, #7]
 22408              	.L858:
3142:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22409              		.loc 1 3142 0 is_stmt 0 discriminator 1
 22410 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22411 001e 0E2B     		cmp	r3, #14
 22412 0020 F4D9     		bls	.L859
3144:..\src/command_processing.c ****     }
3145:..\src/command_processing.c ****         
3146:..\src/command_processing.c ****     // DEV STRUCT
3147:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22413              		.loc 1 3147 0 is_stmt 1
 22414 0022 AF4B     		ldr	r3, .L884
 22415 0024 0122     		movs	r2, #1
 22416 0026 83F8A020 		strb	r2, [r3, #160]
3148:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22417              		.loc 1 3148 0
 22418 002a AD4B     		ldr	r3, .L884
 22419 002c 0022     		movs	r2, #0
 22420 002e 83F8A720 		strb	r2, [r3, #167]
3149:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22421              		.loc 1 3149 0
 22422 0032 AB4B     		ldr	r3, .L884
 22423 0034 0122     		movs	r2, #1
 22424 0036 83F8AC20 		strb	r2, [r3, #172]
3150:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22425              		.loc 1 3150 0
 22426 003a A94B     		ldr	r3, .L884
 22427 003c 0022     		movs	r2, #0
 22428 003e 83F8A820 		strb	r2, [r3, #168]
3151:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22429              		.loc 1 3151 0
 22430 0042 FFF7FEFF 		bl	reset_counters
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22431              		.loc 1 3152 0
 22432 0046 0023     		movs	r3, #0
 22433 0048 FB71     		strb	r3, [r7, #7]
 22434 004a 08E0     		b	.L860
 22435              	.L861:
3153:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22436              		.loc 1 3153 0 discriminator 3
 22437 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22438 004e A44A     		ldr	r2, .L884
 22439 0050 1344     		add	r3, r3, r2
 22440 0052 0022     		movs	r2, #0
 22441 0054 83F88020 		strb	r2, [r3, #128]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 493


3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22442              		.loc 1 3152 0 discriminator 3
 22443 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22444 005a 0133     		adds	r3, r3, #1
 22445 005c FB71     		strb	r3, [r7, #7]
 22446              	.L860:
3152:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*EEPROM_AFTER_CNT_FREE_ROWS; i++){
 22447              		.loc 1 3152 0 is_stmt 0 discriminator 1
 22448 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22449 0060 1F2B     		cmp	r3, #31
 22450 0062 F3D9     		bls	.L861
3154:..\src/command_processing.c ****     }
3155:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22451              		.loc 1 3155 0 is_stmt 1
 22452 0064 9E4B     		ldr	r3, .L884
 22453 0066 0022     		movs	r2, #0
 22454 0068 83F8A920 		strb	r2, [r3, #169]
3156:..\src/command_processing.c **** 
3157:..\src/command_processing.c ****     // MOTOR STRUCT
3158:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22455              		.loc 1 3158 0
 22456 006c 0023     		movs	r3, #0
 22457 006e FB71     		strb	r3, [r7, #7]
 22458 0070 15E1     		b	.L862
 22459              	.L865:
3159:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22460              		.loc 1 3159 0
 22461 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22462 0074 9A49     		ldr	r1, .L884
 22463 0076 1346     		mov	r3, r2
 22464 0078 DB00     		lsls	r3, r3, #3
 22465 007a 9B1A     		subs	r3, r3, r2
 22466 007c 1B01     		lsls	r3, r3, #4
 22467 007e 0B44     		add	r3, r3, r1
 22468 0080 B033     		adds	r3, r3, #176
 22469 0082 40F23942 		movw	r2, #1081
 22470 0086 1A60     		str	r2, [r3]
3160:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22471              		.loc 1 3160 0
 22472 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22473 008a 9549     		ldr	r1, .L884
 22474 008c 1346     		mov	r3, r2
 22475 008e DB00     		lsls	r3, r3, #3
 22476 0090 9B1A     		subs	r3, r3, r2
 22477 0092 1B01     		lsls	r3, r3, #4
 22478 0094 0B44     		add	r3, r3, r1
 22479 0096 B433     		adds	r3, r3, #180
 22480 0098 0022     		movs	r2, #0
 22481 009a 1A60     		str	r2, [r3]
3161:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22482              		.loc 1 3161 0
 22483 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22484 009e 9049     		ldr	r1, .L884
 22485 00a0 1346     		mov	r3, r2
 22486 00a2 DB00     		lsls	r3, r3, #3
 22487 00a4 9B1A     		subs	r3, r3, r2
 22488 00a6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 494


 22489 00a8 0B44     		add	r3, r3, r1
 22490 00aa B833     		adds	r3, r3, #184
 22491 00ac 4FF4E572 		mov	r2, #458
 22492 00b0 1A60     		str	r2, [r3]
3162:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22493              		.loc 1 3162 0
 22494 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22495 00b4 8A49     		ldr	r1, .L884
 22496 00b6 1346     		mov	r3, r2
 22497 00b8 DB00     		lsls	r3, r3, #3
 22498 00ba 9B1A     		subs	r3, r3, r2
 22499 00bc 1B01     		lsls	r3, r3, #4
 22500 00be 0B44     		add	r3, r3, r1
 22501 00c0 BC33     		adds	r3, r3, #188
 22502 00c2 4FF48032 		mov	r2, #65536
 22503 00c6 1A60     		str	r2, [r3]
3163:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22504              		.loc 1 3163 0
 22505 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22506 00ca 8549     		ldr	r1, .L884
 22507 00cc 1346     		mov	r3, r2
 22508 00ce DB00     		lsls	r3, r3, #3
 22509 00d0 9B1A     		subs	r3, r3, r2
 22510 00d2 1B01     		lsls	r3, r3, #4
 22511 00d4 0B44     		add	r3, r3, r1
 22512 00d6 C033     		adds	r3, r3, #192
 22513 00d8 4122     		movs	r2, #65
 22514 00da 1A60     		str	r2, [r3]
3164:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22515              		.loc 1 3164 0
 22516 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22517 00de 8049     		ldr	r1, .L884
 22518 00e0 1346     		mov	r3, r2
 22519 00e2 DB00     		lsls	r3, r3, #3
 22520 00e4 9B1A     		subs	r3, r3, r2
 22521 00e6 1B01     		lsls	r3, r3, #4
 22522 00e8 0B44     		add	r3, r3, r1
 22523 00ea C433     		adds	r3, r3, #196
 22524 00ec 0022     		movs	r2, #0
 22525 00ee 1A60     		str	r2, [r3]
3165:..\src/command_processing.c **** 
3166:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22526              		.loc 1 3166 0
 22527 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22528 00f2 7B49     		ldr	r1, .L884
 22529 00f4 1346     		mov	r3, r2
 22530 00f6 DB00     		lsls	r3, r3, #3
 22531 00f8 9B1A     		subs	r3, r3, r2
 22532 00fa 1B01     		lsls	r3, r3, #4
 22533 00fc 0B44     		add	r3, r3, r1
 22534 00fe C833     		adds	r3, r3, #200
 22535 0100 41F69912 		movw	r2, #6553
 22536 0104 1A60     		str	r2, [r3]
3167:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22537              		.loc 1 3167 0
 22538 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22539 0108 7549     		ldr	r1, .L884
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 495


 22540 010a 1346     		mov	r3, r2
 22541 010c DB00     		lsls	r3, r3, #3
 22542 010e 9B1A     		subs	r3, r3, r2
 22543 0110 1B01     		lsls	r3, r3, #4
 22544 0112 0B44     		add	r3, r3, r1
 22545 0114 CC33     		adds	r3, r3, #204
 22546 0116 0022     		movs	r2, #0
 22547 0118 1A60     		str	r2, [r3]
3168:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22548              		.loc 1 3168 0
 22549 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22550 011c 7049     		ldr	r1, .L884
 22551 011e 1346     		mov	r3, r2
 22552 0120 DB00     		lsls	r3, r3, #3
 22553 0122 9B1A     		subs	r3, r3, r2
 22554 0124 1B01     		lsls	r3, r3, #4
 22555 0126 0B44     		add	r3, r3, r1
 22556 0128 D033     		adds	r3, r3, #208
 22557 012a 0022     		movs	r2, #0
 22558 012c 1A60     		str	r2, [r3]
3169:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22559              		.loc 1 3169 0
 22560 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22561 0130 6B49     		ldr	r1, .L884
 22562 0132 1346     		mov	r3, r2
 22563 0134 DB00     		lsls	r3, r3, #3
 22564 0136 9B1A     		subs	r3, r3, r2
 22565 0138 1B01     		lsls	r3, r3, #4
 22566 013a 0B44     		add	r3, r3, r1
 22567 013c D433     		adds	r3, r3, #212
 22568 013e 44F6CC42 		movw	r2, #19660
 22569 0142 1A60     		str	r2, [r3]
3170:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22570              		.loc 1 3170 0
 22571 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22572 0146 6649     		ldr	r1, .L884
 22573 0148 1346     		mov	r3, r2
 22574 014a DB00     		lsls	r3, r3, #3
 22575 014c 9B1A     		subs	r3, r3, r2
 22576 014e 1B01     		lsls	r3, r3, #4
 22577 0150 0B44     		add	r3, r3, r1
 22578 0152 D833     		adds	r3, r3, #216
 22579 0154 0D22     		movs	r2, #13
 22580 0156 1A60     		str	r2, [r3]
3171:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22581              		.loc 1 3171 0
 22582 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22583 015a 6149     		ldr	r1, .L884
 22584 015c 1346     		mov	r3, r2
 22585 015e DB00     		lsls	r3, r3, #3
 22586 0160 9B1A     		subs	r3, r3, r2
 22587 0162 1B01     		lsls	r3, r3, #4
 22588 0164 0B44     		add	r3, r3, r1
 22589 0166 DC33     		adds	r3, r3, #220
 22590 0168 0022     		movs	r2, #0
 22591 016a 1A60     		str	r2, [r3]
3172:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 496


3173:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22592              		.loc 1 3173 0
 22593 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22594 016e 5C49     		ldr	r1, .L884
 22595 0170 1346     		mov	r3, r2
 22596 0172 DB00     		lsls	r3, r3, #3
 22597 0174 9B1A     		subs	r3, r3, r2
 22598 0176 1B01     		lsls	r3, r3, #4
 22599 0178 0B44     		add	r3, r3, r1
 22600 017a E033     		adds	r3, r3, #224
 22601 017c 0122     		movs	r2, #1
 22602 017e 1A70     		strb	r2, [r3]
3174:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22603              		.loc 1 3174 0
 22604 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22605 0182 5749     		ldr	r1, .L884
 22606 0184 1346     		mov	r3, r2
 22607 0186 DB00     		lsls	r3, r3, #3
 22608 0188 9B1A     		subs	r3, r3, r2
 22609 018a 1B01     		lsls	r3, r3, #4
 22610 018c 0B44     		add	r3, r3, r1
 22611 018e E133     		adds	r3, r3, #225
 22612 0190 0022     		movs	r2, #0
 22613 0192 1A70     		strb	r2, [r3]
3175:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22614              		.loc 1 3175 0
 22615 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22616 0196 5249     		ldr	r1, .L884
 22617 0198 1346     		mov	r3, r2
 22618 019a DB00     		lsls	r3, r3, #3
 22619 019c 9B1A     		subs	r3, r3, r2
 22620 019e 1B01     		lsls	r3, r3, #4
 22621 01a0 0B44     		add	r3, r3, r1
 22622 01a2 E233     		adds	r3, r3, #226
 22623 01a4 0022     		movs	r2, #0
 22624 01a6 1A70     		strb	r2, [r3]
3176:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22625              		.loc 1 3176 0
 22626 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22627 01aa 4D49     		ldr	r1, .L884
 22628 01ac 1346     		mov	r3, r2
 22629 01ae DB00     		lsls	r3, r3, #3
 22630 01b0 9B1A     		subs	r3, r3, r2
 22631 01b2 1B01     		lsls	r3, r3, #4
 22632 01b4 0B44     		add	r3, r3, r1
 22633 01b6 03F58773 		add	r3, r3, #270
 22634 01ba 0022     		movs	r2, #0
 22635 01bc 1A70     		strb	r2, [r3]
3177:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22636              		.loc 1 3177 0
 22637 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22638 01c0 4749     		ldr	r1, .L884
 22639 01c2 1346     		mov	r3, r2
 22640 01c4 DB00     		lsls	r3, r3, #3
 22641 01c6 9B1A     		subs	r3, r3, r2
 22642 01c8 1B01     		lsls	r3, r3, #4
 22643 01ca 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 497


 22644 01cc 03F20F13 		addw	r3, r3, #271
 22645 01d0 0022     		movs	r2, #0
 22646 01d2 1A70     		strb	r2, [r3]
3178:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22647              		.loc 1 3178 0
 22648 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22649 01d6 4249     		ldr	r1, .L884
 22650 01d8 1346     		mov	r3, r2
 22651 01da DB00     		lsls	r3, r3, #3
 22652 01dc 9B1A     		subs	r3, r3, r2
 22653 01de 1B01     		lsls	r3, r3, #4
 22654 01e0 0B44     		add	r3, r3, r1
 22655 01e2 F033     		adds	r3, r3, #240
 22656 01e4 0022     		movs	r2, #0
 22657 01e6 1A60     		str	r2, [r3]
3179:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22658              		.loc 1 3179 0
 22659 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22660 01ea 3D49     		ldr	r1, .L884
 22661 01ec 1346     		mov	r3, r2
 22662 01ee DB00     		lsls	r3, r3, #3
 22663 01f0 9B1A     		subs	r3, r3, r2
 22664 01f2 1B01     		lsls	r3, r3, #4
 22665 01f4 0B44     		add	r3, r3, r1
 22666 01f6 EC33     		adds	r3, r3, #236
 22667 01f8 0022     		movs	r2, #0
 22668 01fa 1A60     		str	r2, [r3]
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22669              		.loc 1 3180 0
 22670 01fc 0023     		movs	r3, #0
 22671 01fe BB71     		strb	r3, [r7, #6]
 22672 0200 10E0     		b	.L863
 22673              	.L864:
3181:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22674              		.loc 1 3181 0 discriminator 3
 22675 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22676 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22677 0206 3648     		ldr	r0, .L884
 22678 0208 1346     		mov	r3, r2
 22679 020a DB00     		lsls	r3, r3, #3
 22680 020c 9B1A     		subs	r3, r3, r2
 22681 020e 9B00     		lsls	r3, r3, #2
 22682 0210 0B44     		add	r3, r3, r1
 22683 0212 3C33     		adds	r3, r3, #60
 22684 0214 9B00     		lsls	r3, r3, #2
 22685 0216 0344     		add	r3, r3, r0
 22686 0218 4FF00002 		mov	r2, #0
 22687 021c 5A60     		str	r2, [r3, #4]	@ float
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22688              		.loc 1 3180 0 discriminator 3
 22689 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22690 0220 0133     		adds	r3, r3, #1
 22691 0222 BB71     		strb	r3, [r7, #6]
 22692              	.L863:
3180:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22693              		.loc 1 3180 0 is_stmt 0 discriminator 1
 22694 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 498


 22695 0226 052B     		cmp	r3, #5
 22696 0228 EBD9     		bls	.L864
3182:..\src/command_processing.c ****         }
3183:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22697              		.loc 1 3183 0 is_stmt 1 discriminator 2
 22698 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22699 022c 2C49     		ldr	r1, .L884
 22700 022e 1346     		mov	r3, r2
 22701 0230 DB00     		lsls	r3, r3, #3
 22702 0232 9B1A     		subs	r3, r3, r2
 22703 0234 1B01     		lsls	r3, r3, #4
 22704 0236 0B44     		add	r3, r3, r1
 22705 0238 03F58673 		add	r3, r3, #268
 22706 023c 40F2DC52 		movw	r2, #1500
 22707 0240 1A80     		strh	r2, [r3]	@ movhi
3184:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22708              		.loc 1 3184 0 discriminator 2
 22709 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22710 0244 2649     		ldr	r1, .L884
 22711 0246 1346     		mov	r3, r2
 22712 0248 DB00     		lsls	r3, r3, #3
 22713 024a 9B1A     		subs	r3, r3, r2
 22714 024c 1B01     		lsls	r3, r3, #4
 22715 024e 0B44     		add	r3, r3, r1
 22716 0250 03F58873 		add	r3, r3, #272
 22717 0254 FA79     		ldrb	r2, [r7, #7]
 22718 0256 1A70     		strb	r2, [r3]
3185:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22719              		.loc 1 3185 0 discriminator 2
 22720 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22721 025a 2149     		ldr	r1, .L884
 22722 025c 1346     		mov	r3, r2
 22723 025e DB00     		lsls	r3, r3, #3
 22724 0260 9B1A     		subs	r3, r3, r2
 22725 0262 1B01     		lsls	r3, r3, #4
 22726 0264 0B44     		add	r3, r3, r1
 22727 0266 E333     		adds	r3, r3, #227
 22728 0268 0122     		movs	r2, #1
 22729 026a 1A70     		strb	r2, [r3]
3186:..\src/command_processing.c ****         
3187:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22730              		.loc 1 3187 0 discriminator 2
 22731 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22732 026e 1C49     		ldr	r1, .L884
 22733 0270 1346     		mov	r3, r2
 22734 0272 DB00     		lsls	r3, r3, #3
 22735 0274 9B1A     		subs	r3, r3, r2
 22736 0276 1B01     		lsls	r3, r3, #4
 22737 0278 0B44     		add	r3, r3, r1
 22738 027a 03F21113 		addw	r3, r3, #273
 22739 027e 0122     		movs	r2, #1
 22740 0280 1A70     		strb	r2, [r3]
3188:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22741              		.loc 1 3188 0 discriminator 2
 22742 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22743 0284 1649     		ldr	r1, .L884
 22744 0286 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 499


 22745 0288 DB00     		lsls	r3, r3, #3
 22746 028a 9B1A     		subs	r3, r3, r2
 22747 028c 1B01     		lsls	r3, r3, #4
 22748 028e 0B44     		add	r3, r3, r1
 22749 0290 03F58973 		add	r3, r3, #274
 22750 0294 0022     		movs	r2, #0
 22751 0296 1A70     		strb	r2, [r3]
3158:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22752              		.loc 1 3158 0 discriminator 2
 22753 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22754 029a 0133     		adds	r3, r3, #1
 22755 029c FB71     		strb	r3, [r7, #7]
 22756              	.L862:
3158:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22757              		.loc 1 3158 0 is_stmt 0 discriminator 1
 22758 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22759 02a0 012B     		cmp	r3, #1
 22760 02a2 7FF6E6AE 		bls	.L865
3189:..\src/command_processing.c ****     }
3190:..\src/command_processing.c ****     
3191:..\src/command_processing.c ****     // ENC STRUCT
3192:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22761              		.loc 1 3192 0 is_stmt 1
 22762 02a6 0023     		movs	r3, #0
 22763 02a8 FB71     		strb	r3, [r7, #7]
 22764 02aa 98E0     		b	.L866
 22765              	.L873:
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22766              		.loc 1 3193 0
 22767 02ac 0023     		movs	r3, #0
 22768 02ae BB71     		strb	r3, [r7, #6]
 22769 02b0 0FE0     		b	.L867
 22770              	.L868:
3194:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22771              		.loc 1 3194 0 discriminator 3
 22772 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22773 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22774 02b6 0A48     		ldr	r0, .L884
 22775 02b8 1346     		mov	r3, r2
 22776 02ba 5B00     		lsls	r3, r3, #1
 22777 02bc 1344     		add	r3, r3, r2
 22778 02be 1B01     		lsls	r3, r3, #4
 22779 02c0 0344     		add	r3, r3, r0
 22780 02c2 0B44     		add	r3, r3, r1
 22781 02c4 03F5C873 		add	r3, r3, #400
 22782 02c8 0022     		movs	r2, #0
 22783 02ca 1A70     		strb	r2, [r3]
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22784              		.loc 1 3193 0 discriminator 3
 22785 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22786 02ce 0133     		adds	r3, r3, #1
 22787 02d0 BB71     		strb	r3, [r7, #6]
 22788              	.L867:
3193:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22789              		.loc 1 3193 0 is_stmt 0 discriminator 1
 22790 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22791 02d4 042B     		cmp	r3, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 500


 22792 02d6 ECD9     		bls	.L868
3195:..\src/command_processing.c ****         }
3196:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22793              		.loc 1 3196 0 is_stmt 1
 22794 02d8 0023     		movs	r3, #0
 22795 02da BB71     		strb	r3, [r7, #6]
 22796 02dc 2CE0     		b	.L869
 22797              	.L885:
 22798 02de 00BF     		.align	2
 22799              	.L884:
 22800 02e0 00000000 		.word	g_mem
 22801              	.L870:
3197:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22802              		.loc 1 3197 0 discriminator 3
 22803 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22804 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22805 02e8 A548     		ldr	r0, .L886
 22806 02ea 1346     		mov	r3, r2
 22807 02ec 5B00     		lsls	r3, r3, #1
 22808 02ee 1344     		add	r3, r3, r2
 22809 02f0 1B01     		lsls	r3, r3, #4
 22810 02f2 0344     		add	r3, r3, r0
 22811 02f4 0B44     		add	r3, r3, r1
 22812 02f6 03F29513 		addw	r3, r3, #405
 22813 02fa 0322     		movs	r2, #3
 22814 02fc 1A70     		strb	r2, [r3]
3198:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22815              		.loc 1 3198 0 discriminator 3
 22816 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22817 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22818 0302 9F48     		ldr	r0, .L886
 22819 0304 1346     		mov	r3, r2
 22820 0306 5B00     		lsls	r3, r3, #1
 22821 0308 1344     		add	r3, r3, r2
 22822 030a 9B00     		lsls	r3, r3, #2
 22823 030c 0B44     		add	r3, r3, r1
 22824 030e 6833     		adds	r3, r3, #104
 22825 0310 9B00     		lsls	r3, r3, #2
 22826 0312 0344     		add	r3, r3, r0
 22827 0314 4FF07E52 		mov	r2, #1065353216
 22828 0318 5A60     		str	r2, [r3, #4]	@ float
3199:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22829              		.loc 1 3199 0 discriminator 3
 22830 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22831 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22832 031e 9848     		ldr	r0, .L886
 22833 0320 1346     		mov	r3, r2
 22834 0322 5B00     		lsls	r3, r3, #1
 22835 0324 1344     		add	r3, r3, r2
 22836 0326 9B00     		lsls	r3, r3, #2
 22837 0328 0B44     		add	r3, r3, r1
 22838 032a 6633     		adds	r3, r3, #102
 22839 032c 0022     		movs	r2, #0
 22840 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3196:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22841              		.loc 1 3196 0 discriminator 3
 22842 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 501


 22843 0334 0133     		adds	r3, r3, #1
 22844 0336 BB71     		strb	r3, [r7, #6]
 22845              	.L869:
3196:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22846              		.loc 1 3196 0 is_stmt 0 discriminator 1
 22847 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22848 033a 022B     		cmp	r3, #2
 22849 033c D2D9     		bls	.L870
3200:..\src/command_processing.c ****         }
3201:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22850              		.loc 1 3201 0 is_stmt 1
 22851 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22852 0340 8F49     		ldr	r1, .L886
 22853 0342 1346     		mov	r3, r2
 22854 0344 5B00     		lsls	r3, r3, #1
 22855 0346 1344     		add	r3, r3, r2
 22856 0348 1B01     		lsls	r3, r3, #4
 22857 034a 0B44     		add	r3, r3, r1
 22858 034c 03F5D873 		add	r3, r3, #432
 22859 0350 0022     		movs	r2, #0
 22860 0352 1A70     		strb	r2, [r3]
3202:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22861              		.loc 1 3202 0
 22862 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22863 0356 8A49     		ldr	r1, .L886
 22864 0358 1346     		mov	r3, r2
 22865 035a 5B00     		lsls	r3, r3, #1
 22866 035c 1344     		add	r3, r3, r2
 22867 035e 1B01     		lsls	r3, r3, #4
 22868 0360 0B44     		add	r3, r3, r1
 22869 0362 03F5DA73 		add	r3, r3, #436
 22870 0366 1622     		movs	r2, #22
 22871 0368 1A70     		strb	r2, [r3]
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22872              		.loc 1 3203 0
 22873 036a 0023     		movs	r3, #0
 22874 036c BB71     		strb	r3, [r7, #6]
 22875 036e 0FE0     		b	.L871
 22876              	.L872:
3204:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22877              		.loc 1 3204 0 discriminator 3
 22878 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22879 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22880 0374 8248     		ldr	r0, .L886
 22881 0376 1346     		mov	r3, r2
 22882 0378 5B00     		lsls	r3, r3, #1
 22883 037a 1344     		add	r3, r3, r2
 22884 037c 1B01     		lsls	r3, r3, #4
 22885 037e 0344     		add	r3, r3, r0
 22886 0380 0B44     		add	r3, r3, r1
 22887 0382 03F2B113 		addw	r3, r3, #433
 22888 0386 BA79     		ldrb	r2, [r7, #6]
 22889 0388 1A70     		strb	r2, [r3]
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22890              		.loc 1 3203 0 discriminator 3
 22891 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22892 038c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 502


 22893 038e BB71     		strb	r3, [r7, #6]
 22894              	.L871:
3203:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22895              		.loc 1 3203 0 is_stmt 0 discriminator 1
 22896 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22897 0392 022B     		cmp	r3, #2
 22898 0394 ECD9     		bls	.L872
3205:..\src/command_processing.c ****         }
3206:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22899              		.loc 1 3206 0 is_stmt 1 discriminator 2
 22900 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22901 0398 7949     		ldr	r1, .L886
 22902 039a 1346     		mov	r3, r2
 22903 039c 5B00     		lsls	r3, r3, #1
 22904 039e 1344     		add	r3, r3, r2
 22905 03a0 1B01     		lsls	r3, r3, #4
 22906 03a2 0B44     		add	r3, r3, r1
 22907 03a4 03F2B513 		addw	r3, r3, #437
 22908 03a8 0F22     		movs	r2, #15
 22909 03aa 1A70     		strb	r2, [r3]
3207:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22910              		.loc 1 3207 0 discriminator 2
 22911 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22912 03ae 7449     		ldr	r1, .L886
 22913 03b0 1346     		mov	r3, r2
 22914 03b2 5B00     		lsls	r3, r3, #1
 22915 03b4 1344     		add	r3, r3, r2
 22916 03b6 1B01     		lsls	r3, r3, #4
 22917 03b8 0B44     		add	r3, r3, r1
 22918 03ba 03F5DB73 		add	r3, r3, #438
 22919 03be 0E22     		movs	r2, #14
 22920 03c0 1A70     		strb	r2, [r3]
3208:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22921              		.loc 1 3208 0 discriminator 2
 22922 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22923 03c4 6E49     		ldr	r1, .L886
 22924 03c6 1346     		mov	r3, r2
 22925 03c8 5B00     		lsls	r3, r3, #1
 22926 03ca 1344     		add	r3, r3, r2
 22927 03cc 1B01     		lsls	r3, r3, #4
 22928 03ce 0B44     		add	r3, r3, r1
 22929 03d0 03F2B713 		addw	r3, r3, #439
 22930 03d4 0122     		movs	r2, #1
 22931 03d6 1A70     		strb	r2, [r3]
3192:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22932              		.loc 1 3192 0 discriminator 2
 22933 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22934 03da 0133     		adds	r3, r3, #1
 22935 03dc FB71     		strb	r3, [r7, #7]
 22936              	.L866:
3192:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22937              		.loc 1 3192 0 is_stmt 0 discriminator 1
 22938 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22939 03e0 012B     		cmp	r3, #1
 22940 03e2 7FF663AF 		bls	.L873
3209:..\src/command_processing.c ****     }
3210:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 503


3211:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22941              		.loc 1 3211 0 is_stmt 1
 22942 03e6 0023     		movs	r3, #0
 22943 03e8 FB71     		strb	r3, [r7, #7]
 22944 03ea 2EE0     		b	.L874
 22945              	.L875:
3212:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22946              		.loc 1 3212 0 discriminator 3
 22947 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22948 03ee 6449     		ldr	r1, .L886
 22949 03f0 1346     		mov	r3, r2
 22950 03f2 DB00     		lsls	r3, r3, #3
 22951 03f4 9B1A     		subs	r3, r3, r2
 22952 03f6 1B01     		lsls	r3, r3, #4
 22953 03f8 0B44     		add	r3, r3, r1
 22954 03fa E433     		adds	r3, r3, #228
 22955 03fc 0022     		movs	r2, #0
 22956 03fe 1A60     		str	r2, [r3]
3213:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 22957              		.loc 1 3213 0 discriminator 3
 22958 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22959 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 22960 0404 5E48     		ldr	r0, .L886
 22961 0406 0B46     		mov	r3, r1
 22962 0408 DB00     		lsls	r3, r3, #3
 22963 040a 5B1A     		subs	r3, r3, r1
 22964 040c 1B01     		lsls	r3, r3, #4
 22965 040e 0344     		add	r3, r3, r0
 22966 0410 03F58873 		add	r3, r3, #272
 22967 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22968 0416 1846     		mov	r0, r3
 22969 0418 5949     		ldr	r1, .L886
 22970 041a 0346     		mov	r3, r0
 22971 041c 5B00     		lsls	r3, r3, #1
 22972 041e 0344     		add	r3, r3, r0
 22973 0420 1B01     		lsls	r3, r3, #4
 22974 0422 0B44     		add	r3, r3, r1
 22975 0424 03F29513 		addw	r3, r3, #405
 22976 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22977 042a 1946     		mov	r1, r3
 22978 042c 44F63823 		movw	r3, #19000
 22979 0430 03FA01F1 		lsl	r1, r3, r1
 22980 0434 5248     		ldr	r0, .L886
 22981 0436 1346     		mov	r3, r2
 22982 0438 DB00     		lsls	r3, r3, #3
 22983 043a 9B1A     		subs	r3, r3, r2
 22984 043c 1B01     		lsls	r3, r3, #4
 22985 043e 0344     		add	r3, r3, r0
 22986 0440 E833     		adds	r3, r3, #232
 22987 0442 1960     		str	r1, [r3]
3211:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22988              		.loc 1 3211 0 discriminator 3
 22989 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22990 0446 0133     		adds	r3, r3, #1
 22991 0448 FB71     		strb	r3, [r7, #7]
 22992              	.L874:
3211:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 504


 22993              		.loc 1 3211 0 is_stmt 0 discriminator 1
 22994 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22995 044c 012B     		cmp	r3, #1
 22996 044e CDD9     		bls	.L875
3214:..\src/command_processing.c ****     }
3215:..\src/command_processing.c ****     
3216:..\src/command_processing.c ****     // EMG STRUCT     
3217:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22997              		.loc 1 3217 0 is_stmt 1
 22998 0450 4B4B     		ldr	r3, .L886
 22999 0452 C822     		movs	r2, #200
 23000 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3218:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23001              		.loc 1 3218 0
 23002 0458 494B     		ldr	r3, .L886
 23003 045a C822     		movs	r2, #200
 23004 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3219:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23005              		.loc 1 3219 0
 23006 0460 474B     		ldr	r3, .L886
 23007 0462 4FF48062 		mov	r2, #1024
 23008 0466 C3F8F421 		str	r2, [r3, #500]
3220:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 23009              		.loc 1 3220 0
 23010 046a 454B     		ldr	r3, .L886
 23011 046c 4FF48062 		mov	r2, #1024
 23012 0470 C3F8F821 		str	r2, [r3, #504]
3221:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 23013              		.loc 1 3221 0
 23014 0474 424B     		ldr	r3, .L886
 23015 0476 6422     		movs	r2, #100
 23016 0478 83F8FC21 		strb	r2, [r3, #508]
3222:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 23017              		.loc 1 3222 0
 23018 047c 404B     		ldr	r3, .L886
 23019 047e 6422     		movs	r2, #100
 23020 0480 83F8FD21 		strb	r2, [r3, #509]
3223:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23021              		.loc 1 3223 0
 23022 0484 3E4B     		ldr	r3, .L886
 23023 0486 0022     		movs	r2, #0
 23024 0488 83F8FE21 		strb	r2, [r3, #510]
3224:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23025              		.loc 1 3224 0
 23026 048c 3C4B     		ldr	r3, .L886
 23027 048e 0022     		movs	r2, #0
 23028 0490 83F8FF21 		strb	r2, [r3, #511]
3225:..\src/command_processing.c **** 
3226:..\src/command_processing.c ****     // IMU STRUCT
3227:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23029              		.loc 1 3227 0
 23030 0494 3A4B     		ldr	r3, .L886
 23031 0496 0022     		movs	r2, #0
 23032 0498 83F80022 		strb	r2, [r3, #512]
3228:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23033              		.loc 1 3228 0
 23034 049c 384B     		ldr	r3, .L886
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 505


 23035 049e 0022     		movs	r2, #0
 23036 04a0 83F80122 		strb	r2, [r3, #513]
3229:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 23037              		.loc 1 3229 0
 23038 04a4 0023     		movs	r3, #0
 23039 04a6 FB71     		strb	r3, [r7, #7]
 23040 04a8 34E0     		b	.L876
 23041              	.L877:
3230:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23042              		.loc 1 3230 0 discriminator 3
 23043 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23044 04ac 3449     		ldr	r1, .L886
 23045 04ae 1346     		mov	r3, r2
 23046 04b0 9B00     		lsls	r3, r3, #2
 23047 04b2 1344     		add	r3, r3, r2
 23048 04b4 0B44     		add	r3, r3, r1
 23049 04b6 03F20223 		addw	r3, r3, #514
 23050 04ba 0122     		movs	r2, #1
 23051 04bc 1A70     		strb	r2, [r3]
3231:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23052              		.loc 1 3231 0 discriminator 3
 23053 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23054 04c0 2F49     		ldr	r1, .L886
 23055 04c2 1346     		mov	r3, r2
 23056 04c4 9B00     		lsls	r3, r3, #2
 23057 04c6 1344     		add	r3, r3, r2
 23058 04c8 0B44     		add	r3, r3, r1
 23059 04ca 03F20323 		addw	r3, r3, #515
 23060 04ce 0122     		movs	r2, #1
 23061 04d0 1A70     		strb	r2, [r3]
3232:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 23062              		.loc 1 3232 0 discriminator 3
 23063 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23064 04d4 2A49     		ldr	r1, .L886
 23065 04d6 1346     		mov	r3, r2
 23066 04d8 9B00     		lsls	r3, r3, #2
 23067 04da 1344     		add	r3, r3, r2
 23068 04dc 0B44     		add	r3, r3, r1
 23069 04de 03F50173 		add	r3, r3, #516
 23070 04e2 0022     		movs	r2, #0
 23071 04e4 1A70     		strb	r2, [r3]
3233:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23072              		.loc 1 3233 0 discriminator 3
 23073 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23074 04e8 2549     		ldr	r1, .L886
 23075 04ea 1346     		mov	r3, r2
 23076 04ec 9B00     		lsls	r3, r3, #2
 23077 04ee 1344     		add	r3, r3, r2
 23078 04f0 0B44     		add	r3, r3, r1
 23079 04f2 03F20523 		addw	r3, r3, #517
 23080 04f6 0022     		movs	r2, #0
 23081 04f8 1A70     		strb	r2, [r3]
3234:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23082              		.loc 1 3234 0 discriminator 3
 23083 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23084 04fc 2049     		ldr	r1, .L886
 23085 04fe 1346     		mov	r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 506


 23086 0500 9B00     		lsls	r3, r3, #2
 23087 0502 1344     		add	r3, r3, r2
 23088 0504 0B44     		add	r3, r3, r1
 23089 0506 03F20623 		addw	r3, r3, #518
 23090 050a 0022     		movs	r2, #0
 23091 050c 1A70     		strb	r2, [r3]
3229:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23092              		.loc 1 3229 0 discriminator 3
 23093 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23094 0510 0133     		adds	r3, r3, #1
 23095 0512 FB71     		strb	r3, [r7, #7]
 23096              	.L876:
3229:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23097              		.loc 1 3229 0 is_stmt 0 discriminator 1
 23098 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23099 0516 042B     		cmp	r3, #4
 23100 0518 C7D9     		bls	.L877
3235:..\src/command_processing.c ****     }
3236:..\src/command_processing.c ****      
3237:..\src/command_processing.c ****     // EXP STRUCT
3238:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23101              		.loc 1 3238 0 is_stmt 1
 23102 051a 194B     		ldr	r3, .L886
 23103 051c 0022     		movs	r2, #0
 23104 051e 83F82622 		strb	r2, [r3, #550]
3239:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23105              		.loc 1 3239 0
 23106 0522 174B     		ldr	r3, .L886
 23107 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23108 0528 1233     		adds	r3, r3, #18
 23109 052a 5B01     		lsls	r3, r3, #5
 23110 052c 144A     		ldr	r2, .L886
 23111 052e 1344     		add	r3, r3, r2
 23112 0530 144A     		ldr	r2, .L886+4
 23113 0532 1068     		ldr	r0, [r2]	@ unaligned
 23114 0534 1860     		str	r0, [r3]	@ unaligned
 23115 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23116 0538 9279     		ldrb	r2, [r2, #6]
 23117 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23118 053c 9A71     		strb	r2, [r3, #6]
3240:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23119              		.loc 1 3240 0
 23120 053e 104B     		ldr	r3, .L886
 23121 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23122 0544 012B     		cmp	r3, #1
 23123 0546 13D1     		bne	.L878
3241:..\src/command_processing.c ****         // Set date of maintenance from RTC
3242:..\src/command_processing.c ****         store_RTC_current_time();
 23124              		.loc 1 3242 0
 23125 0548 FFF7FEFF 		bl	store_RTC_current_time
3243:..\src/command_processing.c ****         
3244:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23126              		.loc 1 3244 0
 23127 054c 0C4B     		ldr	r3, .L886
 23128 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23129 0552 0B4B     		ldr	r3, .L886
 23130 0554 83F8A420 		strb	r2, [r3, #164]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 507


3245:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23131              		.loc 1 3245 0
 23132 0558 094B     		ldr	r3, .L886
 23133 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23134 055e 084B     		ldr	r3, .L886
 23135 0560 83F8A520 		strb	r2, [r3, #165]
3246:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23136              		.loc 1 3246 0
 23137 0564 064B     		ldr	r3, .L886
 23138 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23139 056a 054B     		ldr	r3, .L886
 23140 056c 83F8A620 		strb	r2, [r3, #166]
 23141              	.L878:
3247:..\src/command_processing.c ****     }
3248:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23142              		.loc 1 3248 0
 23143 0570 034B     		ldr	r3, .L886
 23144 0572 0022     		movs	r2, #0
 23145 0574 83F82722 		strb	r2, [r3, #551]
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23146              		.loc 1 3249 0
 23147 0578 0023     		movs	r3, #0
 23148 057a FB71     		strb	r3, [r7, #7]
 23149 057c 0DE0     		b	.L879
 23150              	.L887:
 23151 057e 00BF     		.align	2
 23152              	.L886:
 23153 0580 00000000 		.word	g_mem
 23154 0584 741F0000 		.word	.LC298
 23155              	.L880:
3250:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23156              		.loc 1 3250 0 discriminator 3
 23157 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23158 058a 284A     		ldr	r2, .L888
 23159 058c 1344     		add	r3, r3, r2
 23160 058e 0022     		movs	r2, #0
 23161 0590 83F82822 		strb	r2, [r3, #552]
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23162              		.loc 1 3249 0 discriminator 3
 23163 0594 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23164 0596 0133     		adds	r3, r3, #1
 23165 0598 FB71     		strb	r3, [r7, #7]
 23166              	.L879:
3249:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23167              		.loc 1 3249 0 is_stmt 0 discriminator 1
 23168 059a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23169 059c 0B2B     		cmp	r3, #11
 23170 059e F3D9     		bls	.L880
3251:..\src/command_processing.c ****     }
3252:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3253:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23171              		.loc 1 3253 0 is_stmt 1
 23172 05a0 224B     		ldr	r3, .L888
 23173 05a2 0122     		movs	r2, #1
 23174 05a4 83F82A22 		strb	r2, [r3, #554]
3254:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23175              		.loc 1 3254 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 508


 23176 05a8 204B     		ldr	r3, .L888
 23177 05aa 0122     		movs	r2, #1
 23178 05ac 83F82B22 		strb	r2, [r3, #555]
3255:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23179              		.loc 1 3255 0
 23180 05b0 1E4B     		ldr	r3, .L888
 23181 05b2 0022     		movs	r2, #0
 23182 05b4 83F83422 		strb	r2, [r3, #564]
3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c ****     // WR STRUCT (default in generic fw)
3258:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23183              		.loc 1 3258 0
 23184 05b8 1C4B     		ldr	r3, .L888
 23185 05ba 0022     		movs	r2, #0
 23186 05bc 83F8E022 		strb	r2, [r3, #736]
3259:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23187              		.loc 1 3259 0
 23188 05c0 1A4B     		ldr	r3, .L888
 23189 05c2 4FF44872 		mov	r2, #800
 23190 05c6 A3F8E222 		strh	r2, [r3, #738]	@ movhi
3260:..\src/command_processing.c **** 
3261:..\src/command_processing.c **** 
3262:..\src/command_processing.c **** 
3263:..\src/command_processing.c **** 
3264:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3265:..\src/command_processing.c ****     memInit_Master();
 23191              		.loc 1 3265 0
 23192 05ca FFF7FEFF 		bl	memInit_Master
3266:..\src/command_processing.c **** 
3267:..\src/command_processing.c **** 
3268:..\src/command_processing.c **** 
3269:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3270:..\src/command_processing.c ****     memInit_AirChambers_Vibrotactile_Fb();
 23193              		.loc 1 3270 0
 23194 05ce FFF7FEFF 		bl	memInit_AirChambers_Vibrotactile_Fb
3271:..\src/command_processing.c **** 
3272:..\src/command_processing.c **** 
3273:..\src/command_processing.c **** 
3274:..\src/command_processing.c ****     // JOYSTICK STRUCT
3275:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23195              		.loc 1 3275 0
 23196 05d2 164B     		ldr	r3, .L888
 23197 05d4 9622     		movs	r2, #150
 23198 05d6 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3276:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 23199              		.loc 1 3276 0
 23200 05da 144B     		ldr	r3, .L888
 23201 05dc 6422     		movs	r2, #100
 23202 05de A3F8B222 		strh	r2, [r3, #690]	@ movhi
3277:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23203              		.loc 1 3277 0
 23204 05e2 124B     		ldr	r3, .L888
 23205 05e4 4FF48062 		mov	r2, #1024
 23206 05e8 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3278:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23207              		.loc 1 3278 0
 23208 05ec 0F4B     		ldr	r3, .L888
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 509


 23209 05ee 4FF48062 		mov	r2, #1024
 23210 05f2 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3279:..\src/command_processing.c **** 
3280:..\src/command_processing.c ****     // Default generic user_id
3281:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23211              		.loc 1 3281 0
 23212 05f6 0D4B     		ldr	r3, .L888
 23213 05f8 0022     		movs	r2, #0
 23214 05fa 83F8AB20 		strb	r2, [r3, #171]
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3284:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23215              		.loc 1 3284 0
 23216 05fe 0B4B     		ldr	r3, .L888
 23217 0600 0122     		movs	r2, #1
 23218 0602 1A70     		strb	r2, [r3]
3285:..\src/command_processing.c ****     
3286:..\src/command_processing.c ****     //write that configuration to EEPROM
3287:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23219              		.loc 1 3287 0
 23220 0604 0020     		movs	r0, #0
 23221 0606 FFF7FEFF 		bl	memStore
 23222 060a 0346     		mov	r3, r0
 23223 060c 002B     		cmp	r3, #0
 23224 060e 07D0     		beq	.L881
 23225              		.loc 1 3287 0 is_stmt 0 discriminator 1
 23226 0610 3220     		movs	r0, #50
 23227 0612 FFF7FEFF 		bl	memStore
 23228 0616 0346     		mov	r3, r0
 23229 0618 002B     		cmp	r3, #0
 23230 061a 01D0     		beq	.L881
 23231              		.loc 1 3287 0 discriminator 3
 23232 061c 0123     		movs	r3, #1
 23233 061e 00E0     		b	.L882
 23234              	.L881:
 23235              		.loc 1 3287 0 discriminator 4
 23236 0620 0023     		movs	r3, #0
 23237              	.L882:
 23238              		.loc 1 3287 0 discriminator 6
 23239 0622 DBB2     		uxtb	r3, r3
3288:..\src/command_processing.c **** }
 23240              		.loc 1 3288 0 is_stmt 1 discriminator 6
 23241 0624 1846     		mov	r0, r3
 23242 0626 0837     		adds	r7, r7, #8
 23243              		.cfi_def_cfa_offset 8
 23244 0628 BD46     		mov	sp, r7
 23245              		.cfi_def_cfa_register 13
 23246              		@ sp needed
 23247 062a 80BD     		pop	{r7, pc}
 23248              	.L889:
 23249              		.align	2
 23250              	.L888:
 23251 062c 00000000 		.word	g_mem
 23252              		.cfi_endproc
 23253              	.LFE89:
 23254              		.size	memInit, .-memInit
 23255              		.section	.rodata
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 510


 23256 1f7b 00       		.align	2
 23257              	.LC299:
 23258 1f7c 55535230 		.ascii	"USR001\000"
 23258      303100
 23259              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23260              		.align	2
 23261              		.global	memInit_SoftHandPro
 23262              		.thumb
 23263              		.thumb_func
 23264              		.type	memInit_SoftHandPro, %function
 23265              	memInit_SoftHandPro:
 23266              	.LFB90:
3289:..\src/command_processing.c **** 
3290:..\src/command_processing.c **** //==============================================================================
3291:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3292:..\src/command_processing.c **** //==============================================================================
3293:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3294:..\src/command_processing.c **** {
 23267              		.loc 1 3294 0
 23268              		.cfi_startproc
 23269              		@ args = 0, pretend = 0, frame = 8
 23270              		@ frame_needed = 1, uses_anonymous_args = 0
 23271              		@ link register save eliminated.
 23272 0000 80B4     		push	{r7}
 23273              		.cfi_def_cfa_offset 4
 23274              		.cfi_offset 7, -4
 23275 0002 83B0     		sub	sp, sp, #12
 23276              		.cfi_def_cfa_offset 16
 23277 0004 00AF     		add	r7, sp, #0
 23278              		.cfi_def_cfa_register 7
3295:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23279              		.loc 1 3295 0
 23280 0006 0023     		movs	r3, #0
 23281 0008 FB70     		strb	r3, [r7, #3]
3296:..\src/command_processing.c ****     
3297:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3298:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23282              		.loc 1 3298 0
 23283 000a 8B4B     		ldr	r3, .L893
 23284 000c 0122     		movs	r2, #1
 23285 000e 83F8A720 		strb	r2, [r3, #167]
3299:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23286              		.loc 1 3299 0
 23287 0012 894B     		ldr	r3, .L893
 23288 0014 0022     		movs	r2, #0
 23289 0016 83F8AC20 		strb	r2, [r3, #172]
3300:..\src/command_processing.c ****     
3301:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23290              		.loc 1 3301 0
 23291 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23292 001c 8649     		ldr	r1, .L893
 23293 001e 1346     		mov	r3, r2
 23294 0020 DB00     		lsls	r3, r3, #3
 23295 0022 9B1A     		subs	r3, r3, r2
 23296 0024 1B01     		lsls	r3, r3, #4
 23297 0026 0B44     		add	r3, r3, r1
 23298 0028 E033     		adds	r3, r3, #224
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 511


 23299 002a 0122     		movs	r2, #1
 23300 002c 1A70     		strb	r2, [r3]
3302:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23301              		.loc 1 3302 0
 23302 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23303 0030 8149     		ldr	r1, .L893
 23304 0032 1346     		mov	r3, r2
 23305 0034 DB00     		lsls	r3, r3, #3
 23306 0036 9B1A     		subs	r3, r3, r2
 23307 0038 1B01     		lsls	r3, r3, #4
 23308 003a 0B44     		add	r3, r3, r1
 23309 003c 03F58773 		add	r3, r3, #270
 23310 0040 0022     		movs	r2, #0
 23311 0042 1A70     		strb	r2, [r3]
3303:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23312              		.loc 1 3303 0
 23313 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23314 0046 7C49     		ldr	r1, .L893
 23315 0048 1346     		mov	r3, r2
 23316 004a DB00     		lsls	r3, r3, #3
 23317 004c 9B1A     		subs	r3, r3, r2
 23318 004e 1B01     		lsls	r3, r3, #4
 23319 0050 0B44     		add	r3, r3, r1
 23320 0052 03F20F13 		addw	r3, r3, #271
 23321 0056 0022     		movs	r2, #0
 23322 0058 1A70     		strb	r2, [r3]
3304:..\src/command_processing.c ****     
3305:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3306:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23323              		.loc 1 3306 0
 23324 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23325 005c 764B     		ldr	r3, .L893
 23326 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23327 0062 7549     		ldr	r1, .L893
 23328 0064 1346     		mov	r3, r2
 23329 0066 DB00     		lsls	r3, r3, #3
 23330 0068 9B1A     		subs	r3, r3, r2
 23331 006a 1B01     		lsls	r3, r3, #4
 23332 006c 0B44     		add	r3, r3, r1
 23333 006e 03F58873 		add	r3, r3, #272
 23334 0072 0246     		mov	r2, r0
 23335 0074 1A70     		strb	r2, [r3]
3307:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23336              		.loc 1 3307 0
 23337 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23338 0078 6F49     		ldr	r1, .L893
 23339 007a 1346     		mov	r3, r2
 23340 007c DB00     		lsls	r3, r3, #3
 23341 007e 9B1A     		subs	r3, r3, r2
 23342 0080 1B01     		lsls	r3, r3, #4
 23343 0082 0B44     		add	r3, r3, r1
 23344 0084 03F21113 		addw	r3, r3, #273
 23345 0088 0122     		movs	r2, #1
 23346 008a 1A70     		strb	r2, [r3]
3308:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23347              		.loc 1 3308 0
 23348 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 512


 23349 008e 6A49     		ldr	r1, .L893
 23350 0090 1346     		mov	r3, r2
 23351 0092 DB00     		lsls	r3, r3, #3
 23352 0094 9B1A     		subs	r3, r3, r2
 23353 0096 1B01     		lsls	r3, r3, #4
 23354 0098 0B44     		add	r3, r3, r1
 23355 009a 03F58973 		add	r3, r3, #274
 23356 009e 0122     		movs	r2, #1
 23357 00a0 1A70     		strb	r2, [r3]
3309:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23358              		.loc 1 3309 0
 23359 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23360 00a4 6449     		ldr	r1, .L893
 23361 00a6 1346     		mov	r3, r2
 23362 00a8 DB00     		lsls	r3, r3, #3
 23363 00aa 9B1A     		subs	r3, r3, r2
 23364 00ac 1B01     		lsls	r3, r3, #4
 23365 00ae 0B44     		add	r3, r3, r1
 23366 00b0 E433     		adds	r3, r3, #228
 23367 00b2 0022     		movs	r2, #0
 23368 00b4 1A60     		str	r2, [r3]
3310:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23369              		.loc 1 3310 0
 23370 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23371 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23372 00ba 5F48     		ldr	r0, .L893
 23373 00bc 0B46     		mov	r3, r1
 23374 00be DB00     		lsls	r3, r3, #3
 23375 00c0 5B1A     		subs	r3, r3, r1
 23376 00c2 1B01     		lsls	r3, r3, #4
 23377 00c4 0344     		add	r3, r3, r0
 23378 00c6 03F58873 		add	r3, r3, #272
 23379 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23380 00cc 1846     		mov	r0, r3
 23381 00ce 5A49     		ldr	r1, .L893
 23382 00d0 0346     		mov	r3, r0
 23383 00d2 5B00     		lsls	r3, r3, #1
 23384 00d4 0344     		add	r3, r3, r0
 23385 00d6 1B01     		lsls	r3, r3, #4
 23386 00d8 0B44     		add	r3, r3, r1
 23387 00da 03F29513 		addw	r3, r3, #405
 23388 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23389 00e0 1946     		mov	r1, r3
 23390 00e2 4FF47A53 		mov	r3, #16000
 23391 00e6 03FA01F1 		lsl	r1, r3, r1
 23392 00ea 5348     		ldr	r0, .L893
 23393 00ec 1346     		mov	r3, r2
 23394 00ee DB00     		lsls	r3, r3, #3
 23395 00f0 9B1A     		subs	r3, r3, r2
 23396 00f2 1B01     		lsls	r3, r3, #4
 23397 00f4 0344     		add	r3, r3, r0
 23398 00f6 E833     		adds	r3, r3, #232
 23399 00f8 1960     		str	r1, [r3]
 23400              	.LBB30:
3311:..\src/command_processing.c ****     
3312:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23401              		.loc 1 3312 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 513


 23402 00fa 0023     		movs	r3, #0
 23403 00fc 7B60     		str	r3, [r7, #4]
 23404 00fe 2EE0     		b	.L891
 23405              	.L892:
3313:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3314:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23406              		.loc 1 3314 0 discriminator 3
 23407 0100 4D49     		ldr	r1, .L893
 23408 0102 7A68     		ldr	r2, [r7, #4]
 23409 0104 1346     		mov	r3, r2
 23410 0106 5B00     		lsls	r3, r3, #1
 23411 0108 1344     		add	r3, r3, r2
 23412 010a 1B01     		lsls	r3, r3, #4
 23413 010c 0B44     		add	r3, r3, r1
 23414 010e 03F5D873 		add	r3, r3, #432
 23415 0112 0122     		movs	r2, #1
 23416 0114 1A70     		strb	r2, [r3]
3315:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23417              		.loc 1 3315 0 discriminator 3
 23418 0116 4849     		ldr	r1, .L893
 23419 0118 7A68     		ldr	r2, [r7, #4]
 23420 011a 1346     		mov	r3, r2
 23421 011c 5B00     		lsls	r3, r3, #1
 23422 011e 1344     		add	r3, r3, r2
 23423 0120 1B01     		lsls	r3, r3, #4
 23424 0122 0B44     		add	r3, r3, r1
 23425 0124 03F2B513 		addw	r3, r3, #437
 23426 0128 2322     		movs	r2, #35
 23427 012a 1A70     		strb	r2, [r3]
3316:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23428              		.loc 1 3316 0 discriminator 3
 23429 012c 4249     		ldr	r1, .L893
 23430 012e 7A68     		ldr	r2, [r7, #4]
 23431 0130 1346     		mov	r3, r2
 23432 0132 5B00     		lsls	r3, r3, #1
 23433 0134 1344     		add	r3, r3, r2
 23434 0136 1B01     		lsls	r3, r3, #4
 23435 0138 0B44     		add	r3, r3, r1
 23436 013a 03F5DB73 		add	r3, r3, #438
 23437 013e 0322     		movs	r2, #3
 23438 0140 1A70     		strb	r2, [r3]
3317:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23439              		.loc 1 3317 0 discriminator 3
 23440 0142 3D49     		ldr	r1, .L893
 23441 0144 7A68     		ldr	r2, [r7, #4]
 23442 0146 1346     		mov	r3, r2
 23443 0148 5B00     		lsls	r3, r3, #1
 23444 014a 1344     		add	r3, r3, r2
 23445 014c 1B01     		lsls	r3, r3, #4
 23446 014e 0B44     		add	r3, r3, r1
 23447 0150 03F2B713 		addw	r3, r3, #439
 23448 0154 FF22     		movs	r2, #255
 23449 0156 1A70     		strb	r2, [r3]
3312:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23450              		.loc 1 3312 0 discriminator 3
 23451 0158 7B68     		ldr	r3, [r7, #4]
 23452 015a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 514


 23453 015c 7B60     		str	r3, [r7, #4]
 23454              	.L891:
3312:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23455              		.loc 1 3312 0 is_stmt 0 discriminator 1
 23456 015e 7B68     		ldr	r3, [r7, #4]
 23457 0160 012B     		cmp	r3, #1
 23458 0162 CDDD     		ble	.L892
 23459              	.LBE30:
3318:..\src/command_processing.c ****     }
3319:..\src/command_processing.c ****     
3320:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23460              		.loc 1 3320 0 is_stmt 1
 23461 0164 344B     		ldr	r3, .L893
 23462 0166 4FF48062 		mov	r2, #1024
 23463 016a C3F8F421 		str	r2, [r3, #500]
3321:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23464              		.loc 1 3321 0
 23465 016e 324B     		ldr	r3, .L893
 23466 0170 4FF48062 		mov	r2, #1024
 23467 0174 C3F8F821 		str	r2, [r3, #504]
3322:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23468              		.loc 1 3322 0
 23469 0178 2F4B     		ldr	r3, .L893
 23470 017a C822     		movs	r2, #200
 23471 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3323:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23472              		.loc 1 3323 0
 23473 0180 2D4B     		ldr	r3, .L893
 23474 0182 C822     		movs	r2, #200
 23475 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3324:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23476              		.loc 1 3324 0
 23477 0188 2B4B     		ldr	r3, .L893
 23478 018a 6422     		movs	r2, #100
 23479 018c 83F8FC21 		strb	r2, [r3, #508]
3325:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23480              		.loc 1 3325 0
 23481 0190 294B     		ldr	r3, .L893
 23482 0192 6422     		movs	r2, #100
 23483 0194 83F8FD21 		strb	r2, [r3, #509]
3326:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23484              		.loc 1 3326 0
 23485 0198 274B     		ldr	r3, .L893
 23486 019a 0022     		movs	r2, #0
 23487 019c 83F8FE21 		strb	r2, [r3, #510]
3327:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23488              		.loc 1 3327 0
 23489 01a0 254B     		ldr	r3, .L893
 23490 01a2 0022     		movs	r2, #0
 23491 01a4 83F8FF21 		strb	r2, [r3, #511]
3328:..\src/command_processing.c ****     
3329:..\src/command_processing.c ****     //Initialize rest position parameters  
3330:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23492              		.loc 1 3330 0
 23493 01a8 234B     		ldr	r3, .L893
 23494 01aa 0022     		movs	r2, #0
 23495 01ac 83F8AC22 		strb	r2, [r3, #684]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 515


3331:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23496              		.loc 1 3331 0
 23497 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23498 01b2 2149     		ldr	r1, .L893
 23499 01b4 1346     		mov	r3, r2
 23500 01b6 DB00     		lsls	r3, r3, #3
 23501 01b8 9B1A     		subs	r3, r3, r2
 23502 01ba 1B01     		lsls	r3, r3, #4
 23503 01bc 0B44     		add	r3, r3, r1
 23504 01be 03F58873 		add	r3, r3, #272
 23505 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23506 01c4 1946     		mov	r1, r3
 23507 01c6 1C4A     		ldr	r2, .L893
 23508 01c8 0B46     		mov	r3, r1
 23509 01ca 5B00     		lsls	r3, r3, #1
 23510 01cc 0B44     		add	r3, r3, r1
 23511 01ce 1B01     		lsls	r3, r3, #4
 23512 01d0 1344     		add	r3, r3, r2
 23513 01d2 03F29513 		addw	r3, r3, #405
 23514 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23515 01d8 1A46     		mov	r2, r3
 23516 01da 41F65833 		movw	r3, #7000
 23517 01de 9340     		lsls	r3, r3, r2
 23518 01e0 154A     		ldr	r2, .L893
 23519 01e2 C2F8A032 		str	r3, [r2, #672]
3332:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23520              		.loc 1 3332 0
 23521 01e6 144B     		ldr	r3, .L893
 23522 01e8 0A22     		movs	r2, #10
 23523 01ea C3F8A422 		str	r2, [r3, #676]
3333:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23524              		.loc 1 3333 0
 23525 01ee 124B     		ldr	r3, .L893
 23526 01f0 42F21072 		movw	r2, #10000
 23527 01f4 C3F8A822 		str	r2, [r3, #680]
3334:..\src/command_processing.c **** 	
3335:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23528              		.loc 1 3335 0
 23529 01f8 0F4B     		ldr	r3, .L893
 23530 01fa 0022     		movs	r2, #0
 23531 01fc 83F80022 		strb	r2, [r3, #512]
3336:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23532              		.loc 1 3336 0
 23533 0200 0D4B     		ldr	r3, .L893
 23534 0202 0022     		movs	r2, #0
 23535 0204 83F82622 		strb	r2, [r3, #550]
3337:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23536              		.loc 1 3337 0
 23537 0208 0B4B     		ldr	r3, .L893
 23538 020a 0022     		movs	r2, #0
 23539 020c 83F83422 		strb	r2, [r3, #564]
3338:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23540              		.loc 1 3338 0
 23541 0210 094B     		ldr	r3, .L893
 23542 0212 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23543 0216 1233     		adds	r3, r3, #18
 23544 0218 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 516


 23545 021a 074A     		ldr	r2, .L893
 23546 021c 1344     		add	r3, r3, r2
 23547 021e 074A     		ldr	r2, .L893+4
 23548 0220 1068     		ldr	r0, [r2]	@ unaligned
 23549 0222 1860     		str	r0, [r3]	@ unaligned
 23550 0224 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23551 0226 9279     		ldrb	r2, [r2, #6]
 23552 0228 9980     		strh	r1, [r3, #4]	@ unaligned
 23553 022a 9A71     		strb	r2, [r3, #6]
3339:..\src/command_processing.c **** }
 23554              		.loc 1 3339 0
 23555 022c 00BF     		nop
 23556 022e 0C37     		adds	r7, r7, #12
 23557              		.cfi_def_cfa_offset 4
 23558 0230 BD46     		mov	sp, r7
 23559              		.cfi_def_cfa_register 13
 23560              		@ sp needed
 23561 0232 80BC     		pop	{r7}
 23562              		.cfi_restore 7
 23563              		.cfi_def_cfa_offset 0
 23564 0234 7047     		bx	lr
 23565              	.L894:
 23566 0236 00BF     		.align	2
 23567              	.L893:
 23568 0238 00000000 		.word	g_mem
 23569 023c 7C1F0000 		.word	.LC299
 23570              		.cfi_endproc
 23571              	.LFE90:
 23572              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23573              		.section	.text.memInit_Master,"ax",%progbits
 23574              		.align	2
 23575              		.global	memInit_Master
 23576              		.thumb
 23577              		.thumb_func
 23578              		.type	memInit_Master, %function
 23579              	memInit_Master:
 23580              	.LFB91:
3340:..\src/command_processing.c **** 
3341:..\src/command_processing.c **** //==============================================================================
3342:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3343:..\src/command_processing.c **** //==============================================================================
3344:..\src/command_processing.c **** void memInit_Master(void)
3345:..\src/command_processing.c **** {
 23581              		.loc 1 3345 0
 23582              		.cfi_startproc
 23583              		@ args = 0, pretend = 0, frame = 0
 23584              		@ frame_needed = 1, uses_anonymous_args = 0
 23585              		@ link register save eliminated.
 23586 0000 80B4     		push	{r7}
 23587              		.cfi_def_cfa_offset 4
 23588              		.cfi_offset 7, -4
 23589 0002 00AF     		add	r7, sp, #0
 23590              		.cfi_def_cfa_register 7
3346:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23591              		.loc 1 3346 0
 23592 0004 074B     		ldr	r3, .L896
 23593 0006 0222     		movs	r2, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 517


 23594 0008 83F8A020 		strb	r2, [r3, #160]
3347:..\src/command_processing.c ****     
3348:..\src/command_processing.c ****     // MS STRUCT
3349:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23595              		.loc 1 3349 0
 23596 000c 054B     		ldr	r3, .L896
 23597 000e 0122     		movs	r2, #1
 23598 0010 83F8C122 		strb	r2, [r3, #705]
3350:..\src/command_processing.c ****     g_mem.MS.master_mode_active = FALSE;
 23599              		.loc 1 3350 0
 23600 0014 034B     		ldr	r3, .L896
 23601 0016 0022     		movs	r2, #0
 23602 0018 83F8C022 		strb	r2, [r3, #704]
3351:..\src/command_processing.c **** }
 23603              		.loc 1 3351 0
 23604 001c 00BF     		nop
 23605 001e BD46     		mov	sp, r7
 23606              		.cfi_def_cfa_register 13
 23607              		@ sp needed
 23608 0020 80BC     		pop	{r7}
 23609              		.cfi_restore 7
 23610              		.cfi_def_cfa_offset 0
 23611 0022 7047     		bx	lr
 23612              	.L897:
 23613              		.align	2
 23614              	.L896:
 23615 0024 00000000 		.word	g_mem
 23616              		.cfi_endproc
 23617              	.LFE91:
 23618              		.size	memInit_Master, .-memInit_Master
 23619              		.section	.text.memInit_AirChambers_Vibrotactile_Fb,"ax",%progbits
 23620              		.align	2
 23621              		.global	memInit_AirChambers_Vibrotactile_Fb
 23622              		.thumb
 23623              		.thumb_func
 23624              		.type	memInit_AirChambers_Vibrotactile_Fb, %function
 23625              	memInit_AirChambers_Vibrotactile_Fb:
 23626              	.LFB92:
3352:..\src/command_processing.c **** 
3353:..\src/command_processing.c **** //==============================================================================
3354:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3355:..\src/command_processing.c **** //==============================================================================
3356:..\src/command_processing.c **** void memInit_AirChambers_Vibrotactile_Fb()
3357:..\src/command_processing.c **** {
 23627              		.loc 1 3357 0
 23628              		.cfi_startproc
 23629              		@ args = 0, pretend = 0, frame = 0
 23630              		@ frame_needed = 1, uses_anonymous_args = 0
 23631              		@ link register save eliminated.
 23632 0000 80B4     		push	{r7}
 23633              		.cfi_def_cfa_offset 4
 23634              		.cfi_offset 7, -4
 23635 0002 00AF     		add	r7, sp, #0
 23636              		.cfi_def_cfa_register 7
3358:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3359:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23637              		.loc 1 3359 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 518


 23638 0004 1E4B     		ldr	r3, .L899
 23639 0006 0222     		movs	r2, #2
 23640 0008 83F8AC20 		strb	r2, [r3, #172]
3360:..\src/command_processing.c ****     
3361:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23641              		.loc 1 3361 0
 23642 000c 1C4B     		ldr	r3, .L899
 23643 000e 0122     		movs	r2, #1
 23644 0010 83F80F21 		strb	r2, [r3, #271]
3362:..\src/command_processing.c ****     
3363:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3364:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3365:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23645              		.loc 1 3365 0
 23646 0014 1A4B     		ldr	r3, .L899
 23647 0016 0422     		movs	r2, #4
 23648 0018 83F87E21 		strb	r2, [r3, #382]
3366:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23649              		.loc 1 3366 0
 23650 001c 184B     		ldr	r3, .L899
 23651 001e 0022     		movs	r2, #0
 23652 0020 C3F85421 		str	r2, [r3, #340]
3367:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23653              		.loc 1 3367 0
 23654 0024 164B     		ldr	r3, .L899
 23655 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23656 002a 1946     		mov	r1, r3
 23657 002c 144A     		ldr	r2, .L899
 23658 002e 0B46     		mov	r3, r1
 23659 0030 5B00     		lsls	r3, r3, #1
 23660 0032 0B44     		add	r3, r3, r1
 23661 0034 1B01     		lsls	r3, r3, #4
 23662 0036 1344     		add	r3, r3, r2
 23663 0038 03F29513 		addw	r3, r3, #405
 23664 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23665 003e 1A46     		mov	r2, r3
 23666 0040 45F2F053 		movw	r3, #22000
 23667 0044 9340     		lsls	r3, r3, r2
 23668 0046 0E4A     		ldr	r2, .L899
 23669 0048 C2F85831 		str	r3, [r2, #344]
3368:..\src/command_processing.c ****     
3369:..\src/command_processing.c ****     // FB STRUCT
3370:..\src/command_processing.c ****     g_mem.FB.vibrotactile_feedback_active = FALSE;
 23670              		.loc 1 3370 0
 23671 004c 0C4B     		ldr	r3, .L899
 23672 004e 0022     		movs	r2, #0
 23673 0050 83F8DC22 		strb	r2, [r3, #732]
3371:..\src/command_processing.c ****     g_mem.FB.airchamber_feedback_active = FALSE;
 23674              		.loc 1 3371 0
 23675 0054 0A4B     		ldr	r3, .L899
 23676 0056 0022     		movs	r2, #0
 23677 0058 83F8DD22 		strb	r2, [r3, #733]
3372:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23678              		.loc 1 3372 0
 23679 005c 084B     		ldr	r3, .L899
 23680 005e 4FF4E172 		mov	r2, #450
 23681 0062 C3F8D022 		str	r2, [r3, #720]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 519


3373:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23682              		.loc 1 3373 0
 23683 0066 064B     		ldr	r3, .L899
 23684 0068 064A     		ldr	r2, .L899+4
 23685 006a C3F8D422 		str	r2, [r3, #724]	@ float
3374:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23686              		.loc 1 3374 0
 23687 006e 044B     		ldr	r3, .L899
 23688 0070 4FF07E52 		mov	r2, #1065353216
 23689 0074 C3F8D822 		str	r2, [r3, #728]	@ float
3375:..\src/command_processing.c **** }
 23690              		.loc 1 3375 0
 23691 0078 00BF     		nop
 23692 007a BD46     		mov	sp, r7
 23693              		.cfi_def_cfa_register 13
 23694              		@ sp needed
 23695 007c 80BC     		pop	{r7}
 23696              		.cfi_restore 7
 23697              		.cfi_def_cfa_offset 0
 23698 007e 7047     		bx	lr
 23699              	.L900:
 23700              		.align	2
 23701              	.L899:
 23702 0080 00000000 		.word	g_mem
 23703 0084 0000C841 		.word	1103626240
 23704              		.cfi_endproc
 23705              	.LFE92:
 23706              		.size	memInit_AirChambers_Vibrotactile_Fb, .-memInit_AirChambers_Vibrotactile_Fb
 23707              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23708              		.align	2
 23709              		.global	memInit_OtbkActWristMs
 23710              		.thumb
 23711              		.thumb_func
 23712              		.type	memInit_OtbkActWristMs, %function
 23713              	memInit_OtbkActWristMs:
 23714              	.LFB93:
3376:..\src/command_processing.c **** 
3377:..\src/command_processing.c **** //==============================================================================
3378:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3379:..\src/command_processing.c **** //==============================================================================
3380:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3381:..\src/command_processing.c **** {
 23715              		.loc 1 3381 0
 23716              		.cfi_startproc
 23717              		@ args = 0, pretend = 0, frame = 0
 23718              		@ frame_needed = 1, uses_anonymous_args = 0
 23719              		@ link register save eliminated.
 23720 0000 80B4     		push	{r7}
 23721              		.cfi_def_cfa_offset 4
 23722              		.cfi_offset 7, -4
 23723 0002 00AF     		add	r7, sp, #0
 23724              		.cfi_def_cfa_register 7
3382:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3383:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23725              		.loc 1 3383 0
 23726 0004 294B     		ldr	r3, .L902
 23727 0006 0322     		movs	r2, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 520


 23728 0008 83F8AC20 		strb	r2, [r3, #172]
3384:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23729              		.loc 1 3384 0
 23730 000c 274B     		ldr	r3, .L902
 23731 000e 0122     		movs	r2, #1
 23732 0010 83F8A720 		strb	r2, [r3, #167]
3385:..\src/command_processing.c ****     
3386:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23733              		.loc 1 3386 0
 23734 0014 254B     		ldr	r3, .L902
 23735 0016 0122     		movs	r2, #1
 23736 0018 83F80F21 		strb	r2, [r3, #271]
3387:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23737              		.loc 1 3387 0
 23738 001c 234B     		ldr	r3, .L902
 23739 001e 6422     		movs	r2, #100
 23740 0020 83F81121 		strb	r2, [r3, #273]
3388:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23741              		.loc 1 3388 0
 23742 0024 214B     		ldr	r3, .L902
 23743 0026 0022     		movs	r2, #0
 23744 0028 83F81221 		strb	r2, [r3, #274]
3389:..\src/command_processing.c ****     
3390:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3391:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3392:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23745              		.loc 1 3392 0
 23746 002c 1F4B     		ldr	r3, .L902
 23747 002e 0422     		movs	r2, #4
 23748 0030 83F87E21 		strb	r2, [r3, #382]
3393:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23749              		.loc 1 3393 0
 23750 0034 1D4B     		ldr	r3, .L902
 23751 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23752 003a 1C4B     		ldr	r3, .L902
 23753 003c 83F88021 		strb	r2, [r3, #384]
3394:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23754              		.loc 1 3394 0
 23755 0040 1A4B     		ldr	r3, .L902
 23756 0042 0122     		movs	r2, #1
 23757 0044 83F88121 		strb	r2, [r3, #385]
3395:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23758              		.loc 1 3395 0
 23759 0048 184B     		ldr	r3, .L902
 23760 004a 0022     		movs	r2, #0
 23761 004c 83F88221 		strb	r2, [r3, #386]
3396:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23762              		.loc 1 3396 0
 23763 0050 164B     		ldr	r3, .L902
 23764 0052 0022     		movs	r2, #0
 23765 0054 C3F85421 		str	r2, [r3, #340]
3397:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23766              		.loc 1 3397 0
 23767 0058 144B     		ldr	r3, .L902
 23768 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23769 005e 1946     		mov	r1, r3
 23770 0060 124A     		ldr	r2, .L902
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 521


 23771 0062 0B46     		mov	r3, r1
 23772 0064 5B00     		lsls	r3, r3, #1
 23773 0066 0B44     		add	r3, r3, r1
 23774 0068 1B01     		lsls	r3, r3, #4
 23775 006a 1344     		add	r3, r3, r2
 23776 006c 03F29513 		addw	r3, r3, #405
 23777 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23778 0072 1A46     		mov	r2, r3
 23779 0074 4FF47A53 		mov	r3, #16000
 23780 0078 9340     		lsls	r3, r3, r2
 23781 007a 0C4A     		ldr	r2, .L902
 23782 007c C2F85831 		str	r3, [r2, #344]
3398:..\src/command_processing.c ****     
3399:..\src/command_processing.c ****     // WR STRUCT
3400:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23783              		.loc 1 3400 0
 23784 0080 0A4B     		ldr	r3, .L902
 23785 0082 0022     		movs	r2, #0
 23786 0084 83F8E022 		strb	r2, [r3, #736]
3401:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23787              		.loc 1 3401 0
 23788 0088 084B     		ldr	r3, .L902
 23789 008a 4FF44872 		mov	r2, #800
 23790 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3402:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23791              		.loc 1 3402 0
 23792 0092 064B     		ldr	r3, .L902
 23793 0094 4FF44872 		mov	r2, #800
 23794 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3403:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23795              		.loc 1 3403 0
 23796 009c 034B     		ldr	r3, .L902
 23797 009e 0022     		movs	r2, #0
 23798 00a0 83F8E622 		strb	r2, [r3, #742]
3404:..\src/command_processing.c **** }
 23799              		.loc 1 3404 0
 23800 00a4 00BF     		nop
 23801 00a6 BD46     		mov	sp, r7
 23802              		.cfi_def_cfa_register 13
 23803              		@ sp needed
 23804 00a8 80BC     		pop	{r7}
 23805              		.cfi_restore 7
 23806              		.cfi_def_cfa_offset 0
 23807 00aa 7047     		bx	lr
 23808              	.L903:
 23809              		.align	2
 23810              	.L902:
 23811 00ac 00000000 		.word	g_mem
 23812              		.cfi_endproc
 23813              	.LFE93:
 23814              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23815              		.section	.text.cmd_get_measurements,"ax",%progbits
 23816              		.align	2
 23817              		.global	cmd_get_measurements
 23818              		.thumb
 23819              		.thumb_func
 23820              		.type	cmd_get_measurements, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 522


 23821              	cmd_get_measurements:
 23822              	.LFB94:
3405:..\src/command_processing.c **** 
3406:..\src/command_processing.c **** //==============================================================================
3407:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3408:..\src/command_processing.c **** //==============================================================================
3409:..\src/command_processing.c **** /**
3410:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3411:..\src/command_processing.c **** **/
3412:..\src/command_processing.c **** 
3413:..\src/command_processing.c **** void cmd_get_measurements(){
 23823              		.loc 1 3413 0
 23824              		.cfi_startproc
 23825              		@ args = 0, pretend = 0, frame = 16
 23826              		@ frame_needed = 1, uses_anonymous_args = 0
 23827 0000 90B5     		push	{r4, r7, lr}
 23828              		.cfi_def_cfa_offset 12
 23829              		.cfi_offset 4, -12
 23830              		.cfi_offset 7, -8
 23831              		.cfi_offset 14, -4
 23832 0002 85B0     		sub	sp, sp, #20
 23833              		.cfi_def_cfa_offset 32
 23834 0004 00AF     		add	r7, sp, #0
 23835              		.cfi_def_cfa_register 7
3414:..\src/command_processing.c ****  
3415:..\src/command_processing.c ****     uint8 CYDATA index;
3416:..\src/command_processing.c ****     int16 aux_int16;
3417:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3418:..\src/command_processing.c ****     
3419:..\src/command_processing.c ****     uint8 packet_data[8]; 
3420:..\src/command_processing.c ****     
3421:..\src/command_processing.c ****     //Header package
3422:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23836              		.loc 1 3422 0
 23837 0006 8423     		movs	r3, #132
 23838 0008 3B71     		strb	r3, [r7, #4]
3423:..\src/command_processing.c ****     
3424:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23839              		.loc 1 3424 0
 23840 000a 0323     		movs	r3, #3
 23841 000c FB73     		strb	r3, [r7, #15]
 23842 000e 38E0     		b	.L905
 23843              	.L906:
3425:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23844              		.loc 1 3425 0
 23845 0010 434B     		ldr	r3, .L908
 23846 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23847 0016 1A46     		mov	r2, r3
 23848 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23849 001a 4248     		ldr	r0, .L908+4
 23850 001c 1346     		mov	r3, r2
 23851 001e 5B00     		lsls	r3, r3, #1
 23852 0020 1344     		add	r3, r3, r2
 23853 0022 9B00     		lsls	r3, r3, #2
 23854 0024 1344     		add	r3, r3, r2
 23855 0026 0B44     		add	r3, r3, r1
 23856 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 523


 23857 002c 3C4B     		ldr	r3, .L908
 23858 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23859 0032 1C46     		mov	r4, r3
 23860 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23861 0036 3A48     		ldr	r0, .L908
 23862 0038 2346     		mov	r3, r4
 23863 003a 5B00     		lsls	r3, r3, #1
 23864 003c 2344     		add	r3, r3, r4
 23865 003e 1B01     		lsls	r3, r3, #4
 23866 0040 0344     		add	r3, r3, r0
 23867 0042 0B44     		add	r3, r3, r1
 23868 0044 03F29513 		addw	r3, r3, #405
 23869 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23870 004a 42FA03F3 		asr	r3, r2, r3
 23871 004e 1BB2     		sxth	r3, r3
 23872 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3426:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23873              		.loc 1 3426 0
 23874 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23875 0054 5B00     		lsls	r3, r3, #1
 23876 0056 0233     		adds	r3, r3, #2
 23877 0058 07F10C02 		add	r2, r7, #12
 23878 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23879 005e 07F11001 		add	r1, r7, #16
 23880 0062 0B44     		add	r3, r3, r1
 23881 0064 03F80C2C 		strb	r2, [r3, #-12]
3427:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23882              		.loc 1 3427 0
 23883 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23884 006a 5B00     		lsls	r3, r3, #1
 23885 006c 5A1C     		adds	r2, r3, #1
 23886 006e 07F10C03 		add	r3, r7, #12
 23887 0072 0133     		adds	r3, r3, #1
 23888 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23889 0076 07F11003 		add	r3, r7, #16
 23890 007a 1344     		add	r3, r3, r2
 23891 007c 0A46     		mov	r2, r1
 23892 007e 03F80C2C 		strb	r2, [r3, #-12]
 23893              	.L905:
3424:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23894              		.loc 1 3424 0 discriminator 1
 23895 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23896 0084 5A1E     		subs	r2, r3, #1
 23897 0086 FA73     		strb	r2, [r7, #15]
 23898 0088 002B     		cmp	r3, #0
 23899 008a C1D1     		bne	.L906
3428:..\src/command_processing.c ****     }
3429:..\src/command_processing.c **** 
3430:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23900              		.loc 1 3430 0
 23901 008c 244B     		ldr	r3, .L908
 23902 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23903 0092 012B     		cmp	r3, #1
 23904 0094 34D1     		bne	.L907
3431:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3432:..\src/command_processing.c ****         index = 1;
 23905              		.loc 1 3432 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 524


 23906 0096 0123     		movs	r3, #1
 23907 0098 FB73     		strb	r3, [r7, #15]
3433:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 23908              		.loc 1 3433 0
 23909 009a 214B     		ldr	r3, .L908
 23910 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23911 00a0 1946     		mov	r1, r3
 23912 00a2 204A     		ldr	r2, .L908+4
 23913 00a4 3423     		movs	r3, #52
 23914 00a6 03FB01F3 		mul	r3, r3, r1
 23915 00aa 1344     		add	r3, r3, r2
 23916 00ac 1A68     		ldr	r2, [r3]
 23917 00ae 1C4B     		ldr	r3, .L908
 23918 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23919 00b4 1846     		mov	r0, r3
 23920 00b6 1A49     		ldr	r1, .L908
 23921 00b8 0346     		mov	r3, r0
 23922 00ba 5B00     		lsls	r3, r3, #1
 23923 00bc 0344     		add	r3, r3, r0
 23924 00be 1B01     		lsls	r3, r3, #4
 23925 00c0 0B44     		add	r3, r3, r1
 23926 00c2 03F29513 		addw	r3, r3, #405
 23927 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23928 00c8 42FA03F3 		asr	r3, r2, r3
 23929 00cc 1BB2     		sxth	r3, r3
 23930 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3434:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23931              		.loc 1 3434 0
 23932 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23933 00d2 5B00     		lsls	r3, r3, #1
 23934 00d4 0233     		adds	r3, r3, #2
 23935 00d6 07F10C02 		add	r2, r7, #12
 23936 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23937 00dc 07F11001 		add	r1, r7, #16
 23938 00e0 0B44     		add	r3, r3, r1
 23939 00e2 03F80C2C 		strb	r2, [r3, #-12]
3435:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23940              		.loc 1 3435 0
 23941 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23942 00e8 5B00     		lsls	r3, r3, #1
 23943 00ea 5A1C     		adds	r2, r3, #1
 23944 00ec 07F10C03 		add	r3, r7, #12
 23945 00f0 0133     		adds	r3, r3, #1
 23946 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23947 00f4 07F11003 		add	r3, r7, #16
 23948 00f8 1344     		add	r3, r3, r2
 23949 00fa 0A46     		mov	r2, r1
 23950 00fc 03F80C2C 		strb	r2, [r3, #-12]
 23951              	.L907:
3436:..\src/command_processing.c ****     }
3437:..\src/command_processing.c ****     
3438:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3439:..\src/command_processing.c **** 
3440:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23952              		.loc 1 3440 0
 23953 0100 3B1D     		adds	r3, r7, #4
 23954 0102 0721     		movs	r1, #7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 525


 23955 0104 1846     		mov	r0, r3
 23956 0106 FFF7FEFF 		bl	LCRChecksum
 23957 010a 0346     		mov	r3, r0
 23958 010c FB72     		strb	r3, [r7, #11]
3441:..\src/command_processing.c **** 
3442:..\src/command_processing.c ****     commWrite(packet_data, 8);
 23959              		.loc 1 3442 0
 23960 010e 3B1D     		adds	r3, r7, #4
 23961 0110 0821     		movs	r1, #8
 23962 0112 1846     		mov	r0, r3
 23963 0114 FFF7FEFF 		bl	commWrite
3443:..\src/command_processing.c ****    
3444:..\src/command_processing.c **** }
 23964              		.loc 1 3444 0
 23965 0118 00BF     		nop
 23966 011a 1437     		adds	r7, r7, #20
 23967              		.cfi_def_cfa_offset 12
 23968 011c BD46     		mov	sp, r7
 23969              		.cfi_def_cfa_register 13
 23970              		@ sp needed
 23971 011e 90BD     		pop	{r4, r7, pc}
 23972              	.L909:
 23973              		.align	2
 23974              	.L908:
 23975 0120 00000000 		.word	g_mem
 23976 0124 00000000 		.word	g_measOld
 23977              		.cfi_endproc
 23978              	.LFE94:
 23979              		.size	cmd_get_measurements, .-cmd_get_measurements
 23980              		.section	.text.cmd_get_velocities,"ax",%progbits
 23981              		.align	2
 23982              		.global	cmd_get_velocities
 23983              		.thumb
 23984              		.thumb_func
 23985              		.type	cmd_get_velocities, %function
 23986              	cmd_get_velocities:
 23987              	.LFB95:
3445:..\src/command_processing.c **** 
3446:..\src/command_processing.c **** void cmd_get_velocities(){
 23988              		.loc 1 3446 0
 23989              		.cfi_startproc
 23990              		@ args = 0, pretend = 0, frame = 16
 23991              		@ frame_needed = 1, uses_anonymous_args = 0
 23992 0000 90B5     		push	{r4, r7, lr}
 23993              		.cfi_def_cfa_offset 12
 23994              		.cfi_offset 4, -12
 23995              		.cfi_offset 7, -8
 23996              		.cfi_offset 14, -4
 23997 0002 85B0     		sub	sp, sp, #20
 23998              		.cfi_def_cfa_offset 32
 23999 0004 00AF     		add	r7, sp, #0
 24000              		.cfi_def_cfa_register 7
3447:..\src/command_processing.c ****  
3448:..\src/command_processing.c ****     uint8 CYDATA index;
3449:..\src/command_processing.c ****     int16 aux_int16;
3450:..\src/command_processing.c ****    
3451:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 526


3452:..\src/command_processing.c ****     
3453:..\src/command_processing.c ****     uint8 packet_data[8]; 
3454:..\src/command_processing.c ****     
3455:..\src/command_processing.c ****     //Header package
3456:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 24001              		.loc 1 3456 0
 24002 0006 8923     		movs	r3, #137
 24003 0008 3B71     		strb	r3, [r7, #4]
3457:..\src/command_processing.c ****     
3458:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24004              		.loc 1 3458 0
 24005 000a 0323     		movs	r3, #3
 24006 000c FB73     		strb	r3, [r7, #15]
 24007 000e 3AE0     		b	.L911
 24008              	.L912:
3459:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24009              		.loc 1 3459 0
 24010 0010 274B     		ldr	r3, .L913
 24011 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24012 0016 1A46     		mov	r2, r3
 24013 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24014 001a 2648     		ldr	r0, .L913+4
 24015 001c 1346     		mov	r3, r2
 24016 001e 5B00     		lsls	r3, r3, #1
 24017 0020 1344     		add	r3, r3, r2
 24018 0022 9B00     		lsls	r3, r3, #2
 24019 0024 1344     		add	r3, r3, r2
 24020 0026 0B44     		add	r3, r3, r1
 24021 0028 0633     		adds	r3, r3, #6
 24022 002a 9B00     		lsls	r3, r3, #2
 24023 002c 0344     		add	r3, r3, r0
 24024 002e 5A68     		ldr	r2, [r3, #4]
 24025 0030 1F4B     		ldr	r3, .L913
 24026 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24027 0036 1C46     		mov	r4, r3
 24028 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24029 003a 1D48     		ldr	r0, .L913
 24030 003c 2346     		mov	r3, r4
 24031 003e 5B00     		lsls	r3, r3, #1
 24032 0040 2344     		add	r3, r3, r4
 24033 0042 1B01     		lsls	r3, r3, #4
 24034 0044 0344     		add	r3, r3, r0
 24035 0046 0B44     		add	r3, r3, r1
 24036 0048 03F29513 		addw	r3, r3, #405
 24037 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24038 004e 42FA03F3 		asr	r3, r2, r3
 24039 0052 1BB2     		sxth	r3, r3
 24040 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3460:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24041              		.loc 1 3460 0
 24042 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24043 0058 5B00     		lsls	r3, r3, #1
 24044 005a 0233     		adds	r3, r3, #2
 24045 005c 07F10C02 		add	r2, r7, #12
 24046 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24047 0062 07F11001 		add	r1, r7, #16
 24048 0066 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 527


 24049 0068 03F80C2C 		strb	r2, [r3, #-12]
3461:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24050              		.loc 1 3461 0
 24051 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24052 006e 5B00     		lsls	r3, r3, #1
 24053 0070 5A1C     		adds	r2, r3, #1
 24054 0072 07F10C03 		add	r3, r7, #12
 24055 0076 0133     		adds	r3, r3, #1
 24056 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24057 007a 07F11003 		add	r3, r7, #16
 24058 007e 1344     		add	r3, r3, r2
 24059 0080 0A46     		mov	r2, r1
 24060 0082 03F80C2C 		strb	r2, [r3, #-12]
 24061              	.L911:
3458:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24062              		.loc 1 3458 0 discriminator 1
 24063 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24064 0088 5A1E     		subs	r2, r3, #1
 24065 008a FA73     		strb	r2, [r7, #15]
 24066 008c 002B     		cmp	r3, #0
 24067 008e BFD1     		bne	.L912
3462:..\src/command_processing.c ****     }
3463:..\src/command_processing.c ****             
3464:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3465:..\src/command_processing.c **** 
3466:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24068              		.loc 1 3466 0
 24069 0090 3B1D     		adds	r3, r7, #4
 24070 0092 0721     		movs	r1, #7
 24071 0094 1846     		mov	r0, r3
 24072 0096 FFF7FEFF 		bl	LCRChecksum
 24073 009a 0346     		mov	r3, r0
 24074 009c FB72     		strb	r3, [r7, #11]
3467:..\src/command_processing.c **** 
3468:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24075              		.loc 1 3468 0
 24076 009e 3B1D     		adds	r3, r7, #4
 24077 00a0 0821     		movs	r1, #8
 24078 00a2 1846     		mov	r0, r3
 24079 00a4 FFF7FEFF 		bl	commWrite
3469:..\src/command_processing.c **** }
 24080              		.loc 1 3469 0
 24081 00a8 00BF     		nop
 24082 00aa 1437     		adds	r7, r7, #20
 24083              		.cfi_def_cfa_offset 12
 24084 00ac BD46     		mov	sp, r7
 24085              		.cfi_def_cfa_register 13
 24086              		@ sp needed
 24087 00ae 90BD     		pop	{r4, r7, pc}
 24088              	.L914:
 24089              		.align	2
 24090              	.L913:
 24091 00b0 00000000 		.word	g_mem
 24092 00b4 00000000 		.word	g_measOld
 24093              		.cfi_endproc
 24094              	.LFE95:
 24095              		.size	cmd_get_velocities, .-cmd_get_velocities
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 528


 24096              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24097              		.align	2
 24098              		.global	cmd_get_accelerations
 24099              		.thumb
 24100              		.thumb_func
 24101              		.type	cmd_get_accelerations, %function
 24102              	cmd_get_accelerations:
 24103              	.LFB96:
3470:..\src/command_processing.c **** 
3471:..\src/command_processing.c **** void cmd_get_accelerations(){
 24104              		.loc 1 3471 0
 24105              		.cfi_startproc
 24106              		@ args = 0, pretend = 0, frame = 16
 24107              		@ frame_needed = 1, uses_anonymous_args = 0
 24108 0000 90B5     		push	{r4, r7, lr}
 24109              		.cfi_def_cfa_offset 12
 24110              		.cfi_offset 4, -12
 24111              		.cfi_offset 7, -8
 24112              		.cfi_offset 14, -4
 24113 0002 85B0     		sub	sp, sp, #20
 24114              		.cfi_def_cfa_offset 32
 24115 0004 00AF     		add	r7, sp, #0
 24116              		.cfi_def_cfa_register 7
3472:..\src/command_processing.c ****  
3473:..\src/command_processing.c ****     uint8 CYDATA index;
3474:..\src/command_processing.c ****     int16 aux_int16;
3475:..\src/command_processing.c ****     
3476:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3477:..\src/command_processing.c ****     
3478:..\src/command_processing.c ****     uint8 packet_data[8]; 
3479:..\src/command_processing.c ****     
3480:..\src/command_processing.c ****     //Header package
3481:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24117              		.loc 1 3481 0
 24118 0006 8B23     		movs	r3, #139
 24119 0008 3B71     		strb	r3, [r7, #4]
3482:..\src/command_processing.c ****     
3483:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24120              		.loc 1 3483 0
 24121 000a 0323     		movs	r3, #3
 24122 000c FB73     		strb	r3, [r7, #15]
 24123 000e 39E0     		b	.L916
 24124              	.L917:
3484:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24125              		.loc 1 3484 0
 24126 0010 274B     		ldr	r3, .L918
 24127 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24128 0016 1A46     		mov	r2, r3
 24129 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24130 001a 2648     		ldr	r0, .L918+4
 24131 001c 1346     		mov	r3, r2
 24132 001e 5B00     		lsls	r3, r3, #1
 24133 0020 1344     		add	r3, r3, r2
 24134 0022 9B00     		lsls	r3, r3, #2
 24135 0024 1344     		add	r3, r3, r2
 24136 0026 0B44     		add	r3, r3, r1
 24137 0028 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 529


 24138 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24139 002e 204B     		ldr	r3, .L918
 24140 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24141 0034 1C46     		mov	r4, r3
 24142 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24143 0038 1D48     		ldr	r0, .L918
 24144 003a 2346     		mov	r3, r4
 24145 003c 5B00     		lsls	r3, r3, #1
 24146 003e 2344     		add	r3, r3, r4
 24147 0040 1B01     		lsls	r3, r3, #4
 24148 0042 0344     		add	r3, r3, r0
 24149 0044 0B44     		add	r3, r3, r1
 24150 0046 03F29513 		addw	r3, r3, #405
 24151 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24152 004c 42FA03F3 		asr	r3, r2, r3
 24153 0050 1BB2     		sxth	r3, r3
 24154 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3485:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24155              		.loc 1 3485 0
 24156 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24157 0056 5B00     		lsls	r3, r3, #1
 24158 0058 0233     		adds	r3, r3, #2
 24159 005a 07F10C02 		add	r2, r7, #12
 24160 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24161 0060 07F11001 		add	r1, r7, #16
 24162 0064 0B44     		add	r3, r3, r1
 24163 0066 03F80C2C 		strb	r2, [r3, #-12]
3486:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24164              		.loc 1 3486 0
 24165 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24166 006c 5B00     		lsls	r3, r3, #1
 24167 006e 5A1C     		adds	r2, r3, #1
 24168 0070 07F10C03 		add	r3, r7, #12
 24169 0074 0133     		adds	r3, r3, #1
 24170 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24171 0078 07F11003 		add	r3, r7, #16
 24172 007c 1344     		add	r3, r3, r2
 24173 007e 0A46     		mov	r2, r1
 24174 0080 03F80C2C 		strb	r2, [r3, #-12]
 24175              	.L916:
3483:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24176              		.loc 1 3483 0 discriminator 1
 24177 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24178 0086 5A1E     		subs	r2, r3, #1
 24179 0088 FA73     		strb	r2, [r7, #15]
 24180 008a 002B     		cmp	r3, #0
 24181 008c C0D1     		bne	.L917
3487:..\src/command_processing.c ****     }
3488:..\src/command_processing.c ****     
3489:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3490:..\src/command_processing.c **** 
3491:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24182              		.loc 1 3491 0
 24183 008e 3B1D     		adds	r3, r7, #4
 24184 0090 0721     		movs	r1, #7
 24185 0092 1846     		mov	r0, r3
 24186 0094 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 530


 24187 0098 0346     		mov	r3, r0
 24188 009a FB72     		strb	r3, [r7, #11]
3492:..\src/command_processing.c **** 
3493:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24189              		.loc 1 3493 0
 24190 009c 3B1D     		adds	r3, r7, #4
 24191 009e 0821     		movs	r1, #8
 24192 00a0 1846     		mov	r0, r3
 24193 00a2 FFF7FEFF 		bl	commWrite
3494:..\src/command_processing.c **** }
 24194              		.loc 1 3494 0
 24195 00a6 00BF     		nop
 24196 00a8 1437     		adds	r7, r7, #20
 24197              		.cfi_def_cfa_offset 12
 24198 00aa BD46     		mov	sp, r7
 24199              		.cfi_def_cfa_register 13
 24200              		@ sp needed
 24201 00ac 90BD     		pop	{r4, r7, pc}
 24202              	.L919:
 24203 00ae 00BF     		.align	2
 24204              	.L918:
 24205 00b0 00000000 		.word	g_mem
 24206 00b4 00000000 		.word	g_measOld
 24207              		.cfi_endproc
 24208              	.LFE96:
 24209              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24210              		.section	.text.cmd_get_joystick,"ax",%progbits
 24211              		.align	2
 24212              		.global	cmd_get_joystick
 24213              		.thumb
 24214              		.thumb_func
 24215              		.type	cmd_get_joystick, %function
 24216              	cmd_get_joystick:
 24217              	.LFB97:
3495:..\src/command_processing.c **** 
3496:..\src/command_processing.c **** void cmd_get_joystick() {
 24218              		.loc 1 3496 0
 24219              		.cfi_startproc
 24220              		@ args = 0, pretend = 0, frame = 8
 24221              		@ frame_needed = 1, uses_anonymous_args = 0
 24222 0000 80B5     		push	{r7, lr}
 24223              		.cfi_def_cfa_offset 8
 24224              		.cfi_offset 7, -8
 24225              		.cfi_offset 14, -4
 24226 0002 82B0     		sub	sp, sp, #8
 24227              		.cfi_def_cfa_offset 16
 24228 0004 00AF     		add	r7, sp, #0
 24229              		.cfi_def_cfa_register 7
3497:..\src/command_processing.c ****  
3498:..\src/command_processing.c ****     int16 aux_int16;
3499:..\src/command_processing.c ****     
3500:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3501:..\src/command_processing.c ****     
3502:..\src/command_processing.c ****     uint8 packet_data[6];
3503:..\src/command_processing.c ****     
3504:..\src/command_processing.c ****     // Header        
3505:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 531


 24230              		.loc 1 3505 0
 24231 0006 9223     		movs	r3, #146
 24232 0008 3B70     		strb	r3, [r7]
3506:..\src/command_processing.c ****     
3507:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24233              		.loc 1 3507 0
 24234 000a 134B     		ldr	r3, .L921
 24235 000c 1B6A     		ldr	r3, [r3, #32]
 24236 000e 1BB2     		sxth	r3, r3
 24237 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3508:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24238              		.loc 1 3508 0
 24239 0012 BB1D     		adds	r3, r7, #6
 24240 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24241 0016 BB70     		strb	r3, [r7, #2]
3509:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24242              		.loc 1 3509 0
 24243 0018 BB1D     		adds	r3, r7, #6
 24244 001a 0133     		adds	r3, r3, #1
 24245 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24246 001e 7B70     		strb	r3, [r7, #1]
3510:..\src/command_processing.c ****     
3511:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24247              		.loc 1 3511 0
 24248 0020 0D4B     		ldr	r3, .L921
 24249 0022 5B6A     		ldr	r3, [r3, #36]
 24250 0024 1BB2     		sxth	r3, r3
 24251 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3512:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24252              		.loc 1 3512 0
 24253 0028 BB1D     		adds	r3, r7, #6
 24254 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24255 002c 3B71     		strb	r3, [r7, #4]
3513:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24256              		.loc 1 3513 0
 24257 002e BB1D     		adds	r3, r7, #6
 24258 0030 0133     		adds	r3, r3, #1
 24259 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24260 0034 FB70     		strb	r3, [r7, #3]
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24261              		.loc 1 3515 0
 24262 0036 3B46     		mov	r3, r7
 24263 0038 0521     		movs	r1, #5
 24264 003a 1846     		mov	r0, r3
 24265 003c FFF7FEFF 		bl	LCRChecksum
 24266 0040 0346     		mov	r3, r0
 24267 0042 7B71     		strb	r3, [r7, #5]
3516:..\src/command_processing.c **** 
3517:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24268              		.loc 1 3517 0
 24269 0044 3B46     		mov	r3, r7
 24270 0046 0621     		movs	r1, #6
 24271 0048 1846     		mov	r0, r3
 24272 004a FFF7FEFF 		bl	commWrite
3518:..\src/command_processing.c **** }
 24273              		.loc 1 3518 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 532


 24274 004e 00BF     		nop
 24275 0050 0837     		adds	r7, r7, #8
 24276              		.cfi_def_cfa_offset 8
 24277 0052 BD46     		mov	sp, r7
 24278              		.cfi_def_cfa_register 13
 24279              		@ sp needed
 24280 0054 80BD     		pop	{r7, pc}
 24281              	.L922:
 24282 0056 00BF     		.align	2
 24283              	.L921:
 24284 0058 00000000 		.word	g_adc_measOld
 24285              		.cfi_endproc
 24286              	.LFE97:
 24287              		.size	cmd_get_joystick, .-cmd_get_joystick
 24288              		.section	.text.cmd_set_inputs,"ax",%progbits
 24289              		.align	2
 24290              		.global	cmd_set_inputs
 24291              		.thumb
 24292              		.thumb_func
 24293              		.type	cmd_set_inputs, %function
 24294              	cmd_set_inputs:
 24295              	.LFB98:
3519:..\src/command_processing.c **** 
3520:..\src/command_processing.c **** void cmd_set_inputs(){
 24296              		.loc 1 3520 0
 24297              		.cfi_startproc
 24298              		@ args = 0, pretend = 0, frame = 8
 24299              		@ frame_needed = 1, uses_anonymous_args = 0
 24300              		@ link register save eliminated.
 24301 0000 90B4     		push	{r4, r7}
 24302              		.cfi_def_cfa_offset 8
 24303              		.cfi_offset 4, -8
 24304              		.cfi_offset 7, -4
 24305 0002 82B0     		sub	sp, sp, #8
 24306              		.cfi_def_cfa_offset 16
 24307 0004 00AF     		add	r7, sp, #0
 24308              		.cfi_def_cfa_register 7
3521:..\src/command_processing.c ****     
3522:..\src/command_processing.c ****     // Store position setted in right variables
3523:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3524:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3525:..\src/command_processing.c ****     
3526:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24309              		.loc 1 3526 0
 24310 0006 894B     		ldr	r3, .L937
 24311 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24312 000a 1B02     		lsls	r3, r3, #8
 24313 000c 1AB2     		sxth	r2, r3
 24314 000e 874B     		ldr	r3, .L937
 24315 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24316 0012 1BB2     		sxth	r3, r3
 24317 0014 1343     		orrs	r3, r3, r2
 24318 0016 1BB2     		sxth	r3, r3
 24319 0018 3B80     		strh	r3, [r7]	@ movhi
3527:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24320              		.loc 1 3527 0
 24321 001a 844B     		ldr	r3, .L937
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 533


 24322 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24323 001e 1B02     		lsls	r3, r3, #8
 24324 0020 1AB2     		sxth	r2, r3
 24325 0022 824B     		ldr	r3, .L937
 24326 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24327 0026 1BB2     		sxth	r3, r3
 24328 0028 1343     		orrs	r3, r3, r2
 24329 002a 1BB2     		sxth	r3, r3
 24330 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24331              	.LBB31:
3528:..\src/command_processing.c ****     
3529:..\src/command_processing.c ****     // Check if last command received was the same as this 
3530:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3531:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24332              		.loc 1 3531 0
 24333 002e 0023     		movs	r3, #0
 24334 0030 FB71     		strb	r3, [r7, #7]
 24335 0032 1DE0     		b	.L924
 24336              	.L926:
3532:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24337              		.loc 1 3532 0
 24338 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24339 0036 7E4A     		ldr	r2, .L937+4
 24340 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24341 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24342 003e 5B00     		lsls	r3, r3, #1
 24343 0040 07F10801 		add	r1, r7, #8
 24344 0044 0B44     		add	r3, r3, r1
 24345 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24346 004a 9A42     		cmp	r2, r3
 24347 004c 02D0     		beq	.L925
3533:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24348              		.loc 1 3533 0
 24349 004e 794B     		ldr	r3, .L937+8
 24350 0050 0122     		movs	r2, #1
 24351 0052 1A70     		strb	r2, [r3]
 24352              	.L925:
3534:..\src/command_processing.c ****        }
3535:..\src/command_processing.c ****         // Update last command
3536:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24353              		.loc 1 3536 0 discriminator 2
 24354 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24355 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24356 0058 5B00     		lsls	r3, r3, #1
 24357 005a 07F10801 		add	r1, r7, #8
 24358 005e 0B44     		add	r3, r3, r1
 24359 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24360 0064 724B     		ldr	r3, .L937+4
 24361 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3531:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24362              		.loc 1 3531 0 discriminator 2
 24363 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24364 006c 0133     		adds	r3, r3, #1
 24365 006e FB71     		strb	r3, [r7, #7]
 24366              	.L924:
3531:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24367              		.loc 1 3531 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 534


 24368 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24369 0072 714B     		ldr	r3, .L937+12
 24370 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24371 0078 0133     		adds	r3, r3, #1
 24372 007a 9A42     		cmp	r2, r3
 24373 007c DADB     		blt	.L926
 24374              	.LBE31:
3537:..\src/command_processing.c ****     }
3538:..\src/command_processing.c ****     
3539:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3540:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24375              		.loc 1 3540 0 is_stmt 1
 24376 007e 6D4B     		ldr	r3, .L937+8
 24377 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24378 0082 002B     		cmp	r3, #0
 24379 0084 00F0CC80 		beq	.L936
 24380              	.LBB32:
3541:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24381              		.loc 1 3541 0
 24382 0088 0023     		movs	r3, #0
 24383 008a BB71     		strb	r3, [r7, #6]
 24384 008c C4E0     		b	.L928
 24385              	.L935:
3542:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24386              		.loc 1 3542 0
 24387 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24388 0090 6A49     		ldr	r1, .L937+16
 24389 0092 1346     		mov	r3, r2
 24390 0094 DB00     		lsls	r3, r3, #3
 24391 0096 9B1A     		subs	r3, r3, r2
 24392 0098 1B01     		lsls	r3, r3, #4
 24393 009a 0B44     		add	r3, r3, r1
 24394 009c 03F20F13 		addw	r3, r3, #271
 24395 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24396 00a2 022B     		cmp	r3, #2
 24397 00a4 0ED1     		bne	.L929
3543:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24398              		.loc 1 3543 0
 24399 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24400 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24401 00aa 5B00     		lsls	r3, r3, #1
 24402 00ac 07F10801 		add	r1, r7, #8
 24403 00b0 0B44     		add	r3, r3, r1
 24404 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24405 00b6 1846     		mov	r0, r3
 24406 00b8 6149     		ldr	r1, .L937+20
 24407 00ba 1301     		lsls	r3, r2, #4
 24408 00bc 0B44     		add	r3, r3, r1
 24409 00be 0433     		adds	r3, r3, #4
 24410 00c0 1860     		str	r0, [r3]
 24411 00c2 47E0     		b	.L930
 24412              	.L929:
3544:..\src/command_processing.c ****             }
3545:..\src/command_processing.c ****             else {
3546:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24413              		.loc 1 3546 0
 24414 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 535


 24415 00c6 5D49     		ldr	r1, .L937+16
 24416 00c8 1346     		mov	r3, r2
 24417 00ca DB00     		lsls	r3, r3, #3
 24418 00cc 9B1A     		subs	r3, r3, r2
 24419 00ce 1B01     		lsls	r3, r3, #4
 24420 00d0 0B44     		add	r3, r3, r1
 24421 00d2 03F20F13 		addw	r3, r3, #271
 24422 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24423 00d8 012B     		cmp	r3, #1
 24424 00da 0ED1     		bne	.L931
3547:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24425              		.loc 1 3547 0
 24426 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24427 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24428 00e0 5B00     		lsls	r3, r3, #1
 24429 00e2 07F10801 		add	r1, r7, #8
 24430 00e6 0B44     		add	r3, r3, r1
 24431 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24432 00ec 1846     		mov	r0, r3
 24433 00ee 5449     		ldr	r1, .L937+20
 24434 00f0 1301     		lsls	r3, r2, #4
 24435 00f2 0B44     		add	r3, r3, r1
 24436 00f4 0833     		adds	r3, r3, #8
 24437 00f6 1860     		str	r0, [r3]
 24438 00f8 2CE0     		b	.L930
 24439              	.L931:
3548:..\src/command_processing.c ****                 }
3549:..\src/command_processing.c ****                 else {
3550:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24440              		.loc 1 3550 0
 24441 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24442 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24443 00fe 5B00     		lsls	r3, r3, #1
 24444 0100 07F10801 		add	r1, r7, #8
 24445 0104 0B44     		add	r3, r3, r1
 24446 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24447 010a 1846     		mov	r0, r3
 24448 010c 4C49     		ldr	r1, .L937+20
 24449 010e 1301     		lsls	r3, r2, #4
 24450 0110 0B44     		add	r3, r3, r1
 24451 0112 1860     		str	r0, [r3]
3551:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24452              		.loc 1 3551 0
 24453 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24454 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24455 0118 494A     		ldr	r2, .L937+20
 24456 011a 1B01     		lsls	r3, r3, #4
 24457 011c 1344     		add	r3, r3, r2
 24458 011e 1868     		ldr	r0, [r3]
 24459 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24460 0122 454C     		ldr	r4, .L937+12
 24461 0124 1346     		mov	r3, r2
 24462 0126 DB00     		lsls	r3, r3, #3
 24463 0128 9B1A     		subs	r3, r3, r2
 24464 012a 1B01     		lsls	r3, r3, #4
 24465 012c 2344     		add	r3, r3, r4
 24466 012e 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 536


 24467 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24468 0134 1C46     		mov	r4, r3
 24469 0136 414A     		ldr	r2, .L937+16
 24470 0138 2346     		mov	r3, r4
 24471 013a 5B00     		lsls	r3, r3, #1
 24472 013c 2344     		add	r3, r3, r4
 24473 013e 1B01     		lsls	r3, r3, #4
 24474 0140 1344     		add	r3, r3, r2
 24475 0142 03F29513 		addw	r3, r3, #405
 24476 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24477 0148 00FA03F2 		lsl	r2, r0, r3
 24478 014c 3C48     		ldr	r0, .L937+20
 24479 014e 0B01     		lsls	r3, r1, #4
 24480 0150 0344     		add	r3, r3, r0
 24481 0152 1A60     		str	r2, [r3]
 24482              	.L930:
3552:..\src/command_processing.c ****                 }
3553:..\src/command_processing.c ****             }  
3554:..\src/command_processing.c ****                
3555:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3556:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24483              		.loc 1 3556 0
 24484 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24485 0156 3849     		ldr	r1, .L937+12
 24486 0158 1346     		mov	r3, r2
 24487 015a DB00     		lsls	r3, r3, #3
 24488 015c 9B1A     		subs	r3, r3, r2
 24489 015e 1B01     		lsls	r3, r3, #4
 24490 0160 0B44     		add	r3, r3, r1
 24491 0162 E333     		adds	r3, r3, #227
 24492 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24493 0166 002B     		cmp	r3, #0
 24494 0168 53D0     		beq	.L932
 24495              		.loc 1 3556 0 is_stmt 0 discriminator 1
 24496 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24497 016c 3349     		ldr	r1, .L937+16
 24498 016e 1346     		mov	r3, r2
 24499 0170 DB00     		lsls	r3, r3, #3
 24500 0172 9B1A     		subs	r3, r3, r2
 24501 0174 1B01     		lsls	r3, r3, #4
 24502 0176 0B44     		add	r3, r3, r1
 24503 0178 03F20F13 		addw	r3, r3, #271
 24504 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24505 017e 032B     		cmp	r3, #3
 24506 0180 0BD0     		beq	.L933
 24507              		.loc 1 3556 0 discriminator 2
 24508 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24509 0184 2D49     		ldr	r1, .L937+16
 24510 0186 1346     		mov	r3, r2
 24511 0188 DB00     		lsls	r3, r3, #3
 24512 018a 9B1A     		subs	r3, r3, r2
 24513 018c 1B01     		lsls	r3, r3, #4
 24514 018e 0B44     		add	r3, r3, r1
 24515 0190 03F20F13 		addw	r3, r3, #271
 24516 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24517 0196 002B     		cmp	r3, #0
 24518 0198 3BD1     		bne	.L932
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 537


 24519              	.L933:
3557:..\src/command_processing.c ****                 
3558:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24520              		.loc 1 3558 0 is_stmt 1
 24521 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24522 019c 284A     		ldr	r2, .L937+20
 24523 019e 1B01     		lsls	r3, r3, #4
 24524 01a0 1344     		add	r3, r3, r2
 24525 01a2 1968     		ldr	r1, [r3]
 24526 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24527 01a6 2448     		ldr	r0, .L937+12
 24528 01a8 1346     		mov	r3, r2
 24529 01aa DB00     		lsls	r3, r3, #3
 24530 01ac 9B1A     		subs	r3, r3, r2
 24531 01ae 1B01     		lsls	r3, r3, #4
 24532 01b0 0344     		add	r3, r3, r0
 24533 01b2 E433     		adds	r3, r3, #228
 24534 01b4 1B68     		ldr	r3, [r3]
 24535 01b6 9942     		cmp	r1, r3
 24536 01b8 0DDA     		bge	.L934
3559:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24537              		.loc 1 3559 0
 24538 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24539 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24540 01be 1E48     		ldr	r0, .L937+12
 24541 01c0 1346     		mov	r3, r2
 24542 01c2 DB00     		lsls	r3, r3, #3
 24543 01c4 9B1A     		subs	r3, r3, r2
 24544 01c6 1B01     		lsls	r3, r3, #4
 24545 01c8 0344     		add	r3, r3, r0
 24546 01ca E433     		adds	r3, r3, #228
 24547 01cc 1A68     		ldr	r2, [r3]
 24548 01ce 1C48     		ldr	r0, .L937+20
 24549 01d0 0B01     		lsls	r3, r1, #4
 24550 01d2 0344     		add	r3, r3, r0
 24551 01d4 1A60     		str	r2, [r3]
 24552              	.L934:
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24553              		.loc 1 3561 0
 24554 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24555 01d8 194A     		ldr	r2, .L937+20
 24556 01da 1B01     		lsls	r3, r3, #4
 24557 01dc 1344     		add	r3, r3, r2
 24558 01de 1968     		ldr	r1, [r3]
 24559 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24560 01e2 1548     		ldr	r0, .L937+12
 24561 01e4 1346     		mov	r3, r2
 24562 01e6 DB00     		lsls	r3, r3, #3
 24563 01e8 9B1A     		subs	r3, r3, r2
 24564 01ea 1B01     		lsls	r3, r3, #4
 24565 01ec 0344     		add	r3, r3, r0
 24566 01ee E833     		adds	r3, r3, #232
 24567 01f0 1B68     		ldr	r3, [r3]
 24568 01f2 9942     		cmp	r1, r3
 24569 01f4 0DDD     		ble	.L932
3562:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 538


 24570              		.loc 1 3562 0
 24571 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24572 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24573 01fa 0F48     		ldr	r0, .L937+12
 24574 01fc 1346     		mov	r3, r2
 24575 01fe DB00     		lsls	r3, r3, #3
 24576 0200 9B1A     		subs	r3, r3, r2
 24577 0202 1B01     		lsls	r3, r3, #4
 24578 0204 0344     		add	r3, r3, r0
 24579 0206 E833     		adds	r3, r3, #232
 24580 0208 1A68     		ldr	r2, [r3]
 24581 020a 0D48     		ldr	r0, .L937+20
 24582 020c 0B01     		lsls	r3, r1, #4
 24583 020e 0344     		add	r3, r3, r0
 24584 0210 1A60     		str	r2, [r3]
 24585              	.L932:
3541:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24586              		.loc 1 3541 0 discriminator 2
 24587 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24588 0214 0133     		adds	r3, r3, #1
 24589 0216 BB71     		strb	r3, [r7, #6]
 24590              	.L928:
3541:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24591              		.loc 1 3541 0 is_stmt 0 discriminator 1
 24592 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24593 021a 012B     		cmp	r3, #1
 24594 021c 7FF637AF 		bls	.L935
 24595              	.L936:
 24596              	.LBE32:
3563:..\src/command_processing.c ****             }
3564:..\src/command_processing.c ****         }  
3565:..\src/command_processing.c ****     }
3566:..\src/command_processing.c **** }
 24597              		.loc 1 3566 0 is_stmt 1
 24598 0220 00BF     		nop
 24599 0222 0837     		adds	r7, r7, #8
 24600              		.cfi_def_cfa_offset 8
 24601 0224 BD46     		mov	sp, r7
 24602              		.cfi_def_cfa_register 13
 24603              		@ sp needed
 24604 0226 90BC     		pop	{r4, r7}
 24605              		.cfi_restore 7
 24606              		.cfi_restore 4
 24607              		.cfi_def_cfa_offset 0
 24608 0228 7047     		bx	lr
 24609              	.L938:
 24610 022a 00BF     		.align	2
 24611              	.L937:
 24612 022c 00000000 		.word	g_rx
 24613 0230 08000000 		.word	last_aux_int16.11165
 24614 0234 00000000 		.word	change_ext_ref_flag
 24615 0238 00000000 		.word	c_mem
 24616 023c 00000000 		.word	g_mem
 24617 0240 00000000 		.word	g_refNew
 24618              		.cfi_endproc
 24619              	.LFE98:
 24620              		.size	cmd_set_inputs, .-cmd_set_inputs
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 539


 24621              		.section	.text.cmd_activate,"ax",%progbits
 24622              		.align	2
 24623              		.global	cmd_activate
 24624              		.thumb
 24625              		.thumb_func
 24626              		.type	cmd_activate, %function
 24627              	cmd_activate:
 24628              	.LFB99:
3567:..\src/command_processing.c **** 
3568:..\src/command_processing.c **** void cmd_activate(){
 24629              		.loc 1 3568 0
 24630              		.cfi_startproc
 24631              		@ args = 0, pretend = 0, frame = 8
 24632              		@ frame_needed = 1, uses_anonymous_args = 0
 24633 0000 80B5     		push	{r7, lr}
 24634              		.cfi_def_cfa_offset 8
 24635              		.cfi_offset 7, -8
 24636              		.cfi_offset 14, -4
 24637 0002 82B0     		sub	sp, sp, #8
 24638              		.cfi_def_cfa_offset 16
 24639 0004 00AF     		add	r7, sp, #0
 24640              		.cfi_def_cfa_register 7
3569:..\src/command_processing.c ****     
3570:..\src/command_processing.c ****     // Store new value reads
3571:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24641              		.loc 1 3571 0
 24642 0006 334B     		ldr	r3, .L948
 24643 0008 5B78     		ldrb	r3, [r3, #1]
 24644 000a FB71     		strb	r3, [r7, #7]
3572:..\src/command_processing.c ****     
3573:..\src/command_processing.c ****     // Check type of control mode enabled
3574:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24645              		.loc 1 3574 0
 24646 000c 324B     		ldr	r3, .L948+4
 24647 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24648 0012 002B     		cmp	r3, #0
 24649 0014 04D0     		beq	.L940
 24650              		.loc 1 3574 0 is_stmt 0 discriminator 1
 24651 0016 304B     		ldr	r3, .L948+4
 24652 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24653 001c 032B     		cmp	r3, #3
 24654 001e 0BD1     		bne	.L941
 24655              	.L940:
3575:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24656              		.loc 1 3575 0 is_stmt 1
 24657 0020 2D4B     		ldr	r3, .L948+4
 24658 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24659 0026 1946     		mov	r1, r3
 24660 0028 2C4A     		ldr	r2, .L948+8
 24661 002a 3423     		movs	r3, #52
 24662 002c 03FB01F3 		mul	r3, r3, r1
 24663 0030 1344     		add	r3, r3, r2
 24664 0032 1B68     		ldr	r3, [r3]
 24665 0034 2A4A     		ldr	r2, .L948+12
 24666 0036 1360     		str	r3, [r2]
 24667              	.L941:
3576:..\src/command_processing.c ****     }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 540


3577:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24668              		.loc 1 3577 0
 24669 0038 FB79     		ldrb	r3, [r7, #7]
 24670 003a 03F00103 		and	r3, r3, #1
 24671 003e DAB2     		uxtb	r2, r3
 24672 0040 274B     		ldr	r3, .L948+12
 24673 0042 1A73     		strb	r2, [r3, #12]
3578:..\src/command_processing.c ****     
3579:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3580:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
 24674              		.loc 1 3580 0
 24675 0044 244B     		ldr	r3, .L948+4
 24676 0046 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24677 004a 022B     		cmp	r3, #2
 24678 004c 0FD1     		bne	.L942
3581:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3582:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3583:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
 24679              		.loc 1 3583 0
 24680 004e 244B     		ldr	r3, .L948+12
 24681 0050 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24682 0052 002B     		cmp	r3, #0
 24683 0054 02D1     		bne	.L943
3584:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
 24684              		.loc 1 3584 0
 24685 0056 224B     		ldr	r3, .L948+12
 24686 0058 0022     		movs	r2, #0
 24687 005a 9A60     		str	r2, [r3, #8]
 24688              	.L943:
3585:..\src/command_processing.c ****         }
3586:..\src/command_processing.c ****         
3587:..\src/command_processing.c ****         // Activate or deactivate the valve
3588:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
 24689              		.loc 1 3588 0
 24690 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24691 005e 5B08     		lsrs	r3, r3, #1
 24692 0060 DBB2     		uxtb	r3, r3
 24693 0062 03F00103 		and	r3, r3, #1
 24694 0066 DBB2     		uxtb	r3, r3
 24695 0068 1846     		mov	r0, r3
 24696 006a FFF7FEFF 		bl	VALVE_Write
 24697              	.L942:
3589:..\src/command_processing.c ****     }
3590:..\src/command_processing.c **** #endif
3591:..\src/command_processing.c ****     
3592:..\src/command_processing.c ****     // Activate/Deactivate motor
3593:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24698              		.loc 1 3593 0
 24699 006e 1C4B     		ldr	r3, .L948+12
 24700 0070 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24701 0072 1946     		mov	r1, r3
 24702 0074 0020     		movs	r0, #0
 24703 0076 FFF7FEFF 		bl	enable_motor
3594:..\src/command_processing.c ****     
3595:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24704              		.loc 1 3595 0
 24705 007a 174B     		ldr	r3, .L948+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 541


 24706 007c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24707 0080 012B     		cmp	r3, #1
 24708 0082 23D1     		bne	.L947
3596:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24709              		.loc 1 3596 0
 24710 0084 144B     		ldr	r3, .L948+4
 24711 0086 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24712 008a 002B     		cmp	r3, #0
 24713 008c 04D0     		beq	.L945
 24714              		.loc 1 3596 0 is_stmt 0 discriminator 1
 24715 008e 124B     		ldr	r3, .L948+4
 24716 0090 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24717 0094 032B     		cmp	r3, #3
 24718 0096 0BD1     		bne	.L946
 24719              	.L945:
3597:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24720              		.loc 1 3597 0 is_stmt 1
 24721 0098 0F4B     		ldr	r3, .L948+4
 24722 009a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24723 009e 1946     		mov	r1, r3
 24724 00a0 0E4A     		ldr	r2, .L948+8
 24725 00a2 3423     		movs	r3, #52
 24726 00a4 03FB01F3 		mul	r3, r3, r1
 24727 00a8 1344     		add	r3, r3, r2
 24728 00aa 1B68     		ldr	r3, [r3]
 24729 00ac 0C4A     		ldr	r2, .L948+12
 24730 00ae 1361     		str	r3, [r2, #16]
 24731              	.L946:
3598:..\src/command_processing.c ****         }
3599:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24732              		.loc 1 3599 0
 24733 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24734 00b2 5B08     		lsrs	r3, r3, #1
 24735 00b4 DBB2     		uxtb	r3, r3
 24736 00b6 03F00103 		and	r3, r3, #1
 24737 00ba DAB2     		uxtb	r2, r3
 24738 00bc 084B     		ldr	r3, .L948+12
 24739 00be 1A77     		strb	r2, [r3, #28]
3600:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24740              		.loc 1 3600 0
 24741 00c0 074B     		ldr	r3, .L948+12
 24742 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24743 00c4 1946     		mov	r1, r3
 24744 00c6 0120     		movs	r0, #1
 24745 00c8 FFF7FEFF 		bl	enable_motor
 24746              	.L947:
3601:..\src/command_processing.c ****     }
3602:..\src/command_processing.c ****     
3603:..\src/command_processing.c **** }
 24747              		.loc 1 3603 0
 24748 00cc 00BF     		nop
 24749 00ce 0837     		adds	r7, r7, #8
 24750              		.cfi_def_cfa_offset 8
 24751 00d0 BD46     		mov	sp, r7
 24752              		.cfi_def_cfa_register 13
 24753              		@ sp needed
 24754 00d2 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 542


 24755              	.L949:
 24756              		.align	2
 24757              	.L948:
 24758 00d4 00000000 		.word	g_rx
 24759 00d8 00000000 		.word	g_mem
 24760 00dc 00000000 		.word	g_meas
 24761 00e0 00000000 		.word	g_refNew
 24762              		.cfi_endproc
 24763              	.LFE99:
 24764              		.size	cmd_activate, .-cmd_activate
 24765              		.section	.text.cmd_get_activate,"ax",%progbits
 24766              		.align	2
 24767              		.global	cmd_get_activate
 24768              		.thumb
 24769              		.thumb_func
 24770              		.type	cmd_get_activate, %function
 24771              	cmd_get_activate:
 24772              	.LFB100:
3604:..\src/command_processing.c **** 
3605:..\src/command_processing.c **** void cmd_get_activate(){
 24773              		.loc 1 3605 0
 24774              		.cfi_startproc
 24775              		@ args = 0, pretend = 0, frame = 8
 24776              		@ frame_needed = 1, uses_anonymous_args = 0
 24777 0000 80B5     		push	{r7, lr}
 24778              		.cfi_def_cfa_offset 8
 24779              		.cfi_offset 7, -8
 24780              		.cfi_offset 14, -4
 24781 0002 82B0     		sub	sp, sp, #8
 24782              		.cfi_def_cfa_offset 16
 24783 0004 00AF     		add	r7, sp, #0
 24784              		.cfi_def_cfa_register 7
3606:..\src/command_processing.c ****     
3607:..\src/command_processing.c ****     uint8 packet_data[3];
3608:..\src/command_processing.c **** 
3609:..\src/command_processing.c ****     // Header        
3610:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24785              		.loc 1 3610 0
 24786 0006 8123     		movs	r3, #129
 24787 0008 3B71     		strb	r3, [r7, #4]
3611:..\src/command_processing.c ****     
3612:..\src/command_processing.c ****     // Fill payload
3613:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24788              		.loc 1 3613 0
 24789 000a 124B     		ldr	r3, .L953
 24790 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24791 0010 012B     		cmp	r3, #1
 24792 0012 0BD1     		bne	.L951
3614:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24793              		.loc 1 3614 0
 24794 0014 104B     		ldr	r3, .L953+4
 24795 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24796 0018 5B00     		lsls	r3, r3, #1
 24797 001a 5AB2     		sxtb	r2, r3
 24798 001c 0E4B     		ldr	r3, .L953+4
 24799 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24800 0020 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 543


 24801 0022 1343     		orrs	r3, r3, r2
 24802 0024 5BB2     		sxtb	r3, r3
 24803 0026 DBB2     		uxtb	r3, r3
 24804 0028 7B71     		strb	r3, [r7, #5]
 24805 002a 02E0     		b	.L952
 24806              	.L951:
3615:..\src/command_processing.c ****     } 
3616:..\src/command_processing.c ****     else {
3617:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24807              		.loc 1 3617 0
 24808 002c 0A4B     		ldr	r3, .L953+4
 24809 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24810 0030 7B71     		strb	r3, [r7, #5]
 24811              	.L952:
3618:..\src/command_processing.c ****     }
3619:..\src/command_processing.c ****     
3620:..\src/command_processing.c ****     // Calculate checksum
3621:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24812              		.loc 1 3621 0
 24813 0032 3B1D     		adds	r3, r7, #4
 24814 0034 0221     		movs	r1, #2
 24815 0036 1846     		mov	r0, r3
 24816 0038 FFF7FEFF 		bl	LCRChecksum
 24817 003c 0346     		mov	r3, r0
 24818 003e BB71     		strb	r3, [r7, #6]
3622:..\src/command_processing.c ****     
3623:..\src/command_processing.c ****     // Send package to UART
3624:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24819              		.loc 1 3624 0
 24820 0040 3B1D     		adds	r3, r7, #4
 24821 0042 0321     		movs	r1, #3
 24822 0044 1846     		mov	r0, r3
 24823 0046 FFF7FEFF 		bl	commWrite
3625:..\src/command_processing.c **** 
3626:..\src/command_processing.c **** }
 24824              		.loc 1 3626 0
 24825 004a 00BF     		nop
 24826 004c 0837     		adds	r7, r7, #8
 24827              		.cfi_def_cfa_offset 8
 24828 004e BD46     		mov	sp, r7
 24829              		.cfi_def_cfa_register 13
 24830              		@ sp needed
 24831 0050 80BD     		pop	{r7, pc}
 24832              	.L954:
 24833 0052 00BF     		.align	2
 24834              	.L953:
 24835 0054 00000000 		.word	g_mem
 24836 0058 00000000 		.word	g_ref
 24837              		.cfi_endproc
 24838              	.LFE100:
 24839              		.size	cmd_get_activate, .-cmd_get_activate
 24840              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24841              		.align	2
 24842              		.global	cmd_get_curr_and_meas
 24843              		.thumb
 24844              		.thumb_func
 24845              		.type	cmd_get_curr_and_meas, %function
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 544


 24846              	cmd_get_curr_and_meas:
 24847              	.LFB101:
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24848              		.loc 1 3628 0
 24849              		.cfi_startproc
 24850              		@ args = 0, pretend = 0, frame = 16
 24851              		@ frame_needed = 1, uses_anonymous_args = 0
 24852 0000 90B5     		push	{r4, r7, lr}
 24853              		.cfi_def_cfa_offset 12
 24854              		.cfi_offset 4, -12
 24855              		.cfi_offset 7, -8
 24856              		.cfi_offset 14, -4
 24857 0002 85B0     		sub	sp, sp, #20
 24858              		.cfi_def_cfa_offset 32
 24859 0004 00AF     		add	r7, sp, #0
 24860              		.cfi_def_cfa_register 7
3629:..\src/command_processing.c ****     
3630:..\src/command_processing.c ****     uint8 CYDATA index;
3631:..\src/command_processing.c ****     int16 aux_int16;
3632:..\src/command_processing.c ****    
3633:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3634:..\src/command_processing.c ****     
3635:..\src/command_processing.c ****     uint8 packet_data[12]; 
3636:..\src/command_processing.c **** 
3637:..\src/command_processing.c ****     //Header package
3638:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24861              		.loc 1 3638 0
 24862 0006 8623     		movs	r3, #134
 24863 0008 3B70     		strb	r3, [r7]
3639:..\src/command_processing.c **** 
3640:..\src/command_processing.c ****     // Currents
3641:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24864              		.loc 1 3641 0
 24865 000a 484B     		ldr	r3, .L960
 24866 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24867 0010 1946     		mov	r1, r3
 24868 0012 474A     		ldr	r2, .L960+4
 24869 0014 3423     		movs	r3, #52
 24870 0016 03FB01F3 		mul	r3, r3, r1
 24871 001a 1344     		add	r3, r3, r2
 24872 001c 0C33     		adds	r3, r3, #12
 24873 001e 1B68     		ldr	r3, [r3]
 24874 0020 1BB2     		sxth	r3, r3
 24875 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3642:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24876              		.loc 1 3642 0
 24877 0024 07F10C03 		add	r3, r7, #12
 24878 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24879 002a BB70     		strb	r3, [r7, #2]
3643:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24880              		.loc 1 3643 0
 24881 002c 07F10C03 		add	r3, r7, #12
 24882 0030 0133     		adds	r3, r3, #1
 24883 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24884 0034 7B70     		strb	r3, [r7, #1]
3644:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 545


3645:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24885              		.loc 1 3645 0
 24886 0036 3F4B     		ldr	r3, .L960+8
 24887 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24888 003c 012B     		cmp	r3, #1
 24889 003e 0DD1     		bne	.L956
3646:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24890              		.loc 1 3646 0
 24891 0040 3A4B     		ldr	r3, .L960
 24892 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24893 0046 1946     		mov	r1, r3
 24894 0048 394A     		ldr	r2, .L960+4
 24895 004a 3423     		movs	r3, #52
 24896 004c 03FB01F3 		mul	r3, r3, r1
 24897 0050 1344     		add	r3, r3, r2
 24898 0052 0C33     		adds	r3, r3, #12
 24899 0054 1B68     		ldr	r3, [r3]
 24900 0056 1BB2     		sxth	r3, r3
 24901 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24902 005a 0CE0     		b	.L957
 24903              	.L956:
3647:..\src/command_processing.c ****     }
3648:..\src/command_processing.c ****     else {
3649:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24904              		.loc 1 3649 0
 24905 005c 334B     		ldr	r3, .L960
 24906 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24907 0062 1946     		mov	r1, r3
 24908 0064 324A     		ldr	r2, .L960+4
 24909 0066 3423     		movs	r3, #52
 24910 0068 03FB01F3 		mul	r3, r3, r1
 24911 006c 1344     		add	r3, r3, r2
 24912 006e 1033     		adds	r3, r3, #16
 24913 0070 1B68     		ldr	r3, [r3]
 24914 0072 1BB2     		sxth	r3, r3
 24915 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24916              	.L957:
3650:..\src/command_processing.c ****     }
3651:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24917              		.loc 1 3651 0
 24918 0076 07F10C03 		add	r3, r7, #12
 24919 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24920 007c 3B71     		strb	r3, [r7, #4]
3652:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24921              		.loc 1 3652 0
 24922 007e 07F10C03 		add	r3, r7, #12
 24923 0082 0133     		adds	r3, r3, #1
 24924 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24925 0086 FB70     		strb	r3, [r7, #3]
3653:..\src/command_processing.c **** 
3654:..\src/command_processing.c ****     // Positions
3655:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24926              		.loc 1 3655 0
 24927 0088 0323     		movs	r3, #3
 24928 008a FB73     		strb	r3, [r7, #15]
 24929 008c 38E0     		b	.L958
 24930              	.L959:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 546


3656:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24931              		.loc 1 3656 0
 24932 008e 274B     		ldr	r3, .L960
 24933 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24934 0094 1A46     		mov	r2, r3
 24935 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24936 0098 2548     		ldr	r0, .L960+4
 24937 009a 1346     		mov	r3, r2
 24938 009c 5B00     		lsls	r3, r3, #1
 24939 009e 1344     		add	r3, r3, r2
 24940 00a0 9B00     		lsls	r3, r3, #2
 24941 00a2 1344     		add	r3, r3, r2
 24942 00a4 0B44     		add	r3, r3, r1
 24943 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24944 00aa 204B     		ldr	r3, .L960
 24945 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24946 00b0 1C46     		mov	r4, r3
 24947 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24948 00b4 1D48     		ldr	r0, .L960
 24949 00b6 2346     		mov	r3, r4
 24950 00b8 5B00     		lsls	r3, r3, #1
 24951 00ba 2344     		add	r3, r3, r4
 24952 00bc 1B01     		lsls	r3, r3, #4
 24953 00be 0344     		add	r3, r3, r0
 24954 00c0 0B44     		add	r3, r3, r1
 24955 00c2 03F29513 		addw	r3, r3, #405
 24956 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24957 00c8 42FA03F3 		asr	r3, r2, r3
 24958 00cc 1BB2     		sxth	r3, r3
 24959 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3657:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24960              		.loc 1 3657 0
 24961 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24962 00d2 5B00     		lsls	r3, r3, #1
 24963 00d4 0633     		adds	r3, r3, #6
 24964 00d6 07F10C02 		add	r2, r7, #12
 24965 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24966 00dc 07F11001 		add	r1, r7, #16
 24967 00e0 0B44     		add	r3, r3, r1
 24968 00e2 03F8102C 		strb	r2, [r3, #-16]
3658:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24969              		.loc 1 3658 0
 24970 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24971 00e8 5B00     		lsls	r3, r3, #1
 24972 00ea 5A1D     		adds	r2, r3, #5
 24973 00ec 07F10C03 		add	r3, r7, #12
 24974 00f0 0133     		adds	r3, r3, #1
 24975 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24976 00f4 07F11003 		add	r3, r7, #16
 24977 00f8 1344     		add	r3, r3, r2
 24978 00fa 0A46     		mov	r2, r1
 24979 00fc 03F8102C 		strb	r2, [r3, #-16]
 24980              	.L958:
3655:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24981              		.loc 1 3655 0 discriminator 1
 24982 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24983 0102 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 547


 24984 0104 FA73     		strb	r2, [r7, #15]
 24985 0106 002B     		cmp	r3, #0
 24986 0108 C1D1     		bne	.L959
3659:..\src/command_processing.c ****     }
3660:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3661:..\src/command_processing.c ****         
3662:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 24987              		.loc 1 3662 0
 24988 010a 3B46     		mov	r3, r7
 24989 010c 0B21     		movs	r1, #11
 24990 010e 1846     		mov	r0, r3
 24991 0110 FFF7FEFF 		bl	LCRChecksum
 24992 0114 0346     		mov	r3, r0
 24993 0116 FB72     		strb	r3, [r7, #11]
3663:..\src/command_processing.c ****     commWrite(packet_data, 12);
 24994              		.loc 1 3663 0
 24995 0118 3B46     		mov	r3, r7
 24996 011a 0C21     		movs	r1, #12
 24997 011c 1846     		mov	r0, r3
 24998 011e FFF7FEFF 		bl	commWrite
3664:..\src/command_processing.c ****    
3665:..\src/command_processing.c **** }
 24999              		.loc 1 3665 0
 25000 0122 00BF     		nop
 25001 0124 1437     		adds	r7, r7, #20
 25002              		.cfi_def_cfa_offset 12
 25003 0126 BD46     		mov	sp, r7
 25004              		.cfi_def_cfa_register 13
 25005              		@ sp needed
 25006 0128 90BD     		pop	{r4, r7, pc}
 25007              	.L961:
 25008 012a 00BF     		.align	2
 25009              	.L960:
 25010 012c 00000000 		.word	g_mem
 25011 0130 00000000 		.word	g_measOld
 25012 0134 00000000 		.word	c_mem
 25013              		.cfi_endproc
 25014              	.LFE101:
 25015              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 25016              		.global	__aeabi_dmul
 25017              		.global	__aeabi_d2iz
 25018              		.section	.text.cmd_get_currents,"ax",%progbits
 25019              		.align	2
 25020              		.global	cmd_get_currents
 25021              		.thumb
 25022              		.thumb_func
 25023              		.type	cmd_get_currents, %function
 25024              	cmd_get_currents:
 25025              	.LFB102:
3666:..\src/command_processing.c **** 
3667:..\src/command_processing.c **** void cmd_get_currents(){
 25026              		.loc 1 3667 0
 25027              		.cfi_startproc
 25028              		@ args = 0, pretend = 0, frame = 16
 25029              		@ frame_needed = 1, uses_anonymous_args = 0
 25030 0000 90B5     		push	{r4, r7, lr}
 25031              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 548


 25032              		.cfi_offset 4, -12
 25033              		.cfi_offset 7, -8
 25034              		.cfi_offset 14, -4
 25035 0002 85B0     		sub	sp, sp, #20
 25036              		.cfi_def_cfa_offset 32
 25037 0004 00AF     		add	r7, sp, #0
 25038              		.cfi_def_cfa_register 7
3668:..\src/command_processing.c ****     
3669:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3670:..\src/command_processing.c ****     
3671:..\src/command_processing.c ****     uint8 packet_data[6]; 
3672:..\src/command_processing.c ****     int16 aux_int16;
3673:..\src/command_processing.c ****     
3674:..\src/command_processing.c ****     //Header package
3675:..\src/command_processing.c **** 
3676:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 25039              		.loc 1 3676 0
 25040 0006 8523     		movs	r3, #133
 25041 0008 3B72     		strb	r3, [r7, #8]
3677:..\src/command_processing.c **** 
3678:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 25042              		.loc 1 3678 0
 25043 000a 2E4B     		ldr	r3, .L967
 25044 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 25045 0010 022B     		cmp	r3, #2
 25046 0012 0DD0     		beq	.L963
3679:..\src/command_processing.c ****         // Currents
3680:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 25047              		.loc 1 3680 0
 25048 0014 2C4B     		ldr	r3, .L967+4
 25049 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25050 001a 1946     		mov	r1, r3
 25051 001c 2B4A     		ldr	r2, .L967+8
 25052 001e 3423     		movs	r3, #52
 25053 0020 03FB01F3 		mul	r3, r3, r1
 25054 0024 1344     		add	r3, r3, r2
 25055 0026 0C33     		adds	r3, r3, #12
 25056 0028 1B68     		ldr	r3, [r3]
 25057 002a 1BB2     		sxth	r3, r3
 25058 002c FB80     		strh	r3, [r7, #6]	@ movhi
 25059 002e 12E0     		b	.L964
 25060              	.L963:
3681:..\src/command_processing.c ****     }
3682:..\src/command_processing.c ****     else {
3683:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3684:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 25061              		.loc 1 3684 0
 25062 0030 274B     		ldr	r3, .L967+12
 25063 0032 1B68     		ldr	r3, [r3]	@ float
 25064 0034 1846     		mov	r0, r3
 25065 0036 FFF7FEFF 		bl	__aeabi_f2d
 25066 003a 4FF00002 		mov	r2, #0
 25067 003e 254B     		ldr	r3, .L967+16
 25068 0040 FFF7FEFF 		bl	__aeabi_dmul
 25069 0044 0346     		mov	r3, r0
 25070 0046 0C46     		mov	r4, r1
 25071 0048 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 549


 25072 004a 2146     		mov	r1, r4
 25073 004c FFF7FEFF 		bl	__aeabi_d2iz
 25074 0050 0346     		mov	r3, r0
 25075 0052 1BB2     		sxth	r3, r3
 25076 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25077              	.L964:
3685:..\src/command_processing.c ****     }
3686:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25078              		.loc 1 3686 0
 25079 0056 BB1D     		adds	r3, r7, #6
 25080 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25081 005a BB72     		strb	r3, [r7, #10]
3687:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25082              		.loc 1 3687 0
 25083 005c BB1D     		adds	r3, r7, #6
 25084 005e 0133     		adds	r3, r3, #1
 25085 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25086 0062 7B72     		strb	r3, [r7, #9]
3688:..\src/command_processing.c ****     
3689:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25087              		.loc 1 3689 0
 25088 0064 174B     		ldr	r3, .L967
 25089 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25090 006a 012B     		cmp	r3, #1
 25091 006c 0DD1     		bne	.L965
3690:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 25092              		.loc 1 3690 0
 25093 006e 164B     		ldr	r3, .L967+4
 25094 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25095 0074 1946     		mov	r1, r3
 25096 0076 154A     		ldr	r2, .L967+8
 25097 0078 3423     		movs	r3, #52
 25098 007a 03FB01F3 		mul	r3, r3, r1
 25099 007e 1344     		add	r3, r3, r2
 25100 0080 0C33     		adds	r3, r3, #12
 25101 0082 1B68     		ldr	r3, [r3]
 25102 0084 1BB2     		sxth	r3, r3
 25103 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25104 0088 03E0     		b	.L966
 25105              	.L965:
3691:..\src/command_processing.c ****     }
3692:..\src/command_processing.c ****     else {
3693:..\src/command_processing.c ****        // aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated curren
3694:..\src/command_processing.c ****         aux_int16 = (int16)PWM_IMU_2;
 25106              		.loc 1 3694 0
 25107 008a 134B     		ldr	r3, .L967+20
 25108 008c B3F90030 		ldrsh	r3, [r3]
 25109 0090 FB80     		strh	r3, [r7, #6]	@ movhi
 25110              	.L966:
3695:..\src/command_processing.c ****     }
3696:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25111              		.loc 1 3696 0
 25112 0092 BB1D     		adds	r3, r7, #6
 25113 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25114 0096 3B73     		strb	r3, [r7, #12]
3697:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25115              		.loc 1 3697 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 550


 25116 0098 BB1D     		adds	r3, r7, #6
 25117 009a 0133     		adds	r3, r3, #1
 25118 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25119 009e FB72     		strb	r3, [r7, #11]
3698:..\src/command_processing.c **** 
3699:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3700:..\src/command_processing.c **** 
3701:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25120              		.loc 1 3701 0
 25121 00a0 07F10803 		add	r3, r7, #8
 25122 00a4 0521     		movs	r1, #5
 25123 00a6 1846     		mov	r0, r3
 25124 00a8 FFF7FEFF 		bl	LCRChecksum
 25125 00ac 0346     		mov	r3, r0
 25126 00ae 7B73     		strb	r3, [r7, #13]
3702:..\src/command_processing.c ****     
3703:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25127              		.loc 1 3703 0
 25128 00b0 07F10803 		add	r3, r7, #8
 25129 00b4 0621     		movs	r1, #6
 25130 00b6 1846     		mov	r0, r3
 25131 00b8 FFF7FEFF 		bl	commWrite
3704:..\src/command_processing.c **** }
 25132              		.loc 1 3704 0
 25133 00bc 00BF     		nop
 25134 00be 1437     		adds	r7, r7, #20
 25135              		.cfi_def_cfa_offset 12
 25136 00c0 BD46     		mov	sp, r7
 25137              		.cfi_def_cfa_register 13
 25138              		@ sp needed
 25139 00c2 90BD     		pop	{r4, r7, pc}
 25140              	.L968:
 25141              		.align	2
 25142              	.L967:
 25143 00c4 00000000 		.word	c_mem
 25144 00c8 00000000 		.word	g_mem
 25145 00cc 00000000 		.word	g_measOld
 25146 00d0 00000000 		.word	g_fb_meas
 25147 00d4 00005940 		.word	1079574528
 25148 00d8 00000000 		.word	PWM_IMU_2
 25149              		.cfi_endproc
 25150              	.LFE102:
 25151              		.size	cmd_get_currents, .-cmd_get_currents
 25152              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25153              		.align	2
 25154              		.global	cmd_get_currents_for_cuff
 25155              		.thumb
 25156              		.thumb_func
 25157              		.type	cmd_get_currents_for_cuff, %function
 25158              	cmd_get_currents_for_cuff:
 25159              	.LFB103:
3705:..\src/command_processing.c **** 
3706:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25160              		.loc 1 3706 0
 25161              		.cfi_startproc
 25162              		@ args = 0, pretend = 0, frame = 8
 25163              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 551


 25164 0000 80B5     		push	{r7, lr}
 25165              		.cfi_def_cfa_offset 8
 25166              		.cfi_offset 7, -8
 25167              		.cfi_offset 14, -4
 25168 0002 82B0     		sub	sp, sp, #8
 25169              		.cfi_def_cfa_offset 16
 25170 0004 00AF     		add	r7, sp, #0
 25171              		.cfi_def_cfa_register 7
3707:..\src/command_processing.c ****     
3708:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3709:..\src/command_processing.c ****     
3710:..\src/command_processing.c ****     uint8 packet_data[4]; 
3711:..\src/command_processing.c ****     int16 aux_int16;
3712:..\src/command_processing.c ****     
3713:..\src/command_processing.c ****     //Header package
3714:..\src/command_processing.c **** 
3715:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25172              		.loc 1 3715 0
 25173 0006 8E23     		movs	r3, #142
 25174 0008 3B71     		strb	r3, [r7, #4]
3716:..\src/command_processing.c **** 
3717:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25175              		.loc 1 3717 0
 25176 000a 144B     		ldr	r3, .L970
 25177 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25178 0010 1946     		mov	r1, r3
 25179 0012 134A     		ldr	r2, .L970+4
 25180 0014 3423     		movs	r3, #52
 25181 0016 03FB01F3 		mul	r3, r3, r1
 25182 001a 1344     		add	r3, r3, r2
 25183 001c 1033     		adds	r3, r3, #16
 25184 001e 1B68     		ldr	r3, [r3]
 25185 0020 1BB2     		sxth	r3, r3
 25186 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3718:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25187              		.loc 1 3718 0
 25188 0024 BB1C     		adds	r3, r7, #2
 25189 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25190 0028 BB71     		strb	r3, [r7, #6]
3719:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25191              		.loc 1 3719 0
 25192 002a BB1C     		adds	r3, r7, #2
 25193 002c 0133     		adds	r3, r3, #1
 25194 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25195 0030 7B71     		strb	r3, [r7, #5]
3720:..\src/command_processing.c **** 
3721:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3722:..\src/command_processing.c **** 
3723:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25196              		.loc 1 3723 0
 25197 0032 3B1D     		adds	r3, r7, #4
 25198 0034 0321     		movs	r1, #3
 25199 0036 1846     		mov	r0, r3
 25200 0038 FFF7FEFF 		bl	LCRChecksum
 25201 003c 0346     		mov	r3, r0
 25202 003e FB71     		strb	r3, [r7, #7]
3724:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 552


3725:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25203              		.loc 1 3725 0
 25204 0040 064B     		ldr	r3, .L970
 25205 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25206 0046 013B     		subs	r3, r3, #1
 25207 0048 DAB2     		uxtb	r2, r3
 25208 004a 3B1D     		adds	r3, r7, #4
 25209 004c 0421     		movs	r1, #4
 25210 004e 1846     		mov	r0, r3
 25211 0050 FFF7FEFF 		bl	commWriteID
3726:..\src/command_processing.c **** }
 25212              		.loc 1 3726 0
 25213 0054 00BF     		nop
 25214 0056 0837     		adds	r7, r7, #8
 25215              		.cfi_def_cfa_offset 8
 25216 0058 BD46     		mov	sp, r7
 25217              		.cfi_def_cfa_register 13
 25218              		@ sp needed
 25219 005a 80BD     		pop	{r7, pc}
 25220              	.L971:
 25221              		.align	2
 25222              	.L970:
 25223 005c 00000000 		.word	g_mem
 25224 0060 00000000 		.word	g_measOld
 25225              		.cfi_endproc
 25226              	.LFE103:
 25227              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25228              		.section	.text.cmd_get_vibrotactile_inputs,"ax",%progbits
 25229              		.align	2
 25230              		.global	cmd_get_vibrotactile_inputs
 25231              		.thumb
 25232              		.thumb_func
 25233              		.type	cmd_get_vibrotactile_inputs, %function
 25234              	cmd_get_vibrotactile_inputs:
 25235              	.LFB104:
3727:..\src/command_processing.c **** 
3728:..\src/command_processing.c **** void cmd_get_vibrotactile_inputs(){
 25236              		.loc 1 3728 0
 25237              		.cfi_startproc
 25238              		@ args = 0, pretend = 0, frame = 0
 25239              		@ frame_needed = 1, uses_anonymous_args = 0
 25240              		@ link register save eliminated.
 25241 0000 80B4     		push	{r7}
 25242              		.cfi_def_cfa_offset 4
 25243              		.cfi_offset 7, -4
 25244 0002 00AF     		add	r7, sp, #0
 25245              		.cfi_def_cfa_register 7
3729:..\src/command_processing.c ****     
3730:..\src/command_processing.c **** }
 25246              		.loc 1 3730 0
 25247 0004 00BF     		nop
 25248 0006 BD46     		mov	sp, r7
 25249              		.cfi_def_cfa_register 13
 25250              		@ sp needed
 25251 0008 80BC     		pop	{r7}
 25252              		.cfi_restore 7
 25253              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 553


 25254 000a 7047     		bx	lr
 25255              		.cfi_endproc
 25256              	.LFE104:
 25257              		.size	cmd_get_vibrotactile_inputs, .-cmd_get_vibrotactile_inputs
 25258              		.section	.text.commReadIMUFromSH,"ax",%progbits
 25259              		.align	2
 25260              		.global	commReadIMUFromSH
 25261              		.thumb
 25262              		.thumb_func
 25263              		.type	commReadIMUFromSH, %function
 25264              	commReadIMUFromSH:
 25265              	.LFB105:
3731:..\src/command_processing.c **** 
3732:..\src/command_processing.c **** //==============================================================================
3733:..\src/command_processing.c **** //                                                 READ IMU VALUES FROM SOFTHAND
3734:..\src/command_processing.c **** //==============================================================================
3735:..\src/command_processing.c **** void commReadIMUFromSH(){
 25266              		.loc 1 3735 0
 25267              		.cfi_startproc
 25268              		@ args = 0, pretend = 0, frame = 32
 25269              		@ frame_needed = 1, uses_anonymous_args = 0
 25270 0000 80B5     		push	{r7, lr}
 25271              		.cfi_def_cfa_offset 8
 25272              		.cfi_offset 7, -8
 25273              		.cfi_offset 14, -4
 25274 0002 88B0     		sub	sp, sp, #32
 25275              		.cfi_def_cfa_offset 40
 25276 0004 00AF     		add	r7, sp, #0
 25277              		.cfi_def_cfa_register 7
3736:..\src/command_processing.c **** 
3737:..\src/command_processing.c ****     // Send CMD_GET_VIBROTACTILE_INPUTS to the slave and gets the PWM control values for the vibrot
3738:..\src/command_processing.c ****     // resulted from the processed IMU values.
3739:..\src/command_processing.c ****     
3740:..\src/command_processing.c ****     uint8 packet_data[16];
3741:..\src/command_processing.c ****     uint8 packet_length;
3742:..\src/command_processing.c ****    
3743:..\src/command_processing.c ****     uint32 t_start, t_end;
3744:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25278              		.loc 1 3744 0
 25279 0006 0123     		movs	r3, #1
 25280 0008 FB77     		strb	r3, [r7, #31]
3745:..\src/command_processing.c **** 
3746:..\src/command_processing.c ****     packet_length = 2;
 25281              		.loc 1 3746 0
 25282 000a 0223     		movs	r3, #2
 25283 000c BB77     		strb	r3, [r7, #30]
3747:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VIBROTACTILE_INPUTS;
 25284              		.loc 1 3747 0
 25285 000e FA23     		movs	r3, #250
 25286 0010 3B71     		strb	r3, [r7, #4]
3748:..\src/command_processing.c ****     packet_data[1] = CMD_GET_VIBROTACTILE_INPUTS;
 25287              		.loc 1 3748 0
 25288 0012 FA23     		movs	r3, #250
 25289 0014 7B71     		strb	r3, [r7, #5]
3749:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 25290              		.loc 1 3749 0
 25291 0016 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 554


 25292 0018 99B2     		uxth	r1, r3
 25293 001a 234B     		ldr	r3, .L980
 25294 001c 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25295 0020 3B1D     		adds	r3, r7, #4
 25296 0022 1846     		mov	r0, r3
 25297 0024 FFF7FEFF 		bl	commWriteID
3750:..\src/command_processing.c **** 
3751:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25298              		.loc 1 3751 0
 25299 0028 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25300 002c 0346     		mov	r3, r0
 25301 002e BB61     		str	r3, [r7, #24]
3752:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_VIBROTACTILE_INPUTS) {
 25302              		.loc 1 3752 0
 25303 0030 18E0     		b	.L974
 25304              	.L977:
3753:..\src/command_processing.c ****         if (interrupt_flag){
 25305              		.loc 1 3753 0
 25306 0032 1E4B     		ldr	r3, .L980+4
 25307 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25308 0036 002B     		cmp	r3, #0
 25309 0038 04D0     		beq	.L975
3754:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25310              		.loc 1 3754 0
 25311 003a 1C4B     		ldr	r3, .L980+4
 25312 003c 0022     		movs	r2, #0
 25313 003e 1A70     		strb	r2, [r3]
3755:..\src/command_processing.c ****             interrupt_manager();
 25314              		.loc 1 3755 0
 25315 0040 FFF7FEFF 		bl	interrupt_manager
 25316              	.L975:
3756:..\src/command_processing.c ****         }
3757:..\src/command_processing.c **** 
3758:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25317              		.loc 1 3758 0
 25318 0044 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25319 0048 0346     		mov	r3, r0
 25320 004a 7B61     		str	r3, [r7, #20]
3759:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25321              		.loc 1 3759 0
 25322 004c BA69     		ldr	r2, [r7, #24]
 25323 004e 7B69     		ldr	r3, [r7, #20]
 25324 0050 D31A     		subs	r3, r2, r3
 25325 0052 174A     		ldr	r2, .L980+8
 25326 0054 9342     		cmp	r3, r2
 25327 0056 05D9     		bls	.L974
3760:..\src/command_processing.c ****             read_flag = FALSE;
 25328              		.loc 1 3760 0
 25329 0058 0023     		movs	r3, #0
 25330 005a FB77     		strb	r3, [r7, #31]
3761:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25331              		.loc 1 3761 0
 25332 005c 154B     		ldr	r3, .L980+12
 25333 005e 0022     		movs	r2, #0
 25334 0060 1A70     		strb	r2, [r3]
3762:..\src/command_processing.c ****             break;
 25335              		.loc 1 3762 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 555


 25336 0062 03E0     		b	.L976
 25337              	.L974:
3752:..\src/command_processing.c ****         if (interrupt_flag){
 25338              		.loc 1 3752 0
 25339 0064 144B     		ldr	r3, .L980+16
 25340 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25341 0068 FB2B     		cmp	r3, #251
 25342 006a E2D1     		bne	.L977
 25343              	.L976:
3763:..\src/command_processing.c ****         }
3764:..\src/command_processing.c ****     }
3765:..\src/command_processing.c **** 
3766:..\src/command_processing.c ****         if (read_flag) {
 25344              		.loc 1 3766 0
 25345 006c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25346 006e 002B     		cmp	r3, #0
 25347 0070 15D0     		beq	.L979
3767:..\src/command_processing.c ****         PWM_IMU_1 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);      
 25348              		.loc 1 3767 0
 25349 0072 114B     		ldr	r3, .L980+16
 25350 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25351 0076 1B02     		lsls	r3, r3, #8
 25352 0078 1AB2     		sxth	r2, r3
 25353 007a 0F4B     		ldr	r3, .L980+16
 25354 007c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25355 007e 1BB2     		sxth	r3, r3
 25356 0080 1343     		orrs	r3, r3, r2
 25357 0082 1AB2     		sxth	r2, r3
 25358 0084 0D4B     		ldr	r3, .L980+20
 25359 0086 1A80     		strh	r2, [r3]	@ movhi
3768:..\src/command_processing.c ****         PWM_IMU_2 = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);      
 25360              		.loc 1 3768 0
 25361 0088 0B4B     		ldr	r3, .L980+16
 25362 008a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 25363 008c 1B02     		lsls	r3, r3, #8
 25364 008e 1AB2     		sxth	r2, r3
 25365 0090 094B     		ldr	r3, .L980+16
 25366 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 25367 0094 1BB2     		sxth	r3, r3
 25368 0096 1343     		orrs	r3, r3, r2
 25369 0098 1AB2     		sxth	r2, r3
 25370 009a 094B     		ldr	r3, .L980+24
 25371 009c 1A80     		strh	r2, [r3]	@ movhi
 25372              	.L979:
3769:..\src/command_processing.c ****     }
3770:..\src/command_processing.c ****     
3771:..\src/command_processing.c **** }
 25373              		.loc 1 3771 0
 25374 009e 00BF     		nop
 25375 00a0 2037     		adds	r7, r7, #32
 25376              		.cfi_def_cfa_offset 8
 25377 00a2 BD46     		mov	sp, r7
 25378              		.cfi_def_cfa_register 13
 25379              		@ sp needed
 25380 00a4 80BD     		pop	{r7, pc}
 25381              	.L981:
 25382 00a6 00BF     		.align	2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 556


 25383              	.L980:
 25384 00a8 00000000 		.word	c_mem
 25385 00ac 00000000 		.word	interrupt_flag
 25386 00b0 20AA4400 		.word	4500000
 25387 00b4 00000000 		.word	master_mode
 25388 00b8 00000000 		.word	g_rx
 25389 00bc 00000000 		.word	PWM_IMU_1
 25390 00c0 00000000 		.word	PWM_IMU_2
 25391              		.cfi_endproc
 25392              	.LFE105:
 25393              		.size	commReadIMUFromSH, .-commReadIMUFromSH
 25394              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25395              		.align	2
 25396              		.global	commReadResCurrFromSH
 25397              		.thumb
 25398              		.thumb_func
 25399              		.type	commReadResCurrFromSH, %function
 25400              	commReadResCurrFromSH:
 25401              	.LFB106:
3772:..\src/command_processing.c **** 
3773:..\src/command_processing.c **** //==============================================================================
3774:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3775:..\src/command_processing.c **** //==============================================================================
3776:..\src/command_processing.c **** 
3777:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3778:..\src/command_processing.c **** {
 25402              		.loc 1 3778 0
 25403              		.cfi_startproc
 25404              		@ args = 0, pretend = 0, frame = 32
 25405              		@ frame_needed = 1, uses_anonymous_args = 0
 25406 0000 80B5     		push	{r7, lr}
 25407              		.cfi_def_cfa_offset 8
 25408              		.cfi_offset 7, -8
 25409              		.cfi_offset 14, -4
 25410 0002 88B0     		sub	sp, sp, #32
 25411              		.cfi_def_cfa_offset 40
 25412 0004 00AF     		add	r7, sp, #0
 25413              		.cfi_def_cfa_register 7
3779:..\src/command_processing.c ****     uint8 packet_data[16];
3780:..\src/command_processing.c ****     uint8 packet_length;
3781:..\src/command_processing.c ****     int16 curr_diff = 0;
 25414              		.loc 1 3781 0
 25415 0006 0023     		movs	r3, #0
 25416 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3782:..\src/command_processing.c ****     uint32 t_start, t_end;
3783:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25417              		.loc 1 3783 0
 25418 000a 0123     		movs	r3, #1
 25419 000c 7B77     		strb	r3, [r7, #29]
3784:..\src/command_processing.c **** 
3785:..\src/command_processing.c ****     packet_length = 2;
 25420              		.loc 1 3785 0
 25421 000e 0223     		movs	r3, #2
 25422 0010 3B77     		strb	r3, [r7, #28]
3786:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25423              		.loc 1 3786 0
 25424 0012 8C23     		movs	r3, #140
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 557


 25425 0014 3B71     		strb	r3, [r7, #4]
3787:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25426              		.loc 1 3787 0
 25427 0016 8C23     		movs	r3, #140
 25428 0018 7B71     		strb	r3, [r7, #5]
3788:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, c_mem.MS.slave_ID);
 25429              		.loc 1 3788 0
 25430 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25431 001c 99B2     		uxth	r1, r3
 25432 001e 1D4B     		ldr	r3, .L989
 25433 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25434 0024 3B1D     		adds	r3, r7, #4
 25435 0026 1846     		mov	r0, r3
 25436 0028 FFF7FEFF 		bl	commWriteID
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25437              		.loc 1 3790 0
 25438 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25439 0030 0346     		mov	r3, r0
 25440 0032 BB61     		str	r3, [r7, #24]
3791:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25441              		.loc 1 3791 0
 25442 0034 18E0     		b	.L983
 25443              	.L986:
3792:..\src/command_processing.c ****         if (interrupt_flag){
 25444              		.loc 1 3792 0
 25445 0036 184B     		ldr	r3, .L989+4
 25446 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25447 003a 002B     		cmp	r3, #0
 25448 003c 04D0     		beq	.L984
3793:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25449              		.loc 1 3793 0
 25450 003e 164B     		ldr	r3, .L989+4
 25451 0040 0022     		movs	r2, #0
 25452 0042 1A70     		strb	r2, [r3]
3794:..\src/command_processing.c ****             interrupt_manager();
 25453              		.loc 1 3794 0
 25454 0044 FFF7FEFF 		bl	interrupt_manager
 25455              	.L984:
3795:..\src/command_processing.c ****         }
3796:..\src/command_processing.c **** 
3797:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25456              		.loc 1 3797 0
 25457 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25458 004c 0346     		mov	r3, r0
 25459 004e 7B61     		str	r3, [r7, #20]
3798:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25460              		.loc 1 3798 0
 25461 0050 BA69     		ldr	r2, [r7, #24]
 25462 0052 7B69     		ldr	r3, [r7, #20]
 25463 0054 D31A     		subs	r3, r2, r3
 25464 0056 114A     		ldr	r2, .L989+8
 25465 0058 9342     		cmp	r3, r2
 25466 005a 05D9     		bls	.L983
3799:..\src/command_processing.c ****             read_flag = FALSE;
 25467              		.loc 1 3799 0
 25468 005c 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 558


 25469 005e 7B77     		strb	r3, [r7, #29]
3800:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25470              		.loc 1 3800 0
 25471 0060 0F4B     		ldr	r3, .L989+12
 25472 0062 0022     		movs	r2, #0
 25473 0064 1A70     		strb	r2, [r3]
3801:..\src/command_processing.c ****             break;
 25474              		.loc 1 3801 0
 25475 0066 03E0     		b	.L985
 25476              	.L983:
3791:..\src/command_processing.c ****         if (interrupt_flag){
 25477              		.loc 1 3791 0
 25478 0068 0E4B     		ldr	r3, .L989+16
 25479 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25480 006c 8E2B     		cmp	r3, #142
 25481 006e E2D1     		bne	.L986
 25482              	.L985:
3802:..\src/command_processing.c ****         }
3803:..\src/command_processing.c ****     }
3804:..\src/command_processing.c **** 
3805:..\src/command_processing.c ****     if (read_flag) {
 25483              		.loc 1 3805 0
 25484 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25485 0072 002B     		cmp	r3, #0
 25486 0074 08D0     		beq	.L987
3806:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25487              		.loc 1 3806 0
 25488 0076 0B4B     		ldr	r3, .L989+16
 25489 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25490 007a 1B02     		lsls	r3, r3, #8
 25491 007c 1AB2     		sxth	r2, r3
 25492 007e 094B     		ldr	r3, .L989+16
 25493 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25494 0082 1BB2     		sxth	r3, r3
 25495 0084 1343     		orrs	r3, r3, r2
 25496 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25497              	.L987:
3807:..\src/command_processing.c ****     }
3808:..\src/command_processing.c ****     
3809:..\src/command_processing.c ****     return curr_diff;
 25498              		.loc 1 3809 0
 25499 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3810:..\src/command_processing.c **** }
 25500              		.loc 1 3810 0
 25501 008c 1846     		mov	r0, r3
 25502 008e 2037     		adds	r7, r7, #32
 25503              		.cfi_def_cfa_offset 8
 25504 0090 BD46     		mov	sp, r7
 25505              		.cfi_def_cfa_register 13
 25506              		@ sp needed
 25507 0092 80BD     		pop	{r7, pc}
 25508              	.L990:
 25509              		.align	2
 25510              	.L989:
 25511 0094 00000000 		.word	c_mem
 25512 0098 00000000 		.word	interrupt_flag
 25513 009c 20AA4400 		.word	4500000
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 559


 25514 00a0 00000000 		.word	master_mode
 25515 00a4 00000000 		.word	g_rx
 25516              		.cfi_endproc
 25517              	.LFE106:
 25518              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25519              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25520              		.align	2
 25521              		.global	cmd_set_baudrate
 25522              		.thumb
 25523              		.thumb_func
 25524              		.type	cmd_set_baudrate, %function
 25525              	cmd_set_baudrate:
 25526              	.LFB107:
3811:..\src/command_processing.c **** 
3812:..\src/command_processing.c **** 
3813:..\src/command_processing.c **** /////////////////////////////////////////////////////////////////////////////////////
3814:..\src/command_processing.c **** 
3815:..\src/command_processing.c **** void cmd_set_baudrate(){
 25527              		.loc 1 3815 0
 25528              		.cfi_startproc
 25529              		@ args = 0, pretend = 0, frame = 0
 25530              		@ frame_needed = 1, uses_anonymous_args = 0
 25531 0000 80B5     		push	{r7, lr}
 25532              		.cfi_def_cfa_offset 8
 25533              		.cfi_offset 7, -8
 25534              		.cfi_offset 14, -4
 25535 0002 00AF     		add	r7, sp, #0
 25536              		.cfi_def_cfa_register 7
3816:..\src/command_processing.c ****     
3817:..\src/command_processing.c ****     // Set BaudRate
3818:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25537              		.loc 1 3818 0
 25538 0004 094B     		ldr	r3, .L996
 25539 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25540 0008 094B     		ldr	r3, .L996+4
 25541 000a 83F8AA20 		strb	r2, [r3, #170]
3819:..\src/command_processing.c ****     
3820:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25542              		.loc 1 3820 0
 25543 000e 074B     		ldr	r3, .L996
 25544 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25545 0012 0D2B     		cmp	r3, #13
 25546 0014 04D1     		bne	.L995
3821:..\src/command_processing.c ****         case 13:
3822:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25547              		.loc 1 3822 0
 25548 0016 0121     		movs	r1, #1
 25549 0018 0C20     		movs	r0, #12
 25550 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3823:..\src/command_processing.c ****             break;
 25551              		.loc 1 3823 0
 25552 001e 03E0     		b	.L994
 25553              	.L995:
3824:..\src/command_processing.c ****         default:
3825:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25554              		.loc 1 3825 0
 25555 0020 0121     		movs	r1, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 560


 25556 0022 0220     		movs	r0, #2
 25557 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25558              	.L994:
3826:..\src/command_processing.c ****     }
3827:..\src/command_processing.c **** }
 25559              		.loc 1 3827 0
 25560 0028 00BF     		nop
 25561 002a 80BD     		pop	{r7, pc}
 25562              	.L997:
 25563              		.align	2
 25564              	.L996:
 25565 002c 00000000 		.word	g_rx
 25566 0030 00000000 		.word	c_mem
 25567              		.cfi_endproc
 25568              	.LFE107:
 25569              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25570              		.section	.text.cmd_ping,"ax",%progbits
 25571              		.align	2
 25572              		.global	cmd_ping
 25573              		.thumb
 25574              		.thumb_func
 25575              		.type	cmd_ping, %function
 25576              	cmd_ping:
 25577              	.LFB108:
3828:..\src/command_processing.c **** 
3829:..\src/command_processing.c **** void cmd_ping(){
 25578              		.loc 1 3829 0
 25579              		.cfi_startproc
 25580              		@ args = 0, pretend = 0, frame = 8
 25581              		@ frame_needed = 1, uses_anonymous_args = 0
 25582 0000 80B5     		push	{r7, lr}
 25583              		.cfi_def_cfa_offset 8
 25584              		.cfi_offset 7, -8
 25585              		.cfi_offset 14, -4
 25586 0002 82B0     		sub	sp, sp, #8
 25587              		.cfi_def_cfa_offset 16
 25588 0004 00AF     		add	r7, sp, #0
 25589              		.cfi_def_cfa_register 7
3830:..\src/command_processing.c **** 
3831:..\src/command_processing.c ****     uint8 packet_data[2];
3832:..\src/command_processing.c **** 
3833:..\src/command_processing.c ****     // Header
3834:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25590              		.loc 1 3834 0
 25591 0006 0023     		movs	r3, #0
 25592 0008 3B71     		strb	r3, [r7, #4]
3835:..\src/command_processing.c ****     
3836:..\src/command_processing.c ****     // Load Payload
3837:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25593              		.loc 1 3837 0
 25594 000a 0023     		movs	r3, #0
 25595 000c 7B71     		strb	r3, [r7, #5]
3838:..\src/command_processing.c **** 
3839:..\src/command_processing.c ****     // Send Package to uart
3840:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25596              		.loc 1 3840 0
 25597 000e 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 561


 25598 0010 0221     		movs	r1, #2
 25599 0012 1846     		mov	r0, r3
 25600 0014 FFF7FEFF 		bl	commWrite
3841:..\src/command_processing.c **** }
 25601              		.loc 1 3841 0
 25602 0018 00BF     		nop
 25603 001a 0837     		adds	r7, r7, #8
 25604              		.cfi_def_cfa_offset 8
 25605 001c BD46     		mov	sp, r7
 25606              		.cfi_def_cfa_register 13
 25607              		@ sp needed
 25608 001e 80BD     		pop	{r7, pc}
 25609              		.cfi_endproc
 25610              	.LFE108:
 25611              		.size	cmd_ping, .-cmd_ping
 25612              		.section	.text.cmd_get_inputs,"ax",%progbits
 25613              		.align	2
 25614              		.global	cmd_get_inputs
 25615              		.thumb
 25616              		.thumb_func
 25617              		.type	cmd_get_inputs, %function
 25618              	cmd_get_inputs:
 25619              	.LFB109:
3842:..\src/command_processing.c **** 
3843:..\src/command_processing.c **** void cmd_get_inputs(){
 25620              		.loc 1 3843 0
 25621              		.cfi_startproc
 25622              		@ args = 0, pretend = 0, frame = 16
 25623              		@ frame_needed = 1, uses_anonymous_args = 0
 25624 0000 80B5     		push	{r7, lr}
 25625              		.cfi_def_cfa_offset 8
 25626              		.cfi_offset 7, -8
 25627              		.cfi_offset 14, -4
 25628 0002 84B0     		sub	sp, sp, #16
 25629              		.cfi_def_cfa_offset 24
 25630 0004 00AF     		add	r7, sp, #0
 25631              		.cfi_def_cfa_register 7
3844:..\src/command_processing.c **** 
3845:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3846:..\src/command_processing.c **** 
3847:..\src/command_processing.c ****     uint8 packet_data[6]; 
3848:..\src/command_processing.c ****     int16 aux_int16;
3849:..\src/command_processing.c ****     
3850:..\src/command_processing.c ****     //Header package
3851:..\src/command_processing.c **** 
3852:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25632              		.loc 1 3852 0
 25633 0006 8323     		movs	r3, #131
 25634 0008 3B72     		strb	r3, [r7, #8]
3853:..\src/command_processing.c ****         
3854:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25635              		.loc 1 3854 0
 25636 000a 234B     		ldr	r3, .L1000
 25637 000c 1A68     		ldr	r2, [r3]
 25638 000e 234B     		ldr	r3, .L1000+4
 25639 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25640 0014 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 562


 25641 0016 2149     		ldr	r1, .L1000+4
 25642 0018 0346     		mov	r3, r0
 25643 001a 5B00     		lsls	r3, r3, #1
 25644 001c 0344     		add	r3, r3, r0
 25645 001e 1B01     		lsls	r3, r3, #4
 25646 0020 0B44     		add	r3, r3, r1
 25647 0022 03F29513 		addw	r3, r3, #405
 25648 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25649 0028 42FA03F3 		asr	r3, r2, r3
 25650 002c 1BB2     		sxth	r3, r3
 25651 002e FB80     		strh	r3, [r7, #6]	@ movhi
3855:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25652              		.loc 1 3855 0
 25653 0030 BB1D     		adds	r3, r7, #6
 25654 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25655 0034 BB72     		strb	r3, [r7, #10]
3856:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25656              		.loc 1 3856 0
 25657 0036 BB1D     		adds	r3, r7, #6
 25658 0038 0133     		adds	r3, r3, #1
 25659 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25660 003c 7B72     		strb	r3, [r7, #9]
3857:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25661              		.loc 1 3857 0
 25662 003e 164B     		ldr	r3, .L1000
 25663 0040 1A69     		ldr	r2, [r3, #16]
 25664 0042 164B     		ldr	r3, .L1000+4
 25665 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25666 0048 1846     		mov	r0, r3
 25667 004a 1449     		ldr	r1, .L1000+4
 25668 004c 0346     		mov	r3, r0
 25669 004e 5B00     		lsls	r3, r3, #1
 25670 0050 0344     		add	r3, r3, r0
 25671 0052 1B01     		lsls	r3, r3, #4
 25672 0054 0B44     		add	r3, r3, r1
 25673 0056 03F29513 		addw	r3, r3, #405
 25674 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25675 005c 42FA03F3 		asr	r3, r2, r3
 25676 0060 1BB2     		sxth	r3, r3
 25677 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3858:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25678              		.loc 1 3858 0
 25679 0064 BB1D     		adds	r3, r7, #6
 25680 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25681 0068 3B73     		strb	r3, [r7, #12]
3859:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25682              		.loc 1 3859 0
 25683 006a BB1D     		adds	r3, r7, #6
 25684 006c 0133     		adds	r3, r3, #1
 25685 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25686 0070 FB72     		strb	r3, [r7, #11]
3860:..\src/command_processing.c ****     
3861:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3862:..\src/command_processing.c **** 
3863:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25687              		.loc 1 3863 0
 25688 0072 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 563


 25689 0076 0521     		movs	r1, #5
 25690 0078 1846     		mov	r0, r3
 25691 007a FFF7FEFF 		bl	LCRChecksum
 25692 007e 0346     		mov	r3, r0
 25693 0080 7B73     		strb	r3, [r7, #13]
3864:..\src/command_processing.c **** 
3865:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25694              		.loc 1 3865 0
 25695 0082 07F10803 		add	r3, r7, #8
 25696 0086 0621     		movs	r1, #6
 25697 0088 1846     		mov	r0, r3
 25698 008a FFF7FEFF 		bl	commWrite
3866:..\src/command_processing.c **** }
 25699              		.loc 1 3866 0
 25700 008e 00BF     		nop
 25701 0090 1037     		adds	r7, r7, #16
 25702              		.cfi_def_cfa_offset 8
 25703 0092 BD46     		mov	sp, r7
 25704              		.cfi_def_cfa_register 13
 25705              		@ sp needed
 25706 0094 80BD     		pop	{r7, pc}
 25707              	.L1001:
 25708 0096 00BF     		.align	2
 25709              	.L1000:
 25710 0098 00000000 		.word	g_refOld
 25711 009c 00000000 		.word	g_mem
 25712              		.cfi_endproc
 25713              	.LFE109:
 25714              		.size	cmd_get_inputs, .-cmd_get_inputs
 25715              		.section	.text.cmd_store_params,"ax",%progbits
 25716              		.align	2
 25717              		.global	cmd_store_params
 25718              		.thumb
 25719              		.thumb_func
 25720              		.type	cmd_store_params, %function
 25721              	cmd_store_params:
 25722              	.LFB110:
3867:..\src/command_processing.c **** 
3868:..\src/command_processing.c **** void cmd_store_params(){
 25723              		.loc 1 3868 0
 25724              		.cfi_startproc
 25725              		@ args = 0, pretend = 0, frame = 16
 25726              		@ frame_needed = 1, uses_anonymous_args = 0
 25727 0000 80B5     		push	{r7, lr}
 25728              		.cfi_def_cfa_offset 8
 25729              		.cfi_offset 7, -8
 25730              		.cfi_offset 14, -4
 25731 0002 84B0     		sub	sp, sp, #16
 25732              		.cfi_def_cfa_offset 24
 25733 0004 00AF     		add	r7, sp, #0
 25734              		.cfi_def_cfa_register 7
3869:..\src/command_processing.c ****     
3870:..\src/command_processing.c ****     // Check input mode enabled
3871:..\src/command_processing.c ****     uint32 off_1;
3872:..\src/command_processing.c ****     float mult_1;
3873:..\src/command_processing.c ****     uint8 CYDATA packet_length = 2;
 25735              		.loc 1 3873 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 564


 25736 0006 0223     		movs	r3, #2
 25737 0008 FB73     		strb	r3, [r7, #15]
3874:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3875:..\src/command_processing.c ****     uint8 CYDATA old_id;
3876:..\src/command_processing.c ****     
3877:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25738              		.loc 1 3877 0
 25739 000a 674B     		ldr	r3, .L1013
 25740 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25741 0010 002B     		cmp	r3, #0
 25742 0012 7CD1     		bne	.L1003
3878:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25743              		.loc 1 3878 0
 25744 0014 644B     		ldr	r3, .L1013
 25745 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25746 001a 1946     		mov	r1, r3
 25747 001c 624A     		ldr	r2, .L1013
 25748 001e 0B46     		mov	r3, r1
 25749 0020 5B00     		lsls	r3, r3, #1
 25750 0022 0B44     		add	r3, r3, r1
 25751 0024 1B01     		lsls	r3, r3, #4
 25752 0026 1344     		add	r3, r3, r2
 25753 0028 03F5CC73 		add	r3, r3, #408
 25754 002c 1B68     		ldr	r3, [r3]
 25755 002e BB60     		str	r3, [r7, #8]
3879:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25756              		.loc 1 3879 0
 25757 0030 5D4B     		ldr	r3, .L1013
 25758 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25759 0036 1946     		mov	r1, r3
 25760 0038 5B4A     		ldr	r2, .L1013
 25761 003a 0B46     		mov	r3, r1
 25762 003c 5B00     		lsls	r3, r3, #1
 25763 003e 0B44     		add	r3, r3, r1
 25764 0040 1B01     		lsls	r3, r3, #4
 25765 0042 1344     		add	r3, r3, r2
 25766 0044 03F5D273 		add	r3, r3, #420
 25767 0048 1B68     		ldr	r3, [r3]	@ float
 25768 004a 7B60     		str	r3, [r7, #4]	@ float
3880:..\src/command_processing.c **** 
3881:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25769              		.loc 1 3881 0
 25770 004c 574B     		ldr	r3, .L1013+4
 25771 004e 1B68     		ldr	r3, [r3]
 25772 0050 1846     		mov	r0, r3
 25773 0052 FFF7FEFF 		bl	__aeabi_i2f
 25774 0056 0346     		mov	r3, r0
 25775 0058 7968     		ldr	r1, [r7, #4]	@ float
 25776 005a 1846     		mov	r0, r3
 25777 005c FFF7FEFF 		bl	__aeabi_fdiv
 25778 0060 0346     		mov	r3, r0
 25779 0062 1846     		mov	r0, r3
 25780 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25781 0068 0246     		mov	r2, r0
 25782 006a 504B     		ldr	r3, .L1013+4
 25783 006c 1A60     		str	r2, [r3]
3882:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 565


3883:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25784              		.loc 1 3883 0
 25785 006e 4F4B     		ldr	r3, .L1013+4
 25786 0070 1B68     		ldr	r3, [r3]
 25787 0072 1846     		mov	r0, r3
 25788 0074 FFF7FEFF 		bl	__aeabi_i2f
 25789 0078 4B4B     		ldr	r3, .L1013
 25790 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25791 007e 1946     		mov	r1, r3
 25792 0080 4B4A     		ldr	r2, .L1013+8
 25793 0082 0B46     		mov	r3, r1
 25794 0084 5B00     		lsls	r3, r3, #1
 25795 0086 0B44     		add	r3, r3, r1
 25796 0088 1B01     		lsls	r3, r3, #4
 25797 008a 1344     		add	r3, r3, r2
 25798 008c 03F5D273 		add	r3, r3, #420
 25799 0090 1B68     		ldr	r3, [r3]	@ float
 25800 0092 1946     		mov	r1, r3
 25801 0094 FFF7FEFF 		bl	__aeabi_fmul
 25802 0098 0346     		mov	r3, r0
 25803 009a 1846     		mov	r0, r3
 25804 009c FFF7FEFF 		bl	__aeabi_f2iz
 25805 00a0 0246     		mov	r2, r0
 25806 00a2 424B     		ldr	r3, .L1013+4
 25807 00a4 1A60     		str	r2, [r3]
3884:..\src/command_processing.c **** 
3885:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25808              		.loc 1 3885 0
 25809 00a6 414B     		ldr	r3, .L1013+4
 25810 00a8 1B68     		ldr	r3, [r3]
 25811 00aa 1846     		mov	r0, r3
 25812 00ac 3E4B     		ldr	r3, .L1013
 25813 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25814 00b2 1946     		mov	r1, r3
 25815 00b4 3E4A     		ldr	r2, .L1013+8
 25816 00b6 0B46     		mov	r3, r1
 25817 00b8 5B00     		lsls	r3, r3, #1
 25818 00ba 0B44     		add	r3, r3, r1
 25819 00bc 1B01     		lsls	r3, r3, #4
 25820 00be 1344     		add	r3, r3, r2
 25821 00c0 03F5CC73 		add	r3, r3, #408
 25822 00c4 1B68     		ldr	r3, [r3]
 25823 00c6 1A46     		mov	r2, r3
 25824 00c8 BB68     		ldr	r3, [r7, #8]
 25825 00ca D31A     		subs	r3, r2, r3
 25826 00cc 0344     		add	r3, r3, r0
 25827 00ce 1A46     		mov	r2, r3
 25828 00d0 364B     		ldr	r3, .L1013+4
 25829 00d2 1A60     		str	r2, [r3]
3886:..\src/command_processing.c ****         
3887:..\src/command_processing.c ****         // Check position Limits
3888:..\src/command_processing.c **** 
3889:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25830              		.loc 1 3889 0
 25831 00d4 344B     		ldr	r3, .L1013
 25832 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25833 00da 002B     		cmp	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 566


 25834 00dc 17D0     		beq	.L1003
3890:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25835              		.loc 1 3890 0
 25836 00de 334B     		ldr	r3, .L1013+4
 25837 00e0 1A68     		ldr	r2, [r3]
 25838 00e2 314B     		ldr	r3, .L1013
 25839 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25840 00e8 9A42     		cmp	r2, r3
 25841 00ea 04DA     		bge	.L1004
3891:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25842              		.loc 1 3891 0
 25843 00ec 2E4B     		ldr	r3, .L1013
 25844 00ee D3F8E430 		ldr	r3, [r3, #228]
 25845 00f2 2E4A     		ldr	r2, .L1013+4
 25846 00f4 1360     		str	r3, [r2]
 25847              	.L1004:
3892:..\src/command_processing.c **** 
3893:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25848              		.loc 1 3893 0
 25849 00f6 2D4B     		ldr	r3, .L1013+4
 25850 00f8 1A68     		ldr	r2, [r3]
 25851 00fa 2B4B     		ldr	r3, .L1013
 25852 00fc D3F8E830 		ldr	r3, [r3, #232]
 25853 0100 9A42     		cmp	r2, r3
 25854 0102 04DD     		ble	.L1003
3894:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25855              		.loc 1 3894 0
 25856 0104 284B     		ldr	r3, .L1013
 25857 0106 D3F8E830 		ldr	r3, [r3, #232]
 25858 010a 284A     		ldr	r2, .L1013+4
 25859 010c 1360     		str	r3, [r2]
 25860              	.L1003:
3895:..\src/command_processing.c ****         }
3896:..\src/command_processing.c ****     }
3897:..\src/command_processing.c ****     
3898:..\src/command_processing.c ****     // If SD is used, create new param and data file
3899:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25861              		.loc 1 3899 0
 25862 010e 264B     		ldr	r3, .L1013
 25863 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25864 0114 012B     		cmp	r3, #1
 25865 0116 06D1     		bne	.L1005
3900:..\src/command_processing.c ****         FS_FClose(pFile);
 25866              		.loc 1 3900 0
 25867 0118 264B     		ldr	r3, .L1013+12
 25868 011a 1B68     		ldr	r3, [r3]
 25869 011c 1846     		mov	r0, r3
 25870 011e FFF7FEFF 		bl	FS_FClose
3901:..\src/command_processing.c ****         
3902:..\src/command_processing.c ****         InitSD_FS();
 25871              		.loc 1 3902 0
 25872 0122 FFF7FEFF 		bl	InitSD_FS
 25873              	.L1005:
3903:..\src/command_processing.c ****     }
3904:..\src/command_processing.c ****    
3905:..\src/command_processing.c ****     // Store params 
3906:..\src/command_processing.c **** 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 567


3907:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25874              		.loc 1 3907 0
 25875 0126 204B     		ldr	r3, .L1013
 25876 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25877 012c 204B     		ldr	r3, .L1013+8
 25878 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25879 0132 9A42     		cmp	r2, r3
 25880 0134 21D0     		beq	.L1006
3908:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25881              		.loc 1 3908 0
 25882 0136 1C4B     		ldr	r3, .L1013
 25883 0138 93F8A030 		ldrb	r3, [r3, #160]
 25884 013c FB70     		strb	r3, [r7, #3]
3909:..\src/command_processing.c ****         if(memStore(0)) {
 25885              		.loc 1 3909 0
 25886 013e 0020     		movs	r0, #0
 25887 0140 FFF7FEFF 		bl	memStore
 25888 0144 0346     		mov	r3, r0
 25889 0146 002B     		cmp	r3, #0
 25890 0148 0BD0     		beq	.L1007
3910:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25891              		.loc 1 3910 0
 25892 014a 0123     		movs	r3, #1
 25893 014c 3B70     		strb	r3, [r7]
3911:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25894              		.loc 1 3911 0
 25895 014e 0123     		movs	r3, #1
 25896 0150 7B70     		strb	r3, [r7, #1]
3912:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 25897              		.loc 1 3912 0
 25898 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25899 0154 99B2     		uxth	r1, r3
 25900 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25901 0158 3B46     		mov	r3, r7
 25902 015a 1846     		mov	r0, r3
 25903 015c FFF7FEFF 		bl	commWrite_old_id
 25904 0160 18E0     		b	.L1009
 25905              	.L1007:
3913:..\src/command_processing.c ****         }    
3914:..\src/command_processing.c ****         else{
3915:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25906              		.loc 1 3915 0
 25907 0162 0023     		movs	r3, #0
 25908 0164 3B70     		strb	r3, [r7]
3916:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25909              		.loc 1 3916 0
 25910 0166 0023     		movs	r3, #0
 25911 0168 7B70     		strb	r3, [r7, #1]
3917:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_length, old_id);
 25912              		.loc 1 3917 0
 25913 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25914 016c 99B2     		uxth	r1, r3
 25915 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25916 0170 3B46     		mov	r3, r7
 25917 0172 1846     		mov	r0, r3
 25918 0174 FFF7FEFF 		bl	commWrite_old_id
 25919 0178 0CE0     		b	.L1009
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 568


 25920              	.L1006:
3918:..\src/command_processing.c ****         }
3919:..\src/command_processing.c ****     }    
3920:..\src/command_processing.c ****     else {
3921:..\src/command_processing.c ****         if(memStore(0))
 25921              		.loc 1 3921 0
 25922 017a 0020     		movs	r0, #0
 25923 017c FFF7FEFF 		bl	memStore
 25924 0180 0346     		mov	r3, r0
 25925 0182 002B     		cmp	r3, #0
 25926 0184 03D0     		beq	.L1010
3922:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25927              		.loc 1 3922 0
 25928 0186 0120     		movs	r0, #1
 25929 0188 FFF7FEFF 		bl	sendAcknowledgment
 25930 018c 02E0     		b	.L1009
 25931              	.L1010:
3923:..\src/command_processing.c ****         else
3924:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25932              		.loc 1 3924 0
 25933 018e 0020     		movs	r0, #0
 25934 0190 FFF7FEFF 		bl	sendAcknowledgment
 25935              	.L1009:
3925:..\src/command_processing.c ****     }
3926:..\src/command_processing.c ****     
3927:..\src/command_processing.c ****     // FW reset (if necessary)
3928:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25936              		.loc 1 3928 0
 25937 0194 084B     		ldr	r3, .L1013+16
 25938 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25939 0198 012B     		cmp	r3, #1
 25940 019a 01D1     		bne	.L1012
3929:..\src/command_processing.c ****         CySoftwareReset();
 25941              		.loc 1 3929 0
 25942 019c FFF7FEFF 		bl	CySoftwareReset
 25943              	.L1012:
3930:..\src/command_processing.c ****     }
3931:..\src/command_processing.c **** }
 25944              		.loc 1 3931 0
 25945 01a0 00BF     		nop
 25946 01a2 1037     		adds	r7, r7, #16
 25947              		.cfi_def_cfa_offset 8
 25948 01a4 BD46     		mov	sp, r7
 25949              		.cfi_def_cfa_register 13
 25950              		@ sp needed
 25951 01a6 80BD     		pop	{r7, pc}
 25952              	.L1014:
 25953              		.align	2
 25954              	.L1013:
 25955 01a8 00000000 		.word	c_mem
 25956 01ac 00000000 		.word	g_refNew
 25957 01b0 00000000 		.word	g_mem
 25958 01b4 00000000 		.word	pFile
 25959 01b8 00000000 		.word	reset_PSoC_flag
 25960              		.cfi_endproc
 25961              	.LFE110:
 25962              		.size	cmd_store_params, .-cmd_store_params
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 569


 25963              		.section	.text.cmd_get_emg,"ax",%progbits
 25964              		.align	2
 25965              		.global	cmd_get_emg
 25966              		.thumb
 25967              		.thumb_func
 25968              		.type	cmd_get_emg, %function
 25969              	cmd_get_emg:
 25970              	.LFB111:
3932:..\src/command_processing.c **** 
3933:..\src/command_processing.c **** void cmd_get_emg(){
 25971              		.loc 1 3933 0
 25972              		.cfi_startproc
 25973              		@ args = 0, pretend = 0, frame = 16
 25974              		@ frame_needed = 1, uses_anonymous_args = 0
 25975 0000 80B5     		push	{r7, lr}
 25976              		.cfi_def_cfa_offset 8
 25977              		.cfi_offset 7, -8
 25978              		.cfi_offset 14, -4
 25979 0002 84B0     		sub	sp, sp, #16
 25980              		.cfi_def_cfa_offset 24
 25981 0004 00AF     		add	r7, sp, #0
 25982              		.cfi_def_cfa_register 7
3934:..\src/command_processing.c ****     
3935:..\src/command_processing.c ****     uint8 packet_data[6];
3936:..\src/command_processing.c ****     int16 aux_int16;
3937:..\src/command_processing.c ****     
3938:..\src/command_processing.c ****     // Header        
3939:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25983              		.loc 1 3939 0
 25984 0006 8823     		movs	r3, #136
 25985 0008 3B72     		strb	r3, [r7, #8]
3940:..\src/command_processing.c ****     
3941:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25986              		.loc 1 3941 0
 25987 000a 144B     		ldr	r3, .L1016
 25988 000c 1B68     		ldr	r3, [r3]
 25989 000e 1BB2     		sxth	r3, r3
 25990 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3942:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25991              		.loc 1 3942 0
 25992 0012 BB1D     		adds	r3, r7, #6
 25993 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25994 0016 BB72     		strb	r3, [r7, #10]
3943:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25995              		.loc 1 3943 0
 25996 0018 BB1D     		adds	r3, r7, #6
 25997 001a 0133     		adds	r3, r3, #1
 25998 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25999 001e 7B72     		strb	r3, [r7, #9]
3944:..\src/command_processing.c ****     
3945:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 26000              		.loc 1 3945 0
 26001 0020 0E4B     		ldr	r3, .L1016
 26002 0022 5B68     		ldr	r3, [r3, #4]
 26003 0024 1BB2     		sxth	r3, r3
 26004 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3946:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 570


 26005              		.loc 1 3946 0
 26006 0028 BB1D     		adds	r3, r7, #6
 26007 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26008 002c 3B73     		strb	r3, [r7, #12]
3947:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 26009              		.loc 1 3947 0
 26010 002e BB1D     		adds	r3, r7, #6
 26011 0030 0133     		adds	r3, r3, #1
 26012 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26013 0034 FB72     		strb	r3, [r7, #11]
3948:..\src/command_processing.c **** 
3949:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 26014              		.loc 1 3949 0
 26015 0036 07F10803 		add	r3, r7, #8
 26016 003a 0521     		movs	r1, #5
 26017 003c 1846     		mov	r0, r3
 26018 003e FFF7FEFF 		bl	LCRChecksum
 26019 0042 0346     		mov	r3, r0
 26020 0044 7B73     		strb	r3, [r7, #13]
3950:..\src/command_processing.c **** 
3951:..\src/command_processing.c ****     commWrite(packet_data, 6);
 26021              		.loc 1 3951 0
 26022 0046 07F10803 		add	r3, r7, #8
 26023 004a 0621     		movs	r1, #6
 26024 004c 1846     		mov	r0, r3
 26025 004e FFF7FEFF 		bl	commWrite
3952:..\src/command_processing.c **** 
3953:..\src/command_processing.c **** }
 26026              		.loc 1 3953 0
 26027 0052 00BF     		nop
 26028 0054 1037     		adds	r7, r7, #16
 26029              		.cfi_def_cfa_offset 8
 26030 0056 BD46     		mov	sp, r7
 26031              		.cfi_def_cfa_register 13
 26032              		@ sp needed
 26033 0058 80BD     		pop	{r7, pc}
 26034              	.L1017:
 26035 005a 00BF     		.align	2
 26036              	.L1016:
 26037 005c 00000000 		.word	g_adc_measOld
 26038              		.cfi_endproc
 26039              	.LFE111:
 26040              		.size	cmd_get_emg, .-cmd_get_emg
 26041              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 26042              		.align	2
 26043              		.global	cmd_get_imu_readings
 26044              		.thumb
 26045              		.thumb_func
 26046              		.type	cmd_get_imu_readings, %function
 26047              	cmd_get_imu_readings:
 26048              	.LFB112:
3954:..\src/command_processing.c **** 
3955:..\src/command_processing.c **** void cmd_get_imu_readings(){
 26049              		.loc 1 3955 0
 26050              		.cfi_startproc
 26051              		@ args = 0, pretend = 0, frame = 400
 26052              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 571


 26053 0000 90B5     		push	{r4, r7, lr}
 26054              		.cfi_def_cfa_offset 12
 26055              		.cfi_offset 4, -12
 26056              		.cfi_offset 7, -8
 26057              		.cfi_offset 14, -4
 26058 0002 E5B0     		sub	sp, sp, #404
 26059              		.cfi_def_cfa_offset 416
 26060 0004 00AF     		add	r7, sp, #0
 26061              		.cfi_def_cfa_register 7
3956:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3957:..\src/command_processing.c ****     
3958:..\src/command_processing.c ****     uint8 k_imu;
3959:..\src/command_processing.c ****     uint16 c = 1;
 26062              		.loc 1 3959 0
 26063 0006 0123     		movs	r3, #1
 26064 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3960:..\src/command_processing.c ****     uint8 k = 0;
 26065              		.loc 1 3960 0
 26066 000c 0023     		movs	r3, #0
 26067 000e 87F88B31 		strb	r3, [r7, #395]
3961:..\src/command_processing.c ****     uint16 gl_c = 1;
 26068              		.loc 1 3961 0
 26069 0012 0123     		movs	r3, #1
 26070 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3962:..\src/command_processing.c ****     int16 aux_int16;
3963:..\src/command_processing.c ****     float aux_float;
3964:..\src/command_processing.c ****     
3965:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3966:..\src/command_processing.c ****     uint8 packet_data[350];
3967:..\src/command_processing.c ****     uint8 single_packet[32];
3968:..\src/command_processing.c ****     
3969:..\src/command_processing.c ****     //Header package 
3970:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 26071              		.loc 1 3970 0
 26072 0018 07F12003 		add	r3, r7, #32
 26073 001c A122     		movs	r2, #161
 26074 001e 1A70     		strb	r2, [r3]
3971:..\src/command_processing.c ****  
3972:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 26075              		.loc 1 3972 0
 26076 0020 0023     		movs	r3, #0
 26077 0022 87F88F31 		strb	r3, [r7, #399]
 26078 0026 82E2     		b	.L1019
 26079              	.L1035:
3973:..\src/command_processing.c ****     {	
3974:..\src/command_processing.c ****             
3975:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 26080              		.loc 1 3975 0
 26081 0028 3B46     		mov	r3, r7
 26082 002a 3A22     		movs	r2, #58
 26083 002c 1A70     		strb	r2, [r3]
3976:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 26084              		.loc 1 3976 0
 26085 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26086 0032 DB4A     		ldr	r2, .L1036
 26087 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26088 0036 1946     		mov	r1, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 572


 26089 0038 DA4A     		ldr	r2, .L1036+4
 26090 003a 0B46     		mov	r3, r1
 26091 003c 9B00     		lsls	r3, r3, #2
 26092 003e 0B44     		add	r3, r3, r1
 26093 0040 1344     		add	r3, r3, r2
 26094 0042 03F20223 		addw	r3, r3, #514
 26095 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26096 0048 002B     		cmp	r3, #0
 26097 004a 5DD0     		beq	.L1020
3977:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 26098              		.loc 1 3977 0
 26099 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26100 0050 D549     		ldr	r1, .L1036+8
 26101 0052 1346     		mov	r3, r2
 26102 0054 9B00     		lsls	r3, r3, #2
 26103 0056 1344     		add	r3, r3, r2
 26104 0058 DB00     		lsls	r3, r3, #3
 26105 005a 0B44     		add	r3, r3, r1
 26106 005c 0233     		adds	r3, r3, #2
 26107 005e B3F90030 		ldrsh	r3, [r3]
 26108 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3978:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26109              		.loc 1 3978 0
 26110 0066 B7F88C31 		ldrh	r3, [r7, #396]
 26111 006a 0133     		adds	r3, r3, #1
 26112 006c 07F5C372 		add	r2, r7, #390
 26113 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26114 0072 3A46     		mov	r2, r7
 26115 0074 D154     		strb	r1, [r2, r3]
3979:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26116              		.loc 1 3979 0
 26117 0076 B7F88C21 		ldrh	r2, [r7, #396]
 26118 007a 07F5C373 		add	r3, r7, #390
 26119 007e 0133     		adds	r3, r3, #1
 26120 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26121 0082 3B46     		mov	r3, r7
 26122 0084 9954     		strb	r1, [r3, r2]
3980:..\src/command_processing.c **** 
3981:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 26123              		.loc 1 3981 0
 26124 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26125 008a C749     		ldr	r1, .L1036+8
 26126 008c 1346     		mov	r3, r2
 26127 008e 9B00     		lsls	r3, r3, #2
 26128 0090 1344     		add	r3, r3, r2
 26129 0092 DB00     		lsls	r3, r3, #3
 26130 0094 0B44     		add	r3, r3, r1
 26131 0096 0433     		adds	r3, r3, #4
 26132 0098 B3F90030 		ldrsh	r3, [r3]
 26133 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3982:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26134              		.loc 1 3982 0
 26135 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 26136 00a4 0333     		adds	r3, r3, #3
 26137 00a6 07F5C372 		add	r2, r7, #390
 26138 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26139 00ac 3A46     		mov	r2, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 573


 26140 00ae D154     		strb	r1, [r2, r3]
3983:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26141              		.loc 1 3983 0
 26142 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 26143 00b4 9A1C     		adds	r2, r3, #2
 26144 00b6 07F5C373 		add	r3, r7, #390
 26145 00ba 0133     		adds	r3, r3, #1
 26146 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26147 00be 3B46     		mov	r3, r7
 26148 00c0 9954     		strb	r1, [r3, r2]
3984:..\src/command_processing.c **** 
3985:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 26149              		.loc 1 3985 0
 26150 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26151 00c6 B849     		ldr	r1, .L1036+8
 26152 00c8 1346     		mov	r3, r2
 26153 00ca 9B00     		lsls	r3, r3, #2
 26154 00cc 1344     		add	r3, r3, r2
 26155 00ce DB00     		lsls	r3, r3, #3
 26156 00d0 0B44     		add	r3, r3, r1
 26157 00d2 0633     		adds	r3, r3, #6
 26158 00d4 B3F90030 		ldrsh	r3, [r3]
 26159 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3986:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26160              		.loc 1 3986 0
 26161 00dc B7F88C31 		ldrh	r3, [r7, #396]
 26162 00e0 0533     		adds	r3, r3, #5
 26163 00e2 07F5C372 		add	r2, r7, #390
 26164 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26165 00e8 3A46     		mov	r2, r7
 26166 00ea D154     		strb	r1, [r2, r3]
3987:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26167              		.loc 1 3987 0
 26168 00ec B7F88C31 		ldrh	r3, [r7, #396]
 26169 00f0 1A1D     		adds	r2, r3, #4
 26170 00f2 07F5C373 		add	r3, r7, #390
 26171 00f6 0133     		adds	r3, r3, #1
 26172 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26173 00fa 3B46     		mov	r3, r7
 26174 00fc 9954     		strb	r1, [r3, r2]
3988:..\src/command_processing.c **** 
3989:..\src/command_processing.c ****             c = c + 6;
 26175              		.loc 1 3989 0
 26176 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26177 0102 0633     		adds	r3, r3, #6
 26178 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26179              	.L1020:
3990:..\src/command_processing.c ****         }
3991:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 26180              		.loc 1 3991 0
 26181 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26182 010c A44A     		ldr	r2, .L1036
 26183 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26184 0110 1946     		mov	r1, r3
 26185 0112 A44A     		ldr	r2, .L1036+4
 26186 0114 0B46     		mov	r3, r1
 26187 0116 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 574


 26188 0118 0B44     		add	r3, r3, r1
 26189 011a 1344     		add	r3, r3, r2
 26190 011c 03F20323 		addw	r3, r3, #515
 26191 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26192 0122 002B     		cmp	r3, #0
 26193 0124 5DD0     		beq	.L1021
3992:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 26194              		.loc 1 3992 0
 26195 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26196 012a 9F49     		ldr	r1, .L1036+8
 26197 012c 1346     		mov	r3, r2
 26198 012e 9B00     		lsls	r3, r3, #2
 26199 0130 1344     		add	r3, r3, r2
 26200 0132 DB00     		lsls	r3, r3, #3
 26201 0134 0B44     		add	r3, r3, r1
 26202 0136 0833     		adds	r3, r3, #8
 26203 0138 B3F90030 		ldrsh	r3, [r3]
 26204 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3993:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26205              		.loc 1 3993 0
 26206 0140 B7F88C31 		ldrh	r3, [r7, #396]
 26207 0144 0133     		adds	r3, r3, #1
 26208 0146 07F5C372 		add	r2, r7, #390
 26209 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26210 014c 3A46     		mov	r2, r7
 26211 014e D154     		strb	r1, [r2, r3]
3994:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26212              		.loc 1 3994 0
 26213 0150 B7F88C21 		ldrh	r2, [r7, #396]
 26214 0154 07F5C373 		add	r3, r7, #390
 26215 0158 0133     		adds	r3, r3, #1
 26216 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26217 015c 3B46     		mov	r3, r7
 26218 015e 9954     		strb	r1, [r3, r2]
3995:..\src/command_processing.c **** 
3996:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 26219              		.loc 1 3996 0
 26220 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26221 0164 9049     		ldr	r1, .L1036+8
 26222 0166 1346     		mov	r3, r2
 26223 0168 9B00     		lsls	r3, r3, #2
 26224 016a 1344     		add	r3, r3, r2
 26225 016c DB00     		lsls	r3, r3, #3
 26226 016e 0B44     		add	r3, r3, r1
 26227 0170 0A33     		adds	r3, r3, #10
 26228 0172 B3F90030 		ldrsh	r3, [r3]
 26229 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3997:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26230              		.loc 1 3997 0
 26231 017a B7F88C31 		ldrh	r3, [r7, #396]
 26232 017e 0333     		adds	r3, r3, #3
 26233 0180 07F5C372 		add	r2, r7, #390
 26234 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26235 0186 3A46     		mov	r2, r7
 26236 0188 D154     		strb	r1, [r2, r3]
3998:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26237              		.loc 1 3998 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 575


 26238 018a B7F88C31 		ldrh	r3, [r7, #396]
 26239 018e 9A1C     		adds	r2, r3, #2
 26240 0190 07F5C373 		add	r3, r7, #390
 26241 0194 0133     		adds	r3, r3, #1
 26242 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26243 0198 3B46     		mov	r3, r7
 26244 019a 9954     		strb	r1, [r3, r2]
3999:..\src/command_processing.c **** 
4000:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26245              		.loc 1 4000 0
 26246 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26247 01a0 8149     		ldr	r1, .L1036+8
 26248 01a2 1346     		mov	r3, r2
 26249 01a4 9B00     		lsls	r3, r3, #2
 26250 01a6 1344     		add	r3, r3, r2
 26251 01a8 DB00     		lsls	r3, r3, #3
 26252 01aa 0B44     		add	r3, r3, r1
 26253 01ac 0C33     		adds	r3, r3, #12
 26254 01ae B3F90030 		ldrsh	r3, [r3]
 26255 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
4001:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26256              		.loc 1 4001 0
 26257 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26258 01ba 0533     		adds	r3, r3, #5
 26259 01bc 07F5C372 		add	r2, r7, #390
 26260 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26261 01c2 3A46     		mov	r2, r7
 26262 01c4 D154     		strb	r1, [r2, r3]
4002:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26263              		.loc 1 4002 0
 26264 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26265 01ca 1A1D     		adds	r2, r3, #4
 26266 01cc 07F5C373 		add	r3, r7, #390
 26267 01d0 0133     		adds	r3, r3, #1
 26268 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26269 01d4 3B46     		mov	r3, r7
 26270 01d6 9954     		strb	r1, [r3, r2]
4003:..\src/command_processing.c **** 
4004:..\src/command_processing.c ****             c = c + 6;
 26271              		.loc 1 4004 0
 26272 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26273 01dc 0633     		adds	r3, r3, #6
 26274 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26275              	.L1021:
4005:..\src/command_processing.c ****         }
4006:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26276              		.loc 1 4006 0
 26277 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26278 01e6 6E4A     		ldr	r2, .L1036
 26279 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26280 01ea 1946     		mov	r1, r3
 26281 01ec 6D4A     		ldr	r2, .L1036+4
 26282 01ee 0B46     		mov	r3, r1
 26283 01f0 9B00     		lsls	r3, r3, #2
 26284 01f2 0B44     		add	r3, r3, r1
 26285 01f4 1344     		add	r3, r3, r2
 26286 01f6 03F50173 		add	r3, r3, #516
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 576


 26287 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26288 01fc 002B     		cmp	r3, #0
 26289 01fe 5DD0     		beq	.L1022
4007:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26290              		.loc 1 4007 0
 26291 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26292 0204 6849     		ldr	r1, .L1036+8
 26293 0206 1346     		mov	r3, r2
 26294 0208 9B00     		lsls	r3, r3, #2
 26295 020a 1344     		add	r3, r3, r2
 26296 020c DB00     		lsls	r3, r3, #3
 26297 020e 0B44     		add	r3, r3, r1
 26298 0210 0E33     		adds	r3, r3, #14
 26299 0212 B3F90030 		ldrsh	r3, [r3]
 26300 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
4008:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26301              		.loc 1 4008 0
 26302 021a B7F88C31 		ldrh	r3, [r7, #396]
 26303 021e 0133     		adds	r3, r3, #1
 26304 0220 07F5C372 		add	r2, r7, #390
 26305 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26306 0226 3A46     		mov	r2, r7
 26307 0228 D154     		strb	r1, [r2, r3]
4009:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26308              		.loc 1 4009 0
 26309 022a B7F88C21 		ldrh	r2, [r7, #396]
 26310 022e 07F5C373 		add	r3, r7, #390
 26311 0232 0133     		adds	r3, r3, #1
 26312 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26313 0236 3B46     		mov	r3, r7
 26314 0238 9954     		strb	r1, [r3, r2]
4010:..\src/command_processing.c **** 
4011:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26315              		.loc 1 4011 0
 26316 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26317 023e 5A49     		ldr	r1, .L1036+8
 26318 0240 1346     		mov	r3, r2
 26319 0242 9B00     		lsls	r3, r3, #2
 26320 0244 1344     		add	r3, r3, r2
 26321 0246 DB00     		lsls	r3, r3, #3
 26322 0248 0B44     		add	r3, r3, r1
 26323 024a 1033     		adds	r3, r3, #16
 26324 024c B3F90030 		ldrsh	r3, [r3]
 26325 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
4012:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26326              		.loc 1 4012 0
 26327 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26328 0258 0333     		adds	r3, r3, #3
 26329 025a 07F5C372 		add	r2, r7, #390
 26330 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26331 0260 3A46     		mov	r2, r7
 26332 0262 D154     		strb	r1, [r2, r3]
4013:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26333              		.loc 1 4013 0
 26334 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26335 0268 9A1C     		adds	r2, r3, #2
 26336 026a 07F5C373 		add	r3, r7, #390
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 577


 26337 026e 0133     		adds	r3, r3, #1
 26338 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26339 0272 3B46     		mov	r3, r7
 26340 0274 9954     		strb	r1, [r3, r2]
4014:..\src/command_processing.c **** 
4015:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26341              		.loc 1 4015 0
 26342 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26343 027a 4B49     		ldr	r1, .L1036+8
 26344 027c 1346     		mov	r3, r2
 26345 027e 9B00     		lsls	r3, r3, #2
 26346 0280 1344     		add	r3, r3, r2
 26347 0282 DB00     		lsls	r3, r3, #3
 26348 0284 0B44     		add	r3, r3, r1
 26349 0286 1233     		adds	r3, r3, #18
 26350 0288 B3F90030 		ldrsh	r3, [r3]
 26351 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
4016:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26352              		.loc 1 4016 0
 26353 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26354 0294 0533     		adds	r3, r3, #5
 26355 0296 07F5C372 		add	r2, r7, #390
 26356 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26357 029c 3A46     		mov	r2, r7
 26358 029e D154     		strb	r1, [r2, r3]
4017:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26359              		.loc 1 4017 0
 26360 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26361 02a4 1A1D     		adds	r2, r3, #4
 26362 02a6 07F5C373 		add	r3, r7, #390
 26363 02aa 0133     		adds	r3, r3, #1
 26364 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26365 02ae 3B46     		mov	r3, r7
 26366 02b0 9954     		strb	r1, [r3, r2]
4018:..\src/command_processing.c **** 
4019:..\src/command_processing.c ****             c = c + 6;
 26367              		.loc 1 4019 0
 26368 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26369 02b6 0633     		adds	r3, r3, #6
 26370 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26371              	.L1022:
4020:..\src/command_processing.c ****         }
4021:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26372              		.loc 1 4021 0
 26373 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26374 02c0 374A     		ldr	r2, .L1036
 26375 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26376 02c4 1946     		mov	r1, r3
 26377 02c6 374A     		ldr	r2, .L1036+4
 26378 02c8 0B46     		mov	r3, r1
 26379 02ca 9B00     		lsls	r3, r3, #2
 26380 02cc 0B44     		add	r3, r3, r1
 26381 02ce 1344     		add	r3, r3, r2
 26382 02d0 03F20523 		addw	r3, r3, #517
 26383 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26384 02d6 002B     		cmp	r3, #0
 26385 02d8 00F0AF80 		beq	.L1023
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 578


4022:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26386              		.loc 1 4022 0
 26387 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26388 02e0 3149     		ldr	r1, .L1036+8
 26389 02e2 1346     		mov	r3, r2
 26390 02e4 9B00     		lsls	r3, r3, #2
 26391 02e6 1344     		add	r3, r3, r2
 26392 02e8 DB00     		lsls	r3, r3, #3
 26393 02ea 0B44     		add	r3, r3, r1
 26394 02ec 1433     		adds	r3, r3, #20
 26395 02ee 1B68     		ldr	r3, [r3]	@ float
 26396 02f0 C7F88031 		str	r3, [r7, #384]	@ float
4023:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26397              		.loc 1 4023 0
 26398 02f4 0023     		movs	r3, #0
 26399 02f6 87F88B31 		strb	r3, [r7, #395]
 26400 02fa 13E0     		b	.L1024
 26401              	.L1025:
4024:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26402              		.loc 1 4024 0 discriminator 3
 26403 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26404 0300 1A1D     		adds	r2, r3, #4
 26405 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26406 0306 D31A     		subs	r3, r2, r3
 26407 0308 013B     		subs	r3, r3, #1
 26408 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26409 030e 07F5C071 		add	r1, r7, #384
 26410 0312 0A44     		add	r2, r2, r1
 26411 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26412 0316 3A46     		mov	r2, r7
 26413 0318 D154     		strb	r1, [r2, r3]
4023:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26414              		.loc 1 4023 0 discriminator 3
 26415 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26416 031e 0133     		adds	r3, r3, #1
 26417 0320 87F88B31 		strb	r3, [r7, #395]
 26418              	.L1024:
4023:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26419              		.loc 1 4023 0 is_stmt 0 discriminator 1
 26420 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26421 0328 032B     		cmp	r3, #3
 26422 032a E7D9     		bls	.L1025
4025:..\src/command_processing.c ****             }
4026:..\src/command_processing.c **** 
4027:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26423              		.loc 1 4027 0 is_stmt 1
 26424 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26425 0330 1D49     		ldr	r1, .L1036+8
 26426 0332 1346     		mov	r3, r2
 26427 0334 9B00     		lsls	r3, r3, #2
 26428 0336 1344     		add	r3, r3, r2
 26429 0338 DB00     		lsls	r3, r3, #3
 26430 033a 0B44     		add	r3, r3, r1
 26431 033c 1833     		adds	r3, r3, #24
 26432 033e 1B68     		ldr	r3, [r3]	@ float
 26433 0340 C7F88031 		str	r3, [r7, #384]	@ float
4028:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 579


 26434              		.loc 1 4028 0
 26435 0344 0023     		movs	r3, #0
 26436 0346 87F88B31 		strb	r3, [r7, #395]
 26437 034a 14E0     		b	.L1026
 26438              	.L1027:
4029:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26439              		.loc 1 4029 0 discriminator 3
 26440 034c B7F88C31 		ldrh	r3, [r7, #396]
 26441 0350 03F10802 		add	r2, r3, #8
 26442 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26443 0358 D31A     		subs	r3, r2, r3
 26444 035a 013B     		subs	r3, r3, #1
 26445 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26446 0360 07F5C071 		add	r1, r7, #384
 26447 0364 0A44     		add	r2, r2, r1
 26448 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26449 0368 3A46     		mov	r2, r7
 26450 036a D154     		strb	r1, [r2, r3]
4028:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26451              		.loc 1 4028 0 discriminator 3
 26452 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26453 0370 0133     		adds	r3, r3, #1
 26454 0372 87F88B31 		strb	r3, [r7, #395]
 26455              	.L1026:
4028:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26456              		.loc 1 4028 0 is_stmt 0 discriminator 1
 26457 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26458 037a 032B     		cmp	r3, #3
 26459 037c E6D9     		bls	.L1027
4030:..\src/command_processing.c ****             }
4031:..\src/command_processing.c **** 
4032:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26460              		.loc 1 4032 0 is_stmt 1
 26461 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26462 0382 0949     		ldr	r1, .L1036+8
 26463 0384 1346     		mov	r3, r2
 26464 0386 9B00     		lsls	r3, r3, #2
 26465 0388 1344     		add	r3, r3, r2
 26466 038a DB00     		lsls	r3, r3, #3
 26467 038c 0B44     		add	r3, r3, r1
 26468 038e 1C33     		adds	r3, r3, #28
 26469 0390 1B68     		ldr	r3, [r3]	@ float
 26470 0392 C7F88031 		str	r3, [r7, #384]	@ float
4033:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26471              		.loc 1 4033 0
 26472 0396 0023     		movs	r3, #0
 26473 0398 87F88B31 		strb	r3, [r7, #395]
 26474 039c 1BE0     		b	.L1028
 26475              	.L1037:
 26476 039e 00BF     		.align	2
 26477              	.L1036:
 26478 03a0 00000000 		.word	IMU_connected
 26479 03a4 00000000 		.word	c_mem
 26480 03a8 00000000 		.word	g_imu
 26481              	.L1029:
4034:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26482              		.loc 1 4034 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 580


 26483 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26484 03b0 03F10C02 		add	r2, r3, #12
 26485 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26486 03b8 D31A     		subs	r3, r2, r3
 26487 03ba 013B     		subs	r3, r3, #1
 26488 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26489 03c0 07F5C071 		add	r1, r7, #384
 26490 03c4 0A44     		add	r2, r2, r1
 26491 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26492 03c8 3A46     		mov	r2, r7
 26493 03ca D154     		strb	r1, [r2, r3]
4033:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26494              		.loc 1 4033 0 discriminator 3
 26495 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26496 03d0 0133     		adds	r3, r3, #1
 26497 03d2 87F88B31 		strb	r3, [r7, #395]
 26498              	.L1028:
4033:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26499              		.loc 1 4033 0 is_stmt 0 discriminator 1
 26500 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26501 03da 032B     		cmp	r3, #3
 26502 03dc E6D9     		bls	.L1029
4035:..\src/command_processing.c ****             }
4036:..\src/command_processing.c **** 
4037:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26503              		.loc 1 4037 0 is_stmt 1
 26504 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26505 03e2 6749     		ldr	r1, .L1038
 26506 03e4 1346     		mov	r3, r2
 26507 03e6 9B00     		lsls	r3, r3, #2
 26508 03e8 1344     		add	r3, r3, r2
 26509 03ea DB00     		lsls	r3, r3, #3
 26510 03ec 0B44     		add	r3, r3, r1
 26511 03ee 2033     		adds	r3, r3, #32
 26512 03f0 1B68     		ldr	r3, [r3]	@ float
 26513 03f2 C7F88031 		str	r3, [r7, #384]	@ float
4038:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26514              		.loc 1 4038 0
 26515 03f6 0023     		movs	r3, #0
 26516 03f8 87F88B31 		strb	r3, [r7, #395]
 26517 03fc 14E0     		b	.L1030
 26518              	.L1031:
4039:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26519              		.loc 1 4039 0 discriminator 3
 26520 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26521 0402 03F11002 		add	r2, r3, #16
 26522 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26523 040a D31A     		subs	r3, r2, r3
 26524 040c 013B     		subs	r3, r3, #1
 26525 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26526 0412 07F5C071 		add	r1, r7, #384
 26527 0416 0A44     		add	r2, r2, r1
 26528 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26529 041a 3A46     		mov	r2, r7
 26530 041c D154     		strb	r1, [r2, r3]
4038:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26531              		.loc 1 4038 0 discriminator 3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 581


 26532 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26533 0422 0133     		adds	r3, r3, #1
 26534 0424 87F88B31 		strb	r3, [r7, #395]
 26535              	.L1030:
4038:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26536              		.loc 1 4038 0 is_stmt 0 discriminator 1
 26537 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26538 042c 032B     		cmp	r3, #3
 26539 042e E6D9     		bls	.L1031
4040:..\src/command_processing.c ****             }
4041:..\src/command_processing.c ****             c = c + 16;
 26540              		.loc 1 4041 0 is_stmt 1
 26541 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26542 0434 1033     		adds	r3, r3, #16
 26543 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26544              	.L1023:
4042:..\src/command_processing.c ****         }
4043:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26545              		.loc 1 4043 0
 26546 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26547 043e 514A     		ldr	r2, .L1038+4
 26548 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26549 0442 1946     		mov	r1, r3
 26550 0444 504A     		ldr	r2, .L1038+8
 26551 0446 0B46     		mov	r3, r1
 26552 0448 9B00     		lsls	r3, r3, #2
 26553 044a 0B44     		add	r3, r3, r1
 26554 044c 1344     		add	r3, r3, r2
 26555 044e 03F20623 		addw	r3, r3, #518
 26556 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26557 0454 002B     		cmp	r3, #0
 26558 0456 21D0     		beq	.L1032
4044:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26559              		.loc 1 4044 0
 26560 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26561 045c 4849     		ldr	r1, .L1038
 26562 045e 1346     		mov	r3, r2
 26563 0460 9B00     		lsls	r3, r3, #2
 26564 0462 1344     		add	r3, r3, r2
 26565 0464 DB00     		lsls	r3, r3, #3
 26566 0466 0B44     		add	r3, r3, r1
 26567 0468 2433     		adds	r3, r3, #36
 26568 046a B3F90030 		ldrsh	r3, [r3]
 26569 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
4045:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26570              		.loc 1 4045 0
 26571 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26572 0476 0133     		adds	r3, r3, #1
 26573 0478 07F5C372 		add	r2, r7, #390
 26574 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26575 047e 3A46     		mov	r2, r7
 26576 0480 D154     		strb	r1, [r2, r3]
4046:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26577              		.loc 1 4046 0
 26578 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26579 0486 07F5C373 		add	r3, r7, #390
 26580 048a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 582


 26581 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26582 048e 3B46     		mov	r3, r7
 26583 0490 9954     		strb	r1, [r3, r2]
4047:..\src/command_processing.c ****             c = c + 2;
 26584              		.loc 1 4047 0
 26585 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26586 0496 0233     		adds	r3, r3, #2
 26587 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26588              	.L1032:
4048:..\src/command_processing.c ****         }
4049:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26589              		.loc 1 4049 0
 26590 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26591 04a0 384A     		ldr	r2, .L1038+4
 26592 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26593 04a4 1A46     		mov	r2, r3
 26594 04a6 394B     		ldr	r3, .L1038+12
 26595 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26596 04ac 013B     		subs	r3, r3, #1
 26597 04ae 3A46     		mov	r2, r7
 26598 04b0 3A21     		movs	r1, #58
 26599 04b2 D154     		strb	r1, [r2, r3]
4050:..\src/command_processing.c ****         c = 1;
 26600              		.loc 1 4050 0
 26601 04b4 0123     		movs	r3, #1
 26602 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
4051:..\src/command_processing.c ****                
4052:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26603              		.loc 1 4052 0
 26604 04ba 0023     		movs	r3, #0
 26605 04bc 87F88B31 		strb	r3, [r7, #395]
 26606 04c0 10E0     		b	.L1033
 26607              	.L1034:
4053:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26608              		.loc 1 4053 0 discriminator 3
 26609 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26610 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26611 04ca 1344     		add	r3, r3, r2
 26612 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26613 04d0 3946     		mov	r1, r7
 26614 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26615 04d4 07F12002 		add	r2, r7, #32
 26616 04d8 D154     		strb	r1, [r2, r3]
4052:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26617              		.loc 1 4052 0 discriminator 3
 26618 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26619 04de 0133     		adds	r3, r3, #1
 26620 04e0 87F88B31 		strb	r3, [r7, #395]
 26621              	.L1033:
4052:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26622              		.loc 1 4052 0 is_stmt 0 discriminator 1
 26623 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26624 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26625 04ec 2549     		ldr	r1, .L1038+4
 26626 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26627 04f0 1946     		mov	r1, r3
 26628 04f2 264B     		ldr	r3, .L1038+12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 583


 26629 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26630 04f8 9A42     		cmp	r2, r3
 26631 04fa E2DB     		blt	.L1034
4054:..\src/command_processing.c ****         }
4055:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26632              		.loc 1 4055 0 is_stmt 1 discriminator 2
 26633 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26634 0500 204A     		ldr	r2, .L1038+4
 26635 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26636 0504 1A46     		mov	r2, r3
 26637 0506 214B     		ldr	r3, .L1038+12
 26638 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26639 050c 9AB2     		uxth	r2, r3
 26640 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26641 0512 1344     		add	r3, r3, r2
 26642 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
4056:..\src/command_processing.c ****         
4057:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26643              		.loc 1 4057 0 discriminator 2
 26644 0518 3B46     		mov	r3, r7
 26645 051a 2022     		movs	r2, #32
 26646 051c 0021     		movs	r1, #0
 26647 051e 1846     		mov	r0, r3
 26648 0520 FFF7FEFF 		bl	memset
3972:..\src/command_processing.c ****     {	
 26649              		.loc 1 3972 0 discriminator 2
 26650 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26651 0528 0133     		adds	r3, r3, #1
 26652 052a 87F88F31 		strb	r3, [r7, #399]
 26653              	.L1019:
3972:..\src/command_processing.c ****     {	
 26654              		.loc 1 3972 0 is_stmt 0 discriminator 1
 26655 052e 184B     		ldr	r3, .L1038+16
 26656 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26657 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26658 0536 9A42     		cmp	r2, r3
 26659 0538 FFF476AD 		bcc	.L1035
4058:..\src/command_processing.c ****         
4059:..\src/command_processing.c ****     }
4060:..\src/command_processing.c **** 
4061:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4062:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26660              		.loc 1 4062 0 is_stmt 1
 26661 053c 154B     		ldr	r3, .L1038+20
 26662 053e 1B68     		ldr	r3, [r3]
 26663 0540 5C1E     		subs	r4, r3, #1
 26664 0542 144B     		ldr	r3, .L1038+20
 26665 0544 1B68     		ldr	r3, [r3]
 26666 0546 DBB2     		uxtb	r3, r3
 26667 0548 013B     		subs	r3, r3, #1
 26668 054a DAB2     		uxtb	r2, r3
 26669 054c 07F12003 		add	r3, r7, #32
 26670 0550 1146     		mov	r1, r2
 26671 0552 1846     		mov	r0, r3
 26672 0554 FFF7FEFF 		bl	LCRChecksum
 26673 0558 0346     		mov	r3, r0
 26674 055a 1A46     		mov	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 584


 26675 055c 07F12003 		add	r3, r7, #32
 26676 0560 1A55     		strb	r2, [r3, r4]
4063:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26677              		.loc 1 4063 0
 26678 0562 0C4B     		ldr	r3, .L1038+20
 26679 0564 1B68     		ldr	r3, [r3]
 26680 0566 9AB2     		uxth	r2, r3
 26681 0568 07F12003 		add	r3, r7, #32
 26682 056c 1146     		mov	r1, r2
 26683 056e 1846     		mov	r0, r3
 26684 0570 FFF7FEFF 		bl	commWrite
4064:..\src/command_processing.c **** }
 26685              		.loc 1 4064 0
 26686 0574 00BF     		nop
 26687 0576 07F5CA77 		add	r7, r7, #404
 26688              		.cfi_def_cfa_offset 12
 26689 057a BD46     		mov	sp, r7
 26690              		.cfi_def_cfa_register 13
 26691              		@ sp needed
 26692 057c 90BD     		pop	{r4, r7, pc}
 26693              	.L1039:
 26694 057e 00BF     		.align	2
 26695              	.L1038:
 26696 0580 00000000 		.word	g_imu
 26697 0584 00000000 		.word	IMU_connected
 26698 0588 00000000 		.word	c_mem
 26699 058c 00000000 		.word	single_imu_size
 26700 0590 00000000 		.word	N_IMU_Connected
 26701 0594 00000000 		.word	imus_data_size
 26702              		.cfi_endproc
 26703              	.LFE112:
 26704              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26705              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26706              		.align	2
 26707              		.global	cmd_get_encoder_map
 26708              		.thumb
 26709              		.thumb_func
 26710              		.type	cmd_get_encoder_map, %function
 26711              	cmd_get_encoder_map:
 26712              	.LFB113:
4065:..\src/command_processing.c **** 
4066:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26713              		.loc 1 4066 0
 26714              		.cfi_startproc
 26715              		@ args = 0, pretend = 0, frame = 16
 26716              		@ frame_needed = 1, uses_anonymous_args = 0
 26717 0000 90B5     		push	{r4, r7, lr}
 26718              		.cfi_def_cfa_offset 12
 26719              		.cfi_offset 4, -12
 26720              		.cfi_offset 7, -8
 26721              		.cfi_offset 14, -4
 26722 0002 85B0     		sub	sp, sp, #20
 26723              		.cfi_def_cfa_offset 32
 26724 0004 00AF     		add	r7, sp, #0
 26725              		.cfi_def_cfa_register 7
4067:..\src/command_processing.c ****     //Retrieve Encoder map
4068:..\src/command_processing.c ****     
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 585


4069:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4070:..\src/command_processing.c ****     uint8 CYDATA i, j;
4071:..\src/command_processing.c ****     
4072:..\src/command_processing.c ****     // Header        
4073:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26726              		.loc 1 4073 0
 26727 0006 A323     		movs	r3, #163
 26728 0008 3B70     		strb	r3, [r7]
4074:..\src/command_processing.c ****     
4075:..\src/command_processing.c ****     // Fill payload
4076:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26729              		.loc 1 4076 0
 26730 000a 0223     		movs	r3, #2
 26731 000c 7B70     		strb	r3, [r7, #1]
4077:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26732              		.loc 1 4077 0
 26733 000e 0523     		movs	r3, #5
 26734 0010 BB70     		strb	r3, [r7, #2]
4078:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26735              		.loc 1 4078 0
 26736 0012 0023     		movs	r3, #0
 26737 0014 FB73     		strb	r3, [r7, #15]
 26738 0016 23E0     		b	.L1041
 26739              	.L1044:
4079:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26740              		.loc 1 4079 0
 26741 0018 0023     		movs	r3, #0
 26742 001a BB73     		strb	r3, [r7, #14]
 26743 001c 1AE0     		b	.L1042
 26744              	.L1043:
4080:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26745              		.loc 1 4080 0 discriminator 3
 26746 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26747 0020 1346     		mov	r3, r2
 26748 0022 9B00     		lsls	r3, r3, #2
 26749 0024 1344     		add	r3, r3, r2
 26750 0026 DA1C     		adds	r2, r3, #3
 26751 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26752 002a D118     		adds	r1, r2, r3
 26753 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26754 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26755 0030 154C     		ldr	r4, .L1045
 26756 0032 1346     		mov	r3, r2
 26757 0034 5B00     		lsls	r3, r3, #1
 26758 0036 1344     		add	r3, r3, r2
 26759 0038 1B01     		lsls	r3, r3, #4
 26760 003a 2344     		add	r3, r3, r4
 26761 003c 0344     		add	r3, r3, r0
 26762 003e 03F5C873 		add	r3, r3, #400
 26763 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26764 0044 07F11003 		add	r3, r7, #16
 26765 0048 0B44     		add	r3, r3, r1
 26766 004a 03F8102C 		strb	r2, [r3, #-16]
4079:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26767              		.loc 1 4079 0 discriminator 3
 26768 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26769 0050 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 586


 26770 0052 BB73     		strb	r3, [r7, #14]
 26771              	.L1042:
4079:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26772              		.loc 1 4079 0 is_stmt 0 discriminator 1
 26773 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26774 0056 042B     		cmp	r3, #4
 26775 0058 E1D9     		bls	.L1043
4078:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26776              		.loc 1 4078 0 is_stmt 1 discriminator 2
 26777 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26778 005c 0133     		adds	r3, r3, #1
 26779 005e FB73     		strb	r3, [r7, #15]
 26780              	.L1041:
4078:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26781              		.loc 1 4078 0 is_stmt 0 discriminator 1
 26782 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26783 0062 012B     		cmp	r3, #1
 26784 0064 D8D9     		bls	.L1044
4081:..\src/command_processing.c ****         }
4082:..\src/command_processing.c ****     }
4083:..\src/command_processing.c ****     
4084:..\src/command_processing.c ****     // Calculate checksum
4085:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26785              		.loc 1 4085 0 is_stmt 1
 26786 0066 3B46     		mov	r3, r7
 26787 0068 0D21     		movs	r1, #13
 26788 006a 1846     		mov	r0, r3
 26789 006c FFF7FEFF 		bl	LCRChecksum
 26790 0070 0346     		mov	r3, r0
 26791 0072 7B73     		strb	r3, [r7, #13]
4086:..\src/command_processing.c ****     
4087:..\src/command_processing.c ****     // Send package to UART
4088:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26792              		.loc 1 4088 0
 26793 0074 3B46     		mov	r3, r7
 26794 0076 0E21     		movs	r1, #14
 26795 0078 1846     		mov	r0, r3
 26796 007a FFF7FEFF 		bl	commWrite
4089:..\src/command_processing.c **** }
 26797              		.loc 1 4089 0
 26798 007e 00BF     		nop
 26799 0080 1437     		adds	r7, r7, #20
 26800              		.cfi_def_cfa_offset 12
 26801 0082 BD46     		mov	sp, r7
 26802              		.cfi_def_cfa_register 13
 26803              		@ sp needed
 26804 0084 90BD     		pop	{r4, r7, pc}
 26805              	.L1046:
 26806 0086 00BF     		.align	2
 26807              	.L1045:
 26808 0088 00000000 		.word	c_mem
 26809              		.cfi_endproc
 26810              	.LFE113:
 26811              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26812              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26813              		.align	2
 26814              		.global	cmd_get_encoder_raw
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 587


 26815              		.thumb
 26816              		.thumb_func
 26817              		.type	cmd_get_encoder_raw, %function
 26818              	cmd_get_encoder_raw:
 26819              	.LFB114:
4090:..\src/command_processing.c **** 
4091:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26820              		.loc 1 4091 0
 26821              		.cfi_startproc
 26822              		@ args = 0, pretend = 0, frame = 32
 26823              		@ frame_needed = 1, uses_anonymous_args = 0
 26824 0000 90B5     		push	{r4, r7, lr}
 26825              		.cfi_def_cfa_offset 12
 26826              		.cfi_offset 4, -12
 26827              		.cfi_offset 7, -8
 26828              		.cfi_offset 14, -4
 26829 0002 89B0     		sub	sp, sp, #36
 26830              		.cfi_def_cfa_offset 48
 26831 0004 00AF     		add	r7, sp, #0
 26832              		.cfi_def_cfa_register 7
4092:..\src/command_processing.c ****     //Retrieve all Encoders raw values
4093:..\src/command_processing.c ****     
4094:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
4095:..\src/command_processing.c ****     uint8 i, j, idx;
4096:..\src/command_processing.c ****     uint16 aux_uint16;
4097:..\src/command_processing.c ****     
4098:..\src/command_processing.c ****     //Header package 
4099:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26833              		.loc 1 4099 0
 26834 0006 A423     		movs	r3, #164
 26835 0008 3B71     		strb	r3, [r7, #4]
4100:..\src/command_processing.c ****  
4101:..\src/command_processing.c ****     // Fill payload
4102:..\src/command_processing.c ****     idx = 0;
 26836              		.loc 1 4102 0
 26837 000a 0023     		movs	r3, #0
 26838 000c 7B77     		strb	r3, [r7, #29]
4103:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26839              		.loc 1 4103 0
 26840 000e 0023     		movs	r3, #0
 26841 0010 FB77     		strb	r3, [r7, #31]
 26842 0012 3FE0     		b	.L1048
 26843              	.L1052:
4104:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26844              		.loc 1 4104 0
 26845 0014 0023     		movs	r3, #0
 26846 0016 BB77     		strb	r3, [r7, #30]
 26847 0018 33E0     		b	.L1049
 26848              	.L1051:
4105:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26849              		.loc 1 4105 0
 26850 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26851 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26852 001e 3048     		ldr	r0, .L1053
 26853 0020 1346     		mov	r3, r2
 26854 0022 5B00     		lsls	r3, r3, #1
 26855 0024 1344     		add	r3, r3, r2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 588


 26856 0026 1B01     		lsls	r3, r3, #4
 26857 0028 0344     		add	r3, r3, r0
 26858 002a 0B44     		add	r3, r3, r1
 26859 002c 03F5C873 		add	r3, r3, #400
 26860 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26861 0032 012B     		cmp	r3, #1
 26862 0034 22D1     		bne	.L1050
4106:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26863              		.loc 1 4106 0
 26864 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26865 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26866 003a 2A48     		ldr	r0, .L1053+4
 26867 003c 1346     		mov	r3, r2
 26868 003e 9B00     		lsls	r3, r3, #2
 26869 0040 1344     		add	r3, r3, r2
 26870 0042 0B44     		add	r3, r3, r1
 26871 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26872 0048 7B80     		strh	r3, [r7, #2]	@ movhi
4107:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26873              		.loc 1 4107 0
 26874 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26875 004c 5B00     		lsls	r3, r3, #1
 26876 004e 0233     		adds	r3, r3, #2
 26877 0050 BA1C     		adds	r2, r7, #2
 26878 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26879 0054 07F12001 		add	r1, r7, #32
 26880 0058 0B44     		add	r3, r3, r1
 26881 005a 03F81C2C 		strb	r2, [r3, #-28]
4108:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26882              		.loc 1 4108 0
 26883 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26884 0060 5B00     		lsls	r3, r3, #1
 26885 0062 5A1C     		adds	r2, r3, #1
 26886 0064 BB1C     		adds	r3, r7, #2
 26887 0066 0133     		adds	r3, r3, #1
 26888 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26889 006a 07F12003 		add	r3, r7, #32
 26890 006e 1344     		add	r3, r3, r2
 26891 0070 0A46     		mov	r2, r1
 26892 0072 03F81C2C 		strb	r2, [r3, #-28]
4109:..\src/command_processing.c ****                 idx++;
 26893              		.loc 1 4109 0
 26894 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26895 0078 0133     		adds	r3, r3, #1
 26896 007a 7B77     		strb	r3, [r7, #29]
 26897              	.L1050:
4104:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26898              		.loc 1 4104 0 discriminator 2
 26899 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26900 007e 0133     		adds	r3, r3, #1
 26901 0080 BB77     		strb	r3, [r7, #30]
 26902              	.L1049:
4104:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26903              		.loc 1 4104 0 is_stmt 0 discriminator 1
 26904 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26905 0084 184A     		ldr	r2, .L1053+8
 26906 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 589


 26907 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26908 008a 9A42     		cmp	r2, r3
 26909 008c C5D3     		bcc	.L1051
4103:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26910              		.loc 1 4103 0 is_stmt 1 discriminator 2
 26911 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26912 0090 0133     		adds	r3, r3, #1
 26913 0092 FB77     		strb	r3, [r7, #31]
 26914              	.L1048:
4103:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26915              		.loc 1 4103 0 is_stmt 0 discriminator 1
 26916 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26917 0096 012B     		cmp	r3, #1
 26918 0098 BCD9     		bls	.L1052
4110:..\src/command_processing.c ****             }
4111:..\src/command_processing.c ****         }
4112:..\src/command_processing.c ****     }
4113:..\src/command_processing.c **** 
4114:..\src/command_processing.c ****     // Calculate checksum
4115:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26919              		.loc 1 4115 0 is_stmt 1
 26920 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26921 009c 5B00     		lsls	r3, r3, #1
 26922 009e 5C1C     		adds	r4, r3, #1
 26923 00a0 7B7F     		ldrb	r3, [r7, #29]
 26924 00a2 5B00     		lsls	r3, r3, #1
 26925 00a4 DBB2     		uxtb	r3, r3
 26926 00a6 0133     		adds	r3, r3, #1
 26927 00a8 DAB2     		uxtb	r2, r3
 26928 00aa 3B1D     		adds	r3, r7, #4
 26929 00ac 1146     		mov	r1, r2
 26930 00ae 1846     		mov	r0, r3
 26931 00b0 FFF7FEFF 		bl	LCRChecksum
 26932 00b4 0346     		mov	r3, r0
 26933 00b6 1A46     		mov	r2, r3
 26934 00b8 07F12003 		add	r3, r7, #32
 26935 00bc 2344     		add	r3, r3, r4
 26936 00be 03F81C2C 		strb	r2, [r3, #-28]
4116:..\src/command_processing.c ****     
4117:..\src/command_processing.c ****     // Send package to UART
4118:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26937              		.loc 1 4118 0
 26938 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26939 00c4 0133     		adds	r3, r3, #1
 26940 00c6 9BB2     		uxth	r3, r3
 26941 00c8 5B00     		lsls	r3, r3, #1
 26942 00ca 9AB2     		uxth	r2, r3
 26943 00cc 3B1D     		adds	r3, r7, #4
 26944 00ce 1146     		mov	r1, r2
 26945 00d0 1846     		mov	r0, r3
 26946 00d2 FFF7FEFF 		bl	commWrite
4119:..\src/command_processing.c **** }
 26947              		.loc 1 4119 0
 26948 00d6 00BF     		nop
 26949 00d8 2437     		adds	r7, r7, #36
 26950              		.cfi_def_cfa_offset 12
 26951 00da BD46     		mov	sp, r7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 590


 26952              		.cfi_def_cfa_register 13
 26953              		@ sp needed
 26954 00dc 90BD     		pop	{r4, r7, pc}
 26955              	.L1054:
 26956 00de 00BF     		.align	2
 26957              	.L1053:
 26958 00e0 00000000 		.word	c_mem
 26959 00e4 00000000 		.word	Encoder_Value
 26960 00e8 00000000 		.word	N_Encoder_Line_Connected
 26961              		.cfi_endproc
 26962              	.LFE114:
 26963              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26964              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26965              		.align	2
 26966              		.global	cmd_get_ADC_map
 26967              		.thumb
 26968              		.thumb_func
 26969              		.type	cmd_get_ADC_map, %function
 26970              	cmd_get_ADC_map:
 26971              	.LFB115:
4120:..\src/command_processing.c **** 
4121:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26972              		.loc 1 4121 0
 26973              		.cfi_startproc
 26974              		@ args = 0, pretend = 0, frame = 16
 26975              		@ frame_needed = 1, uses_anonymous_args = 0
 26976 0000 80B5     		push	{r7, lr}
 26977              		.cfi_def_cfa_offset 8
 26978              		.cfi_offset 7, -8
 26979              		.cfi_offset 14, -4
 26980 0002 84B0     		sub	sp, sp, #16
 26981              		.cfi_def_cfa_offset 24
 26982 0004 00AF     		add	r7, sp, #0
 26983              		.cfi_def_cfa_register 7
4122:..\src/command_processing.c ****     //Retrieve Encoder map
4123:..\src/command_processing.c ****     
4124:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
4125:..\src/command_processing.c ****     uint8 CYDATA i;
4126:..\src/command_processing.c ****     
4127:..\src/command_processing.c ****     // Header        
4128:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26984              		.loc 1 4128 0
 26985 0006 A523     		movs	r3, #165
 26986 0008 3B70     		strb	r3, [r7]
4129:..\src/command_processing.c ****     
4130:..\src/command_processing.c ****     // Fill payload
4131:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26987              		.loc 1 4131 0
 26988 000a 0C23     		movs	r3, #12
 26989 000c 7B70     		strb	r3, [r7, #1]
4132:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26990              		.loc 1 4132 0
 26991 000e 0023     		movs	r3, #0
 26992 0010 FB73     		strb	r3, [r7, #15]
 26993 0012 0EE0     		b	.L1056
 26994              	.L1057:
4133:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 591


 26995              		.loc 1 4133 0 discriminator 3
 26996 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26997 0016 0233     		adds	r3, r3, #2
 26998 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26999 001a 0F49     		ldr	r1, .L1058
 27000 001c 0A44     		add	r2, r2, r1
 27001 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 27002 0022 07F11001 		add	r1, r7, #16
 27003 0026 0B44     		add	r3, r3, r1
 27004 0028 03F8102C 		strb	r2, [r3, #-16]
4132:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 27005              		.loc 1 4132 0 discriminator 3
 27006 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27007 002e 0133     		adds	r3, r3, #1
 27008 0030 FB73     		strb	r3, [r7, #15]
 27009              	.L1056:
4132:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 27010              		.loc 1 4132 0 is_stmt 0 discriminator 1
 27011 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 27012 0034 0B2B     		cmp	r3, #11
 27013 0036 EDD9     		bls	.L1057
4134:..\src/command_processing.c ****     }
4135:..\src/command_processing.c ****     
4136:..\src/command_processing.c ****     // Calculate checksum
4137:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 27014              		.loc 1 4137 0 is_stmt 1
 27015 0038 3B46     		mov	r3, r7
 27016 003a 0E21     		movs	r1, #14
 27017 003c 1846     		mov	r0, r3
 27018 003e FFF7FEFF 		bl	LCRChecksum
 27019 0042 0346     		mov	r3, r0
 27020 0044 BB73     		strb	r3, [r7, #14]
4138:..\src/command_processing.c ****     
4139:..\src/command_processing.c ****     // Send package to UART
4140:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 27021              		.loc 1 4140 0
 27022 0046 3B46     		mov	r3, r7
 27023 0048 0F21     		movs	r1, #15
 27024 004a 1846     		mov	r0, r3
 27025 004c FFF7FEFF 		bl	commWrite
4141:..\src/command_processing.c ****     
4142:..\src/command_processing.c **** }
 27026              		.loc 1 4142 0
 27027 0050 00BF     		nop
 27028 0052 1037     		adds	r7, r7, #16
 27029              		.cfi_def_cfa_offset 8
 27030 0054 BD46     		mov	sp, r7
 27031              		.cfi_def_cfa_register 13
 27032              		@ sp needed
 27033 0056 80BD     		pop	{r7, pc}
 27034              	.L1059:
 27035              		.align	2
 27036              	.L1058:
 27037 0058 00000000 		.word	c_mem
 27038              		.cfi_endproc
 27039              	.LFE115:
 27040              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 592


 27041              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 27042              		.align	2
 27043              		.global	cmd_get_ADC_raw
 27044              		.thumb
 27045              		.thumb_func
 27046              		.type	cmd_get_ADC_raw, %function
 27047              	cmd_get_ADC_raw:
 27048              	.LFB116:
4143:..\src/command_processing.c **** 
4144:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 27049              		.loc 1 4144 0
 27050              		.cfi_startproc
 27051              		@ args = 0, pretend = 0, frame = 32
 27052              		@ frame_needed = 1, uses_anonymous_args = 0
 27053 0000 90B5     		push	{r4, r7, lr}
 27054              		.cfi_def_cfa_offset 12
 27055              		.cfi_offset 4, -12
 27056              		.cfi_offset 7, -8
 27057              		.cfi_offset 14, -4
 27058 0002 89B0     		sub	sp, sp, #36
 27059              		.cfi_def_cfa_offset 48
 27060 0004 00AF     		add	r7, sp, #0
 27061              		.cfi_def_cfa_register 7
4145:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4146:..\src/command_processing.c ****     
4147:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4148:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 27062              		.loc 1 4148 0
 27063 0006 0023     		movs	r3, #0
 27064 0008 BB77     		strb	r3, [r7, #30]
4149:..\src/command_processing.c ****     int16 aux_int16;
4150:..\src/command_processing.c ****     
4151:..\src/command_processing.c ****     // Header        
4152:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 27065              		.loc 1 4152 0
 27066 000a A623     		movs	r3, #166
 27067 000c 3B71     		strb	r3, [r7, #4]
4153:..\src/command_processing.c ****     
4154:..\src/command_processing.c ****     // Fill payload
4155:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 27068              		.loc 1 4155 0
 27069 000e 0023     		movs	r3, #0
 27070 0010 FB77     		strb	r3, [r7, #31]
 27071 0012 27E0     		b	.L1061
 27072              	.L1063:
4156:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27073              		.loc 1 4156 0
 27074 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27075 0016 274A     		ldr	r2, .L1064
 27076 0018 1344     		add	r3, r3, r2
 27077 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 27078 001e 012B     		cmp	r3, #1
 27079 0020 1DD1     		bne	.L1062
4157:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 27080              		.loc 1 4157 0
 27081 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27082 0024 244A     		ldr	r2, .L1064+4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 593


 27083 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 27084 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4158:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 27085              		.loc 1 4158 0
 27086 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27087 002e 5B00     		lsls	r3, r3, #1
 27088 0030 0233     		adds	r3, r3, #2
 27089 0032 BA1C     		adds	r2, r7, #2
 27090 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27091 0036 07F12001 		add	r1, r7, #32
 27092 003a 0B44     		add	r3, r3, r1
 27093 003c 03F81C2C 		strb	r2, [r3, #-28]
4159:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 27094              		.loc 1 4159 0
 27095 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27096 0042 5B00     		lsls	r3, r3, #1
 27097 0044 5A1C     		adds	r2, r3, #1
 27098 0046 BB1C     		adds	r3, r7, #2
 27099 0048 0133     		adds	r3, r3, #1
 27100 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 27101 004c 07F12003 		add	r3, r7, #32
 27102 0050 1344     		add	r3, r3, r2
 27103 0052 0A46     		mov	r2, r1
 27104 0054 03F81C2C 		strb	r2, [r3, #-28]
4160:..\src/command_processing.c ****             idx++;
 27105              		.loc 1 4160 0
 27106 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27107 005a 0133     		adds	r3, r3, #1
 27108 005c BB77     		strb	r3, [r7, #30]
 27109              	.L1062:
4155:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27110              		.loc 1 4155 0 discriminator 2
 27111 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 27112 0060 0133     		adds	r3, r3, #1
 27113 0062 FB77     		strb	r3, [r7, #31]
 27114              	.L1061:
4155:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 27115              		.loc 1 4155 0 is_stmt 0 discriminator 1
 27116 0064 154B     		ldr	r3, .L1064+8
 27117 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27118 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 27119 006a 9A42     		cmp	r2, r3
 27120 006c D2D3     		bcc	.L1063
4161:..\src/command_processing.c ****         }
4162:..\src/command_processing.c ****     }
4163:..\src/command_processing.c **** 
4164:..\src/command_processing.c ****     // Calculate checksum
4165:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 27121              		.loc 1 4165 0 is_stmt 1
 27122 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27123 0070 5B00     		lsls	r3, r3, #1
 27124 0072 5C1C     		adds	r4, r3, #1
 27125 0074 BB7F     		ldrb	r3, [r7, #30]
 27126 0076 5B00     		lsls	r3, r3, #1
 27127 0078 DBB2     		uxtb	r3, r3
 27128 007a 0133     		adds	r3, r3, #1
 27129 007c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 594


 27130 007e 3B1D     		adds	r3, r7, #4
 27131 0080 1146     		mov	r1, r2
 27132 0082 1846     		mov	r0, r3
 27133 0084 FFF7FEFF 		bl	LCRChecksum
 27134 0088 0346     		mov	r3, r0
 27135 008a 1A46     		mov	r2, r3
 27136 008c 07F12003 		add	r3, r7, #32
 27137 0090 2344     		add	r3, r3, r4
 27138 0092 03F81C2C 		strb	r2, [r3, #-28]
4166:..\src/command_processing.c ****     
4167:..\src/command_processing.c ****     // Send package to UART
4168:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 27139              		.loc 1 4168 0
 27140 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 27141 0098 0133     		adds	r3, r3, #1
 27142 009a 9BB2     		uxth	r3, r3
 27143 009c 5B00     		lsls	r3, r3, #1
 27144 009e 9AB2     		uxth	r2, r3
 27145 00a0 3B1D     		adds	r3, r7, #4
 27146 00a2 1146     		mov	r1, r2
 27147 00a4 1846     		mov	r0, r3
 27148 00a6 FFF7FEFF 		bl	commWrite
4169:..\src/command_processing.c **** }
 27149              		.loc 1 4169 0
 27150 00aa 00BF     		nop
 27151 00ac 2437     		adds	r7, r7, #36
 27152              		.cfi_def_cfa_offset 12
 27153 00ae BD46     		mov	sp, r7
 27154              		.cfi_def_cfa_register 13
 27155              		@ sp needed
 27156 00b0 90BD     		pop	{r4, r7, pc}
 27157              	.L1065:
 27158 00b2 00BF     		.align	2
 27159              	.L1064:
 27160 00b4 00000000 		.word	c_mem
 27161 00b8 00000000 		.word	ADC_buf
 27162 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 27163              		.cfi_endproc
 27164              	.LFE116:
 27165              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 27166              		.section	.rodata
 27167 1f83 00       		.align	2
 27168              	.LC300:
 27169 1f84 00       		.ascii	"\000"
 27170              		.section	.text.cmd_get_SD_file,"ax",%progbits
 27171              		.align	2
 27172              		.global	cmd_get_SD_file
 27173              		.thumb
 27174              		.thumb_func
 27175              		.type	cmd_get_SD_file, %function
 27176              	cmd_get_SD_file:
 27177              	.LFB117:
4170:..\src/command_processing.c **** 
4171:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 27178              		.loc 1 4171 0
 27179              		.cfi_startproc
 27180              		@ args = 0, pretend = 0, frame = 20064
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 595


 27181              		@ frame_needed = 1, uses_anonymous_args = 0
 27182 0000 80B5     		push	{r7, lr}
 27183              		.cfi_def_cfa_offset 8
 27184              		.cfi_offset 7, -8
 27185              		.cfi_offset 14, -4
 27186 0002 ADF59C4D 		sub	sp, sp, #19968
 27187              		.cfi_def_cfa_offset 19976
 27188 0006 98B0     		sub	sp, sp, #96
 27189              		.cfi_def_cfa_offset 20072
 27190 0008 00AF     		add	r7, sp, #0
 27191              		.cfi_def_cfa_register 7
 27192 000a 0246     		mov	r2, r0
 27193 000c 07F16003 		add	r3, r7, #96
 27194 0010 5A3B     		subs	r3, r3, #90
 27195 0012 1A80     		strh	r2, [r3]	@ movhi
4172:..\src/command_processing.c ****     
4173:..\src/command_processing.c ****     uint8 i = 0;
 27196              		.loc 1 4173 0
 27197 0014 0023     		movs	r3, #0
 27198 0016 07F59C42 		add	r2, r7, #19968
 27199 001a 02F15F02 		add	r2, r2, #95
 27200 001e 1370     		strb	r3, [r2]
4174:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27201              		.loc 1 4174 0
 27202 0020 0023     		movs	r3, #0
 27203 0022 07F59C42 		add	r2, r7, #19968
 27204 0026 02F12C02 		add	r2, r2, #44
 27205 002a 1360     		str	r3, [r2]
 27206 002c 07F59C43 		add	r3, r7, #19968
 27207 0030 03F13003 		add	r3, r3, #48
 27208 0034 2E22     		movs	r2, #46
 27209 0036 0021     		movs	r1, #0
 27210 0038 1846     		mov	r0, r3
 27211 003a FFF7FEFF 		bl	memset
4175:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 27212              		.loc 1 4175 0
 27213 003e 07F16003 		add	r3, r7, #96
 27214 0042 543B     		subs	r3, r3, #84
 27215 0044 0022     		movs	r2, #0
 27216 0046 1A60     		str	r2, [r3]
 27217 0048 0433     		adds	r3, r3, #4
 27218 004a 44F61C62 		movw	r2, #19996
 27219 004e 0021     		movs	r1, #0
 27220 0050 1846     		mov	r0, r3
 27221 0052 FFF7FEFF 		bl	memset
4176:..\src/command_processing.c ****     strcpy(filename, "");
 27222              		.loc 1 4176 0
 27223 0056 3C4B     		ldr	r3, .L1071
 27224 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27225 005a 07F59C42 		add	r2, r7, #19968
 27226 005e 02F12C02 		add	r2, r2, #44
 27227 0062 1370     		strb	r3, [r2]
4177:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 27228              		.loc 1 4177 0
 27229 0064 384B     		ldr	r3, .L1071
 27230 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27231 0068 07F16003 		add	r3, r7, #96
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 596


 27232 006c 543B     		subs	r3, r3, #84
 27233 006e 1A70     		strb	r2, [r3]
4178:..\src/command_processing.c ****     
4179:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27234              		.loc 1 4179 0
 27235 0070 0023     		movs	r3, #0
 27236 0072 07F59C42 		add	r2, r7, #19968
 27237 0076 02F15F02 		add	r2, r2, #95
 27238 007a 1370     		strb	r3, [r2]
 27239 007c 1DE0     		b	.L1067
 27240              	.L1068:
4180:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27241              		.loc 1 4180 0 discriminator 3
 27242 007e 07F59C43 		add	r3, r7, #19968
 27243 0082 03F15F03 		add	r3, r3, #95
 27244 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27245 0088 07F59C42 		add	r2, r7, #19968
 27246 008c 02F12C02 		add	r2, r2, #44
 27247 0090 1344     		add	r3, r3, r2
 27248 0092 07F59C42 		add	r2, r7, #19968
 27249 0096 02F15F02 		add	r2, r2, #95
 27250 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27251 009c 0332     		adds	r2, r2, #3
 27252 009e 2B49     		ldr	r1, .L1071+4
 27253 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27254 00a2 1A70     		strb	r2, [r3]
4179:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27255              		.loc 1 4179 0 discriminator 3
 27256 00a4 07F59C43 		add	r3, r7, #19968
 27257 00a8 03F15F03 		add	r3, r3, #95
 27258 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27259 00ae 0133     		adds	r3, r3, #1
 27260 00b0 07F59C42 		add	r2, r7, #19968
 27261 00b4 02F15F02 		add	r2, r2, #95
 27262 00b8 1370     		strb	r3, [r2]
 27263              	.L1067:
4179:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27264              		.loc 1 4179 0 is_stmt 0 discriminator 1
 27265 00ba 07F59C43 		add	r3, r7, #19968
 27266 00be 03F15F03 		add	r3, r3, #95
 27267 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27268 00c4 9AB2     		uxth	r2, r3
 27269 00c6 07F16003 		add	r3, r7, #96
 27270 00ca 5A3B     		subs	r3, r3, #90
 27271 00cc 1B88     		ldrh	r3, [r3]
 27272 00ce 9342     		cmp	r3, r2
 27273 00d0 D5D8     		bhi	.L1068
4181:..\src/command_processing.c ****     }
4182:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27274              		.loc 1 4182 0 is_stmt 1
 27275 00d2 07F59C43 		add	r3, r7, #19968
 27276 00d6 03F15F03 		add	r3, r3, #95
 27277 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27278 00dc 07F59C42 		add	r2, r7, #19968
 27279 00e0 02F12C02 		add	r2, r2, #44
 27280 00e4 1344     		add	r3, r3, r2
 27281 00e6 0022     		movs	r2, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 597


 27282 00e8 1A70     		strb	r2, [r3]
4183:..\src/command_processing.c ****      
4184:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4185:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27283              		.loc 1 4185 0
 27284 00ea 07F59C43 		add	r3, r7, #19968
 27285 00ee 03F12C03 		add	r3, r3, #44
 27286 00f2 1749     		ldr	r1, .L1071+8
 27287 00f4 1846     		mov	r0, r3
 27288 00f6 FFF7FEFF 		bl	strcmp
 27289 00fa 0346     		mov	r3, r0
 27290 00fc 002B     		cmp	r3, #0
 27291 00fe 0CD0     		beq	.L1069
4186:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27292              		.loc 1 4186 0
 27293 0100 07F16003 		add	r3, r7, #96
 27294 0104 543B     		subs	r3, r3, #84
 27295 0106 07F59C40 		add	r0, r7, #19968
 27296 010a 00F12C00 		add	r0, r0, #44
 27297 010e 44F62062 		movw	r2, #20000
 27298 0112 1946     		mov	r1, r3
 27299 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27300 0118 07E0     		b	.L1070
 27301              	.L1069:
4187:..\src/command_processing.c ****     }
4188:..\src/command_processing.c ****     else {
4189:..\src/command_processing.c ****         //It is the currently open working file
4190:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27302              		.loc 1 4190 0
 27303 011a 07F16003 		add	r3, r7, #96
 27304 011e 543B     		subs	r3, r3, #84
 27305 0120 44F62061 		movw	r1, #20000
 27306 0124 1846     		mov	r0, r3
 27307 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27308              	.L1070:
4191:..\src/command_processing.c ****     }
4192:..\src/command_processing.c **** 
4193:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4194:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4195:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27309              		.loc 1 4195 0
 27310 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4196:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27311              		.loc 1 4196 0
 27312 012e 07F16003 		add	r3, r7, #96
 27313 0132 543B     		subs	r3, r3, #84
 27314 0134 1846     		mov	r0, r3
 27315 0136 FFF7FEFF 		bl	UART_RS485_PutString
4197:..\src/command_processing.c **** }
 27316              		.loc 1 4197 0
 27317 013a 00BF     		nop
 27318 013c 07F59C47 		add	r7, r7, #19968
 27319 0140 6037     		adds	r7, r7, #96
 27320              		.cfi_def_cfa_offset 8
 27321 0142 BD46     		mov	sp, r7
 27322              		.cfi_def_cfa_register 13
 27323              		@ sp needed
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 598


 27324 0144 80BD     		pop	{r7, pc}
 27325              	.L1072:
 27326 0146 00BF     		.align	2
 27327              	.L1071:
 27328 0148 841F0000 		.word	.LC300
 27329 014c 00000000 		.word	g_rx
 27330 0150 00000000 		.word	sdFile
 27331              		.cfi_endproc
 27332              	.LFE117:
 27333              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27334              		.section	.text.cmd_remove_SD_file,"ax",%progbits
 27335              		.align	2
 27336              		.global	cmd_remove_SD_file
 27337              		.thumb
 27338              		.thumb_func
 27339              		.type	cmd_remove_SD_file, %function
 27340              	cmd_remove_SD_file:
 27341              	.LFB118:
4198:..\src/command_processing.c **** 
4199:..\src/command_processing.c **** void cmd_remove_SD_file( uint16 filename_length ){
 27342              		.loc 1 4199 0
 27343              		.cfi_startproc
 27344              		@ args = 0, pretend = 0, frame = 64
 27345              		@ frame_needed = 1, uses_anonymous_args = 0
 27346 0000 80B5     		push	{r7, lr}
 27347              		.cfi_def_cfa_offset 8
 27348              		.cfi_offset 7, -8
 27349              		.cfi_offset 14, -4
 27350 0002 90B0     		sub	sp, sp, #64
 27351              		.cfi_def_cfa_offset 72
 27352 0004 00AF     		add	r7, sp, #0
 27353              		.cfi_def_cfa_register 7
 27354 0006 0346     		mov	r3, r0
 27355 0008 FB80     		strh	r3, [r7, #6]	@ movhi
4200:..\src/command_processing.c ****     
4201:..\src/command_processing.c ****     uint8 i = 0;
 27356              		.loc 1 4201 0
 27357 000a 0023     		movs	r3, #0
 27358 000c 87F83F30 		strb	r3, [r7, #63]
4202:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 27359              		.loc 1 4202 0
 27360 0010 0023     		movs	r3, #0
 27361 0012 FB60     		str	r3, [r7, #12]
 27362 0014 07F11003 		add	r3, r7, #16
 27363 0018 2E22     		movs	r2, #46
 27364 001a 0021     		movs	r1, #0
 27365 001c 1846     		mov	r0, r3
 27366 001e FFF7FEFF 		bl	memset
4203:..\src/command_processing.c ****     strcpy(filename, "");
 27367              		.loc 1 4203 0
 27368 0022 214B     		ldr	r3, .L1076
 27369 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27370 0026 3B73     		strb	r3, [r7, #12]
4204:..\src/command_processing.c ****     
4205:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27371              		.loc 1 4205 0
 27372 0028 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 599


 27373 002a 87F83F30 		strb	r3, [r7, #63]
 27374 002e 0FE0     		b	.L1074
 27375              	.L1075:
4206:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27376              		.loc 1 4206 0 discriminator 3
 27377 0030 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27378 0034 07F10C02 		add	r2, r7, #12
 27379 0038 1344     		add	r3, r3, r2
 27380 003a 97F83F20 		ldrb	r2, [r7, #63]	@ zero_extendqisi2
 27381 003e 0332     		adds	r2, r2, #3
 27382 0040 1A49     		ldr	r1, .L1076+4
 27383 0042 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27384 0044 1A70     		strb	r2, [r3]
4205:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27385              		.loc 1 4205 0 discriminator 3
 27386 0046 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27387 004a 0133     		adds	r3, r3, #1
 27388 004c 87F83F30 		strb	r3, [r7, #63]
 27389              	.L1074:
4205:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27390              		.loc 1 4205 0 is_stmt 0 discriminator 1
 27391 0050 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27392 0054 9BB2     		uxth	r3, r3
 27393 0056 FA88     		ldrh	r2, [r7, #6]
 27394 0058 9A42     		cmp	r2, r3
 27395 005a E9D8     		bhi	.L1075
4207:..\src/command_processing.c ****     }
4208:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27396              		.loc 1 4208 0 is_stmt 1
 27397 005c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 27398 0060 07F10C02 		add	r2, r7, #12
 27399 0064 1344     		add	r3, r3, r2
 27400 0066 0022     		movs	r2, #0
 27401 0068 1A70     		strb	r2, [r3]
4209:..\src/command_processing.c ****      
4210:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4211:..\src/command_processing.c ****     uint8 res = Remove_SD_File(filename);
 27402              		.loc 1 4211 0
 27403 006a 07F10C03 		add	r3, r7, #12
 27404 006e 1846     		mov	r0, r3
 27405 0070 FFF7FEFF 		bl	Remove_SD_File
 27406 0074 0346     		mov	r3, r0
 27407 0076 87F83E30 		strb	r3, [r7, #62]
4212:..\src/command_processing.c ****   
4213:..\src/command_processing.c ****     
4214:..\src/command_processing.c ****     uint8 packet_data[3]; 
4215:..\src/command_processing.c ****     
4216:..\src/command_processing.c ****     //Header package
4217:..\src/command_processing.c **** 
4218:..\src/command_processing.c ****     packet_data[0] = CMD_REMOVE_SD_SINGLE_FILE;
 27408              		.loc 1 4218 0
 27409 007a A823     		movs	r3, #168
 27410 007c 3B72     		strb	r3, [r7, #8]
4219:..\src/command_processing.c ****     packet_data[1] = res;
 27411              		.loc 1 4219 0
 27412 007e 97F83E30 		ldrb	r3, [r7, #62]
 27413 0082 7B72     		strb	r3, [r7, #9]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 600


4220:..\src/command_processing.c **** 
4221:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
4222:..\src/command_processing.c ****     packet_data[2] = LCRChecksum (packet_data, 2);
 27414              		.loc 1 4222 0
 27415 0084 07F10803 		add	r3, r7, #8
 27416 0088 0221     		movs	r1, #2
 27417 008a 1846     		mov	r0, r3
 27418 008c FFF7FEFF 		bl	LCRChecksum
 27419 0090 0346     		mov	r3, r0
 27420 0092 BB72     		strb	r3, [r7, #10]
4223:..\src/command_processing.c ****     
4224:..\src/command_processing.c ****     commWrite(packet_data, 3);
 27421              		.loc 1 4224 0
 27422 0094 07F10803 		add	r3, r7, #8
 27423 0098 0321     		movs	r1, #3
 27424 009a 1846     		mov	r0, r3
 27425 009c FFF7FEFF 		bl	commWrite
4225:..\src/command_processing.c **** }
 27426              		.loc 1 4225 0
 27427 00a0 00BF     		nop
 27428 00a2 4037     		adds	r7, r7, #64
 27429              		.cfi_def_cfa_offset 8
 27430 00a4 BD46     		mov	sp, r7
 27431              		.cfi_def_cfa_register 13
 27432              		@ sp needed
 27433 00a6 80BD     		pop	{r7, pc}
 27434              	.L1077:
 27435              		.align	2
 27436              	.L1076:
 27437 00a8 841F0000 		.word	.LC300
 27438 00ac 00000000 		.word	g_rx
 27439              		.cfi_endproc
 27440              	.LFE118:
 27441              		.size	cmd_remove_SD_file, .-cmd_remove_SD_file
 27442              		.section	.text.vibrotactile_control,"ax",%progbits
 27443              		.align	2
 27444              		.global	vibrotactile_control
 27445              		.thumb
 27446              		.thumb_func
 27447              		.type	vibrotactile_control, %function
 27448              	vibrotactile_control:
 27449              	.LFB119:
4226:..\src/command_processing.c **** 
4227:..\src/command_processing.c **** //==============================================================================
4228:..\src/command_processing.c **** //                                                          VIBROTACTILE CONTROL
4229:..\src/command_processing.c **** //==============================================================================
4230:..\src/command_processing.c **** /* It asks IMU values to the SoftHand and sets vibrotactile feedback device inputs proportionally.*
4231:..\src/command_processing.c **** 
4232:..\src/command_processing.c **** void vibrotactile_control() {
 27450              		.loc 1 4232 0
 27451              		.cfi_startproc
 27452              		@ args = 0, pretend = 0, frame = 8
 27453              		@ frame_needed = 1, uses_anonymous_args = 0
 27454 0000 90B5     		push	{r4, r7, lr}
 27455              		.cfi_def_cfa_offset 12
 27456              		.cfi_offset 4, -12
 27457              		.cfi_offset 7, -8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 601


 27458              		.cfi_offset 14, -4
 27459 0002 83B0     		sub	sp, sp, #12
 27460              		.cfi_def_cfa_offset 24
 27461 0004 00AF     		add	r7, sp, #0
 27462              		.cfi_def_cfa_register 7
4233:..\src/command_processing.c ****     
4234:..\src/command_processing.c ****     uint8 i;
4235:..\src/command_processing.c ****     
4236:..\src/command_processing.c ****     commReadIMUFromSH();    
 27463              		.loc 1 4236 0
 27464 0006 FFF7FEFF 		bl	commReadIMUFromSH
4237:..\src/command_processing.c ****     // Ask to the slave the reference commands to drive the vibrotactile devices. 
4238:..\src/command_processing.c ****     // Values received are already the PWM commands computed by the slave board proportional to the
4239:..\src/command_processing.c ****     
4240:..\src/command_processing.c ****     PWM_IMU_1 = (int16)(((float)PWM_IMU_1/50.0) * SCALA);
 27465              		.loc 1 4240 0
 27466 000a 494B     		ldr	r3, .L1086
 27467 000c B3F90030 		ldrsh	r3, [r3]
 27468 0010 1846     		mov	r0, r3
 27469 0012 FFF7FEFF 		bl	__aeabi_i2f
 27470 0016 0346     		mov	r3, r0
 27471 0018 1846     		mov	r0, r3
 27472 001a FFF7FEFF 		bl	__aeabi_f2d
 27473 001e 4FF00002 		mov	r2, #0
 27474 0022 444B     		ldr	r3, .L1086+4
 27475 0024 FFF7FEFF 		bl	__aeabi_ddiv
 27476 0028 0346     		mov	r3, r0
 27477 002a 0C46     		mov	r4, r1
 27478 002c 1846     		mov	r0, r3
 27479 002e 2146     		mov	r1, r4
 27480 0030 4FF00002 		mov	r2, #0
 27481 0034 404B     		ldr	r3, .L1086+8
 27482 0036 FFF7FEFF 		bl	__aeabi_dmul
 27483 003a 0346     		mov	r3, r0
 27484 003c 0C46     		mov	r4, r1
 27485 003e 1846     		mov	r0, r3
 27486 0040 2146     		mov	r1, r4
 27487 0042 FFF7FEFF 		bl	__aeabi_d2iz
 27488 0046 0346     		mov	r3, r0
 27489 0048 1AB2     		sxth	r2, r3
 27490 004a 394B     		ldr	r3, .L1086
 27491 004c 1A80     		strh	r2, [r3]	@ movhi
4241:..\src/command_processing.c ****     if (PWM_IMU_1 > MAX_INPUT_PWM) PWM_IMU_1 = MAX_INPUT_PWM;
 27492              		.loc 1 4241 0
 27493 004e 384B     		ldr	r3, .L1086
 27494 0050 B3F90030 		ldrsh	r3, [r3]
 27495 0054 642B     		cmp	r3, #100
 27496 0056 02DD     		ble	.L1079
 27497              		.loc 1 4241 0 is_stmt 0 discriminator 1
 27498 0058 354B     		ldr	r3, .L1086
 27499 005a 6422     		movs	r2, #100
 27500 005c 1A80     		strh	r2, [r3]	@ movhi
 27501              	.L1079:
4242:..\src/command_processing.c ****     if (PWM_IMU_1 < MIN_INPUT_PWM) PWM_IMU_1 = 0;
 27502              		.loc 1 4242 0 is_stmt 1
 27503 005e 344B     		ldr	r3, .L1086
 27504 0060 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 602


 27505 0064 092B     		cmp	r3, #9
 27506 0066 02DC     		bgt	.L1080
 27507              		.loc 1 4242 0 is_stmt 0 discriminator 1
 27508 0068 314B     		ldr	r3, .L1086
 27509 006a 0022     		movs	r2, #0
 27510 006c 1A80     		strh	r2, [r3]	@ movhi
 27511              	.L1080:
4243:..\src/command_processing.c ****     
4244:..\src/command_processing.c ****     PWM_IMU_2 = (int16) (((float)PWM_IMU_2/50.0) * SCALA);
 27512              		.loc 1 4244 0 is_stmt 1
 27513 006e 334B     		ldr	r3, .L1086+12
 27514 0070 B3F90030 		ldrsh	r3, [r3]
 27515 0074 1846     		mov	r0, r3
 27516 0076 FFF7FEFF 		bl	__aeabi_i2f
 27517 007a 0346     		mov	r3, r0
 27518 007c 1846     		mov	r0, r3
 27519 007e FFF7FEFF 		bl	__aeabi_f2d
 27520 0082 4FF00002 		mov	r2, #0
 27521 0086 2B4B     		ldr	r3, .L1086+4
 27522 0088 FFF7FEFF 		bl	__aeabi_ddiv
 27523 008c 0346     		mov	r3, r0
 27524 008e 0C46     		mov	r4, r1
 27525 0090 1846     		mov	r0, r3
 27526 0092 2146     		mov	r1, r4
 27527 0094 4FF00002 		mov	r2, #0
 27528 0098 274B     		ldr	r3, .L1086+8
 27529 009a FFF7FEFF 		bl	__aeabi_dmul
 27530 009e 0346     		mov	r3, r0
 27531 00a0 0C46     		mov	r4, r1
 27532 00a2 1846     		mov	r0, r3
 27533 00a4 2146     		mov	r1, r4
 27534 00a6 FFF7FEFF 		bl	__aeabi_d2iz
 27535 00aa 0346     		mov	r3, r0
 27536 00ac 1AB2     		sxth	r2, r3
 27537 00ae 234B     		ldr	r3, .L1086+12
 27538 00b0 1A80     		strh	r2, [r3]	@ movhi
4245:..\src/command_processing.c ****     if (PWM_IMU_2 > MAX_INPUT_PWM) PWM_IMU_2 = MAX_INPUT_PWM;
 27539              		.loc 1 4245 0
 27540 00b2 224B     		ldr	r3, .L1086+12
 27541 00b4 B3F90030 		ldrsh	r3, [r3]
 27542 00b8 642B     		cmp	r3, #100
 27543 00ba 02DD     		ble	.L1081
 27544              		.loc 1 4245 0 is_stmt 0 discriminator 1
 27545 00bc 1F4B     		ldr	r3, .L1086+12
 27546 00be 6422     		movs	r2, #100
 27547 00c0 1A80     		strh	r2, [r3]	@ movhi
 27548              	.L1081:
4246:..\src/command_processing.c ****     if (PWM_IMU_2 < MIN_INPUT_PWM) PWM_IMU_2 = 0;
 27549              		.loc 1 4246 0 is_stmt 1
 27550 00c2 1E4B     		ldr	r3, .L1086+12
 27551 00c4 B3F90030 		ldrsh	r3, [r3]
 27552 00c8 092B     		cmp	r3, #9
 27553 00ca 02DC     		bgt	.L1082
 27554              		.loc 1 4246 0 is_stmt 0 discriminator 1
 27555 00cc 1B4B     		ldr	r3, .L1086+12
 27556 00ce 0022     		movs	r2, #0
 27557 00d0 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 603


 27558              	.L1082:
4247:..\src/command_processing.c ****     
4248:..\src/command_processing.c ****     g_ref_vibrotactile[0].pwm = PWM_IMU_1;
 27559              		.loc 1 4248 0 is_stmt 1
 27560 00d2 174B     		ldr	r3, .L1086
 27561 00d4 B3F90020 		ldrsh	r2, [r3]
 27562 00d8 194B     		ldr	r3, .L1086+16
 27563 00da 1A80     		strh	r2, [r3]	@ movhi
4249:..\src/command_processing.c ****     g_ref_vibrotactile[1].pwm = PWM_IMU_2;
 27564              		.loc 1 4249 0
 27565 00dc 174B     		ldr	r3, .L1086+12
 27566 00de B3F90020 		ldrsh	r2, [r3]
 27567 00e2 174B     		ldr	r3, .L1086+16
 27568 00e4 5A80     		strh	r2, [r3, #2]	@ movhi
4250:..\src/command_processing.c ****     
4251:..\src/command_processing.c ****     g_ref_vibrotactile[0].pwm = PWM_IMU_1;
 27569              		.loc 1 4251 0
 27570 00e6 124B     		ldr	r3, .L1086
 27571 00e8 B3F90020 		ldrsh	r2, [r3]
 27572 00ec 144B     		ldr	r3, .L1086+16
 27573 00ee 1A80     		strh	r2, [r3]	@ movhi
4252:..\src/command_processing.c ****     g_ref_vibrotactile[1].pwm = PWM_IMU_2;
 27574              		.loc 1 4252 0
 27575 00f0 124B     		ldr	r3, .L1086+12
 27576 00f2 B3F90020 		ldrsh	r2, [r3]
 27577 00f6 124B     		ldr	r3, .L1086+16
 27578 00f8 5A80     		strh	r2, [r3, #2]	@ movhi
4253:..\src/command_processing.c **** 
4254:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_EXTERNAL_IMU; i++){       
 27579              		.loc 1 4254 0
 27580 00fa 0023     		movs	r3, #0
 27581 00fc FB71     		strb	r3, [r7, #7]
 27582 00fe 0FE0     		b	.L1083
 27583              	.L1085:
4255:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 27584              		.loc 1 4255 0
 27585 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 27586 0102 1846     		mov	r0, r3
 27587 0104 FFF7FEFF 		bl	vibrotactile_control_generic
4256:..\src/command_processing.c ****         
4257:..\src/command_processing.c ****         if (interrupt_flag){
 27588              		.loc 1 4257 0
 27589 0108 0E4B     		ldr	r3, .L1086+20
 27590 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27591 010c 002B     		cmp	r3, #0
 27592 010e 04D0     		beq	.L1084
4258:..\src/command_processing.c ****             interrupt_flag = FALSE;
 27593              		.loc 1 4258 0
 27594 0110 0C4B     		ldr	r3, .L1086+20
 27595 0112 0022     		movs	r2, #0
 27596 0114 1A70     		strb	r2, [r3]
4259:..\src/command_processing.c ****             interrupt_manager();
 27597              		.loc 1 4259 0
 27598 0116 FFF7FEFF 		bl	interrupt_manager
 27599              	.L1084:
4254:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 27600              		.loc 1 4254 0 discriminator 2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 604


 27601 011a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 27602 011c 0133     		adds	r3, r3, #1
 27603 011e FB71     		strb	r3, [r7, #7]
 27604              	.L1083:
4254:..\src/command_processing.c ****         vibrotactile_control_generic(i); // Control the PWM_VT blocks and drive the vibrotactile de
 27605              		.loc 1 4254 0 is_stmt 0 discriminator 1
 27606 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 27607 0122 012B     		cmp	r3, #1
 27608 0124 ECD9     		bls	.L1085
4260:..\src/command_processing.c ****         }
4261:..\src/command_processing.c ****     } 
4262:..\src/command_processing.c **** }
 27609              		.loc 1 4262 0 is_stmt 1
 27610 0126 00BF     		nop
 27611 0128 0C37     		adds	r7, r7, #12
 27612              		.cfi_def_cfa_offset 12
 27613 012a BD46     		mov	sp, r7
 27614              		.cfi_def_cfa_register 13
 27615              		@ sp needed
 27616 012c 90BD     		pop	{r4, r7, pc}
 27617              	.L1087:
 27618 012e 00BF     		.align	2
 27619              	.L1086:
 27620 0130 00000000 		.word	PWM_IMU_1
 27621 0134 00004940 		.word	1078525952
 27622 0138 00003E40 		.word	1077805056
 27623 013c 00000000 		.word	PWM_IMU_2
 27624 0140 00000000 		.word	g_ref_vibrotactile
 27625 0144 00000000 		.word	interrupt_flag
 27626              		.cfi_endproc
 27627              	.LFE119:
 27628              		.size	vibrotactile_control, .-vibrotactile_control
 27629              		.global	__aeabi_dsub
 27630              		.global	__aeabi_fcmpgt
 27631              		.section	.text.air_chambers_control,"ax",%progbits
 27632              		.align	2
 27633              		.global	air_chambers_control
 27634              		.thumb
 27635              		.thumb_func
 27636              		.type	air_chambers_control, %function
 27637              	air_chambers_control:
 27638              	.LFB120:
4263:..\src/command_processing.c **** 
4264:..\src/command_processing.c **** 
4265:..\src/command_processing.c **** //==============================================================================
4266:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4267:..\src/command_processing.c **** //==============================================================================
4268:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4269:..\src/command_processing.c **** 
4270:..\src/command_processing.c **** 
4271:..\src/command_processing.c **** void air_chambers_control() {
 27639              		.loc 1 4271 0
 27640              		.cfi_startproc
 27641              		@ args = 0, pretend = 0, frame = 24
 27642              		@ frame_needed = 1, uses_anonymous_args = 0
 27643 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 27644              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 605


 27645              		.cfi_offset 4, -24
 27646              		.cfi_offset 5, -20
 27647              		.cfi_offset 7, -16
 27648              		.cfi_offset 8, -12
 27649              		.cfi_offset 9, -8
 27650              		.cfi_offset 14, -4
 27651 0004 86B0     		sub	sp, sp, #24
 27652              		.cfi_def_cfa_offset 48
 27653 0006 00AF     		add	r7, sp, #0
 27654              		.cfi_def_cfa_register 7
4272:..\src/command_processing.c **** 
4273:..\src/command_processing.c ****     int16 curr_diff;
4274:..\src/command_processing.c ****     int32 pressure_reference;
4275:..\src/command_processing.c ****     int32 err_pressure, pressure_value;
4276:..\src/command_processing.c ****     int32 valve_command;
4277:..\src/command_processing.c ****     int16 x_value;
4278:..\src/command_processing.c **** 
4279:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4280:..\src/command_processing.c ****     
4281:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
 27655              		.loc 1 4281 0
 27656 0008 FFF7FEFF 		bl	commReadResCurrFromSH
 27657 000c 0346     		mov	r3, r0
 27658 000e BB81     		strh	r3, [r7, #12]	@ movhi
4282:..\src/command_processing.c **** 
4283:..\src/command_processing.c ****     // Compute pressure reference
4284:..\src/command_processing.c **** 
4285:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
 27659              		.loc 1 4285 0
 27660 0010 B7F90C30 		ldrsh	r3, [r7, #12]
 27661 0014 1846     		mov	r0, r3
 27662 0016 FFF7FEFF 		bl	__aeabi_i2d
 27663 001a 4FF00002 		mov	r2, #0
 27664 001e 5C4B     		ldr	r3, .L1098
 27665 0020 FFF7FEFF 		bl	__aeabi_dsub
 27666 0024 0346     		mov	r3, r0
 27667 0026 0C46     		mov	r4, r1
 27668 0028 1846     		mov	r0, r3
 27669 002a 2146     		mov	r1, r4
 27670 002c FFF7FEFF 		bl	__aeabi_d2iz
 27671 0030 0346     		mov	r3, r0
 27672 0032 FB81     		strh	r3, [r7, #14]	@ movhi
4286:..\src/command_processing.c ****     if (x_value < 0)
 27673              		.loc 1 4286 0
 27674 0034 B7F90E30 		ldrsh	r3, [r7, #14]
 27675 0038 002B     		cmp	r3, #0
 27676 003a 01DA     		bge	.L1089
4287:..\src/command_processing.c ****         x_value = 0;
 27677              		.loc 1 4287 0
 27678 003c 0023     		movs	r3, #0
 27679 003e FB81     		strh	r3, [r7, #14]	@ movhi
 27680              	.L1089:
4288:..\src/command_processing.c ****     
4289:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
 27681              		.loc 1 4289 0
 27682 0040 B7F90E30 		ldrsh	r3, [r7, #14]
 27683 0044 1846     		mov	r0, r3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 606


 27684 0046 FFF7FEFF 		bl	__aeabi_i2d
 27685 004a 4FF00002 		mov	r2, #0
 27686 004e 514B     		ldr	r3, .L1098+4
 27687 0050 FFF7FEFF 		bl	__aeabi_dmul
 27688 0054 0346     		mov	r3, r0
 27689 0056 0C46     		mov	r4, r1
 27690 0058 2546     		mov	r5, r4
 27691 005a 1C46     		mov	r4, r3
 27692 005c B7F90E30 		ldrsh	r3, [r7, #14]
 27693 0060 1846     		mov	r0, r3
 27694 0062 FFF7FEFF 		bl	__aeabi_i2d
 27695 0066 0246     		mov	r2, r0
 27696 0068 0B46     		mov	r3, r1
 27697 006a 2046     		mov	r0, r4
 27698 006c 2946     		mov	r1, r5
 27699 006e FFF7FEFF 		bl	__aeabi_dmul
 27700 0072 0346     		mov	r3, r0
 27701 0074 0C46     		mov	r4, r1
 27702 0076 2546     		mov	r5, r4
 27703 0078 1C46     		mov	r4, r3
 27704 007a 474B     		ldr	r3, .L1098+8
 27705 007c D3F8D032 		ldr	r3, [r3, #720]
 27706 0080 1846     		mov	r0, r3
 27707 0082 FFF7FEFF 		bl	__aeabi_i2d
 27708 0086 4FF00002 		mov	r2, #0
 27709 008a 444B     		ldr	r3, .L1098+12
 27710 008c FFF7FEFF 		bl	__aeabi_dmul
 27711 0090 0246     		mov	r2, r0
 27712 0092 0B46     		mov	r3, r1
 27713 0094 9046     		mov	r8, r2
 27714 0096 9946     		mov	r9, r3
 27715 0098 B7F90E30 		ldrsh	r3, [r7, #14]
 27716 009c 1846     		mov	r0, r3
 27717 009e FFF7FEFF 		bl	__aeabi_i2d
 27718 00a2 0246     		mov	r2, r0
 27719 00a4 0B46     		mov	r3, r1
 27720 00a6 4046     		mov	r0, r8
 27721 00a8 4946     		mov	r1, r9
 27722 00aa FFF7FEFF 		bl	__aeabi_dmul
 27723 00ae 0246     		mov	r2, r0
 27724 00b0 0B46     		mov	r3, r1
 27725 00b2 2046     		mov	r0, r4
 27726 00b4 2946     		mov	r1, r5
 27727 00b6 FFF7FEFF 		bl	__aeabi_dadd
 27728 00ba 0346     		mov	r3, r0
 27729 00bc 0C46     		mov	r4, r1
 27730 00be 1846     		mov	r0, r3
 27731 00c0 2146     		mov	r1, r4
 27732 00c2 FFF7FEFF 		bl	__aeabi_d2iz
 27733 00c6 0146     		mov	r1, r0
 27734 00c8 334B     		ldr	r3, .L1098+8
 27735 00ca D3F8D032 		ldr	r3, [r3, #720]
 27736 00ce 324A     		ldr	r2, .L1098+8
 27737 00d0 D2F8D022 		ldr	r2, [r2, #720]
 27738 00d4 02FB03F3 		mul	r3, r2, r3
 27739 00d8 91FBF3F3 		sdiv	r3, r1, r3
 27740 00dc 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 607


4290:..\src/command_processing.c ****     if (pressure_reference < 0)
 27741              		.loc 1 4290 0
 27742 00de 7B69     		ldr	r3, [r7, #20]
 27743 00e0 002B     		cmp	r3, #0
 27744 00e2 01DA     		bge	.L1090
4291:..\src/command_processing.c ****         pressure_reference = 0;
 27745              		.loc 1 4291 0
 27746 00e4 0023     		movs	r3, #0
 27747 00e6 7B61     		str	r3, [r7, #20]
 27748              	.L1090:
4292:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
 27749              		.loc 1 4292 0
 27750 00e8 7869     		ldr	r0, [r7, #20]
 27751 00ea FFF7FEFF 		bl	__aeabi_i2f
 27752 00ee 0246     		mov	r2, r0
 27753 00f0 294B     		ldr	r3, .L1098+8
 27754 00f2 D3F8D432 		ldr	r3, [r3, #724]	@ float
 27755 00f6 1946     		mov	r1, r3
 27756 00f8 1046     		mov	r0, r2
 27757 00fa FFF7FEFF 		bl	__aeabi_fcmpgt
 27758 00fe 0346     		mov	r3, r0
 27759 0100 002B     		cmp	r3, #0
 27760 0102 07D0     		beq	.L1091
4293:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
 27761              		.loc 1 4293 0
 27762 0104 244B     		ldr	r3, .L1098+8
 27763 0106 D3F8D432 		ldr	r3, [r3, #724]	@ float
 27764 010a 1846     		mov	r0, r3
 27765 010c FFF7FEFF 		bl	__aeabi_f2iz
 27766 0110 0346     		mov	r3, r0
 27767 0112 7B61     		str	r3, [r7, #20]
 27768              	.L1091:
4294:..\src/command_processing.c ****     
4295:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
 27769              		.loc 1 4295 0
 27770 0114 224B     		ldr	r3, .L1098+16
 27771 0116 1B68     		ldr	r3, [r3]	@ float
 27772 0118 1846     		mov	r0, r3
 27773 011a FFF7FEFF 		bl	__aeabi_f2iz
 27774 011e 0346     		mov	r3, r0
 27775 0120 BB60     		str	r3, [r7, #8]
4296:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
 27776              		.loc 1 4296 0
 27777 0122 7A69     		ldr	r2, [r7, #20]
 27778 0124 BB68     		ldr	r3, [r7, #8]
 27779 0126 D31A     		subs	r3, r2, r3
 27780 0128 7B60     		str	r3, [r7, #4]
4297:..\src/command_processing.c **** 
4298:..\src/command_processing.c ****     if (x_value <= 0){
 27781              		.loc 1 4298 0
 27782 012a B7F90E30 		ldrsh	r3, [r7, #14]
 27783 012e 002B     		cmp	r3, #0
 27784 0130 02DC     		bgt	.L1093
4299:..\src/command_processing.c ****         //i.e the hand is opening
4300:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
 27785              		.loc 1 4300 0
 27786 0132 0023     		movs	r3, #0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 608


 27787 0134 3B61     		str	r3, [r7, #16]
 27788 0136 01E0     		b	.L1094
 27789              	.L1093:
4301:..\src/command_processing.c ****     }
4302:..\src/command_processing.c ****     else {
4303:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4304:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4305:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4306:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
 27790              		.loc 1 4306 0
 27791 0138 0123     		movs	r3, #1
 27792 013a 3B61     		str	r3, [r7, #16]
 27793              	.L1094:
4307:..\src/command_processing.c ****     }
4308:..\src/command_processing.c ****     
4309:..\src/command_processing.c ****     // Pump control*/
4310:..\src/command_processing.c ****    
4311:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
 27794              		.loc 1 4311 0
 27795 013c 164B     		ldr	r3, .L1098+8
 27796 013e D3F8D842 		ldr	r4, [r3, #728]	@ float
 27797 0142 7868     		ldr	r0, [r7, #4]
 27798 0144 FFF7FEFF 		bl	__aeabi_i2f
 27799 0148 0346     		mov	r3, r0
 27800 014a 1946     		mov	r1, r3
 27801 014c 2046     		mov	r0, r4
 27802 014e FFF7FEFF 		bl	__aeabi_fmul
 27803 0152 0346     		mov	r3, r0
 27804 0154 1846     		mov	r0, r3
 27805 0156 FFF7FEFF 		bl	__aeabi_f2iz
 27806 015a 0246     		mov	r2, r0
 27807 015c 114B     		ldr	r3, .L1098+20
 27808 015e 9A60     		str	r2, [r3, #8]
4312:..\src/command_processing.c **** 
4313:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4314:..\src/command_processing.c ****     
4315:..\src/command_processing.c ****     // Limit output voltage
4316:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
 27809              		.loc 1 4316 0
 27810 0160 104B     		ldr	r3, .L1098+20
 27811 0162 9B68     		ldr	r3, [r3, #8]
 27812 0164 502B     		cmp	r3, #80
 27813 0166 02DD     		ble	.L1095
4317:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
 27814              		.loc 1 4317 0
 27815 0168 0E4B     		ldr	r3, .L1098+20
 27816 016a 5022     		movs	r2, #80
 27817 016c 9A60     		str	r2, [r3, #8]
 27818              	.L1095:
4318:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
 27819              		.loc 1 4318 0
 27820 016e 0D4B     		ldr	r3, .L1098+20
 27821 0170 9B68     		ldr	r3, [r3, #8]
 27822 0172 132B     		cmp	r3, #19
 27823 0174 02DC     		bgt	.L1096
4319:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
 27824              		.loc 1 4319 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 609


 27825 0176 0B4B     		ldr	r3, .L1098+20
 27826 0178 0022     		movs	r2, #0
 27827 017a 9A60     		str	r2, [r3, #8]
 27828              	.L1096:
4320:..\src/command_processing.c ****         
4321:..\src/command_processing.c ****     VALVE_Write(valve_command);
 27829              		.loc 1 4321 0
 27830 017c 3B69     		ldr	r3, [r7, #16]
 27831 017e DBB2     		uxtb	r3, r3
 27832 0180 1846     		mov	r0, r3
 27833 0182 FFF7FEFF 		bl	VALVE_Write
4322:..\src/command_processing.c ****     
4323:..\src/command_processing.c ****     
4324:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4325:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4326:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4327:..\src/command_processing.c ****     // motor_control_generic(slave_motor_idx);
4328:..\src/command_processing.c **** 
4329:..\src/command_processing.c **** }
 27834              		.loc 1 4329 0
 27835 0186 00BF     		nop
 27836 0188 1837     		adds	r7, r7, #24
 27837              		.cfi_def_cfa_offset 24
 27838 018a BD46     		mov	sp, r7
 27839              		.cfi_def_cfa_register 13
 27840              		@ sp needed
 27841 018c BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 27842              	.L1099:
 27843              		.align	2
 27844              	.L1098:
 27845 0190 00004940 		.word	1078525952
 27846 0194 00003EC0 		.word	-1069678592
 27847 0198 00000000 		.word	c_mem
 27848 019c 00804B40 		.word	1078689792
 27849 01a0 00000000 		.word	g_fb_meas
 27850 01a4 00000000 		.word	g_refNew
 27851              		.cfi_endproc
 27852              	.LFE120:
 27853              		.size	air_chambers_control, .-air_chambers_control
 27854              		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27855              		.align	2
 27856              		.global	emg_activation_velocity_fsm
 27857              		.thumb
 27858              		.thumb_func
 27859              		.type	emg_activation_velocity_fsm, %function
 27860              	emg_activation_velocity_fsm:
 27861              	.LFB121:
4330:..\src/command_processing.c **** 
4331:..\src/command_processing.c **** 
4332:..\src/command_processing.c **** //==============================================================================
4333:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4334:..\src/command_processing.c **** //==============================================================================
4335:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4336:..\src/command_processing.c **** 
4337:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27862              		.loc 1 4337 0
 27863              		.cfi_startproc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 610


 27864              		@ args = 0, pretend = 0, frame = 16
 27865              		@ frame_needed = 1, uses_anonymous_args = 0
 27866              		@ link register save eliminated.
 27867 0000 80B4     		push	{r7}
 27868              		.cfi_def_cfa_offset 4
 27869              		.cfi_offset 7, -4
 27870 0002 85B0     		sub	sp, sp, #20
 27871              		.cfi_def_cfa_offset 24
 27872 0004 00AF     		add	r7, sp, #0
 27873              		.cfi_def_cfa_register 7
4338:..\src/command_processing.c ****       
4339:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4340:..\src/command_processing.c ****     static int32 cnt = 0;
4341:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4342:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4343:..\src/command_processing.c ****     
4344:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27874              		.loc 1 4344 0
 27875 0006 534B     		ldr	r3, .L1129
 27876 0008 1B68     		ldr	r3, [r3]
 27877 000a 534A     		ldr	r2, .L1129+4
 27878 000c B2F8F021 		ldrh	r2, [r2, #496]
 27879 0010 9B1A     		subs	r3, r3, r2
 27880 0012 FB60     		str	r3, [r7, #12]
4345:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27881              		.loc 1 4345 0
 27882 0014 4F4B     		ldr	r3, .L1129
 27883 0016 5B68     		ldr	r3, [r3, #4]
 27884 0018 4F4A     		ldr	r2, .L1129+4
 27885 001a B2F8F221 		ldrh	r2, [r2, #498]
 27886 001e 9B1A     		subs	r3, r3, r2
 27887 0020 BB60     		str	r3, [r7, #8]
4346:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27888              		.loc 1 4346 0
 27889 0022 4C4B     		ldr	r3, .L1129
 27890 0024 1B68     		ldr	r3, [r3]
 27891 0026 4C4A     		ldr	r2, .L1129+4
 27892 0028 B2F8E222 		ldrh	r2, [r2, #738]
 27893 002c 9B1A     		subs	r3, r3, r2
 27894 002e 7B60     		str	r3, [r7, #4]
4347:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27895              		.loc 1 4347 0
 27896 0030 484B     		ldr	r3, .L1129
 27897 0032 5B68     		ldr	r3, [r3, #4]
 27898 0034 484A     		ldr	r2, .L1129+4
 27899 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27900 003a 9B1A     		subs	r3, r3, r2
 27901 003c 3B60     		str	r3, [r7]
4348:..\src/command_processing.c ****     
4349:..\src/command_processing.c **** 
4350:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4351:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4352:..\src/command_processing.c ****     switch (fsm_state){
 27902              		.loc 1 4352 0
 27903 003e 474B     		ldr	r3, .L1129+8
 27904 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27905 0042 032B     		cmp	r3, #3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 611


 27906 0044 7FD8     		bhi	.L1101
 27907 0046 01A2     		adr	r2, .L1103
 27908 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27909              		.p2align 2
 27910              	.L1103:
 27911 004c 5D000000 		.word	.L1102+1
 27912 0050 71000000 		.word	.L1104+1
 27913 0054 11010000 		.word	.L1105+1
 27914 0058 25010000 		.word	.L1106+1
 27915              		.p2align 1
 27916              	.L1102:
4353:..\src/command_processing.c ****         case RELAX_STATE:
4354:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27917              		.loc 1 4354 0
 27918 005c FB68     		ldr	r3, [r7, #12]
 27919 005e 002B     		cmp	r3, #0
 27920 0060 02DC     		bgt	.L1107
 27921              		.loc 1 4354 0 is_stmt 0 discriminator 1
 27922 0062 BB68     		ldr	r3, [r7, #8]
 27923 0064 002B     		cmp	r3, #0
 27924 0066 67DD     		ble	.L1125
 27925              	.L1107:
4355:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27926              		.loc 1 4355 0 is_stmt 1
 27927 0068 3C4B     		ldr	r3, .L1129+8
 27928 006a 0122     		movs	r2, #1
 27929 006c 1A70     		strb	r2, [r3]
4356:..\src/command_processing.c ****             }
4357:..\src/command_processing.c ****             
4358:..\src/command_processing.c ****             break;
 27930              		.loc 1 4358 0
 27931 006e 63E0     		b	.L1125
 27932              	.L1104:
4359:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4360:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27933              		.loc 1 4360 0
 27934 0070 FB68     		ldr	r3, [r7, #12]
 27935 0072 002B     		cmp	r3, #0
 27936 0074 02DC     		bgt	.L1109
 27937              		.loc 1 4360 0 is_stmt 0 discriminator 1
 27938 0076 BB68     		ldr	r3, [r7, #8]
 27939 0078 002B     		cmp	r3, #0
 27940 007a 05DD     		ble	.L1110
 27941              	.L1109:
4361:..\src/command_processing.c ****                 cnt = cnt +1;
 27942              		.loc 1 4361 0 is_stmt 1
 27943 007c 384B     		ldr	r3, .L1129+12
 27944 007e 1B68     		ldr	r3, [r3]
 27945 0080 0133     		adds	r3, r3, #1
 27946 0082 374A     		ldr	r2, .L1129+12
 27947 0084 1360     		str	r3, [r2]
 27948 0086 02E0     		b	.L1111
 27949              	.L1110:
4362:..\src/command_processing.c ****             }
4363:..\src/command_processing.c ****             else {
4364:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27950              		.loc 1 4364 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 612


 27951 0088 344B     		ldr	r3, .L1129+8
 27952 008a 0022     		movs	r2, #0
 27953 008c 1A70     		strb	r2, [r3]
 27954              	.L1111:
4365:..\src/command_processing.c ****             }
4366:..\src/command_processing.c ****             
4367:..\src/command_processing.c ****             if (cnt > 100){
 27955              		.loc 1 4367 0
 27956 008e 344B     		ldr	r3, .L1129+12
 27957 0090 1B68     		ldr	r3, [r3]
 27958 0092 642B     		cmp	r3, #100
 27959 0094 52DD     		ble	.L1126
4368:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27960              		.loc 1 4368 0
 27961 0096 FB68     		ldr	r3, [r7, #12]
 27962 0098 002B     		cmp	r3, #0
 27963 009a 02DD     		ble	.L1113
 27964              		.loc 1 4368 0 is_stmt 0 discriminator 1
 27965 009c 7B68     		ldr	r3, [r7, #4]
 27966 009e 002B     		cmp	r3, #0
 27967 00a0 05DC     		bgt	.L1114
 27968              	.L1113:
 27969              		.loc 1 4368 0 discriminator 3
 27970 00a2 BB68     		ldr	r3, [r7, #8]
 27971 00a4 002B     		cmp	r3, #0
 27972 00a6 0EDD     		ble	.L1115
 27973              		.loc 1 4368 0 discriminator 4
 27974 00a8 3B68     		ldr	r3, [r7]
 27975 00aa 002B     		cmp	r3, #0
 27976 00ac 0BDD     		ble	.L1115
 27977              	.L1114:
4369:..\src/command_processing.c ****                     // Fast activation
4370:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27978              		.loc 1 4370 0 is_stmt 1
 27979 00ae 2A4B     		ldr	r3, .L1129+4
 27980 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27981 00b4 002B     		cmp	r3, #0
 27982 00b6 03D1     		bne	.L1116
4371:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27983              		.loc 1 4371 0
 27984 00b8 284B     		ldr	r3, .L1129+8
 27985 00ba 0222     		movs	r2, #2
 27986 00bc 1A70     		strb	r2, [r3]
 27987 00be 02E0     		b	.L1115
 27988              	.L1116:
4372:..\src/command_processing.c ****                     }
4373:..\src/command_processing.c ****                     else{
4374:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27989              		.loc 1 4374 0
 27990 00c0 264B     		ldr	r3, .L1129+8
 27991 00c2 0322     		movs	r2, #3
 27992 00c4 1A70     		strb	r2, [r3]
 27993              	.L1115:
4375:..\src/command_processing.c ****                     }
4376:..\src/command_processing.c ****                 }
4377:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27994              		.loc 1 4377 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 613


 27995 00c6 FB68     		ldr	r3, [r7, #12]
 27996 00c8 002B     		cmp	r3, #0
 27997 00ca 02DD     		ble	.L1117
 27998              		.loc 1 4377 0 is_stmt 0 discriminator 1
 27999 00cc 7B68     		ldr	r3, [r7, #4]
 28000 00ce 002B     		cmp	r3, #0
 28001 00d0 05DB     		blt	.L1118
 28002              	.L1117:
 28003              		.loc 1 4377 0 discriminator 3
 28004 00d2 BB68     		ldr	r3, [r7, #8]
 28005 00d4 002B     		cmp	r3, #0
 28006 00d6 0EDD     		ble	.L1119
 28007              		.loc 1 4377 0 discriminator 4
 28008 00d8 3B68     		ldr	r3, [r7]
 28009 00da 002B     		cmp	r3, #0
 28010 00dc 0BDA     		bge	.L1119
 28011              	.L1118:
4378:..\src/command_processing.c ****                     // Slow activation
4379:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 28012              		.loc 1 4379 0 is_stmt 1
 28013 00de 1E4B     		ldr	r3, .L1129+4
 28014 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 28015 00e4 002B     		cmp	r3, #0
 28016 00e6 03D1     		bne	.L1120
4380:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 28017              		.loc 1 4380 0
 28018 00e8 1C4B     		ldr	r3, .L1129+8
 28019 00ea 0322     		movs	r2, #3
 28020 00ec 1A70     		strb	r2, [r3]
 28021 00ee 02E0     		b	.L1119
 28022              	.L1120:
4381:..\src/command_processing.c ****                     }
4382:..\src/command_processing.c ****                     else{
4383:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 28023              		.loc 1 4383 0
 28024 00f0 1A4B     		ldr	r3, .L1129+8
 28025 00f2 0222     		movs	r2, #2
 28026 00f4 1A70     		strb	r2, [r3]
 28027              	.L1119:
4384:..\src/command_processing.c ****                     }
4385:..\src/command_processing.c ****                 }
4386:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 28028              		.loc 1 4386 0
 28029 00f6 FB68     		ldr	r3, [r7, #12]
 28030 00f8 002B     		cmp	r3, #0
 28031 00fa 05DA     		bge	.L1121
 28032              		.loc 1 4386 0 is_stmt 0 discriminator 1
 28033 00fc BB68     		ldr	r3, [r7, #8]
 28034 00fe 002B     		cmp	r3, #0
 28035 0100 02DA     		bge	.L1121
4387:..\src/command_processing.c ****                     // Involuntary activation
4388:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 28036              		.loc 1 4388 0 is_stmt 1
 28037 0102 164B     		ldr	r3, .L1129+8
 28038 0104 0022     		movs	r2, #0
 28039 0106 1A70     		strb	r2, [r3]
 28040              	.L1121:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 614


4389:..\src/command_processing.c ****                 }
4390:..\src/command_processing.c ****                 cnt = 0;
 28041              		.loc 1 4390 0
 28042 0108 154B     		ldr	r3, .L1129+12
 28043 010a 0022     		movs	r2, #0
 28044 010c 1A60     		str	r2, [r3]
4391:..\src/command_processing.c ****             }
4392:..\src/command_processing.c ****     
4393:..\src/command_processing.c ****             break;
 28045              		.loc 1 4393 0
 28046 010e 15E0     		b	.L1126
 28047              	.L1105:
4394:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4395:..\src/command_processing.c ****             
4396:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 28048              		.loc 1 4396 0
 28049 0110 FB68     		ldr	r3, [r7, #12]
 28050 0112 002B     		cmp	r3, #0
 28051 0114 14DA     		bge	.L1127
 28052              		.loc 1 4396 0 is_stmt 0 discriminator 1
 28053 0116 BB68     		ldr	r3, [r7, #8]
 28054 0118 002B     		cmp	r3, #0
 28055 011a 11DA     		bge	.L1127
4397:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 28056              		.loc 1 4397 0 is_stmt 1
 28057 011c 0F4B     		ldr	r3, .L1129+8
 28058 011e 0022     		movs	r2, #0
 28059 0120 1A70     		strb	r2, [r3]
4398:..\src/command_processing.c ****             }
4399:..\src/command_processing.c ****         
4400:..\src/command_processing.c ****             break;
 28060              		.loc 1 4400 0
 28061 0122 0DE0     		b	.L1127
 28062              	.L1106:
4401:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4402:..\src/command_processing.c ****           
4403:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 28063              		.loc 1 4403 0
 28064 0124 FB68     		ldr	r3, [r7, #12]
 28065 0126 002B     		cmp	r3, #0
 28066 0128 0CDA     		bge	.L1128
 28067              		.loc 1 4403 0 is_stmt 0 discriminator 1
 28068 012a BB68     		ldr	r3, [r7, #8]
 28069 012c 002B     		cmp	r3, #0
 28070 012e 09DA     		bge	.L1128
4404:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 28071              		.loc 1 4404 0 is_stmt 1
 28072 0130 0A4B     		ldr	r3, .L1129+8
 28073 0132 0022     		movs	r2, #0
 28074 0134 1A70     		strb	r2, [r3]
4405:..\src/command_processing.c ****             }
4406:..\src/command_processing.c ****             
4407:..\src/command_processing.c ****             break;
 28075              		.loc 1 4407 0
 28076 0136 05E0     		b	.L1128
 28077              	.L1125:
4358:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 615


 28078              		.loc 1 4358 0
 28079 0138 00BF     		nop
 28080 013a 04E0     		b	.L1101
 28081              	.L1126:
4393:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 28082              		.loc 1 4393 0
 28083 013c 00BF     		nop
 28084 013e 02E0     		b	.L1101
 28085              	.L1127:
4400:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 28086              		.loc 1 4400 0
 28087 0140 00BF     		nop
 28088 0142 00E0     		b	.L1101
 28089              	.L1128:
 28090              		.loc 1 4407 0
 28091 0144 00BF     		nop
 28092              	.L1101:
4408:..\src/command_processing.c ****     }
4409:..\src/command_processing.c ****     
4410:..\src/command_processing.c ****     return fsm_state;
 28093              		.loc 1 4410 0
 28094 0146 054B     		ldr	r3, .L1129+8
 28095 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4411:..\src/command_processing.c **** 
4412:..\src/command_processing.c **** }
 28096              		.loc 1 4412 0
 28097 014a 1846     		mov	r0, r3
 28098 014c 1437     		adds	r7, r7, #20
 28099              		.cfi_def_cfa_offset 4
 28100 014e BD46     		mov	sp, r7
 28101              		.cfi_def_cfa_register 13
 28102              		@ sp needed
 28103 0150 80BC     		pop	{r7}
 28104              		.cfi_restore 7
 28105              		.cfi_def_cfa_offset 0
 28106 0152 7047     		bx	lr
 28107              	.L1130:
 28108              		.align	2
 28109              	.L1129:
 28110 0154 00000000 		.word	g_adc_meas
 28111 0158 00000000 		.word	c_mem
 28112 015c 0C000000 		.word	fsm_state.11345
 28113 0160 10000000 		.word	cnt.11346
 28114              		.cfi_endproc
 28115              	.LFE121:
 28116              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 28117              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 28118              		.align	2
 28119              		.global	otbk_act_wrist_control
 28120              		.thumb
 28121              		.thumb_func
 28122              		.type	otbk_act_wrist_control, %function
 28123              	otbk_act_wrist_control:
 28124              	.LFB122:
4413:..\src/command_processing.c **** 
4414:..\src/command_processing.c **** //==============================================================================
4415:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 616


4416:..\src/command_processing.c **** //==============================================================================
4417:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4418:..\src/command_processing.c **** 
4419:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 28125              		.loc 1 4419 0
 28126              		.cfi_startproc
 28127              		@ args = 0, pretend = 0, frame = 8
 28128              		@ frame_needed = 1, uses_anonymous_args = 0
 28129              		@ link register save eliminated.
 28130 0000 80B4     		push	{r7}
 28131              		.cfi_def_cfa_offset 4
 28132              		.cfi_offset 7, -4
 28133 0002 83B0     		sub	sp, sp, #12
 28134              		.cfi_def_cfa_offset 16
 28135 0004 00AF     		add	r7, sp, #0
 28136              		.cfi_def_cfa_register 7
 28137 0006 7860     		str	r0, [r7, #4]
4420:..\src/command_processing.c ****     
4421:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4422:..\src/command_processing.c ****     
4423:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4424:..\src/command_processing.c ****         
4425:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4426:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4427:..\src/command_processing.c ****     switch (fsm_state){
4428:..\src/command_processing.c ****         case RELAX_STATE:
4429:..\src/command_processing.c ****             
4430:..\src/command_processing.c ****             // Wrist stop
4431:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4432:..\src/command_processing.c ****             
4433:..\src/command_processing.c ****             // Softhand stop
4434:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4435:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4436:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4437:..\src/command_processing.c ****             
4438:..\src/command_processing.c ****             break;
4439:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4440:..\src/command_processing.c ****                 
4441:..\src/command_processing.c ****             break;
4442:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4443:..\src/command_processing.c ****             
4444:..\src/command_processing.c ****             // Wrist movement
4445:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4446:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4447:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4448:..\src/command_processing.c ****                 }
4449:..\src/command_processing.c ****                 else {
4450:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4451:..\src/command_processing.c ****                 }
4452:..\src/command_processing.c ****             }
4453:..\src/command_processing.c ****             else {
4454:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4455:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4456:..\src/command_processing.c ****                 }
4457:..\src/command_processing.c ****                 else {
4458:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4459:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 617


4460:..\src/command_processing.c ****             }
4461:..\src/command_processing.c ****             
4462:..\src/command_processing.c ****             // Softhand stop
4463:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4464:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4465:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4466:..\src/command_processing.c ****             
4467:..\src/command_processing.c ****             break;
4468:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4469:..\src/command_processing.c ****             
4470:..\src/command_processing.c ****             // Wrist stop
4471:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4472:..\src/command_processing.c ****             
4473:..\src/command_processing.c ****             // SoftHand movement
4474:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4475:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4476:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4477:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4478:..\src/command_processing.c ****             
4479:..\src/command_processing.c ****             break;
4480:..\src/command_processing.c ****     }
4481:..\src/command_processing.c ****         
4482:..\src/command_processing.c ****     // Limit output voltage
4483:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4484:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4485:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4486:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4487:..\src/command_processing.c ****     
4488:..\src/command_processing.c **** #endif
4489:..\src/command_processing.c **** }
 28138              		.loc 1 4489 0
 28139 0008 00BF     		nop
 28140 000a 0C37     		adds	r7, r7, #12
 28141              		.cfi_def_cfa_offset 4
 28142 000c BD46     		mov	sp, r7
 28143              		.cfi_def_cfa_register 13
 28144              		@ sp needed
 28145 000e 80BC     		pop	{r7}
 28146              		.cfi_restore 7
 28147              		.cfi_def_cfa_offset 0
 28148 0010 7047     		bx	lr
 28149              		.cfi_endproc
 28150              	.LFE122:
 28151              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 28152 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 28153              		.align	2
 28154              		.global	drive_slave
 28155              		.thumb
 28156              		.thumb_func
 28157              		.type	drive_slave, %function
 28158              	drive_slave:
 28159              	.LFB123:
4490:..\src/command_processing.c **** 
4491:..\src/command_processing.c **** //==============================================================================
4492:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4493:..\src/command_processing.c **** //==============================================================================
4494:..\src/command_processing.c ****  
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 618


4495:..\src/command_processing.c ****  
4496:..\src/command_processing.c **** void drive_slave(uint8 slave_motor_idx, uint8 slave_ID) {
 28160              		.loc 1 4496 0
 28161              		.cfi_startproc
 28162              		@ args = 0, pretend = 0, frame = 24
 28163              		@ frame_needed = 1, uses_anonymous_args = 0
 28164 0000 90B5     		push	{r4, r7, lr}
 28165              		.cfi_def_cfa_offset 12
 28166              		.cfi_offset 4, -12
 28167              		.cfi_offset 7, -8
 28168              		.cfi_offset 14, -4
 28169 0002 87B0     		sub	sp, sp, #28
 28170              		.cfi_def_cfa_offset 40
 28171 0004 00AF     		add	r7, sp, #0
 28172              		.cfi_def_cfa_register 7
 28173 0006 0346     		mov	r3, r0
 28174 0008 0A46     		mov	r2, r1
 28175 000a FB71     		strb	r3, [r7, #7]
 28176 000c 1346     		mov	r3, r2
 28177 000e BB71     		strb	r3, [r7, #6]
4497:..\src/command_processing.c **** 
4498:..\src/command_processing.c ****     uint8 packet_data[6];
4499:..\src/command_processing.c ****     uint8 packet_length;
4500:..\src/command_processing.c ****     int16 aux_int16;
4501:..\src/command_processing.c **** 
4502:..\src/command_processing.c ****        
4503:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4504:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
 28178              		.loc 1 4504 0
 28179 0010 8223     		movs	r3, #130
 28180 0012 3B74     		strb	r3, [r7, #16]
4505:..\src/command_processing.c ****     
4506:..\src/command_processing.c ****  //aux_int16 = (int16) motor_idx;
4507:..\src/command_processing.c ****    aux_int16 = (int16) (g_ref[slave_motor_idx].pos >> g_mem.enc[g_mem.motor[slave_motor_idx].encode
 28181              		.loc 1 4507 0
 28182 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 28183 0016 264A     		ldr	r2, .L1133
 28184 0018 1B01     		lsls	r3, r3, #4
 28185 001a 1344     		add	r3, r3, r2
 28186 001c 1968     		ldr	r1, [r3]
 28187 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 28188 0020 2448     		ldr	r0, .L1133+4
 28189 0022 1346     		mov	r3, r2
 28190 0024 DB00     		lsls	r3, r3, #3
 28191 0026 9B1A     		subs	r3, r3, r2
 28192 0028 1B01     		lsls	r3, r3, #4
 28193 002a 0344     		add	r3, r3, r0
 28194 002c 03F58873 		add	r3, r3, #272
 28195 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28196 0032 1C46     		mov	r4, r3
 28197 0034 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 28198 0036 1F48     		ldr	r0, .L1133+4
 28199 0038 2346     		mov	r3, r4
 28200 003a 5B00     		lsls	r3, r3, #1
 28201 003c 2344     		add	r3, r3, r4
 28202 003e 1B01     		lsls	r3, r3, #4
 28203 0040 0344     		add	r3, r3, r0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 619


 28204 0042 1344     		add	r3, r3, r2
 28205 0044 03F29513 		addw	r3, r3, #405
 28206 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28207 004a 41FA03F3 		asr	r3, r1, r3
 28208 004e 1BB2     		sxth	r3, r3
 28209 0050 FB81     		strh	r3, [r7, #14]	@ movhi
4508:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 28210              		.loc 1 4508 0
 28211 0052 07F10E03 		add	r3, r7, #14
 28212 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28213 0058 BB74     		strb	r3, [r7, #18]
4509:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 28214              		.loc 1 4509 0
 28215 005a 07F10E03 		add	r3, r7, #14
 28216 005e 0133     		adds	r3, r3, #1
 28217 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 28218 0062 7B74     		strb	r3, [r7, #17]
4510:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
 28219              		.loc 1 4510 0
 28220 0064 07F11003 		add	r3, r7, #16
 28221 0068 0333     		adds	r3, r3, #3
 28222 006a 0022     		movs	r2, #0
 28223 006c 1A80     		strh	r2, [r3]	@ movhi
4511:..\src/command_processing.c ****   //  packet_data[3] = (char*)0;
4512:..\src/command_processing.c ****    // packet_data[4] = (char*)0;
4513:..\src/command_processing.c ****     packet_length = 6;
 28224              		.loc 1 4513 0
 28225 006e 0623     		movs	r3, #6
 28226 0070 FB75     		strb	r3, [r7, #23]
4514:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 28227              		.loc 1 4514 0
 28228 0072 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 28229 0074 5C1E     		subs	r4, r3, #1
 28230 0076 FB7D     		ldrb	r3, [r7, #23]
 28231 0078 013B     		subs	r3, r3, #1
 28232 007a DAB2     		uxtb	r2, r3
 28233 007c 07F11003 		add	r3, r7, #16
 28234 0080 1146     		mov	r1, r2
 28235 0082 1846     		mov	r0, r3
 28236 0084 FFF7FEFF 		bl	LCRChecksum
 28237 0088 0346     		mov	r3, r0
 28238 008a 1A46     		mov	r2, r3
 28239 008c 07F11803 		add	r3, r7, #24
 28240 0090 2344     		add	r3, r3, r4
 28241 0092 03F8082C 		strb	r2, [r3, #-8]
4515:..\src/command_processing.c ****     commWriteID(packet_data, packet_length, slave_ID);
 28242              		.loc 1 4515 0
 28243 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 28244 0098 99B2     		uxth	r1, r3
 28245 009a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 28246 009c 07F11003 		add	r3, r7, #16
 28247 00a0 1846     		mov	r0, r3
 28248 00a2 FFF7FEFF 		bl	commWriteID
4516:..\src/command_processing.c **** 
4517:..\src/command_processing.c **** 
4518:..\src/command_processing.c **** }
 28249              		.loc 1 4518 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 620


 28250 00a6 00BF     		nop
 28251 00a8 1C37     		adds	r7, r7, #28
 28252              		.cfi_def_cfa_offset 12
 28253 00aa BD46     		mov	sp, r7
 28254              		.cfi_def_cfa_register 13
 28255              		@ sp needed
 28256 00ac 90BD     		pop	{r4, r7, pc}
 28257              	.L1134:
 28258 00ae 00BF     		.align	2
 28259              	.L1133:
 28260 00b0 00000000 		.word	g_ref
 28261 00b4 00000000 		.word	g_mem
 28262              		.cfi_endproc
 28263              	.LFE123:
 28264              		.size	drive_slave, .-drive_slave
 28265              		.section	.text.stop_master_device,"ax",%progbits
 28266              		.align	2
 28267              		.global	stop_master_device
 28268              		.thumb
 28269              		.thumb_func
 28270              		.type	stop_master_device, %function
 28271              	stop_master_device:
 28272              	.LFB124:
4519:..\src/command_processing.c **** 
4520:..\src/command_processing.c **** //==============================================================================
4521:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4522:..\src/command_processing.c **** //==============================================================================
4523:..\src/command_processing.c ****  
4524:..\src/command_processing.c **** void stop_master_device() {
 28273              		.loc 1 4524 0
 28274              		.cfi_startproc
 28275              		@ args = 0, pretend = 0, frame = 0
 28276              		@ frame_needed = 1, uses_anonymous_args = 0
 28277 0000 80B5     		push	{r7, lr}
 28278              		.cfi_def_cfa_offset 8
 28279              		.cfi_offset 7, -8
 28280              		.cfi_offset 14, -4
 28281 0002 00AF     		add	r7, sp, #0
 28282              		.cfi_def_cfa_register 7
4525:..\src/command_processing.c ****     
4526:..\src/command_processing.c ****         // Stop pump and open valve
4527:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
 28283              		.loc 1 4527 0
 28284 0004 0A4B     		ldr	r3, .L1136
 28285 0006 0022     		movs	r2, #0
 28286 0008 9A60     		str	r2, [r3, #8]
4528:..\src/command_processing.c ****         VALVE_Write(OPEN);
 28287              		.loc 1 4528 0
 28288 000a 0020     		movs	r0, #0
 28289 000c FFF7FEFF 		bl	VALVE_Write
4529:..\src/command_processing.c ****         master_mode = 0; 
 28290              		.loc 1 4529 0
 28291 0010 084B     		ldr	r3, .L1136+4
 28292 0012 0022     		movs	r2, #0
 28293 0014 1A70     		strb	r2, [r3]
4530:..\src/command_processing.c ****         g_mem.MS.master_mode_active = FALSE;
 28294              		.loc 1 4530 0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 621


 28295 0016 084B     		ldr	r3, .L1136+8
 28296 0018 0022     		movs	r2, #0
 28297 001a 83F8C022 		strb	r2, [r3, #704]
4531:..\src/command_processing.c ****         LED_CTRL_Write(0);
 28298              		.loc 1 4531 0
 28299 001e 0020     		movs	r0, #0
 28300 0020 FFF7FEFF 		bl	LED_CTRL_Write
4532:..\src/command_processing.c ****         BLINK_CTRL_EN_Write(0);
 28301              		.loc 1 4532 0
 28302 0024 0020     		movs	r0, #0
 28303 0026 FFF7FEFF 		bl	BLINK_CTRL_EN_Write
4533:..\src/command_processing.c ****     
4534:..\src/command_processing.c **** }
 28304              		.loc 1 4534 0
 28305 002a 00BF     		nop
 28306 002c 80BD     		pop	{r7, pc}
 28307              	.L1137:
 28308 002e 00BF     		.align	2
 28309              	.L1136:
 28310 0030 00000000 		.word	g_refNew
 28311 0034 00000000 		.word	master_mode
 28312 0038 00000000 		.word	g_mem
 28313              		.cfi_endproc
 28314              	.LFE124:
 28315              		.size	stop_master_device, .-stop_master_device
 28316              		.section	.text.deactivate_slaves,"ax",%progbits
 28317              		.align	2
 28318              		.global	deactivate_slaves
 28319              		.thumb
 28320              		.thumb_func
 28321              		.type	deactivate_slaves, %function
 28322              	deactivate_slaves:
 28323              	.LFB125:
4535:..\src/command_processing.c **** 
4536:..\src/command_processing.c **** //==============================================================================
4537:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4538:..\src/command_processing.c **** //==============================================================================
4539:..\src/command_processing.c ****  
4540:..\src/command_processing.c **** void deactivate_slaves() {
 28324              		.loc 1 4540 0
 28325              		.cfi_startproc
 28326              		@ args = 0, pretend = 0, frame = 16
 28327              		@ frame_needed = 1, uses_anonymous_args = 0
 28328 0000 90B5     		push	{r4, r7, lr}
 28329              		.cfi_def_cfa_offset 12
 28330              		.cfi_offset 4, -12
 28331              		.cfi_offset 7, -8
 28332              		.cfi_offset 14, -4
 28333 0002 85B0     		sub	sp, sp, #20
 28334              		.cfi_def_cfa_offset 32
 28335 0004 00AF     		add	r7, sp, #0
 28336              		.cfi_def_cfa_register 7
4541:..\src/command_processing.c ****     
4542:..\src/command_processing.c **** #ifdef MASTER_FW
4543:..\src/command_processing.c ****     
4544:..\src/command_processing.c ****     uint8 packet_data[10];
4545:..\src/command_processing.c ****     uint8 packet_length;
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 622


4546:..\src/command_processing.c ****     
4547:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4548:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
 28337              		.loc 1 4548 0
 28338 0006 204B     		ldr	r3, .L1141
 28339 0008 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 28340 000c 022B     		cmp	r3, #2
 28341 000e 17D0     		beq	.L1139
4549:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28342              		.loc 1 4549 0 discriminator 1
 28343 0010 1D4B     		ldr	r3, .L1141
 28344 0012 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4548:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28345              		.loc 1 4548 0 discriminator 1
 28346 0016 032B     		cmp	r3, #3
 28347 0018 12D0     		beq	.L1139
4550:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 28348              		.loc 1 4550 0
 28349 001a 1B4B     		ldr	r3, .L1141
 28350 001c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4549:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
 28351              		.loc 1 4549 0
 28352 0020 042B     		cmp	r3, #4
 28353 0022 0DD0     		beq	.L1139
4551:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 28354              		.loc 1 4551 0
 28355 0024 184B     		ldr	r3, .L1141
 28356 0026 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4550:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
 28357              		.loc 1 4550 0
 28358 002a 052B     		cmp	r3, #5
 28359 002c 08D0     		beq	.L1139
4552:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
 28360              		.loc 1 4552 0
 28361 002e 164B     		ldr	r3, .L1141
 28362 0030 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
4551:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
 28363              		.loc 1 4551 0
 28364 0034 072B     		cmp	r3, #7
 28365 0036 03D0     		beq	.L1139
4553:..\src/command_processing.c ****         master_mode = 0;
 28366              		.loc 1 4553 0
 28367 0038 144B     		ldr	r3, .L1141+4
 28368 003a 0022     		movs	r2, #0
 28369 003c 1A70     		strb	r2, [r3]
 28370 003e 1FE0     		b	.L1138
 28371              	.L1139:
4554:..\src/command_processing.c ****         return;
4555:..\src/command_processing.c ****     }
4556:..\src/command_processing.c ****    
4557:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4558:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
 28372              		.loc 1 4558 0
 28373 0040 8023     		movs	r3, #128
 28374 0042 3B71     		strb	r3, [r7, #4]
4559:..\src/command_processing.c **** 
4560:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 623


 28375              		.loc 1 4560 0
 28376 0044 3B1D     		adds	r3, r7, #4
 28377 0046 0133     		adds	r3, r3, #1
 28378 0048 0022     		movs	r2, #0
 28379 004a 1A80     		strh	r2, [r3]	@ movhi
4561:..\src/command_processing.c ****     packet_length = 3;
 28380              		.loc 1 4561 0
 28381 004c 0323     		movs	r3, #3
 28382 004e FB73     		strb	r3, [r7, #15]
4562:..\src/command_processing.c ****     packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 28383              		.loc 1 4562 0
 28384 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 28385 0052 5C1E     		subs	r4, r3, #1
 28386 0054 FB7B     		ldrb	r3, [r7, #15]
 28387 0056 013B     		subs	r3, r3, #1
 28388 0058 DAB2     		uxtb	r2, r3
 28389 005a 3B1D     		adds	r3, r7, #4
 28390 005c 1146     		mov	r1, r2
 28391 005e 1846     		mov	r0, r3
 28392 0060 FFF7FEFF 		bl	LCRChecksum
 28393 0064 0346     		mov	r3, r0
 28394 0066 1A46     		mov	r2, r3
 28395 0068 07F11003 		add	r3, r7, #16
 28396 006c 2344     		add	r3, r3, r4
 28397 006e 03F80C2C 		strb	r2, [r3, #-12]
4563:..\src/command_processing.c ****     
4564:..\src/command_processing.c ****     commWrite(packet_data, packet_length);
 28398              		.loc 1 4564 0
 28399 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 28400 0074 9AB2     		uxth	r2, r3
 28401 0076 3B1D     		adds	r3, r7, #4
 28402 0078 1146     		mov	r1, r2
 28403 007a 1846     		mov	r0, r3
 28404 007c FFF7FEFF 		bl	commWrite
 28405              	.L1138:
4565:..\src/command_processing.c ****     
4566:..\src/command_processing.c **** #endif    
4567:..\src/command_processing.c **** }
 28406              		.loc 1 4567 0
 28407 0080 1437     		adds	r7, r7, #20
 28408              		.cfi_def_cfa_offset 12
 28409 0082 BD46     		mov	sp, r7
 28410              		.cfi_def_cfa_register 13
 28411              		@ sp needed
 28412 0084 90BD     		pop	{r4, r7, pc}
 28413              	.L1142:
 28414 0086 00BF     		.align	2
 28415              	.L1141:
 28416 0088 00000000 		.word	c_mem
 28417 008c 00000000 		.word	master_mode
 28418              		.cfi_endproc
 28419              	.LFE125:
 28420              		.size	deactivate_slaves, .-deactivate_slaves
 28421              		.bss
 28422              		.align	2
 28423              	h_time.10994:
 28424 0000 00000000 		.space	4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 624


 28425              		.align	1
 28426              	i.11035:
 28427 0004 0000     		.space	2
 28428 0006 0000     		.align	2
 28429              	last_aux_int16.11165:
 28430 0008 00000000 		.space	4
 28431              	fsm_state.11345:
 28432 000c 00       		.space	1
 28433 000d 000000   		.align	2
 28434              	cnt.11346:
 28435 0010 00000000 		.space	4
 28436              		.text
 28437              	.Letext0:
 28438              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28439              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 28440              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 28441              		.file 6 "..\\src\\commands.h"
 28442              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 28443              		.file 8 "..\\src\\globals.h"
 28444              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 28445              		.section	.debug_info,"",%progbits
 28446              	.Ldebug_info0:
 28447 0000 E5280000 		.4byte	0x28e5
 28448 0004 0400     		.2byte	0x4
 28449 0006 00000000 		.4byte	.Ldebug_abbrev0
 28450 000a 04       		.byte	0x4
 28451 000b 01       		.uleb128 0x1
 28452 000c 0D0B0000 		.4byte	.LASF422
 28453 0010 0C       		.byte	0xc
 28454 0011 E2160000 		.4byte	.LASF423
 28455 0015 FC000000 		.4byte	.LASF424
 28456 0019 00000000 		.4byte	.Ldebug_ranges0+0
 28457 001d 00000000 		.4byte	0
 28458 0021 00000000 		.4byte	.Ldebug_line0
 28459 0025 02       		.uleb128 0x2
 28460 0026 01       		.byte	0x1
 28461 0027 06       		.byte	0x6
 28462 0028 0D050000 		.4byte	.LASF0
 28463 002c 02       		.uleb128 0x2
 28464 002d 01       		.byte	0x1
 28465 002e 08       		.byte	0x8
 28466 002f 9A050000 		.4byte	.LASF1
 28467 0033 02       		.uleb128 0x2
 28468 0034 02       		.byte	0x2
 28469 0035 05       		.byte	0x5
 28470 0036 4F130000 		.4byte	.LASF2
 28471 003a 02       		.uleb128 0x2
 28472 003b 02       		.byte	0x2
 28473 003c 07       		.byte	0x7
 28474 003d C2150000 		.4byte	.LASF3
 28475 0041 03       		.uleb128 0x3
 28476 0042 8E160000 		.4byte	.LASF5
 28477 0046 03       		.byte	0x3
 28478 0047 3F       		.byte	0x3f
 28479 0048 4C000000 		.4byte	0x4c
 28480 004c 02       		.uleb128 0x2
 28481 004d 04       		.byte	0x4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 625


 28482 004e 05       		.byte	0x5
 28483 004f C7030000 		.4byte	.LASF4
 28484 0053 03       		.uleb128 0x3
 28485 0054 D80B0000 		.4byte	.LASF6
 28486 0058 03       		.byte	0x3
 28487 0059 41       		.byte	0x41
 28488 005a 5E000000 		.4byte	0x5e
 28489 005e 02       		.uleb128 0x2
 28490 005f 04       		.byte	0x4
 28491 0060 07       		.byte	0x7
 28492 0061 8E090000 		.4byte	.LASF7
 28493 0065 02       		.uleb128 0x2
 28494 0066 08       		.byte	0x8
 28495 0067 05       		.byte	0x5
 28496 0068 E30B0000 		.4byte	.LASF8
 28497 006c 02       		.uleb128 0x2
 28498 006d 08       		.byte	0x8
 28499 006e 07       		.byte	0x7
 28500 006f 40100000 		.4byte	.LASF9
 28501 0073 04       		.uleb128 0x4
 28502 0074 04       		.byte	0x4
 28503 0075 05       		.byte	0x5
 28504 0076 696E7400 		.ascii	"int\000"
 28505 007a 02       		.uleb128 0x2
 28506 007b 04       		.byte	0x4
 28507 007c 07       		.byte	0x7
 28508 007d 420D0000 		.4byte	.LASF10
 28509 0081 03       		.uleb128 0x3
 28510 0082 E0000000 		.4byte	.LASF11
 28511 0086 04       		.byte	0x4
 28512 0087 2C       		.byte	0x2c
 28513 0088 41000000 		.4byte	0x41
 28514 008c 03       		.uleb128 0x3
 28515 008d 30150000 		.4byte	.LASF12
 28516 0091 04       		.byte	0x4
 28517 0092 30       		.byte	0x30
 28518 0093 53000000 		.4byte	0x53
 28519 0097 05       		.uleb128 0x5
 28520 0098 31130000 		.4byte	.LASF13
 28521 009c 05       		.byte	0x5
 28522 009d E401     		.2byte	0x1e4
 28523 009f 2C000000 		.4byte	0x2c
 28524 00a3 05       		.uleb128 0x5
 28525 00a4 45170000 		.4byte	.LASF14
 28526 00a8 05       		.byte	0x5
 28527 00a9 E501     		.2byte	0x1e5
 28528 00ab 3A000000 		.4byte	0x3a
 28529 00af 05       		.uleb128 0x5
 28530 00b0 6E010000 		.4byte	.LASF15
 28531 00b4 05       		.byte	0x5
 28532 00b5 E601     		.2byte	0x1e6
 28533 00b7 5E000000 		.4byte	0x5e
 28534 00bb 05       		.uleb128 0x5
 28535 00bc 7C020000 		.4byte	.LASF16
 28536 00c0 05       		.byte	0x5
 28537 00c1 E701     		.2byte	0x1e7
 28538 00c3 25000000 		.4byte	0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 626


 28539 00c7 05       		.uleb128 0x5
 28540 00c8 90140000 		.4byte	.LASF17
 28541 00cc 05       		.byte	0x5
 28542 00cd E801     		.2byte	0x1e8
 28543 00cf 33000000 		.4byte	0x33
 28544 00d3 05       		.uleb128 0x5
 28545 00d4 1C160000 		.4byte	.LASF18
 28546 00d8 05       		.byte	0x5
 28547 00d9 E901     		.2byte	0x1e9
 28548 00db 4C000000 		.4byte	0x4c
 28549 00df 05       		.uleb128 0x5
 28550 00e0 44040000 		.4byte	.LASF19
 28551 00e4 05       		.byte	0x5
 28552 00e5 EA01     		.2byte	0x1ea
 28553 00e7 EB000000 		.4byte	0xeb
 28554 00eb 02       		.uleb128 0x2
 28555 00ec 04       		.byte	0x4
 28556 00ed 04       		.byte	0x4
 28557 00ee DE0C0000 		.4byte	.LASF20
 28558 00f2 02       		.uleb128 0x2
 28559 00f3 08       		.byte	0x8
 28560 00f4 04       		.byte	0x4
 28561 00f5 500C0000 		.4byte	.LASF21
 28562 00f9 02       		.uleb128 0x2
 28563 00fa 01       		.byte	0x1
 28564 00fb 08       		.byte	0x8
 28565 00fc 76060000 		.4byte	.LASF22
 28566 0100 05       		.uleb128 0x5
 28567 0101 20110000 		.4byte	.LASF23
 28568 0105 05       		.byte	0x5
 28569 0106 8E02     		.2byte	0x28e
 28570 0108 0C010000 		.4byte	0x10c
 28571 010c 06       		.uleb128 0x6
 28572 010d 97000000 		.4byte	0x97
 28573 0111 02       		.uleb128 0x2
 28574 0112 08       		.byte	0x8
 28575 0113 04       		.byte	0x4
 28576 0114 2C0F0000 		.4byte	.LASF24
 28577 0118 02       		.uleb128 0x2
 28578 0119 04       		.byte	0x4
 28579 011a 07       		.byte	0x7
 28580 011b 47000000 		.4byte	.LASF25
 28581 011f 07       		.uleb128 0x7
 28582 0120 04       		.byte	0x4
 28583 0121 F9000000 		.4byte	0xf9
 28584 0125 07       		.uleb128 0x7
 28585 0126 04       		.byte	0x4
 28586 0127 2B010000 		.4byte	0x12b
 28587 012b 08       		.uleb128 0x8
 28588 012c F9000000 		.4byte	0xf9
 28589 0130 09       		.uleb128 0x9
 28590 0131 F9000000 		.4byte	0xf9
 28591 0135 40010000 		.4byte	0x140
 28592 0139 0A       		.uleb128 0xa
 28593 013a 18010000 		.4byte	0x118
 28594 013e 19       		.byte	0x19
 28595 013f 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 627


 28596 0140 09       		.uleb128 0x9
 28597 0141 F9000000 		.4byte	0xf9
 28598 0145 50010000 		.4byte	0x150
 28599 0149 0A       		.uleb128 0xa
 28600 014a 18010000 		.4byte	0x118
 28601 014e 07       		.byte	0x7
 28602 014f 00       		.byte	0
 28603 0150 0B       		.uleb128 0xb
 28604 0151 940D0000 		.4byte	.LASF60
 28605 0155 01       		.byte	0x1
 28606 0156 2C000000 		.4byte	0x2c
 28607 015a 06       		.byte	0x6
 28608 015b 42       		.byte	0x42
 28609 015c 2D020000 		.4byte	0x22d
 28610 0160 0C       		.uleb128 0xc
 28611 0161 5F170000 		.4byte	.LASF26
 28612 0165 00       		.byte	0
 28613 0166 0C       		.uleb128 0xc
 28614 0167 CA130000 		.4byte	.LASF27
 28615 016b 01       		.byte	0x1
 28616 016c 0C       		.uleb128 0xc
 28617 016d 6A090000 		.4byte	.LASF28
 28618 0171 03       		.byte	0x3
 28619 0172 0C       		.uleb128 0xc
 28620 0173 0A060000 		.4byte	.LASF29
 28621 0177 04       		.byte	0x4
 28622 0178 0C       		.uleb128 0xc
 28623 0179 59110000 		.4byte	.LASF30
 28624 017d 05       		.byte	0x5
 28625 017e 0C       		.uleb128 0xc
 28626 017f 980A0000 		.4byte	.LASF31
 28627 0183 06       		.byte	0x6
 28628 0184 0C       		.uleb128 0xc
 28629 0185 A0090000 		.4byte	.LASF32
 28630 0189 09       		.byte	0x9
 28631 018a 0C       		.uleb128 0xc
 28632 018b 5D000000 		.4byte	.LASF33
 28633 018f 0A       		.byte	0xa
 28634 0190 0C       		.uleb128 0xc
 28635 0191 72140000 		.4byte	.LASF34
 28636 0195 0C       		.byte	0xc
 28637 0196 0C       		.uleb128 0xc
 28638 0197 8C0F0000 		.4byte	.LASF35
 28639 019b 0D       		.byte	0xd
 28640 019c 0C       		.uleb128 0xc
 28641 019d A3000000 		.4byte	.LASF36
 28642 01a1 80       		.byte	0x80
 28643 01a2 0C       		.uleb128 0xc
 28644 01a3 65060000 		.4byte	.LASF37
 28645 01a7 81       		.byte	0x81
 28646 01a8 0C       		.uleb128 0xc
 28647 01a9 E4070000 		.4byte	.LASF38
 28648 01ad 82       		.byte	0x82
 28649 01ae 0C       		.uleb128 0xc
 28650 01af 94130000 		.4byte	.LASF39
 28651 01b3 83       		.byte	0x83
 28652 01b4 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 628


 28653 01b5 DF120000 		.4byte	.LASF40
 28654 01b9 84       		.byte	0x84
 28655 01ba 0C       		.uleb128 0xc
 28656 01bb 5C040000 		.4byte	.LASF41
 28657 01bf 85       		.byte	0x85
 28658 01c0 0C       		.uleb128 0xc
 28659 01c1 F70A0000 		.4byte	.LASF42
 28660 01c5 86       		.byte	0x86
 28661 01c6 0C       		.uleb128 0xc
 28662 01c7 780A0000 		.4byte	.LASF43
 28663 01cb 88       		.byte	0x88
 28664 01cc 0C       		.uleb128 0xc
 28665 01cd 53140000 		.4byte	.LASF44
 28666 01d1 89       		.byte	0x89
 28667 01d2 0C       		.uleb128 0xc
 28668 01d3 9E100000 		.4byte	.LASF45
 28669 01d7 8B       		.byte	0x8b
 28670 01d8 0C       		.uleb128 0xc
 28671 01d9 C60E0000 		.4byte	.LASF46
 28672 01dd 8C       		.byte	0x8c
 28673 01de 0C       		.uleb128 0xc
 28674 01df B30B0000 		.4byte	.LASF47
 28675 01e3 8E       		.byte	0x8e
 28676 01e4 0C       		.uleb128 0xc
 28677 01e5 A8050000 		.4byte	.LASF48
 28678 01e9 FB       		.byte	0xfb
 28679 01ea 0C       		.uleb128 0xc
 28680 01eb DA050000 		.4byte	.LASF49
 28681 01ef FA       		.byte	0xfa
 28682 01f0 0C       		.uleb128 0xc
 28683 01f1 D6100000 		.4byte	.LASF50
 28684 01f5 90       		.byte	0x90
 28685 01f6 0C       		.uleb128 0xc
 28686 01f7 1E030000 		.4byte	.LASF51
 28687 01fb 92       		.byte	0x92
 28688 01fc 0C       		.uleb128 0xc
 28689 01fd 91150000 		.4byte	.LASF52
 28690 0201 A1       		.byte	0xa1
 28691 0202 0C       		.uleb128 0xc
 28692 0203 98120000 		.4byte	.LASF53
 28693 0207 A2       		.byte	0xa2
 28694 0208 0C       		.uleb128 0xc
 28695 0209 FA0D0000 		.4byte	.LASF54
 28696 020d A3       		.byte	0xa3
 28697 020e 0C       		.uleb128 0xc
 28698 020f B4120000 		.4byte	.LASF55
 28699 0213 A4       		.byte	0xa4
 28700 0214 0C       		.uleb128 0xc
 28701 0215 B9130000 		.4byte	.LASF56
 28702 0219 A5       		.byte	0xa5
 28703 021a 0C       		.uleb128 0xc
 28704 021b 4C120000 		.4byte	.LASF57
 28705 021f A6       		.byte	0xa6
 28706 0220 0C       		.uleb128 0xc
 28707 0221 570C0000 		.4byte	.LASF58
 28708 0225 A7       		.byte	0xa7
 28709 0226 0C       		.uleb128 0xc
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 629


 28710 0227 ED0C0000 		.4byte	.LASF59
 28711 022b A8       		.byte	0xa8
 28712 022c 00       		.byte	0
 28713 022d 0B       		.uleb128 0xb
 28714 022e 0C170000 		.4byte	.LASF61
 28715 0232 01       		.byte	0x1
 28716 0233 2C000000 		.4byte	0x2c
 28717 0237 06       		.byte	0x6
 28718 0238 94       		.byte	0x94
 28719 0239 6E020000 		.4byte	0x26e
 28720 023d 0C       		.uleb128 0xc
 28721 023e 72080000 		.4byte	.LASF62
 28722 0242 00       		.byte	0
 28723 0243 0C       		.uleb128 0xc
 28724 0244 DA0D0000 		.4byte	.LASF63
 28725 0248 01       		.byte	0x1
 28726 0249 0C       		.uleb128 0xc
 28727 024a 2F030000 		.4byte	.LASF64
 28728 024e 02       		.byte	0x2
 28729 024f 0C       		.uleb128 0xc
 28730 0250 58020000 		.4byte	.LASF65
 28731 0254 03       		.byte	0x3
 28732 0255 0C       		.uleb128 0xc
 28733 0256 FC010000 		.4byte	.LASF66
 28734 025a 04       		.byte	0x4
 28735 025b 0C       		.uleb128 0xc
 28736 025c 8B000000 		.4byte	.LASF67
 28737 0260 05       		.byte	0x5
 28738 0261 0C       		.uleb128 0xc
 28739 0262 C8090000 		.4byte	.LASF68
 28740 0266 06       		.byte	0x6
 28741 0267 0C       		.uleb128 0xc
 28742 0268 79120000 		.4byte	.LASF69
 28743 026c 07       		.byte	0x7
 28744 026d 00       		.byte	0
 28745 026e 0B       		.uleb128 0xb
 28746 026f F10B0000 		.4byte	.LASF70
 28747 0273 01       		.byte	0x1
 28748 0274 2C000000 		.4byte	0x2c
 28749 0278 06       		.byte	0x6
 28750 0279 A8       		.byte	0xa8
 28751 027a 97020000 		.4byte	0x297
 28752 027e 0C       		.uleb128 0xc
 28753 027f 73160000 		.4byte	.LASF71
 28754 0283 00       		.byte	0
 28755 0284 0C       		.uleb128 0xc
 28756 0285 6C0A0000 		.4byte	.LASF72
 28757 0289 01       		.byte	0x1
 28758 028a 0C       		.uleb128 0xc
 28759 028b 1C0F0000 		.4byte	.LASF73
 28760 028f 02       		.byte	0x2
 28761 0290 0C       		.uleb128 0xc
 28762 0291 55090000 		.4byte	.LASF74
 28763 0295 03       		.byte	0x3
 28764 0296 00       		.byte	0
 28765 0297 0B       		.uleb128 0xb
 28766 0298 62050000 		.4byte	.LASF75
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 630


 28767 029c 01       		.byte	0x1
 28768 029d 2C000000 		.4byte	0x2c
 28769 02a1 06       		.byte	0x6
 28770 02a2 B2       		.byte	0xb2
 28771 02a3 B4020000 		.4byte	0x2b4
 28772 02a7 0C       		.uleb128 0xc
 28773 02a8 6F120000 		.4byte	.LASF76
 28774 02ac 00       		.byte	0
 28775 02ad 0C       		.uleb128 0xc
 28776 02ae 320C0000 		.4byte	.LASF77
 28777 02b2 01       		.byte	0x1
 28778 02b3 00       		.byte	0
 28779 02b4 0B       		.uleb128 0xb
 28780 02b5 E50F0000 		.4byte	.LASF78
 28781 02b9 01       		.byte	0x1
 28782 02ba 2C000000 		.4byte	0x2c
 28783 02be 06       		.byte	0x6
 28784 02bf B7       		.byte	0xb7
 28785 02c0 D1020000 		.4byte	0x2d1
 28786 02c4 0C       		.uleb128 0xc
 28787 02c5 57080000 		.4byte	.LASF79
 28788 02c9 00       		.byte	0
 28789 02ca 0C       		.uleb128 0xc
 28790 02cb 290A0000 		.4byte	.LASF80
 28791 02cf 01       		.byte	0x1
 28792 02d0 00       		.byte	0
 28793 02d1 0B       		.uleb128 0xb
 28794 02d2 85140000 		.4byte	.LASF81
 28795 02d6 01       		.byte	0x1
 28796 02d7 2C000000 		.4byte	0x2c
 28797 02db 06       		.byte	0x6
 28798 02dc BF       		.byte	0xbf
 28799 02dd 1E030000 		.4byte	0x31e
 28800 02e1 0C       		.uleb128 0xc
 28801 02e2 300A0000 		.4byte	.LASF82
 28802 02e6 00       		.byte	0
 28803 02e7 0C       		.uleb128 0xc
 28804 02e8 1A170000 		.4byte	.LASF83
 28805 02ec 01       		.byte	0x1
 28806 02ed 0C       		.uleb128 0xc
 28807 02ee 160C0000 		.4byte	.LASF84
 28808 02f2 02       		.byte	0x2
 28809 02f3 0C       		.uleb128 0xc
 28810 02f4 A20E0000 		.4byte	.LASF85
 28811 02f8 03       		.byte	0x3
 28812 02f9 0C       		.uleb128 0xc
 28813 02fa 9F0D0000 		.4byte	.LASF86
 28814 02fe 04       		.byte	0x4
 28815 02ff 0C       		.uleb128 0xc
 28816 0300 57100000 		.4byte	.LASF87
 28817 0304 05       		.byte	0x5
 28818 0305 0C       		.uleb128 0xc
 28819 0306 380F0000 		.4byte	.LASF88
 28820 030a 06       		.byte	0x6
 28821 030b 0C       		.uleb128 0xc
 28822 030c 430E0000 		.4byte	.LASF89
 28823 0310 07       		.byte	0x7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 631


 28824 0311 0C       		.uleb128 0xc
 28825 0312 25080000 		.4byte	.LASF90
 28826 0316 08       		.byte	0x8
 28827 0317 0C       		.uleb128 0xc
 28828 0318 49090000 		.4byte	.LASF91
 28829 031c 09       		.byte	0x9
 28830 031d 00       		.byte	0
 28831 031e 03       		.uleb128 0x3
 28832 031f 54160000 		.4byte	.LASF92
 28833 0323 07       		.byte	0x7
 28834 0324 7E       		.byte	0x7e
 28835 0325 29030000 		.4byte	0x329
 28836 0329 0D       		.uleb128 0xd
 28837 032a 54160000 		.4byte	.LASF92
 28838 032e 07       		.uleb128 0x7
 28839 032f 04       		.byte	0x4
 28840 0330 1E030000 		.4byte	0x31e
 28841 0334 0E       		.uleb128 0xe
 28842 0335 9B0B0000 		.4byte	.LASF95
 28843 0339 10       		.byte	0x10
 28844 033a 08       		.byte	0x8
 28845 033b F5       		.byte	0xf5
 28846 033c 71030000 		.4byte	0x371
 28847 0340 0F       		.uleb128 0xf
 28848 0341 706F7300 		.ascii	"pos\000"
 28849 0345 08       		.byte	0x8
 28850 0346 F6       		.byte	0xf6
 28851 0347 D3000000 		.4byte	0xd3
 28852 034b 00       		.byte	0
 28853 034c 10       		.uleb128 0x10
 28854 034d 5C0A0000 		.4byte	.LASF93
 28855 0351 08       		.byte	0x8
 28856 0352 F7       		.byte	0xf7
 28857 0353 D3000000 		.4byte	0xd3
 28858 0357 04       		.byte	0x4
 28859 0358 0F       		.uleb128 0xf
 28860 0359 70776D00 		.ascii	"pwm\000"
 28861 035d 08       		.byte	0x8
 28862 035e F8       		.byte	0xf8
 28863 035f D3000000 		.4byte	0xd3
 28864 0363 08       		.byte	0x8
 28865 0364 10       		.uleb128 0x10
 28866 0365 98100000 		.4byte	.LASF94
 28867 0369 08       		.byte	0x8
 28868 036a F9       		.byte	0xf9
 28869 036b 97000000 		.4byte	0x97
 28870 036f 0C       		.byte	0xc
 28871 0370 00       		.byte	0
 28872 0371 11       		.uleb128 0x11
 28873 0372 44120000 		.4byte	.LASF96
 28874 0376 34       		.byte	0x34
 28875 0377 08       		.byte	0x8
 28876 0378 0001     		.2byte	0x100
 28877 037a DA030000 		.4byte	0x3da
 28878 037e 12       		.uleb128 0x12
 28879 037f 706F7300 		.ascii	"pos\000"
 28880 0383 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 632


 28881 0384 0101     		.2byte	0x101
 28882 0386 DA030000 		.4byte	0x3da
 28883 038a 00       		.byte	0
 28884 038b 13       		.uleb128 0x13
 28885 038c 5C0A0000 		.4byte	.LASF93
 28886 0390 08       		.byte	0x8
 28887 0391 0201     		.2byte	0x102
 28888 0393 D3000000 		.4byte	0xd3
 28889 0397 0C       		.byte	0xc
 28890 0398 13       		.uleb128 0x13
 28891 0399 D2140000 		.4byte	.LASF97
 28892 039d 08       		.byte	0x8
 28893 039e 0301     		.2byte	0x103
 28894 03a0 D3000000 		.4byte	0xd3
 28895 03a4 10       		.byte	0x10
 28896 03a5 13       		.uleb128 0x13
 28897 03a6 BE090000 		.4byte	.LASF98
 28898 03aa 08       		.byte	0x8
 28899 03ab 0401     		.2byte	0x104
 28900 03ad D3000000 		.4byte	0xd3
 28901 03b1 14       		.byte	0x14
 28902 03b2 12       		.uleb128 0x12
 28903 03b3 726F7400 		.ascii	"rot\000"
 28904 03b7 08       		.byte	0x8
 28905 03b8 0501     		.2byte	0x105
 28906 03ba EA030000 		.4byte	0x3ea
 28907 03be 18       		.byte	0x18
 28908 03bf 12       		.uleb128 0x12
 28909 03c0 76656C00 		.ascii	"vel\000"
 28910 03c4 08       		.byte	0x8
 28911 03c5 0601     		.2byte	0x106
 28912 03c7 DA030000 		.4byte	0x3da
 28913 03cb 1C       		.byte	0x1c
 28914 03cc 12       		.uleb128 0x12
 28915 03cd 61636300 		.ascii	"acc\000"
 28916 03d1 08       		.byte	0x8
 28917 03d2 0701     		.2byte	0x107
 28918 03d4 DA030000 		.4byte	0x3da
 28919 03d8 28       		.byte	0x28
 28920 03d9 00       		.byte	0
 28921 03da 09       		.uleb128 0x9
 28922 03db D3000000 		.4byte	0xd3
 28923 03df EA030000 		.4byte	0x3ea
 28924 03e3 0A       		.uleb128 0xa
 28925 03e4 18010000 		.4byte	0x118
 28926 03e8 02       		.byte	0x2
 28927 03e9 00       		.byte	0
 28928 03ea 09       		.uleb128 0x9
 28929 03eb BB000000 		.4byte	0xbb
 28930 03ef FA030000 		.4byte	0x3fa
 28931 03f3 0A       		.uleb128 0xa
 28932 03f4 18010000 		.4byte	0x118
 28933 03f8 02       		.byte	0x2
 28934 03f9 00       		.byte	0
 28935 03fa 11       		.uleb128 0x11
 28936 03fb 1E0D0000 		.4byte	.LASF99
 28937 03ff 28       		.byte	0x28
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 633


 28938 0400 08       		.byte	0x8
 28939 0401 0A01     		.2byte	0x10a
 28940 0403 2F040000 		.4byte	0x42f
 28941 0407 12       		.uleb128 0x12
 28942 0408 656D6700 		.ascii	"emg\000"
 28943 040c 08       		.byte	0x8
 28944 040d 0B01     		.2byte	0x10b
 28945 040f 2F040000 		.4byte	0x42f
 28946 0413 00       		.byte	0
 28947 0414 13       		.uleb128 0x13
 28948 0415 9A0E0000 		.4byte	.LASF100
 28949 0419 08       		.byte	0x8
 28950 041a 0C01     		.2byte	0x10c
 28951 041c 3F040000 		.4byte	0x43f
 28952 0420 08       		.byte	0x8
 28953 0421 13       		.uleb128 0x13
 28954 0422 75130000 		.4byte	.LASF101
 28955 0426 08       		.byte	0x8
 28956 0427 0D01     		.2byte	0x10d
 28957 0429 2F040000 		.4byte	0x42f
 28958 042d 20       		.byte	0x20
 28959 042e 00       		.byte	0
 28960 042f 09       		.uleb128 0x9
 28961 0430 D3000000 		.4byte	0xd3
 28962 0434 3F040000 		.4byte	0x43f
 28963 0438 0A       		.uleb128 0xa
 28964 0439 18010000 		.4byte	0x118
 28965 043d 01       		.byte	0x1
 28966 043e 00       		.byte	0
 28967 043f 09       		.uleb128 0x9
 28968 0440 D3000000 		.4byte	0xd3
 28969 0444 4F040000 		.4byte	0x44f
 28970 0448 0A       		.uleb128 0xa
 28971 0449 18010000 		.4byte	0x118
 28972 044d 05       		.byte	0x5
 28973 044e 00       		.byte	0
 28974 044f 11       		.uleb128 0x11
 28975 0450 08070000 		.4byte	.LASF102
 28976 0454 04       		.byte	0x4
 28977 0455 08       		.byte	0x8
 28978 0456 1001     		.2byte	0x110
 28979 0458 6A040000 		.4byte	0x46a
 28980 045c 13       		.uleb128 0x13
 28981 045d 5C060000 		.4byte	.LASF103
 28982 0461 08       		.byte	0x8
 28983 0462 1101     		.2byte	0x111
 28984 0464 EB000000 		.4byte	0xeb
 28985 0468 00       		.byte	0
 28986 0469 00       		.byte	0
 28987 046a 11       		.uleb128 0x11
 28988 046b ED000000 		.4byte	.LASF104
 28989 046f 86       		.byte	0x86
 28990 0470 08       		.byte	0x8
 28991 0471 1801     		.2byte	0x118
 28992 0473 AC040000 		.4byte	0x4ac
 28993 0477 13       		.uleb128 0x13
 28994 0478 F3070000 		.4byte	.LASF105
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 634


 28995 047c 08       		.byte	0x8
 28996 047d 1901     		.2byte	0x119
 28997 047f AC040000 		.4byte	0x4ac
 28998 0483 00       		.byte	0
 28999 0484 13       		.uleb128 0x13
 29000 0485 6D100000 		.4byte	.LASF106
 29001 0489 08       		.byte	0x8
 29002 048a 1A01     		.2byte	0x11a
 29003 048c C7000000 		.4byte	0xc7
 29004 0490 80       		.byte	0x80
 29005 0491 12       		.uleb128 0x12
 29006 0492 696E6400 		.ascii	"ind\000"
 29007 0496 08       		.byte	0x8
 29008 0497 1B01     		.2byte	0x11b
 29009 0499 C7000000 		.4byte	0xc7
 29010 049d 82       		.byte	0x82
 29011 049e 13       		.uleb128 0x13
 29012 049f 00030000 		.4byte	.LASF107
 29013 04a3 08       		.byte	0x8
 29014 04a4 1C01     		.2byte	0x11c
 29015 04a6 97000000 		.4byte	0x97
 29016 04aa 84       		.byte	0x84
 29017 04ab 00       		.byte	0
 29018 04ac 09       		.uleb128 0x9
 29019 04ad 97000000 		.4byte	0x97
 29020 04b1 BC040000 		.4byte	0x4bc
 29021 04b5 0A       		.uleb128 0xa
 29022 04b6 18010000 		.4byte	0x118
 29023 04ba 7F       		.byte	0x7f
 29024 04bb 00       		.byte	0
 29025 04bc 11       		.uleb128 0x11
 29026 04bd 32040000 		.4byte	.LASF108
 29027 04c1 70       		.byte	0x70
 29028 04c2 08       		.byte	0x8
 29029 04c3 2501     		.2byte	0x125
 29030 04c5 59050000 		.4byte	0x559
 29031 04c9 13       		.uleb128 0x13
 29032 04ca 17000000 		.4byte	.LASF109
 29033 04ce 08       		.byte	0x8
 29034 04cf 2601     		.2byte	0x126
 29035 04d1 59050000 		.4byte	0x559
 29036 04d5 00       		.byte	0
 29037 04d6 13       		.uleb128 0x13
 29038 04d7 B9020000 		.4byte	.LASF110
 29039 04db 08       		.byte	0x8
 29040 04dc 2701     		.2byte	0x127
 29041 04de 69050000 		.4byte	0x569
 29042 04e2 08       		.byte	0x8
 29043 04e3 13       		.uleb128 0x13
 29044 04e4 0F0F0000 		.4byte	.LASF111
 29045 04e8 08       		.byte	0x8
 29046 04e9 2801     		.2byte	0x128
 29047 04eb 79050000 		.4byte	0x579
 29048 04ef 30       		.byte	0x30
 29049 04f0 13       		.uleb128 0x13
 29050 04f1 1C020000 		.4byte	.LASF112
 29051 04f5 08       		.byte	0x8
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 635


 29052 04f6 2901     		.2byte	0x129
 29053 04f8 AF000000 		.4byte	0xaf
 29054 04fc 40       		.byte	0x40
 29055 04fd 13       		.uleb128 0x13
 29056 04fe A7160000 		.4byte	.LASF113
 29057 0502 08       		.byte	0x8
 29058 0503 2A01     		.2byte	0x12a
 29059 0505 AF000000 		.4byte	0xaf
 29060 0509 44       		.byte	0x44
 29061 050a 13       		.uleb128 0x13
 29062 050b 60010000 		.4byte	.LASF114
 29063 050f 08       		.byte	0x8
 29064 0510 2B01     		.2byte	0x12b
 29065 0512 AF000000 		.4byte	0xaf
 29066 0516 48       		.byte	0x48
 29067 0517 13       		.uleb128 0x13
 29068 0518 DC090000 		.4byte	.LASF115
 29069 051c 08       		.byte	0x8
 29070 051d 2C01     		.2byte	0x12c
 29071 051f AF000000 		.4byte	0xaf
 29072 0523 4C       		.byte	0x4c
 29073 0524 13       		.uleb128 0x13
 29074 0525 50000000 		.4byte	.LASF116
 29075 0529 08       		.byte	0x8
 29076 052a 2D01     		.2byte	0x12d
 29077 052c AF000000 		.4byte	0xaf
 29078 0530 50       		.byte	0x50
 29079 0531 13       		.uleb128 0x13
 29080 0532 66030000 		.4byte	.LASF117
 29081 0536 08       		.byte	0x8
 29082 0537 2E01     		.2byte	0x12e
 29083 0539 59050000 		.4byte	0x559
 29084 053d 54       		.byte	0x54
 29085 053e 13       		.uleb128 0x13
 29086 053f 6B0F0000 		.4byte	.LASF118
 29087 0543 08       		.byte	0x8
 29088 0544 2F01     		.2byte	0x12f
 29089 0546 59050000 		.4byte	0x559
 29090 054a 5C       		.byte	0x5c
 29091 054b 13       		.uleb128 0x13
 29092 054c 0F040000 		.4byte	.LASF119
 29093 0550 08       		.byte	0x8
 29094 0551 3001     		.2byte	0x130
 29095 0553 89050000 		.4byte	0x589
 29096 0557 64       		.byte	0x64
 29097 0558 00       		.byte	0
 29098 0559 09       		.uleb128 0x9
 29099 055a AF000000 		.4byte	0xaf
 29100 055e 69050000 		.4byte	0x569
 29101 0562 0A       		.uleb128 0xa
 29102 0563 18010000 		.4byte	0x118
 29103 0567 01       		.byte	0x1
 29104 0568 00       		.byte	0
 29105 0569 09       		.uleb128 0x9
 29106 056a AF000000 		.4byte	0xaf
 29107 056e 79050000 		.4byte	0x579
 29108 0572 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 636


 29109 0573 18010000 		.4byte	0x118
 29110 0577 09       		.byte	0x9
 29111 0578 00       		.byte	0
 29112 0579 09       		.uleb128 0x9
 29113 057a AF000000 		.4byte	0xaf
 29114 057e 89050000 		.4byte	0x589
 29115 0582 0A       		.uleb128 0xa
 29116 0583 18010000 		.4byte	0x118
 29117 0587 03       		.byte	0x3
 29118 0588 00       		.byte	0
 29119 0589 09       		.uleb128 0x9
 29120 058a 97000000 		.4byte	0x97
 29121 058e 99050000 		.4byte	0x599
 29122 0592 0A       		.uleb128 0xa
 29123 0593 18010000 		.4byte	0x118
 29124 0597 0B       		.byte	0xb
 29125 0598 00       		.byte	0
 29126 0599 11       		.uleb128 0x11
 29127 059a 7A070000 		.4byte	.LASF120
 29128 059e 10       		.byte	0x10
 29129 059f 08       		.byte	0x8
 29130 05a0 3701     		.2byte	0x137
 29131 05a2 28060000 		.4byte	0x628
 29132 05a6 12       		.uleb128 0x12
 29133 05a7 696400   		.ascii	"id\000"
 29134 05aa 08       		.byte	0x8
 29135 05ab 3801     		.2byte	0x138
 29136 05ad 97000000 		.4byte	0x97
 29137 05b1 00       		.byte	0
 29138 05b2 13       		.uleb128 0x13
 29139 05b3 A3130000 		.4byte	.LASF121
 29140 05b7 08       		.byte	0x8
 29141 05b8 3901     		.2byte	0x139
 29142 05ba 28060000 		.4byte	0x628
 29143 05be 01       		.byte	0x1
 29144 05bf 13       		.uleb128 0x13
 29145 05c0 1F140000 		.4byte	.LASF122
 29146 05c4 08       		.byte	0x8
 29147 05c5 3A01     		.2byte	0x13a
 29148 05c7 28060000 		.4byte	0x628
 29149 05cb 04       		.byte	0x4
 29150 05cc 13       		.uleb128 0x13
 29151 05cd FF050000 		.4byte	.LASF123
 29152 05d1 08       		.byte	0x8
 29153 05d2 3B01     		.2byte	0x13b
 29154 05d4 97000000 		.4byte	0x97
 29155 05d8 07       		.byte	0x7
 29156 05d9 13       		.uleb128 0x13
 29157 05da DE030000 		.4byte	.LASF124
 29158 05de 08       		.byte	0x8
 29159 05df 3C01     		.2byte	0x13c
 29160 05e1 97000000 		.4byte	0x97
 29161 05e5 08       		.byte	0x8
 29162 05e6 13       		.uleb128 0x13
 29163 05e7 4B030000 		.4byte	.LASF125
 29164 05eb 08       		.byte	0x8
 29165 05ec 3D01     		.2byte	0x13d
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 637


 29166 05ee 97000000 		.4byte	0x97
 29167 05f2 09       		.byte	0x9
 29168 05f3 13       		.uleb128 0x13
 29169 05f4 64150000 		.4byte	.LASF126
 29170 05f8 08       		.byte	0x8
 29171 05f9 3E01     		.2byte	0x13e
 29172 05fb 97000000 		.4byte	0x97
 29173 05ff 0A       		.byte	0xa
 29174 0600 13       		.uleb128 0x13
 29175 0601 28150000 		.4byte	.LASF127
 29176 0605 08       		.byte	0x8
 29177 0606 3F01     		.2byte	0x13f
 29178 0608 97000000 		.4byte	0x97
 29179 060c 0B       		.byte	0xb
 29180 060d 13       		.uleb128 0x13
 29181 060e EE110000 		.4byte	.LASF128
 29182 0612 08       		.byte	0x8
 29183 0613 4001     		.2byte	0x140
 29184 0615 97000000 		.4byte	0x97
 29185 0619 0C       		.byte	0xc
 29186 061a 13       		.uleb128 0x13
 29187 061b 0F040000 		.4byte	.LASF119
 29188 061f 08       		.byte	0x8
 29189 0620 4101     		.2byte	0x141
 29190 0622 28060000 		.4byte	0x628
 29191 0626 0D       		.byte	0xd
 29192 0627 00       		.byte	0
 29193 0628 09       		.uleb128 0x9
 29194 0629 97000000 		.4byte	0x97
 29195 062d 38060000 		.4byte	0x638
 29196 0631 0A       		.uleb128 0xa
 29197 0632 18010000 		.4byte	0x118
 29198 0636 02       		.byte	0x2
 29199 0637 00       		.byte	0
 29200 0638 11       		.uleb128 0x11
 29201 0639 3F160000 		.4byte	.LASF129
 29202 063d 70       		.byte	0x70
 29203 063e 08       		.byte	0x8
 29204 063f 4801     		.2byte	0x148
 29205 0641 B2070000 		.4byte	0x7b2
 29206 0645 12       		.uleb128 0x12
 29207 0646 6B5F7000 		.ascii	"k_p\000"
 29208 064a 08       		.byte	0x8
 29209 064b 4901     		.2byte	0x149
 29210 064d D3000000 		.4byte	0xd3
 29211 0651 00       		.byte	0
 29212 0652 12       		.uleb128 0x12
 29213 0653 6B5F6900 		.ascii	"k_i\000"
 29214 0657 08       		.byte	0x8
 29215 0658 4A01     		.2byte	0x14a
 29216 065a D3000000 		.4byte	0xd3
 29217 065e 04       		.byte	0x4
 29218 065f 12       		.uleb128 0x12
 29219 0660 6B5F6400 		.ascii	"k_d\000"
 29220 0664 08       		.byte	0x8
 29221 0665 4B01     		.2byte	0x14b
 29222 0667 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 638


 29223 066b 08       		.byte	0x8
 29224 066c 13       		.uleb128 0x13
 29225 066d E7100000 		.4byte	.LASF130
 29226 0671 08       		.byte	0x8
 29227 0672 4C01     		.2byte	0x14c
 29228 0674 D3000000 		.4byte	0xd3
 29229 0678 0C       		.byte	0xc
 29230 0679 13       		.uleb128 0x13
 29231 067a 28070000 		.4byte	.LASF131
 29232 067e 08       		.byte	0x8
 29233 067f 4D01     		.2byte	0x14d
 29234 0681 D3000000 		.4byte	0xd3
 29235 0685 10       		.byte	0x10
 29236 0686 13       		.uleb128 0x13
 29237 0687 02070000 		.4byte	.LASF132
 29238 068b 08       		.byte	0x8
 29239 068c 4E01     		.2byte	0x14e
 29240 068e D3000000 		.4byte	0xd3
 29241 0692 14       		.byte	0x14
 29242 0693 13       		.uleb128 0x13
 29243 0694 CB140000 		.4byte	.LASF133
 29244 0698 08       		.byte	0x8
 29245 0699 4F01     		.2byte	0x14f
 29246 069b D3000000 		.4byte	0xd3
 29247 069f 18       		.byte	0x18
 29248 06a0 13       		.uleb128 0x13
 29249 06a1 DD070000 		.4byte	.LASF134
 29250 06a5 08       		.byte	0x8
 29251 06a6 5001     		.2byte	0x150
 29252 06a8 D3000000 		.4byte	0xd3
 29253 06ac 1C       		.byte	0x1c
 29254 06ad 13       		.uleb128 0x13
 29255 06ae 65130000 		.4byte	.LASF135
 29256 06b2 08       		.byte	0x8
 29257 06b3 5101     		.2byte	0x151
 29258 06b5 D3000000 		.4byte	0xd3
 29259 06b9 20       		.byte	0x20
 29260 06ba 13       		.uleb128 0x13
 29261 06bb FA070000 		.4byte	.LASF136
 29262 06bf 08       		.byte	0x8
 29263 06c0 5201     		.2byte	0x152
 29264 06c2 D3000000 		.4byte	0xd3
 29265 06c6 24       		.byte	0x24
 29266 06c7 13       		.uleb128 0x13
 29267 06c8 DB080000 		.4byte	.LASF137
 29268 06cc 08       		.byte	0x8
 29269 06cd 5301     		.2byte	0x153
 29270 06cf D3000000 		.4byte	0xd3
 29271 06d3 28       		.byte	0x28
 29272 06d4 13       		.uleb128 0x13
 29273 06d5 68170000 		.4byte	.LASF138
 29274 06d9 08       		.byte	0x8
 29275 06da 5401     		.2byte	0x154
 29276 06dc D3000000 		.4byte	0xd3
 29277 06e0 2C       		.byte	0x2c
 29278 06e1 13       		.uleb128 0x13
 29279 06e2 140A0000 		.4byte	.LASF139
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 639


 29280 06e6 08       		.byte	0x8
 29281 06e7 5501     		.2byte	0x155
 29282 06e9 97000000 		.4byte	0x97
 29283 06ed 30       		.byte	0x30
 29284 06ee 13       		.uleb128 0x13
 29285 06ef B4140000 		.4byte	.LASF140
 29286 06f3 08       		.byte	0x8
 29287 06f4 5601     		.2byte	0x156
 29288 06f6 97000000 		.4byte	0x97
 29289 06fa 31       		.byte	0x31
 29290 06fb 13       		.uleb128 0x13
 29291 06fc 07110000 		.4byte	.LASF141
 29292 0700 08       		.byte	0x8
 29293 0701 5701     		.2byte	0x157
 29294 0703 97000000 		.4byte	0x97
 29295 0707 32       		.byte	0x32
 29296 0708 13       		.uleb128 0x13
 29297 0709 5C160000 		.4byte	.LASF142
 29298 070d 08       		.byte	0x8
 29299 070e 5801     		.2byte	0x158
 29300 0710 97000000 		.4byte	0x97
 29301 0714 33       		.byte	0x33
 29302 0715 13       		.uleb128 0x13
 29303 0716 D0010000 		.4byte	.LASF143
 29304 071a 08       		.byte	0x8
 29305 071b 5901     		.2byte	0x159
 29306 071d D3000000 		.4byte	0xd3
 29307 0721 34       		.byte	0x34
 29308 0722 13       		.uleb128 0x13
 29309 0723 47070000 		.4byte	.LASF144
 29310 0727 08       		.byte	0x8
 29311 0728 5A01     		.2byte	0x15a
 29312 072a D3000000 		.4byte	0xd3
 29313 072e 38       		.byte	0x38
 29314 072f 13       		.uleb128 0x13
 29315 0730 8C0C0000 		.4byte	.LASF145
 29316 0734 08       		.byte	0x8
 29317 0735 5B01     		.2byte	0x15b
 29318 0737 D3000000 		.4byte	0xd3
 29319 073b 3C       		.byte	0x3c
 29320 073c 13       		.uleb128 0x13
 29321 073d 7B060000 		.4byte	.LASF146
 29322 0741 08       		.byte	0x8
 29323 0742 5C01     		.2byte	0x15c
 29324 0744 D3000000 		.4byte	0xd3
 29325 0748 40       		.byte	0x40
 29326 0749 13       		.uleb128 0x13
 29327 074a 10020000 		.4byte	.LASF147
 29328 074e 08       		.byte	0x8
 29329 074f 5D01     		.2byte	0x15d
 29330 0751 B2070000 		.4byte	0x7b2
 29331 0755 44       		.byte	0x44
 29332 0756 13       		.uleb128 0x13
 29333 0757 FE160000 		.4byte	.LASF148
 29334 075b 08       		.byte	0x8
 29335 075c 5E01     		.2byte	0x15e
 29336 075e C7000000 		.4byte	0xc7
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 640


 29337 0762 5C       		.byte	0x5c
 29338 0763 13       		.uleb128 0x13
 29339 0764 610A0000 		.4byte	.LASF149
 29340 0768 08       		.byte	0x8
 29341 0769 5F01     		.2byte	0x15f
 29342 076b 97000000 		.4byte	0x97
 29343 076f 5E       		.byte	0x5e
 29344 0770 13       		.uleb128 0x13
 29345 0771 C70D0000 		.4byte	.LASF150
 29346 0775 08       		.byte	0x8
 29347 0776 6001     		.2byte	0x160
 29348 0778 97000000 		.4byte	0x97
 29349 077c 5F       		.byte	0x5f
 29350 077d 13       		.uleb128 0x13
 29351 077e 23060000 		.4byte	.LASF151
 29352 0782 08       		.byte	0x8
 29353 0783 6101     		.2byte	0x161
 29354 0785 97000000 		.4byte	0x97
 29355 0789 60       		.byte	0x60
 29356 078a 13       		.uleb128 0x13
 29357 078b F1060000 		.4byte	.LASF152
 29358 078f 08       		.byte	0x8
 29359 0790 6201     		.2byte	0x162
 29360 0792 97000000 		.4byte	0x97
 29361 0796 61       		.byte	0x61
 29362 0797 13       		.uleb128 0x13
 29363 0798 C4050000 		.4byte	.LASF153
 29364 079c 08       		.byte	0x8
 29365 079d 6301     		.2byte	0x163
 29366 079f 97000000 		.4byte	0x97
 29367 07a3 62       		.byte	0x62
 29368 07a4 13       		.uleb128 0x13
 29369 07a5 0F040000 		.4byte	.LASF119
 29370 07a9 08       		.byte	0x8
 29371 07aa 6401     		.2byte	0x164
 29372 07ac C2070000 		.4byte	0x7c2
 29373 07b0 63       		.byte	0x63
 29374 07b1 00       		.byte	0
 29375 07b2 09       		.uleb128 0x9
 29376 07b3 EB000000 		.4byte	0xeb
 29377 07b7 C2070000 		.4byte	0x7c2
 29378 07bb 0A       		.uleb128 0xa
 29379 07bc 18010000 		.4byte	0x118
 29380 07c0 05       		.byte	0x5
 29381 07c1 00       		.byte	0
 29382 07c2 09       		.uleb128 0x9
 29383 07c3 97000000 		.4byte	0x97
 29384 07c7 D2070000 		.4byte	0x7d2
 29385 07cb 0A       		.uleb128 0xa
 29386 07cc 18010000 		.4byte	0x118
 29387 07d0 0C       		.byte	0xc
 29388 07d1 00       		.byte	0
 29389 07d2 11       		.uleb128 0x11
 29390 07d3 D5150000 		.4byte	.LASF154
 29391 07d7 30       		.byte	0x30
 29392 07d8 08       		.byte	0x8
 29393 07d9 6B01     		.2byte	0x16b
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 641


 29394 07db 55080000 		.4byte	0x855
 29395 07df 13       		.uleb128 0x13
 29396 07e0 6E0C0000 		.4byte	.LASF155
 29397 07e4 08       		.byte	0x8
 29398 07e5 6C01     		.2byte	0x16c
 29399 07e7 55080000 		.4byte	0x855
 29400 07eb 00       		.byte	0
 29401 07ec 12       		.uleb128 0x12
 29402 07ed 72657300 		.ascii	"res\000"
 29403 07f1 08       		.byte	0x8
 29404 07f2 6D01     		.2byte	0x16d
 29405 07f4 28060000 		.4byte	0x628
 29406 07f8 05       		.byte	0x5
 29407 07f9 13       		.uleb128 0x13
 29408 07fa 230A0000 		.4byte	.LASF156
 29409 07fe 08       		.byte	0x8
 29410 07ff 6E01     		.2byte	0x16e
 29411 0801 DA030000 		.4byte	0x3da
 29412 0805 08       		.byte	0x8
 29413 0806 13       		.uleb128 0x13
 29414 0807 21070000 		.4byte	.LASF157
 29415 080b 08       		.byte	0x8
 29416 080c 6F01     		.2byte	0x16f
 29417 080e 65080000 		.4byte	0x865
 29418 0812 14       		.byte	0x14
 29419 0813 13       		.uleb128 0x13
 29420 0814 B40F0000 		.4byte	.LASF158
 29421 0818 08       		.byte	0x8
 29422 0819 7001     		.2byte	0x170
 29423 081b 97000000 		.4byte	0x97
 29424 081f 20       		.byte	0x20
 29425 0820 13       		.uleb128 0x13
 29426 0821 06030000 		.4byte	.LASF159
 29427 0825 08       		.byte	0x8
 29428 0826 7101     		.2byte	0x171
 29429 0828 28060000 		.4byte	0x628
 29430 082c 21       		.byte	0x21
 29431 082d 13       		.uleb128 0x13
 29432 082e FC0E0000 		.4byte	.LASF160
 29433 0832 08       		.byte	0x8
 29434 0833 7201     		.2byte	0x172
 29435 0835 BB000000 		.4byte	0xbb
 29436 0839 24       		.byte	0x24
 29437 083a 13       		.uleb128 0x13
 29438 083b 15120000 		.4byte	.LASF161
 29439 083f 08       		.byte	0x8
 29440 0840 7301     		.2byte	0x173
 29441 0842 EA030000 		.4byte	0x3ea
 29442 0846 25       		.byte	0x25
 29443 0847 13       		.uleb128 0x13
 29444 0848 0F040000 		.4byte	.LASF119
 29445 084c 08       		.byte	0x8
 29446 084d 7401     		.2byte	0x174
 29447 084f 75080000 		.4byte	0x875
 29448 0853 28       		.byte	0x28
 29449 0854 00       		.byte	0
 29450 0855 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 642


 29451 0856 97000000 		.4byte	0x97
 29452 085a 65080000 		.4byte	0x865
 29453 085e 0A       		.uleb128 0xa
 29454 085f 18010000 		.4byte	0x118
 29455 0863 04       		.byte	0x4
 29456 0864 00       		.byte	0
 29457 0865 09       		.uleb128 0x9
 29458 0866 DF000000 		.4byte	0xdf
 29459 086a 75080000 		.4byte	0x875
 29460 086e 0A       		.uleb128 0xa
 29461 086f 18010000 		.4byte	0x118
 29462 0873 02       		.byte	0x2
 29463 0874 00       		.byte	0
 29464 0875 09       		.uleb128 0x9
 29465 0876 97000000 		.4byte	0x97
 29466 087a 85080000 		.4byte	0x885
 29467 087e 0A       		.uleb128 0xa
 29468 087f 18010000 		.4byte	0x118
 29469 0883 07       		.byte	0x7
 29470 0884 00       		.byte	0
 29471 0885 11       		.uleb128 0x11
 29472 0886 B2020000 		.4byte	.LASF162
 29473 088a 10       		.byte	0x10
 29474 088b 08       		.byte	0x8
 29475 088c 7B01     		.2byte	0x17b
 29476 088e D4080000 		.4byte	0x8d4
 29477 0892 13       		.uleb128 0x13
 29478 0893 B80E0000 		.4byte	.LASF163
 29479 0897 08       		.byte	0x8
 29480 0898 7C01     		.2byte	0x17c
 29481 089a D4080000 		.4byte	0x8d4
 29482 089e 00       		.byte	0
 29483 089f 13       		.uleb128 0x13
 29484 08a0 B1160000 		.4byte	.LASF164
 29485 08a4 08       		.byte	0x8
 29486 08a5 7D01     		.2byte	0x17d
 29487 08a7 59050000 		.4byte	0x559
 29488 08ab 04       		.byte	0x4
 29489 08ac 13       		.uleb128 0x13
 29490 08ad 5B070000 		.4byte	.LASF165
 29491 08b1 08       		.byte	0x8
 29492 08b2 7E01     		.2byte	0x17e
 29493 08b4 E4080000 		.4byte	0x8e4
 29494 08b8 0C       		.byte	0xc
 29495 08b9 13       		.uleb128 0x13
 29496 08ba 2F120000 		.4byte	.LASF166
 29497 08be 08       		.byte	0x8
 29498 08bf 7F01     		.2byte	0x17f
 29499 08c1 97000000 		.4byte	0x97
 29500 08c5 0E       		.byte	0xe
 29501 08c6 13       		.uleb128 0x13
 29502 08c7 A9140000 		.4byte	.LASF167
 29503 08cb 08       		.byte	0x8
 29504 08cc 8001     		.2byte	0x180
 29505 08ce 97000000 		.4byte	0x97
 29506 08d2 0F       		.byte	0xf
 29507 08d3 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 643


 29508 08d4 09       		.uleb128 0x9
 29509 08d5 A3000000 		.4byte	0xa3
 29510 08d9 E4080000 		.4byte	0x8e4
 29511 08dd 0A       		.uleb128 0xa
 29512 08de 18010000 		.4byte	0x118
 29513 08e2 01       		.byte	0x1
 29514 08e3 00       		.byte	0
 29515 08e4 09       		.uleb128 0x9
 29516 08e5 97000000 		.4byte	0x97
 29517 08e9 F4080000 		.4byte	0x8f4
 29518 08ed 0A       		.uleb128 0xa
 29519 08ee 18010000 		.4byte	0x118
 29520 08f2 01       		.byte	0x1
 29521 08f3 00       		.byte	0
 29522 08f4 11       		.uleb128 0x11
 29523 08f5 0F0E0000 		.4byte	.LASF168
 29524 08f9 20       		.byte	0x20
 29525 08fa 08       		.byte	0x8
 29526 08fb 8701     		.2byte	0x187
 29527 08fd 36090000 		.4byte	0x936
 29528 0901 13       		.uleb128 0x13
 29529 0902 80030000 		.4byte	.LASF169
 29530 0906 08       		.byte	0x8
 29531 0907 8801     		.2byte	0x188
 29532 0909 97000000 		.4byte	0x97
 29533 090d 00       		.byte	0
 29534 090e 13       		.uleb128 0x13
 29535 090f D60F0000 		.4byte	.LASF170
 29536 0913 08       		.byte	0x8
 29537 0914 8901     		.2byte	0x189
 29538 0916 97000000 		.4byte	0x97
 29539 091a 01       		.byte	0x1
 29540 091b 13       		.uleb128 0x13
 29541 091c E40C0000 		.4byte	.LASF171
 29542 0920 08       		.byte	0x8
 29543 0921 8A01     		.2byte	0x18a
 29544 0923 36090000 		.4byte	0x936
 29545 0927 02       		.byte	0x2
 29546 0928 13       		.uleb128 0x13
 29547 0929 0F040000 		.4byte	.LASF119
 29548 092d 08       		.byte	0x8
 29549 092e 8B01     		.2byte	0x18b
 29550 0930 55080000 		.4byte	0x855
 29551 0934 1B       		.byte	0x1b
 29552 0935 00       		.byte	0
 29553 0936 09       		.uleb128 0x9
 29554 0937 97000000 		.4byte	0x97
 29555 093b 4C090000 		.4byte	0x94c
 29556 093f 0A       		.uleb128 0xa
 29557 0940 18010000 		.4byte	0x118
 29558 0944 04       		.byte	0x4
 29559 0945 0A       		.uleb128 0xa
 29560 0946 18010000 		.4byte	0x118
 29561 094a 04       		.byte	0x4
 29562 094b 00       		.byte	0
 29563 094c 11       		.uleb128 0x11
 29564 094d 22120000 		.4byte	.LASF172
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 644


 29565 0951 20       		.byte	0x20
 29566 0952 08       		.byte	0x8
 29567 0953 9201     		.2byte	0x192
 29568 0955 A8090000 		.4byte	0x9a8
 29569 0959 13       		.uleb128 0x13
 29570 095a AA0F0000 		.4byte	.LASF173
 29571 095e 08       		.byte	0x8
 29572 095f 9301     		.2byte	0x193
 29573 0961 A8090000 		.4byte	0x9a8
 29574 0965 00       		.byte	0
 29575 0966 13       		.uleb128 0x13
 29576 0967 96140000 		.4byte	.LASF174
 29577 096b 08       		.byte	0x8
 29578 096c 9401     		.2byte	0x194
 29579 096e 97000000 		.4byte	0x97
 29580 0972 06       		.byte	0x6
 29581 0973 13       		.uleb128 0x13
 29582 0974 EB140000 		.4byte	.LASF175
 29583 0978 08       		.byte	0x8
 29584 0979 9501     		.2byte	0x195
 29585 097b 97000000 		.4byte	0x97
 29586 097f 07       		.byte	0x7
 29587 0980 13       		.uleb128 0x13
 29588 0981 96070000 		.4byte	.LASF176
 29589 0985 08       		.byte	0x8
 29590 0986 9601     		.2byte	0x196
 29591 0988 89050000 		.4byte	0x589
 29592 098c 08       		.byte	0x8
 29593 098d 13       		.uleb128 0x13
 29594 098e A2030000 		.4byte	.LASF177
 29595 0992 08       		.byte	0x8
 29596 0993 9701     		.2byte	0x197
 29597 0995 97000000 		.4byte	0x97
 29598 0999 14       		.byte	0x14
 29599 099a 13       		.uleb128 0x13
 29600 099b 0F040000 		.4byte	.LASF119
 29601 099f 08       		.byte	0x8
 29602 09a0 9801     		.2byte	0x198
 29603 09a2 B8090000 		.4byte	0x9b8
 29604 09a6 15       		.byte	0x15
 29605 09a7 00       		.byte	0
 29606 09a8 09       		.uleb128 0x9
 29607 09a9 97000000 		.4byte	0x97
 29608 09ad B8090000 		.4byte	0x9b8
 29609 09b1 0A       		.uleb128 0xa
 29610 09b2 18010000 		.4byte	0x118
 29611 09b6 05       		.byte	0x5
 29612 09b7 00       		.byte	0
 29613 09b8 09       		.uleb128 0x9
 29614 09b9 97000000 		.4byte	0x97
 29615 09bd C8090000 		.4byte	0x9c8
 29616 09c1 0A       		.uleb128 0xa
 29617 09c2 18010000 		.4byte	0x118
 29618 09c6 0A       		.byte	0xa
 29619 09c7 00       		.byte	0
 29620 09c8 11       		.uleb128 0x11
 29621 09c9 F7110000 		.4byte	.LASF178
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 645


 29622 09cd 20       		.byte	0x20
 29623 09ce 08       		.byte	0x8
 29624 09cf 9F01     		.2byte	0x19f
 29625 09d1 FD090000 		.4byte	0x9fd
 29626 09d5 13       		.uleb128 0x13
 29627 09d6 19050000 		.4byte	.LASF179
 29628 09da 08       		.byte	0x8
 29629 09db A001     		.2byte	0x1a0
 29630 09dd 40010000 		.4byte	0x140
 29631 09e1 00       		.byte	0
 29632 09e2 13       		.uleb128 0x13
 29633 09e3 ED030000 		.4byte	.LASF180
 29634 09e7 08       		.byte	0x8
 29635 09e8 A101     		.2byte	0x1a1
 29636 09ea 85080000 		.4byte	0x885
 29637 09ee 08       		.byte	0x8
 29638 09ef 13       		.uleb128 0x13
 29639 09f0 0F040000 		.4byte	.LASF119
 29640 09f4 08       		.byte	0x8
 29641 09f5 A201     		.2byte	0x1a2
 29642 09f7 75080000 		.4byte	0x875
 29643 09fb 18       		.byte	0x18
 29644 09fc 00       		.byte	0
 29645 09fd 11       		.uleb128 0x11
 29646 09fe C70B0000 		.4byte	.LASF181
 29647 0a02 10       		.byte	0x10
 29648 0a03 08       		.byte	0x8
 29649 0a04 A901     		.2byte	0x1a9
 29650 0a06 4C0A0000 		.4byte	0xa4c
 29651 0a0a 13       		.uleb128 0x13
 29652 0a0b 530A0000 		.4byte	.LASF182
 29653 0a0f 08       		.byte	0x8
 29654 0a10 AA01     		.2byte	0x1aa
 29655 0a12 D3000000 		.4byte	0xd3
 29656 0a16 00       		.byte	0
 29657 0a17 13       		.uleb128 0x13
 29658 0a18 4C170000 		.4byte	.LASF183
 29659 0a1c 08       		.byte	0x8
 29660 0a1d AB01     		.2byte	0x1ab
 29661 0a1f D3000000 		.4byte	0xd3
 29662 0a23 04       		.byte	0x4
 29663 0a24 13       		.uleb128 0x13
 29664 0a25 65070000 		.4byte	.LASF184
 29665 0a29 08       		.byte	0x8
 29666 0a2a AC01     		.2byte	0x1ac
 29667 0a2c D3000000 		.4byte	0xd3
 29668 0a30 08       		.byte	0x8
 29669 0a31 13       		.uleb128 0x13
 29670 0a32 A1080000 		.4byte	.LASF185
 29671 0a36 08       		.byte	0x8
 29672 0a37 AD01     		.2byte	0x1ad
 29673 0a39 97000000 		.4byte	0x97
 29674 0a3d 0C       		.byte	0xc
 29675 0a3e 13       		.uleb128 0x13
 29676 0a3f 0F040000 		.4byte	.LASF119
 29677 0a43 08       		.byte	0x8
 29678 0a44 AE01     		.2byte	0x1ae
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 646


 29679 0a46 28060000 		.4byte	0x628
 29680 0a4a 0D       		.byte	0xd
 29681 0a4b 00       		.byte	0
 29682 0a4c 11       		.uleb128 0x11
 29683 0a4d 43130000 		.4byte	.LASF186
 29684 0a51 10       		.byte	0x10
 29685 0a52 08       		.byte	0x8
 29686 0a53 B501     		.2byte	0x1b5
 29687 0a55 8E0A0000 		.4byte	0xa8e
 29688 0a59 13       		.uleb128 0x13
 29689 0a5a B4080000 		.4byte	.LASF187
 29690 0a5e 08       		.byte	0x8
 29691 0a5f B601     		.2byte	0x1b6
 29692 0a61 A3000000 		.4byte	0xa3
 29693 0a65 00       		.byte	0
 29694 0a66 13       		.uleb128 0x13
 29695 0a67 5C120000 		.4byte	.LASF188
 29696 0a6b 08       		.byte	0x8
 29697 0a6c B701     		.2byte	0x1b7
 29698 0a6e C7000000 		.4byte	0xc7
 29699 0a72 02       		.byte	0x2
 29700 0a73 13       		.uleb128 0x13
 29701 0a74 AF090000 		.4byte	.LASF189
 29702 0a78 08       		.byte	0x8
 29703 0a79 B801     		.2byte	0x1b8
 29704 0a7b D4080000 		.4byte	0x8d4
 29705 0a7f 04       		.byte	0x4
 29706 0a80 13       		.uleb128 0x13
 29707 0a81 0F040000 		.4byte	.LASF119
 29708 0a85 08       		.byte	0x8
 29709 0a86 B901     		.2byte	0x1b9
 29710 0a88 75080000 		.4byte	0x875
 29711 0a8c 08       		.byte	0x8
 29712 0a8d 00       		.byte	0
 29713 0a8e 11       		.uleb128 0x11
 29714 0a8f 3E020000 		.4byte	.LASF190
 29715 0a93 10       		.byte	0x10
 29716 0a94 08       		.byte	0x8
 29717 0a95 C001     		.2byte	0x1c0
 29718 0a97 C30A0000 		.4byte	0xac3
 29719 0a9b 13       		.uleb128 0x13
 29720 0a9c 2A050000 		.4byte	.LASF191
 29721 0aa0 08       		.byte	0x8
 29722 0aa1 C101     		.2byte	0x1c1
 29723 0aa3 97000000 		.4byte	0x97
 29724 0aa7 00       		.byte	0
 29725 0aa8 13       		.uleb128 0x13
 29726 0aa9 AE0C0000 		.4byte	.LASF192
 29727 0aad 08       		.byte	0x8
 29728 0aae C201     		.2byte	0x1c2
 29729 0ab0 97000000 		.4byte	0x97
 29730 0ab4 01       		.byte	0x1
 29731 0ab5 13       		.uleb128 0x13
 29732 0ab6 0F040000 		.4byte	.LASF119
 29733 0aba 08       		.byte	0x8
 29734 0abb C301     		.2byte	0x1c3
 29735 0abd C30A0000 		.4byte	0xac3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 647


 29736 0ac1 02       		.byte	0x2
 29737 0ac2 00       		.byte	0
 29738 0ac3 09       		.uleb128 0x9
 29739 0ac4 97000000 		.4byte	0x97
 29740 0ac8 D30A0000 		.4byte	0xad3
 29741 0acc 0A       		.uleb128 0xa
 29742 0acd 18010000 		.4byte	0x118
 29743 0ad1 0D       		.byte	0xd
 29744 0ad2 00       		.byte	0
 29745 0ad3 11       		.uleb128 0x11
 29746 0ad4 440F0000 		.4byte	.LASF193
 29747 0ad8 10       		.byte	0x10
 29748 0ad9 08       		.byte	0x8
 29749 0ada CA01     		.2byte	0x1ca
 29750 0adc 2F0B0000 		.4byte	0xb2f
 29751 0ae0 13       		.uleb128 0x13
 29752 0ae1 EB150000 		.4byte	.LASF194
 29753 0ae5 08       		.byte	0x8
 29754 0ae6 CC01     		.2byte	0x1cc
 29755 0ae8 D3000000 		.4byte	0xd3
 29756 0aec 00       		.byte	0
 29757 0aed 13       		.uleb128 0x13
 29758 0aee 8C080000 		.4byte	.LASF195
 29759 0af2 08       		.byte	0x8
 29760 0af3 CD01     		.2byte	0x1cd
 29761 0af5 EB000000 		.4byte	0xeb
 29762 0af9 04       		.byte	0x4
 29763 0afa 13       		.uleb128 0x13
 29764 0afb 25110000 		.4byte	.LASF196
 29765 0aff 08       		.byte	0x8
 29766 0b00 CE01     		.2byte	0x1ce
 29767 0b02 EB000000 		.4byte	0xeb
 29768 0b06 08       		.byte	0x8
 29769 0b07 13       		.uleb128 0x13
 29770 0b08 B80A0000 		.4byte	.LASF197
 29771 0b0c 08       		.byte	0x8
 29772 0b0d CF01     		.2byte	0x1cf
 29773 0b0f 97000000 		.4byte	0x97
 29774 0b13 0C       		.byte	0xc
 29775 0b14 13       		.uleb128 0x13
 29776 0b15 F4120000 		.4byte	.LASF198
 29777 0b19 08       		.byte	0x8
 29778 0b1a D001     		.2byte	0x1d0
 29779 0b1c 97000000 		.4byte	0x97
 29780 0b20 0D       		.byte	0xd
 29781 0b21 13       		.uleb128 0x13
 29782 0b22 0F040000 		.4byte	.LASF119
 29783 0b26 08       		.byte	0x8
 29784 0b27 D101     		.2byte	0x1d1
 29785 0b29 E4080000 		.4byte	0x8e4
 29786 0b2d 0E       		.byte	0xe
 29787 0b2e 00       		.byte	0
 29788 0b2f 11       		.uleb128 0x11
 29789 0b30 C9070000 		.4byte	.LASF199
 29790 0b34 02       		.byte	0x2
 29791 0b35 08       		.byte	0x8
 29792 0b36 D401     		.2byte	0x1d4
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 648


 29793 0b38 4A0B0000 		.4byte	0xb4a
 29794 0b3c 12       		.uleb128 0x12
 29795 0b3d 70776D00 		.ascii	"pwm\000"
 29796 0b41 08       		.byte	0x8
 29797 0b42 D501     		.2byte	0x1d5
 29798 0b44 C7000000 		.4byte	0xc7
 29799 0b48 00       		.byte	0
 29800 0b49 00       		.byte	0
 29801 0b4a 11       		.uleb128 0x11
 29802 0b4b F5020000 		.4byte	.LASF200
 29803 0b4f 12       		.byte	0x12
 29804 0b50 08       		.byte	0x8
 29805 0b51 DB01     		.2byte	0x1db
 29806 0b53 8C0B0000 		.4byte	0xb8c
 29807 0b57 13       		.uleb128 0x13
 29808 0b58 24170000 		.4byte	.LASF201
 29809 0b5c 08       		.byte	0x8
 29810 0b5d DC01     		.2byte	0x1dc
 29811 0b5f 97000000 		.4byte	0x97
 29812 0b63 00       		.byte	0
 29813 0b64 13       		.uleb128 0x13
 29814 0b65 74150000 		.4byte	.LASF202
 29815 0b69 08       		.byte	0x8
 29816 0b6a DD01     		.2byte	0x1dd
 29817 0b6c D4080000 		.4byte	0x8d4
 29818 0b70 02       		.byte	0x2
 29819 0b71 13       		.uleb128 0x13
 29820 0b72 6F000000 		.4byte	.LASF203
 29821 0b76 08       		.byte	0x8
 29822 0b77 DE01     		.2byte	0x1de
 29823 0b79 97000000 		.4byte	0x97
 29824 0b7d 06       		.byte	0x6
 29825 0b7e 13       		.uleb128 0x13
 29826 0b7f 0F040000 		.4byte	.LASF119
 29827 0b83 08       		.byte	0x8
 29828 0b84 DF01     		.2byte	0x1df
 29829 0b86 8C0B0000 		.4byte	0xb8c
 29830 0b8a 07       		.byte	0x7
 29831 0b8b 00       		.byte	0
 29832 0b8c 09       		.uleb128 0x9
 29833 0b8d 97000000 		.4byte	0x97
 29834 0b91 9C0B0000 		.4byte	0xb9c
 29835 0b95 0A       		.uleb128 0xa
 29836 0b96 18010000 		.4byte	0x118
 29837 0b9a 09       		.byte	0x9
 29838 0b9b 00       		.byte	0
 29839 0b9c 14       		.uleb128 0x14
 29840 0b9d 06160000 		.4byte	.LASF204
 29841 0ba1 F402     		.2byte	0x2f4
 29842 0ba3 08       		.byte	0x8
 29843 0ba4 E801     		.2byte	0x1e8
 29844 0ba6 810C0000 		.4byte	0xc81
 29845 0baa 13       		.uleb128 0x13
 29846 0bab AB0D0000 		.4byte	.LASF205
 29847 0baf 08       		.byte	0x8
 29848 0bb0 EA01     		.2byte	0x1ea
 29849 0bb2 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 649


 29850 0bb6 00       		.byte	0
 29851 0bb7 13       		.uleb128 0x13
 29852 0bb8 0F040000 		.4byte	.LASF119
 29853 0bbc 08       		.byte	0x8
 29854 0bbd EB01     		.2byte	0x1eb
 29855 0bbf 810C0000 		.4byte	0xc81
 29856 0bc3 01       		.byte	0x1
 29857 0bc4 12       		.uleb128 0x12
 29858 0bc5 636E7400 		.ascii	"cnt\000"
 29859 0bc9 08       		.byte	0x8
 29860 0bca EC01     		.2byte	0x1ec
 29861 0bcc BC040000 		.4byte	0x4bc
 29862 0bd0 10       		.byte	0x10
 29863 0bd1 13       		.uleb128 0x13
 29864 0bd2 D0030000 		.4byte	.LASF206
 29865 0bd6 08       		.byte	0x8
 29866 0bd7 ED01     		.2byte	0x1ed
 29867 0bd9 910C0000 		.4byte	0xc91
 29868 0bdd 80       		.byte	0x80
 29869 0bde 12       		.uleb128 0x12
 29870 0bdf 64657600 		.ascii	"dev\000"
 29871 0be3 08       		.byte	0x8
 29872 0be4 EE01     		.2byte	0x1ee
 29873 0be6 99050000 		.4byte	0x599
 29874 0bea A0       		.byte	0xa0
 29875 0beb 13       		.uleb128 0x13
 29876 0bec 7E130000 		.4byte	.LASF207
 29877 0bf0 08       		.byte	0x8
 29878 0bf1 EF01     		.2byte	0x1ef
 29879 0bf3 A10C0000 		.4byte	0xca1
 29880 0bf7 B0       		.byte	0xb0
 29881 0bf8 15       		.uleb128 0x15
 29882 0bf9 656E6300 		.ascii	"enc\000"
 29883 0bfd 08       		.byte	0x8
 29884 0bfe F001     		.2byte	0x1f0
 29885 0c00 B10C0000 		.4byte	0xcb1
 29886 0c04 9001     		.2byte	0x190
 29887 0c06 15       		.uleb128 0x15
 29888 0c07 656D6700 		.ascii	"emg\000"
 29889 0c0b 08       		.byte	0x8
 29890 0c0c F101     		.2byte	0x1f1
 29891 0c0e 85080000 		.4byte	0x885
 29892 0c12 F001     		.2byte	0x1f0
 29893 0c14 15       		.uleb128 0x15
 29894 0c15 696D7500 		.ascii	"imu\000"
 29895 0c19 08       		.byte	0x8
 29896 0c1a F201     		.2byte	0x1f2
 29897 0c1c F4080000 		.4byte	0x8f4
 29898 0c20 0002     		.2byte	0x200
 29899 0c22 15       		.uleb128 0x15
 29900 0c23 65787000 		.ascii	"exp\000"
 29901 0c27 08       		.byte	0x8
 29902 0c28 F301     		.2byte	0x1f3
 29903 0c2a 4C090000 		.4byte	0x94c
 29904 0c2e 2002     		.2byte	0x220
 29905 0c30 16       		.uleb128 0x16
 29906 0c31 B0000000 		.4byte	.LASF208
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 650


 29907 0c35 08       		.byte	0x8
 29908 0c36 F401     		.2byte	0x1f4
 29909 0c38 C10C0000 		.4byte	0xcc1
 29910 0c3c 4002     		.2byte	0x240
 29911 0c3e 15       		.uleb128 0x15
 29912 0c3f 534800   		.ascii	"SH\000"
 29913 0c42 08       		.byte	0x8
 29914 0c43 F601     		.2byte	0x1f6
 29915 0c45 FD090000 		.4byte	0x9fd
 29916 0c49 A002     		.2byte	0x2a0
 29917 0c4b 16       		.uleb128 0x16
 29918 0c4c B2010000 		.4byte	.LASF209
 29919 0c50 08       		.byte	0x8
 29920 0c51 F701     		.2byte	0x1f7
 29921 0c53 4C0A0000 		.4byte	0xa4c
 29922 0c57 B002     		.2byte	0x2b0
 29923 0c59 15       		.uleb128 0x15
 29924 0c5a 4D5300   		.ascii	"MS\000"
 29925 0c5d 08       		.byte	0x8
 29926 0c5e F801     		.2byte	0x1f8
 29927 0c60 8E0A0000 		.4byte	0xa8e
 29928 0c64 C002     		.2byte	0x2c0
 29929 0c66 15       		.uleb128 0x15
 29930 0c67 464200   		.ascii	"FB\000"
 29931 0c6a 08       		.byte	0x8
 29932 0c6b F901     		.2byte	0x1f9
 29933 0c6d D30A0000 		.4byte	0xad3
 29934 0c71 D002     		.2byte	0x2d0
 29935 0c73 15       		.uleb128 0x15
 29936 0c74 575200   		.ascii	"WR\000"
 29937 0c77 08       		.byte	0x8
 29938 0c78 FA01     		.2byte	0x1fa
 29939 0c7a 4A0B0000 		.4byte	0xb4a
 29940 0c7e E002     		.2byte	0x2e0
 29941 0c80 00       		.byte	0
 29942 0c81 09       		.uleb128 0x9
 29943 0c82 97000000 		.4byte	0x97
 29944 0c86 910C0000 		.4byte	0xc91
 29945 0c8a 0A       		.uleb128 0xa
 29946 0c8b 18010000 		.4byte	0x118
 29947 0c8f 0E       		.byte	0xe
 29948 0c90 00       		.byte	0
 29949 0c91 09       		.uleb128 0x9
 29950 0c92 97000000 		.4byte	0x97
 29951 0c96 A10C0000 		.4byte	0xca1
 29952 0c9a 0A       		.uleb128 0xa
 29953 0c9b 18010000 		.4byte	0x118
 29954 0c9f 1F       		.byte	0x1f
 29955 0ca0 00       		.byte	0
 29956 0ca1 09       		.uleb128 0x9
 29957 0ca2 38060000 		.4byte	0x638
 29958 0ca6 B10C0000 		.4byte	0xcb1
 29959 0caa 0A       		.uleb128 0xa
 29960 0cab 18010000 		.4byte	0x118
 29961 0caf 01       		.byte	0x1
 29962 0cb0 00       		.byte	0
 29963 0cb1 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 651


 29964 0cb2 D2070000 		.4byte	0x7d2
 29965 0cb6 C10C0000 		.4byte	0xcc1
 29966 0cba 0A       		.uleb128 0xa
 29967 0cbb 18010000 		.4byte	0x118
 29968 0cbf 01       		.byte	0x1
 29969 0cc0 00       		.byte	0
 29970 0cc1 09       		.uleb128 0x9
 29971 0cc2 C8090000 		.4byte	0x9c8
 29972 0cc6 D10C0000 		.4byte	0xcd1
 29973 0cca 0A       		.uleb128 0xa
 29974 0ccb 18010000 		.4byte	0x118
 29975 0ccf 02       		.byte	0x2
 29976 0cd0 00       		.byte	0
 29977 0cd1 11       		.uleb128 0x11
 29978 0cd2 82100000 		.4byte	.LASF210
 29979 0cd6 28       		.byte	0x28
 29980 0cd7 08       		.byte	0x8
 29981 0cd8 0502     		.2byte	0x205
 29982 0cda 2D0D0000 		.4byte	0xd2d
 29983 0cde 13       		.uleb128 0x13
 29984 0cdf 56060000 		.4byte	.LASF211
 29985 0ce3 08       		.byte	0x8
 29986 0ce4 0602     		.2byte	0x206
 29987 0ce6 97000000 		.4byte	0x97
 29988 0cea 00       		.byte	0
 29989 0ceb 13       		.uleb128 0x13
 29990 0cec 1C040000 		.4byte	.LASF212
 29991 0cf0 08       		.byte	0x8
 29992 0cf1 0702     		.2byte	0x207
 29993 0cf3 2D0D0000 		.4byte	0xd2d
 29994 0cf7 02       		.byte	0x2
 29995 0cf8 13       		.uleb128 0x13
 29996 0cf9 9F0F0000 		.4byte	.LASF213
 29997 0cfd 08       		.byte	0x8
 29998 0cfe 0802     		.2byte	0x208
 29999 0d00 2D0D0000 		.4byte	0xd2d
 30000 0d04 08       		.byte	0x8
 30001 0d05 13       		.uleb128 0x13
 30002 0d06 8E100000 		.4byte	.LASF214
 30003 0d0a 08       		.byte	0x8
 30004 0d0b 0902     		.2byte	0x209
 30005 0d0d 2D0D0000 		.4byte	0xd2d
 30006 0d11 0E       		.byte	0xe
 30007 0d12 13       		.uleb128 0x13
 30008 0d13 3A0A0000 		.4byte	.LASF215
 30009 0d17 08       		.byte	0x8
 30010 0d18 0A02     		.2byte	0x20a
 30011 0d1a 3D0D0000 		.4byte	0xd3d
 30012 0d1e 14       		.byte	0x14
 30013 0d1f 13       		.uleb128 0x13
 30014 0d20 C7020000 		.4byte	.LASF216
 30015 0d24 08       		.byte	0x8
 30016 0d25 0B02     		.2byte	0x20b
 30017 0d27 C7000000 		.4byte	0xc7
 30018 0d2b 24       		.byte	0x24
 30019 0d2c 00       		.byte	0
 30020 0d2d 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 652


 30021 0d2e C7000000 		.4byte	0xc7
 30022 0d32 3D0D0000 		.4byte	0xd3d
 30023 0d36 0A       		.uleb128 0xa
 30024 0d37 18010000 		.4byte	0x118
 30025 0d3b 02       		.byte	0x2
 30026 0d3c 00       		.byte	0
 30027 0d3d 09       		.uleb128 0x9
 30028 0d3e EB000000 		.4byte	0xeb
 30029 0d42 4D0D0000 		.4byte	0xd4d
 30030 0d46 0A       		.uleb128 0xa
 30031 0d47 18010000 		.4byte	0x118
 30032 0d4b 03       		.byte	0x3
 30033 0d4c 00       		.byte	0
 30034 0d4d 11       		.uleb128 0x11
 30035 0d4e 3D050000 		.4byte	.LASF217
 30036 0d52 06       		.byte	0x6
 30037 0d53 08       		.byte	0x8
 30038 0d54 1B02     		.2byte	0x21b
 30039 0d56 8F0D0000 		.4byte	0xd8f
 30040 0d5a 13       		.uleb128 0x13
 30041 0d5b 86090000 		.4byte	.LASF218
 30042 0d5f 08       		.byte	0x8
 30043 0d60 1C02     		.2byte	0x21c
 30044 0d62 97000000 		.4byte	0x97
 30045 0d66 00       		.byte	0
 30046 0d67 13       		.uleb128 0x13
 30047 0d68 71170000 		.4byte	.LASF219
 30048 0d6c 08       		.byte	0x8
 30049 0d6d 1D02     		.2byte	0x21d
 30050 0d6f 97000000 		.4byte	0x97
 30051 0d73 01       		.byte	0x1
 30052 0d74 13       		.uleb128 0x13
 30053 0d75 18080000 		.4byte	.LASF220
 30054 0d79 08       		.byte	0x8
 30055 0d7a 1E02     		.2byte	0x21e
 30056 0d7c C7000000 		.4byte	0xc7
 30057 0d80 02       		.byte	0x2
 30058 0d81 13       		.uleb128 0x13
 30059 0d82 800C0000 		.4byte	.LASF221
 30060 0d86 08       		.byte	0x8
 30061 0d87 1F02     		.2byte	0x21f
 30062 0d89 C7000000 		.4byte	0xc7
 30063 0d8d 04       		.byte	0x4
 30064 0d8e 00       		.byte	0
 30065 0d8f 17       		.uleb128 0x17
 30066 0d90 CD110000 		.4byte	.LASF425
 30067 0d94 02       		.byte	0x2
 30068 0d95 1403     		.2byte	0x314
 30069 0d97 8C000000 		.4byte	0x8c
 30070 0d9b 03       		.byte	0x3
 30071 0d9c B90D0000 		.4byte	0xdb9
 30072 0da0 18       		.uleb128 0x18
 30073 0da1 50060000 		.4byte	.LASF308
 30074 0da5 02       		.byte	0x2
 30075 0da6 1403     		.2byte	0x314
 30076 0da8 8C000000 		.4byte	0x8c
 30077 0dac 19       		.uleb128 0x19
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 653


 30078 0dad DB020000 		.4byte	.LASF426
 30079 0db1 02       		.byte	0x2
 30080 0db2 1603     		.2byte	0x316
 30081 0db4 8C000000 		.4byte	0x8c
 30082 0db8 00       		.byte	0
 30083 0db9 1A       		.uleb128 0x1a
 30084 0dba 37130000 		.4byte	.LASF222
 30085 0dbe 01       		.byte	0x1
 30086 0dbf 3D       		.byte	0x3d
 30087 0dc0 00000000 		.4byte	.LFB64
 30088 0dc4 64060000 		.4byte	.LFE64-.LFB64
 30089 0dc8 01       		.uleb128 0x1
 30090 0dc9 9C       		.byte	0x9c
 30091 0dca C20E0000 		.4byte	0xec2
 30092 0dce 1B       		.uleb128 0x1b
 30093 0dcf 1E080000 		.4byte	.LASF224
 30094 0dd3 01       		.byte	0x1
 30095 0dd4 3F       		.byte	0x3f
 30096 0dd5 97000000 		.4byte	0x97
 30097 0dd9 02       		.uleb128 0x2
 30098 0dda 91       		.byte	0x91
 30099 0ddb 77       		.sleb128 -9
 30100 0ddc 1C       		.uleb128 0x1c
 30101 0ddd 8F0D0000 		.4byte	0xd8f
 30102 0de1 9A040000 		.4byte	.LBB12
 30103 0de5 08000000 		.4byte	.LBE12-.LBB12
 30104 0de9 01       		.byte	0x1
 30105 0dea A2       		.byte	0xa2
 30106 0deb 0A0E0000 		.4byte	0xe0a
 30107 0def 1D       		.uleb128 0x1d
 30108 0df0 A00D0000 		.4byte	0xda0
 30109 0df4 02       		.uleb128 0x2
 30110 0df5 91       		.byte	0x91
 30111 0df6 60       		.sleb128 -32
 30112 0df7 1E       		.uleb128 0x1e
 30113 0df8 9A040000 		.4byte	.LBB13
 30114 0dfc 08000000 		.4byte	.LBE13-.LBB13
 30115 0e00 1F       		.uleb128 0x1f
 30116 0e01 AC0D0000 		.4byte	0xdac
 30117 0e05 02       		.uleb128 0x2
 30118 0e06 91       		.byte	0x91
 30119 0e07 5C       		.sleb128 -36
 30120 0e08 00       		.byte	0
 30121 0e09 00       		.byte	0
 30122 0e0a 1C       		.uleb128 0x1c
 30123 0e0b 8F0D0000 		.4byte	0xd8f
 30124 0e0f B8040000 		.4byte	.LBB14
 30125 0e13 08000000 		.4byte	.LBE14-.LBB14
 30126 0e17 01       		.byte	0x1
 30127 0e18 AE       		.byte	0xae
 30128 0e19 380E0000 		.4byte	0xe38
 30129 0e1d 1D       		.uleb128 0x1d
 30130 0e1e A00D0000 		.4byte	0xda0
 30131 0e22 02       		.uleb128 0x2
 30132 0e23 91       		.byte	0x91
 30133 0e24 70       		.sleb128 -16
 30134 0e25 1E       		.uleb128 0x1e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 654


 30135 0e26 B8040000 		.4byte	.LBB15
 30136 0e2a 08000000 		.4byte	.LBE15-.LBB15
 30137 0e2e 1F       		.uleb128 0x1f
 30138 0e2f AC0D0000 		.4byte	0xdac
 30139 0e33 02       		.uleb128 0x2
 30140 0e34 91       		.byte	0x91
 30141 0e35 58       		.sleb128 -40
 30142 0e36 00       		.byte	0
 30143 0e37 00       		.byte	0
 30144 0e38 20       		.uleb128 0x20
 30145 0e39 8F0D0000 		.4byte	0xd8f
 30146 0e3d F2050000 		.4byte	.LBB16
 30147 0e41 08000000 		.4byte	.LBE16-.LBB16
 30148 0e45 01       		.byte	0x1
 30149 0e46 0A01     		.2byte	0x10a
 30150 0e48 670E0000 		.4byte	0xe67
 30151 0e4c 1D       		.uleb128 0x1d
 30152 0e4d A00D0000 		.4byte	0xda0
 30153 0e51 02       		.uleb128 0x2
 30154 0e52 91       		.byte	0x91
 30155 0e53 6C       		.sleb128 -20
 30156 0e54 1E       		.uleb128 0x1e
 30157 0e55 F2050000 		.4byte	.LBB17
 30158 0e59 08000000 		.4byte	.LBE17-.LBB17
 30159 0e5d 1F       		.uleb128 0x1f
 30160 0e5e AC0D0000 		.4byte	0xdac
 30161 0e62 02       		.uleb128 0x2
 30162 0e63 91       		.byte	0x91
 30163 0e64 54       		.sleb128 -44
 30164 0e65 00       		.byte	0
 30165 0e66 00       		.byte	0
 30166 0e67 20       		.uleb128 0x20
 30167 0e68 8F0D0000 		.4byte	0xd8f
 30168 0e6c 22060000 		.4byte	.LBB18
 30169 0e70 08000000 		.4byte	.LBE18-.LBB18
 30170 0e74 01       		.byte	0x1
 30171 0e75 2801     		.2byte	0x128
 30172 0e77 960E0000 		.4byte	0xe96
 30173 0e7b 1D       		.uleb128 0x1d
 30174 0e7c A00D0000 		.4byte	0xda0
 30175 0e80 02       		.uleb128 0x2
 30176 0e81 91       		.byte	0x91
 30177 0e82 68       		.sleb128 -24
 30178 0e83 1E       		.uleb128 0x1e
 30179 0e84 22060000 		.4byte	.LBB19
 30180 0e88 08000000 		.4byte	.LBE19-.LBB19
 30181 0e8c 1F       		.uleb128 0x1f
 30182 0e8d AC0D0000 		.4byte	0xdac
 30183 0e91 02       		.uleb128 0x2
 30184 0e92 91       		.byte	0x91
 30185 0e93 50       		.sleb128 -48
 30186 0e94 00       		.byte	0
 30187 0e95 00       		.byte	0
 30188 0e96 21       		.uleb128 0x21
 30189 0e97 8F0D0000 		.4byte	0xd8f
 30190 0e9b 3A060000 		.4byte	.LBB20
 30191 0e9f 08000000 		.4byte	.LBE20-.LBB20
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 655


 30192 0ea3 01       		.byte	0x1
 30193 0ea4 2E01     		.2byte	0x12e
 30194 0ea6 1D       		.uleb128 0x1d
 30195 0ea7 A00D0000 		.4byte	0xda0
 30196 0eab 02       		.uleb128 0x2
 30197 0eac 91       		.byte	0x91
 30198 0ead 64       		.sleb128 -28
 30199 0eae 1E       		.uleb128 0x1e
 30200 0eaf 3A060000 		.4byte	.LBB21
 30201 0eb3 08000000 		.4byte	.LBE21-.LBB21
 30202 0eb7 1F       		.uleb128 0x1f
 30203 0eb8 AC0D0000 		.4byte	0xdac
 30204 0ebc 02       		.uleb128 0x2
 30205 0ebd 91       		.byte	0x91
 30206 0ebe 4C       		.sleb128 -52
 30207 0ebf 00       		.byte	0
 30208 0ec0 00       		.byte	0
 30209 0ec1 00       		.byte	0
 30210 0ec2 22       		.uleb128 0x22
 30211 0ec3 00000000 		.4byte	.LASF223
 30212 0ec7 01       		.byte	0x1
 30213 0ec8 3C01     		.2byte	0x13c
 30214 0eca 00000000 		.4byte	.LFB65
 30215 0ece 22000000 		.4byte	.LFE65-.LFB65
 30216 0ed2 01       		.uleb128 0x1
 30217 0ed3 9C       		.byte	0x9c
 30218 0ed4 E90E0000 		.4byte	0xee9
 30219 0ed8 23       		.uleb128 0x23
 30220 0ed9 13070000 		.4byte	.LASF225
 30221 0edd 01       		.byte	0x1
 30222 0ede 3D01     		.2byte	0x13d
 30223 0ee0 E90E0000 		.4byte	0xee9
 30224 0ee4 03       		.uleb128 0x3
 30225 0ee5 91       		.byte	0x91
 30226 0ee6 9C74     		.sleb128 -1508
 30227 0ee8 00       		.byte	0
 30228 0ee9 09       		.uleb128 0x9
 30229 0eea F9000000 		.4byte	0xf9
 30230 0eee FA0E0000 		.4byte	0xefa
 30231 0ef2 24       		.uleb128 0x24
 30232 0ef3 18010000 		.4byte	0x118
 30233 0ef7 DB05     		.2byte	0x5db
 30234 0ef9 00       		.byte	0
 30235 0efa 22       		.uleb128 0x22
 30236 0efb 37160000 		.4byte	.LASF226
 30237 0eff 01       		.byte	0x1
 30238 0f00 4801     		.2byte	0x148
 30239 0f02 00000000 		.4byte	.LFB66
 30240 0f06 64010000 		.4byte	.LFE66-.LFB66
 30241 0f0a 01       		.uleb128 0x1
 30242 0f0b 9C       		.byte	0x9c
 30243 0f0c 430F0000 		.4byte	0xf43
 30244 0f10 25       		.uleb128 0x25
 30245 0f11 87150000 		.4byte	.LASF229
 30246 0f15 01       		.byte	0x1
 30247 0f16 4801     		.2byte	0x148
 30248 0f18 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 656


 30249 0f1c 04       		.uleb128 0x4
 30250 0f1d 91       		.byte	0x91
 30251 0f1e B6C47E   		.sleb128 -24010
 30252 0f21 23       		.uleb128 0x23
 30253 0f22 13070000 		.4byte	.LASF225
 30254 0f26 01       		.byte	0x1
 30255 0f27 4901     		.2byte	0x149
 30256 0f29 430F0000 		.4byte	0xf43
 30257 0f2d 03       		.uleb128 0x3
 30258 0f2e 91       		.byte	0x91
 30259 0f2f D860     		.sleb128 -4008
 30260 0f31 23       		.uleb128 0x23
 30261 0f32 080A0000 		.4byte	.LASF227
 30262 0f36 01       		.byte	0x1
 30263 0f37 4A01     		.2byte	0x14a
 30264 0f39 540F0000 		.4byte	0xf54
 30265 0f3d 04       		.uleb128 0x4
 30266 0f3e 91       		.byte	0x91
 30267 0f3f B8C47E   		.sleb128 -24008
 30268 0f42 00       		.byte	0
 30269 0f43 09       		.uleb128 0x9
 30270 0f44 F9000000 		.4byte	0xf9
 30271 0f48 540F0000 		.4byte	0xf54
 30272 0f4c 24       		.uleb128 0x24
 30273 0f4d 18010000 		.4byte	0x118
 30274 0f51 9F0F     		.2byte	0xf9f
 30275 0f53 00       		.byte	0
 30276 0f54 09       		.uleb128 0x9
 30277 0f55 F9000000 		.4byte	0xf9
 30278 0f59 650F0000 		.4byte	0xf65
 30279 0f5d 24       		.uleb128 0x24
 30280 0f5e 18010000 		.4byte	0x118
 30281 0f62 1F4E     		.2byte	0x4e1f
 30282 0f64 00       		.byte	0
 30283 0f65 22       		.uleb128 0x22
 30284 0f66 81020000 		.4byte	.LASF228
 30285 0f6a 01       		.byte	0x1
 30286 0f6b 7A01     		.2byte	0x17a
 30287 0f6d 00000000 		.4byte	.LFB67
 30288 0f71 A4320000 		.4byte	.LFE67-.LFB67
 30289 0f75 01       		.uleb128 0x1
 30290 0f76 9C       		.byte	0x9c
 30291 0f77 09110000 		.4byte	0x1109
 30292 0f7b 25       		.uleb128 0x25
 30293 0f7c 4F0F0000 		.4byte	.LASF230
 30294 0f80 01       		.byte	0x1
 30295 0f81 7A01     		.2byte	0x17a
 30296 0f83 09110000 		.4byte	0x1109
 30297 0f87 03       		.uleb128 0x3
 30298 0f88 91       		.byte	0x91
 30299 0f89 9C50     		.sleb128 -6116
 30300 0f8b 25       		.uleb128 0x25
 30301 0f8c 10160000 		.4byte	.LASF231
 30302 0f90 01       		.byte	0x1
 30303 0f91 7A01     		.2byte	0x17a
 30304 0f93 0F110000 		.4byte	0x110f
 30305 0f97 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 657


 30306 0f98 91       		.byte	0x91
 30307 0f99 9850     		.sleb128 -6120
 30308 0f9b 25       		.uleb128 0x25
 30309 0f9c 28040000 		.4byte	.LASF232
 30310 0fa0 01       		.byte	0x1
 30311 0fa1 7B01     		.2byte	0x17b
 30312 0fa3 0F110000 		.4byte	0x110f
 30313 0fa7 03       		.uleb128 0x3
 30314 0fa8 91       		.byte	0x91
 30315 0fa9 9450     		.sleb128 -6124
 30316 0fab 25       		.uleb128 0x25
 30317 0fac 640E0000 		.4byte	.LASF233
 30318 0fb0 01       		.byte	0x1
 30319 0fb1 7B01     		.2byte	0x17b
 30320 0fb3 0F110000 		.4byte	0x110f
 30321 0fb7 03       		.uleb128 0x3
 30322 0fb8 91       		.byte	0x91
 30323 0fb9 9050     		.sleb128 -6128
 30324 0fbb 25       		.uleb128 0x25
 30325 0fbc 51150000 		.4byte	.LASF234
 30326 0fc0 01       		.byte	0x1
 30327 0fc1 7C01     		.2byte	0x17c
 30328 0fc3 0F110000 		.4byte	0x110f
 30329 0fc7 02       		.uleb128 0x2
 30330 0fc8 91       		.byte	0x91
 30331 0fc9 00       		.sleb128 0
 30332 0fca 25       		.uleb128 0x25
 30333 0fcb 7B090000 		.4byte	.LASF235
 30334 0fcf 01       		.byte	0x1
 30335 0fd0 7C01     		.2byte	0x17c
 30336 0fd2 15110000 		.4byte	0x1115
 30337 0fd6 02       		.uleb128 0x2
 30338 0fd7 91       		.byte	0x91
 30339 0fd8 04       		.sleb128 4
 30340 0fd9 25       		.uleb128 0x25
 30341 0fda CD0C0000 		.4byte	.LASF236
 30342 0fde 01       		.byte	0x1
 30343 0fdf 7D01     		.2byte	0x17d
 30344 0fe1 0F110000 		.4byte	0x110f
 30345 0fe5 02       		.uleb128 0x2
 30346 0fe6 91       		.byte	0x91
 30347 0fe7 08       		.sleb128 8
 30348 0fe8 25       		.uleb128 0x25
 30349 0fe9 1A0A0000 		.4byte	.LASF237
 30350 0fed 01       		.byte	0x1
 30351 0fee 7D01     		.2byte	0x17d
 30352 0ff0 15110000 		.4byte	0x1115
 30353 0ff4 02       		.uleb128 0x2
 30354 0ff5 91       		.byte	0x91
 30355 0ff6 0C       		.sleb128 12
 30356 0ff7 23       		.uleb128 0x23
 30357 0ff8 6E070000 		.4byte	.LASF238
 30358 0ffc 01       		.byte	0x1
 30359 0ffd 8001     		.2byte	0x180
 30360 0fff 1B110000 		.4byte	0x111b
 30361 1003 03       		.uleb128 0x3
 30362 1004 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 658


 30363 1005 E450     		.sleb128 -6044
 30364 1007 23       		.uleb128 0x23
 30365 1008 450A0000 		.4byte	.LASF239
 30366 100c 01       		.byte	0x1
 30367 100d 8101     		.2byte	0x181
 30368 100f A3000000 		.4byte	0xa3
 30369 1013 02       		.uleb128 0x2
 30370 1014 91       		.byte	0x91
 30371 1015 60       		.sleb128 -32
 30372 1016 26       		.uleb128 0x26
 30373 1017 6900     		.ascii	"i\000"
 30374 1019 01       		.byte	0x1
 30375 101a 8401     		.2byte	0x184
 30376 101c 97000000 		.4byte	0x97
 30377 1020 02       		.uleb128 0x2
 30378 1021 91       		.byte	0x91
 30379 1022 67       		.sleb128 -25
 30380 1023 26       		.uleb128 0x26
 30381 1024 6A00     		.ascii	"j\000"
 30382 1026 01       		.byte	0x1
 30383 1027 8401     		.2byte	0x184
 30384 1029 97000000 		.4byte	0x97
 30385 102d 02       		.uleb128 0x2
 30386 102e 91       		.byte	0x91
 30387 102f 66       		.sleb128 -26
 30388 1030 26       		.uleb128 0x26
 30389 1031 69647800 		.ascii	"idx\000"
 30390 1035 01       		.byte	0x1
 30391 1036 8501     		.2byte	0x185
 30392 1038 97000000 		.4byte	0x97
 30393 103c 02       		.uleb128 0x2
 30394 103d 91       		.byte	0x91
 30395 103e 65       		.sleb128 -27
 30396 103f 23       		.uleb128 0x23
 30397 1040 6C130000 		.4byte	.LASF240
 30398 1044 01       		.byte	0x1
 30399 1045 8601     		.2byte	0x186
 30400 1047 97000000 		.4byte	0x97
 30401 104b 02       		.uleb128 0x2
 30402 104c 91       		.byte	0x91
 30403 104d 64       		.sleb128 -28
 30404 104e 26       		.uleb128 0x26
 30405 104f 736F6400 		.ascii	"sod\000"
 30406 1053 01       		.byte	0x1
 30407 1054 8701     		.2byte	0x187
 30408 1056 97000000 		.4byte	0x97
 30409 105a 02       		.uleb128 0x2
 30410 105b 91       		.byte	0x91
 30411 105c 63       		.sleb128 -29
 30412 105d 23       		.uleb128 0x23
 30413 105e 09000000 		.4byte	.LASF241
 30414 1062 01       		.byte	0x1
 30415 1063 8801     		.2byte	0x188
 30416 1065 97000000 		.4byte	0x97
 30417 1069 02       		.uleb128 0x2
 30418 106a 91       		.byte	0x91
 30419 106b 62       		.sleb128 -30
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 659


 30420 106c 23       		.uleb128 0x23
 30421 106d 57170000 		.4byte	.LASF242
 30422 1071 01       		.byte	0x1
 30423 1072 8901     		.2byte	0x189
 30424 1074 2C110000 		.4byte	0x112c
 30425 1078 03       		.uleb128 0x3
 30426 1079 91       		.byte	0x91
 30427 107a B050     		.sleb128 -6096
 30428 107c 23       		.uleb128 0x23
 30429 107d 39150000 		.4byte	.LASF243
 30430 1081 01       		.byte	0x1
 30431 1082 8A01     		.2byte	0x18a
 30432 1084 EB000000 		.4byte	0xeb
 30433 1088 03       		.uleb128 0x3
 30434 1089 91       		.byte	0x91
 30435 108a AC50     		.sleb128 -6100
 30436 108c 23       		.uleb128 0x23
 30437 108d FD130000 		.4byte	.LASF244
 30438 1091 01       		.byte	0x1
 30439 1092 8B01     		.2byte	0x18b
 30440 1094 C7000000 		.4byte	0xc7
 30441 1098 03       		.uleb128 0x3
 30442 1099 91       		.byte	0x91
 30443 109a AA50     		.sleb128 -6102
 30444 109c 23       		.uleb128 0x23
 30445 109d AD0E0000 		.4byte	.LASF245
 30446 10a1 01       		.byte	0x1
 30447 10a2 8C01     		.2byte	0x18c
 30448 10a4 A3000000 		.4byte	0xa3
 30449 10a8 03       		.uleb128 0x3
 30450 10a9 91       		.byte	0x91
 30451 10aa A850     		.sleb128 -6104
 30452 10ac 23       		.uleb128 0x23
 30453 10ad 5A150000 		.4byte	.LASF246
 30454 10b1 01       		.byte	0x1
 30455 10b2 8D01     		.2byte	0x18d
 30456 10b4 D3000000 		.4byte	0xd3
 30457 10b8 03       		.uleb128 0x3
 30458 10b9 91       		.byte	0x91
 30459 10ba A450     		.sleb128 -6108
 30460 10bc 23       		.uleb128 0x23
 30461 10bd 62100000 		.4byte	.LASF247
 30462 10c1 01       		.byte	0x1
 30463 10c2 8E01     		.2byte	0x18e
 30464 10c4 AF000000 		.4byte	0xaf
 30465 10c8 03       		.uleb128 0x3
 30466 10c9 91       		.byte	0x91
 30467 10ca A050     		.sleb128 -6112
 30468 10cc 23       		.uleb128 0x23
 30469 10cd FB0F0000 		.4byte	.LASF248
 30470 10d1 01       		.byte	0x1
 30471 10d2 9001     		.2byte	0x190
 30472 10d4 97000000 		.4byte	0x97
 30473 10d8 02       		.uleb128 0x2
 30474 10d9 91       		.byte	0x91
 30475 10da 5F       		.sleb128 -33
 30476 10db 23       		.uleb128 0x23
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 660


 30477 10dc DC010000 		.4byte	.LASF249
 30478 10e0 01       		.byte	0x1
 30479 10e1 9101     		.2byte	0x191
 30480 10e3 97000000 		.4byte	0x97
 30481 10e7 02       		.uleb128 0x2
 30482 10e8 91       		.byte	0x91
 30483 10e9 5E       		.sleb128 -34
 30484 10ea 23       		.uleb128 0x23
 30485 10eb 2A0D0000 		.4byte	.LASF250
 30486 10ef 01       		.byte	0x1
 30487 10f0 9301     		.2byte	0x193
 30488 10f2 0F110000 		.4byte	0x110f
 30489 10f6 02       		.uleb128 0x2
 30490 10f7 91       		.byte	0x91
 30491 10f8 58       		.sleb128 -40
 30492 10f9 23       		.uleb128 0x23
 30493 10fa 70020000 		.4byte	.LASF251
 30494 10fe 01       		.byte	0x1
 30495 10ff 9401     		.2byte	0x194
 30496 1101 0F110000 		.4byte	0x110f
 30497 1105 02       		.uleb128 0x2
 30498 1106 91       		.byte	0x91
 30499 1107 54       		.sleb128 -44
 30500 1108 00       		.byte	0
 30501 1109 07       		.uleb128 0x7
 30502 110a 04       		.byte	0x4
 30503 110b 0F110000 		.4byte	0x110f
 30504 110f 07       		.uleb128 0x7
 30505 1110 04       		.byte	0x4
 30506 1111 97000000 		.4byte	0x97
 30507 1115 07       		.uleb128 0x7
 30508 1116 04       		.byte	0x4
 30509 1117 25010000 		.4byte	0x125
 30510 111b 09       		.uleb128 0x9
 30511 111c 97000000 		.4byte	0x97
 30512 1120 2C110000 		.4byte	0x112c
 30513 1124 24       		.uleb128 0x24
 30514 1125 18010000 		.4byte	0x118
 30515 1129 6F17     		.2byte	0x176f
 30516 112b 00       		.byte	0
 30517 112c 09       		.uleb128 0x9
 30518 112d F9000000 		.4byte	0xf9
 30519 1131 3C110000 		.4byte	0x113c
 30520 1135 0A       		.uleb128 0xa
 30521 1136 18010000 		.4byte	0x118
 30522 113a 31       		.byte	0x31
 30523 113b 00       		.byte	0
 30524 113c 22       		.uleb128 0x22
 30525 113d 47110000 		.4byte	.LASF252
 30526 1141 01       		.byte	0x1
 30527 1142 8203     		.2byte	0x382
 30528 1144 00000000 		.4byte	.LFB68
 30529 1148 48190000 		.4byte	.LFE68-.LFB68
 30530 114c 01       		.uleb128 0x1
 30531 114d 9C       		.byte	0x9c
 30532 114e 1A130000 		.4byte	0x131a
 30533 1152 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 661


 30534 1153 86080000 		.4byte	.LASF253
 30535 1157 01       		.byte	0x1
 30536 1158 8203     		.2byte	0x382
 30537 115a A3000000 		.4byte	0xa3
 30538 115e 03       		.uleb128 0x3
 30539 115f 91       		.byte	0x91
 30540 1160 E674     		.sleb128 -1434
 30541 1162 26       		.uleb128 0x26
 30542 1163 6900     		.ascii	"i\000"
 30543 1165 01       		.byte	0x1
 30544 1166 8303     		.2byte	0x383
 30545 1168 97000000 		.4byte	0x97
 30546 116c 02       		.uleb128 0x2
 30547 116d 91       		.byte	0x91
 30548 116e 67       		.sleb128 -25
 30549 116f 26       		.uleb128 0x26
 30550 1170 6A00     		.ascii	"j\000"
 30551 1172 01       		.byte	0x1
 30552 1173 8303     		.2byte	0x383
 30553 1175 97000000 		.4byte	0x97
 30554 1179 02       		.uleb128 0x2
 30555 117a 91       		.byte	0x91
 30556 117b 66       		.sleb128 -26
 30557 117c 26       		.uleb128 0x26
 30558 117d 736F6400 		.ascii	"sod\000"
 30559 1181 01       		.byte	0x1
 30560 1182 8403     		.2byte	0x384
 30561 1184 97000000 		.4byte	0x97
 30562 1188 02       		.uleb128 0x2
 30563 1189 91       		.byte	0x91
 30564 118a 65       		.sleb128 -27
 30565 118b 23       		.uleb128 0x23
 30566 118c 140D0000 		.4byte	.LASF254
 30567 1190 01       		.byte	0x1
 30568 1191 8503     		.2byte	0x385
 30569 1193 97000000 		.4byte	0x97
 30570 1197 02       		.uleb128 0x2
 30571 1198 91       		.byte	0x91
 30572 1199 5A       		.sleb128 -38
 30573 119a 23       		.uleb128 0x23
 30574 119b FD130000 		.4byte	.LASF244
 30575 119f 01       		.byte	0x1
 30576 11a0 8603     		.2byte	0x386
 30577 11a2 C7000000 		.4byte	0xc7
 30578 11a6 02       		.uleb128 0x2
 30579 11a7 91       		.byte	0x91
 30580 11a8 58       		.sleb128 -40
 30581 11a9 23       		.uleb128 0x23
 30582 11aa AD0E0000 		.4byte	.LASF245
 30583 11ae 01       		.byte	0x1
 30584 11af 8703     		.2byte	0x387
 30585 11b1 A3000000 		.4byte	0xa3
 30586 11b5 02       		.uleb128 0x2
 30587 11b6 91       		.byte	0x91
 30588 11b7 56       		.sleb128 -42
 30589 11b8 23       		.uleb128 0x23
 30590 11b9 5A150000 		.4byte	.LASF246
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 662


 30591 11bd 01       		.byte	0x1
 30592 11be 8803     		.2byte	0x388
 30593 11c0 D3000000 		.4byte	0xd3
 30594 11c4 02       		.uleb128 0x2
 30595 11c5 91       		.byte	0x91
 30596 11c6 50       		.sleb128 -48
 30597 11c7 23       		.uleb128 0x23
 30598 11c8 62100000 		.4byte	.LASF247
 30599 11cc 01       		.byte	0x1
 30600 11cd 8903     		.2byte	0x389
 30601 11cf AF000000 		.4byte	0xaf
 30602 11d3 02       		.uleb128 0x2
 30603 11d4 91       		.byte	0x91
 30604 11d5 4C       		.sleb128 -52
 30605 11d6 23       		.uleb128 0x23
 30606 11d7 39150000 		.4byte	.LASF243
 30607 11db 01       		.byte	0x1
 30608 11dc 8A03     		.2byte	0x38a
 30609 11de EB000000 		.4byte	0xeb
 30610 11e2 02       		.uleb128 0x2
 30611 11e3 91       		.byte	0x91
 30612 11e4 48       		.sleb128 -56
 30613 11e5 23       		.uleb128 0x23
 30614 11e6 FB0F0000 		.4byte	.LASF248
 30615 11ea 01       		.byte	0x1
 30616 11eb 8C03     		.2byte	0x38c
 30617 11ed 97000000 		.4byte	0x97
 30618 11f1 02       		.uleb128 0x2
 30619 11f2 91       		.byte	0x91
 30620 11f3 5D       		.sleb128 -35
 30621 11f4 23       		.uleb128 0x23
 30622 11f5 DC010000 		.4byte	.LASF249
 30623 11f9 01       		.byte	0x1
 30624 11fa 8D03     		.2byte	0x38d
 30625 11fc 97000000 		.4byte	0x97
 30626 1200 02       		.uleb128 0x2
 30627 1201 91       		.byte	0x91
 30628 1202 5C       		.sleb128 -36
 30629 1203 23       		.uleb128 0x23
 30630 1204 3E040000 		.4byte	.LASF255
 30631 1208 01       		.byte	0x1
 30632 1209 9003     		.2byte	0x390
 30633 120b 1A130000 		.4byte	0x131a
 30634 120f 02       		.uleb128 0x2
 30635 1210 91       		.byte	0x91
 30636 1211 60       		.sleb128 -32
 30637 1212 23       		.uleb128 0x23
 30638 1213 4F0F0000 		.4byte	.LASF230
 30639 1217 01       		.byte	0x1
 30640 1218 9803     		.2byte	0x398
 30641 121a 20130000 		.4byte	0x1320
 30642 121e 03       		.uleb128 0x3
 30643 121f 91       		.byte	0x91
 30644 1220 FC7C     		.sleb128 -388
 30645 1222 23       		.uleb128 0x23
 30646 1223 10160000 		.4byte	.LASF231
 30647 1227 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 663


 30648 1228 F603     		.2byte	0x3f6
 30649 122a 30130000 		.4byte	0x1330
 30650 122e 03       		.uleb128 0x3
 30651 122f 91       		.byte	0x91
 30652 1230 A87C     		.sleb128 -472
 30653 1232 23       		.uleb128 0x23
 30654 1233 28040000 		.4byte	.LASF232
 30655 1237 01       		.byte	0x1
 30656 1238 1204     		.2byte	0x412
 30657 123a 30130000 		.4byte	0x1330
 30658 123e 03       		.uleb128 0x3
 30659 123f 91       		.byte	0x91
 30660 1240 D47B     		.sleb128 -556
 30661 1242 23       		.uleb128 0x23
 30662 1243 640E0000 		.4byte	.LASF233
 30663 1247 01       		.byte	0x1
 30664 1248 2E04     		.2byte	0x42e
 30665 124a 30130000 		.4byte	0x1330
 30666 124e 03       		.uleb128 0x3
 30667 124f 91       		.byte	0x91
 30668 1250 807B     		.sleb128 -640
 30669 1252 23       		.uleb128 0x23
 30670 1253 7B090000 		.4byte	.LASF235
 30671 1257 01       		.byte	0x1
 30672 1258 4B04     		.2byte	0x44b
 30673 125a 40130000 		.4byte	0x1340
 30674 125e 03       		.uleb128 0x3
 30675 125f 91       		.byte	0x91
 30676 1260 B478     		.sleb128 -972
 30677 1262 23       		.uleb128 0x23
 30678 1263 98160000 		.4byte	.LASF256
 30679 1267 01       		.byte	0x1
 30680 1268 6804     		.2byte	0x468
 30681 126a 50130000 		.4byte	0x1350
 30682 126e 03       		.uleb128 0x3
 30683 126f 91       		.byte	0x91
 30684 1270 BC77     		.sleb128 -1092
 30685 1272 23       		.uleb128 0x23
 30686 1273 2E000000 		.4byte	.LASF257
 30687 1277 01       		.byte	0x1
 30688 1278 6B04     		.2byte	0x46b
 30689 127a 60130000 		.4byte	0x1360
 30690 127e 03       		.uleb128 0x3
 30691 127f 91       		.byte	0x91
 30692 1280 8477     		.sleb128 -1148
 30693 1282 23       		.uleb128 0x23
 30694 1283 1A0A0000 		.4byte	.LASF237
 30695 1287 01       		.byte	0x1
 30696 1288 7304     		.2byte	0x473
 30697 128a 70130000 		.4byte	0x1370
 30698 128e 03       		.uleb128 0x3
 30699 128f 91       		.byte	0x91
 30700 1290 D476     		.sleb128 -1196
 30701 1292 23       		.uleb128 0x23
 30702 1293 51150000 		.4byte	.LASF234
 30703 1297 01       		.byte	0x1
 30704 1298 8204     		.2byte	0x482
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 664


 30705 129a 80130000 		.4byte	0x1380
 30706 129e 03       		.uleb128 0x3
 30707 129f 91       		.byte	0x91
 30708 12a0 B076     		.sleb128 -1232
 30709 12a2 23       		.uleb128 0x23
 30710 12a3 550F0000 		.4byte	.LASF258
 30711 12a7 01       		.byte	0x1
 30712 12a8 8304     		.2byte	0x483
 30713 12aa 90130000 		.4byte	0x1390
 30714 12ae 03       		.uleb128 0x3
 30715 12af 91       		.byte	0x91
 30716 12b0 A476     		.sleb128 -1244
 30717 12b2 23       		.uleb128 0x23
 30718 12b3 4E0E0000 		.4byte	.LASF259
 30719 12b7 01       		.byte	0x1
 30720 12b8 8404     		.2byte	0x484
 30721 12ba A0130000 		.4byte	0x13a0
 30722 12be 03       		.uleb128 0x3
 30723 12bf 91       		.byte	0x91
 30724 12c0 9076     		.sleb128 -1264
 30725 12c2 23       		.uleb128 0x23
 30726 12c3 74100000 		.4byte	.LASF260
 30727 12c7 01       		.byte	0x1
 30728 12c8 8504     		.2byte	0x485
 30729 12ca 97000000 		.4byte	0x97
 30730 12ce 02       		.uleb128 0x2
 30731 12cf 91       		.byte	0x91
 30732 12d0 5B       		.sleb128 -37
 30733 12d1 23       		.uleb128 0x23
 30734 12d2 CD0C0000 		.4byte	.LASF236
 30735 12d6 01       		.byte	0x1
 30736 12d7 8E04     		.2byte	0x48e
 30737 12d9 30130000 		.4byte	0x1330
 30738 12dd 03       		.uleb128 0x3
 30739 12de 91       		.byte	0x91
 30740 12df BC75     		.sleb128 -1348
 30741 12e1 23       		.uleb128 0x23
 30742 12e2 BF160000 		.4byte	.LASF261
 30743 12e6 01       		.byte	0x1
 30744 12e7 9904     		.2byte	0x499
 30745 12e9 30130000 		.4byte	0x1330
 30746 12ed 03       		.uleb128 0x3
 30747 12ee 91       		.byte	0x91
 30748 12ef E874     		.sleb128 -1432
 30749 12f1 1E       		.uleb128 0x1e
 30750 12f2 B2180000 		.4byte	.LBB22
 30751 12f6 86000000 		.4byte	.LBE22-.LBB22
 30752 12fa 26       		.uleb128 0x26
 30753 12fb 69647800 		.ascii	"idx\000"
 30754 12ff 01       		.byte	0x1
 30755 1300 0205     		.2byte	0x502
 30756 1302 97000000 		.4byte	0x97
 30757 1306 02       		.uleb128 0x2
 30758 1307 91       		.byte	0x91
 30759 1308 5F       		.sleb128 -33
 30760 1309 23       		.uleb128 0x23
 30761 130a CA060000 		.4byte	.LASF262
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 665


 30762 130e 01       		.byte	0x1
 30763 130f 0205     		.2byte	0x502
 30764 1311 97000000 		.4byte	0x97
 30765 1315 02       		.uleb128 0x2
 30766 1316 91       		.byte	0x91
 30767 1317 5E       		.sleb128 -34
 30768 1318 00       		.byte	0
 30769 1319 00       		.byte	0
 30770 131a 07       		.uleb128 0x7
 30771 131b 04       		.byte	0x4
 30772 131c 9C0B0000 		.4byte	0xb9c
 30773 1320 09       		.uleb128 0x9
 30774 1321 0F110000 		.4byte	0x110f
 30775 1325 30130000 		.4byte	0x1330
 30776 1329 0A       		.uleb128 0xa
 30777 132a 18010000 		.4byte	0x118
 30778 132e 52       		.byte	0x52
 30779 132f 00       		.byte	0
 30780 1330 09       		.uleb128 0x9
 30781 1331 97000000 		.4byte	0x97
 30782 1335 40130000 		.4byte	0x1340
 30783 1339 0A       		.uleb128 0xa
 30784 133a 18010000 		.4byte	0x118
 30785 133e 52       		.byte	0x52
 30786 133f 00       		.byte	0
 30787 1340 09       		.uleb128 0x9
 30788 1341 25010000 		.4byte	0x125
 30789 1345 50130000 		.4byte	0x1350
 30790 1349 0A       		.uleb128 0xa
 30791 134a 18010000 		.4byte	0x118
 30792 134e 52       		.byte	0x52
 30793 134f 00       		.byte	0
 30794 1350 09       		.uleb128 0x9
 30795 1351 F9000000 		.4byte	0xf9
 30796 1355 60130000 		.4byte	0x1360
 30797 1359 0A       		.uleb128 0xa
 30798 135a 18010000 		.4byte	0x118
 30799 135e 75       		.byte	0x75
 30800 135f 00       		.byte	0
 30801 1360 09       		.uleb128 0x9
 30802 1361 F9000000 		.4byte	0xf9
 30803 1365 70130000 		.4byte	0x1370
 30804 1369 0A       		.uleb128 0xa
 30805 136a 18010000 		.4byte	0x118
 30806 136e 37       		.byte	0x37
 30807 136f 00       		.byte	0
 30808 1370 09       		.uleb128 0x9
 30809 1371 25010000 		.4byte	0x125
 30810 1375 80130000 		.4byte	0x1380
 30811 1379 0A       		.uleb128 0xa
 30812 137a 18010000 		.4byte	0x118
 30813 137e 0B       		.byte	0xb
 30814 137f 00       		.byte	0
 30815 1380 09       		.uleb128 0x9
 30816 1381 97000000 		.4byte	0x97
 30817 1385 90130000 		.4byte	0x1390
 30818 1389 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 666


 30819 138a 18010000 		.4byte	0x118
 30820 138e 20       		.byte	0x20
 30821 138f 00       		.byte	0
 30822 1390 09       		.uleb128 0x9
 30823 1391 97000000 		.4byte	0x97
 30824 1395 A0130000 		.4byte	0x13a0
 30825 1399 0A       		.uleb128 0xa
 30826 139a 18010000 		.4byte	0x118
 30827 139e 08       		.byte	0x8
 30828 139f 00       		.byte	0
 30829 13a0 09       		.uleb128 0x9
 30830 13a1 97000000 		.4byte	0x97
 30831 13a5 B0130000 		.4byte	0x13b0
 30832 13a9 0A       		.uleb128 0xa
 30833 13aa 18010000 		.4byte	0x118
 30834 13ae 11       		.byte	0x11
 30835 13af 00       		.byte	0
 30836 13b0 22       		.uleb128 0x22
 30837 13b1 D2040000 		.4byte	.LASF263
 30838 13b5 01       		.byte	0x1
 30839 13b6 1305     		.2byte	0x513
 30840 13b8 00000000 		.4byte	.LFB69
 30841 13bc DC140000 		.4byte	.LFE69-.LFB69
 30842 13c0 01       		.uleb128 0x1
 30843 13c1 9C       		.byte	0x9c
 30844 13c2 52140000 		.4byte	0x1452
 30845 13c6 25       		.uleb128 0x25
 30846 13c7 86080000 		.4byte	.LASF253
 30847 13cb 01       		.byte	0x1
 30848 13cc 1305     		.2byte	0x513
 30849 13ce A3000000 		.4byte	0xa3
 30850 13d2 02       		.uleb128 0x2
 30851 13d3 91       		.byte	0x91
 30852 13d4 56       		.sleb128 -42
 30853 13d5 26       		.uleb128 0x26
 30854 13d6 6900     		.ascii	"i\000"
 30855 13d8 01       		.byte	0x1
 30856 13d9 1505     		.2byte	0x515
 30857 13db 97000000 		.4byte	0x97
 30858 13df 02       		.uleb128 0x2
 30859 13e0 91       		.byte	0x91
 30860 13e1 67       		.sleb128 -25
 30861 13e2 26       		.uleb128 0x26
 30862 13e3 6A00     		.ascii	"j\000"
 30863 13e5 01       		.byte	0x1
 30864 13e6 1505     		.2byte	0x515
 30865 13e8 97000000 		.4byte	0x97
 30866 13ec 02       		.uleb128 0x2
 30867 13ed 91       		.byte	0x91
 30868 13ee 66       		.sleb128 -26
 30869 13ef 23       		.uleb128 0x23
 30870 13f0 7F0E0000 		.4byte	.LASF264
 30871 13f4 01       		.byte	0x1
 30872 13f5 1605     		.2byte	0x516
 30873 13f7 97000000 		.4byte	0x97
 30874 13fb 02       		.uleb128 0x2
 30875 13fc 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 667


 30876 13fd 62       		.sleb128 -30
 30877 13fe 23       		.uleb128 0x23
 30878 13ff 39150000 		.4byte	.LASF243
 30879 1403 01       		.byte	0x1
 30880 1404 1705     		.2byte	0x517
 30881 1406 EB000000 		.4byte	0xeb
 30882 140a 02       		.uleb128 0x2
 30883 140b 91       		.byte	0x91
 30884 140c 5C       		.sleb128 -36
 30885 140d 23       		.uleb128 0x23
 30886 140e AB040000 		.4byte	.LASF265
 30887 1412 01       		.byte	0x1
 30888 1413 1705     		.2byte	0x517
 30889 1415 EB000000 		.4byte	0xeb
 30890 1419 02       		.uleb128 0x2
 30891 141a 91       		.byte	0x91
 30892 141b 58       		.sleb128 -40
 30893 141c 23       		.uleb128 0x23
 30894 141d FB0F0000 		.4byte	.LASF248
 30895 1421 01       		.byte	0x1
 30896 1422 1905     		.2byte	0x519
 30897 1424 97000000 		.4byte	0x97
 30898 1428 02       		.uleb128 0x2
 30899 1429 91       		.byte	0x91
 30900 142a 64       		.sleb128 -28
 30901 142b 23       		.uleb128 0x23
 30902 142c DC010000 		.4byte	.LASF249
 30903 1430 01       		.byte	0x1
 30904 1431 1A05     		.2byte	0x51a
 30905 1433 97000000 		.4byte	0x97
 30906 1437 02       		.uleb128 0x2
 30907 1438 91       		.byte	0x91
 30908 1439 63       		.sleb128 -29
 30909 143a 1E       		.uleb128 0x1e
 30910 143b 080B0000 		.4byte	.LBB23
 30911 143f 26000000 		.4byte	.LBE23-.LBB23
 30912 1443 26       		.uleb128 0x26
 30913 1444 6900     		.ascii	"i\000"
 30914 1446 01       		.byte	0x1
 30915 1447 C105     		.2byte	0x5c1
 30916 1449 97000000 		.4byte	0x97
 30917 144d 02       		.uleb128 0x2
 30918 144e 91       		.byte	0x91
 30919 144f 65       		.sleb128 -27
 30920 1450 00       		.byte	0
 30921 1451 00       		.byte	0
 30922 1452 22       		.uleb128 0x22
 30923 1453 A50A0000 		.4byte	.LASF266
 30924 1457 01       		.byte	0x1
 30925 1458 6D06     		.2byte	0x66d
 30926 145a 00000000 		.4byte	.LFB70
 30927 145e F40D0000 		.4byte	.LFE70-.LFB70
 30928 1462 01       		.uleb128 0x1
 30929 1463 9C       		.byte	0x9c
 30930 1464 E1150000 		.4byte	0x15e1
 30931 1468 25       		.uleb128 0x25
 30932 1469 86080000 		.4byte	.LASF253
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 668


 30933 146d 01       		.byte	0x1
 30934 146e 6D06     		.2byte	0x66d
 30935 1470 A3000000 		.4byte	0xa3
 30936 1474 03       		.uleb128 0x3
 30937 1475 91       		.byte	0x91
 30938 1476 CE72     		.sleb128 -1714
 30939 1478 23       		.uleb128 0x23
 30940 1479 6E070000 		.4byte	.LASF238
 30941 147d 01       		.byte	0x1
 30942 147e 7006     		.2byte	0x670
 30943 1480 E1150000 		.4byte	0x15e1
 30944 1484 03       		.uleb128 0x3
 30945 1485 91       		.byte	0x91
 30946 1486 DC74     		.sleb128 -1444
 30947 1488 23       		.uleb128 0x23
 30948 1489 EA130000 		.4byte	.LASF267
 30949 148d 01       		.byte	0x1
 30950 148e 7706     		.2byte	0x677
 30951 1490 A3000000 		.4byte	0xa3
 30952 1494 02       		.uleb128 0x2
 30953 1495 91       		.byte	0x91
 30954 1496 62       		.sleb128 -30
 30955 1497 23       		.uleb128 0x23
 30956 1498 DE060000 		.4byte	.LASF268
 30957 149c 01       		.byte	0x1
 30958 149d 7806     		.2byte	0x678
 30959 149f A3000000 		.4byte	0xa3
 30960 14a3 02       		.uleb128 0x2
 30961 14a4 91       		.byte	0x91
 30962 14a5 6E       		.sleb128 -18
 30963 14a6 23       		.uleb128 0x23
 30964 14a7 E30A0000 		.4byte	.LASF269
 30965 14ab 01       		.byte	0x1
 30966 14ac 7906     		.2byte	0x679
 30967 14ae A3000000 		.4byte	0xa3
 30968 14b2 02       		.uleb128 0x2
 30969 14b3 91       		.byte	0x91
 30970 14b4 60       		.sleb128 -32
 30971 14b5 23       		.uleb128 0x23
 30972 14b6 450A0000 		.4byte	.LASF239
 30973 14ba 01       		.byte	0x1
 30974 14bb 7A06     		.2byte	0x67a
 30975 14bd A3000000 		.4byte	0xa3
 30976 14c1 02       		.uleb128 0x2
 30977 14c2 91       		.byte	0x91
 30978 14c3 5E       		.sleb128 -34
 30979 14c4 26       		.uleb128 0x26
 30980 14c5 6900     		.ascii	"i\000"
 30981 14c7 01       		.byte	0x1
 30982 14c8 8206     		.2byte	0x682
 30983 14ca A3000000 		.4byte	0xa3
 30984 14ce 02       		.uleb128 0x2
 30985 14cf 91       		.byte	0x91
 30986 14d0 6C       		.sleb128 -20
 30987 14d1 26       		.uleb128 0x26
 30988 14d2 6A00     		.ascii	"j\000"
 30989 14d4 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 669


 30990 14d5 8206     		.2byte	0x682
 30991 14d7 A3000000 		.4byte	0xa3
 30992 14db 02       		.uleb128 0x2
 30993 14dc 91       		.byte	0x91
 30994 14dd 6A       		.sleb128 -22
 30995 14de 26       		.uleb128 0x26
 30996 14df 6B00     		.ascii	"k\000"
 30997 14e1 01       		.byte	0x1
 30998 14e2 8206     		.2byte	0x682
 30999 14e4 A3000000 		.4byte	0xa3
 31000 14e8 02       		.uleb128 0x2
 31001 14e9 91       		.byte	0x91
 31002 14ea 68       		.sleb128 -24
 31003 14eb 26       		.uleb128 0x26
 31004 14ec 6800     		.ascii	"h\000"
 31005 14ee 01       		.byte	0x1
 31006 14ef 8206     		.2byte	0x682
 31007 14f1 A3000000 		.4byte	0xa3
 31008 14f5 02       		.uleb128 0x2
 31009 14f6 91       		.byte	0x91
 31010 14f7 66       		.sleb128 -26
 31011 14f8 23       		.uleb128 0x23
 31012 14f9 D3060000 		.4byte	.LASF270
 31013 14fd 01       		.byte	0x1
 31014 14fe 8306     		.2byte	0x683
 31015 1500 A3000000 		.4byte	0xa3
 31016 1504 02       		.uleb128 0x2
 31017 1505 91       		.byte	0x91
 31018 1506 5C       		.sleb128 -36
 31019 1507 23       		.uleb128 0x23
 31020 1508 10100000 		.4byte	.LASF271
 31021 150c 01       		.byte	0x1
 31022 150d 8606     		.2byte	0x686
 31023 150f 30010000 		.4byte	0x130
 31024 1513 03       		.uleb128 0x3
 31025 1514 91       		.byte	0x91
 31026 1515 C074     		.sleb128 -1472
 31027 1517 23       		.uleb128 0x23
 31028 1518 B1130000 		.4byte	.LASF272
 31029 151c 01       		.byte	0x1
 31030 151d 8706     		.2byte	0x687
 31031 151f F2150000 		.4byte	0x15f2
 31032 1523 03       		.uleb128 0x3
 31033 1524 91       		.byte	0x91
 31034 1525 B474     		.sleb128 -1484
 31035 1527 23       		.uleb128 0x23
 31036 1528 14090000 		.4byte	.LASF273
 31037 152c 01       		.byte	0x1
 31038 152d 8806     		.2byte	0x688
 31039 152f 02160000 		.4byte	0x1602
 31040 1533 03       		.uleb128 0x3
 31041 1534 91       		.byte	0x91
 31042 1535 A074     		.sleb128 -1504
 31043 1537 23       		.uleb128 0x23
 31044 1538 27000000 		.4byte	.LASF274
 31045 153c 01       		.byte	0x1
 31046 153d 8906     		.2byte	0x689
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 670


 31047 153f 12160000 		.4byte	0x1612
 31048 1543 03       		.uleb128 0x3
 31049 1544 91       		.byte	0x91
 31050 1545 9074     		.sleb128 -1520
 31051 1547 23       		.uleb128 0x23
 31052 1548 ED100000 		.4byte	.LASF275
 31053 154c 01       		.byte	0x1
 31054 154d 8A06     		.2byte	0x68a
 31055 154f 22160000 		.4byte	0x1622
 31056 1553 03       		.uleb128 0x3
 31057 1554 91       		.byte	0x91
 31058 1555 E473     		.sleb128 -1564
 31059 1557 23       		.uleb128 0x23
 31060 1558 E2020000 		.4byte	.LASF276
 31061 155c 01       		.byte	0x1
 31062 155d 8B06     		.2byte	0x68b
 31063 155f 30010000 		.4byte	0x130
 31064 1563 03       		.uleb128 0x3
 31065 1564 91       		.byte	0x91
 31066 1565 C873     		.sleb128 -1592
 31067 1567 23       		.uleb128 0x23
 31068 1568 4D020000 		.4byte	.LASF277
 31069 156c 01       		.byte	0x1
 31070 156d 8E06     		.2byte	0x68e
 31071 156f 97000000 		.4byte	0x97
 31072 1573 02       		.uleb128 0x2
 31073 1574 91       		.byte	0x91
 31074 1575 5B       		.sleb128 -37
 31075 1576 23       		.uleb128 0x23
 31076 1577 30060000 		.4byte	.LASF278
 31077 157b 01       		.byte	0x1
 31078 157c 8F06     		.2byte	0x68f
 31079 157e 97000000 		.4byte	0x97
 31080 1582 02       		.uleb128 0x2
 31081 1583 91       		.byte	0x91
 31082 1584 5A       		.sleb128 -38
 31083 1585 23       		.uleb128 0x23
 31084 1586 59130000 		.4byte	.LASF279
 31085 158a 01       		.byte	0x1
 31086 158b 9006     		.2byte	0x690
 31087 158d 97000000 		.4byte	0x97
 31088 1591 02       		.uleb128 0x2
 31089 1592 91       		.byte	0x91
 31090 1593 59       		.sleb128 -39
 31091 1594 23       		.uleb128 0x23
 31092 1595 D8130000 		.4byte	.LASF280
 31093 1599 01       		.byte	0x1
 31094 159a 9106     		.2byte	0x691
 31095 159c 97000000 		.4byte	0x97
 31096 15a0 02       		.uleb128 0x2
 31097 15a1 91       		.byte	0x91
 31098 15a2 58       		.sleb128 -40
 31099 15a3 23       		.uleb128 0x23
 31100 15a4 3E060000 		.4byte	.LASF281
 31101 15a8 01       		.byte	0x1
 31102 15a9 9206     		.2byte	0x692
 31103 15ab 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 671


 31104 15af 02       		.uleb128 0x2
 31105 15b0 91       		.byte	0x91
 31106 15b1 57       		.sleb128 -41
 31107 15b2 23       		.uleb128 0x23
 31108 15b3 9B010000 		.4byte	.LASF282
 31109 15b7 01       		.byte	0x1
 31110 15b8 9306     		.2byte	0x693
 31111 15ba 97000000 		.4byte	0x97
 31112 15be 02       		.uleb128 0x2
 31113 15bf 91       		.byte	0x91
 31114 15c0 65       		.sleb128 -27
 31115 15c1 23       		.uleb128 0x23
 31116 15c2 98160000 		.4byte	.LASF256
 31117 15c6 01       		.byte	0x1
 31118 15c7 9506     		.2byte	0x695
 31119 15c9 50130000 		.4byte	0x1350
 31120 15cd 03       		.uleb128 0x3
 31121 15ce 91       		.byte	0x91
 31122 15cf D072     		.sleb128 -1712
 31123 15d1 23       		.uleb128 0x23
 31124 15d2 BF040000 		.4byte	.LASF283
 31125 15d6 01       		.byte	0x1
 31126 15d7 9606     		.2byte	0x696
 31127 15d9 97000000 		.4byte	0x97
 31128 15dd 02       		.uleb128 0x2
 31129 15de 91       		.byte	0x91
 31130 15df 56       		.sleb128 -42
 31131 15e0 00       		.byte	0
 31132 15e1 09       		.uleb128 0x9
 31133 15e2 97000000 		.4byte	0x97
 31134 15e6 F2150000 		.4byte	0x15f2
 31135 15ea 24       		.uleb128 0x24
 31136 15eb 18010000 		.4byte	0x118
 31137 15ef 7805     		.2byte	0x578
 31138 15f1 00       		.byte	0
 31139 15f2 09       		.uleb128 0x9
 31140 15f3 F9000000 		.4byte	0xf9
 31141 15f7 02160000 		.4byte	0x1602
 31142 15fb 0A       		.uleb128 0xa
 31143 15fc 18010000 		.4byte	0x118
 31144 1600 0A       		.byte	0xa
 31145 1601 00       		.byte	0
 31146 1602 09       		.uleb128 0x9
 31147 1603 F9000000 		.4byte	0xf9
 31148 1607 12160000 		.4byte	0x1612
 31149 160b 0A       		.uleb128 0xa
 31150 160c 18010000 		.4byte	0x118
 31151 1610 13       		.byte	0x13
 31152 1611 00       		.byte	0
 31153 1612 09       		.uleb128 0x9
 31154 1613 F9000000 		.4byte	0xf9
 31155 1617 22160000 		.4byte	0x1622
 31156 161b 0A       		.uleb128 0xa
 31157 161c 18010000 		.4byte	0x118
 31158 1620 0F       		.byte	0xf
 31159 1621 00       		.byte	0
 31160 1622 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 672


 31161 1623 F9000000 		.4byte	0xf9
 31162 1627 32160000 		.4byte	0x1632
 31163 162b 0A       		.uleb128 0xa
 31164 162c 18010000 		.4byte	0x118
 31165 1630 29       		.byte	0x29
 31166 1631 00       		.byte	0
 31167 1632 27       		.uleb128 0x27
 31168 1633 06040000 		.4byte	.LASF321
 31169 1637 01       		.byte	0x1
 31170 1638 5C07     		.2byte	0x75c
 31171 163a 00000000 		.4byte	.LFB71
 31172 163e 90000000 		.4byte	.LFE71-.LFB71
 31173 1642 01       		.uleb128 0x1
 31174 1643 9C       		.byte	0x9c
 31175 1644 63160000 		.4byte	0x1663
 31176 1648 26       		.uleb128 0x26
 31177 1649 6900     		.ascii	"i\000"
 31178 164b 01       		.byte	0x1
 31179 164c 5E07     		.2byte	0x75e
 31180 164e 97000000 		.4byte	0x97
 31181 1652 02       		.uleb128 0x2
 31182 1653 91       		.byte	0x91
 31183 1654 6F       		.sleb128 -17
 31184 1655 26       		.uleb128 0x26
 31185 1656 6A00     		.ascii	"j\000"
 31186 1658 01       		.byte	0x1
 31187 1659 5E07     		.2byte	0x75e
 31188 165b 97000000 		.4byte	0x97
 31189 165f 02       		.uleb128 0x2
 31190 1660 91       		.byte	0x91
 31191 1661 6E       		.sleb128 -18
 31192 1662 00       		.byte	0
 31193 1663 22       		.uleb128 0x22
 31194 1664 BB010000 		.4byte	.LASF284
 31195 1668 01       		.byte	0x1
 31196 1669 6F07     		.2byte	0x76f
 31197 166b 00000000 		.4byte	.LFB72
 31198 166f 681C0000 		.4byte	.LFE72-.LFB72
 31199 1673 01       		.uleb128 0x1
 31200 1674 9C       		.byte	0x9c
 31201 1675 0E170000 		.4byte	0x170e
 31202 1679 25       		.uleb128 0x25
 31203 167a 1A100000 		.4byte	.LASF285
 31204 167e 01       		.byte	0x1
 31205 167f 6F07     		.2byte	0x76f
 31206 1681 1F010000 		.4byte	0x11f
 31207 1685 03       		.uleb128 0x3
 31208 1686 91       		.byte	0x91
 31209 1687 D47E     		.sleb128 -172
 31210 1689 26       		.uleb128 0x26
 31211 168a 6900     		.ascii	"i\000"
 31212 168c 01       		.byte	0x1
 31213 168d 7107     		.2byte	0x771
 31214 168f 73000000 		.4byte	0x73
 31215 1693 02       		.uleb128 0x2
 31216 1694 91       		.byte	0x91
 31217 1695 54       		.sleb128 -44
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 673


 31218 1696 23       		.uleb128 0x23
 31219 1697 3E040000 		.4byte	.LASF255
 31220 169b 01       		.byte	0x1
 31221 169c 7307     		.2byte	0x773
 31222 169e 1A130000 		.4byte	0x131a
 31223 16a2 02       		.uleb128 0x2
 31224 16a3 91       		.byte	0x91
 31225 16a4 4C       		.sleb128 -52
 31226 16a5 1E       		.uleb128 0x1e
 31227 16a6 1C000000 		.4byte	.LBB24
 31228 16aa 2A1C0000 		.4byte	.LBE24-.LBB24
 31229 16ae 26       		.uleb128 0x26
 31230 16af 73747200 		.ascii	"str\000"
 31231 16b3 01       		.byte	0x1
 31232 16b4 7607     		.2byte	0x776
 31233 16b6 0E170000 		.4byte	0x170e
 31234 16ba 03       		.uleb128 0x3
 31235 16bb 91       		.byte	0x91
 31236 16bc DC7E     		.sleb128 -164
 31237 16be 1E       		.uleb128 0x1e
 31238 16bf 10030000 		.4byte	.LBB25
 31239 16c3 FC100000 		.4byte	.LBE25-.LBB25
 31240 16c7 26       		.uleb128 0x26
 31241 16c8 6B00     		.ascii	"k\000"
 31242 16ca 01       		.byte	0x1
 31243 16cb AA07     		.2byte	0x7aa
 31244 16cd 97000000 		.4byte	0x97
 31245 16d1 02       		.uleb128 0x2
 31246 16d2 91       		.byte	0x91
 31247 16d3 53       		.sleb128 -45
 31248 16d4 1E       		.uleb128 0x1e
 31249 16d5 60030000 		.4byte	.LBB26
 31250 16d9 90100000 		.4byte	.LBE26-.LBB26
 31251 16dd 23       		.uleb128 0x23
 31252 16de FB0F0000 		.4byte	.LASF248
 31253 16e2 01       		.byte	0x1
 31254 16e3 AC07     		.2byte	0x7ac
 31255 16e5 97000000 		.4byte	0x97
 31256 16e9 02       		.uleb128 0x2
 31257 16ea 91       		.byte	0x91
 31258 16eb 4B       		.sleb128 -53
 31259 16ec 26       		.uleb128 0x26
 31260 16ed 4D4F5400 		.ascii	"MOT\000"
 31261 16f1 01       		.byte	0x1
 31262 16f2 AD07     		.2byte	0x7ad
 31263 16f4 1E170000 		.4byte	0x171e
 31264 16f8 02       		.uleb128 0x2
 31265 16f9 91       		.byte	0x91
 31266 16fa 44       		.sleb128 -60
 31267 16fb 23       		.uleb128 0x23
 31268 16fc 00160000 		.4byte	.LASF286
 31269 1700 01       		.byte	0x1
 31270 1701 AE07     		.2byte	0x7ae
 31271 1703 97000000 		.4byte	0x97
 31272 1707 02       		.uleb128 0x2
 31273 1708 91       		.byte	0x91
 31274 1709 43       		.sleb128 -61
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 674


 31275 170a 00       		.byte	0
 31276 170b 00       		.byte	0
 31277 170c 00       		.byte	0
 31278 170d 00       		.byte	0
 31279 170e 09       		.uleb128 0x9
 31280 170f F9000000 		.4byte	0xf9
 31281 1713 1E170000 		.4byte	0x171e
 31282 1717 0A       		.uleb128 0xa
 31283 1718 18010000 		.4byte	0x118
 31284 171c 63       		.byte	0x63
 31285 171d 00       		.byte	0
 31286 171e 07       		.uleb128 0x7
 31287 171f 04       		.byte	0x4
 31288 1720 38060000 		.4byte	0x638
 31289 1724 22       		.uleb128 0x22
 31290 1725 93110000 		.4byte	.LASF287
 31291 1729 01       		.byte	0x1
 31292 172a 5C09     		.2byte	0x95c
 31293 172c 00000000 		.4byte	.LFB73
 31294 1730 90040000 		.4byte	.LFE73-.LFB73
 31295 1734 01       		.uleb128 0x1
 31296 1735 9C       		.byte	0x9c
 31297 1736 B4170000 		.4byte	0x17b4
 31298 173a 25       		.uleb128 0x25
 31299 173b 1A100000 		.4byte	.LASF285
 31300 173f 01       		.byte	0x1
 31301 1740 5C09     		.2byte	0x95c
 31302 1742 1F010000 		.4byte	0x11f
 31303 1746 03       		.uleb128 0x3
 31304 1747 91       		.byte	0x91
 31305 1748 BC7C     		.sleb128 -452
 31306 174a 26       		.uleb128 0x26
 31307 174b 73747200 		.ascii	"str\000"
 31308 174f 01       		.byte	0x1
 31309 1750 5E09     		.2byte	0x95e
 31310 1752 0E170000 		.4byte	0x170e
 31311 1756 03       		.uleb128 0x3
 31312 1757 91       		.byte	0x91
 31313 1758 F07E     		.sleb128 -144
 31314 175a 26       		.uleb128 0x26
 31315 175b 6900     		.ascii	"i\000"
 31316 175d 01       		.byte	0x1
 31317 175e 5F09     		.2byte	0x95f
 31318 1760 73000000 		.4byte	0x73
 31319 1764 02       		.uleb128 0x2
 31320 1765 91       		.byte	0x91
 31321 1766 64       		.sleb128 -28
 31322 1767 23       		.uleb128 0x23
 31323 1768 95050000 		.4byte	.LASF288
 31324 176c 01       		.byte	0x1
 31325 176d 6009     		.2byte	0x960
 31326 176f 73000000 		.4byte	0x73
 31327 1773 02       		.uleb128 0x2
 31328 1774 91       		.byte	0x91
 31329 1775 54       		.sleb128 -44
 31330 1776 23       		.uleb128 0x23
 31331 1777 3E040000 		.4byte	.LASF255
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 675


 31332 177b 01       		.byte	0x1
 31333 177c 6209     		.2byte	0x962
 31334 177e 1A130000 		.4byte	0x131a
 31335 1782 02       		.uleb128 0x2
 31336 1783 91       		.byte	0x91
 31337 1784 60       		.sleb128 -32
 31338 1785 26       		.uleb128 0x26
 31339 1786 4D4F5400 		.ascii	"MOT\000"
 31340 178a 01       		.byte	0x1
 31341 178b 6309     		.2byte	0x963
 31342 178d 1E170000 		.4byte	0x171e
 31343 1791 02       		.uleb128 0x2
 31344 1792 91       		.byte	0x91
 31345 1793 5C       		.sleb128 -36
 31346 1794 23       		.uleb128 0x23
 31347 1795 00160000 		.4byte	.LASF286
 31348 1799 01       		.byte	0x1
 31349 179a 6409     		.2byte	0x964
 31350 179c 97000000 		.4byte	0x97
 31351 17a0 02       		.uleb128 0x2
 31352 17a1 91       		.byte	0x91
 31353 17a2 5B       		.sleb128 -37
 31354 17a3 23       		.uleb128 0x23
 31355 17a4 53070000 		.4byte	.LASF289
 31356 17a8 01       		.byte	0x1
 31357 17a9 9C09     		.2byte	0x99c
 31358 17ab B4170000 		.4byte	0x17b4
 31359 17af 03       		.uleb128 0x3
 31360 17b0 91       		.byte	0x91
 31361 17b1 C47C     		.sleb128 -444
 31362 17b3 00       		.byte	0
 31363 17b4 09       		.uleb128 0x9
 31364 17b5 F9000000 		.4byte	0xf9
 31365 17b9 C5170000 		.4byte	0x17c5
 31366 17bd 24       		.uleb128 0x24
 31367 17be 18010000 		.4byte	0x118
 31368 17c2 2B01     		.2byte	0x12b
 31369 17c4 00       		.byte	0
 31370 17c5 22       		.uleb128 0x22
 31371 17c6 890E0000 		.4byte	.LASF290
 31372 17ca 01       		.byte	0x1
 31373 17cb A609     		.2byte	0x9a6
 31374 17cd 00000000 		.4byte	.LFB74
 31375 17d1 5C020000 		.4byte	.LFE74-.LFB74
 31376 17d5 01       		.uleb128 0x1
 31377 17d6 9C       		.byte	0x9c
 31378 17d7 0B180000 		.4byte	0x180b
 31379 17db 25       		.uleb128 0x25
 31380 17dc 1A100000 		.4byte	.LASF285
 31381 17e0 01       		.byte	0x1
 31382 17e1 A609     		.2byte	0x9a6
 31383 17e3 1F010000 		.4byte	0x11f
 31384 17e7 03       		.uleb128 0x3
 31385 17e8 91       		.byte	0x91
 31386 17e9 CC7E     		.sleb128 -180
 31387 17eb 26       		.uleb128 0x26
 31388 17ec 73747200 		.ascii	"str\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 676


 31389 17f0 01       		.byte	0x1
 31390 17f1 A809     		.2byte	0x9a8
 31391 17f3 0B180000 		.4byte	0x180b
 31392 17f7 03       		.uleb128 0x3
 31393 17f8 91       		.byte	0x91
 31394 17f9 D47E     		.sleb128 -172
 31395 17fb 23       		.uleb128 0x23
 31396 17fc 3E040000 		.4byte	.LASF255
 31397 1800 01       		.byte	0x1
 31398 1801 AA09     		.2byte	0x9aa
 31399 1803 1A130000 		.4byte	0x131a
 31400 1807 02       		.uleb128 0x2
 31401 1808 91       		.byte	0x91
 31402 1809 6C       		.sleb128 -20
 31403 180a 00       		.byte	0
 31404 180b 09       		.uleb128 0x9
 31405 180c F9000000 		.4byte	0xf9
 31406 1810 1B180000 		.4byte	0x181b
 31407 1814 0A       		.uleb128 0xa
 31408 1815 18010000 		.4byte	0x118
 31409 1819 95       		.byte	0x95
 31410 181a 00       		.byte	0
 31411 181b 22       		.uleb128 0x22
 31412 181c 73110000 		.4byte	.LASF291
 31413 1820 01       		.byte	0x1
 31414 1821 D309     		.2byte	0x9d3
 31415 1823 00000000 		.4byte	.LFB75
 31416 1827 80120000 		.4byte	.LFE75-.LFB75
 31417 182b 01       		.uleb128 0x1
 31418 182c 9C       		.byte	0x9c
 31419 182d BC180000 		.4byte	0x18bc
 31420 1831 25       		.uleb128 0x25
 31421 1832 1A100000 		.4byte	.LASF285
 31422 1836 01       		.byte	0x1
 31423 1837 D309     		.2byte	0x9d3
 31424 1839 1F010000 		.4byte	0x11f
 31425 183d 03       		.uleb128 0x3
 31426 183e 91       		.byte	0x91
 31427 183f D47E     		.sleb128 -172
 31428 1841 26       		.uleb128 0x26
 31429 1842 73747200 		.ascii	"str\000"
 31430 1846 01       		.byte	0x1
 31431 1847 D509     		.2byte	0x9d5
 31432 1849 0E170000 		.4byte	0x170e
 31433 184d 03       		.uleb128 0x3
 31434 184e 91       		.byte	0x91
 31435 184f DC7E     		.sleb128 -164
 31436 1851 26       		.uleb128 0x26
 31437 1852 6900     		.ascii	"i\000"
 31438 1854 01       		.byte	0x1
 31439 1855 D609     		.2byte	0x9d6
 31440 1857 73000000 		.4byte	0x73
 31441 185b 02       		.uleb128 0x2
 31442 185c 91       		.byte	0x91
 31443 185d 54       		.sleb128 -44
 31444 185e 23       		.uleb128 0x23
 31445 185f 3E040000 		.4byte	.LASF255
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 677


 31446 1863 01       		.byte	0x1
 31447 1864 DA09     		.2byte	0x9da
 31448 1866 1A130000 		.4byte	0x131a
 31449 186a 02       		.uleb128 0x2
 31450 186b 91       		.byte	0x91
 31451 186c 4C       		.sleb128 -52
 31452 186d 1E       		.uleb128 0x1e
 31453 186e 08010000 		.4byte	.LBB27
 31454 1872 D80C0000 		.4byte	.LBE27-.LBB27
 31455 1876 26       		.uleb128 0x26
 31456 1877 6B00     		.ascii	"k\000"
 31457 1879 01       		.byte	0x1
 31458 187a EF09     		.2byte	0x9ef
 31459 187c 97000000 		.4byte	0x97
 31460 1880 02       		.uleb128 0x2
 31461 1881 91       		.byte	0x91
 31462 1882 53       		.sleb128 -45
 31463 1883 1E       		.uleb128 0x1e
 31464 1884 12010000 		.4byte	.LBB28
 31465 1888 B20C0000 		.4byte	.LBE28-.LBB28
 31466 188c 23       		.uleb128 0x23
 31467 188d FB0F0000 		.4byte	.LASF248
 31468 1891 01       		.byte	0x1
 31469 1892 F109     		.2byte	0x9f1
 31470 1894 97000000 		.4byte	0x97
 31471 1898 02       		.uleb128 0x2
 31472 1899 91       		.byte	0x91
 31473 189a 4B       		.sleb128 -53
 31474 189b 26       		.uleb128 0x26
 31475 189c 4D4F5400 		.ascii	"MOT\000"
 31476 18a0 01       		.byte	0x1
 31477 18a1 F209     		.2byte	0x9f2
 31478 18a3 1E170000 		.4byte	0x171e
 31479 18a7 02       		.uleb128 0x2
 31480 18a8 91       		.byte	0x91
 31481 18a9 44       		.sleb128 -60
 31482 18aa 23       		.uleb128 0x23
 31483 18ab 00160000 		.4byte	.LASF286
 31484 18af 01       		.byte	0x1
 31485 18b0 F309     		.2byte	0x9f3
 31486 18b2 97000000 		.4byte	0x97
 31487 18b6 02       		.uleb128 0x2
 31488 18b7 91       		.byte	0x91
 31489 18b8 43       		.sleb128 -61
 31490 18b9 00       		.byte	0
 31491 18ba 00       		.byte	0
 31492 18bb 00       		.byte	0
 31493 18bc 22       		.uleb128 0x22
 31494 18bd 7B0D0000 		.4byte	.LASF292
 31495 18c1 01       		.byte	0x1
 31496 18c2 DB0A     		.2byte	0xadb
 31497 18c4 00000000 		.4byte	.LFB76
 31498 18c8 DC000000 		.4byte	.LFE76-.LFB76
 31499 18cc 01       		.uleb128 0x1
 31500 18cd 9C       		.byte	0x9c
 31501 18ce 00190000 		.4byte	0x1900
 31502 18d2 25       		.uleb128 0x25
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 678


 31503 18d3 1A100000 		.4byte	.LASF285
 31504 18d7 01       		.byte	0x1
 31505 18d8 DB0A     		.2byte	0xadb
 31506 18da 1F010000 		.4byte	0x11f
 31507 18de 03       		.uleb128 0x3
 31508 18df 91       		.byte	0x91
 31509 18e0 DC7E     		.sleb128 -164
 31510 18e2 26       		.uleb128 0x26
 31511 18e3 73747200 		.ascii	"str\000"
 31512 18e7 01       		.byte	0x1
 31513 18e8 DD0A     		.2byte	0xadd
 31514 18ea 00190000 		.4byte	0x1900
 31515 18ee 03       		.uleb128 0x3
 31516 18ef 91       		.byte	0x91
 31517 18f0 E07E     		.sleb128 -160
 31518 18f2 26       		.uleb128 0x26
 31519 18f3 6900     		.ascii	"i\000"
 31520 18f5 01       		.byte	0x1
 31521 18f6 DE0A     		.2byte	0xade
 31522 18f8 73000000 		.4byte	0x73
 31523 18fc 02       		.uleb128 0x2
 31524 18fd 91       		.byte	0x91
 31525 18fe 6C       		.sleb128 -20
 31526 18ff 00       		.byte	0
 31527 1900 09       		.uleb128 0x9
 31528 1901 F9000000 		.4byte	0xf9
 31529 1905 10190000 		.4byte	0x1910
 31530 1909 0A       		.uleb128 0xa
 31531 190a 18010000 		.4byte	0x118
 31532 190e 8B       		.byte	0x8b
 31533 190f 00       		.byte	0
 31534 1910 22       		.uleb128 0x22
 31535 1911 26100000 		.4byte	.LASF293
 31536 1915 01       		.byte	0x1
 31537 1916 F30A     		.2byte	0xaf3
 31538 1918 00000000 		.4byte	.LFB77
 31539 191c 80010000 		.4byte	.LFE77-.LFB77
 31540 1920 01       		.uleb128 0x1
 31541 1921 9C       		.byte	0x9c
 31542 1922 54190000 		.4byte	0x1954
 31543 1926 25       		.uleb128 0x25
 31544 1927 1A100000 		.4byte	.LASF285
 31545 192b 01       		.byte	0x1
 31546 192c F30A     		.2byte	0xaf3
 31547 192e 1F010000 		.4byte	0x11f
 31548 1932 03       		.uleb128 0x3
 31549 1933 91       		.byte	0x91
 31550 1934 E47E     		.sleb128 -156
 31551 1936 26       		.uleb128 0x26
 31552 1937 73747200 		.ascii	"str\000"
 31553 193b 01       		.byte	0x1
 31554 193c F50A     		.2byte	0xaf5
 31555 193e 54190000 		.4byte	0x1954
 31556 1942 03       		.uleb128 0x3
 31557 1943 91       		.byte	0x91
 31558 1944 EC7E     		.sleb128 -148
 31559 1946 26       		.uleb128 0x26
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 679


 31560 1947 6900     		.ascii	"i\000"
 31561 1949 01       		.byte	0x1
 31562 194a F60A     		.2byte	0xaf6
 31563 194c 73000000 		.4byte	0x73
 31564 1950 02       		.uleb128 0x2
 31565 1951 91       		.byte	0x91
 31566 1952 64       		.sleb128 -28
 31567 1953 00       		.byte	0
 31568 1954 09       		.uleb128 0x9
 31569 1955 F9000000 		.4byte	0xf9
 31570 1959 64190000 		.4byte	0x1964
 31571 195d 0A       		.uleb128 0xa
 31572 195e 18010000 		.4byte	0x118
 31573 1962 77       		.byte	0x77
 31574 1963 00       		.byte	0
 31575 1964 28       		.uleb128 0x28
 31576 1965 A8110000 		.4byte	.LASF294
 31577 1969 01       		.byte	0x1
 31578 196a 1F0B     		.2byte	0xb1f
 31579 196c 00000000 		.4byte	.LFB78
 31580 1970 28000000 		.4byte	.LFE78-.LFB78
 31581 1974 01       		.uleb128 0x1
 31582 1975 9C       		.byte	0x9c
 31583 1976 8A190000 		.4byte	0x198a
 31584 197a 25       		.uleb128 0x25
 31585 197b 1A100000 		.4byte	.LASF285
 31586 197f 01       		.byte	0x1
 31587 1980 1F0B     		.2byte	0xb1f
 31588 1982 1F010000 		.4byte	0x11f
 31589 1986 02       		.uleb128 0x2
 31590 1987 91       		.byte	0x91
 31591 1988 6C       		.sleb128 -20
 31592 1989 00       		.byte	0
 31593 198a 22       		.uleb128 0x22
 31594 198b 6D040000 		.4byte	.LASF295
 31595 198f 01       		.byte	0x1
 31596 1990 2A0B     		.2byte	0xb2a
 31597 1992 00000000 		.4byte	.LFB79
 31598 1996 F0000000 		.4byte	.LFE79-.LFB79
 31599 199a 01       		.uleb128 0x1
 31600 199b 9C       		.byte	0x9c
 31601 199c F9190000 		.4byte	0x19f9
 31602 19a0 25       		.uleb128 0x25
 31603 19a1 1A100000 		.4byte	.LASF285
 31604 19a5 01       		.byte	0x1
 31605 19a6 2A0B     		.2byte	0xb2a
 31606 19a8 1F010000 		.4byte	0x11f
 31607 19ac 03       		.uleb128 0x3
 31608 19ad 91       		.byte	0x91
 31609 19ae FC7E     		.sleb128 -132
 31610 19b0 23       		.uleb128 0x23
 31611 19b1 D2020000 		.4byte	.LASF296
 31612 19b5 01       		.byte	0x1
 31613 19b6 2C0B     		.2byte	0xb2c
 31614 19b8 0E170000 		.4byte	0x170e
 31615 19bc 03       		.uleb128 0x3
 31616 19bd 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 680


 31617 19be 847F     		.sleb128 -124
 31618 19c0 23       		.uleb128 0x23
 31619 19c1 76020000 		.4byte	.LASF297
 31620 19c5 01       		.byte	0x1
 31621 19c6 2D0B     		.2byte	0xb2d
 31622 19c8 A3000000 		.4byte	0xa3
 31623 19cc 02       		.uleb128 0x2
 31624 19cd 91       		.byte	0x91
 31625 19ce 6E       		.sleb128 -18
 31626 19cf 23       		.uleb128 0x23
 31627 19d0 F5000000 		.4byte	.LASF298
 31628 19d4 01       		.byte	0x1
 31629 19d5 2E0B     		.2byte	0xb2e
 31630 19d7 EB000000 		.4byte	0xeb
 31631 19db 05       		.uleb128 0x5
 31632 19dc 03       		.byte	0x3
 31633 19dd 00000000 		.4byte	h_time.10994
 31634 19e1 1E       		.uleb128 0x1e
 31635 19e2 26000000 		.4byte	.LBB29
 31636 19e6 A4000000 		.4byte	.LBE29-.LBB29
 31637 19ea 26       		.uleb128 0x26
 31638 19eb 6900     		.ascii	"i\000"
 31639 19ed 01       		.byte	0x1
 31640 19ee 330B     		.2byte	0xb33
 31641 19f0 73000000 		.4byte	0x73
 31642 19f4 02       		.uleb128 0x2
 31643 19f5 91       		.byte	0x91
 31644 19f6 68       		.sleb128 -24
 31645 19f7 00       		.byte	0
 31646 19f8 00       		.byte	0
 31647 19f9 22       		.uleb128 0x22
 31648 19fa 34170000 		.4byte	.LASF299
 31649 19fe 01       		.byte	0x1
 31650 19ff 4B0B     		.2byte	0xb4b
 31651 1a01 00000000 		.4byte	.LFB80
 31652 1a05 74030000 		.4byte	.LFE80-.LFB80
 31653 1a09 01       		.uleb128 0x1
 31654 1a0a 9C       		.byte	0x9c
 31655 1a0b 3D1A0000 		.4byte	0x1a3d
 31656 1a0f 25       		.uleb128 0x25
 31657 1a10 1A100000 		.4byte	.LASF285
 31658 1a14 01       		.byte	0x1
 31659 1a15 4B0B     		.2byte	0xb4b
 31660 1a17 1F010000 		.4byte	0x11f
 31661 1a1b 03       		.uleb128 0x3
 31662 1a1c 91       		.byte	0x91
 31663 1a1d AC7D     		.sleb128 -340
 31664 1a1f 26       		.uleb128 0x26
 31665 1a20 73747200 		.ascii	"str\000"
 31666 1a24 01       		.byte	0x1
 31667 1a25 4D0B     		.2byte	0xb4d
 31668 1a27 B4170000 		.4byte	0x17b4
 31669 1a2b 03       		.uleb128 0x3
 31670 1a2c 91       		.byte	0x91
 31671 1a2d B07D     		.sleb128 -336
 31672 1a2f 26       		.uleb128 0x26
 31673 1a30 6900     		.ascii	"i\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 681


 31674 1a32 01       		.byte	0x1
 31675 1a33 4E0B     		.2byte	0xb4e
 31676 1a35 73000000 		.4byte	0x73
 31677 1a39 02       		.uleb128 0x2
 31678 1a3a 91       		.byte	0x91
 31679 1a3b 5C       		.sleb128 -36
 31680 1a3c 00       		.byte	0
 31681 1a3d 22       		.uleb128 0x22
 31682 1a3e 36110000 		.4byte	.LASF300
 31683 1a42 01       		.byte	0x1
 31684 1a43 760B     		.2byte	0xb76
 31685 1a45 00000000 		.4byte	.LFB81
 31686 1a49 84000000 		.4byte	.LFE81-.LFB81
 31687 1a4d 01       		.uleb128 0x1
 31688 1a4e 9C       		.byte	0x9c
 31689 1a4f 901A0000 		.4byte	0x1a90
 31690 1a53 25       		.uleb128 0x25
 31691 1a54 6E070000 		.4byte	.LASF238
 31692 1a58 01       		.byte	0x1
 31693 1a59 760B     		.2byte	0xb76
 31694 1a5b 0F110000 		.4byte	0x110f
 31695 1a5f 02       		.uleb128 0x2
 31696 1a60 91       		.byte	0x91
 31697 1a61 6C       		.sleb128 -20
 31698 1a62 25       		.uleb128 0x25
 31699 1a63 450A0000 		.4byte	.LASF239
 31700 1a67 01       		.byte	0x1
 31701 1a68 760B     		.2byte	0xb76
 31702 1a6a A3000000 		.4byte	0xa3
 31703 1a6e 02       		.uleb128 0x2
 31704 1a6f 91       		.byte	0x91
 31705 1a70 6A       		.sleb128 -22
 31706 1a71 25       		.uleb128 0x25
 31707 1a72 C6110000 		.4byte	.LASF301
 31708 1a76 01       		.byte	0x1
 31709 1a77 760B     		.2byte	0xb76
 31710 1a79 97000000 		.4byte	0x97
 31711 1a7d 02       		.uleb128 0x2
 31712 1a7e 91       		.byte	0x91
 31713 1a7f 69       		.sleb128 -23
 31714 1a80 23       		.uleb128 0x23
 31715 1a81 86080000 		.4byte	.LASF253
 31716 1a85 01       		.byte	0x1
 31717 1a86 780B     		.2byte	0xb78
 31718 1a88 A3000000 		.4byte	0xa3
 31719 1a8c 02       		.uleb128 0x2
 31720 1a8d 91       		.byte	0x91
 31721 1a8e 76       		.sleb128 -10
 31722 1a8f 00       		.byte	0
 31723 1a90 22       		.uleb128 0x22
 31724 1a91 9F070000 		.4byte	.LASF302
 31725 1a95 01       		.byte	0x1
 31726 1a96 920B     		.2byte	0xb92
 31727 1a98 00000000 		.4byte	.LFB82
 31728 1a9c 88000000 		.4byte	.LFE82-.LFB82
 31729 1aa0 01       		.uleb128 0x1
 31730 1aa1 9C       		.byte	0x9c
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 682


 31731 1aa2 D41A0000 		.4byte	0x1ad4
 31732 1aa6 25       		.uleb128 0x25
 31733 1aa7 6E070000 		.4byte	.LASF238
 31734 1aab 01       		.byte	0x1
 31735 1aac 920B     		.2byte	0xb92
 31736 1aae 0F110000 		.4byte	0x110f
 31737 1ab2 02       		.uleb128 0x2
 31738 1ab3 91       		.byte	0x91
 31739 1ab4 6C       		.sleb128 -20
 31740 1ab5 25       		.uleb128 0x25
 31741 1ab6 450A0000 		.4byte	.LASF239
 31742 1aba 01       		.byte	0x1
 31743 1abb 920B     		.2byte	0xb92
 31744 1abd A3000000 		.4byte	0xa3
 31745 1ac1 02       		.uleb128 0x2
 31746 1ac2 91       		.byte	0x91
 31747 1ac3 6A       		.sleb128 -22
 31748 1ac4 23       		.uleb128 0x23
 31749 1ac5 86080000 		.4byte	.LASF253
 31750 1ac9 01       		.byte	0x1
 31751 1aca 940B     		.2byte	0xb94
 31752 1acc A3000000 		.4byte	0xa3
 31753 1ad0 02       		.uleb128 0x2
 31754 1ad1 91       		.byte	0x91
 31755 1ad2 76       		.sleb128 -10
 31756 1ad3 00       		.byte	0
 31757 1ad4 22       		.uleb128 0x22
 31758 1ad5 EE0D0000 		.4byte	.LASF303
 31759 1ad9 01       		.byte	0x1
 31760 1ada AE0B     		.2byte	0xbae
 31761 1adc 00000000 		.4byte	.LFB83
 31762 1ae0 A0000000 		.4byte	.LFE83-.LFB83
 31763 1ae4 01       		.uleb128 0x1
 31764 1ae5 9C       		.byte	0x9c
 31765 1ae6 271B0000 		.4byte	0x1b27
 31766 1aea 25       		.uleb128 0x25
 31767 1aeb 6E070000 		.4byte	.LASF238
 31768 1aef 01       		.byte	0x1
 31769 1af0 AE0B     		.2byte	0xbae
 31770 1af2 0F110000 		.4byte	0x110f
 31771 1af6 02       		.uleb128 0x2
 31772 1af7 91       		.byte	0x91
 31773 1af8 74       		.sleb128 -12
 31774 1af9 25       		.uleb128 0x25
 31775 1afa 450A0000 		.4byte	.LASF239
 31776 1afe 01       		.byte	0x1
 31777 1aff AE0B     		.2byte	0xbae
 31778 1b01 A3000000 		.4byte	0xa3
 31779 1b05 02       		.uleb128 0x2
 31780 1b06 91       		.byte	0x91
 31781 1b07 72       		.sleb128 -14
 31782 1b08 29       		.uleb128 0x29
 31783 1b09 696400   		.ascii	"id\000"
 31784 1b0c 01       		.byte	0x1
 31785 1b0d AE0B     		.2byte	0xbae
 31786 1b0f 97000000 		.4byte	0x97
 31787 1b13 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 683


 31788 1b14 91       		.byte	0x91
 31789 1b15 71       		.sleb128 -15
 31790 1b16 26       		.uleb128 0x26
 31791 1b17 6900     		.ascii	"i\000"
 31792 1b19 01       		.byte	0x1
 31793 1b1a B00B     		.2byte	0xbb0
 31794 1b1c A3000000 		.4byte	0xa3
 31795 1b20 05       		.uleb128 0x5
 31796 1b21 03       		.byte	0x3
 31797 1b22 04000000 		.4byte	i.11035
 31798 1b26 00       		.byte	0
 31799 1b27 2A       		.uleb128 0x2a
 31800 1b28 B0150000 		.4byte	.LASF309
 31801 1b2c 01       		.byte	0x1
 31802 1b2d CC0B     		.2byte	0xbcc
 31803 1b2f 97000000 		.4byte	0x97
 31804 1b33 00000000 		.4byte	.LFB84
 31805 1b37 3E000000 		.4byte	.LFE84-.LFB84
 31806 1b3b 01       		.uleb128 0x1
 31807 1b3c 9C       		.byte	0x9c
 31808 1b3d 7C1B0000 		.4byte	0x1b7c
 31809 1b41 25       		.uleb128 0x25
 31810 1b42 370D0000 		.4byte	.LASF304
 31811 1b46 01       		.byte	0x1
 31812 1b47 CC0B     		.2byte	0xbcc
 31813 1b49 0F110000 		.4byte	0x110f
 31814 1b4d 02       		.uleb128 0x2
 31815 1b4e 91       		.byte	0x91
 31816 1b4f 6C       		.sleb128 -20
 31817 1b50 25       		.uleb128 0x25
 31818 1b51 3B070000 		.4byte	.LASF305
 31819 1b55 01       		.byte	0x1
 31820 1b56 CC0B     		.2byte	0xbcc
 31821 1b58 97000000 		.4byte	0x97
 31822 1b5c 02       		.uleb128 0x2
 31823 1b5d 91       		.byte	0x91
 31824 1b5e 6B       		.sleb128 -21
 31825 1b5f 26       		.uleb128 0x26
 31826 1b60 6900     		.ascii	"i\000"
 31827 1b62 01       		.byte	0x1
 31828 1b63 CE0B     		.2byte	0xbce
 31829 1b65 97000000 		.4byte	0x97
 31830 1b69 02       		.uleb128 0x2
 31831 1b6a 91       		.byte	0x91
 31832 1b6b 77       		.sleb128 -9
 31833 1b6c 23       		.uleb128 0x23
 31834 1b6d 7A0F0000 		.4byte	.LASF306
 31835 1b71 01       		.byte	0x1
 31836 1b72 CF0B     		.2byte	0xbcf
 31837 1b74 97000000 		.4byte	0x97
 31838 1b78 02       		.uleb128 0x2
 31839 1b79 91       		.byte	0x91
 31840 1b7a 76       		.sleb128 -10
 31841 1b7b 00       		.byte	0
 31842 1b7c 22       		.uleb128 0x22
 31843 1b7d 680D0000 		.4byte	.LASF307
 31844 1b81 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 684


 31845 1b82 DC0B     		.2byte	0xbdc
 31846 1b84 00000000 		.4byte	.LFB85
 31847 1b88 2E000000 		.4byte	.LFE85-.LFB85
 31848 1b8c 01       		.uleb128 0x1
 31849 1b8d 9C       		.byte	0x9c
 31850 1b8e C01B0000 		.4byte	0x1bc0
 31851 1b92 25       		.uleb128 0x25
 31852 1b93 50060000 		.4byte	.LASF308
 31853 1b97 01       		.byte	0x1
 31854 1b98 DC0B     		.2byte	0xbdc
 31855 1b9a 97000000 		.4byte	0x97
 31856 1b9e 02       		.uleb128 0x2
 31857 1b9f 91       		.byte	0x91
 31858 1ba0 6F       		.sleb128 -17
 31859 1ba1 23       		.uleb128 0x23
 31860 1ba2 450A0000 		.4byte	.LASF239
 31861 1ba6 01       		.byte	0x1
 31862 1ba7 DD0B     		.2byte	0xbdd
 31863 1ba9 73000000 		.4byte	0x73
 31864 1bad 02       		.uleb128 0x2
 31865 1bae 91       		.byte	0x91
 31866 1baf 74       		.sleb128 -12
 31867 1bb0 23       		.uleb128 0x23
 31868 1bb1 6E070000 		.4byte	.LASF238
 31869 1bb5 01       		.byte	0x1
 31870 1bb6 DE0B     		.2byte	0xbde
 31871 1bb8 E4080000 		.4byte	0x8e4
 31872 1bbc 02       		.uleb128 0x2
 31873 1bbd 91       		.byte	0x91
 31874 1bbe 70       		.sleb128 -16
 31875 1bbf 00       		.byte	0
 31876 1bc0 2B       		.uleb128 0x2b
 31877 1bc1 50050000 		.4byte	.LASF310
 31878 1bc5 01       		.byte	0x1
 31879 1bc6 EB0B     		.2byte	0xbeb
 31880 1bc8 97000000 		.4byte	0x97
 31881 1bcc 00000000 		.4byte	.LFB86
 31882 1bd0 98000000 		.4byte	.LFE86-.LFB86
 31883 1bd4 01       		.uleb128 0x1
 31884 1bd5 9C       		.byte	0x9c
 31885 1bd6 241C0000 		.4byte	0x1c24
 31886 1bda 25       		.uleb128 0x25
 31887 1bdb 2E070000 		.4byte	.LASF311
 31888 1bdf 01       		.byte	0x1
 31889 1be0 EB0B     		.2byte	0xbeb
 31890 1be2 73000000 		.4byte	0x73
 31891 1be6 02       		.uleb128 0x2
 31892 1be7 91       		.byte	0x91
 31893 1be8 64       		.sleb128 -28
 31894 1be9 26       		.uleb128 0x26
 31895 1bea 6900     		.ascii	"i\000"
 31896 1bec 01       		.byte	0x1
 31897 1bed ED0B     		.2byte	0xbed
 31898 1bef 73000000 		.4byte	0x73
 31899 1bf3 02       		.uleb128 0x2
 31900 1bf4 91       		.byte	0x91
 31901 1bf5 74       		.sleb128 -12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 685


 31902 1bf6 23       		.uleb128 0x23
 31903 1bf7 8A070000 		.4byte	.LASF312
 31904 1bfb 01       		.byte	0x1
 31905 1bfc EE0B     		.2byte	0xbee
 31906 1bfe 97000000 		.4byte	0x97
 31907 1c02 02       		.uleb128 0x2
 31908 1c03 91       		.byte	0x91
 31909 1c04 6B       		.sleb128 -21
 31910 1c05 23       		.uleb128 0x23
 31911 1c06 BB070000 		.4byte	.LASF313
 31912 1c0a 01       		.byte	0x1
 31913 1c0b EF0B     		.2byte	0xbef
 31914 1c0d 73000000 		.4byte	0x73
 31915 1c11 02       		.uleb128 0x2
 31916 1c12 91       		.byte	0x91
 31917 1c13 6C       		.sleb128 -20
 31918 1c14 23       		.uleb128 0x23
 31919 1c15 C2060000 		.4byte	.LASF314
 31920 1c19 01       		.byte	0x1
 31921 1c1a F00B     		.2byte	0xbf0
 31922 1c1c 97000000 		.4byte	0x97
 31923 1c20 02       		.uleb128 0x2
 31924 1c21 91       		.byte	0x91
 31925 1c22 73       		.sleb128 -13
 31926 1c23 00       		.byte	0
 31927 1c24 22       		.uleb128 0x22
 31928 1c25 BF100000 		.4byte	.LASF315
 31929 1c29 01       		.byte	0x1
 31930 1c2a 150C     		.2byte	0xc15
 31931 1c2c 00000000 		.4byte	.LFB87
 31932 1c30 80000000 		.4byte	.LFE87-.LFB87
 31933 1c34 01       		.uleb128 0x1
 31934 1c35 9C       		.byte	0x9c
 31935 1c36 481C0000 		.4byte	0x1c48
 31936 1c3a 26       		.uleb128 0x26
 31937 1c3b 6900     		.ascii	"i\000"
 31938 1c3d 01       		.byte	0x1
 31939 1c3e 170C     		.2byte	0xc17
 31940 1c40 A3000000 		.4byte	0xa3
 31941 1c44 02       		.uleb128 0x2
 31942 1c45 91       		.byte	0x91
 31943 1c46 76       		.sleb128 -10
 31944 1c47 00       		.byte	0
 31945 1c48 2B       		.uleb128 0x2b
 31946 1c49 05100000 		.4byte	.LASF316
 31947 1c4d 01       		.byte	0x1
 31948 1c4e 2E0C     		.2byte	0xc2e
 31949 1c50 97000000 		.4byte	0x97
 31950 1c54 00000000 		.4byte	.LFB88
 31951 1c58 5C000000 		.4byte	.LFE88-.LFB88
 31952 1c5c 01       		.uleb128 0x1
 31953 1c5d 9C       		.byte	0x9c
 31954 1c5e 701C0000 		.4byte	0x1c70
 31955 1c62 26       		.uleb128 0x26
 31956 1c63 6900     		.ascii	"i\000"
 31957 1c65 01       		.byte	0x1
 31958 1c66 2F0C     		.2byte	0xc2f
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 686


 31959 1c68 A3000000 		.4byte	0xa3
 31960 1c6c 02       		.uleb128 0x2
 31961 1c6d 91       		.byte	0x91
 31962 1c6e 76       		.sleb128 -10
 31963 1c6f 00       		.byte	0
 31964 1c70 2B       		.uleb128 0x2b
 31965 1c71 C1070000 		.4byte	.LASF317
 31966 1c75 01       		.byte	0x1
 31967 1c76 410C     		.2byte	0xc41
 31968 1c78 97000000 		.4byte	0x97
 31969 1c7c 00000000 		.4byte	.LFB89
 31970 1c80 30060000 		.4byte	.LFE89-.LFB89
 31971 1c84 01       		.uleb128 0x1
 31972 1c85 9C       		.byte	0x9c
 31973 1c86 A51C0000 		.4byte	0x1ca5
 31974 1c8a 26       		.uleb128 0x26
 31975 1c8b 6900     		.ascii	"i\000"
 31976 1c8d 01       		.byte	0x1
 31977 1c8e 430C     		.2byte	0xc43
 31978 1c90 97000000 		.4byte	0x97
 31979 1c94 02       		.uleb128 0x2
 31980 1c95 91       		.byte	0x91
 31981 1c96 77       		.sleb128 -9
 31982 1c97 26       		.uleb128 0x26
 31983 1c98 6A00     		.ascii	"j\000"
 31984 1c9a 01       		.byte	0x1
 31985 1c9b 430C     		.2byte	0xc43
 31986 1c9d 97000000 		.4byte	0x97
 31987 1ca1 02       		.uleb128 0x2
 31988 1ca2 91       		.byte	0x91
 31989 1ca3 76       		.sleb128 -10
 31990 1ca4 00       		.byte	0
 31991 1ca5 28       		.uleb128 0x28
 31992 1ca6 840A0000 		.4byte	.LASF318
 31993 1caa 01       		.byte	0x1
 31994 1cab DD0C     		.2byte	0xcdd
 31995 1cad 00000000 		.4byte	.LFB90
 31996 1cb1 40020000 		.4byte	.LFE90-.LFB90
 31997 1cb5 01       		.uleb128 0x1
 31998 1cb6 9C       		.byte	0x9c
 31999 1cb7 E21C0000 		.4byte	0x1ce2
 32000 1cbb 23       		.uleb128 0x23
 32001 1cbc FB0F0000 		.4byte	.LASF248
 32002 1cc0 01       		.byte	0x1
 32003 1cc1 DF0C     		.2byte	0xcdf
 32004 1cc3 97000000 		.4byte	0x97
 32005 1cc7 02       		.uleb128 0x2
 32006 1cc8 91       		.byte	0x91
 32007 1cc9 73       		.sleb128 -13
 32008 1cca 1E       		.uleb128 0x1e
 32009 1ccb FA000000 		.4byte	.LBB30
 32010 1ccf 6A000000 		.4byte	.LBE30-.LBB30
 32011 1cd3 26       		.uleb128 0x26
 32012 1cd4 6900     		.ascii	"i\000"
 32013 1cd6 01       		.byte	0x1
 32014 1cd7 F00C     		.2byte	0xcf0
 32015 1cd9 73000000 		.4byte	0x73
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 687


 32016 1cdd 02       		.uleb128 0x2
 32017 1cde 91       		.byte	0x91
 32018 1cdf 74       		.sleb128 -12
 32019 1ce0 00       		.byte	0
 32020 1ce1 00       		.byte	0
 32021 1ce2 2C       		.uleb128 0x2c
 32022 1ce3 590D0000 		.4byte	.LASF319
 32023 1ce7 01       		.byte	0x1
 32024 1ce8 100D     		.2byte	0xd10
 32025 1cea 00000000 		.4byte	.LFB91
 32026 1cee 28000000 		.4byte	.LFE91-.LFB91
 32027 1cf2 01       		.uleb128 0x1
 32028 1cf3 9C       		.byte	0x9c
 32029 1cf4 2D       		.uleb128 0x2d
 32030 1cf5 D80E0000 		.4byte	.LASF333
 32031 1cf9 01       		.byte	0x1
 32032 1cfa 1C0D     		.2byte	0xd1c
 32033 1cfc 00000000 		.4byte	.LFB92
 32034 1d00 88000000 		.4byte	.LFE92-.LFB92
 32035 1d04 01       		.uleb128 0x1
 32036 1d05 9C       		.byte	0x9c
 32037 1d06 2C       		.uleb128 0x2c
 32038 1d07 F6040000 		.4byte	.LASF320
 32039 1d0b 01       		.byte	0x1
 32040 1d0c 340D     		.2byte	0xd34
 32041 1d0e 00000000 		.4byte	.LFB93
 32042 1d12 B0000000 		.4byte	.LFE93-.LFB93
 32043 1d16 01       		.uleb128 0x1
 32044 1d17 9C       		.byte	0x9c
 32045 1d18 27       		.uleb128 0x27
 32046 1d19 03080000 		.4byte	.LASF322
 32047 1d1d 01       		.byte	0x1
 32048 1d1e 550D     		.2byte	0xd55
 32049 1d20 00000000 		.4byte	.LFB94
 32050 1d24 28010000 		.4byte	.LFE94-.LFB94
 32051 1d28 01       		.uleb128 0x1
 32052 1d29 9C       		.byte	0x9c
 32053 1d2a 5C1D0000 		.4byte	0x1d5c
 32054 1d2e 23       		.uleb128 0x23
 32055 1d2f 86080000 		.4byte	.LASF253
 32056 1d33 01       		.byte	0x1
 32057 1d34 570D     		.2byte	0xd57
 32058 1d36 97000000 		.4byte	0x97
 32059 1d3a 02       		.uleb128 0x2
 32060 1d3b 91       		.byte	0x91
 32061 1d3c 6F       		.sleb128 -17
 32062 1d3d 23       		.uleb128 0x23
 32063 1d3e FD130000 		.4byte	.LASF244
 32064 1d42 01       		.byte	0x1
 32065 1d43 580D     		.2byte	0xd58
 32066 1d45 C7000000 		.4byte	0xc7
 32067 1d49 02       		.uleb128 0x2
 32068 1d4a 91       		.byte	0x91
 32069 1d4b 6C       		.sleb128 -20
 32070 1d4c 23       		.uleb128 0x23
 32071 1d4d 6E070000 		.4byte	.LASF238
 32072 1d51 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 688


 32073 1d52 5B0D     		.2byte	0xd5b
 32074 1d54 75080000 		.4byte	0x875
 32075 1d58 02       		.uleb128 0x2
 32076 1d59 91       		.byte	0x91
 32077 1d5a 64       		.sleb128 -28
 32078 1d5b 00       		.byte	0
 32079 1d5c 27       		.uleb128 0x27
 32080 1d5d AC100000 		.4byte	.LASF323
 32081 1d61 01       		.byte	0x1
 32082 1d62 760D     		.2byte	0xd76
 32083 1d64 00000000 		.4byte	.LFB95
 32084 1d68 B8000000 		.4byte	.LFE95-.LFB95
 32085 1d6c 01       		.uleb128 0x1
 32086 1d6d 9C       		.byte	0x9c
 32087 1d6e A01D0000 		.4byte	0x1da0
 32088 1d72 23       		.uleb128 0x23
 32089 1d73 86080000 		.4byte	.LASF253
 32090 1d77 01       		.byte	0x1
 32091 1d78 780D     		.2byte	0xd78
 32092 1d7a 97000000 		.4byte	0x97
 32093 1d7e 02       		.uleb128 0x2
 32094 1d7f 91       		.byte	0x91
 32095 1d80 6F       		.sleb128 -17
 32096 1d81 23       		.uleb128 0x23
 32097 1d82 FD130000 		.4byte	.LASF244
 32098 1d86 01       		.byte	0x1
 32099 1d87 790D     		.2byte	0xd79
 32100 1d89 C7000000 		.4byte	0xc7
 32101 1d8d 02       		.uleb128 0x2
 32102 1d8e 91       		.byte	0x91
 32103 1d8f 6C       		.sleb128 -20
 32104 1d90 23       		.uleb128 0x23
 32105 1d91 6E070000 		.4byte	.LASF238
 32106 1d95 01       		.byte	0x1
 32107 1d96 7D0D     		.2byte	0xd7d
 32108 1d98 75080000 		.4byte	0x875
 32109 1d9c 02       		.uleb128 0x2
 32110 1d9d 91       		.byte	0x91
 32111 1d9e 64       		.sleb128 -28
 32112 1d9f 00       		.byte	0
 32113 1da0 27       		.uleb128 0x27
 32114 1da1 90020000 		.4byte	.LASF324
 32115 1da5 01       		.byte	0x1
 32116 1da6 8F0D     		.2byte	0xd8f
 32117 1da8 00000000 		.4byte	.LFB96
 32118 1dac B8000000 		.4byte	.LFE96-.LFB96
 32119 1db0 01       		.uleb128 0x1
 32120 1db1 9C       		.byte	0x9c
 32121 1db2 E41D0000 		.4byte	0x1de4
 32122 1db6 23       		.uleb128 0x23
 32123 1db7 86080000 		.4byte	.LASF253
 32124 1dbb 01       		.byte	0x1
 32125 1dbc 910D     		.2byte	0xd91
 32126 1dbe 97000000 		.4byte	0x97
 32127 1dc2 02       		.uleb128 0x2
 32128 1dc3 91       		.byte	0x91
 32129 1dc4 6F       		.sleb128 -17
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 689


 32130 1dc5 23       		.uleb128 0x23
 32131 1dc6 FD130000 		.4byte	.LASF244
 32132 1dca 01       		.byte	0x1
 32133 1dcb 920D     		.2byte	0xd92
 32134 1dcd C7000000 		.4byte	0xc7
 32135 1dd1 02       		.uleb128 0x2
 32136 1dd2 91       		.byte	0x91
 32137 1dd3 6C       		.sleb128 -20
 32138 1dd4 23       		.uleb128 0x23
 32139 1dd5 6E070000 		.4byte	.LASF238
 32140 1dd9 01       		.byte	0x1
 32141 1dda 960D     		.2byte	0xd96
 32142 1ddc 75080000 		.4byte	0x875
 32143 1de0 02       		.uleb128 0x2
 32144 1de1 91       		.byte	0x91
 32145 1de2 64       		.sleb128 -28
 32146 1de3 00       		.byte	0
 32147 1de4 27       		.uleb128 0x27
 32148 1de5 A20B0000 		.4byte	.LASF325
 32149 1de9 01       		.byte	0x1
 32150 1dea A80D     		.2byte	0xda8
 32151 1dec 00000000 		.4byte	.LFB97
 32152 1df0 5C000000 		.4byte	.LFE97-.LFB97
 32153 1df4 01       		.uleb128 0x1
 32154 1df5 9C       		.byte	0x9c
 32155 1df6 191E0000 		.4byte	0x1e19
 32156 1dfa 23       		.uleb128 0x23
 32157 1dfb FD130000 		.4byte	.LASF244
 32158 1dff 01       		.byte	0x1
 32159 1e00 AA0D     		.2byte	0xdaa
 32160 1e02 C7000000 		.4byte	0xc7
 32161 1e06 02       		.uleb128 0x2
 32162 1e07 91       		.byte	0x91
 32163 1e08 76       		.sleb128 -10
 32164 1e09 23       		.uleb128 0x23
 32165 1e0a 6E070000 		.4byte	.LASF238
 32166 1e0e 01       		.byte	0x1
 32167 1e0f AE0D     		.2byte	0xdae
 32168 1e11 A8090000 		.4byte	0x9a8
 32169 1e15 02       		.uleb128 0x2
 32170 1e16 91       		.byte	0x91
 32171 1e17 70       		.sleb128 -16
 32172 1e18 00       		.byte	0
 32173 1e19 2E       		.uleb128 0x2e
 32174 1e1a B80D0000 		.4byte	.LASF326
 32175 1e1e 01       		.byte	0x1
 32176 1e1f C00D     		.2byte	0xdc0
 32177 1e21 00000000 		.4byte	.LFB98
 32178 1e25 44020000 		.4byte	.LFE98-.LFB98
 32179 1e29 01       		.uleb128 0x1
 32180 1e2a 9C       		.byte	0x9c
 32181 1e2b 831E0000 		.4byte	0x1e83
 32182 1e2f 23       		.uleb128 0x23
 32183 1e30 FD130000 		.4byte	.LASF244
 32184 1e34 01       		.byte	0x1
 32185 1e35 C30D     		.2byte	0xdc3
 32186 1e37 831E0000 		.4byte	0x1e83
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 690


 32187 1e3b 02       		.uleb128 0x2
 32188 1e3c 91       		.byte	0x91
 32189 1e3d 70       		.sleb128 -16
 32190 1e3e 23       		.uleb128 0x23
 32191 1e3f 48080000 		.4byte	.LASF327
 32192 1e43 01       		.byte	0x1
 32193 1e44 C40D     		.2byte	0xdc4
 32194 1e46 831E0000 		.4byte	0x1e83
 32195 1e4a 05       		.uleb128 0x5
 32196 1e4b 03       		.byte	0x3
 32197 1e4c 08000000 		.4byte	last_aux_int16.11165
 32198 1e50 2F       		.uleb128 0x2f
 32199 1e51 2E000000 		.4byte	.LBB31
 32200 1e55 50000000 		.4byte	.LBE31-.LBB31
 32201 1e59 6B1E0000 		.4byte	0x1e6b
 32202 1e5d 26       		.uleb128 0x26
 32203 1e5e 6900     		.ascii	"i\000"
 32204 1e60 01       		.byte	0x1
 32205 1e61 CB0D     		.2byte	0xdcb
 32206 1e63 97000000 		.4byte	0x97
 32207 1e67 02       		.uleb128 0x2
 32208 1e68 91       		.byte	0x91
 32209 1e69 77       		.sleb128 -9
 32210 1e6a 00       		.byte	0
 32211 1e6b 1E       		.uleb128 0x1e
 32212 1e6c 88000000 		.4byte	.LBB32
 32213 1e70 98010000 		.4byte	.LBE32-.LBB32
 32214 1e74 26       		.uleb128 0x26
 32215 1e75 6900     		.ascii	"i\000"
 32216 1e77 01       		.byte	0x1
 32217 1e78 D50D     		.2byte	0xdd5
 32218 1e7a 97000000 		.4byte	0x97
 32219 1e7e 02       		.uleb128 0x2
 32220 1e7f 91       		.byte	0x91
 32221 1e80 76       		.sleb128 -10
 32222 1e81 00       		.byte	0
 32223 1e82 00       		.byte	0
 32224 1e83 09       		.uleb128 0x9
 32225 1e84 C7000000 		.4byte	0xc7
 32226 1e88 931E0000 		.4byte	0x1e93
 32227 1e8c 0A       		.uleb128 0xa
 32228 1e8d 18010000 		.4byte	0x118
 32229 1e91 01       		.byte	0x1
 32230 1e92 00       		.byte	0
 32231 1e93 27       		.uleb128 0x27
 32232 1e94 81160000 		.4byte	.LASF328
 32233 1e98 01       		.byte	0x1
 32234 1e99 F00D     		.2byte	0xdf0
 32235 1e9b 00000000 		.4byte	.LFB99
 32236 1e9f E4000000 		.4byte	.LFE99-.LFB99
 32237 1ea3 01       		.uleb128 0x1
 32238 1ea4 9C       		.byte	0x9c
 32239 1ea5 B91E0000 		.4byte	0x1eb9
 32240 1ea9 26       		.uleb128 0x26
 32241 1eaa 61757800 		.ascii	"aux\000"
 32242 1eae 01       		.byte	0x1
 32243 1eaf F30D     		.2byte	0xdf3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 691


 32244 1eb1 97000000 		.4byte	0x97
 32245 1eb5 02       		.uleb128 0x2
 32246 1eb6 91       		.byte	0x91
 32247 1eb7 77       		.sleb128 -9
 32248 1eb8 00       		.byte	0
 32249 1eb9 27       		.uleb128 0x27
 32250 1eba 160E0000 		.4byte	.LASF329
 32251 1ebe 01       		.byte	0x1
 32252 1ebf 150E     		.2byte	0xe15
 32253 1ec1 00000000 		.4byte	.LFB100
 32254 1ec5 5C000000 		.4byte	.LFE100-.LFB100
 32255 1ec9 01       		.uleb128 0x1
 32256 1eca 9C       		.byte	0x9c
 32257 1ecb DF1E0000 		.4byte	0x1edf
 32258 1ecf 23       		.uleb128 0x23
 32259 1ed0 6E070000 		.4byte	.LASF238
 32260 1ed4 01       		.byte	0x1
 32261 1ed5 170E     		.2byte	0xe17
 32262 1ed7 28060000 		.4byte	0x628
 32263 1edb 02       		.uleb128 0x2
 32264 1edc 91       		.byte	0x91
 32265 1edd 74       		.sleb128 -12
 32266 1ede 00       		.byte	0
 32267 1edf 27       		.uleb128 0x27
 32268 1ee0 FF110000 		.4byte	.LASF330
 32269 1ee4 01       		.byte	0x1
 32270 1ee5 2C0E     		.2byte	0xe2c
 32271 1ee7 00000000 		.4byte	.LFB101
 32272 1eeb 38010000 		.4byte	.LFE101-.LFB101
 32273 1eef 01       		.uleb128 0x1
 32274 1ef0 9C       		.byte	0x9c
 32275 1ef1 231F0000 		.4byte	0x1f23
 32276 1ef5 23       		.uleb128 0x23
 32277 1ef6 86080000 		.4byte	.LASF253
 32278 1efa 01       		.byte	0x1
 32279 1efb 2E0E     		.2byte	0xe2e
 32280 1efd 97000000 		.4byte	0x97
 32281 1f01 02       		.uleb128 0x2
 32282 1f02 91       		.byte	0x91
 32283 1f03 6F       		.sleb128 -17
 32284 1f04 23       		.uleb128 0x23
 32285 1f05 FD130000 		.4byte	.LASF244
 32286 1f09 01       		.byte	0x1
 32287 1f0a 2F0E     		.2byte	0xe2f
 32288 1f0c C7000000 		.4byte	0xc7
 32289 1f10 02       		.uleb128 0x2
 32290 1f11 91       		.byte	0x91
 32291 1f12 6C       		.sleb128 -20
 32292 1f13 23       		.uleb128 0x23
 32293 1f14 6E070000 		.4byte	.LASF238
 32294 1f18 01       		.byte	0x1
 32295 1f19 330E     		.2byte	0xe33
 32296 1f1b 89050000 		.4byte	0x589
 32297 1f1f 02       		.uleb128 0x2
 32298 1f20 91       		.byte	0x91
 32299 1f21 60       		.sleb128 -32
 32300 1f22 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 692


 32301 1f23 27       		.uleb128 0x27
 32302 1f24 210C0000 		.4byte	.LASF331
 32303 1f28 01       		.byte	0x1
 32304 1f29 530E     		.2byte	0xe53
 32305 1f2b 00000000 		.4byte	.LFB102
 32306 1f2f DC000000 		.4byte	.LFE102-.LFB102
 32307 1f33 01       		.uleb128 0x1
 32308 1f34 9C       		.byte	0x9c
 32309 1f35 581F0000 		.4byte	0x1f58
 32310 1f39 23       		.uleb128 0x23
 32311 1f3a 6E070000 		.4byte	.LASF238
 32312 1f3e 01       		.byte	0x1
 32313 1f3f 570E     		.2byte	0xe57
 32314 1f41 A8090000 		.4byte	0x9a8
 32315 1f45 02       		.uleb128 0x2
 32316 1f46 91       		.byte	0x91
 32317 1f47 68       		.sleb128 -24
 32318 1f48 23       		.uleb128 0x23
 32319 1f49 FD130000 		.4byte	.LASF244
 32320 1f4d 01       		.byte	0x1
 32321 1f4e 580E     		.2byte	0xe58
 32322 1f50 C7000000 		.4byte	0xc7
 32323 1f54 02       		.uleb128 0x2
 32324 1f55 91       		.byte	0x91
 32325 1f56 66       		.sleb128 -26
 32326 1f57 00       		.byte	0
 32327 1f58 27       		.uleb128 0x27
 32328 1f59 FA080000 		.4byte	.LASF332
 32329 1f5d 01       		.byte	0x1
 32330 1f5e 7A0E     		.2byte	0xe7a
 32331 1f60 00000000 		.4byte	.LFB103
 32332 1f64 64000000 		.4byte	.LFE103-.LFB103
 32333 1f68 01       		.uleb128 0x1
 32334 1f69 9C       		.byte	0x9c
 32335 1f6a 8D1F0000 		.4byte	0x1f8d
 32336 1f6e 23       		.uleb128 0x23
 32337 1f6f 6E070000 		.4byte	.LASF238
 32338 1f73 01       		.byte	0x1
 32339 1f74 7E0E     		.2byte	0xe7e
 32340 1f76 8D1F0000 		.4byte	0x1f8d
 32341 1f7a 02       		.uleb128 0x2
 32342 1f7b 91       		.byte	0x91
 32343 1f7c 74       		.sleb128 -12
 32344 1f7d 23       		.uleb128 0x23
 32345 1f7e FD130000 		.4byte	.LASF244
 32346 1f82 01       		.byte	0x1
 32347 1f83 7F0E     		.2byte	0xe7f
 32348 1f85 C7000000 		.4byte	0xc7
 32349 1f89 02       		.uleb128 0x2
 32350 1f8a 91       		.byte	0x91
 32351 1f8b 72       		.sleb128 -14
 32352 1f8c 00       		.byte	0
 32353 1f8d 09       		.uleb128 0x9
 32354 1f8e 97000000 		.4byte	0x97
 32355 1f92 9D1F0000 		.4byte	0x1f9d
 32356 1f96 0A       		.uleb128 0xa
 32357 1f97 18010000 		.4byte	0x118
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 693


 32358 1f9b 03       		.byte	0x3
 32359 1f9c 00       		.byte	0
 32360 1f9d 2D       		.uleb128 0x2d
 32361 1f9e EC090000 		.4byte	.LASF334
 32362 1fa2 01       		.byte	0x1
 32363 1fa3 900E     		.2byte	0xe90
 32364 1fa5 00000000 		.4byte	.LFB104
 32365 1fa9 0C000000 		.4byte	.LFE104-.LFB104
 32366 1fad 01       		.uleb128 0x1
 32367 1fae 9C       		.byte	0x9c
 32368 1faf 27       		.uleb128 0x27
 32369 1fb0 D0160000 		.4byte	.LASF335
 32370 1fb4 01       		.byte	0x1
 32371 1fb5 970E     		.2byte	0xe97
 32372 1fb7 00000000 		.4byte	.LFB105
 32373 1fbb C4000000 		.4byte	.LFE105-.LFB105
 32374 1fbf 01       		.uleb128 0x1
 32375 1fc0 9C       		.byte	0x9c
 32376 1fc1 11200000 		.4byte	0x2011
 32377 1fc5 23       		.uleb128 0x23
 32378 1fc6 6E070000 		.4byte	.LASF238
 32379 1fca 01       		.byte	0x1
 32380 1fcb 9C0E     		.2byte	0xe9c
 32381 1fcd 11200000 		.4byte	0x2011
 32382 1fd1 02       		.uleb128 0x2
 32383 1fd2 91       		.byte	0x91
 32384 1fd3 5C       		.sleb128 -36
 32385 1fd4 23       		.uleb128 0x23
 32386 1fd5 450A0000 		.4byte	.LASF239
 32387 1fd9 01       		.byte	0x1
 32388 1fda 9D0E     		.2byte	0xe9d
 32389 1fdc 97000000 		.4byte	0x97
 32390 1fe0 02       		.uleb128 0x2
 32391 1fe1 91       		.byte	0x91
 32392 1fe2 76       		.sleb128 -10
 32393 1fe3 23       		.uleb128 0x23
 32394 1fe4 5E030000 		.4byte	.LASF336
 32395 1fe8 01       		.byte	0x1
 32396 1fe9 9F0E     		.2byte	0xe9f
 32397 1feb AF000000 		.4byte	0xaf
 32398 1fef 02       		.uleb128 0x2
 32399 1ff0 91       		.byte	0x91
 32400 1ff1 70       		.sleb128 -16
 32401 1ff2 23       		.uleb128 0x23
 32402 1ff3 6E150000 		.4byte	.LASF337
 32403 1ff7 01       		.byte	0x1
 32404 1ff8 9F0E     		.2byte	0xe9f
 32405 1ffa AF000000 		.4byte	0xaf
 32406 1ffe 02       		.uleb128 0x2
 32407 1fff 91       		.byte	0x91
 32408 2000 6C       		.sleb128 -20
 32409 2001 23       		.uleb128 0x23
 32410 2002 74050000 		.4byte	.LASF338
 32411 2006 01       		.byte	0x1
 32412 2007 A00E     		.2byte	0xea0
 32413 2009 97000000 		.4byte	0x97
 32414 200d 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 694


 32415 200e 91       		.byte	0x91
 32416 200f 77       		.sleb128 -9
 32417 2010 00       		.byte	0
 32418 2011 09       		.uleb128 0x9
 32419 2012 97000000 		.4byte	0x97
 32420 2016 21200000 		.4byte	0x2021
 32421 201a 0A       		.uleb128 0xa
 32422 201b 18010000 		.4byte	0x118
 32423 201f 0F       		.byte	0xf
 32424 2020 00       		.byte	0
 32425 2021 30       		.uleb128 0x30
 32426 2022 E4080000 		.4byte	.LASF339
 32427 2026 01       		.byte	0x1
 32428 2027 C10E     		.2byte	0xec1
 32429 2029 C7000000 		.4byte	0xc7
 32430 202d 00000000 		.4byte	.LFB106
 32431 2031 A8000000 		.4byte	.LFE106-.LFB106
 32432 2035 01       		.uleb128 0x1
 32433 2036 9C       		.byte	0x9c
 32434 2037 96200000 		.4byte	0x2096
 32435 203b 23       		.uleb128 0x23
 32436 203c 6E070000 		.4byte	.LASF238
 32437 2040 01       		.byte	0x1
 32438 2041 C30E     		.2byte	0xec3
 32439 2043 11200000 		.4byte	0x2011
 32440 2047 02       		.uleb128 0x2
 32441 2048 91       		.byte	0x91
 32442 2049 5C       		.sleb128 -36
 32443 204a 23       		.uleb128 0x23
 32444 204b 450A0000 		.4byte	.LASF239
 32445 204f 01       		.byte	0x1
 32446 2050 C40E     		.2byte	0xec4
 32447 2052 97000000 		.4byte	0x97
 32448 2056 02       		.uleb128 0x2
 32449 2057 91       		.byte	0x91
 32450 2058 74       		.sleb128 -12
 32451 2059 23       		.uleb128 0x23
 32452 205a 89110000 		.4byte	.LASF340
 32453 205e 01       		.byte	0x1
 32454 205f C50E     		.2byte	0xec5
 32455 2061 C7000000 		.4byte	0xc7
 32456 2065 02       		.uleb128 0x2
 32457 2066 91       		.byte	0x91
 32458 2067 76       		.sleb128 -10
 32459 2068 23       		.uleb128 0x23
 32460 2069 5E030000 		.4byte	.LASF336
 32461 206d 01       		.byte	0x1
 32462 206e C60E     		.2byte	0xec6
 32463 2070 AF000000 		.4byte	0xaf
 32464 2074 02       		.uleb128 0x2
 32465 2075 91       		.byte	0x91
 32466 2076 70       		.sleb128 -16
 32467 2077 23       		.uleb128 0x23
 32468 2078 6E150000 		.4byte	.LASF337
 32469 207c 01       		.byte	0x1
 32470 207d C60E     		.2byte	0xec6
 32471 207f AF000000 		.4byte	0xaf
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 695


 32472 2083 02       		.uleb128 0x2
 32473 2084 91       		.byte	0x91
 32474 2085 6C       		.sleb128 -20
 32475 2086 23       		.uleb128 0x23
 32476 2087 74050000 		.4byte	.LASF338
 32477 208b 01       		.byte	0x1
 32478 208c C70E     		.2byte	0xec7
 32479 208e 97000000 		.4byte	0x97
 32480 2092 02       		.uleb128 0x2
 32481 2093 91       		.byte	0x91
 32482 2094 75       		.sleb128 -11
 32483 2095 00       		.byte	0
 32484 2096 31       		.uleb128 0x31
 32485 2097 75010000 		.4byte	.LASF341
 32486 209b 01       		.byte	0x1
 32487 209c E70E     		.2byte	0xee7
 32488 209e 00000000 		.4byte	.LFB107
 32489 20a2 34000000 		.4byte	.LFE107-.LFB107
 32490 20a6 01       		.uleb128 0x1
 32491 20a7 9C       		.byte	0x9c
 32492 20a8 27       		.uleb128 0x27
 32493 20a9 B6040000 		.4byte	.LASF342
 32494 20ad 01       		.byte	0x1
 32495 20ae F50E     		.2byte	0xef5
 32496 20b0 00000000 		.4byte	.LFB108
 32497 20b4 20000000 		.4byte	.LFE108-.LFB108
 32498 20b8 01       		.uleb128 0x1
 32499 20b9 9C       		.byte	0x9c
 32500 20ba CE200000 		.4byte	0x20ce
 32501 20be 23       		.uleb128 0x23
 32502 20bf 6E070000 		.4byte	.LASF238
 32503 20c3 01       		.byte	0x1
 32504 20c4 F70E     		.2byte	0xef7
 32505 20c6 E4080000 		.4byte	0x8e4
 32506 20ca 02       		.uleb128 0x2
 32507 20cb 91       		.byte	0x91
 32508 20cc 74       		.sleb128 -12
 32509 20cd 00       		.byte	0
 32510 20ce 27       		.uleb128 0x27
 32511 20cf ED010000 		.4byte	.LASF343
 32512 20d3 01       		.byte	0x1
 32513 20d4 030F     		.2byte	0xf03
 32514 20d6 00000000 		.4byte	.LFB109
 32515 20da A0000000 		.4byte	.LFE109-.LFB109
 32516 20de 01       		.uleb128 0x1
 32517 20df 9C       		.byte	0x9c
 32518 20e0 03210000 		.4byte	0x2103
 32519 20e4 23       		.uleb128 0x23
 32520 20e5 6E070000 		.4byte	.LASF238
 32521 20e9 01       		.byte	0x1
 32522 20ea 070F     		.2byte	0xf07
 32523 20ec A8090000 		.4byte	0x9a8
 32524 20f0 02       		.uleb128 0x2
 32525 20f1 91       		.byte	0x91
 32526 20f2 70       		.sleb128 -16
 32527 20f3 23       		.uleb128 0x23
 32528 20f4 FD130000 		.4byte	.LASF244
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 696


 32529 20f8 01       		.byte	0x1
 32530 20f9 080F     		.2byte	0xf08
 32531 20fb C7000000 		.4byte	0xc7
 32532 20ff 02       		.uleb128 0x2
 32533 2100 91       		.byte	0x91
 32534 2101 6E       		.sleb128 -18
 32535 2102 00       		.byte	0
 32536 2103 27       		.uleb128 0x27
 32537 2104 C8120000 		.4byte	.LASF344
 32538 2108 01       		.byte	0x1
 32539 2109 1C0F     		.2byte	0xf1c
 32540 210b 00000000 		.4byte	.LFB110
 32541 210f BC010000 		.4byte	.LFE110-.LFB110
 32542 2113 01       		.uleb128 0x1
 32543 2114 9C       		.byte	0x9c
 32544 2115 65210000 		.4byte	0x2165
 32545 2119 23       		.uleb128 0x23
 32546 211a D40D0000 		.4byte	.LASF345
 32547 211e 01       		.byte	0x1
 32548 211f 1F0F     		.2byte	0xf1f
 32549 2121 AF000000 		.4byte	0xaf
 32550 2125 02       		.uleb128 0x2
 32551 2126 91       		.byte	0x91
 32552 2127 70       		.sleb128 -16
 32553 2128 23       		.uleb128 0x23
 32554 2129 19110000 		.4byte	.LASF346
 32555 212d 01       		.byte	0x1
 32556 212e 200F     		.2byte	0xf20
 32557 2130 EB000000 		.4byte	0xeb
 32558 2134 02       		.uleb128 0x2
 32559 2135 91       		.byte	0x91
 32560 2136 6C       		.sleb128 -20
 32561 2137 23       		.uleb128 0x23
 32562 2138 450A0000 		.4byte	.LASF239
 32563 213c 01       		.byte	0x1
 32564 213d 210F     		.2byte	0xf21
 32565 213f 97000000 		.4byte	0x97
 32566 2143 02       		.uleb128 0x2
 32567 2144 91       		.byte	0x91
 32568 2145 77       		.sleb128 -9
 32569 2146 23       		.uleb128 0x23
 32570 2147 6E070000 		.4byte	.LASF238
 32571 214b 01       		.byte	0x1
 32572 214c 220F     		.2byte	0xf22
 32573 214e E4080000 		.4byte	0x8e4
 32574 2152 02       		.uleb128 0x2
 32575 2153 91       		.byte	0x91
 32576 2154 68       		.sleb128 -24
 32577 2155 23       		.uleb128 0x23
 32578 2156 C6110000 		.4byte	.LASF301
 32579 215a 01       		.byte	0x1
 32580 215b 230F     		.2byte	0xf23
 32581 215d 97000000 		.4byte	0x97
 32582 2161 02       		.uleb128 0x2
 32583 2162 91       		.byte	0x91
 32584 2163 6B       		.sleb128 -21
 32585 2164 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 697


 32586 2165 27       		.uleb128 0x27
 32587 2166 A6020000 		.4byte	.LASF347
 32588 216a 01       		.byte	0x1
 32589 216b 5D0F     		.2byte	0xf5d
 32590 216d 00000000 		.4byte	.LFB111
 32591 2171 60000000 		.4byte	.LFE111-.LFB111
 32592 2175 01       		.uleb128 0x1
 32593 2176 9C       		.byte	0x9c
 32594 2177 9A210000 		.4byte	0x219a
 32595 217b 23       		.uleb128 0x23
 32596 217c 6E070000 		.4byte	.LASF238
 32597 2180 01       		.byte	0x1
 32598 2181 5F0F     		.2byte	0xf5f
 32599 2183 A8090000 		.4byte	0x9a8
 32600 2187 02       		.uleb128 0x2
 32601 2188 91       		.byte	0x91
 32602 2189 70       		.sleb128 -16
 32603 218a 23       		.uleb128 0x23
 32604 218b FD130000 		.4byte	.LASF244
 32605 218f 01       		.byte	0x1
 32606 2190 600F     		.2byte	0xf60
 32607 2192 C7000000 		.4byte	0xc7
 32608 2196 02       		.uleb128 0x2
 32609 2197 91       		.byte	0x91
 32610 2198 6E       		.sleb128 -18
 32611 2199 00       		.byte	0
 32612 219a 27       		.uleb128 0x27
 32613 219b 29020000 		.4byte	.LASF348
 32614 219f 01       		.byte	0x1
 32615 21a0 730F     		.2byte	0xf73
 32616 21a2 00000000 		.4byte	.LFB112
 32617 21a6 98050000 		.4byte	.LFE112-.LFB112
 32618 21aa 01       		.uleb128 0x1
 32619 21ab 9C       		.byte	0x9c
 32620 21ac 27220000 		.4byte	0x2227
 32621 21b0 23       		.uleb128 0x23
 32622 21b1 BC150000 		.4byte	.LASF349
 32623 21b5 01       		.byte	0x1
 32624 21b6 760F     		.2byte	0xf76
 32625 21b8 97000000 		.4byte	0x97
 32626 21bc 02       		.uleb128 0x2
 32627 21bd 91       		.byte	0x91
 32628 21be 6F       		.sleb128 -17
 32629 21bf 26       		.uleb128 0x26
 32630 21c0 6300     		.ascii	"c\000"
 32631 21c2 01       		.byte	0x1
 32632 21c3 770F     		.2byte	0xf77
 32633 21c5 A3000000 		.4byte	0xa3
 32634 21c9 02       		.uleb128 0x2
 32635 21ca 91       		.byte	0x91
 32636 21cb 6C       		.sleb128 -20
 32637 21cc 26       		.uleb128 0x26
 32638 21cd 6B00     		.ascii	"k\000"
 32639 21cf 01       		.byte	0x1
 32640 21d0 780F     		.2byte	0xf78
 32641 21d2 97000000 		.4byte	0x97
 32642 21d6 02       		.uleb128 0x2
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 698


 32643 21d7 91       		.byte	0x91
 32644 21d8 6B       		.sleb128 -21
 32645 21d9 23       		.uleb128 0x23
 32646 21da 6A000000 		.4byte	.LASF350
 32647 21de 01       		.byte	0x1
 32648 21df 790F     		.2byte	0xf79
 32649 21e1 A3000000 		.4byte	0xa3
 32650 21e5 02       		.uleb128 0x2
 32651 21e6 91       		.byte	0x91
 32652 21e7 68       		.sleb128 -24
 32653 21e8 23       		.uleb128 0x23
 32654 21e9 FD130000 		.4byte	.LASF244
 32655 21ed 01       		.byte	0x1
 32656 21ee 7A0F     		.2byte	0xf7a
 32657 21f0 C7000000 		.4byte	0xc7
 32658 21f4 02       		.uleb128 0x2
 32659 21f5 91       		.byte	0x91
 32660 21f6 66       		.sleb128 -26
 32661 21f7 23       		.uleb128 0x23
 32662 21f8 39150000 		.4byte	.LASF243
 32663 21fc 01       		.byte	0x1
 32664 21fd 7B0F     		.2byte	0xf7b
 32665 21ff EB000000 		.4byte	0xeb
 32666 2203 02       		.uleb128 0x2
 32667 2204 91       		.byte	0x91
 32668 2205 60       		.sleb128 -32
 32669 2206 23       		.uleb128 0x23
 32670 2207 6E070000 		.4byte	.LASF238
 32671 220b 01       		.byte	0x1
 32672 220c 7E0F     		.2byte	0xf7e
 32673 220e 27220000 		.4byte	0x2227
 32674 2212 03       		.uleb128 0x3
 32675 2213 91       		.byte	0x91
 32676 2214 807D     		.sleb128 -384
 32677 2216 23       		.uleb128 0x23
 32678 2217 D50A0000 		.4byte	.LASF351
 32679 221b 01       		.byte	0x1
 32680 221c 7F0F     		.2byte	0xf7f
 32681 221e 910C0000 		.4byte	0xc91
 32682 2222 03       		.uleb128 0x3
 32683 2223 91       		.byte	0x91
 32684 2224 E07C     		.sleb128 -416
 32685 2226 00       		.byte	0
 32686 2227 09       		.uleb128 0x9
 32687 2228 97000000 		.4byte	0x97
 32688 222c 38220000 		.4byte	0x2238
 32689 2230 24       		.uleb128 0x24
 32690 2231 18010000 		.4byte	0x118
 32691 2235 5D01     		.2byte	0x15d
 32692 2237 00       		.byte	0
 32693 2238 27       		.uleb128 0x27
 32694 2239 14150000 		.4byte	.LASF352
 32695 223d 01       		.byte	0x1
 32696 223e E20F     		.2byte	0xfe2
 32697 2240 00000000 		.4byte	.LFB113
 32698 2244 8C000000 		.4byte	.LFE113-.LFB113
 32699 2248 01       		.uleb128 0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 699


 32700 2249 9C       		.byte	0x9c
 32701 224a 78220000 		.4byte	0x2278
 32702 224e 23       		.uleb128 0x23
 32703 224f 6E070000 		.4byte	.LASF238
 32704 2253 01       		.byte	0x1
 32705 2254 E50F     		.2byte	0xfe5
 32706 2256 C30A0000 		.4byte	0xac3
 32707 225a 02       		.uleb128 0x2
 32708 225b 91       		.byte	0x91
 32709 225c 60       		.sleb128 -32
 32710 225d 26       		.uleb128 0x26
 32711 225e 6900     		.ascii	"i\000"
 32712 2260 01       		.byte	0x1
 32713 2261 E60F     		.2byte	0xfe6
 32714 2263 97000000 		.4byte	0x97
 32715 2267 02       		.uleb128 0x2
 32716 2268 91       		.byte	0x91
 32717 2269 6F       		.sleb128 -17
 32718 226a 26       		.uleb128 0x26
 32719 226b 6A00     		.ascii	"j\000"
 32720 226d 01       		.byte	0x1
 32721 226e E60F     		.2byte	0xfe6
 32722 2270 97000000 		.4byte	0x97
 32723 2274 02       		.uleb128 0x2
 32724 2275 91       		.byte	0x91
 32725 2276 6E       		.sleb128 -18
 32726 2277 00       		.byte	0
 32727 2278 27       		.uleb128 0x27
 32728 2279 1D130000 		.4byte	.LASF353
 32729 227d 01       		.byte	0x1
 32730 227e FB0F     		.2byte	0xffb
 32731 2280 00000000 		.4byte	.LFB114
 32732 2284 EC000000 		.4byte	.LFE114-.LFB114
 32733 2288 01       		.uleb128 0x1
 32734 2289 9C       		.byte	0x9c
 32735 228a D6220000 		.4byte	0x22d6
 32736 228e 23       		.uleb128 0x23
 32737 228f 6E070000 		.4byte	.LASF238
 32738 2293 01       		.byte	0x1
 32739 2294 FE0F     		.2byte	0xffe
 32740 2296 D6220000 		.4byte	0x22d6
 32741 229a 02       		.uleb128 0x2
 32742 229b 91       		.byte	0x91
 32743 229c 54       		.sleb128 -44
 32744 229d 26       		.uleb128 0x26
 32745 229e 6900     		.ascii	"i\000"
 32746 22a0 01       		.byte	0x1
 32747 22a1 FF0F     		.2byte	0xfff
 32748 22a3 97000000 		.4byte	0x97
 32749 22a7 02       		.uleb128 0x2
 32750 22a8 91       		.byte	0x91
 32751 22a9 6F       		.sleb128 -17
 32752 22aa 26       		.uleb128 0x26
 32753 22ab 6A00     		.ascii	"j\000"
 32754 22ad 01       		.byte	0x1
 32755 22ae FF0F     		.2byte	0xfff
 32756 22b0 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 700


 32757 22b4 02       		.uleb128 0x2
 32758 22b5 91       		.byte	0x91
 32759 22b6 6E       		.sleb128 -18
 32760 22b7 26       		.uleb128 0x26
 32761 22b8 69647800 		.ascii	"idx\000"
 32762 22bc 01       		.byte	0x1
 32763 22bd FF0F     		.2byte	0xfff
 32764 22bf 97000000 		.4byte	0x97
 32765 22c3 02       		.uleb128 0x2
 32766 22c4 91       		.byte	0x91
 32767 22c5 6D       		.sleb128 -19
 32768 22c6 23       		.uleb128 0x23
 32769 22c7 AD0E0000 		.4byte	.LASF245
 32770 22cb 01       		.byte	0x1
 32771 22cc 0010     		.2byte	0x1000
 32772 22ce A3000000 		.4byte	0xa3
 32773 22d2 02       		.uleb128 0x2
 32774 22d3 91       		.byte	0x91
 32775 22d4 52       		.sleb128 -46
 32776 22d5 00       		.byte	0
 32777 22d6 09       		.uleb128 0x9
 32778 22d7 97000000 		.4byte	0x97
 32779 22db E6220000 		.4byte	0x22e6
 32780 22df 0A       		.uleb128 0xa
 32781 22e0 18010000 		.4byte	0x118
 32782 22e4 15       		.byte	0x15
 32783 22e5 00       		.byte	0
 32784 22e6 27       		.uleb128 0x27
 32785 22e7 4C040000 		.4byte	.LASF354
 32786 22eb 01       		.byte	0x1
 32787 22ec 1910     		.2byte	0x1019
 32788 22ee 00000000 		.4byte	.LFB115
 32789 22f2 5C000000 		.4byte	.LFE115-.LFB115
 32790 22f6 01       		.uleb128 0x1
 32791 22f7 9C       		.byte	0x9c
 32792 22f8 19230000 		.4byte	0x2319
 32793 22fc 23       		.uleb128 0x23
 32794 22fd 6E070000 		.4byte	.LASF238
 32795 2301 01       		.byte	0x1
 32796 2302 1C10     		.2byte	0x101c
 32797 2304 810C0000 		.4byte	0xc81
 32798 2308 02       		.uleb128 0x2
 32799 2309 91       		.byte	0x91
 32800 230a 68       		.sleb128 -24
 32801 230b 26       		.uleb128 0x26
 32802 230c 6900     		.ascii	"i\000"
 32803 230e 01       		.byte	0x1
 32804 230f 1D10     		.2byte	0x101d
 32805 2311 97000000 		.4byte	0x97
 32806 2315 02       		.uleb128 0x2
 32807 2316 91       		.byte	0x91
 32808 2317 77       		.sleb128 -9
 32809 2318 00       		.byte	0
 32810 2319 27       		.uleb128 0x27
 32811 231a 84040000 		.4byte	.LASF355
 32812 231e 01       		.byte	0x1
 32813 231f 3010     		.2byte	0x1030
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 701


 32814 2321 00000000 		.4byte	.LFB116
 32815 2325 C0000000 		.4byte	.LFE116-.LFB116
 32816 2329 01       		.uleb128 0x1
 32817 232a 9C       		.byte	0x9c
 32818 232b 6A230000 		.4byte	0x236a
 32819 232f 23       		.uleb128 0x23
 32820 2330 6E070000 		.4byte	.LASF238
 32821 2334 01       		.byte	0x1
 32822 2335 3310     		.2byte	0x1033
 32823 2337 6A230000 		.4byte	0x236a
 32824 233b 02       		.uleb128 0x2
 32825 233c 91       		.byte	0x91
 32826 233d 54       		.sleb128 -44
 32827 233e 26       		.uleb128 0x26
 32828 233f 6900     		.ascii	"i\000"
 32829 2341 01       		.byte	0x1
 32830 2342 3410     		.2byte	0x1034
 32831 2344 97000000 		.4byte	0x97
 32832 2348 02       		.uleb128 0x2
 32833 2349 91       		.byte	0x91
 32834 234a 6F       		.sleb128 -17
 32835 234b 26       		.uleb128 0x26
 32836 234c 69647800 		.ascii	"idx\000"
 32837 2350 01       		.byte	0x1
 32838 2351 3410     		.2byte	0x1034
 32839 2353 97000000 		.4byte	0x97
 32840 2357 02       		.uleb128 0x2
 32841 2358 91       		.byte	0x91
 32842 2359 6E       		.sleb128 -18
 32843 235a 23       		.uleb128 0x23
 32844 235b FD130000 		.4byte	.LASF244
 32845 235f 01       		.byte	0x1
 32846 2360 3510     		.2byte	0x1035
 32847 2362 C7000000 		.4byte	0xc7
 32848 2366 02       		.uleb128 0x2
 32849 2367 91       		.byte	0x91
 32850 2368 52       		.sleb128 -46
 32851 2369 00       		.byte	0
 32852 236a 09       		.uleb128 0x9
 32853 236b 97000000 		.4byte	0x97
 32854 236f 7A230000 		.4byte	0x237a
 32855 2373 0A       		.uleb128 0xa
 32856 2374 18010000 		.4byte	0x118
 32857 2378 19       		.byte	0x19
 32858 2379 00       		.byte	0
 32859 237a 22       		.uleb128 0x22
 32860 237b F6030000 		.4byte	.LASF356
 32861 237f 01       		.byte	0x1
 32862 2380 4B10     		.2byte	0x104b
 32863 2382 00000000 		.4byte	.LFB117
 32864 2386 54010000 		.4byte	.LFE117-.LFB117
 32865 238a 01       		.uleb128 0x1
 32866 238b 9C       		.byte	0x9c
 32867 238c CF230000 		.4byte	0x23cf
 32868 2390 25       		.uleb128 0x25
 32869 2391 CB080000 		.4byte	.LASF357
 32870 2395 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 702


 32871 2396 4B10     		.2byte	0x104b
 32872 2398 A3000000 		.4byte	0xa3
 32873 239c 04       		.uleb128 0x4
 32874 239d 91       		.byte	0x91
 32875 239e 9EE37E   		.sleb128 -20066
 32876 23a1 26       		.uleb128 0x26
 32877 23a2 6900     		.ascii	"i\000"
 32878 23a4 01       		.byte	0x1
 32879 23a5 4D10     		.2byte	0x104d
 32880 23a7 97000000 		.4byte	0x97
 32881 23ab 02       		.uleb128 0x2
 32882 23ac 91       		.byte	0x91
 32883 23ad 77       		.sleb128 -9
 32884 23ae 23       		.uleb128 0x23
 32885 23af 59050000 		.4byte	.LASF358
 32886 23b3 01       		.byte	0x1
 32887 23b4 4E10     		.2byte	0x104e
 32888 23b6 2C110000 		.4byte	0x112c
 32889 23ba 02       		.uleb128 0x2
 32890 23bb 91       		.byte	0x91
 32891 23bc 44       		.sleb128 -60
 32892 23bd 23       		.uleb128 0x23
 32893 23be 080A0000 		.4byte	.LASF227
 32894 23c2 01       		.byte	0x1
 32895 23c3 4F10     		.2byte	0x104f
 32896 23c5 540F0000 		.4byte	0xf54
 32897 23c9 04       		.uleb128 0x4
 32898 23ca 91       		.byte	0x91
 32899 23cb A4E37E   		.sleb128 -20060
 32900 23ce 00       		.byte	0
 32901 23cf 22       		.uleb128 0x22
 32902 23d0 E3040000 		.4byte	.LASF359
 32903 23d4 01       		.byte	0x1
 32904 23d5 6710     		.2byte	0x1067
 32905 23d7 00000000 		.4byte	.LFB118
 32906 23db B0000000 		.4byte	.LFE118-.LFB118
 32907 23df 01       		.uleb128 0x1
 32908 23e0 9C       		.byte	0x9c
 32909 23e1 30240000 		.4byte	0x2430
 32910 23e5 25       		.uleb128 0x25
 32911 23e6 CB080000 		.4byte	.LASF357
 32912 23ea 01       		.byte	0x1
 32913 23eb 6710     		.2byte	0x1067
 32914 23ed A3000000 		.4byte	0xa3
 32915 23f1 03       		.uleb128 0x3
 32916 23f2 91       		.byte	0x91
 32917 23f3 BE7F     		.sleb128 -66
 32918 23f5 26       		.uleb128 0x26
 32919 23f6 6900     		.ascii	"i\000"
 32920 23f8 01       		.byte	0x1
 32921 23f9 6910     		.2byte	0x1069
 32922 23fb 97000000 		.4byte	0x97
 32923 23ff 02       		.uleb128 0x2
 32924 2400 91       		.byte	0x91
 32925 2401 77       		.sleb128 -9
 32926 2402 23       		.uleb128 0x23
 32927 2403 59050000 		.4byte	.LASF358
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 703


 32928 2407 01       		.byte	0x1
 32929 2408 6A10     		.2byte	0x106a
 32930 240a 2C110000 		.4byte	0x112c
 32931 240e 02       		.uleb128 0x2
 32932 240f 91       		.byte	0x91
 32933 2410 44       		.sleb128 -60
 32934 2411 26       		.uleb128 0x26
 32935 2412 72657300 		.ascii	"res\000"
 32936 2416 01       		.byte	0x1
 32937 2417 7310     		.2byte	0x1073
 32938 2419 97000000 		.4byte	0x97
 32939 241d 02       		.uleb128 0x2
 32940 241e 91       		.byte	0x91
 32941 241f 76       		.sleb128 -10
 32942 2420 23       		.uleb128 0x23
 32943 2421 6E070000 		.4byte	.LASF238
 32944 2425 01       		.byte	0x1
 32945 2426 7610     		.2byte	0x1076
 32946 2428 28060000 		.4byte	0x628
 32947 242c 02       		.uleb128 0x2
 32948 242d 91       		.byte	0x91
 32949 242e 40       		.sleb128 -64
 32950 242f 00       		.byte	0
 32951 2430 27       		.uleb128 0x27
 32952 2431 010C0000 		.4byte	.LASF360
 32953 2435 01       		.byte	0x1
 32954 2436 8810     		.2byte	0x1088
 32955 2438 00000000 		.4byte	.LFB119
 32956 243c 48010000 		.4byte	.LFE119-.LFB119
 32957 2440 01       		.uleb128 0x1
 32958 2441 9C       		.byte	0x9c
 32959 2442 54240000 		.4byte	0x2454
 32960 2446 26       		.uleb128 0x26
 32961 2447 6900     		.ascii	"i\000"
 32962 2449 01       		.byte	0x1
 32963 244a 8A10     		.2byte	0x108a
 32964 244c 97000000 		.4byte	0x97
 32965 2450 02       		.uleb128 0x2
 32966 2451 91       		.byte	0x91
 32967 2452 6F       		.sleb128 -17
 32968 2453 00       		.byte	0
 32969 2454 27       		.uleb128 0x27
 32970 2455 86010000 		.4byte	.LASF361
 32971 2459 01       		.byte	0x1
 32972 245a AF10     		.2byte	0x10af
 32973 245c 00000000 		.4byte	.LFB120
 32974 2460 A8010000 		.4byte	.LFE120-.LFB120
 32975 2464 01       		.uleb128 0x1
 32976 2465 9C       		.byte	0x9c
 32977 2466 C5240000 		.4byte	0x24c5
 32978 246a 23       		.uleb128 0x23
 32979 246b 89110000 		.4byte	.LASF340
 32980 246f 01       		.byte	0x1
 32981 2470 B110     		.2byte	0x10b1
 32982 2472 C7000000 		.4byte	0xc7
 32983 2476 02       		.uleb128 0x2
 32984 2477 91       		.byte	0x91
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 704


 32985 2478 5C       		.sleb128 -36
 32986 2479 23       		.uleb128 0x23
 32987 247a AF060000 		.4byte	.LASF362
 32988 247e 01       		.byte	0x1
 32989 247f B210     		.2byte	0x10b2
 32990 2481 D3000000 		.4byte	0xd3
 32991 2485 02       		.uleb128 0x2
 32992 2486 91       		.byte	0x91
 32993 2487 64       		.sleb128 -28
 32994 2488 23       		.uleb128 0x23
 32995 2489 070D0000 		.4byte	.LASF363
 32996 248d 01       		.byte	0x1
 32997 248e B310     		.2byte	0x10b3
 32998 2490 D3000000 		.4byte	0xd3
 32999 2494 02       		.uleb128 0x2
 33000 2495 91       		.byte	0x91
 33001 2496 54       		.sleb128 -44
 33002 2497 23       		.uleb128 0x23
 33003 2498 9C040000 		.4byte	.LASF364
 33004 249c 01       		.byte	0x1
 33005 249d B310     		.2byte	0x10b3
 33006 249f D3000000 		.4byte	0xd3
 33007 24a3 02       		.uleb128 0x2
 33008 24a4 91       		.byte	0x91
 33009 24a5 58       		.sleb128 -40
 33010 24a6 23       		.uleb128 0x23
 33011 24a7 A1060000 		.4byte	.LASF365
 33012 24ab 01       		.byte	0x1
 33013 24ac B410     		.2byte	0x10b4
 33014 24ae D3000000 		.4byte	0xd3
 33015 24b2 02       		.uleb128 0x2
 33016 24b3 91       		.byte	0x91
 33017 24b4 60       		.sleb128 -32
 33018 24b5 23       		.uleb128 0x23
 33019 24b6 B00D0000 		.4byte	.LASF366
 33020 24ba 01       		.byte	0x1
 33021 24bb B510     		.2byte	0x10b5
 33022 24bd C7000000 		.4byte	0xc7
 33023 24c1 02       		.uleb128 0x2
 33024 24c2 91       		.byte	0x91
 33025 24c3 5E       		.sleb128 -34
 33026 24c4 00       		.byte	0
 33027 24c5 32       		.uleb128 0x32
 33028 24c6 270E0000 		.4byte	.LASF367
 33029 24ca 01       		.byte	0x1
 33030 24cb F110     		.2byte	0x10f1
 33031 24cd 97000000 		.4byte	0x97
 33032 24d1 00000000 		.4byte	.LFB121
 33033 24d5 64010000 		.4byte	.LFE121-.LFB121
 33034 24d9 01       		.uleb128 0x1
 33035 24da 9C       		.byte	0x9c
 33036 24db 40250000 		.4byte	0x2540
 33037 24df 23       		.uleb128 0x23
 33038 24e0 36100000 		.4byte	.LASF368
 33039 24e4 01       		.byte	0x1
 33040 24e5 F310     		.2byte	0x10f3
 33041 24e7 97000000 		.4byte	0x97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 705


 33042 24eb 05       		.uleb128 0x5
 33043 24ec 03       		.byte	0x3
 33044 24ed 0C000000 		.4byte	fsm_state.11345
 33045 24f1 26       		.uleb128 0x26
 33046 24f2 636E7400 		.ascii	"cnt\000"
 33047 24f6 01       		.byte	0x1
 33048 24f7 F410     		.2byte	0x10f4
 33049 24f9 D3000000 		.4byte	0xd3
 33050 24fd 05       		.uleb128 0x5
 33051 24fe 03       		.byte	0x3
 33052 24ff 10000000 		.4byte	cnt.11346
 33053 2503 23       		.uleb128 0x23
 33054 2504 46050000 		.4byte	.LASF369
 33055 2508 01       		.byte	0x1
 33056 2509 F510     		.2byte	0x10f5
 33057 250b D3000000 		.4byte	0xd3
 33058 250f 02       		.uleb128 0x2
 33059 2510 91       		.byte	0x91
 33060 2511 74       		.sleb128 -12
 33061 2512 23       		.uleb128 0x23
 33062 2513 4F0D0000 		.4byte	.LASF370
 33063 2517 01       		.byte	0x1
 33064 2518 F510     		.2byte	0x10f5
 33065 251a D3000000 		.4byte	0xd3
 33066 251e 02       		.uleb128 0x2
 33067 251f 91       		.byte	0x91
 33068 2520 70       		.sleb128 -16
 33069 2521 23       		.uleb128 0x23
 33070 2522 B5000000 		.4byte	.LASF371
 33071 2526 01       		.byte	0x1
 33072 2527 F610     		.2byte	0x10f6
 33073 2529 D3000000 		.4byte	0xd3
 33074 252d 02       		.uleb128 0x2
 33075 252e 91       		.byte	0x91
 33076 252f 6C       		.sleb128 -20
 33077 2530 23       		.uleb128 0x23
 33078 2531 C1000000 		.4byte	.LASF372
 33079 2535 01       		.byte	0x1
 33080 2536 F610     		.2byte	0x10f6
 33081 2538 D3000000 		.4byte	0xd3
 33082 253c 02       		.uleb128 0x2
 33083 253d 91       		.byte	0x91
 33084 253e 68       		.sleb128 -24
 33085 253f 00       		.byte	0
 33086 2540 28       		.uleb128 0x28
 33087 2541 32090000 		.4byte	.LASF373
 33088 2545 01       		.byte	0x1
 33089 2546 4311     		.2byte	0x1143
 33090 2548 00000000 		.4byte	.LFB122
 33091 254c 12000000 		.4byte	.LFE122-.LFB122
 33092 2550 01       		.uleb128 0x1
 33093 2551 9C       		.byte	0x9c
 33094 2552 66250000 		.4byte	0x2566
 33095 2556 25       		.uleb128 0x25
 33096 2557 31080000 		.4byte	.LASF374
 33097 255b 01       		.byte	0x1
 33098 255c 4311     		.2byte	0x1143
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 706


 33099 255e 73000000 		.4byte	0x73
 33100 2562 02       		.uleb128 0x2
 33101 2563 91       		.byte	0x91
 33102 2564 74       		.sleb128 -12
 33103 2565 00       		.byte	0
 33104 2566 22       		.uleb128 0x22
 33105 2567 CA0F0000 		.4byte	.LASF375
 33106 256b 01       		.byte	0x1
 33107 256c 9011     		.2byte	0x1190
 33108 256e 00000000 		.4byte	.LFB123
 33109 2572 B8000000 		.4byte	.LFE123-.LFB123
 33110 2576 01       		.uleb128 0x1
 33111 2577 9C       		.byte	0x9c
 33112 2578 C8250000 		.4byte	0x25c8
 33113 257c 25       		.uleb128 0x25
 33114 257d 31080000 		.4byte	.LASF374
 33115 2581 01       		.byte	0x1
 33116 2582 9011     		.2byte	0x1190
 33117 2584 97000000 		.4byte	0x97
 33118 2588 02       		.uleb128 0x2
 33119 2589 91       		.byte	0x91
 33120 258a 5F       		.sleb128 -33
 33121 258b 25       		.uleb128 0x25
 33122 258c AE0C0000 		.4byte	.LASF192
 33123 2590 01       		.byte	0x1
 33124 2591 9011     		.2byte	0x1190
 33125 2593 97000000 		.4byte	0x97
 33126 2597 02       		.uleb128 0x2
 33127 2598 91       		.byte	0x91
 33128 2599 5E       		.sleb128 -34
 33129 259a 23       		.uleb128 0x23
 33130 259b 6E070000 		.4byte	.LASF238
 33131 259f 01       		.byte	0x1
 33132 25a0 9211     		.2byte	0x1192
 33133 25a2 A8090000 		.4byte	0x9a8
 33134 25a6 02       		.uleb128 0x2
 33135 25a7 91       		.byte	0x91
 33136 25a8 68       		.sleb128 -24
 33137 25a9 23       		.uleb128 0x23
 33138 25aa 450A0000 		.4byte	.LASF239
 33139 25ae 01       		.byte	0x1
 33140 25af 9311     		.2byte	0x1193
 33141 25b1 97000000 		.4byte	0x97
 33142 25b5 02       		.uleb128 0x2
 33143 25b6 91       		.byte	0x91
 33144 25b7 6F       		.sleb128 -17
 33145 25b8 23       		.uleb128 0x23
 33146 25b9 FD130000 		.4byte	.LASF244
 33147 25bd 01       		.byte	0x1
 33148 25be 9411     		.2byte	0x1194
 33149 25c0 C7000000 		.4byte	0xc7
 33150 25c4 02       		.uleb128 0x2
 33151 25c5 91       		.byte	0x91
 33152 25c6 66       		.sleb128 -26
 33153 25c7 00       		.byte	0
 33154 25c8 31       		.uleb128 0x31
 33155 25c9 CD000000 		.4byte	.LASF376
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 707


 33156 25cd 01       		.byte	0x1
 33157 25ce AC11     		.2byte	0x11ac
 33158 25d0 00000000 		.4byte	.LFB124
 33159 25d4 3C000000 		.4byte	.LFE124-.LFB124
 33160 25d8 01       		.uleb128 0x1
 33161 25d9 9C       		.byte	0x9c
 33162 25da 27       		.uleb128 0x27
 33163 25db A9070000 		.4byte	.LASF377
 33164 25df 01       		.byte	0x1
 33165 25e0 BC11     		.2byte	0x11bc
 33166 25e2 00000000 		.4byte	.LFB125
 33167 25e6 90000000 		.4byte	.LFE125-.LFB125
 33168 25ea 01       		.uleb128 0x1
 33169 25eb 9C       		.byte	0x9c
 33170 25ec 0F260000 		.4byte	0x260f
 33171 25f0 23       		.uleb128 0x23
 33172 25f1 6E070000 		.4byte	.LASF238
 33173 25f5 01       		.byte	0x1
 33174 25f6 C011     		.2byte	0x11c0
 33175 25f8 8C0B0000 		.4byte	0xb8c
 33176 25fc 02       		.uleb128 0x2
 33177 25fd 91       		.byte	0x91
 33178 25fe 64       		.sleb128 -28
 33179 25ff 23       		.uleb128 0x23
 33180 2600 450A0000 		.4byte	.LASF239
 33181 2604 01       		.byte	0x1
 33182 2605 C111     		.2byte	0x11c1
 33183 2607 97000000 		.4byte	0x97
 33184 260b 02       		.uleb128 0x2
 33185 260c 91       		.byte	0x91
 33186 260d 6F       		.sleb128 -17
 33187 260e 00       		.byte	0
 33188 260f 33       		.uleb128 0x33
 33189 2610 46140000 		.4byte	.LASF378
 33190 2614 09       		.byte	0x9
 33191 2615 1207     		.2byte	0x712
 33192 2617 1B260000 		.4byte	0x261b
 33193 261b 06       		.uleb128 0x6
 33194 261c 81000000 		.4byte	0x81
 33195 2620 09       		.uleb128 0x9
 33196 2621 2F0B0000 		.4byte	0xb2f
 33197 2625 30260000 		.4byte	0x2630
 33198 2629 0A       		.uleb128 0xa
 33199 262a 18010000 		.4byte	0x118
 33200 262e 01       		.byte	0x1
 33201 262f 00       		.byte	0
 33202 2630 33       		.uleb128 0x33
 33203 2631 8E060000 		.4byte	.LASF379
 33204 2635 08       		.byte	0x8
 33205 2636 3802     		.2byte	0x238
 33206 2638 20260000 		.4byte	0x2620
 33207 263c 09       		.uleb128 0x9
 33208 263d 34030000 		.4byte	0x334
 33209 2641 4C260000 		.4byte	0x264c
 33210 2645 0A       		.uleb128 0xa
 33211 2646 18010000 		.4byte	0x118
 33212 264a 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 708


 33213 264b 00       		.byte	0
 33214 264c 33       		.uleb128 0x33
 33215 264d 16160000 		.4byte	.LASF380
 33216 2651 08       		.byte	0x8
 33217 2652 3902     		.2byte	0x239
 33218 2654 3C260000 		.4byte	0x263c
 33219 2658 33       		.uleb128 0x33
 33220 2659 F6050000 		.4byte	.LASF381
 33221 265d 08       		.byte	0x8
 33222 265e 3902     		.2byte	0x239
 33223 2660 3C260000 		.4byte	0x263c
 33224 2664 33       		.uleb128 0x33
 33225 2665 830F0000 		.4byte	.LASF382
 33226 2669 08       		.byte	0x8
 33227 266a 3902     		.2byte	0x239
 33228 266c 3C260000 		.4byte	0x263c
 33229 2670 09       		.uleb128 0x9
 33230 2671 71030000 		.4byte	0x371
 33231 2675 80260000 		.4byte	0x2680
 33232 2679 0A       		.uleb128 0xa
 33233 267a 18010000 		.4byte	0x118
 33234 267e 01       		.byte	0x1
 33235 267f 00       		.byte	0
 33236 2680 33       		.uleb128 0x33
 33237 2681 41080000 		.4byte	.LASF383
 33238 2685 08       		.byte	0x8
 33239 2686 3A02     		.2byte	0x23a
 33240 2688 70260000 		.4byte	0x2670
 33241 268c 33       		.uleb128 0x33
 33242 268d 69160000 		.4byte	.LASF384
 33243 2691 08       		.byte	0x8
 33244 2692 3A02     		.2byte	0x23a
 33245 2694 70260000 		.4byte	0x2670
 33246 2698 33       		.uleb128 0x33
 33247 2699 E0150000 		.4byte	.LASF385
 33248 269d 08       		.byte	0x8
 33249 269e 3B02     		.2byte	0x23b
 33250 26a0 FA030000 		.4byte	0x3fa
 33251 26a4 33       		.uleb128 0x33
 33252 26a5 0F130000 		.4byte	.LASF386
 33253 26a9 08       		.byte	0x8
 33254 26aa 3B02     		.2byte	0x23b
 33255 26ac FA030000 		.4byte	0x3fa
 33256 26b0 33       		.uleb128 0x33
 33257 26b1 AA120000 		.4byte	.LASF387
 33258 26b5 08       		.byte	0x8
 33259 26b6 3C02     		.2byte	0x23c
 33260 26b8 4F040000 		.4byte	0x44f
 33261 26bc 33       		.uleb128 0x33
 33262 26bd E8000000 		.4byte	.LASF388
 33263 26c1 08       		.byte	0x8
 33264 26c2 3D02     		.2byte	0x23d
 33265 26c4 6A040000 		.4byte	0x46a
 33266 26c8 33       		.uleb128 0x33
 33267 26c9 D9120000 		.4byte	.LASF389
 33268 26cd 08       		.byte	0x8
 33269 26ce 3E02     		.2byte	0x23e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 709


 33270 26d0 9C0B0000 		.4byte	0xb9c
 33271 26d4 33       		.uleb128 0x33
 33272 26d5 310D0000 		.4byte	.LASF390
 33273 26d9 08       		.byte	0x8
 33274 26da 3E02     		.2byte	0x23e
 33275 26dc 9C0B0000 		.4byte	0xb9c
 33276 26e0 33       		.uleb128 0x33
 33277 26e1 D20B0000 		.4byte	.LASF391
 33278 26e5 08       		.byte	0x8
 33279 26e6 3F02     		.2byte	0x23f
 33280 26e8 4D0D0000 		.4byte	0xd4d
 33281 26ec 33       		.uleb128 0x33
 33282 26ed BB030000 		.4byte	.LASF392
 33283 26f1 08       		.byte	0x8
 33284 26f2 4502     		.2byte	0x245
 33285 26f4 A3000000 		.4byte	0xa3
 33286 26f8 33       		.uleb128 0x33
 33287 26f9 C9100000 		.4byte	.LASF393
 33288 26fd 08       		.byte	0x8
 33289 26fe 4602     		.2byte	0x246
 33290 2700 A3000000 		.4byte	0xa3
 33291 2704 33       		.uleb128 0x33
 33292 2705 FB100000 		.4byte	.LASF394
 33293 2709 08       		.byte	0x8
 33294 270a 4A02     		.2byte	0x24a
 33295 270c 2F040000 		.4byte	0x42f
 33296 2710 33       		.uleb128 0x33
 33297 2711 DD140000 		.4byte	.LASF395
 33298 2715 08       		.byte	0x8
 33299 2716 4B02     		.2byte	0x24b
 33300 2718 D4080000 		.4byte	0x8d4
 33301 271c 33       		.uleb128 0x33
 33302 271d 66140000 		.4byte	.LASF396
 33303 2721 08       		.byte	0x8
 33304 2722 4E02     		.2byte	0x24e
 33305 2724 2F040000 		.4byte	0x42f
 33306 2728 33       		.uleb128 0x33
 33307 2729 B70C0000 		.4byte	.LASF397
 33308 272d 08       		.byte	0x8
 33309 272e 5802     		.2byte	0x258
 33310 2730 E4080000 		.4byte	0x8e4
 33311 2734 33       		.uleb128 0x33
 33312 2735 86050000 		.4byte	.LASF398
 33313 2739 08       		.byte	0x8
 33314 273a 5A02     		.2byte	0x25a
 33315 273c 97000000 		.4byte	0x97
 33316 2740 33       		.uleb128 0x33
 33317 2741 3C0C0000 		.4byte	.LASF399
 33318 2745 08       		.byte	0x8
 33319 2746 6102     		.2byte	0x261
 33320 2748 97000000 		.4byte	0x97
 33321 274c 33       		.uleb128 0x33
 33322 274d 22090000 		.4byte	.LASF400
 33323 2751 08       		.byte	0x8
 33324 2752 6202     		.2byte	0x262
 33325 2754 97000000 		.4byte	0x97
 33326 2758 09       		.uleb128 0x9
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 710


 33327 2759 C7000000 		.4byte	0xc7
 33328 275d 68270000 		.4byte	0x2768
 33329 2761 0A       		.uleb128 0xa
 33330 2762 18010000 		.4byte	0x118
 33331 2766 0B       		.byte	0xb
 33332 2767 00       		.byte	0
 33333 2768 33       		.uleb128 0x33
 33334 2769 7E050000 		.4byte	.LASF401
 33335 276d 08       		.byte	0x8
 33336 276e 6502     		.2byte	0x265
 33337 2770 58270000 		.4byte	0x2758
 33338 2774 33       		.uleb128 0x33
 33339 2775 22160000 		.4byte	.LASF402
 33340 2779 08       		.byte	0x8
 33341 277a 6602     		.2byte	0x266
 33342 277c 97000000 		.4byte	0x97
 33343 2780 09       		.uleb128 0x9
 33344 2781 AF000000 		.4byte	0xaf
 33345 2785 96270000 		.4byte	0x2796
 33346 2789 0A       		.uleb128 0xa
 33347 278a 18010000 		.4byte	0x118
 33348 278e 01       		.byte	0x1
 33349 278f 0A       		.uleb128 0xa
 33350 2790 18010000 		.4byte	0x118
 33351 2794 04       		.byte	0x4
 33352 2795 00       		.byte	0
 33353 2796 33       		.uleb128 0x33
 33354 2797 61080000 		.4byte	.LASF403
 33355 279b 08       		.byte	0x8
 33356 279c 6C02     		.2byte	0x26c
 33357 279e 80270000 		.4byte	0x2780
 33358 27a2 33       		.uleb128 0x33
 33359 27a3 D5110000 		.4byte	.LASF404
 33360 27a7 08       		.byte	0x8
 33361 27a8 6D02     		.2byte	0x26d
 33362 27aa E4080000 		.4byte	0x8e4
 33363 27ae 09       		.uleb128 0x9
 33364 27af A3000000 		.4byte	0xa3
 33365 27b3 C4270000 		.4byte	0x27c4
 33366 27b7 0A       		.uleb128 0xa
 33367 27b8 18010000 		.4byte	0x118
 33368 27bc 01       		.byte	0x1
 33369 27bd 0A       		.uleb128 0xa
 33370 27be 18010000 		.4byte	0x118
 33371 27c2 04       		.byte	0x4
 33372 27c3 00       		.byte	0
 33373 27c4 33       		.uleb128 0x33
 33374 27c5 06150000 		.4byte	.LASF405
 33375 27c9 08       		.byte	0x8
 33376 27ca 6E02     		.2byte	0x26e
 33377 27cc AE270000 		.4byte	0x27ae
 33378 27d0 33       		.uleb128 0x33
 33379 27d1 84070000 		.4byte	.LASF406
 33380 27d5 08       		.byte	0x8
 33381 27d6 7602     		.2byte	0x276
 33382 27d8 2E030000 		.4byte	0x32e
 33383 27dc 33       		.uleb128 0x33
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 711


 33384 27dd 6C110000 		.4byte	.LASF407
 33385 27e1 08       		.byte	0x8
 33386 27e2 7702     		.2byte	0x277
 33387 27e4 0E170000 		.4byte	0x170e
 33388 27e8 33       		.uleb128 0x33
 33389 27e9 94040000 		.4byte	.LASF408
 33390 27ed 08       		.byte	0x8
 33391 27ee 7802     		.2byte	0x278
 33392 27f0 0E170000 		.4byte	0x170e
 33393 27f4 33       		.uleb128 0x33
 33394 27f5 A6150000 		.4byte	.LASF409
 33395 27f9 08       		.byte	0x8
 33396 27fa 7B02     		.2byte	0x27b
 33397 27fc 0E170000 		.4byte	0x170e
 33398 2800 33       		.uleb128 0x33
 33399 2801 84130000 		.4byte	.LASF410
 33400 2805 08       		.byte	0x8
 33401 2806 7E02     		.2byte	0x27e
 33402 2808 97000000 		.4byte	0x97
 33403 280c 33       		.uleb128 0x33
 33404 280d 43150000 		.4byte	.LASF411
 33405 2811 08       		.byte	0x8
 33406 2812 7F02     		.2byte	0x27f
 33407 2814 55080000 		.4byte	0x855
 33408 2818 33       		.uleb128 0x33
 33409 2819 37140000 		.4byte	.LASF412
 33410 281d 08       		.byte	0x8
 33411 281e 8002     		.2byte	0x280
 33412 2820 73000000 		.4byte	0x73
 33413 2824 09       		.uleb128 0x9
 33414 2825 73000000 		.4byte	0x73
 33415 2829 34280000 		.4byte	0x2834
 33416 282d 0A       		.uleb128 0xa
 33417 282e 18010000 		.4byte	0x118
 33418 2832 04       		.byte	0x4
 33419 2833 00       		.byte	0
 33420 2834 33       		.uleb128 0x33
 33421 2835 6F0E0000 		.4byte	.LASF413
 33422 2839 08       		.byte	0x8
 33423 283a 8102     		.2byte	0x281
 33424 283c 24280000 		.4byte	0x2824
 33425 2840 09       		.uleb128 0x9
 33426 2841 D10C0000 		.4byte	0xcd1
 33427 2845 50280000 		.4byte	0x2850
 33428 2849 0A       		.uleb128 0xa
 33429 284a 18010000 		.4byte	0x118
 33430 284e 04       		.byte	0x4
 33431 284f 00       		.byte	0
 33432 2850 33       		.uleb128 0x33
 33433 2851 88060000 		.4byte	.LASF414
 33434 2855 08       		.byte	0x8
 33435 2856 8202     		.2byte	0x282
 33436 2858 40280000 		.4byte	0x2840
 33437 285c 09       		.uleb128 0x9
 33438 285d 97000000 		.4byte	0x97
 33439 2861 72280000 		.4byte	0x2872
 33440 2865 0A       		.uleb128 0xa
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 712


 33441 2866 18010000 		.4byte	0x118
 33442 286a 04       		.byte	0x4
 33443 286b 0A       		.uleb128 0xa
 33444 286c 18010000 		.4byte	0x118
 33445 2870 02       		.byte	0x2
 33446 2871 00       		.byte	0
 33447 2872 33       		.uleb128 0x33
 33448 2873 8D0D0000 		.4byte	.LASF415
 33449 2877 08       		.byte	0x8
 33450 2878 8602     		.2byte	0x286
 33451 287a 5C280000 		.4byte	0x285c
 33452 287e 33       		.uleb128 0x33
 33453 287f 48160000 		.4byte	.LASF416
 33454 2883 08       		.byte	0x8
 33455 2884 8B02     		.2byte	0x28b
 33456 2886 97000000 		.4byte	0x97
 33457 288a 09       		.uleb128 0x9
 33458 288b A3000000 		.4byte	0xa3
 33459 288f A1280000 		.4byte	0x28a1
 33460 2893 24       		.uleb128 0x24
 33461 2894 18010000 		.4byte	0x118
 33462 2898 5702     		.2byte	0x257
 33463 289a 0A       		.uleb128 0xa
 33464 289b 18010000 		.4byte	0x118
 33465 289f 01       		.byte	0x1
 33466 28a0 00       		.byte	0
 33467 28a1 33       		.uleb128 0x33
 33468 28a2 07140000 		.4byte	.LASF417
 33469 28a6 08       		.byte	0x8
 33470 28a7 8E02     		.2byte	0x28e
 33471 28a9 8A280000 		.4byte	0x288a
 33472 28ad 33       		.uleb128 0x33
 33473 28ae 990C0000 		.4byte	.LASF418
 33474 28b2 08       		.byte	0x8
 33475 28b3 8F02     		.2byte	0x28f
 33476 28b5 AF000000 		.4byte	0xaf
 33477 28b9 33       		.uleb128 0x33
 33478 28ba 8E030000 		.4byte	.LASF419
 33479 28be 08       		.byte	0x8
 33480 28bf 9202     		.2byte	0x292
 33481 28c1 C7000000 		.4byte	0xc7
 33482 28c5 33       		.uleb128 0x33
 33483 28c6 98030000 		.4byte	.LASF420
 33484 28ca 08       		.byte	0x8
 33485 28cb 9302     		.2byte	0x293
 33486 28cd C7000000 		.4byte	0xc7
 33487 28d1 34       		.uleb128 0x34
 33488 28d2 13140000 		.4byte	.LASF421
 33489 28d6 01       		.byte	0x1
 33490 28d7 33       		.byte	0x33
 33491 28d8 E2280000 		.4byte	0x28e2
 33492 28dc 05       		.uleb128 0x5
 33493 28dd 03       		.byte	0x3
 33494 28de 00000000 		.4byte	EEPROM_ADDR
 33495 28e2 07       		.uleb128 0x7
 33496 28e3 04       		.byte	0x4
 33497 28e4 00010000 		.4byte	0x100
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 713


 33498 28e8 00       		.byte	0
 33499              		.section	.debug_abbrev,"",%progbits
 33500              	.Ldebug_abbrev0:
 33501 0000 01       		.uleb128 0x1
 33502 0001 11       		.uleb128 0x11
 33503 0002 01       		.byte	0x1
 33504 0003 25       		.uleb128 0x25
 33505 0004 0E       		.uleb128 0xe
 33506 0005 13       		.uleb128 0x13
 33507 0006 0B       		.uleb128 0xb
 33508 0007 03       		.uleb128 0x3
 33509 0008 0E       		.uleb128 0xe
 33510 0009 1B       		.uleb128 0x1b
 33511 000a 0E       		.uleb128 0xe
 33512 000b 55       		.uleb128 0x55
 33513 000c 17       		.uleb128 0x17
 33514 000d 11       		.uleb128 0x11
 33515 000e 01       		.uleb128 0x1
 33516 000f 10       		.uleb128 0x10
 33517 0010 17       		.uleb128 0x17
 33518 0011 00       		.byte	0
 33519 0012 00       		.byte	0
 33520 0013 02       		.uleb128 0x2
 33521 0014 24       		.uleb128 0x24
 33522 0015 00       		.byte	0
 33523 0016 0B       		.uleb128 0xb
 33524 0017 0B       		.uleb128 0xb
 33525 0018 3E       		.uleb128 0x3e
 33526 0019 0B       		.uleb128 0xb
 33527 001a 03       		.uleb128 0x3
 33528 001b 0E       		.uleb128 0xe
 33529 001c 00       		.byte	0
 33530 001d 00       		.byte	0
 33531 001e 03       		.uleb128 0x3
 33532 001f 16       		.uleb128 0x16
 33533 0020 00       		.byte	0
 33534 0021 03       		.uleb128 0x3
 33535 0022 0E       		.uleb128 0xe
 33536 0023 3A       		.uleb128 0x3a
 33537 0024 0B       		.uleb128 0xb
 33538 0025 3B       		.uleb128 0x3b
 33539 0026 0B       		.uleb128 0xb
 33540 0027 49       		.uleb128 0x49
 33541 0028 13       		.uleb128 0x13
 33542 0029 00       		.byte	0
 33543 002a 00       		.byte	0
 33544 002b 04       		.uleb128 0x4
 33545 002c 24       		.uleb128 0x24
 33546 002d 00       		.byte	0
 33547 002e 0B       		.uleb128 0xb
 33548 002f 0B       		.uleb128 0xb
 33549 0030 3E       		.uleb128 0x3e
 33550 0031 0B       		.uleb128 0xb
 33551 0032 03       		.uleb128 0x3
 33552 0033 08       		.uleb128 0x8
 33553 0034 00       		.byte	0
 33554 0035 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 714


 33555 0036 05       		.uleb128 0x5
 33556 0037 16       		.uleb128 0x16
 33557 0038 00       		.byte	0
 33558 0039 03       		.uleb128 0x3
 33559 003a 0E       		.uleb128 0xe
 33560 003b 3A       		.uleb128 0x3a
 33561 003c 0B       		.uleb128 0xb
 33562 003d 3B       		.uleb128 0x3b
 33563 003e 05       		.uleb128 0x5
 33564 003f 49       		.uleb128 0x49
 33565 0040 13       		.uleb128 0x13
 33566 0041 00       		.byte	0
 33567 0042 00       		.byte	0
 33568 0043 06       		.uleb128 0x6
 33569 0044 35       		.uleb128 0x35
 33570 0045 00       		.byte	0
 33571 0046 49       		.uleb128 0x49
 33572 0047 13       		.uleb128 0x13
 33573 0048 00       		.byte	0
 33574 0049 00       		.byte	0
 33575 004a 07       		.uleb128 0x7
 33576 004b 0F       		.uleb128 0xf
 33577 004c 00       		.byte	0
 33578 004d 0B       		.uleb128 0xb
 33579 004e 0B       		.uleb128 0xb
 33580 004f 49       		.uleb128 0x49
 33581 0050 13       		.uleb128 0x13
 33582 0051 00       		.byte	0
 33583 0052 00       		.byte	0
 33584 0053 08       		.uleb128 0x8
 33585 0054 26       		.uleb128 0x26
 33586 0055 00       		.byte	0
 33587 0056 49       		.uleb128 0x49
 33588 0057 13       		.uleb128 0x13
 33589 0058 00       		.byte	0
 33590 0059 00       		.byte	0
 33591 005a 09       		.uleb128 0x9
 33592 005b 01       		.uleb128 0x1
 33593 005c 01       		.byte	0x1
 33594 005d 49       		.uleb128 0x49
 33595 005e 13       		.uleb128 0x13
 33596 005f 01       		.uleb128 0x1
 33597 0060 13       		.uleb128 0x13
 33598 0061 00       		.byte	0
 33599 0062 00       		.byte	0
 33600 0063 0A       		.uleb128 0xa
 33601 0064 21       		.uleb128 0x21
 33602 0065 00       		.byte	0
 33603 0066 49       		.uleb128 0x49
 33604 0067 13       		.uleb128 0x13
 33605 0068 2F       		.uleb128 0x2f
 33606 0069 0B       		.uleb128 0xb
 33607 006a 00       		.byte	0
 33608 006b 00       		.byte	0
 33609 006c 0B       		.uleb128 0xb
 33610 006d 04       		.uleb128 0x4
 33611 006e 01       		.byte	0x1
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 715


 33612 006f 03       		.uleb128 0x3
 33613 0070 0E       		.uleb128 0xe
 33614 0071 0B       		.uleb128 0xb
 33615 0072 0B       		.uleb128 0xb
 33616 0073 49       		.uleb128 0x49
 33617 0074 13       		.uleb128 0x13
 33618 0075 3A       		.uleb128 0x3a
 33619 0076 0B       		.uleb128 0xb
 33620 0077 3B       		.uleb128 0x3b
 33621 0078 0B       		.uleb128 0xb
 33622 0079 01       		.uleb128 0x1
 33623 007a 13       		.uleb128 0x13
 33624 007b 00       		.byte	0
 33625 007c 00       		.byte	0
 33626 007d 0C       		.uleb128 0xc
 33627 007e 28       		.uleb128 0x28
 33628 007f 00       		.byte	0
 33629 0080 03       		.uleb128 0x3
 33630 0081 0E       		.uleb128 0xe
 33631 0082 1C       		.uleb128 0x1c
 33632 0083 0B       		.uleb128 0xb
 33633 0084 00       		.byte	0
 33634 0085 00       		.byte	0
 33635 0086 0D       		.uleb128 0xd
 33636 0087 13       		.uleb128 0x13
 33637 0088 00       		.byte	0
 33638 0089 03       		.uleb128 0x3
 33639 008a 0E       		.uleb128 0xe
 33640 008b 3C       		.uleb128 0x3c
 33641 008c 19       		.uleb128 0x19
 33642 008d 00       		.byte	0
 33643 008e 00       		.byte	0
 33644 008f 0E       		.uleb128 0xe
 33645 0090 13       		.uleb128 0x13
 33646 0091 01       		.byte	0x1
 33647 0092 03       		.uleb128 0x3
 33648 0093 0E       		.uleb128 0xe
 33649 0094 0B       		.uleb128 0xb
 33650 0095 0B       		.uleb128 0xb
 33651 0096 3A       		.uleb128 0x3a
 33652 0097 0B       		.uleb128 0xb
 33653 0098 3B       		.uleb128 0x3b
 33654 0099 0B       		.uleb128 0xb
 33655 009a 01       		.uleb128 0x1
 33656 009b 13       		.uleb128 0x13
 33657 009c 00       		.byte	0
 33658 009d 00       		.byte	0
 33659 009e 0F       		.uleb128 0xf
 33660 009f 0D       		.uleb128 0xd
 33661 00a0 00       		.byte	0
 33662 00a1 03       		.uleb128 0x3
 33663 00a2 08       		.uleb128 0x8
 33664 00a3 3A       		.uleb128 0x3a
 33665 00a4 0B       		.uleb128 0xb
 33666 00a5 3B       		.uleb128 0x3b
 33667 00a6 0B       		.uleb128 0xb
 33668 00a7 49       		.uleb128 0x49
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 716


 33669 00a8 13       		.uleb128 0x13
 33670 00a9 38       		.uleb128 0x38
 33671 00aa 0B       		.uleb128 0xb
 33672 00ab 00       		.byte	0
 33673 00ac 00       		.byte	0
 33674 00ad 10       		.uleb128 0x10
 33675 00ae 0D       		.uleb128 0xd
 33676 00af 00       		.byte	0
 33677 00b0 03       		.uleb128 0x3
 33678 00b1 0E       		.uleb128 0xe
 33679 00b2 3A       		.uleb128 0x3a
 33680 00b3 0B       		.uleb128 0xb
 33681 00b4 3B       		.uleb128 0x3b
 33682 00b5 0B       		.uleb128 0xb
 33683 00b6 49       		.uleb128 0x49
 33684 00b7 13       		.uleb128 0x13
 33685 00b8 38       		.uleb128 0x38
 33686 00b9 0B       		.uleb128 0xb
 33687 00ba 00       		.byte	0
 33688 00bb 00       		.byte	0
 33689 00bc 11       		.uleb128 0x11
 33690 00bd 13       		.uleb128 0x13
 33691 00be 01       		.byte	0x1
 33692 00bf 03       		.uleb128 0x3
 33693 00c0 0E       		.uleb128 0xe
 33694 00c1 0B       		.uleb128 0xb
 33695 00c2 0B       		.uleb128 0xb
 33696 00c3 3A       		.uleb128 0x3a
 33697 00c4 0B       		.uleb128 0xb
 33698 00c5 3B       		.uleb128 0x3b
 33699 00c6 05       		.uleb128 0x5
 33700 00c7 01       		.uleb128 0x1
 33701 00c8 13       		.uleb128 0x13
 33702 00c9 00       		.byte	0
 33703 00ca 00       		.byte	0
 33704 00cb 12       		.uleb128 0x12
 33705 00cc 0D       		.uleb128 0xd
 33706 00cd 00       		.byte	0
 33707 00ce 03       		.uleb128 0x3
 33708 00cf 08       		.uleb128 0x8
 33709 00d0 3A       		.uleb128 0x3a
 33710 00d1 0B       		.uleb128 0xb
 33711 00d2 3B       		.uleb128 0x3b
 33712 00d3 05       		.uleb128 0x5
 33713 00d4 49       		.uleb128 0x49
 33714 00d5 13       		.uleb128 0x13
 33715 00d6 38       		.uleb128 0x38
 33716 00d7 0B       		.uleb128 0xb
 33717 00d8 00       		.byte	0
 33718 00d9 00       		.byte	0
 33719 00da 13       		.uleb128 0x13
 33720 00db 0D       		.uleb128 0xd
 33721 00dc 00       		.byte	0
 33722 00dd 03       		.uleb128 0x3
 33723 00de 0E       		.uleb128 0xe
 33724 00df 3A       		.uleb128 0x3a
 33725 00e0 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 717


 33726 00e1 3B       		.uleb128 0x3b
 33727 00e2 05       		.uleb128 0x5
 33728 00e3 49       		.uleb128 0x49
 33729 00e4 13       		.uleb128 0x13
 33730 00e5 38       		.uleb128 0x38
 33731 00e6 0B       		.uleb128 0xb
 33732 00e7 00       		.byte	0
 33733 00e8 00       		.byte	0
 33734 00e9 14       		.uleb128 0x14
 33735 00ea 13       		.uleb128 0x13
 33736 00eb 01       		.byte	0x1
 33737 00ec 03       		.uleb128 0x3
 33738 00ed 0E       		.uleb128 0xe
 33739 00ee 0B       		.uleb128 0xb
 33740 00ef 05       		.uleb128 0x5
 33741 00f0 3A       		.uleb128 0x3a
 33742 00f1 0B       		.uleb128 0xb
 33743 00f2 3B       		.uleb128 0x3b
 33744 00f3 05       		.uleb128 0x5
 33745 00f4 01       		.uleb128 0x1
 33746 00f5 13       		.uleb128 0x13
 33747 00f6 00       		.byte	0
 33748 00f7 00       		.byte	0
 33749 00f8 15       		.uleb128 0x15
 33750 00f9 0D       		.uleb128 0xd
 33751 00fa 00       		.byte	0
 33752 00fb 03       		.uleb128 0x3
 33753 00fc 08       		.uleb128 0x8
 33754 00fd 3A       		.uleb128 0x3a
 33755 00fe 0B       		.uleb128 0xb
 33756 00ff 3B       		.uleb128 0x3b
 33757 0100 05       		.uleb128 0x5
 33758 0101 49       		.uleb128 0x49
 33759 0102 13       		.uleb128 0x13
 33760 0103 38       		.uleb128 0x38
 33761 0104 05       		.uleb128 0x5
 33762 0105 00       		.byte	0
 33763 0106 00       		.byte	0
 33764 0107 16       		.uleb128 0x16
 33765 0108 0D       		.uleb128 0xd
 33766 0109 00       		.byte	0
 33767 010a 03       		.uleb128 0x3
 33768 010b 0E       		.uleb128 0xe
 33769 010c 3A       		.uleb128 0x3a
 33770 010d 0B       		.uleb128 0xb
 33771 010e 3B       		.uleb128 0x3b
 33772 010f 05       		.uleb128 0x5
 33773 0110 49       		.uleb128 0x49
 33774 0111 13       		.uleb128 0x13
 33775 0112 38       		.uleb128 0x38
 33776 0113 05       		.uleb128 0x5
 33777 0114 00       		.byte	0
 33778 0115 00       		.byte	0
 33779 0116 17       		.uleb128 0x17
 33780 0117 2E       		.uleb128 0x2e
 33781 0118 01       		.byte	0x1
 33782 0119 03       		.uleb128 0x3
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 718


 33783 011a 0E       		.uleb128 0xe
 33784 011b 3A       		.uleb128 0x3a
 33785 011c 0B       		.uleb128 0xb
 33786 011d 3B       		.uleb128 0x3b
 33787 011e 05       		.uleb128 0x5
 33788 011f 27       		.uleb128 0x27
 33789 0120 19       		.uleb128 0x19
 33790 0121 49       		.uleb128 0x49
 33791 0122 13       		.uleb128 0x13
 33792 0123 20       		.uleb128 0x20
 33793 0124 0B       		.uleb128 0xb
 33794 0125 01       		.uleb128 0x1
 33795 0126 13       		.uleb128 0x13
 33796 0127 00       		.byte	0
 33797 0128 00       		.byte	0
 33798 0129 18       		.uleb128 0x18
 33799 012a 05       		.uleb128 0x5
 33800 012b 00       		.byte	0
 33801 012c 03       		.uleb128 0x3
 33802 012d 0E       		.uleb128 0xe
 33803 012e 3A       		.uleb128 0x3a
 33804 012f 0B       		.uleb128 0xb
 33805 0130 3B       		.uleb128 0x3b
 33806 0131 05       		.uleb128 0x5
 33807 0132 49       		.uleb128 0x49
 33808 0133 13       		.uleb128 0x13
 33809 0134 00       		.byte	0
 33810 0135 00       		.byte	0
 33811 0136 19       		.uleb128 0x19
 33812 0137 34       		.uleb128 0x34
 33813 0138 00       		.byte	0
 33814 0139 03       		.uleb128 0x3
 33815 013a 0E       		.uleb128 0xe
 33816 013b 3A       		.uleb128 0x3a
 33817 013c 0B       		.uleb128 0xb
 33818 013d 3B       		.uleb128 0x3b
 33819 013e 05       		.uleb128 0x5
 33820 013f 49       		.uleb128 0x49
 33821 0140 13       		.uleb128 0x13
 33822 0141 00       		.byte	0
 33823 0142 00       		.byte	0
 33824 0143 1A       		.uleb128 0x1a
 33825 0144 2E       		.uleb128 0x2e
 33826 0145 01       		.byte	0x1
 33827 0146 3F       		.uleb128 0x3f
 33828 0147 19       		.uleb128 0x19
 33829 0148 03       		.uleb128 0x3
 33830 0149 0E       		.uleb128 0xe
 33831 014a 3A       		.uleb128 0x3a
 33832 014b 0B       		.uleb128 0xb
 33833 014c 3B       		.uleb128 0x3b
 33834 014d 0B       		.uleb128 0xb
 33835 014e 27       		.uleb128 0x27
 33836 014f 19       		.uleb128 0x19
 33837 0150 11       		.uleb128 0x11
 33838 0151 01       		.uleb128 0x1
 33839 0152 12       		.uleb128 0x12
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 719


 33840 0153 06       		.uleb128 0x6
 33841 0154 40       		.uleb128 0x40
 33842 0155 18       		.uleb128 0x18
 33843 0156 9642     		.uleb128 0x2116
 33844 0158 19       		.uleb128 0x19
 33845 0159 01       		.uleb128 0x1
 33846 015a 13       		.uleb128 0x13
 33847 015b 00       		.byte	0
 33848 015c 00       		.byte	0
 33849 015d 1B       		.uleb128 0x1b
 33850 015e 34       		.uleb128 0x34
 33851 015f 00       		.byte	0
 33852 0160 03       		.uleb128 0x3
 33853 0161 0E       		.uleb128 0xe
 33854 0162 3A       		.uleb128 0x3a
 33855 0163 0B       		.uleb128 0xb
 33856 0164 3B       		.uleb128 0x3b
 33857 0165 0B       		.uleb128 0xb
 33858 0166 49       		.uleb128 0x49
 33859 0167 13       		.uleb128 0x13
 33860 0168 02       		.uleb128 0x2
 33861 0169 18       		.uleb128 0x18
 33862 016a 00       		.byte	0
 33863 016b 00       		.byte	0
 33864 016c 1C       		.uleb128 0x1c
 33865 016d 1D       		.uleb128 0x1d
 33866 016e 01       		.byte	0x1
 33867 016f 31       		.uleb128 0x31
 33868 0170 13       		.uleb128 0x13
 33869 0171 11       		.uleb128 0x11
 33870 0172 01       		.uleb128 0x1
 33871 0173 12       		.uleb128 0x12
 33872 0174 06       		.uleb128 0x6
 33873 0175 58       		.uleb128 0x58
 33874 0176 0B       		.uleb128 0xb
 33875 0177 59       		.uleb128 0x59
 33876 0178 0B       		.uleb128 0xb
 33877 0179 01       		.uleb128 0x1
 33878 017a 13       		.uleb128 0x13
 33879 017b 00       		.byte	0
 33880 017c 00       		.byte	0
 33881 017d 1D       		.uleb128 0x1d
 33882 017e 05       		.uleb128 0x5
 33883 017f 00       		.byte	0
 33884 0180 31       		.uleb128 0x31
 33885 0181 13       		.uleb128 0x13
 33886 0182 02       		.uleb128 0x2
 33887 0183 18       		.uleb128 0x18
 33888 0184 00       		.byte	0
 33889 0185 00       		.byte	0
 33890 0186 1E       		.uleb128 0x1e
 33891 0187 0B       		.uleb128 0xb
 33892 0188 01       		.byte	0x1
 33893 0189 11       		.uleb128 0x11
 33894 018a 01       		.uleb128 0x1
 33895 018b 12       		.uleb128 0x12
 33896 018c 06       		.uleb128 0x6
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 720


 33897 018d 00       		.byte	0
 33898 018e 00       		.byte	0
 33899 018f 1F       		.uleb128 0x1f
 33900 0190 34       		.uleb128 0x34
 33901 0191 00       		.byte	0
 33902 0192 31       		.uleb128 0x31
 33903 0193 13       		.uleb128 0x13
 33904 0194 02       		.uleb128 0x2
 33905 0195 18       		.uleb128 0x18
 33906 0196 00       		.byte	0
 33907 0197 00       		.byte	0
 33908 0198 20       		.uleb128 0x20
 33909 0199 1D       		.uleb128 0x1d
 33910 019a 01       		.byte	0x1
 33911 019b 31       		.uleb128 0x31
 33912 019c 13       		.uleb128 0x13
 33913 019d 11       		.uleb128 0x11
 33914 019e 01       		.uleb128 0x1
 33915 019f 12       		.uleb128 0x12
 33916 01a0 06       		.uleb128 0x6
 33917 01a1 58       		.uleb128 0x58
 33918 01a2 0B       		.uleb128 0xb
 33919 01a3 59       		.uleb128 0x59
 33920 01a4 05       		.uleb128 0x5
 33921 01a5 01       		.uleb128 0x1
 33922 01a6 13       		.uleb128 0x13
 33923 01a7 00       		.byte	0
 33924 01a8 00       		.byte	0
 33925 01a9 21       		.uleb128 0x21
 33926 01aa 1D       		.uleb128 0x1d
 33927 01ab 01       		.byte	0x1
 33928 01ac 31       		.uleb128 0x31
 33929 01ad 13       		.uleb128 0x13
 33930 01ae 11       		.uleb128 0x11
 33931 01af 01       		.uleb128 0x1
 33932 01b0 12       		.uleb128 0x12
 33933 01b1 06       		.uleb128 0x6
 33934 01b2 58       		.uleb128 0x58
 33935 01b3 0B       		.uleb128 0xb
 33936 01b4 59       		.uleb128 0x59
 33937 01b5 05       		.uleb128 0x5
 33938 01b6 00       		.byte	0
 33939 01b7 00       		.byte	0
 33940 01b8 22       		.uleb128 0x22
 33941 01b9 2E       		.uleb128 0x2e
 33942 01ba 01       		.byte	0x1
 33943 01bb 3F       		.uleb128 0x3f
 33944 01bc 19       		.uleb128 0x19
 33945 01bd 03       		.uleb128 0x3
 33946 01be 0E       		.uleb128 0xe
 33947 01bf 3A       		.uleb128 0x3a
 33948 01c0 0B       		.uleb128 0xb
 33949 01c1 3B       		.uleb128 0x3b
 33950 01c2 05       		.uleb128 0x5
 33951 01c3 27       		.uleb128 0x27
 33952 01c4 19       		.uleb128 0x19
 33953 01c5 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 721


 33954 01c6 01       		.uleb128 0x1
 33955 01c7 12       		.uleb128 0x12
 33956 01c8 06       		.uleb128 0x6
 33957 01c9 40       		.uleb128 0x40
 33958 01ca 18       		.uleb128 0x18
 33959 01cb 9642     		.uleb128 0x2116
 33960 01cd 19       		.uleb128 0x19
 33961 01ce 01       		.uleb128 0x1
 33962 01cf 13       		.uleb128 0x13
 33963 01d0 00       		.byte	0
 33964 01d1 00       		.byte	0
 33965 01d2 23       		.uleb128 0x23
 33966 01d3 34       		.uleb128 0x34
 33967 01d4 00       		.byte	0
 33968 01d5 03       		.uleb128 0x3
 33969 01d6 0E       		.uleb128 0xe
 33970 01d7 3A       		.uleb128 0x3a
 33971 01d8 0B       		.uleb128 0xb
 33972 01d9 3B       		.uleb128 0x3b
 33973 01da 05       		.uleb128 0x5
 33974 01db 49       		.uleb128 0x49
 33975 01dc 13       		.uleb128 0x13
 33976 01dd 02       		.uleb128 0x2
 33977 01de 18       		.uleb128 0x18
 33978 01df 00       		.byte	0
 33979 01e0 00       		.byte	0
 33980 01e1 24       		.uleb128 0x24
 33981 01e2 21       		.uleb128 0x21
 33982 01e3 00       		.byte	0
 33983 01e4 49       		.uleb128 0x49
 33984 01e5 13       		.uleb128 0x13
 33985 01e6 2F       		.uleb128 0x2f
 33986 01e7 05       		.uleb128 0x5
 33987 01e8 00       		.byte	0
 33988 01e9 00       		.byte	0
 33989 01ea 25       		.uleb128 0x25
 33990 01eb 05       		.uleb128 0x5
 33991 01ec 00       		.byte	0
 33992 01ed 03       		.uleb128 0x3
 33993 01ee 0E       		.uleb128 0xe
 33994 01ef 3A       		.uleb128 0x3a
 33995 01f0 0B       		.uleb128 0xb
 33996 01f1 3B       		.uleb128 0x3b
 33997 01f2 05       		.uleb128 0x5
 33998 01f3 49       		.uleb128 0x49
 33999 01f4 13       		.uleb128 0x13
 34000 01f5 02       		.uleb128 0x2
 34001 01f6 18       		.uleb128 0x18
 34002 01f7 00       		.byte	0
 34003 01f8 00       		.byte	0
 34004 01f9 26       		.uleb128 0x26
 34005 01fa 34       		.uleb128 0x34
 34006 01fb 00       		.byte	0
 34007 01fc 03       		.uleb128 0x3
 34008 01fd 08       		.uleb128 0x8
 34009 01fe 3A       		.uleb128 0x3a
 34010 01ff 0B       		.uleb128 0xb
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 722


 34011 0200 3B       		.uleb128 0x3b
 34012 0201 05       		.uleb128 0x5
 34013 0202 49       		.uleb128 0x49
 34014 0203 13       		.uleb128 0x13
 34015 0204 02       		.uleb128 0x2
 34016 0205 18       		.uleb128 0x18
 34017 0206 00       		.byte	0
 34018 0207 00       		.byte	0
 34019 0208 27       		.uleb128 0x27
 34020 0209 2E       		.uleb128 0x2e
 34021 020a 01       		.byte	0x1
 34022 020b 3F       		.uleb128 0x3f
 34023 020c 19       		.uleb128 0x19
 34024 020d 03       		.uleb128 0x3
 34025 020e 0E       		.uleb128 0xe
 34026 020f 3A       		.uleb128 0x3a
 34027 0210 0B       		.uleb128 0xb
 34028 0211 3B       		.uleb128 0x3b
 34029 0212 05       		.uleb128 0x5
 34030 0213 11       		.uleb128 0x11
 34031 0214 01       		.uleb128 0x1
 34032 0215 12       		.uleb128 0x12
 34033 0216 06       		.uleb128 0x6
 34034 0217 40       		.uleb128 0x40
 34035 0218 18       		.uleb128 0x18
 34036 0219 9642     		.uleb128 0x2116
 34037 021b 19       		.uleb128 0x19
 34038 021c 01       		.uleb128 0x1
 34039 021d 13       		.uleb128 0x13
 34040 021e 00       		.byte	0
 34041 021f 00       		.byte	0
 34042 0220 28       		.uleb128 0x28
 34043 0221 2E       		.uleb128 0x2e
 34044 0222 01       		.byte	0x1
 34045 0223 3F       		.uleb128 0x3f
 34046 0224 19       		.uleb128 0x19
 34047 0225 03       		.uleb128 0x3
 34048 0226 0E       		.uleb128 0xe
 34049 0227 3A       		.uleb128 0x3a
 34050 0228 0B       		.uleb128 0xb
 34051 0229 3B       		.uleb128 0x3b
 34052 022a 05       		.uleb128 0x5
 34053 022b 27       		.uleb128 0x27
 34054 022c 19       		.uleb128 0x19
 34055 022d 11       		.uleb128 0x11
 34056 022e 01       		.uleb128 0x1
 34057 022f 12       		.uleb128 0x12
 34058 0230 06       		.uleb128 0x6
 34059 0231 40       		.uleb128 0x40
 34060 0232 18       		.uleb128 0x18
 34061 0233 9742     		.uleb128 0x2117
 34062 0235 19       		.uleb128 0x19
 34063 0236 01       		.uleb128 0x1
 34064 0237 13       		.uleb128 0x13
 34065 0238 00       		.byte	0
 34066 0239 00       		.byte	0
 34067 023a 29       		.uleb128 0x29
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 723


 34068 023b 05       		.uleb128 0x5
 34069 023c 00       		.byte	0
 34070 023d 03       		.uleb128 0x3
 34071 023e 08       		.uleb128 0x8
 34072 023f 3A       		.uleb128 0x3a
 34073 0240 0B       		.uleb128 0xb
 34074 0241 3B       		.uleb128 0x3b
 34075 0242 05       		.uleb128 0x5
 34076 0243 49       		.uleb128 0x49
 34077 0244 13       		.uleb128 0x13
 34078 0245 02       		.uleb128 0x2
 34079 0246 18       		.uleb128 0x18
 34080 0247 00       		.byte	0
 34081 0248 00       		.byte	0
 34082 0249 2A       		.uleb128 0x2a
 34083 024a 2E       		.uleb128 0x2e
 34084 024b 01       		.byte	0x1
 34085 024c 3F       		.uleb128 0x3f
 34086 024d 19       		.uleb128 0x19
 34087 024e 03       		.uleb128 0x3
 34088 024f 0E       		.uleb128 0xe
 34089 0250 3A       		.uleb128 0x3a
 34090 0251 0B       		.uleb128 0xb
 34091 0252 3B       		.uleb128 0x3b
 34092 0253 05       		.uleb128 0x5
 34093 0254 27       		.uleb128 0x27
 34094 0255 19       		.uleb128 0x19
 34095 0256 49       		.uleb128 0x49
 34096 0257 13       		.uleb128 0x13
 34097 0258 11       		.uleb128 0x11
 34098 0259 01       		.uleb128 0x1
 34099 025a 12       		.uleb128 0x12
 34100 025b 06       		.uleb128 0x6
 34101 025c 40       		.uleb128 0x40
 34102 025d 18       		.uleb128 0x18
 34103 025e 9742     		.uleb128 0x2117
 34104 0260 19       		.uleb128 0x19
 34105 0261 01       		.uleb128 0x1
 34106 0262 13       		.uleb128 0x13
 34107 0263 00       		.byte	0
 34108 0264 00       		.byte	0
 34109 0265 2B       		.uleb128 0x2b
 34110 0266 2E       		.uleb128 0x2e
 34111 0267 01       		.byte	0x1
 34112 0268 3F       		.uleb128 0x3f
 34113 0269 19       		.uleb128 0x19
 34114 026a 03       		.uleb128 0x3
 34115 026b 0E       		.uleb128 0xe
 34116 026c 3A       		.uleb128 0x3a
 34117 026d 0B       		.uleb128 0xb
 34118 026e 3B       		.uleb128 0x3b
 34119 026f 05       		.uleb128 0x5
 34120 0270 27       		.uleb128 0x27
 34121 0271 19       		.uleb128 0x19
 34122 0272 49       		.uleb128 0x49
 34123 0273 13       		.uleb128 0x13
 34124 0274 11       		.uleb128 0x11
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 724


 34125 0275 01       		.uleb128 0x1
 34126 0276 12       		.uleb128 0x12
 34127 0277 06       		.uleb128 0x6
 34128 0278 40       		.uleb128 0x40
 34129 0279 18       		.uleb128 0x18
 34130 027a 9642     		.uleb128 0x2116
 34131 027c 19       		.uleb128 0x19
 34132 027d 01       		.uleb128 0x1
 34133 027e 13       		.uleb128 0x13
 34134 027f 00       		.byte	0
 34135 0280 00       		.byte	0
 34136 0281 2C       		.uleb128 0x2c
 34137 0282 2E       		.uleb128 0x2e
 34138 0283 00       		.byte	0
 34139 0284 3F       		.uleb128 0x3f
 34140 0285 19       		.uleb128 0x19
 34141 0286 03       		.uleb128 0x3
 34142 0287 0E       		.uleb128 0xe
 34143 0288 3A       		.uleb128 0x3a
 34144 0289 0B       		.uleb128 0xb
 34145 028a 3B       		.uleb128 0x3b
 34146 028b 05       		.uleb128 0x5
 34147 028c 27       		.uleb128 0x27
 34148 028d 19       		.uleb128 0x19
 34149 028e 11       		.uleb128 0x11
 34150 028f 01       		.uleb128 0x1
 34151 0290 12       		.uleb128 0x12
 34152 0291 06       		.uleb128 0x6
 34153 0292 40       		.uleb128 0x40
 34154 0293 18       		.uleb128 0x18
 34155 0294 9742     		.uleb128 0x2117
 34156 0296 19       		.uleb128 0x19
 34157 0297 00       		.byte	0
 34158 0298 00       		.byte	0
 34159 0299 2D       		.uleb128 0x2d
 34160 029a 2E       		.uleb128 0x2e
 34161 029b 00       		.byte	0
 34162 029c 3F       		.uleb128 0x3f
 34163 029d 19       		.uleb128 0x19
 34164 029e 03       		.uleb128 0x3
 34165 029f 0E       		.uleb128 0xe
 34166 02a0 3A       		.uleb128 0x3a
 34167 02a1 0B       		.uleb128 0xb
 34168 02a2 3B       		.uleb128 0x3b
 34169 02a3 05       		.uleb128 0x5
 34170 02a4 11       		.uleb128 0x11
 34171 02a5 01       		.uleb128 0x1
 34172 02a6 12       		.uleb128 0x12
 34173 02a7 06       		.uleb128 0x6
 34174 02a8 40       		.uleb128 0x40
 34175 02a9 18       		.uleb128 0x18
 34176 02aa 9742     		.uleb128 0x2117
 34177 02ac 19       		.uleb128 0x19
 34178 02ad 00       		.byte	0
 34179 02ae 00       		.byte	0
 34180 02af 2E       		.uleb128 0x2e
 34181 02b0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 725


 34182 02b1 01       		.byte	0x1
 34183 02b2 3F       		.uleb128 0x3f
 34184 02b3 19       		.uleb128 0x19
 34185 02b4 03       		.uleb128 0x3
 34186 02b5 0E       		.uleb128 0xe
 34187 02b6 3A       		.uleb128 0x3a
 34188 02b7 0B       		.uleb128 0xb
 34189 02b8 3B       		.uleb128 0x3b
 34190 02b9 05       		.uleb128 0x5
 34191 02ba 11       		.uleb128 0x11
 34192 02bb 01       		.uleb128 0x1
 34193 02bc 12       		.uleb128 0x12
 34194 02bd 06       		.uleb128 0x6
 34195 02be 40       		.uleb128 0x40
 34196 02bf 18       		.uleb128 0x18
 34197 02c0 9742     		.uleb128 0x2117
 34198 02c2 19       		.uleb128 0x19
 34199 02c3 01       		.uleb128 0x1
 34200 02c4 13       		.uleb128 0x13
 34201 02c5 00       		.byte	0
 34202 02c6 00       		.byte	0
 34203 02c7 2F       		.uleb128 0x2f
 34204 02c8 0B       		.uleb128 0xb
 34205 02c9 01       		.byte	0x1
 34206 02ca 11       		.uleb128 0x11
 34207 02cb 01       		.uleb128 0x1
 34208 02cc 12       		.uleb128 0x12
 34209 02cd 06       		.uleb128 0x6
 34210 02ce 01       		.uleb128 0x1
 34211 02cf 13       		.uleb128 0x13
 34212 02d0 00       		.byte	0
 34213 02d1 00       		.byte	0
 34214 02d2 30       		.uleb128 0x30
 34215 02d3 2E       		.uleb128 0x2e
 34216 02d4 01       		.byte	0x1
 34217 02d5 3F       		.uleb128 0x3f
 34218 02d6 19       		.uleb128 0x19
 34219 02d7 03       		.uleb128 0x3
 34220 02d8 0E       		.uleb128 0xe
 34221 02d9 3A       		.uleb128 0x3a
 34222 02da 0B       		.uleb128 0xb
 34223 02db 3B       		.uleb128 0x3b
 34224 02dc 05       		.uleb128 0x5
 34225 02dd 49       		.uleb128 0x49
 34226 02de 13       		.uleb128 0x13
 34227 02df 11       		.uleb128 0x11
 34228 02e0 01       		.uleb128 0x1
 34229 02e1 12       		.uleb128 0x12
 34230 02e2 06       		.uleb128 0x6
 34231 02e3 40       		.uleb128 0x40
 34232 02e4 18       		.uleb128 0x18
 34233 02e5 9642     		.uleb128 0x2116
 34234 02e7 19       		.uleb128 0x19
 34235 02e8 01       		.uleb128 0x1
 34236 02e9 13       		.uleb128 0x13
 34237 02ea 00       		.byte	0
 34238 02eb 00       		.byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 726


 34239 02ec 31       		.uleb128 0x31
 34240 02ed 2E       		.uleb128 0x2e
 34241 02ee 00       		.byte	0
 34242 02ef 3F       		.uleb128 0x3f
 34243 02f0 19       		.uleb128 0x19
 34244 02f1 03       		.uleb128 0x3
 34245 02f2 0E       		.uleb128 0xe
 34246 02f3 3A       		.uleb128 0x3a
 34247 02f4 0B       		.uleb128 0xb
 34248 02f5 3B       		.uleb128 0x3b
 34249 02f6 05       		.uleb128 0x5
 34250 02f7 11       		.uleb128 0x11
 34251 02f8 01       		.uleb128 0x1
 34252 02f9 12       		.uleb128 0x12
 34253 02fa 06       		.uleb128 0x6
 34254 02fb 40       		.uleb128 0x40
 34255 02fc 18       		.uleb128 0x18
 34256 02fd 9642     		.uleb128 0x2116
 34257 02ff 19       		.uleb128 0x19
 34258 0300 00       		.byte	0
 34259 0301 00       		.byte	0
 34260 0302 32       		.uleb128 0x32
 34261 0303 2E       		.uleb128 0x2e
 34262 0304 01       		.byte	0x1
 34263 0305 3F       		.uleb128 0x3f
 34264 0306 19       		.uleb128 0x19
 34265 0307 03       		.uleb128 0x3
 34266 0308 0E       		.uleb128 0xe
 34267 0309 3A       		.uleb128 0x3a
 34268 030a 0B       		.uleb128 0xb
 34269 030b 3B       		.uleb128 0x3b
 34270 030c 05       		.uleb128 0x5
 34271 030d 49       		.uleb128 0x49
 34272 030e 13       		.uleb128 0x13
 34273 030f 11       		.uleb128 0x11
 34274 0310 01       		.uleb128 0x1
 34275 0311 12       		.uleb128 0x12
 34276 0312 06       		.uleb128 0x6
 34277 0313 40       		.uleb128 0x40
 34278 0314 18       		.uleb128 0x18
 34279 0315 9742     		.uleb128 0x2117
 34280 0317 19       		.uleb128 0x19
 34281 0318 01       		.uleb128 0x1
 34282 0319 13       		.uleb128 0x13
 34283 031a 00       		.byte	0
 34284 031b 00       		.byte	0
 34285 031c 33       		.uleb128 0x33
 34286 031d 34       		.uleb128 0x34
 34287 031e 00       		.byte	0
 34288 031f 03       		.uleb128 0x3
 34289 0320 0E       		.uleb128 0xe
 34290 0321 3A       		.uleb128 0x3a
 34291 0322 0B       		.uleb128 0xb
 34292 0323 3B       		.uleb128 0x3b
 34293 0324 05       		.uleb128 0x5
 34294 0325 49       		.uleb128 0x49
 34295 0326 13       		.uleb128 0x13
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 727


 34296 0327 3F       		.uleb128 0x3f
 34297 0328 19       		.uleb128 0x19
 34298 0329 3C       		.uleb128 0x3c
 34299 032a 19       		.uleb128 0x19
 34300 032b 00       		.byte	0
 34301 032c 00       		.byte	0
 34302 032d 34       		.uleb128 0x34
 34303 032e 34       		.uleb128 0x34
 34304 032f 00       		.byte	0
 34305 0330 03       		.uleb128 0x3
 34306 0331 0E       		.uleb128 0xe
 34307 0332 3A       		.uleb128 0x3a
 34308 0333 0B       		.uleb128 0xb
 34309 0334 3B       		.uleb128 0x3b
 34310 0335 0B       		.uleb128 0xb
 34311 0336 49       		.uleb128 0x49
 34312 0337 13       		.uleb128 0x13
 34313 0338 3F       		.uleb128 0x3f
 34314 0339 19       		.uleb128 0x19
 34315 033a 02       		.uleb128 0x2
 34316 033b 18       		.uleb128 0x18
 34317 033c 00       		.byte	0
 34318 033d 00       		.byte	0
 34319 033e 00       		.byte	0
 34320              		.section	.debug_aranges,"",%progbits
 34321 0000 04020000 		.4byte	0x204
 34322 0004 0200     		.2byte	0x2
 34323 0006 00000000 		.4byte	.Ldebug_info0
 34324 000a 04       		.byte	0x4
 34325 000b 00       		.byte	0
 34326 000c 0000     		.2byte	0
 34327 000e 0000     		.2byte	0
 34328 0010 00000000 		.4byte	.LFB64
 34329 0014 64060000 		.4byte	.LFE64-.LFB64
 34330 0018 00000000 		.4byte	.LFB65
 34331 001c 22000000 		.4byte	.LFE65-.LFB65
 34332 0020 00000000 		.4byte	.LFB66
 34333 0024 64010000 		.4byte	.LFE66-.LFB66
 34334 0028 00000000 		.4byte	.LFB67
 34335 002c A4320000 		.4byte	.LFE67-.LFB67
 34336 0030 00000000 		.4byte	.LFB68
 34337 0034 48190000 		.4byte	.LFE68-.LFB68
 34338 0038 00000000 		.4byte	.LFB69
 34339 003c DC140000 		.4byte	.LFE69-.LFB69
 34340 0040 00000000 		.4byte	.LFB70
 34341 0044 F40D0000 		.4byte	.LFE70-.LFB70
 34342 0048 00000000 		.4byte	.LFB71
 34343 004c 90000000 		.4byte	.LFE71-.LFB71
 34344 0050 00000000 		.4byte	.LFB72
 34345 0054 681C0000 		.4byte	.LFE72-.LFB72
 34346 0058 00000000 		.4byte	.LFB73
 34347 005c 90040000 		.4byte	.LFE73-.LFB73
 34348 0060 00000000 		.4byte	.LFB74
 34349 0064 5C020000 		.4byte	.LFE74-.LFB74
 34350 0068 00000000 		.4byte	.LFB75
 34351 006c 80120000 		.4byte	.LFE75-.LFB75
 34352 0070 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 728


 34353 0074 DC000000 		.4byte	.LFE76-.LFB76
 34354 0078 00000000 		.4byte	.LFB77
 34355 007c 80010000 		.4byte	.LFE77-.LFB77
 34356 0080 00000000 		.4byte	.LFB78
 34357 0084 28000000 		.4byte	.LFE78-.LFB78
 34358 0088 00000000 		.4byte	.LFB79
 34359 008c F0000000 		.4byte	.LFE79-.LFB79
 34360 0090 00000000 		.4byte	.LFB80
 34361 0094 74030000 		.4byte	.LFE80-.LFB80
 34362 0098 00000000 		.4byte	.LFB81
 34363 009c 84000000 		.4byte	.LFE81-.LFB81
 34364 00a0 00000000 		.4byte	.LFB82
 34365 00a4 88000000 		.4byte	.LFE82-.LFB82
 34366 00a8 00000000 		.4byte	.LFB83
 34367 00ac A0000000 		.4byte	.LFE83-.LFB83
 34368 00b0 00000000 		.4byte	.LFB84
 34369 00b4 3E000000 		.4byte	.LFE84-.LFB84
 34370 00b8 00000000 		.4byte	.LFB85
 34371 00bc 2E000000 		.4byte	.LFE85-.LFB85
 34372 00c0 00000000 		.4byte	.LFB86
 34373 00c4 98000000 		.4byte	.LFE86-.LFB86
 34374 00c8 00000000 		.4byte	.LFB87
 34375 00cc 80000000 		.4byte	.LFE87-.LFB87
 34376 00d0 00000000 		.4byte	.LFB88
 34377 00d4 5C000000 		.4byte	.LFE88-.LFB88
 34378 00d8 00000000 		.4byte	.LFB89
 34379 00dc 30060000 		.4byte	.LFE89-.LFB89
 34380 00e0 00000000 		.4byte	.LFB90
 34381 00e4 40020000 		.4byte	.LFE90-.LFB90
 34382 00e8 00000000 		.4byte	.LFB91
 34383 00ec 28000000 		.4byte	.LFE91-.LFB91
 34384 00f0 00000000 		.4byte	.LFB92
 34385 00f4 88000000 		.4byte	.LFE92-.LFB92
 34386 00f8 00000000 		.4byte	.LFB93
 34387 00fc B0000000 		.4byte	.LFE93-.LFB93
 34388 0100 00000000 		.4byte	.LFB94
 34389 0104 28010000 		.4byte	.LFE94-.LFB94
 34390 0108 00000000 		.4byte	.LFB95
 34391 010c B8000000 		.4byte	.LFE95-.LFB95
 34392 0110 00000000 		.4byte	.LFB96
 34393 0114 B8000000 		.4byte	.LFE96-.LFB96
 34394 0118 00000000 		.4byte	.LFB97
 34395 011c 5C000000 		.4byte	.LFE97-.LFB97
 34396 0120 00000000 		.4byte	.LFB98
 34397 0124 44020000 		.4byte	.LFE98-.LFB98
 34398 0128 00000000 		.4byte	.LFB99
 34399 012c E4000000 		.4byte	.LFE99-.LFB99
 34400 0130 00000000 		.4byte	.LFB100
 34401 0134 5C000000 		.4byte	.LFE100-.LFB100
 34402 0138 00000000 		.4byte	.LFB101
 34403 013c 38010000 		.4byte	.LFE101-.LFB101
 34404 0140 00000000 		.4byte	.LFB102
 34405 0144 DC000000 		.4byte	.LFE102-.LFB102
 34406 0148 00000000 		.4byte	.LFB103
 34407 014c 64000000 		.4byte	.LFE103-.LFB103
 34408 0150 00000000 		.4byte	.LFB104
 34409 0154 0C000000 		.4byte	.LFE104-.LFB104
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 729


 34410 0158 00000000 		.4byte	.LFB105
 34411 015c C4000000 		.4byte	.LFE105-.LFB105
 34412 0160 00000000 		.4byte	.LFB106
 34413 0164 A8000000 		.4byte	.LFE106-.LFB106
 34414 0168 00000000 		.4byte	.LFB107
 34415 016c 34000000 		.4byte	.LFE107-.LFB107
 34416 0170 00000000 		.4byte	.LFB108
 34417 0174 20000000 		.4byte	.LFE108-.LFB108
 34418 0178 00000000 		.4byte	.LFB109
 34419 017c A0000000 		.4byte	.LFE109-.LFB109
 34420 0180 00000000 		.4byte	.LFB110
 34421 0184 BC010000 		.4byte	.LFE110-.LFB110
 34422 0188 00000000 		.4byte	.LFB111
 34423 018c 60000000 		.4byte	.LFE111-.LFB111
 34424 0190 00000000 		.4byte	.LFB112
 34425 0194 98050000 		.4byte	.LFE112-.LFB112
 34426 0198 00000000 		.4byte	.LFB113
 34427 019c 8C000000 		.4byte	.LFE113-.LFB113
 34428 01a0 00000000 		.4byte	.LFB114
 34429 01a4 EC000000 		.4byte	.LFE114-.LFB114
 34430 01a8 00000000 		.4byte	.LFB115
 34431 01ac 5C000000 		.4byte	.LFE115-.LFB115
 34432 01b0 00000000 		.4byte	.LFB116
 34433 01b4 C0000000 		.4byte	.LFE116-.LFB116
 34434 01b8 00000000 		.4byte	.LFB117
 34435 01bc 54010000 		.4byte	.LFE117-.LFB117
 34436 01c0 00000000 		.4byte	.LFB118
 34437 01c4 B0000000 		.4byte	.LFE118-.LFB118
 34438 01c8 00000000 		.4byte	.LFB119
 34439 01cc 48010000 		.4byte	.LFE119-.LFB119
 34440 01d0 00000000 		.4byte	.LFB120
 34441 01d4 A8010000 		.4byte	.LFE120-.LFB120
 34442 01d8 00000000 		.4byte	.LFB121
 34443 01dc 64010000 		.4byte	.LFE121-.LFB121
 34444 01e0 00000000 		.4byte	.LFB122
 34445 01e4 12000000 		.4byte	.LFE122-.LFB122
 34446 01e8 00000000 		.4byte	.LFB123
 34447 01ec B8000000 		.4byte	.LFE123-.LFB123
 34448 01f0 00000000 		.4byte	.LFB124
 34449 01f4 3C000000 		.4byte	.LFE124-.LFB124
 34450 01f8 00000000 		.4byte	.LFB125
 34451 01fc 90000000 		.4byte	.LFE125-.LFB125
 34452 0200 00000000 		.4byte	0
 34453 0204 00000000 		.4byte	0
 34454              		.section	.debug_ranges,"",%progbits
 34455              	.Ldebug_ranges0:
 34456 0000 00000000 		.4byte	.LFB64
 34457 0004 64060000 		.4byte	.LFE64
 34458 0008 00000000 		.4byte	.LFB65
 34459 000c 22000000 		.4byte	.LFE65
 34460 0010 00000000 		.4byte	.LFB66
 34461 0014 64010000 		.4byte	.LFE66
 34462 0018 00000000 		.4byte	.LFB67
 34463 001c A4320000 		.4byte	.LFE67
 34464 0020 00000000 		.4byte	.LFB68
 34465 0024 48190000 		.4byte	.LFE68
 34466 0028 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 730


 34467 002c DC140000 		.4byte	.LFE69
 34468 0030 00000000 		.4byte	.LFB70
 34469 0034 F40D0000 		.4byte	.LFE70
 34470 0038 00000000 		.4byte	.LFB71
 34471 003c 90000000 		.4byte	.LFE71
 34472 0040 00000000 		.4byte	.LFB72
 34473 0044 681C0000 		.4byte	.LFE72
 34474 0048 00000000 		.4byte	.LFB73
 34475 004c 90040000 		.4byte	.LFE73
 34476 0050 00000000 		.4byte	.LFB74
 34477 0054 5C020000 		.4byte	.LFE74
 34478 0058 00000000 		.4byte	.LFB75
 34479 005c 80120000 		.4byte	.LFE75
 34480 0060 00000000 		.4byte	.LFB76
 34481 0064 DC000000 		.4byte	.LFE76
 34482 0068 00000000 		.4byte	.LFB77
 34483 006c 80010000 		.4byte	.LFE77
 34484 0070 00000000 		.4byte	.LFB78
 34485 0074 28000000 		.4byte	.LFE78
 34486 0078 00000000 		.4byte	.LFB79
 34487 007c F0000000 		.4byte	.LFE79
 34488 0080 00000000 		.4byte	.LFB80
 34489 0084 74030000 		.4byte	.LFE80
 34490 0088 00000000 		.4byte	.LFB81
 34491 008c 84000000 		.4byte	.LFE81
 34492 0090 00000000 		.4byte	.LFB82
 34493 0094 88000000 		.4byte	.LFE82
 34494 0098 00000000 		.4byte	.LFB83
 34495 009c A0000000 		.4byte	.LFE83
 34496 00a0 00000000 		.4byte	.LFB84
 34497 00a4 3E000000 		.4byte	.LFE84
 34498 00a8 00000000 		.4byte	.LFB85
 34499 00ac 2E000000 		.4byte	.LFE85
 34500 00b0 00000000 		.4byte	.LFB86
 34501 00b4 98000000 		.4byte	.LFE86
 34502 00b8 00000000 		.4byte	.LFB87
 34503 00bc 80000000 		.4byte	.LFE87
 34504 00c0 00000000 		.4byte	.LFB88
 34505 00c4 5C000000 		.4byte	.LFE88
 34506 00c8 00000000 		.4byte	.LFB89
 34507 00cc 30060000 		.4byte	.LFE89
 34508 00d0 00000000 		.4byte	.LFB90
 34509 00d4 40020000 		.4byte	.LFE90
 34510 00d8 00000000 		.4byte	.LFB91
 34511 00dc 28000000 		.4byte	.LFE91
 34512 00e0 00000000 		.4byte	.LFB92
 34513 00e4 88000000 		.4byte	.LFE92
 34514 00e8 00000000 		.4byte	.LFB93
 34515 00ec B0000000 		.4byte	.LFE93
 34516 00f0 00000000 		.4byte	.LFB94
 34517 00f4 28010000 		.4byte	.LFE94
 34518 00f8 00000000 		.4byte	.LFB95
 34519 00fc B8000000 		.4byte	.LFE95
 34520 0100 00000000 		.4byte	.LFB96
 34521 0104 B8000000 		.4byte	.LFE96
 34522 0108 00000000 		.4byte	.LFB97
 34523 010c 5C000000 		.4byte	.LFE97
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 731


 34524 0110 00000000 		.4byte	.LFB98
 34525 0114 44020000 		.4byte	.LFE98
 34526 0118 00000000 		.4byte	.LFB99
 34527 011c E4000000 		.4byte	.LFE99
 34528 0120 00000000 		.4byte	.LFB100
 34529 0124 5C000000 		.4byte	.LFE100
 34530 0128 00000000 		.4byte	.LFB101
 34531 012c 38010000 		.4byte	.LFE101
 34532 0130 00000000 		.4byte	.LFB102
 34533 0134 DC000000 		.4byte	.LFE102
 34534 0138 00000000 		.4byte	.LFB103
 34535 013c 64000000 		.4byte	.LFE103
 34536 0140 00000000 		.4byte	.LFB104
 34537 0144 0C000000 		.4byte	.LFE104
 34538 0148 00000000 		.4byte	.LFB105
 34539 014c C4000000 		.4byte	.LFE105
 34540 0150 00000000 		.4byte	.LFB106
 34541 0154 A8000000 		.4byte	.LFE106
 34542 0158 00000000 		.4byte	.LFB107
 34543 015c 34000000 		.4byte	.LFE107
 34544 0160 00000000 		.4byte	.LFB108
 34545 0164 20000000 		.4byte	.LFE108
 34546 0168 00000000 		.4byte	.LFB109
 34547 016c A0000000 		.4byte	.LFE109
 34548 0170 00000000 		.4byte	.LFB110
 34549 0174 BC010000 		.4byte	.LFE110
 34550 0178 00000000 		.4byte	.LFB111
 34551 017c 60000000 		.4byte	.LFE111
 34552 0180 00000000 		.4byte	.LFB112
 34553 0184 98050000 		.4byte	.LFE112
 34554 0188 00000000 		.4byte	.LFB113
 34555 018c 8C000000 		.4byte	.LFE113
 34556 0190 00000000 		.4byte	.LFB114
 34557 0194 EC000000 		.4byte	.LFE114
 34558 0198 00000000 		.4byte	.LFB115
 34559 019c 5C000000 		.4byte	.LFE115
 34560 01a0 00000000 		.4byte	.LFB116
 34561 01a4 C0000000 		.4byte	.LFE116
 34562 01a8 00000000 		.4byte	.LFB117
 34563 01ac 54010000 		.4byte	.LFE117
 34564 01b0 00000000 		.4byte	.LFB118
 34565 01b4 B0000000 		.4byte	.LFE118
 34566 01b8 00000000 		.4byte	.LFB119
 34567 01bc 48010000 		.4byte	.LFE119
 34568 01c0 00000000 		.4byte	.LFB120
 34569 01c4 A8010000 		.4byte	.LFE120
 34570 01c8 00000000 		.4byte	.LFB121
 34571 01cc 64010000 		.4byte	.LFE121
 34572 01d0 00000000 		.4byte	.LFB122
 34573 01d4 12000000 		.4byte	.LFE122
 34574 01d8 00000000 		.4byte	.LFB123
 34575 01dc B8000000 		.4byte	.LFE123
 34576 01e0 00000000 		.4byte	.LFB124
 34577 01e4 3C000000 		.4byte	.LFE124
 34578 01e8 00000000 		.4byte	.LFB125
 34579 01ec 90000000 		.4byte	.LFE125
 34580 01f0 00000000 		.4byte	0
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 732


 34581 01f4 00000000 		.4byte	0
 34582              		.section	.debug_line,"",%progbits
 34583              	.Ldebug_line0:
 34584 0000 E11F0000 		.section	.debug_str,"MS",%progbits,1
 34584      0200C001 
 34584      00000201 
 34584      FB0E0D00 
 34584      01010101 
 34585              	.LASF223:
 34586 0000 696E666F 		.ascii	"infoSend\000"
 34586      53656E64 
 34586      00
 34587              	.LASF241:
 34588 0009 73747269 		.ascii	"string_length\000"
 34588      6E675F6C 
 34588      656E6774 
 34588      6800
 34589              	.LASF109:
 34590 0017 656D675F 		.ascii	"emg_act_counter\000"
 34590      6163745F 
 34590      636F756E 
 34590      74657200 
 34591              	.LASF274:
 34592 0027 69645F73 		.ascii	"id_str\000"
 34592      747200
 34593              	.LASF257:
 34594 002e 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 34594      61637469 
 34594      76617469 
 34594      6F6E5F6D 
 34594      6F64655F 
 34595              	.LASF25:
 34596 0047 73697A65 		.ascii	"sizetype\000"
 34596      74797065 
 34596      00
 34597              	.LASF116:
 34598 0050 706F7765 		.ascii	"power_cycles\000"
 34598      725F6379 
 34598      636C6573 
 34598      00
 34599              	.LASF33:
 34600 005d 434D445F 		.ascii	"CMD_INIT_MEM\000"
 34600      494E4954 
 34600      5F4D454D 
 34600      00
 34601              	.LASF350:
 34602 006a 676C5F63 		.ascii	"gl_c\000"
 34602      00
 34603              	.LASF203:
 34604 006f 77726973 		.ascii	"wrist_direction_association\000"
 34604      745F6469 
 34604      72656374 
 34604      696F6E5F 
 34604      6173736F 
 34605              	.LASF67:
 34606 008b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 34606      545F4D4F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 733


 34606      44455F45 
 34606      4D475F46 
 34606      4346535F 
 34607              	.LASF36:
 34608 00a3 434D445F 		.ascii	"CMD_ACTIVATE\000"
 34608      41435449 
 34608      56415445 
 34608      00
 34609              	.LASF208:
 34610 00b0 75736572 		.ascii	"user\000"
 34610      00
 34611              	.LASF371:
 34612 00b5 665F6572 		.ascii	"f_err_emg_1\000"
 34612      725F656D 
 34612      675F3100 
 34613              	.LASF372:
 34614 00c1 665F6572 		.ascii	"f_err_emg_2\000"
 34614      725F656D 
 34614      675F3200 
 34615              	.LASF376:
 34616 00cd 73746F70 		.ascii	"stop_master_device\000"
 34616      5F6D6173 
 34616      7465725F 
 34616      64657669 
 34616      636500
 34617              	.LASF11:
 34618 00e0 696E7433 		.ascii	"int32_t\000"
 34618      325F7400 
 34619              	.LASF388:
 34620 00e8 675F7278 		.ascii	"g_rx\000"
 34620      00
 34621              	.LASF104:
 34622 00ed 73745F64 		.ascii	"st_data\000"
 34622      61746100 
 34623              	.LASF298:
 34624 00f5 685F7469 		.ascii	"h_time\000"
 34624      6D6500
 34625              	.LASF424:
 34626 00fc 433A5C55 		.ascii	"C:\\Users\\mgnocco\\Documents\\Git\\PSoC5\\PSoC5_FW"
 34626      73657273 
 34626      5C6D676E 
 34626      6F63636F 
 34626      5C446F63 
 34627 0129 5F574953 		.ascii	"_WISH_VIBES\\FW_Socket - WISH+Dayton\\PULSE_Socket."
 34627      485F5649 
 34627      4245535C 
 34627      46575F53 
 34627      6F636B65 
 34628 015a 63796473 		.ascii	"cydsn\000"
 34628      6E00
 34629              	.LASF114:
 34630 0160 746F7461 		.ascii	"total_runtime\000"
 34630      6C5F7275 
 34630      6E74696D 
 34630      6500
 34631              	.LASF15:
 34632 016e 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 734


 34632      333200
 34633              	.LASF341:
 34634 0175 636D645F 		.ascii	"cmd_set_baudrate\000"
 34634      7365745F 
 34634      62617564 
 34634      72617465 
 34634      00
 34635              	.LASF361:
 34636 0186 6169725F 		.ascii	"air_chambers_control\000"
 34636      6368616D 
 34636      62657273 
 34636      5F636F6E 
 34636      74726F6C 
 34637              	.LASF282:
 34638 019b 7370695F 		.ascii	"spi_read_delay_str_len\000"
 34638      72656164 
 34638      5F64656C 
 34638      61795F73 
 34638      74725F6C 
 34639              	.LASF209:
 34640 01b2 4A4F595F 		.ascii	"JOY_spec\000"
 34640      73706563 
 34640      00
 34641              	.LASF284:
 34642 01bb 70726570 		.ascii	"prepare_generic_info\000"
 34642      6172655F 
 34642      67656E65 
 34642      7269635F 
 34642      696E666F 
 34643              	.LASF143:
 34644 01d0 706F735F 		.ascii	"pos_lim_inf\000"
 34644      6C696D5F 
 34644      696E6600 
 34645              	.LASF249:
 34646 01dc 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 34646      4E445F4D 
 34646      4F544F52 
 34646      5F494458 
 34646      00
 34647              	.LASF343:
 34648 01ed 636D645F 		.ascii	"cmd_get_inputs\000"
 34648      6765745F 
 34648      696E7075 
 34648      747300
 34649              	.LASF66:
 34650 01fc 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 34650      545F4D4F 
 34650      44455F45 
 34650      4D475F46 
 34650      43465300 
 34651              	.LASF147:
 34652 0210 63757272 		.ascii	"curr_lookup\000"
 34652      5F6C6F6F 
 34652      6B757000 
 34653              	.LASF112:
 34654 021c 72657374 		.ascii	"rest_counter\000"
 34654      5F636F75 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 735


 34654      6E746572 
 34654      00
 34655              	.LASF348:
 34656 0229 636D645F 		.ascii	"cmd_get_imu_readings\000"
 34656      6765745F 
 34656      696D755F 
 34656      72656164 
 34656      696E6773 
 34657              	.LASF190:
 34658 023e 73745F4D 		.ascii	"st_MASTER_spec\000"
 34658      41535445 
 34658      525F7370 
 34658      656300
 34659              	.LASF277:
 34660 024d 69645F73 		.ascii	"id_str_len\000"
 34660      74725F6C 
 34660      656E00
 34661              	.LASF65:
 34662 0258 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 34662      545F4D4F 
 34662      44455F45 
 34662      4D475F49 
 34662      4E544547 
 34663              	.LASF251:
 34664 0270 6D5F746D 		.ascii	"m_tmp\000"
 34664      7000
 34665              	.LASF297:
 34666 0276 765F6964 		.ascii	"v_idx\000"
 34666      7800
 34667              	.LASF16:
 34668 027c 696E7438 		.ascii	"int8\000"
 34668      00
 34669              	.LASF228:
 34670 0281 6765745F 		.ascii	"get_param_list\000"
 34670      70617261 
 34670      6D5F6C69 
 34670      737400
 34671              	.LASF324:
 34672 0290 636D645F 		.ascii	"cmd_get_accelerations\000"
 34672      6765745F 
 34672      61636365 
 34672      6C657261 
 34672      74696F6E 
 34673              	.LASF347:
 34674 02a6 636D645F 		.ascii	"cmd_get_emg\000"
 34674      6765745F 
 34674      656D6700 
 34675              	.LASF162:
 34676 02b2 73745F65 		.ascii	"st_emg\000"
 34676      6D6700
 34677              	.LASF110:
 34678 02b9 706F7369 		.ascii	"position_hist\000"
 34678      74696F6E 
 34678      5F686973 
 34678      7400
 34679              	.LASF216:
 34680 02c7 74656D70 		.ascii	"temp_value\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 736


 34680      5F76616C 
 34680      756500
 34681              	.LASF296:
 34682 02d2 7374725F 		.ascii	"str_data\000"
 34682      64617461 
 34682      00
 34683              	.LASF426:
 34684 02db 72657375 		.ascii	"result\000"
 34684      6C7400
 34685              	.LASF276:
 34686 02e2 7370695F 		.ascii	"spi_read_delay_str\000"
 34686      72656164 
 34686      5F64656C 
 34686      61795F73 
 34686      747200
 34687              	.LASF200:
 34688 02f5 73745F57 		.ascii	"st_WR_spec\000"
 34688      525F7370 
 34688      656300
 34689              	.LASF107:
 34690 0300 72656164 		.ascii	"ready\000"
 34690      7900
 34691              	.LASF159:
 34692 0306 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 34692      6964785F 
 34692      7573655F 
 34692      666F725F 
 34692      636F6E74 
 34693              	.LASF51:
 34694 031e 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 34694      4745545F 
 34694      4A4F5953 
 34694      5449434B 
 34694      00
 34695              	.LASF64:
 34696 032f 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 34696      545F4D4F 
 34696      44455F45 
 34696      4D475F50 
 34696      524F504F 
 34697              	.LASF125:
 34698 034b 7573655F 		.ascii	"use_2nd_motor_flag\000"
 34698      326E645F 
 34698      6D6F746F 
 34698      725F666C 
 34698      616700
 34699              	.LASF336:
 34700 035e 745F7374 		.ascii	"t_start\000"
 34700      61727400 
 34701              	.LASF117:
 34702 0366 65786365 		.ascii	"excessive_signal_activity\000"
 34702      73736976 
 34702      655F7369 
 34702      676E616C 
 34702      5F616374 
 34703              	.LASF169:
 34704 0380 72656164 		.ascii	"read_imu_flag\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 737


 34704      5F696D75 
 34704      5F666C61 
 34704      6700
 34705              	.LASF419:
 34706 038e 50574D5F 		.ascii	"PWM_IMU_1\000"
 34706      494D555F 
 34706      3100
 34707              	.LASF420:
 34708 0398 50574D5F 		.ascii	"PWM_IMU_2\000"
 34708      494D555F 
 34708      3200
 34709              	.LASF177:
 34710 03a2 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 34710      72645F45 
 34710      4D475F68 
 34710      6973746F 
 34710      72795F6F 
 34711              	.LASF392:
 34712 03bb 74696D65 		.ascii	"timer_value\000"
 34712      725F7661 
 34712      6C756500 
 34713              	.LASF4:
 34714 03c7 6C6F6E67 		.ascii	"long int\000"
 34714      20696E74 
 34714      00
 34715              	.LASF206:
 34716 03d0 756E7573 		.ascii	"unused_bytes1\000"
 34716      65645F62 
 34716      79746573 
 34716      3100
 34717              	.LASF124:
 34718 03de 72657365 		.ascii	"reset_counters\000"
 34718      745F636F 
 34718      756E7465 
 34718      727300
 34719              	.LASF180:
 34720 03ed 75736572 		.ascii	"user_emg\000"
 34720      5F656D67 
 34720      00
 34721              	.LASF356:
 34722 03f6 636D645F 		.ascii	"cmd_get_SD_file\000"
 34722      6765745F 
 34722      53445F66 
 34722      696C6500 
 34723              	.LASF321:
 34724 0406 7365745A 		.ascii	"setZeros\000"
 34724      65726F73 
 34724      00
 34725              	.LASF119:
 34726 040f 756E7573 		.ascii	"unused_bytes\000"
 34726      65645F62 
 34726      79746573 
 34726      00
 34727              	.LASF212:
 34728 041c 61636365 		.ascii	"accel_value\000"
 34728      6C5F7661 
 34728      6C756500 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 738


 34729              	.LASF232:
 34730 0428 4E554D5F 		.ascii	"NUM_ITEMS\000"
 34730      4954454D 
 34730      5300
 34731              	.LASF108:
 34732 0432 73745F63 		.ascii	"st_counters\000"
 34732      6F756E74 
 34732      65727300 
 34733              	.LASF255:
 34734 043e 4D454D5F 		.ascii	"MEM_P\000"
 34734      5000
 34735              	.LASF19:
 34736 0444 666C6F61 		.ascii	"float32\000"
 34736      74333200 
 34737              	.LASF354:
 34738 044c 636D645F 		.ascii	"cmd_get_ADC_map\000"
 34738      6765745F 
 34738      4144435F 
 34738      6D617000 
 34739              	.LASF41:
 34740 045c 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 34740      4745545F 
 34740      43555252 
 34740      454E5453 
 34740      00
 34741              	.LASF295:
 34742 046d 70726570 		.ascii	"prepare_SD_EMG_history\000"
 34742      6172655F 
 34742      53445F45 
 34742      4D475F68 
 34742      6973746F 
 34743              	.LASF355:
 34744 0484 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 34744      6765745F 
 34744      4144435F 
 34744      72617700 
 34745              	.LASF408:
 34746 0494 73645061 		.ascii	"sdParam\000"
 34746      72616D00 
 34747              	.LASF364:
 34748 049c 70726573 		.ascii	"pressure_value\000"
 34748      73757265 
 34748      5F76616C 
 34748      756500
 34749              	.LASF265:
 34750 04ab 6175785F 		.ascii	"aux_float2\000"
 34750      666C6F61 
 34750      743200
 34751              	.LASF342:
 34752 04b6 636D645F 		.ascii	"cmd_ping\000"
 34752      70696E67 
 34752      00
 34753              	.LASF283:
 34754 04bf 7370695F 		.ascii	"spi_delay_menu_len\000"
 34754      64656C61 
 34754      795F6D65 
 34754      6E755F6C 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 739


 34754      656E00
 34755              	.LASF263:
 34756 04d2 7365745F 		.ascii	"set_custom_param\000"
 34756      63757374 
 34756      6F6D5F70 
 34756      6172616D 
 34756      00
 34757              	.LASF359:
 34758 04e3 636D645F 		.ascii	"cmd_remove_SD_file\000"
 34758      72656D6F 
 34758      76655F53 
 34758      445F6669 
 34758      6C6500
 34759              	.LASF320:
 34760 04f6 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 34760      6E69745F 
 34760      4F74626B 
 34760      41637457 
 34760      72697374 
 34761              	.LASF0:
 34762 050d 7369676E 		.ascii	"signed char\000"
 34762      65642063 
 34762      68617200 
 34763              	.LASF179:
 34764 0519 75736572 		.ascii	"user_code_string\000"
 34764      5F636F64 
 34764      655F7374 
 34764      72696E67 
 34764      00
 34765              	.LASF191:
 34766 052a 6D617374 		.ascii	"master_mode_active\000"
 34766      65725F6D 
 34766      6F64655F 
 34766      61637469 
 34766      766500
 34767              	.LASF217:
 34768 053d 73745F63 		.ascii	"st_calib\000"
 34768      616C6962 
 34768      00
 34769              	.LASF369:
 34770 0546 6572725F 		.ascii	"err_emg_1\000"
 34770      656D675F 
 34770      3100
 34771              	.LASF310:
 34772 0550 6D656D53 		.ascii	"memStore\000"
 34772      746F7265 
 34772      00
 34773              	.LASF358:
 34774 0559 66696C65 		.ascii	"filename\000"
 34774      6E616D65 
 34774      00
 34775              	.LASF75:
 34776 0562 6D6F746F 		.ascii	"motor_supply_type\000"
 34776      725F7375 
 34776      70706C79 
 34776      5F747970 
 34776      6500
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 740


 34777              	.LASF338:
 34778 0574 72656164 		.ascii	"read_flag\000"
 34778      5F666C61 
 34778      6700
 34779              	.LASF401:
 34780 057e 4144435F 		.ascii	"ADC_buf\000"
 34780      62756600 
 34781              	.LASF398:
 34782 0586 696E7465 		.ascii	"interrupt_flag\000"
 34782      72727570 
 34782      745F666C 
 34782      616700
 34783              	.LASF288:
 34784 0595 73746570 		.ascii	"step\000"
 34784      00
 34785              	.LASF1:
 34786 059a 756E7369 		.ascii	"unsigned char\000"
 34786      676E6564 
 34786      20636861 
 34786      7200
 34787              	.LASF48:
 34788 05a8 434D445F 		.ascii	"CMD_SET_VIBROTACTILE_INPUTS\000"
 34788      5345545F 
 34788      56494252 
 34788      4F544143 
 34788      54494C45 
 34789              	.LASF153:
 34790 05c4 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 34790      72657665 
 34790      72735F6D 
 34790      6F746F72 
 34790      5F666C61 
 34791              	.LASF49:
 34792 05da 434D445F 		.ascii	"CMD_GET_VIBROTACTILE_INPUTS\000"
 34792      4745545F 
 34792      56494252 
 34792      4F544143 
 34792      54494C45 
 34793              	.LASF381:
 34794 05f6 675F7265 		.ascii	"g_refNew\000"
 34794      664E6577 
 34794      00
 34795              	.LASF123:
 34796 05ff 72696768 		.ascii	"right_left\000"
 34796      745F6C65 
 34796      667400
 34797              	.LASF29:
 34798 060a 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 34798      53544F52 
 34798      455F4445 
 34798      4641554C 
 34798      545F5041 
 34799              	.LASF151:
 34800 0623 656E636F 		.ascii	"encoder_line\000"
 34800      6465725F 
 34800      6C696E65 
 34800      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 741


 34801              	.LASF278:
 34802 0630 6E5F696D 		.ascii	"n_imu_str_len\000"
 34802      755F7374 
 34802      725F6C65 
 34802      6E00
 34803              	.LASF281:
 34804 063e 696D755F 		.ascii	"imu_table_str_len\000"
 34804      7461626C 
 34804      655F7374 
 34804      725F6C65 
 34804      6E00
 34805              	.LASF308:
 34806 0650 76616C75 		.ascii	"value\000"
 34806      6500
 34807              	.LASF211:
 34808 0656 666C6167 		.ascii	"flags\000"
 34808      7300
 34809              	.LASF103:
 34810 065c 70726573 		.ascii	"pressure\000"
 34810      73757265 
 34810      00
 34811              	.LASF37:
 34812 0665 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 34812      4745545F 
 34812      41435449 
 34812      56415445 
 34812      00
 34813              	.LASF22:
 34814 0676 63686172 		.ascii	"char\000"
 34814      00
 34815              	.LASF146:
 34816 067b 6D61785F 		.ascii	"max_step_pos\000"
 34816      73746570 
 34816      5F706F73 
 34816      00
 34817              	.LASF414:
 34818 0688 675F696D 		.ascii	"g_imu\000"
 34818      7500
 34819              	.LASF379:
 34820 068e 675F7265 		.ascii	"g_ref_vibrotactile\000"
 34820      665F7669 
 34820      62726F74 
 34820      61637469 
 34820      6C6500
 34821              	.LASF365:
 34822 06a1 76616C76 		.ascii	"valve_command\000"
 34822      655F636F 
 34822      6D6D616E 
 34822      6400
 34823              	.LASF362:
 34824 06af 70726573 		.ascii	"pressure_reference\000"
 34824      73757265 
 34824      5F726566 
 34824      6572656E 
 34824      636500
 34825              	.LASF314:
 34826 06c2 7265745F 		.ascii	"ret_val\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 742


 34826      76616C00 
 34827              	.LASF262:
 34828 06ca 6D656E75 		.ascii	"menu_idx\000"
 34828      5F696478 
 34828      00
 34829              	.LASF270:
 34830 06d3 73746172 		.ascii	"start_byte\000"
 34830      745F6279 
 34830      746500
 34831              	.LASF268:
 34832 06de 6E756D5F 		.ascii	"num_mag_cal_params\000"
 34832      6D61675F 
 34832      63616C5F 
 34832      70617261 
 34832      6D7300
 34833              	.LASF152:
 34834 06f1 70776D5F 		.ascii	"pwm_rate_limiter\000"
 34834      72617465 
 34834      5F6C696D 
 34834      69746572 
 34834      00
 34835              	.LASF132:
 34836 0702 6B5F645F 		.ascii	"k_d_c\000"
 34836      6300
 34837              	.LASF102:
 34838 0708 73745F66 		.ascii	"st_fb_meas\000"
 34838      625F6D65 
 34838      617300
 34839              	.LASF225:
 34840 0713 7061636B 		.ascii	"packet_string\000"
 34840      65745F73 
 34840      7472696E 
 34840      6700
 34841              	.LASF157:
 34842 0721 6D5F6D75 		.ascii	"m_mult\000"
 34842      6C7400
 34843              	.LASF131:
 34844 0728 6B5F695F 		.ascii	"k_i_c\000"
 34844      6300
 34845              	.LASF311:
 34846 072e 64697370 		.ascii	"displacement\000"
 34846      6C616365 
 34846      6D656E74 
 34846      00
 34847              	.LASF305:
 34848 073b 64617461 		.ascii	"data_length\000"
 34848      5F6C656E 
 34848      67746800 
 34849              	.LASF144:
 34850 0747 706F735F 		.ascii	"pos_lim_sup\000"
 34850      6C696D5F 
 34850      73757000 
 34851              	.LASF289:
 34852 0753 5230315F 		.ascii	"R01_str\000"
 34852      73747200 
 34853              	.LASF165:
 34854 075b 656D675F 		.ascii	"emg_speed\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 743


 34854      73706565 
 34854      6400
 34855              	.LASF184:
 34856 0765 72657374 		.ascii	"rest_vel\000"
 34856      5F76656C 
 34856      00
 34857              	.LASF238:
 34858 076e 7061636B 		.ascii	"packet_data\000"
 34858      65745F64 
 34858      61746100 
 34859              	.LASF120:
 34860 077a 73745F64 		.ascii	"st_device\000"
 34860      65766963 
 34860      6500
 34861              	.LASF406:
 34862 0784 7046696C 		.ascii	"pFile\000"
 34862      6500
 34863              	.LASF312:
 34864 078a 77726974 		.ascii	"writeStatus\000"
 34864      65537461 
 34864      74757300 
 34865              	.LASF176:
 34866 0796 4144435F 		.ascii	"ADC_conf\000"
 34866      636F6E66 
 34866      00
 34867              	.LASF302:
 34868 079f 636F6D6D 		.ascii	"commWrite\000"
 34868      57726974 
 34868      6500
 34869              	.LASF377:
 34870 07a9 64656163 		.ascii	"deactivate_slaves\000"
 34870      74697661 
 34870      74655F73 
 34870      6C617665 
 34870      7300
 34871              	.LASF313:
 34872 07bb 70616765 		.ascii	"pages\000"
 34872      7300
 34873              	.LASF317:
 34874 07c1 6D656D49 		.ascii	"memInit\000"
 34874      6E697400 
 34875              	.LASF199:
 34876 07c9 73745F72 		.ascii	"st_ref_vibrotactile\000"
 34876      65665F76 
 34876      6962726F 
 34876      74616374 
 34876      696C6500 
 34877              	.LASF134:
 34878 07dd 6B5F695F 		.ascii	"k_i_dl\000"
 34878      646C00
 34879              	.LASF38:
 34880 07e4 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 34880      5345545F 
 34880      494E5055 
 34880      545300
 34881              	.LASF105:
 34882 07f3 62756666 		.ascii	"buffer\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 744


 34882      657200
 34883              	.LASF136:
 34884 07fa 6B5F705F 		.ascii	"k_p_c_dl\000"
 34884      635F646C 
 34884      00
 34885              	.LASF322:
 34886 0803 636D645F 		.ascii	"cmd_get_measurements\000"
 34886      6765745F 
 34886      6D656173 
 34886      7572656D 
 34886      656E7473 
 34887              	.LASF220:
 34888 0818 73706565 		.ascii	"speed\000"
 34888      6400
 34889              	.LASF224:
 34890 081e 72785F63 		.ascii	"rx_cmd\000"
 34890      6D6400
 34891              	.LASF90:
 34892 0825 54595045 		.ascii	"TYPE_DOUBLE\000"
 34892      5F444F55 
 34892      424C4500 
 34893              	.LASF374:
 34894 0831 736C6176 		.ascii	"slave_motor_idx\000"
 34894      655F6D6F 
 34894      746F725F 
 34894      69647800 
 34895              	.LASF383:
 34896 0841 675F6D65 		.ascii	"g_meas\000"
 34896      617300
 34897              	.LASF327:
 34898 0848 6C617374 		.ascii	"last_aux_int16\000"
 34898      5F617578 
 34898      5F696E74 
 34898      313600
 34899              	.LASF79:
 34900 0857 41434B5F 		.ascii	"ACK_ERROR\000"
 34900      4552524F 
 34900      5200
 34901              	.LASF403:
 34902 0861 64617461 		.ascii	"data_encoder_raw\000"
 34902      5F656E63 
 34902      6F646572 
 34902      5F726177 
 34902      00
 34903              	.LASF62:
 34904 0872 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 34904      545F4D4F 
 34904      44455F45 
 34904      58544552 
 34904      4E414C00 
 34905              	.LASF253:
 34906 0886 696E6465 		.ascii	"index\000"
 34906      7800
 34907              	.LASF195:
 34908 088c 6D617869 		.ascii	"maximum_pressure_kPa\000"
 34908      6D756D5F 
 34908      70726573 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 745


 34908      73757265 
 34908      5F6B5061 
 34909              	.LASF185:
 34910 08a1 72657374 		.ascii	"rest_position_flag\000"
 34910      5F706F73 
 34910      6974696F 
 34910      6E5F666C 
 34910      616700
 34911              	.LASF187:
 34912 08b4 6A6F7973 		.ascii	"joystick_closure_speed\000"
 34912      7469636B 
 34912      5F636C6F 
 34912      73757265 
 34912      5F737065 
 34913              	.LASF357:
 34914 08cb 66696C65 		.ascii	"filename_length\000"
 34914      6E616D65 
 34914      5F6C656E 
 34914      67746800 
 34915              	.LASF137:
 34916 08db 6B5F695F 		.ascii	"k_i_c_dl\000"
 34916      635F646C 
 34916      00
 34917              	.LASF339:
 34918 08e4 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 34918      52656164 
 34918      52657343 
 34918      75727246 
 34918      726F6D53 
 34919              	.LASF332:
 34920 08fa 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 34920      6765745F 
 34920      63757272 
 34920      656E7473 
 34920      5F666F72 
 34921              	.LASF273:
 34922 0914 6D61675F 		.ascii	"mag_param_str\000"
 34922      70617261 
 34922      6D5F7374 
 34922      7200
 34923              	.LASF400:
 34924 0922 72657365 		.ascii	"reset_PSoC_flag\000"
 34924      745F5053 
 34924      6F435F66 
 34924      6C616700 
 34925              	.LASF373:
 34926 0932 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 34926      5F616374 
 34926      5F777269 
 34926      73745F63 
 34926      6F6E7472 
 34927              	.LASF91:
 34928 0949 54595045 		.ascii	"TYPE_STRING\000"
 34928      5F535452 
 34928      494E4700 
 34929              	.LASF74:
 34930 0955 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 746


 34930      5F414E44 
 34930      5F504F53 
 34930      5F434F4E 
 34930      54524F4C 
 34931              	.LASF28:
 34932 096a 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 34932      53544F52 
 34932      455F5041 
 34932      52414D53 
 34932      00
 34933              	.LASF235:
 34934 097b 50415241 		.ascii	"PARAMS_STR\000"
 34934      4D535F53 
 34934      545200
 34935              	.LASF218:
 34936 0986 656E6162 		.ascii	"enabled\000"
 34936      6C656400 
 34937              	.LASF7:
 34938 098e 6C6F6E67 		.ascii	"long unsigned int\000"
 34938      20756E73 
 34938      69676E65 
 34938      6420696E 
 34938      7400
 34939              	.LASF32:
 34940 09a0 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 34940      424F4F54 
 34940      4C4F4144 
 34940      455200
 34941              	.LASF189:
 34942 09af 6A6F7973 		.ascii	"joystick_gains\000"
 34942      7469636B 
 34942      5F676169 
 34942      6E7300
 34943              	.LASF98:
 34944 09be 686F6C64 		.ascii	"hold_curr\000"
 34944      5F637572 
 34944      7200
 34945              	.LASF68:
 34946 09c8 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 34946      545F4D4F 
 34946      44455F4A 
 34946      4F595354 
 34946      49434B00 
 34947              	.LASF115:
 34948 09dc 746F7461 		.ascii	"total_time_rest\000"
 34948      6C5F7469 
 34948      6D655F72 
 34948      65737400 
 34949              	.LASF334:
 34950 09ec 636D645F 		.ascii	"cmd_get_vibrotactile_inputs\000"
 34950      6765745F 
 34950      76696272 
 34950      6F746163 
 34950      74696C65 
 34951              	.LASF227:
 34952 0a08 7374725F 		.ascii	"str_sd_data\000"
 34952      73645F64 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 747


 34952      61746100 
 34953              	.LASF139:
 34954 0a14 61637469 		.ascii	"activ\000"
 34954      7600
 34955              	.LASF237:
 34956 0a1a 4D454E55 		.ascii	"MENU_STR\000"
 34956      5F535452 
 34956      00
 34957              	.LASF156:
 34958 0a23 6D5F6F66 		.ascii	"m_off\000"
 34958      6600
 34959              	.LASF80:
 34960 0a29 41434B5F 		.ascii	"ACK_OK\000"
 34960      4F4B00
 34961              	.LASF82:
 34962 0a30 54595045 		.ascii	"TYPE_FLAG\000"
 34962      5F464C41 
 34962      4700
 34963              	.LASF215:
 34964 0a3a 71756174 		.ascii	"quat_value\000"
 34964      5F76616C 
 34964      756500
 34965              	.LASF239:
 34966 0a45 7061636B 		.ascii	"packet_length\000"
 34966      65745F6C 
 34966      656E6774 
 34966      6800
 34967              	.LASF182:
 34968 0a53 72657374 		.ascii	"rest_pos\000"
 34968      5F706F73 
 34968      00
 34969              	.LASF93:
 34970 0a5c 63757272 		.ascii	"curr\000"
 34970      00
 34971              	.LASF149:
 34972 0a61 696E7075 		.ascii	"input_mode\000"
 34972      745F6D6F 
 34972      646500
 34973              	.LASF72:
 34974 0a6c 434F4E54 		.ascii	"CONTROL_PWM\000"
 34974      524F4C5F 
 34974      50574D00 
 34975              	.LASF43:
 34976 0a78 434D445F 		.ascii	"CMD_GET_EMG\000"
 34976      4745545F 
 34976      454D4700 
 34977              	.LASF318:
 34978 0a84 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 34978      6E69745F 
 34978      536F6674 
 34978      48616E64 
 34978      50726F00 
 34979              	.LASF31:
 34980 0a98 434D445F 		.ascii	"CMD_GET_INFO\000"
 34980      4745545F 
 34980      494E464F 
 34980      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 748


 34981              	.LASF266:
 34982 0aa5 6765745F 		.ascii	"get_IMU_param_list\000"
 34982      494D555F 
 34982      70617261 
 34982      6D5F6C69 
 34982      737400
 34983              	.LASF197:
 34984 0ab8 76696272 		.ascii	"vibrotactile_feedback_active\000"
 34984      6F746163 
 34984      74696C65 
 34984      5F666565 
 34984      64626163 
 34985              	.LASF351:
 34986 0ad5 73696E67 		.ascii	"single_packet\000"
 34986      6C655F70 
 34986      61636B65 
 34986      7400
 34987              	.LASF269:
 34988 0ae3 66697273 		.ascii	"first_imu_parameter\000"
 34988      745F696D 
 34988      755F7061 
 34988      72616D65 
 34988      74657200 
 34989              	.LASF42:
 34990 0af7 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 34990      4745545F 
 34990      43555252 
 34990      5F414E44 
 34990      5F4D4541 
 34991              	.LASF422:
 34992 0b0d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 34992      43313120 
 34992      352E342E 
 34992      31203230 
 34992      31363036 
 34993 0b40 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 34993      20726576 
 34993      6973696F 
 34993      6E203233 
 34993      37373135 
 34994 0b73 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 34994      66756E63 
 34994      74696F6E 
 34994      2D736563 
 34994      74696F6E 
 34995              	.LASF95:
 34996 0b9b 73745F72 		.ascii	"st_ref\000"
 34996      656600
 34997              	.LASF325:
 34998 0ba2 636D645F 		.ascii	"cmd_get_joystick\000"
 34998      6765745F 
 34998      6A6F7973 
 34998      7469636B 
 34998      00
 34999              	.LASF47:
 35000 0bb3 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 35000      5345545F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 749


 35000      43554646 
 35000      5F494E50 
 35000      55545300 
 35001              	.LASF181:
 35002 0bc7 73745F53 		.ascii	"st_SH_spec\000"
 35002      485F7370 
 35002      656300
 35003              	.LASF391:
 35004 0bd2 63616C69 		.ascii	"calib\000"
 35004      6200
 35005              	.LASF6:
 35006 0bd8 5F5F7569 		.ascii	"__uint32_t\000"
 35006      6E743332 
 35006      5F7400
 35007              	.LASF8:
 35008 0be3 6C6F6E67 		.ascii	"long long int\000"
 35008      206C6F6E 
 35008      6720696E 
 35008      7400
 35009              	.LASF70:
 35010 0bf1 53485F63 		.ascii	"SH_control_mode\000"
 35010      6F6E7472 
 35010      6F6C5F6D 
 35010      6F646500 
 35011              	.LASF360:
 35012 0c01 76696272 		.ascii	"vibrotactile_control\000"
 35012      6F746163 
 35012      74696C65 
 35012      5F636F6E 
 35012      74726F6C 
 35013              	.LASF84:
 35014 0c16 54595045 		.ascii	"TYPE_UINT8\000"
 35014      5F55494E 
 35014      543800
 35015              	.LASF331:
 35016 0c21 636D645F 		.ascii	"cmd_get_currents\000"
 35016      6765745F 
 35016      63757272 
 35016      656E7473 
 35016      00
 35017              	.LASF77:
 35018 0c32 4D41584F 		.ascii	"MAXON_12V\000"
 35018      4E5F3132 
 35018      5600
 35019              	.LASF399:
 35020 0c3c 6368616E 		.ascii	"change_ext_ref_flag\000"
 35020      67655F65 
 35020      78745F72 
 35020      65665F66 
 35020      6C616700 
 35021              	.LASF21:
 35022 0c50 646F7562 		.ascii	"double\000"
 35022      6C6500
 35023              	.LASF58:
 35024 0c57 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 35024      4745545F 
 35024      53445F53 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 750


 35024      494E474C 
 35024      455F4649 
 35025              	.LASF155:
 35026 0c6e 456E635F 		.ascii	"Enc_raw_read_conf\000"
 35026      7261775F 
 35026      72656164 
 35026      5F636F6E 
 35026      6600
 35027              	.LASF221:
 35028 0c80 72657065 		.ascii	"repetitions\000"
 35028      74697469 
 35028      6F6E7300 
 35029              	.LASF145:
 35030 0c8c 6D61785F 		.ascii	"max_step_neg\000"
 35030      73746570 
 35030      5F6E6567 
 35030      00
 35031              	.LASF418:
 35032 0c99 656D675F 		.ascii	"emg_history_next_idx\000"
 35032      68697374 
 35032      6F72795F 
 35032      6E657874 
 35032      5F696478 
 35033              	.LASF192:
 35034 0cae 736C6176 		.ascii	"slave_ID\000"
 35034      655F4944 
 35034      00
 35035              	.LASF397:
 35036 0cb7 72657365 		.ascii	"reset_last_value_flag\000"
 35036      745F6C61 
 35036      73745F76 
 35036      616C7565 
 35036      5F666C61 
 35037              	.LASF236:
 35038 0ccd 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 35038      4F4D5F50 
 35038      4152414D 
 35038      5F474554 
 35038      00
 35039              	.LASF20:
 35040 0cde 666C6F61 		.ascii	"float\000"
 35040      7400
 35041              	.LASF171:
 35042 0ce4 494D555F 		.ascii	"IMU_conf\000"
 35042      636F6E66 
 35042      00
 35043              	.LASF59:
 35044 0ced 434D445F 		.ascii	"CMD_REMOVE_SD_SINGLE_FILE\000"
 35044      52454D4F 
 35044      56455F53 
 35044      445F5349 
 35044      4E474C45 
 35045              	.LASF363:
 35046 0d07 6572725F 		.ascii	"err_pressure\000"
 35046      70726573 
 35046      73757265 
 35046      00
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 751


 35047              	.LASF254:
 35048 0d14 50415241 		.ascii	"PARAM_IDX\000"
 35048      4D5F4944 
 35048      5800
 35049              	.LASF99:
 35050 0d1e 73745F61 		.ascii	"st_adc_meas\000"
 35050      64635F6D 
 35050      65617300 
 35051              	.LASF250:
 35052 0d2a 6D5F6164 		.ascii	"m_addr\000"
 35052      647200
 35053              	.LASF390:
 35054 0d31 635F6D65 		.ascii	"c_mem\000"
 35054      6D00
 35055              	.LASF304:
 35056 0d37 64617461 		.ascii	"data_array\000"
 35056      5F617272 
 35056      617900
 35057              	.LASF10:
 35058 0d42 756E7369 		.ascii	"unsigned int\000"
 35058      676E6564 
 35058      20696E74 
 35058      00
 35059              	.LASF370:
 35060 0d4f 6572725F 		.ascii	"err_emg_2\000"
 35060      656D675F 
 35060      3200
 35061              	.LASF319:
 35062 0d59 6D656D49 		.ascii	"memInit_Master\000"
 35062      6E69745F 
 35062      4D617374 
 35062      657200
 35063              	.LASF307:
 35064 0d68 73656E64 		.ascii	"sendAcknowledgment\000"
 35064      41636B6E 
 35064      6F776C65 
 35064      64676D65 
 35064      6E7400
 35065              	.LASF292:
 35066 0d7b 70726570 		.ascii	"prepare_SD_legend\000"
 35066      6172655F 
 35066      53445F6C 
 35066      6567656E 
 35066      6400
 35067              	.LASF415:
 35068 0d8d 4D616743 		.ascii	"MagCal\000"
 35068      616C00
 35069              	.LASF60:
 35070 0d94 53485F63 		.ascii	"SH_command\000"
 35070      6F6D6D61 
 35070      6E6400
 35071              	.LASF86:
 35072 0d9f 54595045 		.ascii	"TYPE_UINT16\000"
 35072      5F55494E 
 35072      54313600 
 35073              	.LASF205:
 35074 0dab 666C6167 		.ascii	"flag\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 752


 35074      00
 35075              	.LASF366:
 35076 0db0 785F7661 		.ascii	"x_value\000"
 35076      6C756500 
 35077              	.LASF326:
 35078 0db8 636D645F 		.ascii	"cmd_set_inputs\000"
 35078      7365745F 
 35078      696E7075 
 35078      747300
 35079              	.LASF150:
 35080 0dc7 636F6E74 		.ascii	"control_mode\000"
 35080      726F6C5F 
 35080      6D6F6465 
 35080      00
 35081              	.LASF345:
 35082 0dd4 6F66665F 		.ascii	"off_1\000"
 35082      3100
 35083              	.LASF63:
 35084 0dda 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 35084      545F4D4F 
 35084      44455F45 
 35084      4E434F44 
 35084      45523300 
 35085              	.LASF303:
 35086 0dee 636F6D6D 		.ascii	"commWriteID\000"
 35086      57726974 
 35086      65494400 
 35087              	.LASF54:
 35088 0dfa 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 35088      4745545F 
 35088      454E434F 
 35088      4445525F 
 35088      434F4E46 
 35089              	.LASF168:
 35090 0e0f 73745F69 		.ascii	"st_imu\000"
 35090      6D7500
 35091              	.LASF329:
 35092 0e16 636D645F 		.ascii	"cmd_get_activate\000"
 35092      6765745F 
 35092      61637469 
 35092      76617465 
 35092      00
 35093              	.LASF367:
 35094 0e27 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 35094      61637469 
 35094      76617469 
 35094      6F6E5F76 
 35094      656C6F63 
 35095              	.LASF89:
 35096 0e43 54595045 		.ascii	"TYPE_FLOAT\000"
 35096      5F464C4F 
 35096      415400
 35097              	.LASF259:
 35098 0e4e 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 35098      4F4D5F50 
 35098      4152414D 
 35098      5F534554 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 753


 35098      5F4C4953 
 35099              	.LASF233:
 35100 0e64 4E554D5F 		.ascii	"NUM_STRUCT\000"
 35100      53545255 
 35100      435400
 35101              	.LASF413:
 35102 0e6f 73696E67 		.ascii	"single_imu_size\000"
 35102      6C655F69 
 35102      6D755F73 
 35102      697A6500 
 35103              	.LASF264:
 35104 0e7f 6175785F 		.ascii	"aux_uchar\000"
 35104      75636861 
 35104      7200
 35105              	.LASF290:
 35106 0e89 70726570 		.ascii	"prepare_R01_info\000"
 35106      6172655F 
 35106      5230315F 
 35106      696E666F 
 35106      00
 35107              	.LASF100:
 35108 0e9a 6164645F 		.ascii	"add_emg\000"
 35108      656D6700 
 35109              	.LASF85:
 35110 0ea2 54595045 		.ascii	"TYPE_INT16\000"
 35110      5F494E54 
 35110      313600
 35111              	.LASF245:
 35112 0ead 6175785F 		.ascii	"aux_uint16\000"
 35112      75696E74 
 35112      313600
 35113              	.LASF163:
 35114 0eb8 656D675F 		.ascii	"emg_threshold\000"
 35114      74687265 
 35114      73686F6C 
 35114      6400
 35115              	.LASF46:
 35116 0ec6 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 35116      4745545F 
 35116      43555252 
 35116      5F444946 
 35116      4600
 35117              	.LASF333:
 35118 0ed8 6D656D49 		.ascii	"memInit_AirChambers_Vibrotactile_Fb\000"
 35118      6E69745F 
 35118      41697243 
 35118      68616D62 
 35118      6572735F 
 35119              	.LASF160:
 35120 0efc 6D6F746F 		.ascii	"motor_handle_ratio\000"
 35120      725F6861 
 35120      6E646C65 
 35120      5F726174 
 35120      696F00
 35121              	.LASF111:
 35122 0f0f 63757272 		.ascii	"current_hist\000"
 35122      656E745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 754


 35122      68697374 
 35122      00
 35123              	.LASF73:
 35124 0f1c 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 35124      524F4C5F 
 35124      43555252 
 35124      454E5400 
 35125              	.LASF24:
 35126 0f2c 6C6F6E67 		.ascii	"long double\000"
 35126      20646F75 
 35126      626C6500 
 35127              	.LASF88:
 35128 0f38 54595045 		.ascii	"TYPE_UINT32\000"
 35128      5F55494E 
 35128      54333200 
 35129              	.LASF193:
 35130 0f44 73745F46 		.ascii	"st_FB_spec\000"
 35130      425F7370 
 35130      656300
 35131              	.LASF230:
 35132 0f4f 5641525F 		.ascii	"VAR_P\000"
 35132      5000
 35133              	.LASF258:
 35134 0f55 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 35134      4F4D5F50 
 35134      4152414D 
 35134      5F474554 
 35134      5F4C4953 
 35135              	.LASF118:
 35136 0f6b 6D6F7469 		.ascii	"motion_counter\000"
 35136      6F6E5F63 
 35136      6F756E74 
 35136      657200
 35137              	.LASF306:
 35138 0f7a 63686563 		.ascii	"checksum\000"
 35138      6B73756D 
 35138      00
 35139              	.LASF382:
 35140 0f83 675F7265 		.ascii	"g_refOld\000"
 35140      664F6C64 
 35140      00
 35141              	.LASF35:
 35142 0f8c 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 35142      48414E44 
 35142      5F43414C 
 35142      49425241 
 35142      544500
 35143              	.LASF213:
 35144 0f9f 6779726F 		.ascii	"gyro_value\000"
 35144      5F76616C 
 35144      756500
 35145              	.LASF173:
 35146 0faa 63757272 		.ascii	"curr_time\000"
 35146      5F74696D 
 35146      6500
 35147              	.LASF158:
 35148 0fb4 646F7562 		.ascii	"double_encoder_on_off\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 755


 35148      6C655F65 
 35148      6E636F64 
 35148      65725F6F 
 35148      6E5F6F66 
 35149              	.LASF375:
 35150 0fca 64726976 		.ascii	"drive_slave\000"
 35150      655F736C 
 35150      61766500 
 35151              	.LASF170:
 35152 0fd6 5350495F 		.ascii	"SPI_read_delay\000"
 35152      72656164 
 35152      5F64656C 
 35152      617900
 35153              	.LASF78:
 35154 0fe5 61636B6E 		.ascii	"acknowledgment_values\000"
 35154      6F776C65 
 35154      64676D65 
 35154      6E745F76 
 35154      616C7565 
 35155              	.LASF248:
 35156 0ffb 4D4F544F 		.ascii	"MOTOR_IDX\000"
 35156      525F4944 
 35156      5800
 35157              	.LASF316:
 35158 1005 6D656D52 		.ascii	"memRestore\000"
 35158      6573746F 
 35158      726500
 35159              	.LASF271:
 35160 1010 6E5F696D 		.ascii	"n_imu_str\000"
 35160      755F7374 
 35160      7200
 35161              	.LASF285:
 35162 101a 696E666F 		.ascii	"info_string\000"
 35162      5F737472 
 35162      696E6700 
 35163              	.LASF293:
 35164 1026 70726570 		.ascii	"prepare_SD_info\000"
 35164      6172655F 
 35164      53445F69 
 35164      6E666F00 
 35165              	.LASF368:
 35166 1036 66736D5F 		.ascii	"fsm_state\000"
 35166      73746174 
 35166      6500
 35167              	.LASF9:
 35168 1040 6C6F6E67 		.ascii	"long long unsigned int\000"
 35168      206C6F6E 
 35168      6720756E 
 35168      7369676E 
 35168      65642069 
 35169              	.LASF87:
 35170 1057 54595045 		.ascii	"TYPE_INT32\000"
 35170      5F494E54 
 35170      333200
 35171              	.LASF247:
 35172 1062 6175785F 		.ascii	"aux_uint32\000"
 35172      75696E74 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 756


 35172      333200
 35173              	.LASF106:
 35174 106d 6C656E67 		.ascii	"length\000"
 35174      746800
 35175              	.LASF260:
 35176 1074 55534552 		.ascii	"USER_ID_PARAM\000"
 35176      5F49445F 
 35176      50415241 
 35176      4D00
 35177              	.LASF210:
 35178 1082 73745F69 		.ascii	"st_imu_data\000"
 35178      6D755F64 
 35178      61746100 
 35179              	.LASF214:
 35180 108e 6D61675F 		.ascii	"mag_value\000"
 35180      76616C75 
 35180      6500
 35181              	.LASF94:
 35182 1098 6F6E6F66 		.ascii	"onoff\000"
 35182      6600
 35183              	.LASF45:
 35184 109e 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 35184      4745545F 
 35184      41434345 
 35184      4C00
 35185              	.LASF323:
 35186 10ac 636D645F 		.ascii	"cmd_get_velocities\000"
 35186      6765745F 
 35186      76656C6F 
 35186      63697469 
 35186      657300
 35187              	.LASF315:
 35188 10bf 6D656D52 		.ascii	"memRecall\000"
 35188      6563616C 
 35188      6C00
 35189              	.LASF393:
 35190 10c9 74696D65 		.ascii	"timer_value0\000"
 35190      725F7661 
 35190      6C756530 
 35190      00
 35191              	.LASF50:
 35192 10d6 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 35192      5345545F 
 35192      42415544 
 35192      52415445 
 35192      00
 35193              	.LASF130:
 35194 10e7 6B5F705F 		.ascii	"k_p_c\000"
 35194      6300
 35195              	.LASF275:
 35196 10ed 696D755F 		.ascii	"imu_table_str\000"
 35196      7461626C 
 35196      655F7374 
 35196      7200
 35197              	.LASF394:
 35198 10fb 6465765F 		.ascii	"dev_tension\000"
 35198      74656E73 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 757


 35198      696F6E00 
 35199              	.LASF141:
 35200 1107 6D6F746F 		.ascii	"motor_driver_type\000"
 35200      725F6472 
 35200      69766572 
 35200      5F747970 
 35200      6500
 35201              	.LASF346:
 35202 1119 6D756C74 		.ascii	"mult_1\000"
 35202      5F3100
 35203              	.LASF23:
 35204 1120 72656738 		.ascii	"reg8\000"
 35204      00
 35205              	.LASF196:
 35206 1125 70726F70 		.ascii	"prop_err_fb_gain\000"
 35206      5F657272 
 35206      5F66625F 
 35206      6761696E 
 35206      00
 35207              	.LASF300:
 35208 1136 636F6D6D 		.ascii	"commWrite_old_id\000"
 35208      57726974 
 35208      655F6F6C 
 35208      645F6964 
 35208      00
 35209              	.LASF252:
 35210 1147 6D616E61 		.ascii	"manage_param_list\000"
 35210      67655F70 
 35210      6172616D 
 35210      5F6C6973 
 35210      7400
 35211              	.LASF30:
 35212 1159 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 35212      52455354 
 35212      4F52455F 
 35212      50415241 
 35212      4D5300
 35213              	.LASF407:
 35214 116c 73644669 		.ascii	"sdFile\000"
 35214      6C6500
 35215              	.LASF291:
 35216 1173 70726570 		.ascii	"prepare_SD_param_info\000"
 35216      6172655F 
 35216      53445F70 
 35216      6172616D 
 35216      5F696E66 
 35217              	.LASF340:
 35218 1189 63757272 		.ascii	"curr_diff\000"
 35218      5F646966 
 35218      6600
 35219              	.LASF287:
 35220 1193 70726570 		.ascii	"prepare_counter_info\000"
 35220      6172655F 
 35220      636F756E 
 35220      7465725F 
 35220      696E666F 
 35221              	.LASF294:
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 758


 35222 11a8 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 35222      6172655F 
 35222      53445F45 
 35222      4D475F48 
 35222      6973746F 
 35223              	.LASF301:
 35224 11c6 6F6C645F 		.ascii	"old_id\000"
 35224      696400
 35225              	.LASF425:
 35226 11cd 5F5F5245 		.ascii	"__REV16\000"
 35226      56313600 
 35227              	.LASF404:
 35228 11d5 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 35228      636F6465 
 35228      725F4C69 
 35228      6E655F43 
 35228      6F6E6E65 
 35229              	.LASF128:
 35230 11ee 6465765F 		.ascii	"dev_type\000"
 35230      74797065 
 35230      00
 35231              	.LASF178:
 35232 11f7 73745F75 		.ascii	"st_user\000"
 35232      73657200 
 35233              	.LASF330:
 35234 11ff 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 35234      6765745F 
 35234      63757272 
 35234      5F616E64 
 35234      5F6D6561 
 35235              	.LASF161:
 35236 1215 67656172 		.ascii	"gears_params\000"
 35236      735F7061 
 35236      72616D73 
 35236      00
 35237              	.LASF172:
 35238 1222 73745F65 		.ascii	"st_expansion\000"
 35238      7870616E 
 35238      73696F6E 
 35238      00
 35239              	.LASF166:
 35240 122f 656D675F 		.ascii	"emg_calibration_flag\000"
 35240      63616C69 
 35240      62726174 
 35240      696F6E5F 
 35240      666C6167 
 35241              	.LASF96:
 35242 1244 73745F6D 		.ascii	"st_meas\000"
 35242      65617300 
 35243              	.LASF57:
 35244 124c 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 35244      4745545F 
 35244      4144435F 
 35244      52415700 
 35245              	.LASF188:
 35246 125c 6A6F7973 		.ascii	"joystick_threshold\000"
 35246      7469636B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 759


 35246      5F746872 
 35246      6573686F 
 35246      6C6400
 35247              	.LASF76:
 35248 126f 4D41584F 		.ascii	"MAXON_24V\000"
 35248      4E5F3234 
 35248      5600
 35249              	.LASF69:
 35250 1279 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 35250      545F4D4F 
 35250      44455F45 
 35250      4D475F50 
 35250      524F504F 
 35251              	.LASF53:
 35252 1298 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 35252      4745545F 
 35252      494D555F 
 35252      50415241 
 35252      4D00
 35253              	.LASF387:
 35254 12aa 675F6662 		.ascii	"g_fb_meas\000"
 35254      5F6D6561 
 35254      7300
 35255              	.LASF55:
 35256 12b4 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 35256      4745545F 
 35256      454E434F 
 35256      4445525F 
 35256      52415700 
 35257              	.LASF344:
 35258 12c8 636D645F 		.ascii	"cmd_store_params\000"
 35258      73746F72 
 35258      655F7061 
 35258      72616D73 
 35258      00
 35259              	.LASF389:
 35260 12d9 675F6D65 		.ascii	"g_mem\000"
 35260      6D00
 35261              	.LASF40:
 35262 12df 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 35262      4745545F 
 35262      4D454153 
 35262      5552454D 
 35262      454E5453 
 35263              	.LASF198:
 35264 12f4 61697263 		.ascii	"airchamber_feedback_active\000"
 35264      68616D62 
 35264      65725F66 
 35264      65656462 
 35264      61636B5F 
 35265              	.LASF386:
 35266 130f 675F6164 		.ascii	"g_adc_measOld\000"
 35266      635F6D65 
 35266      61734F6C 
 35266      6400
 35267              	.LASF353:
 35268 131d 636D645F 		.ascii	"cmd_get_encoder_raw\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 760


 35268      6765745F 
 35268      656E636F 
 35268      6465725F 
 35268      72617700 
 35269              	.LASF13:
 35270 1331 75696E74 		.ascii	"uint8\000"
 35270      3800
 35271              	.LASF222:
 35272 1337 636F6D6D 		.ascii	"commProcess\000"
 35272      50726F63 
 35272      65737300 
 35273              	.LASF186:
 35274 1343 73745F4A 		.ascii	"st_JOY_spec\000"
 35274      4F595F73 
 35274      70656300 
 35275              	.LASF2:
 35276 134f 73686F72 		.ascii	"short int\000"
 35276      7420696E 
 35276      7400
 35277              	.LASF279:
 35278 1359 6964735F 		.ascii	"ids_str_len\000"
 35278      7374725F 
 35278      6C656E00 
 35279              	.LASF135:
 35280 1365 6B5F645F 		.ascii	"k_d_dl\000"
 35280      646C00
 35281              	.LASF240:
 35282 136c 6964785F 		.ascii	"idx_menu\000"
 35282      6D656E75 
 35282      00
 35283              	.LASF101:
 35284 1375 6A6F7973 		.ascii	"joystick\000"
 35284      7469636B 
 35284      00
 35285              	.LASF207:
 35286 137e 6D6F746F 		.ascii	"motor\000"
 35286      7200
 35287              	.LASF410:
 35288 1384 4E5F494D 		.ascii	"N_IMU_Connected\000"
 35288      555F436F 
 35288      6E6E6563 
 35288      74656400 
 35289              	.LASF39:
 35290 1394 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 35290      4745545F 
 35290      494E5055 
 35290      545300
 35291              	.LASF121:
 35292 13a3 68775F6D 		.ascii	"hw_maint_date\000"
 35292      61696E74 
 35292      5F646174 
 35292      6500
 35293              	.LASF272:
 35294 13b1 6964735F 		.ascii	"ids_str\000"
 35294      73747200 
 35295              	.LASF56:
 35296 13b9 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 761


 35296      4745545F 
 35296      4144435F 
 35296      434F4E46 
 35296      00
 35297              	.LASF27:
 35298 13ca 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 35298      5345545F 
 35298      5A45524F 
 35298      5300
 35299              	.LASF280:
 35300 13d8 6D61675F 		.ascii	"mag_param_str_len\000"
 35300      70617261 
 35300      6D5F7374 
 35300      725F6C65 
 35300      6E00
 35301              	.LASF267:
 35302 13ea 6E756D5F 		.ascii	"num_imus_id_params\000"
 35302      696D7573 
 35302      5F69645F 
 35302      70617261 
 35302      6D7300
 35303              	.LASF244:
 35304 13fd 6175785F 		.ascii	"aux_int16\000"
 35304      696E7431 
 35304      3600
 35305              	.LASF417:
 35306 1407 656D675F 		.ascii	"emg_history\000"
 35306      68697374 
 35306      6F727900 
 35307              	.LASF421:
 35308 1413 45455052 		.ascii	"EEPROM_ADDR\000"
 35308      4F4D5F41 
 35308      44445200 
 35309              	.LASF122:
 35310 141f 73746174 		.ascii	"stats_period_begin_date\000"
 35310      735F7065 
 35310      72696F64 
 35310      5F626567 
 35310      696E5F64 
 35311              	.LASF412:
 35312 1437 696D7573 		.ascii	"imus_data_size\000"
 35312      5F646174 
 35312      615F7369 
 35312      7A6500
 35313              	.LASF378:
 35314 1446 49544D5F 		.ascii	"ITM_RxBuffer\000"
 35314      52784275 
 35314      66666572 
 35314      00
 35315              	.LASF44:
 35316 1453 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 35316      4745545F 
 35316      56454C4F 
 35316      43495449 
 35316      455300
 35317              	.LASF396:
 35318 1466 706F775F 		.ascii	"pow_tension\000"
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 762


 35318      74656E73 
 35318      696F6E00 
 35319              	.LASF34:
 35320 1472 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 35320      4745545F 
 35320      50415241 
 35320      4D5F4C49 
 35320      535400
 35321              	.LASF81:
 35322 1485 64617461 		.ascii	"data_types\000"
 35322      5F747970 
 35322      657300
 35323              	.LASF17:
 35324 1490 696E7431 		.ascii	"int16\000"
 35324      3600
 35325              	.LASF174:
 35326 1496 72656164 		.ascii	"read_exp_port_flag\000"
 35326      5F657870 
 35326      5F706F72 
 35326      745F666C 
 35326      616700
 35327              	.LASF167:
 35328 14a9 73776974 		.ascii	"switch_emg\000"
 35328      63685F65 
 35328      6D6700
 35329              	.LASF140:
 35330 14b4 61637469 		.ascii	"activate_pwm_rescaling\000"
 35330      76617465 
 35330      5F70776D 
 35330      5F726573 
 35330      63616C69 
 35331              	.LASF133:
 35332 14cb 6B5F705F 		.ascii	"k_p_dl\000"
 35332      646C00
 35333              	.LASF97:
 35334 14d2 65737469 		.ascii	"estim_curr\000"
 35334      6D5F6375 
 35334      727200
 35335              	.LASF395:
 35336 14dd 6465765F 		.ascii	"dev_pwm_limit\000"
 35336      70776D5F 
 35336      6C696D69 
 35336      7400
 35337              	.LASF175:
 35338 14eb 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 35338      5F414443 
 35338      5F73656E 
 35338      736F7273 
 35338      5F706F72 
 35339              	.LASF405:
 35340 1506 456E636F 		.ascii	"Encoder_Value\000"
 35340      6465725F 
 35340      56616C75 
 35340      6500
 35341              	.LASF352:
 35342 1514 636D645F 		.ascii	"cmd_get_encoder_map\000"
 35342      6765745F 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 763


 35342      656E636F 
 35342      6465725F 
 35342      6D617000 
 35343              	.LASF127:
 35344 1528 75736572 		.ascii	"user_id\000"
 35344      5F696400 
 35345              	.LASF12:
 35346 1530 75696E74 		.ascii	"uint32_t\000"
 35346      33325F74 
 35346      00
 35347              	.LASF243:
 35348 1539 6175785F 		.ascii	"aux_float\000"
 35348      666C6F61 
 35348      7400
 35349              	.LASF411:
 35350 1543 494D555F 		.ascii	"IMU_connected\000"
 35350      636F6E6E 
 35350      65637465 
 35350      6400
 35351              	.LASF234:
 35352 1551 4E554D5F 		.ascii	"NUM_MENU\000"
 35352      4D454E55 
 35352      00
 35353              	.LASF246:
 35354 155a 6175785F 		.ascii	"aux_int32\000"
 35354      696E7433 
 35354      3200
 35355              	.LASF126:
 35356 1564 62617564 		.ascii	"baud_rate\000"
 35356      5F726174 
 35356      6500
 35357              	.LASF337:
 35358 156e 745F656E 		.ascii	"t_end\000"
 35358      6400
 35359              	.LASF202:
 35360 1574 66617374 		.ascii	"fast_act_threshold\000"
 35360      5F616374 
 35360      5F746872 
 35360      6573686F 
 35360      6C6400
 35361              	.LASF229:
 35362 1587 696E666F 		.ascii	"info_type\000"
 35362      5F747970 
 35362      6500
 35363              	.LASF52:
 35364 1591 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 35364      4745545F 
 35364      494D555F 
 35364      52454144 
 35364      494E4753 
 35365              	.LASF409:
 35366 15a6 73645230 		.ascii	"sdR01File\000"
 35366      3146696C 
 35366      6500
 35367              	.LASF309:
 35368 15b0 4C435243 		.ascii	"LCRChecksum\000"
 35368      6865636B 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 764


 35368      73756D00 
 35369              	.LASF349:
 35370 15bc 6B5F696D 		.ascii	"k_imu\000"
 35370      7500
 35371              	.LASF3:
 35372 15c2 73686F72 		.ascii	"short unsigned int\000"
 35372      7420756E 
 35372      7369676E 
 35372      65642069 
 35372      6E7400
 35373              	.LASF154:
 35374 15d5 73745F65 		.ascii	"st_encoder\000"
 35374      6E636F64 
 35374      657200
 35375              	.LASF385:
 35376 15e0 675F6164 		.ascii	"g_adc_meas\000"
 35376      635F6D65 
 35376      617300
 35377              	.LASF194:
 35378 15eb 6D61785F 		.ascii	"max_residual_current\000"
 35378      72657369 
 35378      6475616C 
 35378      5F637572 
 35378      72656E74 
 35379              	.LASF286:
 35380 1600 454E435F 		.ascii	"ENC_L\000"
 35380      4C00
 35381              	.LASF204:
 35382 1606 73745F65 		.ascii	"st_eeprom\000"
 35382      6570726F 
 35382      6D00
 35383              	.LASF231:
 35384 1610 54595045 		.ascii	"TYPES\000"
 35384      5300
 35385              	.LASF380:
 35386 1616 675F7265 		.ascii	"g_ref\000"
 35386      6600
 35387              	.LASF18:
 35388 161c 696E7433 		.ascii	"int32\000"
 35388      3200
 35389              	.LASF402:
 35390 1622 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 35390      4F465F41 
 35390      4E414C4F 
 35390      475F494E 
 35390      50555453 
 35391              	.LASF226:
 35392 1637 696E666F 		.ascii	"infoGet\000"
 35392      47657400 
 35393              	.LASF129:
 35394 163f 73745F6D 		.ascii	"st_motor\000"
 35394      6F746F72 
 35394      00
 35395              	.LASF416:
 35396 1648 6D617374 		.ascii	"master_mode\000"
 35396      65725F6D 
 35396      6F646500 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 765


 35397              	.LASF92:
 35398 1654 46535F46 		.ascii	"FS_FILE\000"
 35398      494C4500 
 35399              	.LASF142:
 35400 165c 706F735F 		.ascii	"pos_lim_flag\000"
 35400      6C696D5F 
 35400      666C6167 
 35400      00
 35401              	.LASF384:
 35402 1669 675F6D65 		.ascii	"g_measOld\000"
 35402      61734F6C 
 35402      6400
 35403              	.LASF71:
 35404 1673 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 35404      524F4C5F 
 35404      414E474C 
 35404      4500
 35405              	.LASF328:
 35406 1681 636D645F 		.ascii	"cmd_activate\000"
 35406      61637469 
 35406      76617465 
 35406      00
 35407              	.LASF5:
 35408 168e 5F5F696E 		.ascii	"__int32_t\000"
 35408      7433325F 
 35408      7400
 35409              	.LASF256:
 35410 1698 7370695F 		.ascii	"spi_delay_menu\000"
 35410      64656C61 
 35410      795F6D65 
 35410      6E7500
 35411              	.LASF113:
 35412 16a7 77697265 		.ascii	"wire_disp\000"
 35412      5F646973 
 35412      7000
 35413              	.LASF164:
 35414 16b1 656D675F 		.ascii	"emg_max_value\000"
 35414      6D61785F 
 35414      76616C75 
 35414      6500
 35415              	.LASF261:
 35416 16bf 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 35416      4F4D5F50 
 35416      4152414D 
 35416      5F534554 
 35416      00
 35417              	.LASF335:
 35418 16d0 636F6D6D 		.ascii	"commReadIMUFromSH\000"
 35418      52656164 
 35418      494D5546 
 35418      726F6D53 
 35418      4800
 35419              	.LASF423:
 35420 16e2 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 35420      72635C63 
 35420      6F6D6D61 
 35420      6E645F70 
ARM GAS  C:\Users\mgnocco\AppData\Local\Temp\ccZ9ZMJ9.s 			page 766


 35420      726F6365 
 35421              	.LASF148:
 35422 16fe 63757272 		.ascii	"current_limit\000"
 35422      656E745F 
 35422      6C696D69 
 35422      7400
 35423              	.LASF61:
 35424 170c 53485F69 		.ascii	"SH_input_mode\000"
 35424      6E707574 
 35424      5F6D6F64 
 35424      6500
 35425              	.LASF83:
 35426 171a 54595045 		.ascii	"TYPE_INT8\000"
 35426      5F494E54 
 35426      3800
 35427              	.LASF201:
 35428 1724 61637469 		.ascii	"activation_mode\000"
 35428      76617469 
 35428      6F6E5F6D 
 35428      6F646500 
 35429              	.LASF299:
 35430 1734 494D555F 		.ascii	"IMU_reading_info\000"
 35430      72656164 
 35430      696E675F 
 35430      696E666F 
 35430      00
 35431              	.LASF14:
 35432 1745 75696E74 		.ascii	"uint16\000"
 35432      313600
 35433              	.LASF183:
 35434 174c 72657374 		.ascii	"rest_delay\000"
 35434      5F64656C 
 35434      617900
 35435              	.LASF242:
 35436 1757 6175785F 		.ascii	"aux_str\000"
 35436      73747200 
 35437              	.LASF26:
 35438 175f 434D445F 		.ascii	"CMD_PING\000"
 35438      50494E47 
 35438      00
 35439              	.LASF138:
 35440 1768 6B5F645F 		.ascii	"k_d_c_dl\000"
 35440      635F646C 
 35440      00
 35441              	.LASF219:
 35442 1771 64697265 		.ascii	"direction\000"
 35442      6374696F 
 35442      6E00
 35443              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
